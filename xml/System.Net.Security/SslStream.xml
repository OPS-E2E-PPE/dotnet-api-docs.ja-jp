<Type Name="SslStream" FullName="System.Net.Security.SslStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f891dd805054ae98c998d65cfd4083e65b60bab" /><Meta Name="ms.sourcegitcommit" Value="385ff23cc00fe9aa1c93460c62603b45c2041d0b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/22/2019" /><Meta Name="ms.locfileid" Value="74387065" /></Metadata><TypeSignature Language="C#" Value="public class SslStream : System.Net.Security.AuthenticatedStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SslStream extends System.Net.Security.AuthenticatedStream implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.SslStream" />
  <TypeSignature Language="VB.NET" Value="Public Class SslStream&#xA;Inherits AuthenticatedStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class SslStream : System::Net::Security::AuthenticatedStream" />
  <TypeSignature Language="F#" Value="type SslStream = class&#xA;    inherit AuthenticatedStream&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Security.AuthenticatedStream</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0a064-101">Secure Socket Layer (SSL) セキュリティ プロトコルを使用し、サーバーと、オプションでクライアントを認証するクライアント サーバー通信に使用されるストリームを提供します。</span><span class="sxs-lookup"><span data-stu-id="0a064-101">Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-102">SSL プロトコルは、<xref:System.Net.Security.SslStream>を使用して送信されるメッセージの機密性と整合性のチェックを提供するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a064-102">SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="0a064-103">クライアントとサーバー間で機密情報を通信する場合は、<xref:System.Net.Security.SslStream>によって提供されるような SSL 接続を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-103">An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server.</span></span> <span data-ttu-id="0a064-104"><xref:System.Net.Security.SslStream> を使用すると、ネットワーク上での転送中に情報が読み取られたり、改ざんされたりするのを防ぐことができます。</span><span class="sxs-lookup"><span data-stu-id="0a064-104">Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network.</span></span>  
  
 <span data-ttu-id="0a064-105"><xref:System.Net.Security.SslStream> インスタンスは、<xref:System.Net.Security.SslStream>の作成時に指定したストリームを使用してデータを転送します。</span><span class="sxs-lookup"><span data-stu-id="0a064-105">An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="0a064-106">この基になるストリームを指定する場合は、<xref:System.Net.Security.SslStream> を閉じるか、基になるストリームも閉じるかどうかを指定するオプションがあります。</span><span class="sxs-lookup"><span data-stu-id="0a064-106">When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream.</span></span> <span data-ttu-id="0a064-107">通常、<xref:System.Net.Security.SslStream> クラスは、<xref:System.Net.Sockets.TcpClient> クラスおよび <xref:System.Net.Sockets.TcpListener> クラスと共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-107">Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes.</span></span> <span data-ttu-id="0a064-108"><xref:System.Net.Sockets.TcpClient.GetStream%2A> メソッドは、<xref:System.Net.Security.SslStream> クラスでの使用に適した <xref:System.Net.Sockets.NetworkStream> を提供します。</span><span class="sxs-lookup"><span data-stu-id="0a064-108">The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 <span data-ttu-id="0a064-109">サーバーを作成し、必要に応じてクライアントを認証する必要がある場合は、<xref:System.Net.Security.SslStream>を作成します。</span><span class="sxs-lookup"><span data-stu-id="0a064-109">After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated.</span></span> <span data-ttu-id="0a064-110">サーバーは、その id の証明を確立する X509 証明書を提供する必要があります。また、クライアントにも要求することができます。</span><span class="sxs-lookup"><span data-stu-id="0a064-110">The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so.</span></span> <span data-ttu-id="0a064-111"><xref:System.Net.Security.SslStream>を使用して情報を送信する前に、認証を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-111">Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="0a064-112">クライアントは、認証が完了するまでブロックする、同期 <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> メソッドを使用して認証を開始します。または、認証の完了を待機していない非同期の <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> メソッドを使用して認証を開始します。</span><span class="sxs-lookup"><span data-stu-id="0a064-112">Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete.</span></span> <span data-ttu-id="0a064-113">サーバーは、同期 <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> または非同期の <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> メソッドを使用して認証を開始します。</span><span class="sxs-lookup"><span data-stu-id="0a064-113">Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span> <span data-ttu-id="0a064-114">クライアントとサーバーの両方で認証を開始する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-114">Both client and server must initiate the authentication.</span></span>  
  
 <span data-ttu-id="0a064-115">認証は、セキュリティサポートプロバイダ (SSPI) チャネルプロバイダによって処理されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-115">The authentication is handled by the Security Support Provider (SSPI) channel provider.</span></span> <span data-ttu-id="0a064-116">クライアントには、<xref:System.Net.Security.SslStream>を作成するときに <xref:System.Net.Security.RemoteCertificateValidationCallback> デリゲートを指定することによって、サーバーの証明書の検証を制御する機会が与えられます。</span><span class="sxs-lookup"><span data-stu-id="0a064-116">The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="0a064-117">サーバーは、<xref:System.Net.Security.RemoteCertificateValidationCallback> デリゲートを指定することによって検証を制御することもできます。</span><span class="sxs-lookup"><span data-stu-id="0a064-117">The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate.</span></span> <span data-ttu-id="0a064-118">デリゲートによって参照されるメソッドには、リモートパーティの証明書と、証明書の検証中に SSPI が検出したエラーが含まれます。</span><span class="sxs-lookup"><span data-stu-id="0a064-118">The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate.</span></span> <span data-ttu-id="0a064-119">サーバーがデリゲートを指定すると、サーバーがクライアント認証を要求したかどうかに関係なく、デリゲートのメソッドが呼び出されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-119">Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication.</span></span> <span data-ttu-id="0a064-120">サーバーがクライアント認証を要求しなかった場合、サーバーのデリゲートメソッドは、null 証明書と空の証明書エラーの配列を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="0a064-120">If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.</span></span>  
  
 <span data-ttu-id="0a064-121">サーバーがクライアント認証を必要とする場合、クライアントは認証に1つまたは複数の証明書を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-121">If the server requires client authentication, the client must specify one or more certificates for authentication.</span></span> <span data-ttu-id="0a064-122">クライアントに複数の証明書がある場合、クライアントは、サーバーに適切な証明書を選択するための <xref:System.Net.Security.LocalCertificateSelectionCallback> の委任を提供できます。</span><span class="sxs-lookup"><span data-stu-id="0a064-122">If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server.</span></span> <span data-ttu-id="0a064-123">クライアントの証明書は、現在のユーザーの "My" 証明書ストアに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-123">The client's certificates must be located in the current user's "My" certificate store.</span></span> <span data-ttu-id="0a064-124">証明書によるクライアント認証は、<xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL バージョン 2) プロトコルではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-124">Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol.</span></span>  
  
 <span data-ttu-id="0a064-125">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、<xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-125">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-126">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-126">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="0a064-127">SSL ハンドシェイクとも呼ばれる認証プロセスが成功すると、サーバーの id (および必要に応じてクライアント) が確立され、<xref:System.Net.Security.SslStream> をクライアントおよびサーバーで使用してメッセージを交換できます。</span><span class="sxs-lookup"><span data-stu-id="0a064-127">When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages.</span></span> <span data-ttu-id="0a064-128">クライアントとサーバーは、情報を送受信する前に、<xref:System.Net.Security.SslStream> によって提供されるセキュリティサービスとレベルを確認し、選択されたプロトコル、アルゴリズム、および強度が整合性の要件を満たしているかどうかを判断する必要があります。保護.</span><span class="sxs-lookup"><span data-stu-id="0a064-128">Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality.</span></span> <span data-ttu-id="0a064-129">現在の設定が十分でない場合は、ストリームを閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-129">If the current settings are not sufficient, the stream should be closed.</span></span> <span data-ttu-id="0a064-130"><xref:System.Net.Security.SslStream.IsEncrypted%2A> と <xref:System.Net.Security.SslStream.IsSigned%2A> のプロパティを使用して、<xref:System.Net.Security.SslStream> によって提供されるセキュリティサービスを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0a064-130">You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties.</span></span> <span data-ttu-id="0a064-131">次の表は、認証、暗号化、およびデータ署名に使用される暗号化設定を報告する要素を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-131">The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.</span></span>  
  
|<span data-ttu-id="0a064-132">要素</span><span class="sxs-lookup"><span data-stu-id="0a064-132">Element</span></span>|<span data-ttu-id="0a064-133">メンバー</span><span class="sxs-lookup"><span data-stu-id="0a064-133">Members</span></span>|  
|-------------|-------------|  
|<span data-ttu-id="0a064-134">サーバーの認証に使用されるセキュリティプロトコルと、必要に応じてクライアントです。</span><span class="sxs-lookup"><span data-stu-id="0a064-134">The security protocol used to authenticate the server and, optionally, the client.</span></span>|<span data-ttu-id="0a064-135"><xref:System.Net.Security.SslStream.SslProtocol%2A> プロパティと、関連付けられた <xref:System.Security.Authentication.SslProtocols> 列挙体。</span><span class="sxs-lookup"><span data-stu-id="0a064-135">The <xref:System.Net.Security.SslStream.SslProtocol%2A> property and the associated <xref:System.Security.Authentication.SslProtocols> enumeration.</span></span>|  
|<span data-ttu-id="0a064-136">キー交換アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="0a064-136">The key exchange algorithm.</span></span>|<span data-ttu-id="0a064-137"><xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> プロパティと、関連付けられた <xref:System.Security.Authentication.ExchangeAlgorithmType> 列挙体。</span><span class="sxs-lookup"><span data-stu-id="0a064-137">The <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> property and the associated <xref:System.Security.Authentication.ExchangeAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="0a064-138">メッセージの整合性アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="0a064-138">The message integrity algorithm.</span></span>|<span data-ttu-id="0a064-139"><xref:System.Net.Security.SslStream.HashAlgorithm%2A> プロパティと、関連付けられた <xref:System.Security.Authentication.HashAlgorithmType> 列挙体。</span><span class="sxs-lookup"><span data-stu-id="0a064-139">The <xref:System.Net.Security.SslStream.HashAlgorithm%2A> property and the associated <xref:System.Security.Authentication.HashAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="0a064-140">メッセージの機密性アルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="0a064-140">The message confidentiality algorithm.</span></span>|<span data-ttu-id="0a064-141"><xref:System.Net.Security.SslStream.CipherAlgorithm%2A> プロパティと、関連付けられた <xref:System.Security.Authentication.CipherAlgorithmType> 列挙体。</span><span class="sxs-lookup"><span data-stu-id="0a064-141">The <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property and the associated <xref:System.Security.Authentication.CipherAlgorithmType> enumeration.</span></span>|  
|<span data-ttu-id="0a064-142">選択されたアルゴリズムの強度。</span><span class="sxs-lookup"><span data-stu-id="0a064-142">The strengths of the selected algorithms.</span></span>|<span data-ttu-id="0a064-143"><xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>、<xref:System.Net.Security.SslStream.HashStrength%2A>、および <xref:System.Net.Security.SslStream.CipherStrength%2A> の各プロパティ。</span><span class="sxs-lookup"><span data-stu-id="0a064-143">The <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, and <xref:System.Net.Security.SslStream.CipherStrength%2A> properties.</span></span>|  
  
 <span data-ttu-id="0a064-144">認証が正常に完了したら、同期 <xref:System.Net.Security.SslStream.Write%2A> または非同期の <xref:System.Net.Security.SslStream.BeginWrite%2A> メソッドを使用してデータを送信できます。</span><span class="sxs-lookup"><span data-stu-id="0a064-144">After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="0a064-145">同期 <xref:System.Net.Security.SslStream.Read%2A> または非同期の <xref:System.Net.Security.SslStream.BeginRead%2A> メソッドを使用してデータを受け取ることができます。</span><span class="sxs-lookup"><span data-stu-id="0a064-145">You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods.</span></span>  
  
 <span data-ttu-id="0a064-146">基になるストリームを開いたままにする <xref:System.Net.Security.SslStream.%23ctor%2A> に指定した場合は、そのストリームを使用した後に、そのストリームを閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-146">If you specified to the <xref:System.Net.Security.SslStream.%23ctor%2A> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a064-147"><xref:System.Net.Security.SslStream> オブジェクトを作成するアプリケーションが通常のユーザーの資格情報で実行されている場合、そのユーザーに対してアクセス許可が明示的に付与されていない限り、アプリケーションはローカルコンピューターストアにインストールされている証明書にアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-147">If the application that creates the <xref:System.Net.Security.SslStream> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.</span></span>  
  
 <span data-ttu-id="0a064-148"><xref:System.Net.Security.SslStream> は、内部ストリームからスローされた他の <xref:System.IO.IOException> と共にタイムアウトが、呼び出し元によって致命的として扱われることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="0a064-148"><xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller.</span></span> <span data-ttu-id="0a064-149">タイムアウト後に <xref:System.Net.Security.SslStream> インスタンスを再利用すると、ガベージが返されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-149">Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage.</span></span> <span data-ttu-id="0a064-150">このような場合は、アプリケーションで <xref:System.Net.Security.SslStream> を <xref:System.IO.Stream.Close%2A> し、例外をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-150">An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases.</span></span>  
  
 <span data-ttu-id="0a064-151">.NET Framework 4.6 には、安全でない暗号およびハッシュ アルゴリズムの接続をブロックする、新しいセキュリティ機能が含まれています。</span><span class="sxs-lookup"><span data-stu-id="0a064-151">The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.</span></span> <span data-ttu-id="0a064-152">HttpClient、HttpWebRequest、FTPClient、SmtpClient、SslStream などの API を介して TLS/SSL を使用して、.NET Framework 4.6 を対象とするアプリケーションは、既定でセキュリティが強化された動作を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-152">Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.</span></span>  
  
 <span data-ttu-id="0a064-153">開発者は、既存の SSL3 サービスや TLS (RC4) サービスとの相互運用性を維持するために、この動作を無効にすることができます。</span><span class="sxs-lookup"><span data-stu-id="0a064-153">Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.</span></span> <span data-ttu-id="0a064-154">[この記事で](https://support.microsoft.com/kb/3069494)は、新しい動作が無効になるようにコードを変更する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="0a064-154">[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.</span></span>  
  
 <span data-ttu-id="0a064-155">.NET Framework 4.7 では、TLS バージョンを指定しない SslStreams を認証するメソッドの新しいオーバーロードが追加されました。代わりに、 [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)でシステムの既定値として定義されている tls バージョンを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-155">The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx).</span></span> <span data-ttu-id="0a064-156">アプリケーションでこれらのメソッドを使用する方法として、後で既定値を変更できるようにする方法として、時間の経過と共に TLS バージョンのベストプラクティスを変更することができます。アプリをリビルドして再デプロイする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-156">Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.</span></span>

 <span data-ttu-id="0a064-157">また[、.NET Framework を使用したトランスポート層セキュリティ (TLS) のベストプラクティスに](~/docs/framework/network-programming/tls.md)ついても参照してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-157">Also see [Transport Layer Security (TLS) best practices with the .NET Framework](~/docs/framework/network-programming/tls.md).</span></span>
  
   
  
## Examples  
 <span data-ttu-id="0a064-158">次のコード例は、<xref:System.Net.Security.SslStream> クラスを使用してクライアントと通信する <xref:System.Net.Sockets.TcpListener> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-158">The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the <xref:System.Net.Security.SslStream> class to communicate with clients.</span></span>  
  
[!code-cpp[NclSslServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#0)]
[!code-csharp[NclSslServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#0)]  
[!code-vb[NclSslServerSync#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#0)]
  
 <span data-ttu-id="0a064-159">次のコード例は、<xref:System.Net.Security.SslStream> クラスを使用してサーバーと通信する <xref:System.Net.Sockets.TcpClient> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-159">The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the <xref:System.Net.Security.SslStream> class to communicate with a server.</span></span>  
  
 [!code-cpp[NclSslClientSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#0)]
 [!code-csharp[NclSslClientSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#0)]  
 [!code-vb[NclSslClientSync#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientSync/VB/clientsync.vb#0)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Security.NegotiateStream" />
    <altmember cref="T:System.Net.Security.AuthenticatedStream" />
    <altmember cref="T:System.IO.IOException" />
    <altmember cref="T:System.IO.Stream" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a064-160"><see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0a064-160">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-161">指定したストリームを <xref:System.Net.Security.SslStream> が終了しないようにするには、<xref:System.Net.Security.SslStream.%23ctor%2A> コンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-161">To prevent the <xref:System.Net.Security.SslStream> from closing the stream that you supply, use the <xref:System.Net.Security.SslStream.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream innerStream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="0a064-162"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-162">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <summary><span data-ttu-id="0a064-163">指定した <see cref="T:System.IO.Stream" /> を使用して <see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0a064-163">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-164">Encryptionpolicy の構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy> の既定値は、構築される <xref:System.Net.Security.SslStream> インスタンスの <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> になります。</span><span class="sxs-lookup"><span data-stu-id="0a064-164">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="0a064-165">暗号化ポリシーが <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>に設定されている場合は、Null 暗号を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-165">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-166"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-166"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="0a064-167">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-167">-or-</span></span> 
 <span data-ttu-id="0a064-168"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-168"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-169"><paramref name="innerStream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-169"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="0a064-170">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-170">-or-</span></span> 
 <span data-ttu-id="0a064-171"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="0a064-171"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="0a064-172"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-172">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="0a064-173"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span><span class="sxs-lookup"><span data-stu-id="0a064-173">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="0a064-174">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="0a064-174">This parameter indicates if the inner stream is left open.</span></span></param>
        <summary><span data-ttu-id="0a064-175">指定した <see cref="T:System.IO.Stream" /> とストリームを閉じる動作を使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0a064-175">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /> and stream closure behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-176">`leaveStreamOpen` パラメーターに `true` を指定した場合、<xref:System.Net.Security.SslStream> を閉じると `innerStream` ストリームには影響しません。不要になった `innerStream` は、明示的に閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-176">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="0a064-177">Encryptionpolicy の構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy> の既定値は、構築される <xref:System.Net.Security.SslStream> インスタンスの <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> になります。</span><span class="sxs-lookup"><span data-stu-id="0a064-177">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="0a064-178">暗号化ポリシーが <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>に設定されている場合は、Null 暗号を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-178">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-179">次のコード例は、このコンストラクターを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-179">The following code example demonstrates calling this constructor.</span></span>  
  
 [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
 [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
 [!code-vb[NclSslServerSync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#1)] 
 
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-180"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-180"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="0a064-181">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-181">-or-</span></span> 
 <span data-ttu-id="0a064-182"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-182"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-183"><paramref name="innerStream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-183"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="0a064-184">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-184">-or-</span></span> 
 <span data-ttu-id="0a064-185"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="0a064-185"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="0a064-186"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-186">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="0a064-187"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span><span class="sxs-lookup"><span data-stu-id="0a064-187">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="0a064-188">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="0a064-188">This parameter indicates if the inner stream is left open.</span></span></param>
        <param name="userCertificateValidationCallback"><span data-ttu-id="0a064-189">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-189">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span></span></param>
        <summary><span data-ttu-id="0a064-190">指定した <see cref="T:System.IO.Stream" />、ストリームを閉じる動作、および証明書検証デリゲートを使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0a064-190">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior and certificate validation delegate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-191">`leaveStreamOpen` パラメーターに `true` を指定した場合、<xref:System.Net.Security.SslStream> を閉じると `innerStream` ストリームには影響しません。不要になった `innerStream` は、明示的に閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-191">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="0a064-192">`userCertificateValidationCallback` デリゲートの `certificateErrors` 引数には、チャネルセキュリティサポートプロバイダーインターフェイス (SSPI) によって返された Windows エラーコードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="0a064-192">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="0a064-193">`userCertificateValidationCallback` デリゲートによって呼び出されたメソッドの戻り値によって、認証が成功するかどうかが決まります。</span><span class="sxs-lookup"><span data-stu-id="0a064-193">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="0a064-194">セキュリティプロトコルと暗号アルゴリズムは、`userCertificateValidationCallback` デリゲートのメソッドが呼び出されたときに既に選択されています。</span><span class="sxs-lookup"><span data-stu-id="0a064-194">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="0a064-195">メソッドを使用して、選択した暗号アルゴリズムと強度がアプリケーションに対して十分であるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="0a064-195">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="0a064-196">それ以外の場合、メソッドは `false` を返して、<xref:System.Net.Security.SslStream> が作成されないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-196">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="0a064-197">Encryptionpolicy の構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy> の既定値は、構築される <xref:System.Net.Security.SslStream> インスタンスの <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> になります。</span><span class="sxs-lookup"><span data-stu-id="0a064-197">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="0a064-198">暗号化ポリシーが <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>に設定されている場合は、Null 暗号を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-198">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a064-199">フレームワークは、作成時に SSL セッションをキャッシュし、可能であれば、新しい要求に対してキャッシュされたセッションの再利用を試みます。</span><span class="sxs-lookup"><span data-stu-id="0a064-199">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="0a064-200">SSL セッションを再利用しようとすると、フレームワークは <xref:System.Net.HttpWebRequest.ClientCertificates%2A> の最初の要素 (存在する場合) を使用するか、<xref:System.Net.HttpWebRequest.ClientCertificates%2A> が空の場合は匿名セッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="0a064-200">When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a064-201">クライアント証明書は、SSL バージョン2プロトコルではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-201">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-202">次のコード例では、<xref:System.Net.Security.SslStream> を作成し、認証のクライアント部分を開始します。</span><span class="sxs-lookup"><span data-stu-id="0a064-202">The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.</span></span>  
  
 [!code-cpp[NclSslClientSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#4)]
 [!code-csharp[NclSslClientSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#4)]  
 [!code-vb[NclSslClientSync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientSync/VB/clientsync.vb#4)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-203"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-203"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="0a064-204">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-204">-or-</span></span> 
 <span data-ttu-id="0a064-205"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-205"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-206"><paramref name="innerStream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-206"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="0a064-207">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-207">-or-</span></span> 
 <span data-ttu-id="0a064-208"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="0a064-208"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (innerStream As Stream, leaveInnerStreamOpen As Boolean, userCertificateValidationCallback As RemoteCertificateValidationCallback, userCertificateSelectionCallback As LocalCertificateSelectionCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback * System.Net.Security.LocalCertificateSelectionCallback -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback, userCertificateSelectionCallback)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="0a064-209"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-209">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="0a064-210"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span><span class="sxs-lookup"><span data-stu-id="0a064-210">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="0a064-211">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="0a064-211">This parameter indicates if the inner stream is left open.</span></span></param>
        <param name="userCertificateValidationCallback"><span data-ttu-id="0a064-212">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-212">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span></span></param>
        <param name="userCertificateSelectionCallback"><span data-ttu-id="0a064-213">認証に使用する証明書を選択する <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-213">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span></span></param>
        <summary><span data-ttu-id="0a064-214">指定した <see cref="T:System.IO.Stream" />、ストリームを閉じる動作、証明書検証デリゲート、および証明書選択デリゲートを使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0a064-214">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" />, stream closure behavior, certificate validation delegate and certificate selection delegate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-215">`leaveStreamOpen` パラメーターに `true` を指定した場合、<xref:System.Net.Security.SslStream> を閉じると `innerStream` ストリームには影響しません。不要になった `innerStream` は、明示的に閉じる必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-215">When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.</span></span>  
  
 <span data-ttu-id="0a064-216">`userCertificateValidationCallback` デリゲートの `certificateErrors` 引数には、チャネルセキュリティサポートプロバイダーインターフェイス (SSPI) によって返された Windows エラーコードが含まれています。</span><span class="sxs-lookup"><span data-stu-id="0a064-216">The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).</span></span> <span data-ttu-id="0a064-217">`userCertificateValidationCallback` デリゲートによって呼び出されたメソッドの戻り値によって、認証が成功するかどうかが決まります。</span><span class="sxs-lookup"><span data-stu-id="0a064-217">The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.</span></span>  
  
 <span data-ttu-id="0a064-218">セキュリティプロトコルと暗号アルゴリズムは、`userCertificateValidationCallback` デリゲートのメソッドが呼び出されたときに既に選択されています。</span><span class="sxs-lookup"><span data-stu-id="0a064-218">The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked.</span></span> <span data-ttu-id="0a064-219">メソッドを使用して、選択した暗号アルゴリズムと強度がアプリケーションに対して十分であるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="0a064-219">You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.</span></span> <span data-ttu-id="0a064-220">それ以外の場合、メソッドは `false` を返して、<xref:System.Net.Security.SslStream> が作成されないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-220">If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.</span></span>  
  
 <span data-ttu-id="0a064-221">`userCertificateSelectionCallback` デリゲートは、アプリケーションに複数の証明書があり、証明書を動的に選択する必要がある場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="0a064-221">The `userCertificateSelectionCallback` delegate is useful when your application has multiple certificates and must dynamically choose a certificate.</span></span> <span data-ttu-id="0a064-222">"MY" ストア内の証明書は、デリゲートによって呼び出されたメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-222">Certificates in the "MY" store are passed to the method invoked by the delegate.</span></span>  
  
 <span data-ttu-id="0a064-223">Encryptionpolicy の構成ファイルで値が指定されていない場合、<xref:System.Net.Security.EncryptionPolicy> の既定値は、構築される <xref:System.Net.Security.SslStream> インスタンスの <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> になります。</span><span class="sxs-lookup"><span data-stu-id="0a064-223">If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy.RequireEncryption?displayProperty=nameWithType> for the <xref:System.Net.Security.SslStream> instance that is constructed.</span></span>  
  
 <span data-ttu-id="0a064-224">暗号化ポリシーが <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>に設定されている場合は、Null 暗号を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-224">The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a064-225">フレームワークは、作成時に SSL セッションをキャッシュし、可能であれば、新しい要求に対してキャッシュされたセッションの再利用を試みます。</span><span class="sxs-lookup"><span data-stu-id="0a064-225">The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.</span></span> <span data-ttu-id="0a064-226">SSL セッションを再利用しようとすると、フレームワークは P:System.Net.HttpWebRequest.ClientCertificates の最初の要素 (存在する場合) を使用するか、P:System.Net.HttpWebRequest.ClientCertificates が空の場合は匿名セッションを再利用しようとします。</span><span class="sxs-lookup"><span data-stu-id="0a064-226">When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-227">次のコード例は、このコンストラクターを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-227">The following code example demonstrates calling this constructor.</span></span> <span data-ttu-id="0a064-228">この例は、<xref:System.Net.Security.SslStream> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="0a064-228">This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 [!code-cpp[NclSslClientAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#6)]
 [!code-csharp[NclSslClientAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#6)]  
 [!code-vb[NclSslClientAsync#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientAsync/VB/clientasync.vb#6)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-229"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-229"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="0a064-230">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-230">-or-</span></span> 
 <span data-ttu-id="0a064-231"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-231"><paramref name="innerStream" /> is not writable.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-232"><paramref name="innerStream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-232"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="0a064-233">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-233">-or-</span></span> 
 <span data-ttu-id="0a064-234"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="0a064-234"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream innerStream, bool leaveInnerStreamOpen, class System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, class System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, valuetype System.Net.Security.EncryptionPolicy encryptionPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SslStream(System::IO::Stream ^ innerStream, bool leaveInnerStreamOpen, System::Net::Security::RemoteCertificateValidationCallback ^ userCertificateValidationCallback, System::Net::Security::LocalCertificateSelectionCallback ^ userCertificateSelectionCallback, System::Net::Security::EncryptionPolicy encryptionPolicy);" />
      <MemberSignature Language="F#" Value="new System.Net.Security.SslStream : System.IO.Stream * bool * System.Net.Security.RemoteCertificateValidationCallback * System.Net.Security.LocalCertificateSelectionCallback * System.Net.Security.EncryptionPolicy -&gt; System.Net.Security.SslStream" Usage="new System.Net.Security.SslStream (innerStream, leaveInnerStreamOpen, userCertificateValidationCallback, userCertificateSelectionCallback, encryptionPolicy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoLimitation("encryptionPolicy is ignored")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="innerStream" Type="System.IO.Stream" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="leaveInnerStreamOpen" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userCertificateValidationCallback" Type="System.Net.Security.RemoteCertificateValidationCallback" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userCertificateSelectionCallback" Type="System.Net.Security.LocalCertificateSelectionCallback" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="encryptionPolicy" Type="System.Net.Security.EncryptionPolicy" Index="4" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="innerStream"><span data-ttu-id="0a064-235"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-235">A <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span></param>
        <param name="leaveInnerStreamOpen"><span data-ttu-id="0a064-236"><see cref="T:System.Net.Security.SslStream" /> がデータの送受信に使用する <see cref="T:System.IO.Stream" /> オブジェクトの閉じる動作を示すブール値。</span><span class="sxs-lookup"><span data-stu-id="0a064-236">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream" /> object used by the <see cref="T:System.Net.Security.SslStream" /> for sending and receiving data.</span></span> <span data-ttu-id="0a064-237">このパラメーターは、内部ストリームを開いたままにするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="0a064-237">This parameter indicates if the inner stream is left open.</span></span></param>
        <param name="userCertificateValidationCallback"><span data-ttu-id="0a064-238">リモート側によって提供される証明書を検証する <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-238">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback" /> delegate responsible for validating the certificate supplied by the remote party.</span></span></param>
        <param name="userCertificateSelectionCallback"><span data-ttu-id="0a064-239">認証に使用する証明書を選択する <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-239">A <see cref="T:System.Net.Security.LocalCertificateSelectionCallback" /> delegate responsible for selecting the certificate used for authentication.</span></span></param>
        <param name="encryptionPolicy"><span data-ttu-id="0a064-240">使用する <see cref="T:System.Net.Security.EncryptionPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-240">The <see cref="T:System.Net.Security.EncryptionPolicy" /> to use.</span></span></param>
        <summary><span data-ttu-id="0a064-241">指定した <see cref="T:System.IO.Stream" /> を使用して、<see cref="T:System.Net.Security.SslStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0a064-241">Initializes a new instance of the <see cref="T:System.Net.Security.SslStream" /> class using the specified <see cref="T:System.IO.Stream" /></span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-242">`encryptionPolicy` パラメーターが <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>に設定されている場合は、Null 暗号を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-242">The use of the Null cipher is required when the `encryptionPolicy` parameter is set to <xref:System.Net.Security.EncryptionPolicy.NoEncryption?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-243"><paramref name="innerStream" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-243"><paramref name="innerStream" /> is not readable.</span></span>  
  
<span data-ttu-id="0a064-244">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-244">-or-</span></span> 
 <span data-ttu-id="0a064-245"><paramref name="innerStream" /> が書き込み可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-245"><paramref name="innerStream" /> is not writable.</span></span>  
  
<span data-ttu-id="0a064-246">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-246">-or-</span></span> 
 <span data-ttu-id="0a064-247"><paramref name="encryptionPolicy" /> が無効です。</span><span class="sxs-lookup"><span data-stu-id="0a064-247"><paramref name="encryptionPolicy" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-248"><paramref name="innerStream" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-248"><paramref name="innerStream" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="0a064-249">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-249">-or-</span></span> 
 <span data-ttu-id="0a064-250"><paramref name="innerStream" /> と <see cref="F:System.IO.Stream.Null" /> が等価です。</span><span class="sxs-lookup"><span data-stu-id="0a064-250"><paramref name="innerStream" /> is equal to <see cref="F:System.IO.Stream.Null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a064-251">クライアントとサーバー間の接続のクライアント側を認証します。</span><span class="sxs-lookup"><span data-stu-id="0a064-251">Authenticate the client side of a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string -&gt; unit&#xA;override this.AuthenticateAsClient : string -&gt; unit" Usage="sslStream.AuthenticateAsClient targetHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="0a064-252">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="0a064-252">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <summary><span data-ttu-id="0a064-253">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-253">Called by clients to authenticate the server and optionally the client in a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-254">認証にクライアント証明書が使用されていない [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] ます。</span><span class="sxs-lookup"><span data-stu-id="0a064-254">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] No client certificates are used in the authentication.</span></span> <span data-ttu-id="0a064-255">証明書失効リストは、認証時に確認されません。</span><span class="sxs-lookup"><span data-stu-id="0a064-255">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="0a064-256">`targetHost` に指定する値は、サーバーの証明書の名前と一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-256">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="0a064-257">認証が成功したら、<xref:System.Net.Security.SslStream.IsEncrypted%2A> と <xref:System.Net.Security.SslStream.IsSigned%2A> のプロパティを確認して、<xref:System.Net.Security.SslStream>によって使用されているセキュリティサービスを特定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-257">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="0a064-258"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> プロパティを調べて、相互認証が行われたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="0a064-258">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0a064-259">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-259">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-260">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-260">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-261"><paramref name="targetHost" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-261"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-262">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-262">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-263">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-263">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="0a064-264">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-264">-or-</span></span> 
<span data-ttu-id="0a064-265">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="0a064-265">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="0a064-266">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-266">-or-</span></span> 
<span data-ttu-id="0a064-267">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="0a064-267">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-268">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-268">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; unit&#xA;override this.AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; unit" Usage="sslStream.AuthenticateAsClient (targetHost, clientCertificates, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="0a064-269">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="0a064-269">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="0a064-270">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-270">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="0a064-271">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-271">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="0a064-272">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-272">Called by clients to authenticate the server and optionally the client in a client-server connection.</span></span> <span data-ttu-id="0a064-273">認証プロセスでは、指定された証明書コレクション、およびシステムの既定の SSL プロトコルを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-273">The authentication process uses the specified certificate collection, and the system default SSL protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-274">認証が成功したら、<xref:System.Net.Security.SslStream.IsEncrypted%2A> と <xref:System.Net.Security.SslStream.IsSigned%2A> のプロパティを確認して、<xref:System.Net.Security.SslStream>によって使用されているセキュリティサービスを特定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-274">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="0a064-275"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> プロパティを調べて、相互認証が行われたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="0a064-275">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0a064-276">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-276">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-277">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-277">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a064-278">クライアント証明書は、SSL バージョン2プロトコルではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-278">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsClient (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; unit&#xA;override this.AuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; unit" Usage="sslStream.AuthenticateAsClient (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="0a064-279">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="0a064-279">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="0a064-280">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-280">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="0a064-281">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-281">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="0a064-282">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-282">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="0a064-283">サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-283">Called by clients to authenticate the server and optionally the client in a client-server connection.</span></span> <span data-ttu-id="0a064-284">認証プロセスには、指定した証明書コレクションおよび SSL プロトコルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-284">The authentication process uses the specified certificate collection and SSL protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-285">認証が成功したら、<xref:System.Net.Security.SslStream.IsEncrypted%2A> と <xref:System.Net.Security.SslStream.IsSigned%2A> のプロパティを確認して、<xref:System.Net.Security.SslStream>によって使用されているセキュリティサービスを特定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-285">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="0a064-286"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> プロパティを調べて、相互認証が行われたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="0a064-286">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0a064-287">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-287">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-288">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-288">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a064-289">クライアント証明書は、SSL バージョン2プロトコルではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-289">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsClientAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a064-290">非同期操作としてクライアントとサーバー間の接続でクライアント側を認証します。</span><span class="sxs-lookup"><span data-stu-id="0a064-290">Authenticate the client side of a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync targetHost" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="0a064-291">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="0a064-291">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <summary><span data-ttu-id="0a064-292">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-292">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="0a064-293">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-293">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-294">認証にクライアント証明書が使用されていない [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] ます。</span><span class="sxs-lookup"><span data-stu-id="0a064-294">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] No client certificates are used in the authentication.</span></span> <span data-ttu-id="0a064-295">証明書失効リストは、認証時に確認されません。</span><span class="sxs-lookup"><span data-stu-id="0a064-295">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="0a064-296">`targetHost` に指定する値は、サーバーの証明書の名前と一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-296">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="0a064-297">認証が成功したら、<xref:System.Net.Security.SslStream.IsEncrypted%2A> と <xref:System.Net.Security.SslStream.IsSigned%2A> のプロパティを確認して、<xref:System.Net.Security.SslStream>によって使用されているセキュリティサービスを特定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-297">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="0a064-298"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> プロパティを調べて、相互認証が行われたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="0a064-298">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0a064-299">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-299">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-300">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-300">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-301"><paramref name="targetHost" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-301"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-302">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-302">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-303">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-303">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="0a064-304">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-304">-or-</span></span> 
<span data-ttu-id="0a064-305">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="0a064-305">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="0a064-306">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-306">-or-</span></span> 
<span data-ttu-id="0a064-307">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="0a064-307">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-308">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-308">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(class System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.Net.Security.SslClientAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::Net::Security::SslClientAuthenticationOptions ^ sslClientAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsClientAsync : System.Net.Security.SslClientAuthenticationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (sslClientAuthenticationOptions, cancellationToken)" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsClientAsync (System.Net.Security.SslClientAuthenticationOptions sslClientAuthenticationOptions, System.Threading.CancellationToken cancellationToken = null);" FrameworkAlternate="netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslClientAuthenticationOptions" Type="System.Net.Security.SslClientAuthenticationOptions" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sslClientAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (targetHost, clientCertificates, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="0a064-309">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="0a064-309">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="0a064-310">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-310">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="0a064-311">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-311">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="0a064-312">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-312">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="0a064-313">認証プロセスでは、指定された証明書コレクション、およびシステムの既定の SSL プロトコルを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-313">The authentication process uses the specified certificate collection and the system default SSL protocol.</span></span></summary>
        <returns><span data-ttu-id="0a064-314">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-314">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-315">認証が成功したら、<xref:System.Net.Security.SslStream.IsEncrypted%2A> と <xref:System.Net.Security.SslStream.IsSigned%2A> のプロパティを確認して、<xref:System.Net.Security.SslStream>によって使用されているセキュリティサービスを特定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-315">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="0a064-316"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> プロパティを調べて、相互認証が行われたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="0a064-316">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0a064-317">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-317">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-318">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-318">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a064-319">クライアント証明書は、SSL バージョン2プロトコルではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-319">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsClientAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsClientAsync(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsClientAsync (targetHost As String, clientCertificates As X509CertificateCollection, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsClientAsync(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsClientAsync : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsClientAsync (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="0a064-320">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="0a064-320">The name of the server that will share this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="0a064-321">クライアント証明書を格納している <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-321">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that contains client certificates.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="0a064-322">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-322">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="0a064-323">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-323">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="0a064-324">サーバーおよび必要に応じて非同期操作としてクライアントとサーバー間の接続にあるクライアントを認証するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-324">Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span> <span data-ttu-id="0a064-325">認証プロセスには、指定した証明書コレクションおよび SSL プロトコルが使用されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-325">The authentication process uses the specified certificate collection and SSL protocol.</span></span></summary>
        <returns><span data-ttu-id="0a064-326">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-326">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-327">認証が成功したら、<xref:System.Net.Security.SslStream.IsEncrypted%2A> と <xref:System.Net.Security.SslStream.IsSigned%2A> のプロパティを確認して、<xref:System.Net.Security.SslStream>によって使用されているセキュリティサービスを特定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-327">When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="0a064-328"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> プロパティを調べて、相互認証が行われたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="0a064-328">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0a064-329">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-329">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-330">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-330">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a064-331">クライアント証明書は、SSL バージョン2プロトコルではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-331">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a064-332">サーバーによって呼び出され、クライアントとサーバー間の接続でサーバーとオプションでクライアントを認証します。</span><span class="sxs-lookup"><span data-stu-id="0a064-332">Called by servers to authenticate the server and optionally the client in a client-server connection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; unit" Usage="sslStream.AuthenticateAsServer serverCertificate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="0a064-333">サーバーの認証に使用する証明書。</span><span class="sxs-lookup"><span data-stu-id="0a064-333">The certificate used to authenticate the server.</span></span></param>
        <summary><span data-ttu-id="0a064-334">サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続でサーバーとオプションでクライアントを認証します。</span><span class="sxs-lookup"><span data-stu-id="0a064-334">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="0a064-335">認証時に証明書失効リストがチェックされません。</span><span class="sxs-lookup"><span data-stu-id="0a064-335">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="0a064-336">クライアントは、認証用の証明書を提供する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-336">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="0a064-337">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="0a064-337">This method blocks until the operation completes.</span></span> <span data-ttu-id="0a064-338">操作が完了するまでブロックされないようにするには、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> メソッドオーバーロードのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-338">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0a064-339">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-339">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-340">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-340">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-341"><paramref name="serverCertificate" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-341"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-342">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-342">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-343">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-343">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="0a064-344">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-344">-or-</span></span> 
<span data-ttu-id="0a064-345">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="0a064-345">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="0a064-346">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-346">-or-</span></span> 
<span data-ttu-id="0a064-347">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="0a064-347">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-348">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-348">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="0a064-349">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-349">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; unit" Usage="sslStream.AuthenticateAsServer (serverCertificate, clientCertificateRequired, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="0a064-350">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="0a064-350">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="0a064-351">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-351">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="0a064-352">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-352">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="0a064-353">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-353">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="0a064-354">指定された証明書と要件、およびシステムの既定のセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、サーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-354">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the system default security protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-355">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="0a064-355">This method blocks until the operation completes.</span></span> <span data-ttu-id="0a064-356">操作が完了するまでブロックされないようにするには、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> メソッドオーバーロードのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-356">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0a064-357">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-357">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-358">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-358">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-359"><paramref name="serverCertificate" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-359"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-360">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-360">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-361">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-361">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="0a064-362">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-362">-or-</span></span> 
<span data-ttu-id="0a064-363">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="0a064-363">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="0a064-364">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-364">-or-</span></span> 
<span data-ttu-id="0a064-365">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="0a064-365">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-366">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-366">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="0a064-367">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-367">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AuthenticateAsServer (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; unit&#xA;override this.AuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; unit" Usage="sslStream.AuthenticateAsServer (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="0a064-368">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="0a064-368">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="0a064-369">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-369">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="0a064-370">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-370">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="0a064-371">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-371">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="0a064-372">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-372">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="0a064-373">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、サーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-373">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-374">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="0a064-374">This method blocks until the operation completes.</span></span> <span data-ttu-id="0a064-375">操作が完了するまでブロックされないようにするには、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> メソッドオーバーロードのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-375">To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0a064-376">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-376">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-377">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-377">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-378"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="0a064-378"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-379"><paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-379"><paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-380">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-380">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-381">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-381">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="0a064-382">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-382">-or-</span></span> 
<span data-ttu-id="0a064-383">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="0a064-383">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="0a064-384">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-384">-or-</span></span> 
<span data-ttu-id="0a064-385">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="0a064-385">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-386">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-386">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="0a064-387">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-387">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AuthenticateAsServerAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a064-388">サーバーによって呼び出され、クライアントとサーバー間の接続で非同期操作としてサーバーと (オプションで) クライアントを認証します。</span><span class="sxs-lookup"><span data-stu-id="0a064-388">Called by servers to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync serverCertificate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="0a064-389">サーバーの認証に使用する証明書。</span><span class="sxs-lookup"><span data-stu-id="0a064-389">The certificate used to authenticate the server.</span></span></param>
        <summary><span data-ttu-id="0a064-390">サーバーによって呼び出され、指定した証明書を使用して、クライアントとサーバー間の接続で非同期操作としてサーバーと (オプションで) クライアントを認証します。</span><span class="sxs-lookup"><span data-stu-id="0a064-390">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="0a064-391">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-391">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-392">このメソッドは <xref:System.Security.Authentication.SslProtocols.Default>を使用して認証を行います。</span><span class="sxs-lookup"><span data-stu-id="0a064-392">This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="0a064-393">証明書失効リストは、認証時に確認されません。</span><span class="sxs-lookup"><span data-stu-id="0a064-393">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="0a064-394">クライアントは、認証用の証明書を提供する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-394">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="0a064-395">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-395">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-396">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-396">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-397"><paramref name="serverCertificate" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-397"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-398">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-398">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-399">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-399">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="0a064-400">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-400">-or-</span></span> 
<span data-ttu-id="0a064-401">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="0a064-401">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="0a064-402">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-402">-or-</span></span> 
<span data-ttu-id="0a064-403">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="0a064-403">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-404">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-404">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="0a064-405">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-405">The <see cref="Overload:System.Net.Security.SslStream.AuthenticateAsServerAsync" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, System.Threading.CancellationToken cancellationToken);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Net.Security.SslServerAuthenticationOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Net::Security::SslServerAuthenticationOptions ^ sslServerAuthenticationOptions, System::Threading::CancellationToken cancellationToken);" FrameworkAlternate="netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberSignature Language="F#" Value="member this.AuthenticateAsServerAsync : System.Net.Security.SslServerAuthenticationOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (sslServerAuthenticationOptions, cancellationToken)" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Net.Security.SslServerAuthenticationOptions sslServerAuthenticationOptions, System.Threading.CancellationToken cancellationToken = null);" FrameworkAlternate="netcore-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sslServerAuthenticationOptions" Type="System.Net.Security.SslServerAuthenticationOptions" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sslServerAuthenticationOptions">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (serverCertificate, clientCertificateRequired, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="0a064-406">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="0a064-406">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="0a064-407">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-407">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="0a064-408">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-408">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="0a064-409">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-409">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="0a064-410">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、非同期操作としてサーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-410">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="0a064-411">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-411">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-412">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-412">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-413">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-413">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateAsServerAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task AuthenticateAsServerAsync(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AuthenticateAsServerAsync (serverCertificate As X509Certificate, clientCertificateRequired As Boolean, enabledSslProtocols As SslProtocols, checkCertificateRevocation As Boolean) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ AuthenticateAsServerAsync(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation);" />
      <MemberSignature Language="F#" Value="abstract member AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task&#xA;override this.AuthenticateAsServerAsync : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool -&gt; System.Threading.Tasks.Task" Usage="sslStream.AuthenticateAsServerAsync (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="0a064-414">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="0a064-414">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="0a064-415">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-415">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="0a064-416">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-416">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="0a064-417">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-417">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="0a064-418">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-418">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <summary><span data-ttu-id="0a064-419">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバーおよび必要に応じてクライアントとサーバー間の接続にあるクライアントを認証するために、非同期操作としてサーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-419">Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="0a064-420">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-420">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-421">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-421">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-422">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-422">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsClient">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a064-423">クライアントとサーバー間の接続でクライアント側を認証する操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="0a064-423">Begins an operation to authenticate the client side of a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-424">認証の実行中は、このメソッドのオーバーロードはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="0a064-424">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="0a064-425">認証の完了を待機している間にブロックするには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> メソッドのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-425">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="0a064-426">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="0a064-426">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="0a064-427">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-427">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="0a064-428">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-428">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="0a064-429">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-429">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="0a064-430">クライアントによって呼び出され、サーバーとオプションでクライアントを認証する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="0a064-430">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.</span></span></summary>
        <returns><span data-ttu-id="0a064-431">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-431">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-432">認証にクライアント証明書が使用されていない [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] ます。</span><span class="sxs-lookup"><span data-stu-id="0a064-432">[!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] No client certificates are used in the authentication.</span></span> <span data-ttu-id="0a064-433">証明書失効リストは、認証時に確認されません。</span><span class="sxs-lookup"><span data-stu-id="0a064-433">The certificate revocation list is not checked during authentication.</span></span>  
  
 <span data-ttu-id="0a064-434">`targetHost` に指定する値は、サーバーの証明書の名前と一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-434">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="0a064-435">非同期認証操作は、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> メソッドを呼び出すことによって完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-435">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="0a064-436">通常、メソッドは `asyncCallback` デリゲートによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-436">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="0a064-437">このメソッドは、操作の完了時にブロックされません。</span><span class="sxs-lookup"><span data-stu-id="0a064-437">This method does not block while the operation completes.</span></span> <span data-ttu-id="0a064-438">操作が完了するまでブロックするには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> メソッドオーバーロードのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-438">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0a064-439">非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-439">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0a064-440"><xref:System.Security.Authentication.AuthenticationException>を受け取った場合、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-440">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-441">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-441">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-442"><paramref name="targetHost" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="0a064-442"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-443">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-443">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-444">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-444">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="0a064-445">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-445">-or-</span></span> 
<span data-ttu-id="0a064-446">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="0a064-446">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="0a064-447">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-447">-or-</span></span> 
<span data-ttu-id="0a064-448">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="0a064-448">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-449">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-449">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, clientCertificates, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="0a064-450">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="0a064-450">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="0a064-451">クライアント証明書を含んでいる <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-451">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="0a064-452">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-452">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="0a064-453">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-453">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="0a064-454">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-454">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="0a064-455">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-455">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="0a064-456">指定された証明書およびシステムの既定のセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、クライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-456">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.</span></span></summary>
        <returns><span data-ttu-id="0a064-457">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-457">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-458">`targetHost` に指定する値は、サーバーの証明書の名前と一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-458">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="0a064-459">非同期認証操作は、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> メソッドを呼び出すことによって完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-459">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="0a064-460">通常、メソッドは `asyncCallback` デリゲートによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-460">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="0a064-461">このメソッドは、操作の完了時にブロックされません。</span><span class="sxs-lookup"><span data-stu-id="0a064-461">This method does not block while the operation completes.</span></span> <span data-ttu-id="0a064-462">操作が完了するまでブロックするには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> メソッドオーバーロードのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-462">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0a064-463">非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-463">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0a064-464"><xref:System.Security.Authentication.AuthenticationException>を受け取った場合、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-464">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-465">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-465">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a064-466">クライアント証明書は、SSL バージョン2プロトコルではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-466">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-467"><paramref name="targetHost" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="0a064-467"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-468">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-468">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-469">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-469">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="0a064-470">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-470">-or-</span></span> 
<span data-ttu-id="0a064-471">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="0a064-471">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="0a064-472">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-472">-or-</span></span> 
<span data-ttu-id="0a064-473">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="0a064-473">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-474">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-474">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsClient(string targetHost, class System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsClient(System::String ^ targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsClient : string * System.Security.Cryptography.X509Certificates.X509CertificateCollection * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsClient (targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetHost" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="clientCertificates" Type="System.Security.Cryptography.X509Certificates.X509CertificateCollection" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="targetHost"><span data-ttu-id="0a064-475">この <see cref="T:System.Net.Security.SslStream" /> を共有するサーバーの名前。</span><span class="sxs-lookup"><span data-stu-id="0a064-475">The name of the server that shares this <see cref="T:System.Net.Security.SslStream" />.</span></span></param>
        <param name="clientCertificates"><span data-ttu-id="0a064-476">クライアント証明書を含んでいる <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-476">The <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> containing client certificates.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="0a064-477">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-477">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="0a064-478">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-478">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="0a064-479">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-479">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="0a064-480">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-480">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="0a064-481">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-481">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="0a064-482">クライアントによって呼び出され、指定した証明書とセキュリティ プロトコルを使用して、サーバーとオプションでクライアントを認証する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="0a064-482">Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.</span></span></summary>
        <returns><span data-ttu-id="0a064-483">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-483">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-484">`targetHost` に指定する値は、サーバーの証明書の名前と一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-484">The value specified for `targetHost` must match the name on the server's certificate.</span></span>  
  
 <span data-ttu-id="0a064-485">非同期認証操作は、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> メソッドを呼び出すことによって完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-485">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="0a064-486">通常、メソッドは `asyncCallback` デリゲートによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-486">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="0a064-487">このメソッドは、操作の完了時にブロックされません。</span><span class="sxs-lookup"><span data-stu-id="0a064-487">This method does not block while the operation completes.</span></span> <span data-ttu-id="0a064-488">操作が完了するまでブロックするには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> メソッドオーバーロードのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-488">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0a064-489">非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-489">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0a064-490"><xref:System.Security.Authentication.AuthenticationException>を受け取った場合、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-490">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-491">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-491">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0a064-492">クライアント証明書は、SSL バージョン2プロトコルではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-492">Client certificates are not supported in the SSL version 2 protocol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-493"><paramref name="targetHost" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-493"><paramref name="targetHost" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-494"><paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-494"><paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-495">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-495">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-496">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-496">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="0a064-497">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-497">-or-</span></span> 
<span data-ttu-id="0a064-498">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="0a064-498">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="0a064-499">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-499">-or-</span></span> 
<span data-ttu-id="0a064-500">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="0a064-500">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-501">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-501">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAuthenticateAsServer">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a064-502">クライアントとサーバー間の接続のサーバー側の認証を処理する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="0a064-502">Begins an asynchronous operation to handle the server side of authenticating a client-server connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-503">認証の実行中は、このメソッドのオーバーロードはブロックされません。</span><span class="sxs-lookup"><span data-stu-id="0a064-503">The overloads of this method do not block while authentication is in progress.</span></span> <span data-ttu-id="0a064-504">認証の完了を待機している間にブロックするには、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> メソッドのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-504">To block while waiting for the authentication to complete, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="0a064-505">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="0a064-505">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="0a064-506">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-506">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="0a064-507">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-507">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="0a064-508">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-508">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="0a064-509">サーバーによって呼び出され、クライアントとサーバー間の接続でクライアントとオプションでサーバーを認証する非同期操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="0a064-509">Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.</span></span></summary>
        <returns><span data-ttu-id="0a064-510">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-510">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)] <span data-ttu-id="0a064-511">認証時に証明書失効リストがチェックされません。</span><span class="sxs-lookup"><span data-stu-id="0a064-511">The certificate revocation list is not checked during authentication.</span></span> <span data-ttu-id="0a064-512">クライアントは、認証用の証明書を提供する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-512">The client is not required to provide a certificate for authentication.</span></span>  
  
 <span data-ttu-id="0a064-513">非同期認証操作は、<xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> メソッドを呼び出すことによって完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-513">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method.</span></span> <span data-ttu-id="0a064-514">通常、メソッドは `asyncCallback` デリゲートによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-514">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="0a064-515">このメソッドは、操作の完了時にブロックされません。</span><span class="sxs-lookup"><span data-stu-id="0a064-515">This method does not block while the operation completes.</span></span> <span data-ttu-id="0a064-516">操作が完了するまでブロックするには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> メソッドオーバーロードのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-516">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0a064-517">非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-517">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0a064-518"><xref:System.Security.Authentication.AuthenticationException>を受け取った場合、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-518">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-519">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-519">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-520"><paramref name="serverCertificate" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="0a064-520"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-521">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-521">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-522">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-522">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="0a064-523">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-523">-or-</span></span> 
<span data-ttu-id="0a064-524">この <see cref="T:System.Net.Security.SslStream" /> を使用するクライアントの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="0a064-524">Client authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="0a064-525">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-525">-or-</span></span> 
<span data-ttu-id="0a064-526">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="0a064-526">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-527">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-527">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="0a064-528">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-528">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, clientCertificateRequired, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="0a064-529">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="0a064-529">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="0a064-530">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-530">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="0a064-531">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-531">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="0a064-532">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-532">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="0a064-533">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-533">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="0a064-534">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-534">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="0a064-535">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-535">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="0a064-536">指定された証明書と要件、およびシステムの既定のセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、サーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-536">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.</span></span></summary>
        <returns><span data-ttu-id="0a064-537">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-537">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-538">非同期認証操作は、<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> メソッドを呼び出すことによって完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-538">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="0a064-539">通常、メソッドは `asyncCallback` デリゲートによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-539">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="0a064-540">このメソッドは、操作の完了時にブロックされません。</span><span class="sxs-lookup"><span data-stu-id="0a064-540">This method does not block while the operation completes.</span></span> <span data-ttu-id="0a064-541">操作が完了するまでブロックするには、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> メソッドオーバーロードのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-541">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0a064-542">非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-542">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0a064-543"><xref:System.Security.Authentication.AuthenticationException>を受け取った場合、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-543">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-544">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-544">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-545"><paramref name="serverCertificate" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-545"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-546">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-546">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-547">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-547">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="0a064-548">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-548">-or-</span></span> 
<span data-ttu-id="0a064-549">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="0a064-549">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="0a064-550">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-550">-or-</span></span> 
<span data-ttu-id="0a064-551">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="0a064-551">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-552">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-552">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="0a064-553">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-553">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginAuthenticateAsServer(class System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, valuetype System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginAuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate ^ serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="abstract member BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginAuthenticateAsServer : System.Security.Cryptography.X509Certificates.X509Certificate * bool * System.Security.Authentication.SslProtocols * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginAuthenticateAsServer (serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serverCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="clientCertificateRequired" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="enabledSslProtocols" Type="System.Security.Authentication.SslProtocols" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="checkCertificateRevocation" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="serverCertificate"><span data-ttu-id="0a064-554">サーバーの認証に使用される X509Certificate。</span><span class="sxs-lookup"><span data-stu-id="0a064-554">The X509Certificate used to authenticate the server.</span></span></param>
        <param name="clientCertificateRequired"><span data-ttu-id="0a064-555">認証用の証明書をクライアントに要求するかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-555">A <see cref="T:System.Boolean" /> value that specifies whether the client is asked for a certificate for authentication.</span></span> <span data-ttu-id="0a064-556">これは単なる要求であり、証明書が提供されなくても、サーバーは接続要求を受け入れることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-556">Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.</span></span></param>
        <param name="enabledSslProtocols"><span data-ttu-id="0a064-557">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-557">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></param>
        <param name="checkCertificateRevocation"><span data-ttu-id="0a064-558">認証時に証明書失効リストをオンにするかどうかを指定する <see cref="T:System.Boolean" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-558">A <see cref="T:System.Boolean" /> value that specifies whether the certificate revocation list is checked during authentication.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="0a064-559">認証完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-559">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the authentication is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="0a064-560">操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-560">A user-defined object that contains information about the operation.</span></span> <span data-ttu-id="0a064-561">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-561">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="0a064-562">指定された証明書、要件、およびセキュリティ プロトコルを使用して、サーバー、および必要に応じてクライアントを認証する非同期操作を開始するために、サーバーによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-562">Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</span></span></summary>
        <returns><span data-ttu-id="0a064-563">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-563">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[sslprotocols-none](~/includes/sslprotocols-none-md.md)]
 
 <span data-ttu-id="0a064-564">非同期認証操作は、<xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> メソッドを呼び出すことによって完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-564">The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method.</span></span> <span data-ttu-id="0a064-565">通常、メソッドは `asyncCallback` デリゲートによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-565">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="0a064-566">このメソッドは、操作の完了時にブロックされません。</span><span class="sxs-lookup"><span data-stu-id="0a064-566">This method does not block while the operation completes.</span></span> <span data-ttu-id="0a064-567">操作が完了するまでブロックするには、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> メソッドオーバーロードのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-567">To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.</span></span>  
  
 <span data-ttu-id="0a064-568">非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-568">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0a064-569"><xref:System.Security.Authentication.AuthenticationException>を受け取った場合、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-569">If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-570">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-570">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-571"><paramref name="serverCertificate" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-571"><paramref name="serverCertificate" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-572"><paramref name="enabledSslProtocols" /> は有効な <see cref="T:System.Security.Authentication.SslProtocols" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-572"><paramref name="enabledSslProtocols" /> is not a valid <see cref="T:System.Security.Authentication.SslProtocols" /> value.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-573">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-573">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-574">認証が既に発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-574">Authentication has already occurred.</span></span>  
  
<span data-ttu-id="0a064-575">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-575">-or-</span></span> 
<span data-ttu-id="0a064-576">この <see cref="T:System.Net.Security.SslStream" /> を使用するサーバーの認証は以前に試行されました。</span><span class="sxs-lookup"><span data-stu-id="0a064-576">Server authentication using this <see cref="T:System.Net.Security.SslStream" /> was tried previously.</span></span>  
  
<span data-ttu-id="0a064-577">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-577">-or-</span></span> 
<span data-ttu-id="0a064-578">認証が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="0a064-578">Authentication is already in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-579">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-579">This object has been closed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="0a064-580">Windows 95、Windows 98、および Windows ME (Millennium Edition) では、<see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> メソッドはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-580">The <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" /> method is not supported on Windows 95, Windows 98, or Windows Millennium.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginRead (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0a064-581">ストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="0a064-581">A <see cref="T:System.Byte" /> array that receives the bytes read from the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="0a064-582">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="0a064-582">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="0a064-583">ストリームから読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="0a064-583">The maximum number of bytes to read from the stream.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="0a064-584">読み取り操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-584">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the read operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="0a064-585">読み取り操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-585">A user-defined object that contains information about the read operation.</span></span> <span data-ttu-id="0a064-586">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-586">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="0a064-587">ストリームからデータを読み取り、指定した配列に格納する非同期読み取り操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="0a064-587">Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="0a064-588">非同期操作のステータスを示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-588">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-589">暗号化および署名が有効になっている場合、読み取り操作は、基になるストリームからデータを読み取り、データの整合性をチェックし、復号化します。</span><span class="sxs-lookup"><span data-stu-id="0a064-589">If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it.</span></span> <span data-ttu-id="0a064-590">非同期の読み取り操作は、<xref:System.Net.Security.SslStream.EndRead%2A> メソッドを呼び出すことによって完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-590">The asynchronous read operation must be completed by calling the <xref:System.Net.Security.SslStream.EndRead%2A> method.</span></span> <span data-ttu-id="0a064-591">通常、メソッドは `asyncCallback` デリゲートによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-591">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="0a064-592">このメソッドは、操作の完了時にブロックされません。</span><span class="sxs-lookup"><span data-stu-id="0a064-592">This method does not block while the operation completes.</span></span> <span data-ttu-id="0a064-593">操作が完了するまでブロックするには、<xref:System.Net.Security.SslStream.Read%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-593">To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="0a064-594">非同期プログラミングモデルの使用方法の詳細については、「[同期メソッドの非同期呼び出し](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-594">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
 <span data-ttu-id="0a064-595"><xref:System.Net.Security.SslStream> クラスは、複数の同時読み取り操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-595">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="0a064-596">が正常に認証されるまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-596">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="0a064-597">認証するには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>の1つを呼び出すか、<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> の各メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a064-597">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-598">次のコード例は、非同期の読み取り操作を開始する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-598">The following code example demonstrates starting an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#8)]
 [!code-csharp[NclSslClientAsync#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#8)]  
 [!code-vb[NclSslClientAsync#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientAsync/VB/clientasync.vb#8)]  

 [!code-cpp[NclSslClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#4)]
 [!code-csharp[NclSslClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#4)] 
 [!code-vb[NclSslClientAsync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientAsync/VB/clientasync.vb#4)]  

  
 <span data-ttu-id="0a064-599">読み取りが完了すると、次のメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-599">The following method is called when the read completes.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
 [!code-vb[NclSslClientAsync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientAsync/VB/clientasync.vb#5)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-600"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="0a064-600"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-601"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0a064-601"><paramref name="offset" /> is less than zero.</span></span>

<span data-ttu-id="0a064-602">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-602">-or-</span></span>

<span data-ttu-id="0a064-603"><paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0a064-603"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  

<span data-ttu-id="0a064-604">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-604">-or-</span></span> 
 <span data-ttu-id="0a064-605"><paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0a064-605"><paramref name="offset" /> + count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a064-606">読み取り操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-606">The read operation failed.</span></span>  
  
 <span data-ttu-id="0a064-607">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-607">-or-</span></span>  
  
 <span data-ttu-id="0a064-608">暗号化が使用されていますが、データを復号化できませんでした。</span><span class="sxs-lookup"><span data-stu-id="0a064-608">Encryption is in use, but the data could not be decrypted.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-609">既に実行中の読み取り操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="0a064-609">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-610">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-610">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-611">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-611">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback asyncCallback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="sslStream.BeginWrite (buffer, offset, count, asyncCallback, asyncState)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="asyncState" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0a064-612">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="0a064-612">A <see cref="T:System.Byte" /> array that supplies the bytes to be written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="0a064-613">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="0a064-613">The zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="0a064-614"><paramref name="buffer" /> から読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-614">An <see cref="T:System.Int32" /> value that specifies the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <param name="asyncCallback"><span data-ttu-id="0a064-615">書き込み操作の完了時に呼び出すメソッドを参照する <see cref="T:System.AsyncCallback" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="0a064-615">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the write operation is complete.</span></span></param>
        <param name="asyncState"><span data-ttu-id="0a064-616">書き込み操作に関する情報を格納するユーザー定義のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-616">A user-defined object that contains information about the write operation.</span></span> <span data-ttu-id="0a064-617">このオブジェクトは、操作の完了時に <paramref name="asyncCallback" /> デリゲートに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-617">This object is passed to the <paramref name="asyncCallback" /> delegate when the operation completes.</span></span></param>
        <summary><span data-ttu-id="0a064-618">指定したバッファーからストリームに <see cref="T:System.Byte" /> を書き込む非同期書き込み操作を開始します。</span><span class="sxs-lookup"><span data-stu-id="0a064-618">Begins an asynchronous write operation that writes <see cref="T:System.Byte" />s from the specified buffer to the stream.</span></span></summary>
        <returns><span data-ttu-id="0a064-619">非同期操作の状態を示す <see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-619">An <see cref="T:System.IAsyncResult" /> object indicating the status of the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a064-620">次のコード例は、このメソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-620">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslServerAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#5)]
 [!code-csharp[NclSslServerAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-621"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-621"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-622"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0a064-622"><paramref name="offset" /> is less than zero.</span></span>
  
<span data-ttu-id="0a064-623">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-623">-or-</span></span> 
<span data-ttu-id="0a064-624"><paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0a064-624"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="0a064-625">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-625">-or-</span></span> 
 <span data-ttu-id="0a064-626"><paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0a064-626"><paramref name="offset" /> + count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a064-627">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-627">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-628">既に実行中の書き込み操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="0a064-628">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-629">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-629">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-630">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-630">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Net.Security.SslStream.CanRead" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-631">基になるストリームが読み取り可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-631">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is readable.</span></span></summary>
        <value><span data-ttu-id="0a064-632">認証が行われており、基になるストリームが読み取り可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-632"><see langword="true" /> if authentication has occurred and the underlying stream is readable; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-633">認証が成功した場合、このプロパティは、基になるストリームで <xref:System.IO.Stream.CanRead%2A> を呼び出すことによって返される値を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-633">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanRead%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="0a064-634">基になるストリームは、<xref:System.Net.Security.SslStream> クラスのインスタンスを作成するときに指定します。</span><span class="sxs-lookup"><span data-stu-id="0a064-634">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-635">次のコード例は、このプロパティの値を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-635">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
[!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
[!code-vb[NclSslServerSync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.Net.Security.SslStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-636">基になるストリームがシークできるかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-636">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is seekable.</span></span></summary>
        <value><span data-ttu-id="0a064-637">このプロパティは常に <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-637">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-638"><xref:System.Net.Security.SslStream> オブジェクトまたはその基になるストリームの位置を設定しないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="0a064-638">Do not attempt to set the position of the <xref:System.Net.Security.SslStream> object or its underlying stream.</span></span>  
  
 <span data-ttu-id="0a064-639">基になるストリームは、<xref:System.Net.Security.SslStream> クラスのインスタンスを作成するときに指定します。</span><span class="sxs-lookup"><span data-stu-id="0a064-639">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.Stream.CanSeek" />
        <altmember cref="P:System.Net.Security.SslStream.Position" />
      </Docs>
    </Member>
    <Member MemberName="CanTimeout">
      <MemberSignature Language="C#" Value="public override bool CanTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanTimeout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTimeout : bool" Usage="System.Net.Security.SslStream.CanTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-640">基になるストリームがタイムアウトをサポートしているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-640">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream supports time-outs.</span></span></summary>
        <value><span data-ttu-id="0a064-641">基になるストリームがタイムアウトをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-641"><see langword="true" /> if the underlying stream supports time-outs; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-642">このプロパティは、基になるストリームで <xref:System.IO.Stream.CanTimeout%2A> を呼び出すことによって返される値を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-642">This property returns the value returned by invoking <xref:System.IO.Stream.CanTimeout%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="0a064-643">基になるストリームは、<xref:System.Net.Security.SslStream> クラスのインスタンスを作成するときに指定します。</span><span class="sxs-lookup"><span data-stu-id="0a064-643">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-644">次のコード例は、このプロパティの値を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-644">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
[!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
[!code-vb[NclSslServerSync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#5)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Net.Security.SslStream.CanWrite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CanWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-645">基になるストリームが書き込み可能かどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-645">Gets a <see cref="T:System.Boolean" /> value that indicates whether the underlying stream is writable.</span></span></summary>
        <value><span data-ttu-id="0a064-646">認証が行われており、基になるストリームが書き込み可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-646"><see langword="true" /> if authentication has occurred and the underlying stream is writable; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-647">認証が成功した場合、このプロパティは、基になるストリームで <xref:System.IO.Stream.CanWrite%2A> を呼び出すことによって返される値を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-647">If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanWrite%2A> on the underlying stream.</span></span>  
  
 <span data-ttu-id="0a064-648">基になるストリームは、<xref:System.Net.Security.SslStream> クラスのインスタンスを作成するときに指定します。</span><span class="sxs-lookup"><span data-stu-id="0a064-648">The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-649">次のコード例は、このプロパティの値を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-649">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
[!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
[!code-vb[NclSslServerSync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#5)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertRevocationStatus">
      <MemberSignature Language="C#" Value="public virtual bool CheckCertRevocationStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertRevocationStatus" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CheckCertRevocationStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckCertRevocationStatus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckCertRevocationStatus : bool" Usage="System.Net.Security.SslStream.CheckCertRevocationStatus" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CheckCertRevocationStatus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-650">証明書検証プロセスで、証明書失効リストを照合するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-650">Gets a <see cref="T:System.Boolean" /> value that indicates whether the certificate revocation list is checked during the certificate validation process.</span></span></summary>
        <value><span data-ttu-id="0a064-651">証明書失効リストが照合される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-651"><see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-652">証明書失効リストには、発行者によって失効された証明書が含まれています。</span><span class="sxs-lookup"><span data-stu-id="0a064-652">The certificate revocation list contains certificates that have been revoked by the issuer.</span></span> <span data-ttu-id="0a064-653">一覧を確認するとパフォーマンスが低下しますが、アプリケーションのセキュリティが向上します。</span><span class="sxs-lookup"><span data-stu-id="0a064-653">Checking the list negatively impacts performance but improves application security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-654">次のコード例は、このプロパティの値を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-654">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]
[!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]  
[!code-vb[NclSslServerSync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#5)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.CipherAlgorithmType CipherAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherAlgorithm As CipherAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::CipherAlgorithmType CipherAlgorithm { System::Security::Authentication::CipherAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.CipherAlgorithm : System.Security.Authentication.CipherAlgorithmType" Usage="System.Net.Security.SslStream.CipherAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.CipherAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-655">この <see cref="T:System.Net.Security.SslStream" /> が使用する一括暗号化アルゴリズムを識別する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-655">Gets a value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <value><span data-ttu-id="0a064-656">この <see cref="T:System.Net.Security.SslStream" />によって使用される一括暗号化アルゴリズムを識別する値。</span><span class="sxs-lookup"><span data-stu-id="0a064-656">A value that identifies the bulk encryption algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-657"><xref:System.Net.Security.EncryptionPolicy.NoEncryption> 列挙値を使用して <xref:System.Net.Security.SslStream> インスタンスを構築する場合、<xref:System.Net.Security.SslStream.CipherAlgorithm%2A> プロパティには <xref:System.Security.Authentication.CipherAlgorithmType.Null> の値が必要です。</span><span class="sxs-lookup"><span data-stu-id="0a064-657">A value of <xref:System.Security.Authentication.CipherAlgorithmType.Null> is required for the <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property when the <xref:System.Net.Security.EncryptionPolicy.NoEncryption> enumeration value is used to construct a <xref:System.Net.Security.SslStream> instance.</span></span>  
  
 [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] <span data-ttu-id="0a064-658">と [!INCLUDE[winxp](~/includes/winxp-md.md)] は <xref:System.Security.Authentication.CipherAlgorithmType.Null> 値をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-658">and [!INCLUDE[winxp](~/includes/winxp-md.md)] do not support the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value.</span></span> <span data-ttu-id="0a064-659">したがって、<xref:System.Security.Authentication.CipherAlgorithmType.Null> 値を使用して <xref:System.Net.Security.SslStream> インスタンスを作成しても、<xref:System.Net.Security.EncryptionPolicy> プロパティは <xref:System.Security.Authentication.CipherAlgorithmType.None>されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-659">So even if the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is used to construct the <xref:System.Net.Security.SslStream> instance, the <xref:System.Net.Security.EncryptionPolicy> property will be <xref:System.Security.Authentication.CipherAlgorithmType.None>.</span></span> <span data-ttu-id="0a064-660"><xref:System.Security.Authentication.CipherAlgorithmType.Null> 値は、Windows Vista 以降でのみ返されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-660">The <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is only returned on Windows Vista and later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-661">次のコード例では、指定されたストリームの暗号化設定を表示します。</span><span class="sxs-lookup"><span data-stu-id="0a064-661">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-662">認証プロセスの完了前に <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-662">The <see cref="P:System.Net.Security.SslStream.CipherAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CipherStrength">
      <MemberSignature Language="C#" Value="public virtual int CipherStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CipherStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.CipherStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CipherStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CipherStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CipherStrength : int" Usage="System.Net.Security.SslStream.CipherStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.CipherStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-663">この <see cref="T:System.Net.Security.SslStream" /> が使用する暗号アルゴリズムの強度を識別する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-663">Gets a value that identifies the strength of the cipher algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <value><span data-ttu-id="0a064-664">アルゴリズムの強度をビット単位で指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-664">An <see cref="T:System.Int32" /> value that specifies the strength of the algorithm, in bits.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-665">このプロパティの値は、認証が行われるまで0です。</span><span class="sxs-lookup"><span data-stu-id="0a064-665">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="0a064-666">このプロパティは、次のいずれかの値を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-666">This property returns one of the following values:</span></span>  
  
-   <span data-ttu-id="0a064-667">0</span><span class="sxs-lookup"><span data-stu-id="0a064-667">0</span></span>  
  
-   <span data-ttu-id="0a064-668">40</span><span class="sxs-lookup"><span data-stu-id="0a064-668">40</span></span>  
  
-   <span data-ttu-id="0a064-669">56</span><span class="sxs-lookup"><span data-stu-id="0a064-669">56</span></span>  
  
-   <span data-ttu-id="0a064-670">80</span><span class="sxs-lookup"><span data-stu-id="0a064-670">80</span></span>  
  
-   <span data-ttu-id="0a064-671">128</span><span class="sxs-lookup"><span data-stu-id="0a064-671">128</span></span>  
  
-   <span data-ttu-id="0a064-672">168</span><span class="sxs-lookup"><span data-stu-id="0a064-672">168</span></span>  
  
-   <span data-ttu-id="0a064-673">192</span><span class="sxs-lookup"><span data-stu-id="0a064-673">192</span></span>  
  
-   <span data-ttu-id="0a064-674">256</span><span class="sxs-lookup"><span data-stu-id="0a064-674">256</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-675">次のコード例では、指定されたストリームの暗号化設定を表示します。</span><span class="sxs-lookup"><span data-stu-id="0a064-675">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="sslStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="0a064-676">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-676"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="0a064-677"><see cref="T:System.Net.Security.SslStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="0a064-677">Releases the unmanaged resources used by the <see cref="T:System.Net.Security.SslStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-678">このメソッドは、パブリック `Dispose()` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-678">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="0a064-679">`Dispose()` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a064-679">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="0a064-680"><xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して `Dispose` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a064-680"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="0a064-681">`disposing` パラメーターが true の場合、このメソッドは、この <xref:System.Net.Security.SslStream> が参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="0a064-681">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.SslStream> references.</span></span> <span data-ttu-id="0a064-682">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a064-682">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0a064-683">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="0a064-683">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="0a064-684">をオーバーライドする場合は <see langword="Dispose(Boolean)" /> 以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-684">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="0a064-685"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-685">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="0a064-686"><see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-686">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="sslStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a064-687"><see cref="T:System.Net.Security.SslStream" /> によって使用されているアンマネージドまたはマネージド リソースを非同期に解放します。</span><span class="sxs-lookup"><span data-stu-id="0a064-687">Asynchronously releases the unmanaged and managed resources used by the <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <returns><span data-ttu-id="0a064-688">非同期の破棄操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="0a064-688">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-689">このメソッドを使用すると、メインスレッドをブロックせずに、リソースを集中的に使用する dispose 操作を実行できます。</span><span class="sxs-lookup"><span data-stu-id="0a064-689">This method enables you to perform a resource-intensive dispose operation without blocking the main thread.</span></span> 

 <span data-ttu-id="0a064-690">このメソッドは、<xref:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen> が `false`場合にも内部ストリームを破棄します。それ以外の場合は、内部ストリームがフラッシュされます。</span><span class="sxs-lookup"><span data-stu-id="0a064-690">This method also disposes the inner stream when <xref:System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen> is `false`; otherwise, the inner stream is just flushed.</span></span>
 
 <span data-ttu-id="0a064-691">`DisposeAsync` を呼び出すと、<xref:System.Net.Security.SslStream> によって使用されるリソースを他の目的で再割り当てできます。</span><span class="sxs-lookup"><span data-stu-id="0a064-691">Calling `DisposeAsync` allows the resources used by the <xref:System.Net.Security.SslStream> to be reallocated for other purposes.</span></span> <span data-ttu-id="0a064-692">詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-692">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsClient">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsClient (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsClient : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsClient : IAsyncResult -&gt; unit" Usage="sslStream.EndAuthenticateAsClient asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsClient(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="0a064-693"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="0a064-693">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="0a064-694"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の以前の呼び出しで開始した保留中の非同期のサーバー認証操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="0a064-694">Ends a pending asynchronous server authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-695">操作が完了していない場合、このメソッドは、処理が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="0a064-695">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="0a064-696">認証が成功したら、<xref:System.Net.Security.SslStream.IsEncrypted%2A> と <xref:System.Net.Security.SslStream.IsSigned%2A> のプロパティを確認して、<xref:System.Net.Security.SslStream>によって使用されているセキュリティサービスを特定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-696">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="0a064-697"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> プロパティを調べて、相互認証が行われたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="0a064-697">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0a064-698">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-698">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-699">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-699">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="0a064-700">この操作を同期的に実行するには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> メソッドのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-700">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-701"><paramref name="asyncResult" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-701"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-702"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="0a064-702"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-703">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-703">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-704">完了する保留中のサーバー認証がありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-704">There is no pending server authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAuthenticateAsServer">
      <MemberSignature Language="C#" Value="public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndAuthenticateAsServer(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndAuthenticateAsServer (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndAuthenticateAsServer(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndAuthenticateAsServer : IAsyncResult -&gt; unit&#xA;override this.EndAuthenticateAsServer : IAsyncResult -&gt; unit" Usage="sslStream.EndAuthenticateAsServer asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndAuthenticateAsServer(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="0a064-705"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="0a064-705">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></param>
        <summary><span data-ttu-id="0a064-706"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> の以前の呼び出しで開始した保留中の非同期のクライアント認証操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="0a064-706">Ends a pending asynchronous client authentication operation started with a previous call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-707">操作が完了していない場合、このメソッドは、処理が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="0a064-707">If the operation has not completed, this method blocks until it does.</span></span> <span data-ttu-id="0a064-708">認証が成功したら、<xref:System.Net.Security.SslStream.IsEncrypted%2A> と <xref:System.Net.Security.SslStream.IsSigned%2A> のプロパティを確認して、<xref:System.Net.Security.SslStream>によって使用されているセキュリティサービスを特定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-708">When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>.</span></span> <span data-ttu-id="0a064-709"><xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> プロパティを調べて、相互認証が行われたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="0a064-709">Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.</span></span>  
  
 <span data-ttu-id="0a064-710">認証に失敗すると、<xref:System.Security.Authentication.AuthenticationException>が表示され、この <xref:System.Net.Security.SslStream> は使用できなくなります。</span><span class="sxs-lookup"><span data-stu-id="0a064-710">If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable.</span></span> <span data-ttu-id="0a064-711">このオブジェクトを閉じて、ガベージコレクターによって収集されるように、このオブジェクトへのすべての参照を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0a064-711">You should close this object and remove all references to it so that it can be collected by the garbage collector.</span></span>  
  
 <span data-ttu-id="0a064-712">この操作を同期的に実行するには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> メソッドのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-712">To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-713"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="0a064-713"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-714"><see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="0a064-714"><paramref name="asyncResult" /> was not created by a call to <see cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsClient" />.</span></span></exception>
        <exception cref="T:System.Security.Authentication.AuthenticationException"><span data-ttu-id="0a064-715">認証に失敗し、このオブジェクトが使用できない状態のままになっています。</span><span class="sxs-lookup"><span data-stu-id="0a064-715">The authentication failed and left this object in an unusable state.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-716">完了する保留中のクライアント認証がありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-716">There is no pending client authentication to complete.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="sslStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndRead(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="0a064-717"><see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="0a064-717">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="0a064-718"><see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の以前の呼び出しで開始した非同期読み取り操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="0a064-718">Ends an asynchronous read operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="0a064-719">基になるストリームから読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-719">A <see cref="T:System.Int32" /> value that specifies the number of bytes read from the underlying stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-720">操作が完了していない場合、このメソッドは、処理が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="0a064-720">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="0a064-721">この操作を同期的に実行するには、<xref:System.Net.Security.SslStream.Read%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-721">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Read%2A> method.</span></span>  
  
 <span data-ttu-id="0a064-722">が正常に認証されるまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-722">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="0a064-723">認証するには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>の1つを呼び出すか、<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> の各メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a064-723">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-724">次のコード例は、非同期の読み取り操作を終了する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-724">The following code example demonstrates ending an asynchronous read operation.</span></span>  
  
 [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]
 [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]  
 [!code-vb[NclSslClientAsync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientAsync/VB/clientasync.vb#5)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-725"><paramref name="asyncResult" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="0a064-725"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-726"><see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="0a064-726"><paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-727">完了する保留中の読み取り操作がありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-727">There is no pending read operation to complete.</span></span>

<span data-ttu-id="0a064-728">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-728">-or-</span></span>

<span data-ttu-id="0a064-729">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-729">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a064-730">読み取り操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-730">The read operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="sslStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.EndWrite(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="0a064-731"><see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の呼び出しによって返される <see cref="T:System.IAsyncResult" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="0a064-731">An <see cref="T:System.IAsyncResult" /> instance returned by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /></span></span></param>
        <summary><span data-ttu-id="0a064-732"><see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> の以前の呼び出しで開始した非同期書き込み操作を終了します。</span><span class="sxs-lookup"><span data-stu-id="0a064-732">Ends an asynchronous write operation started with a previous call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-733">操作が完了していない場合、このメソッドは、処理が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="0a064-733">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="0a064-734">アプリケーションは、正常に認証されるまでこのメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-734">An application cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="0a064-735">認証するには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>、または <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> メソッドのいずれかを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a064-735">To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="0a064-736">この操作を同期的に実行するには、<xref:System.Net.Security.SslStream.Write%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-736">To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-737">次のコード例は、非同期書き込み操作を終了する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-737">The following code example demonstrates ending an asynchronous write operation.</span></span>  
  
 [!code-cpp[NclSslServerAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#4)]
 [!code-csharp[NclSslServerAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-738"><paramref name="asyncResult" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-738"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-739"><see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> への呼び出しで <paramref name="asyncResult" /> が作成されませんでした。</span><span class="sxs-lookup"><span data-stu-id="0a064-739"><paramref name="asyncResult" /> was not created by a call to <see cref="M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-740">完了する保留中の書き込み操作がありません。</span><span class="sxs-lookup"><span data-stu-id="0a064-740">There is no pending write operation to complete.</span></span>

<span data-ttu-id="0a064-741">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-741">-or-</span></span>

<span data-ttu-id="0a064-742">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-742">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a064-743">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-743">The write operation failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="sslStream.Flush " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Flush</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a064-744">バッファーに格納されたデータが基になるデバイスに書き込まれるようにします。</span><span class="sxs-lookup"><span data-stu-id="0a064-744">Causes any buffered data to be written to the underlying device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-745">このメソッドは、基になるストリームで <xref:System.IO.Stream.Flush%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a064-745">This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-746">次のコード例は、このメソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-746">The following code example demonstrates calling this method.</span></span>  
  
 [!code-cpp[NclSslClientSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#5)]
 [!code-csharp[NclSslClientSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#5)]  
 [!code-vb[NclSslClientSync#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientSync/VB/clientsync.vb#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.HashAlgorithmType HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashAlgorithm As HashAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::HashAlgorithmType HashAlgorithm { System::Security::Authentication::HashAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Authentication.HashAlgorithmType" Usage="System.Net.Security.SslStream.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.HashAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-747">メッセージ認証コード (MAC: Message Authentication Code) の生成に使用するアルゴリズムを取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-747">Gets the algorithm used for generating message authentication codes (MACs).</span></span></summary>
        <value><span data-ttu-id="0a064-748">メッセージ認証コード (Mac) を生成するために使用されるアルゴリズム。</span><span class="sxs-lookup"><span data-stu-id="0a064-748">The algorithm used for generating message authentication codes (MACs).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-749">メッセージ認証アルゴリズムは、改ざんと偽造を検出するために使用されるメッセージハッシュと署名を生成します。</span><span class="sxs-lookup"><span data-stu-id="0a064-749">Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-750">次のコード例では、指定されたストリームの暗号化設定を表示します。</span><span class="sxs-lookup"><span data-stu-id="0a064-750">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-751">認証プロセスの完了前に <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-751">The <see cref="P:System.Net.Security.SslStream.HashAlgorithm" /> property was accessed before the completion of the authentication process or the authentication process failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashStrength">
      <MemberSignature Language="C#" Value="public virtual int HashStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HashStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.HashStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HashStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HashStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HashStrength : int" Usage="System.Net.Security.SslStream.HashStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.HashStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-752">このインスタンスが使用するハッシュ アルゴリズムの強度を識別する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-752">Gets a value that identifies the strength of the hash algorithm used by this instance.</span></span></summary>
        <value><span data-ttu-id="0a064-753"><see cref="T:System.Int32" /> アルゴリズムの強度をビット単位で指定する <see cref="T:System.Security.Authentication.HashAlgorithmType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-753">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.HashAlgorithmType" /> algorithm, in bits.</span></span> <span data-ttu-id="0a064-754">有効値は 128 または 160 です。</span><span class="sxs-lookup"><span data-stu-id="0a064-754">Valid values are 128 or 160.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-755">このプロパティの値は、認証が行われるまで0です。</span><span class="sxs-lookup"><span data-stu-id="0a064-755">The value of this property is zero until the authentication occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-756">次のコード例では、指定されたストリームの暗号化設定を表示します。</span><span class="sxs-lookup"><span data-stu-id="0a064-756">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.Security.SslStream.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-757">認証が成功したかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-757">Gets a <see cref="T:System.Boolean" /> value that indicates whether authentication was successful.</span></span></summary>
        <value><span data-ttu-id="0a064-758">認証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-758"><see langword="true" /> if successful authentication occurred; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-759">クライアントは、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> または <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> メソッドを呼び出すことによって認証を行います。</span><span class="sxs-lookup"><span data-stu-id="0a064-759">Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods.</span></span> <span data-ttu-id="0a064-760">サーバーは、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> または <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> メソッドを呼び出すことによって認証されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-760">Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-761">次のコード例は、このプロパティの値を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-761">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
[!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
[!code-vb[NclSslServerSync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#4)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncrypted">
      <MemberSignature Language="C#" Value="public override bool IsEncrypted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncrypted" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsEncrypted" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsEncrypted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEncrypted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEncrypted : bool" Usage="System.Net.Security.SslStream.IsEncrypted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsEncrypted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-762">この <see cref="T:System.Net.Security.SslStream" /> がデータの暗号化を使用するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-762">Gets a <see cref="T:System.Boolean" /> value that indicates whether this <see cref="T:System.Net.Security.SslStream" /> uses data encryption.</span></span></summary>
        <value><span data-ttu-id="0a064-763">ネットワーク上で送信する前にデータを暗号化し、データがリモート エンドポイントに到達したときに復号化する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-763"><see langword="true" /> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-764">暗号化は、データのプライバシーを保護するのに役立ちます。つまり、データの転送中に第三者によって解読されることがないようにするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a064-764">Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-765">次のコード例は、このプロパティの値を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-765">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
[!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
[!code-vb[NclSslServerSync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#4)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutuallyAuthenticated">
      <MemberSignature Language="C#" Value="public override bool IsMutuallyAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutuallyAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsMutuallyAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMutuallyAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMutuallyAuthenticated : bool" Usage="System.Net.Security.SslStream.IsMutuallyAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsMutuallyAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-766">サーバーとクライアントの両方が認証されているかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-766">Gets a <see cref="T:System.Boolean" /> value that indicates whether both server and client have been authenticated.</span></span></summary>
        <value><span data-ttu-id="0a064-767">サーバーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-767"><see langword="true" /> if the server has been authenticated; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-768">サーバーで認証用の証明書を提供する必要がある場合は、サーバーによって相互認証が指定されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-768">Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-769">次のコード例は、このプロパティの値を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-769">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
[!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
[!code-vb[NclSslServerSync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#4)]
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.Security.SslStream.AuthenticateAsServer" />
        <altmember cref="Overload:System.Net.Security.SslStream.BeginAuthenticateAsServer" />
      </Docs>
    </Member>
    <Member MemberName="IsServer">
      <MemberSignature Language="C#" Value="public override bool IsServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsServer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsServer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsServer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServer : bool" Usage="System.Net.Security.SslStream.IsServer" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsServer</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-770">この <see cref="T:System.Net.Security.SslStream" /> が使用する接続のローカル側がサーバーとして認証されたかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-770">Gets a <see cref="T:System.Boolean" /> value that indicates whether the local side of the connection used by this <see cref="T:System.Net.Security.SslStream" /> was authenticated as the server.</span></span></summary>
        <value><span data-ttu-id="0a064-771">ローカル エンドポイントが、認証された接続のサーバー側として正常に認証された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-771"><see langword="true" /> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-772">認証に失敗した場合、または発生しなかった場合、このプロパティは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-772">If authentication failed or did not occur, this property returns `false`.</span></span>  
  
 <span data-ttu-id="0a064-773">サーバーとして認証するには、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> または <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a064-773">To authenticate as the server, call the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-774">次のコード例は、このプロパティの値を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-774">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
[!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
[!code-vb[NclSslServerSync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#4)]
 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSigned">
      <MemberSignature Language="C#" Value="public override bool IsSigned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSigned" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.IsSigned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSigned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSigned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSigned : bool" Usage="System.Net.Security.SslStream.IsSigned" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.IsSigned</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-775">このストリームを使用して送信されるデータに署名するかどうかを示す <see cref="T:System.Boolean" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-775">Gets a <see cref="T:System.Boolean" /> value that indicates whether the data sent using this stream is signed.</span></span></summary>
        <value><span data-ttu-id="0a064-776">データの送信前に署名する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-776"><see langword="true" /> if the data is signed before being transmitted; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-777">データの署名は、データの整合性を保護するのに役立ちます。つまり、転送中にデータが改ざんされたかどうかを受信者が判断するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="0a064-777">Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-778">次のコード例は、このプロパティの値を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-778">The following code example demonstrates displaying the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]
[!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]  
[!code-vb[NclSslServerSync#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#4)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As ExchangeAlgorithmType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::ExchangeAlgorithmType KeyExchangeAlgorithm { System::Security::Authentication::ExchangeAlgorithmType get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeAlgorithm : System.Security.Authentication.ExchangeAlgorithmType" Usage="System.Net.Security.SslStream.KeyExchangeAlgorithm" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeAlgorithm</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExchangeAlgorithmType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-779">この <see cref="T:System.Net.Security.SslStream" /> が使用するキー交換アルゴリズムを取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-779">Gets the key exchange algorithm used by this <see cref="T:System.Net.Security.SslStream" />.</span></span></summary>
        <value><span data-ttu-id="0a064-780"><see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-780">An <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-781">このプロパティの値は、認証が行われるまで <xref:System.Security.Authentication.ExchangeAlgorithmType.None> されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-781">The value of this property is <xref:System.Security.Authentication.ExchangeAlgorithmType.None> until the authentication occurs.</span></span>  
  
 <span data-ttu-id="0a064-782">キー交換アルゴリズムは、共有キーの生成に使用される情報を保護します。</span><span class="sxs-lookup"><span data-stu-id="0a064-782">The key exchange algorithm protects information used to generate shared keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-783">次のコード例では、指定されたストリームの暗号化設定を表示します。</span><span class="sxs-lookup"><span data-stu-id="0a064-783">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeStrength">
      <MemberSignature Language="C#" Value="public virtual int KeyExchangeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyExchangeStrength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeStrength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeyExchangeStrength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyExchangeStrength : int" Usage="System.Net.Security.SslStream.KeyExchangeStrength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.KeyExchangeStrength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-784">このインスタンスが使用するキー交換アルゴリズムの強度を識別する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-784">Gets a value that identifies the strength of the key exchange algorithm used by this instance.</span></span></summary>
        <value><span data-ttu-id="0a064-785"><see cref="T:System.Int32" /> アルゴリズムの強度をビット単位で指定する <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-785">An <see cref="T:System.Int32" /> value that specifies the strength of the <see cref="T:System.Security.Authentication.ExchangeAlgorithmType" /> algorithm, in bits.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-786">このプロパティの値は、認証が行われるまで0です。</span><span class="sxs-lookup"><span data-stu-id="0a064-786">The value of this property is zero until the authentication occurs.</span></span>  
  
 <span data-ttu-id="0a064-787">一般的なシナリオでは、このプロパティの値は次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="0a064-787">In common scenarios, the value of this property is one of the following:</span></span>  
  
-   <span data-ttu-id="0a064-788">512</span><span class="sxs-lookup"><span data-stu-id="0a064-788">512</span></span>  
  
-   <span data-ttu-id="0a064-789">768</span><span class="sxs-lookup"><span data-stu-id="0a064-789">768</span></span>  
  
-   <span data-ttu-id="0a064-790">1024</span><span class="sxs-lookup"><span data-stu-id="0a064-790">1024</span></span>  
  
-   <span data-ttu-id="0a064-791">2048</span><span class="sxs-lookup"><span data-stu-id="0a064-791">2048</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-792">次のコード例では、指定されたストリームの暗号化設定を表示します。</span><span class="sxs-lookup"><span data-stu-id="0a064-792">The following code example displays the cryptography settings for the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]  

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.Net.Security.SslStream.Length" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-793">基になるストリームの長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-793">Gets the length of the underlying stream.</span></span></summary>
        <value><span data-ttu-id="0a064-794">基になるストリームの長さ。</span><span class="sxs-lookup"><span data-stu-id="0a064-794">The length of the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-795">このプロパティは、基になるストリームで <xref:System.IO.Stream.Length%2A> を呼び出すことによって返される値を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-795">This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream.</span></span> <span data-ttu-id="0a064-796">基になるストリームがシーク可能でない場合、通常、このメソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="0a064-796">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="0a064-797">基になるストリームのランタイム型によって、スローされる例外の実行時の型が決まります。</span><span class="sxs-lookup"><span data-stu-id="0a064-797">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-798">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-798">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LocalCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.LocalCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ LocalCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.Security.SslStream.LocalCertificate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.LocalCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-799">ローカル エンドポイントの認証に使用する証明書を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-799">Gets the certificate used to authenticate the local endpoint.</span></span></summary>
        <value><span data-ttu-id="0a064-800">認証用に提供された証明書を表す X509Certificate オブジェクト。証明書が提供されなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-800">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a064-801">次のコード例は、このプロパティによって返される証明書を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-801">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
[!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
[!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
[!code-vb[NclSslServerSync#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#6)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-802">認証に失敗したか、認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-802">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NegotiatedApplicationProtocol">
      <MemberSignature Language="C#" Value="public System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.SslApplicationProtocol NegotiatedApplicationProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NegotiatedApplicationProtocol As SslApplicationProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::SslApplicationProtocol NegotiatedApplicationProtocol { System::Net::Security::SslApplicationProtocol get(); };" />
      <MemberSignature Language="F#" Value="member this.NegotiatedApplicationProtocol : System.Net.Security.SslApplicationProtocol" Usage="System.Net.Security.SslStream.NegotiatedApplicationProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslApplicationProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NegotiatedCipherSuite">
      <MemberSignature Language="C#" Value="public virtual System.Net.Security.TlsCipherSuite NegotiatedCipherSuite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Security.TlsCipherSuite NegotiatedCipherSuite" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.NegotiatedCipherSuite" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NegotiatedCipherSuite As TlsCipherSuite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Security::TlsCipherSuite NegotiatedCipherSuite { System::Net::Security::TlsCipherSuite get(); };" />
      <MemberSignature Language="F#" Value="member this.NegotiatedCipherSuite : System.Net.Security.TlsCipherSuite" Usage="System.Net.Security.SslStream.NegotiatedCipherSuite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Security.TlsCipherSuite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-803">この接続に対してネゴシエートされた暗号スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-803">Gets the cipher suite which was negotiated for this connection.</span></span></summary>
        <value><span data-ttu-id="0a064-804">この接続に対してネゴシエートされた暗号スイートを識別する列挙値の1つ。</span><span class="sxs-lookup"><span data-stu-id="0a064-804">One of the enumeration values that identifies the cipher suite which was negotiated for this connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="0a064-805">このプロパティは、基になる SSL/TLS 実装によってクライアントとサーバー間の通信で使用される暗号スイートを取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-805">This property gets the cipher suite that is going to be used in the communication between a client and server by the underlying SSL/TLS implementation.</span></span> <span data-ttu-id="0a064-806"><xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> または <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>の呼び出しが成功した後にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="0a064-806">It is only available after a successful call to <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-807">認証プロセスの完了前に、プロパティにアクセスしました。または、認証プロセスでエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-807">The property was accessed before the completion of the authentication process or the authentication process failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.Net.Security.SslStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-808">基になるストリーム内の現在位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0a064-808">Gets or sets the current position in the underlying stream.</span></span></summary>
        <value><span data-ttu-id="0a064-809">基になるストリームの現在の位置。</span><span class="sxs-lookup"><span data-stu-id="0a064-809">The current position in the underlying stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-810">このプロパティは、基になるストリームで <xref:System.IO.Stream.Position%2A> を呼び出すことによって返される値を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-810">This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream.</span></span> <span data-ttu-id="0a064-811">基になるストリームがシーク可能でない場合、通常、このメソッドは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="0a064-811">If the underlying stream is not seekable, this method typically throws an exception.</span></span> <span data-ttu-id="0a064-812">基になるストリームのランタイム型によって、スローされる例外の実行時の型が決まります。</span><span class="sxs-lookup"><span data-stu-id="0a064-812">The run-time type of the underlying stream determines the run-time type of the exception that is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-813">このプロパティの設定は、サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-813">Setting this property is not supported.</span></span>  
  
<span data-ttu-id="0a064-814">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-814">-or-</span></span> 
<span data-ttu-id="0a064-815">基になるストリームが <see cref="T:System.Net.Sockets.NetworkStream" /> の場合、このプロパティの値の取得はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-815">Getting the value of this property is not supported when the underlying stream is a <see cref="T:System.Net.Sockets.NetworkStream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="sslStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Read(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0a064-816">このストリームから読み取ったバイトを受け取る <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="0a064-816">A <see cref="T:System.Byte" /> array that receives the bytes read from this stream.</span></span></param>
        <param name="offset"><span data-ttu-id="0a064-817">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-817">A <see cref="T:System.Int32" /> that contains the zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="0a064-818">このストリームから読み取る最大バイト数を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-818">A <see cref="T:System.Int32" /> that contains the maximum number of bytes to read from this stream.</span></span></param>
        <summary><span data-ttu-id="0a064-819">このストリームからデータを読み取り、指定した配列に格納します。</span><span class="sxs-lookup"><span data-stu-id="0a064-819">Reads data from this stream and stores it in the specified array.</span></span></summary>
        <returns><span data-ttu-id="0a064-820">読み取るバイト数を指定する <see cref="T:System.Int32" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-820">A <see cref="T:System.Int32" /> value that specifies the number of bytes read.</span></span> <span data-ttu-id="0a064-821">読み取るデータがこれ以上存在しない場合は 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-821">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-822">メソッドは、ストリームから最大 `count` バイトを読み取り、`offset`で始まる `buffer` に格納します。</span><span class="sxs-lookup"><span data-stu-id="0a064-822">The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`.</span></span> <span data-ttu-id="0a064-823">複数の同時読み取り操作を実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-823">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="0a064-824">が正常に認証されるまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-824">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="0a064-825">認証するには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>の1つを呼び出すか、<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> の各メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a064-825">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="0a064-826">この操作を非同期に実行するには、<xref:System.Net.Security.SslStream.BeginRead%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-826">To perform this operation asynchronously, use the <xref:System.Net.Security.SslStream.BeginRead%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-827">次のコード例は、<xref:System.Net.Security.SslStream>からの読み取りを示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-827">The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.</span></span>  
  
 [!code-cpp[NclSslClientSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#6)]
 [!code-csharp[NclSslClientSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#6)]  
 [!code-vb[NclSslClientSync#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslClientSync/VB/clientsync.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-828"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="0a064-828"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-829"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0a064-829"><paramref name="offset" /> is less than zero.</span></span>
  
<span data-ttu-id="0a064-830">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-830">-or-</span></span>

<span data-ttu-id="0a064-831"><paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0a064-831"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  

<span data-ttu-id="0a064-832">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-832">-or-</span></span>

 <span data-ttu-id="0a064-833"><paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0a064-833"><paramref name="offset" /> + count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a064-834">読み取り操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-834">The read operation failed.</span></span> <span data-ttu-id="0a064-835">内部例外が存在する場合は、その例外をチェックしてエラーの原因を確認してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-835">Check the inner exception, if present to determine the cause of the failure.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-836">既に実行中の読み取り操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="0a064-836">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-837">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-837">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-838">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-838">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="sslStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0a064-839">このストリームから読み取ったバイトを受け取るバッファー。</span><span class="sxs-lookup"><span data-stu-id="0a064-839">The buffer that receives the bytes read from this stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="0a064-840">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="0a064-840">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="0a064-841">このストリームからデータを非同期的に読み取り、それを指定されたメモリ範囲に格納します。</span><span class="sxs-lookup"><span data-stu-id="0a064-841">Asynchronously reads data from this stream and stores it in the specified memory range.</span></span></summary>
        <returns><span data-ttu-id="0a064-842">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="0a064-842">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="0a064-843">その <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> プロパティの値には、<paramref name="buffer" /> に読み取られたバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="0a064-843">The value of its <see cref="P:System.Threading.Tasks.ValueTask`1.Result" /> property contains the total number of bytes read into <paramref name="buffer" />.</span></span> <span data-ttu-id="0a064-844">読み取るデータがこれ以上存在しない場合は 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-844">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-845">このメソッドは、`buffer`で使用できるデータの量を読み取ります。</span><span class="sxs-lookup"><span data-stu-id="0a064-845">This method reads as much data as is available into the `buffer`.</span></span> 
 
 <span data-ttu-id="0a064-846">複数の同時読み取り操作を実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-846">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="0a064-847">が正常に認証されるまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-847">You cannot call this method until you have successfully authenticated.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-848">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-848">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a064-849">読み取り操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-849">The read operation failed.</span></span> <span data-ttu-id="0a064-850">内部例外が存在する場合は、チェックしてエラーの原因を確認してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-850">Check the inner exception, if it is present, to determine the cause of the failure.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-851">既に実行中の読み取り操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="0a064-851">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-852">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-852">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="sslStream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0a064-853">このストリームから読み取ったバイトを受け取るバッファー。</span><span class="sxs-lookup"><span data-stu-id="0a064-853">The buffer that receives the bytes read from this stream.</span></span></param>
        <param name="offset"><span data-ttu-id="0a064-854">このストリームから読み取ったデータの格納を開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="0a064-854">The zero-based location in <paramref name="buffer" /> at which to begin storing the data read from this stream.</span></span></param>
        <param name="count"><span data-ttu-id="0a064-855">このストリームから読み取られた最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="0a064-855">The maximum number of bytes to read from this stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="0a064-856">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="0a064-856">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="0a064-857">このストリームからデータを非同期的に読み取り、それをバイト配列の指定の範囲に格納します。</span><span class="sxs-lookup"><span data-stu-id="0a064-857">Asynchronously reads data from this stream and stores it in the specified range of a byte array.</span></span></summary>
        <returns><span data-ttu-id="0a064-858">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="0a064-858">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="0a064-859">その <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティの値には、<paramref name="buffer" /> に読み取られたバイトの合計数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="0a064-859">The value of its <see cref="P:System.Threading.Tasks.Task`1.Result" /> property contains the total number of bytes read into <paramref name="buffer" />.</span></span> <span data-ttu-id="0a064-860">読み取るデータがこれ以上存在しない場合は 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-860">When there is no more data to be read, returns 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-861">メソッドは、ストリームから最大 `count` バイトを読み取り、`offset`で始まる `buffer` に格納します。</span><span class="sxs-lookup"><span data-stu-id="0a064-861">The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`.</span></span> 
 
 <span data-ttu-id="0a064-862">複数の同時読み取り操作を実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-862">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="0a064-863">が正常に認証されるまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-863">You cannot call this method until you have successfully authenticated.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-864"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="0a064-864"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0a064-865"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0a064-865"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="0a064-866">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-866">-or-</span></span> 
 <span data-ttu-id="0a064-867"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0a064-867"><paramref name="count" /> is less than 0.</span></span>
  
<span data-ttu-id="0a064-868">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-868">-or-</span></span> 
 <span data-ttu-id="0a064-869"><paramref name="count" /> が、<paramref name="buffer" /> から <paramref name="offset" /> を引いた長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0a064-869"><paramref name="count" /> is greater than the length of <paramref name="buffer" /> minus <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-870">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-870">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a064-871">読み取り操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-871">The read operation failed.</span></span> <span data-ttu-id="0a064-872">内部例外が存在する場合は、チェックしてエラーの原因を確認してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-872">Check the inner exception, if it is present, to determine the cause of the failure.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-873">既に実行中の読み取り操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="0a064-873">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-874">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-874">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="sslStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a064-875"><see cref="T:System.Net.Security.SslStream" /> から 1 バイトを読み取り、ストリーム内の位置を 1 バイト進めます。または、ストリームの末尾の場合は -1 を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-875">Reads a byte from the <see cref="T:System.Net.Security.SslStream" /> and advances the position within the stream by one byte, or returns -1 if at the end of the stream.</span></span></summary>
        <returns><span data-ttu-id="0a064-876"><see langword="Int32" /> にキャストされた符号なしバイト。ストリームの末尾の場合は -1。</span><span class="sxs-lookup"><span data-stu-id="0a064-876">The unsigned byte cast to an <see langword="Int32" />, or -1 if at the end of the stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks   
 <span data-ttu-id="0a064-877">複数の同時読み取り操作を実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-877">You cannot perform multiple simultaneous read operations.</span></span>  
  
 <span data-ttu-id="0a064-878">が正常に認証されるまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-878">You cannot call this method until you have successfully authenticated.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-879">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-879">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a064-880">読み取り操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-880">The read operation failed.</span></span> <span data-ttu-id="0a064-881">内部例外が存在する場合は、その例外をチェックしてエラーの原因を確認してください。</span><span class="sxs-lookup"><span data-stu-id="0a064-881">Check the inner exception, if present to determine the cause of the failure.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-882">既に実行中の読み取り操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="0a064-882">There is already a read operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-883">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-883">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public override int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.Net.Security.SslStream.ReadTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.ReadTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-884">読み取り操作がブロックしてデータを待機する時間をミリ秒単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0a064-884">Gets or sets the amount of time, expressed in milliseconds, a read operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="0a064-885">同期読み取り操作が失敗するまでの経過時間 (ミリ秒単位)。</span><span class="sxs-lookup"><span data-stu-id="0a064-885">The amount of time, in milliseconds, that elapses before a synchronous read operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-886">このプロパティは、基になるストリームで <xref:System.IO.Stream.ReadTimeout%2A> を呼び出すことによって返される値を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-886">This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="0a064-887">このプロパティを設定すると、基になるストリームの <xref:System.IO.Stream.ReadTimeout%2A> 値が、指定された値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-887">When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.</span></span>  
  
 <span data-ttu-id="0a064-888">基になるストリームが <xref:System.Net.Sockets.NetworkStream>の場合、<xref:System.Net.Security.SslStream.ReadTimeout%2A> はミリ秒単位で、既定では <xref:System.Threading.Timeout.Infinite> に設定されるため、読み取り操作はタイムアウトしません。</span><span class="sxs-lookup"><span data-stu-id="0a064-888">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-889">次のコード例は、このプロパティの値を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-889">The following code example demonstrates setting the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
[!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
[!code-vb[NclSslServerSync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCertificate">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.RemoteCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RemoteCertificate As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::X509Certificates::X509Certificate ^ RemoteCertificate { System::Security::Cryptography::X509Certificates::X509Certificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteCertificate : System.Security.Cryptography.X509Certificates.X509Certificate" Usage="System.Net.Security.SslStream.RemoteCertificate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.RemoteCertificate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-890">リモート エンドポイントの認証に使用する証明書を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-890">Gets the certificate used to authenticate the remote endpoint.</span></span></summary>
        <value><span data-ttu-id="0a064-891">認証用に提供された証明書を表す X509Certificate オブジェクト。証明書が提供されなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-891">An X509Certificate object that represents the certificate supplied for authentication or <see langword="null" /> if no certificate was supplied.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0a064-892">次のコード例は、このプロパティによって返される証明書を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-892">The following code example demonstrates displaying the certificate returned by this property.</span></span>  
  
[!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]
[!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]  
[!code-vb[NclSslServerSync#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#6)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-893">認証に失敗したか、認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-893">Authentication failed or has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="sslStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="0a064-894">この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-894">This value is ignored.</span></span></param>
        <param name="origin"><span data-ttu-id="0a064-895">この値は無視されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-895">This value is ignored.</span></span></param>
        <summary><span data-ttu-id="0a064-896"><see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="0a064-896">Throws a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="0a064-897">常に <see cref="T:System.NotSupportedException" /> をスローします。</span><span class="sxs-lookup"><span data-stu-id="0a064-897">Always throws a <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-898">このメソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="0a064-898">Do not call this method.</span></span> <span data-ttu-id="0a064-899">継承されますが、<xref:System.Net.Security.SslStream> クラスではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-899">It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-900">シークは <see cref="T:System.Net.Security.SslStream" /> オブジェクトでサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-900">Seeking is not supported by <see cref="T:System.Net.Security.SslStream" /> objects.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="sslStream.SetLength value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.SetLength(System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="0a064-901">ストリームの長さを指定する <see cref="T:System.Int64" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-901">An <see cref="T:System.Int64" /> value that specifies the length of the stream.</span></span></param>
        <summary><span data-ttu-id="0a064-902">基になるストリームの長さを設定します。</span><span class="sxs-lookup"><span data-stu-id="0a064-902">Sets the length of the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-903">このメソッドは、この <xref:System.Net.Security.SslStream> の作成時に指定された基になるストリームに対して <xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a064-903">This method invokes <xref:System.IO.Stream.SetLength%2A?displayProperty=nameWithType> on the underlying stream specified when this <xref:System.Net.Security.SslStream> was created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShutdownAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ShutdownAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ShutdownAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.ShutdownAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShutdownAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task ^ ShutdownAsync();" />
      <MemberSignature Language="F#" Value="abstract member ShutdownAsync : unit -&gt; System.Threading.Tasks.Task&#xA;override this.ShutdownAsync : unit -&gt; System.Threading.Tasks.Task" Usage="sslStream.ShutdownAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0a064-904">この SslStream を終了します。</span><span class="sxs-lookup"><span data-stu-id="0a064-904">Shuts down this SslStream.</span></span></summary>
        <returns><span data-ttu-id="0a064-905">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-905">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocol">
      <MemberSignature Language="C#" Value="public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.SslProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SslProtocol As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Authentication::SslProtocols SslProtocol { System::Security::Authentication::SslProtocols get(); };" />
      <MemberSignature Language="F#" Value="member this.SslProtocol : System.Security.Authentication.SslProtocols" Usage="System.Net.Security.SslStream.SslProtocol" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.SslProtocol</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-906">この接続の認証に使用するセキュリティ プロトコルを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-906">Gets a value that indicates the security protocol used to authenticate this connection.</span></span></summary>
        <value><span data-ttu-id="0a064-907">認証に使用されるプロトコルを表す <see cref="T:System.Security.Authentication.SslProtocols" /> 値。</span><span class="sxs-lookup"><span data-stu-id="0a064-907">The <see cref="T:System.Security.Authentication.SslProtocols" /> value that represents the protocol used for authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-908">サポートされているセキュリティプロトコルは、<xref:System.Net.Security.SslStream> の作成時に指定します。</span><span class="sxs-lookup"><span data-stu-id="0a064-908">The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created.</span></span> <span data-ttu-id="0a064-909">セキュリティプロトコルがコンストラクターに渡されなかった場合、インスタンスは <xref:System.Security.Authentication.SslProtocols.Default>を使用して作成されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-909">If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>.</span></span> <span data-ttu-id="0a064-910">認証に使用される実際のプロトコルは、クライアントおよびサーバーでサポートされているプロトコルに基づいて選択されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-910">The actual protocol used for authentication is selected based on the protocols supported by the client and server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-911">次の例では、指定されたストリームのセキュリティプロパティを表示します。</span><span class="sxs-lookup"><span data-stu-id="0a064-911">The following example displays the security properties of the specified stream.</span></span>  
  
[!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]
[!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]  
[!code-vb[NclSslServerSync#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#3)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.Security.SslStream.TransportContext" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.TransportContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-912">拡張保護を使用した認証に使用する <see cref="T:System.Net.TransportContext" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="0a064-912">Gets the <see cref="T:System.Net.TransportContext" /> used for authentication using extended protection.</span></span></summary>
        <value><span data-ttu-id="0a064-913">拡張保護に使用するチャネル バインディング トークン (CBT: Channel Binding Token) を格納している <see cref="T:System.Net.TransportContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0a064-913">The <see cref="T:System.Net.TransportContext" /> object that contains the channel binding token (CBT) used for extended protection.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" />
        <related type="Article" href="~/docs/framework/network-programming/integrated-windows-authentication-with-extended-protection.md"><span data-ttu-id="0a064-914">統合 Windows 認証と拡張保護</span><span class="sxs-lookup"><span data-stu-id="0a064-914">Integrated Windows Authentication with Extended Protection</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0a064-915">このストリームにデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0a064-915">Writes data to this stream.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] buffer) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ buffer);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] -&gt; unit" Usage="sslStream.Write buffer" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(unsigned int8[] buffer) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Write(cli::array &lt;System::Byte&gt; ^ buffer);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0a064-916">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="0a064-916">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <summary><span data-ttu-id="0a064-917">このストリームに指定したデータを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0a064-917">Writes the specified data to this stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-918">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="0a064-918">This method blocks while the operation completes.</span></span> <span data-ttu-id="0a064-919">操作の完了中にブロックされないようにするには、<xref:System.Net.Security.SslStream.BeginWrite%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-919">To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="0a064-920">が正常に認証されるまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-920">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="0a064-921">認証するには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>の1つを呼び出すか、<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> の各メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a064-921">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="0a064-922"><xref:System.Net.Security.SslStream> クラスは、複数の同時書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-922">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-923">次のコード例は、認証された <xref:System.Net.Security.SslStream>に書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-923">The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.</span></span>  
  
[!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
[!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
[!code-vb[NclSslServerSync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#1)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-924"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-924"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a064-925">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-925">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-926">既に実行中の書き込み操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="0a064-926">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-927">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-927">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-928">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-928">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="sslStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Mono.Net.Security.IMonoSslStream.Write(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0a064-929">ストリームに書き込むバイトを提供する <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="0a064-929">A <see cref="T:System.Byte" /> array that supplies the bytes written to the stream.</span></span></param>
        <param name="offset"><span data-ttu-id="0a064-930">ストリームに書き込むバイトの読み取りを開始する位置を示す、<paramref name="buffer" /> 内のインデックス番号が 0 から始まる位置を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-930">A <see cref="T:System.Int32" /> that contains the zero-based location in <paramref name="buffer" /> at which to begin reading bytes to be written to the stream.</span></span></param>
        <param name="count"><span data-ttu-id="0a064-931"><paramref name="buffer" /> から読み取るバイト数を格納する <see cref="T:System.Int32" />。</span><span class="sxs-lookup"><span data-stu-id="0a064-931">A <see cref="T:System.Int32" /> that contains the number of bytes to read from <paramref name="buffer" />.</span></span></param>
        <summary><span data-ttu-id="0a064-932">指定したバッファーとオフセットを使用して、基になるストリームに指定した <see cref="T:System.Byte" /> 数を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0a064-932">Write the specified number of <see cref="T:System.Byte" />s to the underlying stream using the specified buffer and offset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-933">このメソッドは、操作が完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="0a064-933">This method blocks while the operation completes.</span></span> <span data-ttu-id="0a064-934">操作が完了している間にブロックされないようにするには、<xref:System.Net.Security.SslStream.BeginWrite%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0a064-934">To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.</span></span>  
  
 <span data-ttu-id="0a064-935">が正常に認証されるまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-935">You cannot call this method until you have successfully authenticated.</span></span> <span data-ttu-id="0a064-936">認証するには、<xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>の1つを呼び出すか、<xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>、<xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>、<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> の各メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0a064-936">To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.</span></span>  
  
 <span data-ttu-id="0a064-937"><xref:System.Net.Security.SslStream> クラスは、複数の同時書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-937">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-938"><paramref name="buffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="0a064-938"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0a064-939"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0a064-939"><paramref name="offset" /> is less than zero.</span></span>

<span data-ttu-id="0a064-940">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-940">-or-</span></span>

<span data-ttu-id="0a064-941"><paramref name="offset" /> が <paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0a064-941"><paramref name="offset" /> is greater than the length of <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="0a064-942">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-942">-or-</span></span> 
 <span data-ttu-id="0a064-943"><paramref name="offset" /> に count を加算した値が、<paramref name="buffer" /> の長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0a064-943"><paramref name="offset" /> + count is greater than the length of <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a064-944">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-944">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-945">既に実行中の書き込み操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="0a064-945">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-946">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-946">This object has been closed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-947">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-947">Authentication has not occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="sslStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0a064-948">基になるストリームに書き込むデータ。</span><span class="sxs-lookup"><span data-stu-id="0a064-948">The data to write to the underlying stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="0a064-949">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="0a064-949">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="0a064-950">読み取り専用バイト メモリ範囲から基になるストリームにデータを非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0a064-950">Asynchronously writes data to the underlying stream from a read-only byte memory range.</span></span></summary>
        <returns><span data-ttu-id="0a064-951">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="0a064-951">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="0a064-952">が正常に認証されるまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-952">You cannot call this method until you have successfully authenticated.</span></span> 

<span data-ttu-id="0a064-953"><xref:System.Net.Security.SslStream> クラスは、複数の同時書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-953">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-954">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-954">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a064-955">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-955">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-956">既に実行中の書き込み操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="0a064-956">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-957">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-957">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Security.SslStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="sslStream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="0a064-958">基になるストリームに書き込むデータ。</span><span class="sxs-lookup"><span data-stu-id="0a064-958">The data to write to the underlying stream.</span></span></param>
        <param name="offset"><span data-ttu-id="0a064-959">データの書き込みを開始する <paramref name="buffer" /> 内の場所。</span><span class="sxs-lookup"><span data-stu-id="0a064-959">The location in <paramref name="buffer" /> from which to start writing data.</span></span></param>
        <param name="count"><span data-ttu-id="0a064-960">基になるストリームに書き込むバイト数。</span><span class="sxs-lookup"><span data-stu-id="0a064-960">The number of bytes to write to the underlying stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="0a064-961">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="0a064-961">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="0a064-962">バイト配列の指定された範囲から、基になるストリームに、データを非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="0a064-962">Asynchronously writes data to the underlying stream from the specified range of a byte array.</span></span></summary>
        <returns><span data-ttu-id="0a064-963">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="0a064-963">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="0a064-964">が正常に認証されるまで、このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="0a064-964">You cannot call this method until you have successfully authenticated.</span></span> 

<span data-ttu-id="0a064-965"><xref:System.Net.Security.SslStream> クラスは、複数の同時書き込み操作をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-965">The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0a064-966"><paramref name="buffer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="0a064-966"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="0a064-967"><paramref name="offset" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0a064-967"><paramref name="offset" /> is less than 0.</span></span>  
  
<span data-ttu-id="0a064-968">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-968">-or-</span></span> 
 <span data-ttu-id="0a064-969"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="0a064-969"><paramref name="count" /> is less than 0.</span></span>
  
<span data-ttu-id="0a064-970">- または -</span><span class="sxs-lookup"><span data-stu-id="0a064-970">-or-</span></span> 
 <span data-ttu-id="0a064-971"><paramref name="count" /> が、<paramref name="buffer" /> から <paramref name="offset" /> を引いた長さを超えています。</span><span class="sxs-lookup"><span data-stu-id="0a064-971"><paramref name="count" /> is greater than the length of <paramref name="buffer" /> minus <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0a064-972">認証が行われていません。</span><span class="sxs-lookup"><span data-stu-id="0a064-972">Authentication has not occurred.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="0a064-973">書き込み操作に失敗しました。</span><span class="sxs-lookup"><span data-stu-id="0a064-973">The write operation failed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="0a064-974">既に実行中の書き込み操作が存在します。</span><span class="sxs-lookup"><span data-stu-id="0a064-974">There is already a write operation in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="0a064-975">このオブジェクトは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="0a064-975">This object has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public override int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Security.SslStream.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.Net.Security.SslStream.WriteTimeout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Mono.Net.Security.IMonoSslStream.WriteTimeout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a064-976">書き込み操作がブロックしてデータを待機する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0a064-976">Gets or sets the amount of time a write operation blocks waiting for data.</span></span></summary>
        <value><span data-ttu-id="0a064-977">同期書き込み操作が失敗するまでの経過時間。</span><span class="sxs-lookup"><span data-stu-id="0a064-977">The amount of time that elapses before a synchronous write operation fails.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a064-978">このプロパティは、基になるストリームで <xref:System.IO.Stream.WriteTimeout%2A> を呼び出すことによって返される値を返します。</span><span class="sxs-lookup"><span data-stu-id="0a064-978">This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream.</span></span> <span data-ttu-id="0a064-979">設定操作の場合、指定された値は基になるストリームの <xref:System.IO.Stream.WriteTimeout%2A> 値を設定します。</span><span class="sxs-lookup"><span data-stu-id="0a064-979">For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.</span></span>  
  
 <span data-ttu-id="0a064-980">基になるストリームが <xref:System.Net.Sockets.NetworkStream>の場合、<xref:System.Net.Security.SslStream.WriteTimeout%2A> はミリ秒単位であり、書き込み操作がタイムアウトしないように既定で <xref:System.Threading.Timeout.Infinite> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="0a064-980">If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not timeout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0a064-981">次のコード例は、このプロパティの値を設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0a064-981">The following code example demonstrates setting the value of this property.</span></span>  
  
[!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]
[!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]  
[!code-vb[NclSslServerSync#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NclSslServerSync/VB/serversync.vb#1)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
