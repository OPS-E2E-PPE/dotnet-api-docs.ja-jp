<Type Name="EventLogWatcher" FullName="System.Diagnostics.Eventing.Reader.EventLogWatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ef083d2f7a84bc147c1a06f52f8fb11c06da10c" /><Meta Name="ms.sourcegitcommit" Value="8dc7427b3f8ede13c290b671feeb1dc33978e582" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/06/2020" /><Meta Name="ms.locfileid" Value="77040024" /></Metadata><TypeSignature Language="C#" Value="public class EventLogWatcher : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventLogWatcher extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class EventLogWatcher&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventLogWatcher : IDisposable" />
  <TypeSignature Language="F#" Value="type EventLogWatcher = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="cdbd4-101">受信イベントにサブスクライブできます。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-101">Allows you to subscribe to incoming events.</span></span> <span data-ttu-id="cdbd4-102">目的のイベントがイベント ログに発行されるたびに <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生し、このイベントを処理するメソッドが実行されます。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-102">Each time a desired event is published to an event log, the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised, and the method that handles this event will be executed.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cdbd4-103">このクラスのインスタンスは、イベントサブスクリプションのクエリを指定する <xref:System.Diagnostics.Eventing.Reader.EventLogQuery> オブジェクトから作成されます。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-103">The instances of this class are created from <xref:System.Diagnostics.Eventing.Reader.EventLogQuery> objects, which specify a query for the event subscription.</span></span> <span data-ttu-id="cdbd4-104">クエリ内に表現された基準を満たすイベントが記録されると、<xref:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-104">When an event is logged that matches the criteria expressed in the query, then the <xref:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten> event is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cdbd4-105">このクラスを使用したコード例については、「[方法: イベントログのイベントをサブスクライブ](https://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-105">For example code using this class, see [How to: Subscribe to Events in an Event Log](https://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671205(v=vs.90)"><span data-ttu-id="cdbd4-106">イベント ログの読み取りおよび管理に関する技術概要</span><span class="sxs-lookup"><span data-stu-id="cdbd4-106">Technology Summary for Reading and Managing Event Logs</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671204(v=vs.90)"><span data-ttu-id="cdbd4-107">イベント ログ シナリオ</span><span class="sxs-lookup"><span data-stu-id="cdbd4-107">Event Log Scenarios</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cdbd4-108"><see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-108">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> class.</span></span></summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671205(v=vs.90)"><span data-ttu-id="cdbd4-109">イベント ログの読み取りおよび管理に関する技術概要</span><span class="sxs-lookup"><span data-stu-id="cdbd4-109">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671204(v=vs.90)"><span data-ttu-id="cdbd4-110">イベント ログ シナリオ</span><span class="sxs-lookup"><span data-stu-id="cdbd4-110">Event Log Scenarios</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogWatcher (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventQuery As EventLogQuery)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogWatcher(System::Diagnostics::Eventing::Reader::EventLogQuery ^ eventQuery);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogWatcher : System.Diagnostics.Eventing.Reader.EventLogQuery -&gt; System.Diagnostics.Eventing.Reader.EventLogWatcher" Usage="new System.Diagnostics.Eventing.Reader.EventLogWatcher eventQuery" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" />
      </Parameters>
      <Docs>
        <param name="eventQuery"><span data-ttu-id="cdbd4-111">イベント サブスクリプションに対するクエリを指定します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-111">Specifies a query for the event subscription.</span></span> <span data-ttu-id="cdbd4-112">クエリ内に表現された基準を満たすイベントが記録されると、<see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-112">When an event is logged that matches the criteria expressed in the query, then the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised.</span></span></param>
        <summary><span data-ttu-id="cdbd4-113">イベント クエリを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-113">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> class by specifying an event query.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671205(v=vs.90)"><span data-ttu-id="cdbd4-114">イベント ログの読み取りおよび管理に関する技術概要</span><span class="sxs-lookup"><span data-stu-id="cdbd4-114">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671204(v=vs.90)"><span data-ttu-id="cdbd4-115">イベント ログ シナリオ</span><span class="sxs-lookup"><span data-stu-id="cdbd4-115">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogWatcher (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogWatcher(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogWatcher : string -&gt; System.Diagnostics.Eventing.Reader.EventLogWatcher" Usage="new System.Diagnostics.Eventing.Reader.EventLogWatcher path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="cdbd4-116">イベントを監視するイベント ログのパスまたは名前。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-116">The path or name of the event log monitor for events.</span></span> <span data-ttu-id="cdbd4-117">このイベント ログにいずれかのイベントが記録されると、<see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-117">If any event is logged in this event log, then the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised.</span></span></param>
        <summary><span data-ttu-id="cdbd4-118">イベント ログの名前またはパスを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-118">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> class by specifying the name or path to an event log.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671205(v=vs.90)"><span data-ttu-id="cdbd4-119">イベント ログの読み取りおよび管理に関する技術概要</span><span class="sxs-lookup"><span data-stu-id="cdbd4-119">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671204(v=vs.90)"><span data-ttu-id="cdbd4-120">イベント ログ シナリオ</span><span class="sxs-lookup"><span data-stu-id="cdbd4-120">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogWatcher (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, class System.Diagnostics.Eventing.Reader.EventBookmark bookmark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventQuery As EventLogQuery, bookmark As EventBookmark)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogWatcher(System::Diagnostics::Eventing::Reader::EventLogQuery ^ eventQuery, System::Diagnostics::Eventing::Reader::EventBookmark ^ bookmark);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogWatcher : System.Diagnostics.Eventing.Reader.EventLogQuery * System.Diagnostics.Eventing.Reader.EventBookmark -&gt; System.Diagnostics.Eventing.Reader.EventLogWatcher" Usage="new System.Diagnostics.Eventing.Reader.EventLogWatcher (eventQuery, bookmark)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" />
        <Parameter Name="bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" />
      </Parameters>
      <Docs>
        <param name="eventQuery"><span data-ttu-id="cdbd4-121">イベント サブスクリプションに対するクエリを指定します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-121">Specifies a query for the event subscription.</span></span> <span data-ttu-id="cdbd4-122">クエリ内に表現された基準を満たすイベントが記録されると、<see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-122">When an event is logged that matches the criteria expressed in the query, then the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised.</span></span></param>
        <param name="bookmark"><span data-ttu-id="cdbd4-123">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-123">The bookmark (placeholder) used as a starting position in the event log or stream of events.</span></span> <span data-ttu-id="cdbd4-124">ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-124">Only events that have been logged after the bookmark event will be returned by the query.</span></span></param>
        <summary><span data-ttu-id="cdbd4-125">イベント クエリ、およびクエリの開始位置として使用するブックマークを指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-125">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> class by specifying an event query and a bookmark that is used as starting position for the query.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671205(v=vs.90)"><span data-ttu-id="cdbd4-126">イベント ログの読み取りおよび管理に関する技術概要</span><span class="sxs-lookup"><span data-stu-id="cdbd4-126">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671204(v=vs.90)"><span data-ttu-id="cdbd4-127">イベント ログ シナリオ</span><span class="sxs-lookup"><span data-stu-id="cdbd4-127">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventLogWatcher (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark, bool readExistingEvents);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, class System.Diagnostics.Eventing.Reader.EventBookmark bookmark, bool readExistingEvents) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventQuery As EventLogQuery, bookmark As EventBookmark, readExistingEvents As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventLogWatcher(System::Diagnostics::Eventing::Reader::EventLogQuery ^ eventQuery, System::Diagnostics::Eventing::Reader::EventBookmark ^ bookmark, bool readExistingEvents);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.Reader.EventLogWatcher : System.Diagnostics.Eventing.Reader.EventLogQuery * System.Diagnostics.Eventing.Reader.EventBookmark * bool -&gt; System.Diagnostics.Eventing.Reader.EventLogWatcher" Usage="new System.Diagnostics.Eventing.Reader.EventLogWatcher (eventQuery, bookmark, readExistingEvents)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventQuery" Type="System.Diagnostics.Eventing.Reader.EventLogQuery" />
        <Parameter Name="bookmark" Type="System.Diagnostics.Eventing.Reader.EventBookmark" />
        <Parameter Name="readExistingEvents" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="eventQuery"><span data-ttu-id="cdbd4-128">イベント サブスクリプションに対するクエリを指定します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-128">Specifies a query for the event subscription.</span></span> <span data-ttu-id="cdbd4-129">クエリ内に表現された基準を満たすイベントが記録されると、<see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-129">When an event is logged that matches the criteria expressed in the query, then the <see cref="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" /> event is raised.</span></span></param>
        <param name="bookmark"><span data-ttu-id="cdbd4-130">イベント ログまたはイベント ストリーム内の開始位置として使用するブックマーク (プレースホルダー)。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-130">The bookmark (placeholder) used as a starting position in the event log or stream of events.</span></span> <span data-ttu-id="cdbd4-131">ブックマーク イベントより後に記録されるイベントだけが、クエリによって返されます。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-131">Only events that have been logged after the bookmark event will be returned by the query.</span></span></param>
        <param name="readExistingEvents"><span data-ttu-id="cdbd4-132">イベント ログに既に存在するイベントを読み取るかどうかを指定するブール値。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-132">A Boolean value that determines whether to read the events that already exist in the event log.</span></span> <span data-ttu-id="cdbd4-133">この値が <see langword="true" /> の場合は既存のイベントが読み取られ、この値が <see langword="false" /> の場合は既存のイベントが読み取られません。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-133">If this value is <see langword="true" />, then the existing events are read and if this value is <see langword="false" />, then the existing events are not read.</span></span></param>
        <summary><span data-ttu-id="cdbd4-134">イベント クエリ、クエリの開始位置として使用するブックマーク、およびイベント ログに既に存在するイベントを読み取るかどうかを指定するブール値を指定して、<see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-134">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.Reader.EventLogWatcher" /> class by specifying an event query, a bookmark that is used as starting position for the query, and a Boolean value that determines whether to read the events that already exist in the event log.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671205(v=vs.90)"><span data-ttu-id="cdbd4-135">イベント ログの読み取りおよび管理に関する技術概要</span><span class="sxs-lookup"><span data-stu-id="cdbd4-135">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671204(v=vs.90)"><span data-ttu-id="cdbd4-136">イベント ログ シナリオ</span><span class="sxs-lookup"><span data-stu-id="cdbd4-136">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cdbd4-137">このオブジェクトに使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-137">Releases the resources used by this object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventLogWatcher.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cdbd4-138">このオブジェクトに使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-138">Releases all the resources used by this object.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671205(v=vs.90)"><span data-ttu-id="cdbd4-139">イベント ログの読み取りおよび管理に関する技術概要</span><span class="sxs-lookup"><span data-stu-id="cdbd4-139">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671204(v=vs.90)"><span data-ttu-id="cdbd4-140">イベント ログ シナリオ</span><span class="sxs-lookup"><span data-stu-id="cdbd4-140">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="eventLogWatcher.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="cdbd4-141">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-141"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="cdbd4-142">このオブジェクトに使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-142">Releases the unmanaged resources used by this object, and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671205(v=vs.90)"><span data-ttu-id="cdbd4-143">イベント ログの読み取りおよび管理に関する技術概要</span><span class="sxs-lookup"><span data-stu-id="cdbd4-143">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671204(v=vs.90)"><span data-ttu-id="cdbd4-144">イベント ログ シナリオ</span><span class="sxs-lookup"><span data-stu-id="cdbd4-144">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdbd4-145">このオブジェクトがイベント デリゲートへのイベント配信を開始するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-145">Gets or sets a value that indicates whether this object starts delivering events to the event delegate.</span></span></summary>
        <value><span data-ttu-id="cdbd4-146">このオブジェクトがイベントデリゲートにイベントを配信できるときに <see langword="true" /> します。このオブジェクトの配信が停止されたときに <see langword="false" /> します。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-146"><see langword="true" /> when this object can deliver events to the event delegate; <see langword="false" /> when this object has stopped delivery.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671205(v=vs.90)"><span data-ttu-id="cdbd4-147">イベント ログの読み取りおよび管理に関する技術概要</span><span class="sxs-lookup"><span data-stu-id="cdbd4-147">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671204(v=vs.90)"><span data-ttu-id="cdbd4-148">イベント ログ シナリオ</span><span class="sxs-lookup"><span data-stu-id="cdbd4-148">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EventRecordWritten">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs&gt; EventRecordWritten;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs&gt; EventRecordWritten" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventRecordWritten As EventHandler(Of EventRecordWrittenEventArgs) " FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Eventing::Reader::EventRecordWrittenEventArgs ^&gt; ^ EventRecordWritten;" />
      <MemberSignature Language="F#" Value="member this.EventRecordWritten : EventHandler&lt;System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs&gt; " Usage="member this.EventRecordWritten : System.EventHandler&lt;System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event EventRecordWritten As EventHandler(Of EventRecordWrittenEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.EventLog</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cdbd4-149">このオブジェクトに対するイベント クエリに指定された基準を満たすイベントが発行されるたびに呼び出されるデリゲート (イベント ハンドラー メソッド) を設定できます。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-149">Allows setting a delegate (event handler method) that gets called every time an event is published that matches the criteria specified in the event query for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="cdbd4-150">このクラスを使用したコード例については、「[方法: イベントログのイベントをサブスクライブ](https://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cdbd4-150">For example code using this class, see [How to: Subscribe to Events in an Event Log](https://msdn.microsoft.com/library/62e006d3-9fab-4fdf-a8f8-e23d05498cd4).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671205(v=vs.90)"><span data-ttu-id="cdbd4-151">イベント ログの読み取りおよび管理に関する技術概要</span><span class="sxs-lookup"><span data-stu-id="cdbd4-151">Technology Summary for Reading and Managing Event Logs</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/bb671204(v=vs.90)"><span data-ttu-id="cdbd4-152">イベント ログ シナリオ</span><span class="sxs-lookup"><span data-stu-id="cdbd4-152">Event Log Scenarios</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
