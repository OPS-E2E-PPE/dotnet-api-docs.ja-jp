<Type Name="IStyleSheet" FullName="System.Web.UI.IStyleSheet">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8b74d1f133715933ac4cdff6f1fdf261fce13ef8" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77246086" /></Metadata><TypeSignature Language="C#" Value="public interface IStyleSheet" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStyleSheet" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IStyleSheet" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStyleSheet" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStyleSheet" />
  <TypeSignature Language="F#" Value="type IStyleSheet = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>スタイル ルールの作成をサポートするためにクラスで実装する必要があるメソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインターフェイスを実装するクラスは、スタイルルールの作成をサポートするために使用できます。  
  
 カスケードスタイルシートを作成および登録する方法をカスタマイズするには、このインターフェイスを実装するクラスを作成する必要があります。  
  
 <xref:System.Web.UI.HtmlControls.HtmlHead> クラスは、<xref:System.Web.UI.Page.Header%2A> プロパティを介して ASP.NET で使用するために、このインターフェイスを実装します。  
  
> [!NOTE]
>  非同期ポストバック中にプログラムによってスタイルやスタイルルールを追加または変更することはできません。 AJAX 機能を ASP.NET Web ページに追加する場合、非同期ポストバックはページ全体を更新せずにページの領域を更新します。 詳細については、「 [Microsoft Ajax の概要](https://docs.microsoft.com/previous-versions/aspnet/bb398874(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.IStyleSheet> の <xref:System.Web.UI.Page.Header%2A> 実装を使用して、プログラムによって新しいスタイルルールを作成し、カスタム <xref:System.Web.UI.WebControls.Style> オブジェクトを登録する方法を示します。  
  
 この例の最初の部分では、`labelStyle`のカスタム <xref:System.Web.UI.WebControls.Style> オブジェクトを作成し、現在の場所 (URL) に登録します。 次に、`label1` ラベルが <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> メソッドを呼び出して、`labelStyle` スタイルが `label1` ラベルに適用されるようにします。  
  
 この例の2番目の部分では、別のカスタム <xref:System.Web.UI.WebControls.Style> オブジェクト `bodyStyle`を定義し、そのプロパティを設定して新しいスタイルルールを作成します。  
  
> [!NOTE]
>  このクラスは、主にカスタム実装を作成する開発者を対象としています。 この例は、.NET Framework によって提供される実装を示しています。  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/VB/istylesheetvb.aspx#1)]  
  
 前の例の Web ページの分離コードファイルを次に示します。  
  
 [!code-csharp[System.Web.UI.IStyleSheet#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheet/CS/istylesheetcs.aspx.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Style" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlHead" />
    <related type="Article" href="https://msdn.microsoft.com/library/14adecd2-b688-45ec-b942-4a89183b3f91">チュートリアル: 新しいスタイルの実装</related>
  </Docs>
  <Members>
    <Member MemberName="CreateStyleRule">
      <MemberSignature Language="C#" Value="public void CreateStyleRule (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver, string selector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateStyleRule(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver, string selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.CreateStyleRule(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateStyleRule(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver, System::String ^ selector);" />
      <MemberSignature Language="F#" Value="abstract member CreateStyleRule : System.Web.UI.WebControls.Style * System.Web.UI.IUrlResolutionService * string -&gt; unit" Usage="iStyleSheet.CreateStyleRule (style, urlResolver, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
        <Parameter Name="selector" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="style">埋め込みスタイル シートに追加されるスタイル ルール。</param>
        <param name="urlResolver">現在の場所 (URL) のコンテキスト情報を格納している <see cref="T:System.Web.UI.IUrlResolutionService" /> 実装オブジェクト。</param>
        <param name="selector">スタイルの影響を受ける HTML ページの部分。</param>
        <summary>クラスによって実装された場合は、指定されたドキュメント言語要素型つまりセレクターに対してスタイル ルールを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A> メソッドは、指定されたセレクターのスタイルルールを作成します。 同じセレクターに対して複数のスタイルルールを作成できます。  
  
 `urlResolver` が `null`に設定されている場合は、現在の <xref:System.Web.UI.Page> インスタンスの URL が使用されます。  
  
> [!NOTE]
>  非同期ポストバック中にプログラムによってスタイルやスタイルルールを追加または変更することはできません。 AJAX 機能を ASP.NET Web ページに追加する場合、非同期ポストバックはページ全体を更新せずにページの領域を更新します。 詳細については、「 [Microsoft Ajax の概要](https://docs.microsoft.com/previous-versions/aspnet/bb398874(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.IStyleSheet> の <xref:System.Web.UI.Page.Header%2A> 実装を使用して、`bodyStyle`の新しい <xref:System.Web.UI.WebControls.Style> オブジェクトの定義を示します。 <xref:System.Web.UI.IStyleSheet.CreateStyleRule%2A>を呼び出すことによって、`bodyStyle` が現在の URL に追加されます。  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/CS/istylesheetcreatestylerulecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetCreateStyleRule#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetCreateStyleRule/VB/istylesheetcreatestylerulevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="public void RegisterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStyle(class System.Web.UI.WebControls.Style style, class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IStyleSheet.RegisterStyle(System.Web.UI.WebControls.Style,System.Web.UI.IUrlResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::IUrlResolutionService ^ urlResolver);" />
      <MemberSignature Language="F#" Value="abstract member RegisterStyle : System.Web.UI.WebControls.Style * System.Web.UI.IUrlResolutionService -&gt; unit" Usage="iStyleSheet.RegisterStyle (style, urlResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="style">埋め込みスタイル シートに追加されるスタイル ルール。</param>
        <param name="urlResolver">現在の場所 (URL) のコンテキスト情報を格納している <see cref="T:System.Web.UI.IUrlResolutionService" /> 実装オブジェクト。</param>
        <summary>クラスによって実装された場合、Web ページの <see langword="&lt;head&gt;" /> セクション内の埋め込みスタイル シートに新しいスタイル ルールを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、新しいスタイルルールと <xref:System.Web.UI.WebControls.Style.RegisteredCssClass%2A> プロパティ名を <xref:System.Web.UI.Page> オブジェクトの `<head>` セクション内の埋め込みスタイルシートに追加し、ルールを自動生成されたスタイル名に関連付けます。 <xref:System.Web.UI.WebControls.Style> オブジェクトは、指定された `urlResolver` パラメーターを使用して表示されます。  
  
 `urlResolver` が `null`に設定されている場合は、現在の <xref:System.Web.UI.Page> の URL が使用されます。  
  
 <xref:System.Web.UI.WebControls.Style> オブジェクトが既に登録されている場合は、複数回追加されません。  
  
> [!NOTE]
>  非同期ポストバック中にプログラムによってスタイルを追加または変更することはできません。 AJAX 機能を ASP.NET Web ページに追加する場合、非同期ポストバックはページ全体を更新せずにページの領域を更新します。 詳細については、「 [Microsoft Ajax の概要](https://docs.microsoft.com/previous-versions/aspnet/bb398874(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.IStyleSheet> の <xref:System.Web.UI.Page.Header%2A> 実装を使用して、カスタム <xref:System.Web.UI.WebControls.Style> オブジェクトを作成し、`labelStyle`して、現在の場所 (URL) に登録する方法を示します。 次に、`label1` ラベルが <xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A> メソッドを呼び出して、`labelStyle` スタイルが `label1` ラベルに適用されるようにします。  
  
 [!code-aspx-csharp[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/CS/istylesheetregisterstylecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IStyleSheetRegisterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IStyleSheetRegisterStyle/VB/istylesheetregisterstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
