<Type Name="ClientIDMode" FullName="System.Web.UI.ClientIDMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26bbbbd8c5f5c551f7f9caca7d716876a9c4de44" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77246242" /></Metadata><TypeSignature Language="C#" Value="public enum ClientIDMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ClientIDMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientIDMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum ClientIDMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class ClientIDMode" />
  <TypeSignature Language="F#" Value="type ClientIDMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>クライアント スクリプトでアクセスできるコントロールの <see cref="P:System.Web.UI.Control.ClientID" /> を ASP.NET が生成する方法を指定します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの <xref:System.Web.UI.Control.ClientIDMode%2A> プロパティを設定するときに、<xref:System.Web.UI.ClientIDMode> 列挙体を使用します。 <xref:System.Web.UI.Control.ClientIDMode%2A> プロパティに割り当てる値によって、<xref:System.Web.UI.Control.ClientID%2A> プロパティの生成方法が決まります。 <xref:System.Web.UI.Control.ClientID%2A> プロパティの値は、マークアップで `id` 属性として表示されます。これは、クライアントスクリプトからコントロールにアクセスするために使用する値です。 <xref:System.Web.UI.Control.ClientIDMode%2A> プロパティに割り当てる値は、サーバーコントロールの <xref:System.Web.UI.Control.ID%2A> プロパティには影響しません。これは、対応する HTML 要素の `id` 属性のみです。  
  
 ページの <xref:System.Web.UI.Control.ClientIDMode%2A> の既定値は予測可能です。 コントロールの <xref:System.Web.UI.Control.ClientIDMode%2A> の既定値は Inherit です。  
  
 コントロールの既定値は Inherit であるため、既定の生成モードは予測可能です。 (ただし、Visual Studio を使用して、Web プロジェクトを以前のバージョンの ASP.NET 4 に変換すると、Visual Studio は自動的に、web.config ファイルの AutoID にサイトの既定値を設定します)。  
  
 Web サイトのすべてのページの `ClientIDMode` 値を設定するには、サイトの Web.config ファイルで[pages](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100))要素を設定します。 [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブでは、ページの `ClientIDMode` 値を設定できます。  
  
 詳細については、[ASP.NET Web サーバー コントロールの識別](https://docs.microsoft.com/previous-versions/1d04y8ss(v=vs.140))に関する記事をご覧ください。  
  
   
  
## Examples  
 次の例は、<xref:System.Web.UI.WebControls.ListView> コントロールに含まれているコントロール <xref:System.Web.UI.WebControls.Label> を示しています。 <xref:System.Web.UI.WebControls.ListView> コントロールでは、<xref:System.Web.UI.Control.ClientIDMode%2A> プロパティは "予測可能" に設定され、<xref:System.Web.UI.WebControls.ListView.ClientIDRowSuffix%2A> プロパティは `ProductID`に設定されます。 クライアントスクリプトからは、アクセスしようとしているインスタンスの `ProductID` 値に基づいて、<xref:System.Web.UI.WebControls.Label> の特定のインスタンスにアクセスできます。  
  
 この例では、3つの `ProductIDLabel` コントロールを持つ HTML を作成します。 ページが実行されると、コントロールの Id は次のようになります。  
  
-   `ListView1_ProductIDLabel_1`  
  
-   `ListView1_ProductIDLabel_34`  
  
-   `ListView1_ProductIDLabel_43`  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
    <altmember cref="P:System.Web.UI.HierarchicalDataSourceControl.ClientIDMode" />
    <altmember cref="P:System.Web.Configuration.PagesSection.ClientIDMode" />
    <altmember cref="P:System.Web.UI.DataSourceControl.ClientIDMode" />
    <altmember cref="P:System.Web.DynamicData.DynamicDataManager.ClientIDMode" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/1d04y8ss(v=vs.140)">ASP.NET 制御 Id</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dd410598(v=vs.140)">方法: ID を使用して JavaScript からコントロールにアクセスする</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dd381611(v=vs.140)">チュートリアル: データバインドコントロールを JavaScript から簡単にアクセスできるようにする</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dd483476(v=vs.140)">チュートリアル: Web ユーザーコントロールに配置されているコントロールを JavaScript から簡単にアクセスできるようにする</related>
  </Docs>
  <Members>
    <Member MemberName="AutoID">
      <MemberSignature Language="C#" Value="AutoID" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode AutoID = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ClientIDMode.AutoID" />
      <MemberSignature Language="VB.NET" Value="AutoID" />
      <MemberSignature Language="C++ CLI" Value="AutoID" />
      <MemberSignature Language="F#" Value="AutoID = 1" Usage="System.Web.UI.ClientIDMode.AutoID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.Control.ClientID" /> 値は、それぞれの親名前付けコンテナーの <see cref="P:System.Web.UI.Control.ID" /> 値とコントロールの <see cref="P:System.Web.UI.Control.ID" /> 値を連結することにより生成されます。 コントロールの複数のインスタンスが表示されるデータ バインディング シナリオでは、コントロールの <see cref="P:System.Web.UI.Control.ID" /> 値の前にインクリメント値が挿入されます。 各セグメントはアンダースコア文字 (_) で区切られます。 このアルゴリズムは、ASP.NET 4 より前のバージョンの ASP.NET で使用できた唯一のアルゴリズムです。</summary>
      </Docs>
    </Member>
    <Member MemberName="Inherit">
      <MemberSignature Language="C#" Value="Inherit" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode Inherit = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ClientIDMode.Inherit" />
      <MemberSignature Language="VB.NET" Value="Inherit" />
      <MemberSignature Language="C++ CLI" Value="Inherit" />
      <MemberSignature Language="F#" Value="Inherit = 0" Usage="System.Web.UI.ClientIDMode.Inherit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>コントロールは、<see cref="T:System.Web.UI.ClientIDMode" /> コントロールの <see cref="P:System.Web.UI.Control.NamingContainer" /> 設定を継承します。</summary>
      </Docs>
    </Member>
    <Member MemberName="Predictable">
      <MemberSignature Language="C#" Value="Predictable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode Predictable = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ClientIDMode.Predictable" />
      <MemberSignature Language="VB.NET" Value="Predictable" />
      <MemberSignature Language="C++ CLI" Value="Predictable" />
      <MemberSignature Language="F#" Value="Predictable = 2" Usage="System.Web.UI.ClientIDMode.Predictable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>このアルゴリズムは、データ バインド コントロール内のコントロールに対して使用されます。 <see cref="P:System.Web.UI.Control.ClientID" /> 値は、親名前付けコンテナーの <see cref="P:System.Web.UI.Control.ClientID" /> 値とコントロールの <see cref="P:System.Web.UI.Control.ID" /> 値を連結することにより生成されます。 コントロールが複数の行を生成するデータ バインド コントロールである場合は、<see cref="P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" /> プロパティで指定されたデータ フィールドの値が末尾に追加されます。 <see cref="T:System.Web.UI.WebControls.GridView" /> コントロールの場合は、複数のデータ フィールドを指定できます。 <see cref="P:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix" /> プロパティが空白である場合、データ フィールド値の代わりに連続する番号が末尾に追加されます。 各セグメントはアンダースコア文字 (_) で区切られます。</summary>
      </Docs>
    </Member>
    <Member MemberName="Static">
      <MemberSignature Language="C#" Value="Static" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ClientIDMode Static = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ClientIDMode.Static" />
      <MemberSignature Language="VB.NET" Value="Static" />
      <MemberSignature Language="C++ CLI" Value="Static" />
      <MemberSignature Language="F#" Value="Static = 3" Usage="System.Web.UI.ClientIDMode.Static" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.Control.ClientID" /> 値は、<see cref="P:System.Web.UI.Control.ID" /> プロパティの値に設定されます。 コントロールが名前付けコンテナーの場合、そのコントロールは、名前付けコンテナーの階層構造に含まれるすべてのコントロールに対して最上位の階層として使用されます。</summary>
      </Docs>
    </Member>
  </Members>
</Type>
