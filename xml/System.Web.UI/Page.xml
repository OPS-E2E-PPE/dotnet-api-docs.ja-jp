<Type Name="Page" FullName="System.Web.UI.Page">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ac550e716e17f995f84c96e27305b0d5021c942" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82314826" /></Metadata><TypeSignature Language="C#" Value="public class Page : System.Web.UI.TemplateControl, System.Web.IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Page extends System.Web.UI.TemplateControl implements class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Page" />
  <TypeSignature Language="VB.NET" Value="Public Class Page&#xA;Inherits TemplateControl&#xA;Implements IHttpHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Page : System::Web::UI::TemplateControl, System::Web::IHttpHandler" />
  <TypeSignature Language="F#" Value="type Page = class&#xA;    inherit TemplateControl&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.TemplateControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Load")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignerCategory("ASPXCodeBehind")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Design.Serialization.RootDesignerSerializer("Microsoft.VSDesigner.WebForms.RootCodeDomSerializer, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VSDesigner.WebForms.WebFormDesigner, Microsoft.VSDesigner, Version=7.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7c669-101">ASP.NET Web アプリケーションのホストであるサーバーから要求される .aspx ファイル (Web フォーム ページとも呼ばれる) を表します。</span><span class="sxs-lookup"><span data-stu-id="7c669-101">Represents an .aspx file, also known as a Web Forms page, requested from a server that hosts an ASP.NET Web application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-102"><xref:System.Web.UI.Page> クラスは、.aspx 拡張子を持つファイルに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="7c669-102">The <xref:System.Web.UI.Page> class is associated with files that have an .aspx extension.</span></span> <span data-ttu-id="7c669-103">これらのファイルは、実行時に <xref:System.Web.UI.Page> オブジェクトとしてコンパイルされ、サーバーメモリにキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-103">These files are compiled at run time as <xref:System.Web.UI.Page> objects and cached in server memory.</span></span>

 <span data-ttu-id="7c669-104">分離コード手法を使用して Web フォームページを作成する場合は、このクラスから派生させます。</span><span class="sxs-lookup"><span data-stu-id="7c669-104">If you want to create a Web Forms page using the code-behind technique, derive from this class.</span></span> <span data-ttu-id="7c669-105">Microsoft Visual Studio などの迅速なアプリケーション開発 (RAD) デザイナーは、自動的にこのモデルを使用して Web フォームページを作成します。</span><span class="sxs-lookup"><span data-stu-id="7c669-105">Rapid application development (RAD) designers, such as Microsoft Visual Studio, automatically use this model to create Web Forms pages.</span></span>

 <span data-ttu-id="7c669-106"><xref:System.Web.UI.Page> オブジェクトは、ページ内のすべてのサーバーコントロールの名前付けコンテナーとして機能します。ただし、<xref:System.Web.UI.INamingContainer> インターフェイスを実装するものと、このインターフェイスを実装するコントロールの子コントロールを除きます。</span><span class="sxs-lookup"><span data-stu-id="7c669-106">The <xref:System.Web.UI.Page> object serves as the naming container for all server controls in a page, except those that implement the <xref:System.Web.UI.INamingContainer> interface or are child controls of controls that implement this interface.</span></span>

 <span data-ttu-id="7c669-107"><xref:System.Web.UI.Page> クラスは、Web アプリケーションのユーザーインターフェイスとして機能するコントロールです。そのため、セキュリティで保護されたコードを記述し、アプリケーションを保護するためのベストプラクティスを確認するには、そのような操作を行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-107">The <xref:System.Web.UI.Page> class is a control that acts as the user interface for your Web application, and as such should be scrutinized to make sure best practices for writing secure code and securing applications are followed.</span></span> <span data-ttu-id="7c669-108">これらのトピックに関する一般的な情報については、「 [Web アプリケーションのセキュリティの脅威の概要](https://docs.microsoft.com/previous-versions/f13d73y6(v=vs.140))」、「[セキュリティポリシーのベストプラクティス](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/sa4se9bc(v=vs.100))」、および「セキュリティの[基本概念](~/docs/standard/security/key-security-concepts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-108">For general information on these topics, see [Overview of Web Application Security Threats](https://docs.microsoft.com/previous-versions/f13d73y6(v=vs.140)), [Security Policy Best Practices](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/sa4se9bc(v=vs.100)), and [Key Security Concepts](~/docs/standard/security/key-security-concepts.md).</span></span> <span data-ttu-id="7c669-109">詳細については、「[標準コントロールのセキュリティ保護](https://docs.microsoft.com/previous-versions/aspnet/ms178270(v=vs.100))」、「[方法: 安全なエラーメッセージを表示](https://docs.microsoft.com/previous-versions/aspnet/994a1482(v=vs.100))する」、「[方法: 文字列に HTML エンコーディングを適用して Web アプリケーションのスクリプトの悪用を防止する](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100))」、および「[検証コントロールの概要](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2e4hd649(v=vs.85))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-109">For more specific information, see [Securing Standard Controls](https://docs.microsoft.com/previous-versions/aspnet/ms178270(v=vs.100)), [How to: Display Safe Error Messages](https://docs.microsoft.com/previous-versions/aspnet/994a1482(v=vs.100)), [How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings](https://docs.microsoft.com/previous-versions/aspnet/a2a4yykt(v=vs.100)), and [Introduction to the Validation Controls](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2e4hd649(v=vs.85)).</span></span>



## Examples
 <span data-ttu-id="7c669-110">このトピックでは、ソースコードが含まれている Visual Studio Web サイトプロジェクトを[ダウンロード](https://go.microsoft.com/fwlink/?LinkId=192425)できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://go.microsoft.com/fwlink/?LinkId=192425).</span></span>

 <span data-ttu-id="7c669-111">次のコード例は、分離コードページモデルで <xref:System.Web.UI.Page> クラスがどのように使用されるかを示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-111">The following code example demonstrates how the <xref:System.Web.UI.Page> class is used in the code-behind page model.</span></span> <span data-ttu-id="7c669-112">分離コードソースファイルは、基本ページクラスを継承する部分クラスを宣言することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-112">Note that the code-behind source file declares a partial class that inherits from a base page class.</span></span> <span data-ttu-id="7c669-113">基本ページクラスは <xref:System.Web.UI.Page>することも、<xref:System.Web.UI.Page>から派生する別のクラスにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-113">The base page class can be <xref:System.Web.UI.Page>, or it can be another class that derives from <xref:System.Web.UI.Page>.</span></span> <span data-ttu-id="7c669-114">また、部分クラスを使用すると、分離コードファイルは、フィールドメンバーとして定義する必要なく、ページで定義されたコントロールを使用できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-114">Furthermore, note that the partial class allows the code-behind file to use controls defined on the page without the need to define them as field members.</span></span>

 [!code-csharp[System.Web.UI.Page_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Overview/cs/pageexample.aspx.cs#2)]
 [!code-vb[System.Web.UI.Page_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Overview/vb/pageexample.aspx.vb#2)]

 <span data-ttu-id="7c669-115">次のコード例は、前の分離コードソースファイルに対応する .aspx ファイルを示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-115">The following code example shows the .aspx file that corresponds to the preceding code-behind source file.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7c669-116">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-116">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7c669-117">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-117">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7c669-118">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-118">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[System.Web.UI.Page_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Overview/cs/pageexample.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Overview/vb/pageexample.aspx#1)]  
  
 <span data-ttu-id="7c669-119">[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブを使用し、`Inherits` 属性と `CodeFile` 属性を使用して、分離コードファイルを .aspx ファイルにリンクする必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-119">You must use the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive and use the `Inherits` and `CodeFile` attributes to link the code-behind file to the .aspx file.</span></span> <span data-ttu-id="7c669-120">この例では、`Inherits` 属性は `MyCodeBehind` クラスを示し、`CodeFile` 属性はクラスを含む言語固有のファイルへのパスを示します。</span><span class="sxs-lookup"><span data-stu-id="7c669-120">In this example, the `Inherits` attribute indicates the `MyCodeBehind` class and the `CodeFile` attribute indicates the path to the language-specific file that contains the class.</span></span>  
  
 <span data-ttu-id="7c669-121">次のコード例は、単一ファイルのページモデルと、<xref:System.Web.UI.Page>の <xref:System.Web.UI.Page.IsPostBack%2A> プロパティと <xref:System.Web.UI.Page.Response%2A> プロパティにアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-121">The following code example demonstrates the single-file page model and how to access the <xref:System.Web.UI.Page.IsPostBack%2A> property and the <xref:System.Web.UI.Page.Response%2A> property of the <xref:System.Web.UI.Page>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page_Overview2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Overview2/cs/pageexample.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page_Overview2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Overview2/vb/pageexample.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178138(v=vs.100)"><span data-ttu-id="7c669-122">ASP.NET Page クラスの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-122">ASP.NET Page Class Overview</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/015103yb(v=vs.100)"><span data-ttu-id="7c669-123">ASP.NET Web ページコードモデル</span><span class="sxs-lookup"><span data-stu-id="7c669-123">ASP.NET Web Page Code Model</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Page ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Page();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-124"><see cref="T:System.Web.UI.Page" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7c669-124">Initializes a new instance of the <see cref="T:System.Web.UI.Page" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-125">パラメーターなしのコンストラクターは、すべてのフィールドを既定値に初期化します。</span><span class="sxs-lookup"><span data-stu-id="7c669-125">The parameterless constructor initializes all fields to their default values.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentTemplate">
      <MemberSignature Language="C#" Value="protected internal void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddContentTemplate(string templateName, class System.Web.UI.ITemplate template) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddContentTemplate (templateName As String, template As ITemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddContentTemplate(System::String ^ templateName, System::Web::UI::ITemplate ^ template);" />
      <MemberSignature Language="F#" Value="member this.AddContentTemplate : string * System.Web.UI.ITemplate -&gt; unit" Usage="page.AddContentTemplate (templateName, template)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="template" Type="System.Web.UI.ITemplate" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="templateName"><span data-ttu-id="7c669-126">追加するコンテンツ テンプレートの名前。</span><span class="sxs-lookup"><span data-stu-id="7c669-126">The name of the content template to add.</span></span></param>
        <param name="template"><span data-ttu-id="7c669-127">コンテンツ テンプレート</span><span class="sxs-lookup"><span data-stu-id="7c669-127">The content template</span></span></param>
        <summary><span data-ttu-id="7c669-128">現在のページまたは現在のマスター ページがマスター ページを参照している場合に、ページの初期化中に呼び出され、マスター ページに渡すコンテンツのコレクションを (コンテンツ コントロールから) 作成します。</span><span class="sxs-lookup"><span data-stu-id="7c669-128">Called during page initialization to create a collection of content (from content controls) that is handed to a master page, if the current page or master page refers to a master page.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-129">同一の名前を持つ既存のコンテンツ テンプレート。</span><span class="sxs-lookup"><span data-stu-id="7c669-129">A content template with the same name already exists.</span></span></exception>
        <altmember cref="T:System.Web.UI.MasterPage" />
        <altmember cref="T:System.Web.UI.WebControls.Content" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wtxbf3hh(v=vs.100)"><span data-ttu-id="7c669-130">ASP.NET マスターページの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-130">ASP.NET Master Pages Overview</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOnPreRenderCompleteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c669-131">非同期ページの開始イベント ハンドラー デリゲートおよび終了イベント ハンドラー デリゲートを登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-131">Registers beginning and ending event handler delegates for an asynchronous page.</span></span></summary>
        <altmember cref="T:System.Web.UI.MasterPage" />
        <altmember cref="T:System.Web.UI.WebControls.Content" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wtxbf3hh(v=vs.100)"><span data-ttu-id="7c669-132">ASP.NET マスターページの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-132">ASP.NET Master Pages Overview</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOnPreRenderCompleteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRenderCompleteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRenderCompleteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRenderCompleteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler);" />
      <MemberSignature Language="F#" Value="member this.AddOnPreRenderCompleteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler -&gt; unit" Usage="page.AddOnPreRenderCompleteAsync (beginHandler, endHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="7c669-133"><see cref="T:System.Web.BeginEventHandler" /> メソッドへのデリゲート。</span><span class="sxs-lookup"><span data-stu-id="7c669-133">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.</span></span></param>
        <param name="endHandler"><span data-ttu-id="7c669-134"><see cref="T:System.Web.EndEventHandler" /> メソッドへのデリゲート。</span><span class="sxs-lookup"><span data-stu-id="7c669-134">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.</span></span></param>
        <summary><span data-ttu-id="7c669-135">非同期ページの状態情報を必要としない開始イベント ハンドラー デリゲートおよび終了イベント ハンドラー デリゲートを登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-135">Registers beginning and ending event handler delegates that do not require state information for an asynchronous page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-136"><xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> メソッドを使用して、非同期 Web ページにハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="7c669-136">Use the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to add handlers to an asynchronous Web page.</span></span>

 <span data-ttu-id="7c669-137">複数の非同期ハンドラーを登録できます。ただし、一度に実行されるハンドラーは1つだけです。</span><span class="sxs-lookup"><span data-stu-id="7c669-137">You can register multiple asynchronous handlers; however, only one handler runs at a time.</span></span> <span data-ttu-id="7c669-138">複数の非同期メソッドを同時に処理する場合は、1つの <xref:System.Web.BeginEventHandler> メソッドを使用し、そのハンドラーから複数の非同期操作を起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-138">If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.</span></span>

 <span data-ttu-id="7c669-139">非同期ハンドラーは、<xref:System.Web.UI.Control.PreRender> イベントと <xref:System.Web.UI.Page.PreRenderComplete> イベントの間で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-139">The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.</span></span>

 <span data-ttu-id="7c669-140">まず、(<xref:System.Web.UI.Control.PreRender> イベントを使用して) すべての <xref:System.Web.UI.Page> イベントが実行され、登録されている各 <xref:System.Web.BeginEventHandler> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-140">First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called.</span></span> <span data-ttu-id="7c669-141">ハンドラーが完了すると、対応する <xref:System.Web.EndEventHandler> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-141">When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called.</span></span> <span data-ttu-id="7c669-142">複数の非同期ハンドラーがある場合は、次のハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-142">If there are multiple asynchronous handlers, the next handler is called.</span></span>

 <span data-ttu-id="7c669-143">登録されている非同期イベントハンドラーが呼び出されると、ページの残りのイベントが <xref:System.Web.UI.Page.PreRenderComplete> イベントから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-143">After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span>



## Examples
 <span data-ttu-id="7c669-144">次のコード例では、非同期要求を使用して、ローカル Web サーバーの既定のページの HTML ソースコードを <xref:System.Web.UI.WebControls.TextBox> コントロールに表示します。</span><span class="sxs-lookup"><span data-stu-id="7c669-144">The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7c669-145">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-145">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7c669-146">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-146">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7c669-147">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-147">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/CS/pageaddonprerendercompleteasynccs.aspx#1)]
 [!code-aspx-vb[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/VB/pageaddonprerendercompleteasyncvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-148"><see langword="&lt;async&gt;" /> ページ ディレクティブが、<see langword="true" /> に設定されていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-148">The <see langword="&lt;async&gt;" /> page directive is not set to <see langword="true" />.</span></span>

<span data-ttu-id="7c669-149">- または -</span><span class="sxs-lookup"><span data-stu-id="7c669-149">-or-</span></span>

<span data-ttu-id="7c669-150"><see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> メソッドは、<see cref="E:System.Web.UI.Control.PreRender" /> イベントの後で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-150">The <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> method is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c669-151"><see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> または <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-151">The <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> or <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.MasterPage" />
        <altmember cref="T:System.Web.UI.WebControls.Content" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wtxbf3hh(v=vs.100)"><span data-ttu-id="7c669-152">ASP.NET マスターページの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-152">ASP.NET Master Pages Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddOnPreRenderCompleteAsync">
      <MemberSignature Language="C#" Value="public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnPreRenderCompleteAsync(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOnPreRenderCompleteAsync (beginHandler As BeginEventHandler, endHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOnPreRenderCompleteAsync(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddOnPreRenderCompleteAsync : System.Web.BeginEventHandler * System.Web.EndEventHandler * obj -&gt; unit" Usage="page.AddOnPreRenderCompleteAsync (beginHandler, endHandler, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="state" Type="System.Object" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="7c669-153"><see cref="T:System.Web.BeginEventHandler" /> メソッドへのデリゲート。</span><span class="sxs-lookup"><span data-stu-id="7c669-153">The delegate for the <see cref="T:System.Web.BeginEventHandler" /> method.</span></span></param>
        <param name="endHandler"><span data-ttu-id="7c669-154"><see cref="T:System.Web.EndEventHandler" /> メソッドへのデリゲート。</span><span class="sxs-lookup"><span data-stu-id="7c669-154">The delegate for the <see cref="T:System.Web.EndEventHandler" /> method.</span></span></param>
        <param name="state"><span data-ttu-id="7c669-155">イベント ハンドラーの状態情報を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-155">An object containing state information for the event handlers.</span></span></param>
        <summary><span data-ttu-id="7c669-156">非同期ページの開始イベント ハンドラー デリゲートおよび終了イベント ハンドラー デリゲートを登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-156">Registers beginning and ending  event handler delegates for an asynchronous page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-157">状態情報を必要とするハンドラーを非同期 Web ページに追加するには、<xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-157">Use the <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync%2A> method to add handlers that require state information to an asynchronous Web page.</span></span> <span data-ttu-id="7c669-158">`state` パラメーターで渡されるオブジェクトは、`beginHandler` で指定されたイベントハンドラーデリゲートと `endHandler` パラメーターの間で情報を転送するためにアプリケーションが必要とする任意のオブジェクトにすることができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-158">The object passed in the `state` parameter can be any object that your application requires to transfer information between event handler delegates specified in the `beginHandler` and the `endHandler` parameters.</span></span>

 <span data-ttu-id="7c669-159">複数の非同期ハンドラーを登録できます。ただし、一度に実行されるハンドラーは1つだけです。</span><span class="sxs-lookup"><span data-stu-id="7c669-159">You can register multiple asynchronous handlers; however, only one handler runs at a time.</span></span> <span data-ttu-id="7c669-160">複数の非同期メソッドを同時に処理する場合は、1つの <xref:System.Web.BeginEventHandler> メソッドを使用し、そのハンドラーから複数の非同期操作を起動する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-160">If you want to process multiple asynchronous methods simultaneously, you should use a single <xref:System.Web.BeginEventHandler> method and launch multiple asynchronous operations from that handler.</span></span>

 <span data-ttu-id="7c669-161">非同期ハンドラーは、<xref:System.Web.UI.Control.PreRender> イベントと <xref:System.Web.UI.Page.PreRenderComplete> イベントの間で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-161">The asynchronous handlers are called between the <xref:System.Web.UI.Control.PreRender> and <xref:System.Web.UI.Page.PreRenderComplete> events.</span></span>

 <span data-ttu-id="7c669-162">まず、(<xref:System.Web.UI.Control.PreRender> イベントを使用して) すべての <xref:System.Web.UI.Page> イベントが実行され、登録されている各 <xref:System.Web.BeginEventHandler> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-162">First, all <xref:System.Web.UI.Page> events (through the <xref:System.Web.UI.Control.PreRender> event) are run, and then each registered <xref:System.Web.BeginEventHandler> method is called.</span></span> <span data-ttu-id="7c669-163">ハンドラーが完了すると、対応する <xref:System.Web.EndEventHandler> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-163">When the handler completes, the corresponding <xref:System.Web.EndEventHandler> method is called.</span></span> <span data-ttu-id="7c669-164">複数の非同期ハンドラーがある場合は、次のハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-164">If there are multiple asynchronous handlers, the next handler is called.</span></span>

 <span data-ttu-id="7c669-165">登録されている非同期イベントハンドラーが呼び出されると、ページの残りのイベントが <xref:System.Web.UI.Page.PreRenderComplete> イベントから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-165">After the registered asynchronous event handlers have been called, the rest of the page events are called, beginning with the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span>



## Examples
 <span data-ttu-id="7c669-166">次のコード例では、非同期要求を使用して、ローカル Web サーバーの既定のページの HTML ソースコードを <xref:System.Web.UI.WebControls.TextBox> コントロールに表示します。</span><span class="sxs-lookup"><span data-stu-id="7c669-166">The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7c669-167">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-167">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7c669-168">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-168">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7c669-169">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-169">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/CS/pageaddonprerendercompleteasynccs.aspx#1)]
 [!code-aspx-vb[PageAddOnPreRenderCompleteAsync#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageAddOnPreRenderCompleteAsync/VB/pageaddonprerendercompleteasyncvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-170"><see langword="&lt;async&gt;" /> ページ ディレクティブが、<see langword="true" /> に設定されていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-170">The <see langword="&lt;async&gt;" /> page directive is not set to <see langword="true" />.</span></span>

<span data-ttu-id="7c669-171">- または -</span><span class="sxs-lookup"><span data-stu-id="7c669-171">-or-</span></span>

<span data-ttu-id="7c669-172"><see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> メソッドは、<see cref="E:System.Web.UI.Control.PreRender" /> イベントの後で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-172">The <see cref="M:System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)" /> method is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c669-173"><see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> または <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-173">The <see cref="P:System.Web.UI.PageAsyncTask.BeginHandler" /> or <see cref="P:System.Web.UI.PageAsyncTask.EndHandler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddWrappedFileDependencies">
      <MemberSignature Language="C#" Value="protected internal void AddWrappedFileDependencies (object virtualFileDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddWrappedFileDependencies(object virtualFileDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AddWrappedFileDependencies(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddWrappedFileDependencies (virtualFileDependencies As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddWrappedFileDependencies(System::Object ^ virtualFileDependencies);" />
      <MemberSignature Language="F#" Value="member this.AddWrappedFileDependencies : obj -&gt; unit" Usage="page.AddWrappedFileDependencies virtualFileDependencies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualFileDependencies" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="virtualFileDependencies"><span data-ttu-id="7c669-174">ファイル名の一覧を含んでいる <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-174">An <see cref="T:System.Object" /> containing the list of file names.</span></span></param>
        <summary><span data-ttu-id="7c669-175">現在のページを構成している依存ファイルの一覧を追加します。</span><span class="sxs-lookup"><span data-stu-id="7c669-175">Adds a list of dependent files that make up the current page.</span></span> <span data-ttu-id="7c669-176">このメソッドは、ASP.NET ページ フレームワークによって内部的に使用されるメソッドであり、コードから直接呼び出すためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-176">This method is used internally by the ASP.NET page framework and is not intended to be used directly from your code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-177"><xref:System.Web.UI.Page.AddWrappedFileDependencies%2A> メソッドは、現在のページを構成するユーザーコントロールファイルなどのファイルの一覧を追加します。</span><span class="sxs-lookup"><span data-stu-id="7c669-177">The <xref:System.Web.UI.Page.AddWrappedFileDependencies%2A> method adds a list of files, such as user control files, that make up the current page.</span></span> <span data-ttu-id="7c669-178">これらのページのいずれかが変更された場合、ページ全体が、次回要求されたときにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-178">If any of these pages is modified, the entire page is compiled the next time it is requested.</span></span> <span data-ttu-id="7c669-179">このメソッドは、.NET Framework インフラストラクチャをサポートします。独自に作成したコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-179">This method supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public System.Web.HttpApplicationState Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationState Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As HttpApplicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpApplicationState ^ Application { System::Web::HttpApplicationState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationState" Usage="System.Web.UI.Page.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-180">現在の Web 要求に対する <see cref="T:System.Web.HttpApplicationState" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-180">Gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current Web request.</span></span></summary>
        <value><span data-ttu-id="7c669-181"><see cref="T:System.Web.HttpApplicationState" /> クラス内の現在のデータ。</span><span class="sxs-lookup"><span data-stu-id="7c669-181">The current data in the <see cref="T:System.Web.HttpApplicationState" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 [!code-csharp[Page.Application_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page.Application_Sample1/CS/applicationcs.aspx#1)]
 [!code-vb[Page.Application_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page.Application_Sample1/VB/applicationvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpApplicationState" />
      </Docs>
    </Member>
    <Member MemberName="AspCompatBeginProcessRequest">
      <MemberSignature Language="C#" Value="protected IAsyncResult AspCompatBeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult AspCompatBeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback cb, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function AspCompatBeginProcessRequest (context As HttpContext, cb As AsyncCallback, extraData As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ AspCompatBeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ cb, System::Object ^ extraData);" />
      <MemberSignature Language="F#" Value="member this.AspCompatBeginProcessRequest : System.Web.HttpContext * AsyncCallback * obj -&gt; IAsyncResult" Usage="page.AspCompatBeginProcessRequest (context, cb, extraData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="cb" Type="System.AsyncCallback" />
        <Parameter Name="extraData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7c669-182">現在の要求に関する情報が含まれている <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-182">An <see cref="T:System.Web.HttpContext" /> with information about the current request.</span></span></param>
        <param name="cb"><span data-ttu-id="7c669-183">コールバック メソッド。</span><span class="sxs-lookup"><span data-stu-id="7c669-183">The callback method.</span></span></param>
        <param name="extraData"><span data-ttu-id="7c669-184">要求を ASP 要求と同様に処理する必要があるその他のデータ。</span><span class="sxs-lookup"><span data-stu-id="7c669-184">Any extra data needed to process the request in the same manner as an ASP request.</span></span></param>
        <summary><span data-ttu-id="7c669-185">Active Server Page (ASP) リソースに対する要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="7c669-185">Initiates a request for Active Server Page (ASP) resources.</span></span> <span data-ttu-id="7c669-186">このメッソドは、レガシ ASP アプリケーションとの互換性のために用意されています。</span><span class="sxs-lookup"><span data-stu-id="7c669-186">This method is provided for compatibility with legacy ASP applications.</span></span></summary>
        <returns><span data-ttu-id="7c669-187"><see cref="T:System.IAsyncResult" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-187">An <see cref="T:System.IAsyncResult" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-188">このメソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-188">Do not call this method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AspCompatEndProcessRequest">
      <MemberSignature Language="C#" Value="protected void AspCompatEndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AspCompatEndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AspCompatEndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AspCompatEndProcessRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.AspCompatEndProcessRequest : IAsyncResult -&gt; unit" Usage="page.AspCompatEndProcessRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="7c669-189">要求によって生成された ASP ページ。</span><span class="sxs-lookup"><span data-stu-id="7c669-189">The ASP page generated by the request.</span></span></param>
        <summary><span data-ttu-id="7c669-190">Active Server Page (ASP) リソースに対する要求を終了します。</span><span class="sxs-lookup"><span data-stu-id="7c669-190">Terminates a request for Active Server Page (ASP) resources.</span></span> <span data-ttu-id="7c669-191">このメッソドは、レガシ ASP アプリケーションとの互換性のために用意されています。</span><span class="sxs-lookup"><span data-stu-id="7c669-191">This method is provided for compatibility with legacy ASP applications.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-192">このメソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-192">Do not call this method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AspCompatMode">
      <MemberSignature Language="C#" Value="protected bool AspCompatMode { set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AspCompatMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AspCompatMode" />
      <MemberSignature Language="VB.NET" Value="Protected Property AspCompatMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AspCompatMode {  void set(bool value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.AspCompatMode : bool" Usage="System.Web.UI.Page.AspCompatMode" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="protected bool AspCompatMode { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AspCompatMode { bool get(); void set(bool value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.AspCompatMode : bool with get, set" Usage="System.Web.UI.Page.AspCompatMode" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-193">ページをシングルスレッド アパートメント (STA: Single-Threaded Apartment) スレッドで実行できるかどうかを示す値を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-193">Sets a value indicating whether the page can be executed on a single-threaded apartment (STA) thread.</span></span></summary>
        <value><span data-ttu-id="7c669-194">ページが Active Server Pages (ASP) コードをサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-194"><see langword="true" /> if the page supports Active Server Pages (ASP) code; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7c669-195">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-195">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-196">`true`に設定すると、このプロパティによってページがシングルスレッドアパートメント (STA) スレッドで実行されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-196">When set to `true`, this property allows the page to be executed on a single-threaded apartment (STA) thread.</span></span> <span data-ttu-id="7c669-197">これにより、ページは Visual Basic 6.0 を使用して開発されたコンポーネントなどの STA コンポーネントを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-197">This allows the page to call STA components, such as components developed with Visual Basic 6.0.</span></span> <span data-ttu-id="7c669-198">このプロパティを `true` に設定すると、そのページで、アンマネージ ASP 組み込みオブジェクトへのアクセスを必要とする COM + コンポーネントを呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-198">Setting this property to `true` also allows the page to call COM+ components that require access to the unmanaged ASP built-in objects.</span></span> <span data-ttu-id="7c669-199">これらには、ASP `ObjectContext` オブジェクトまたは `OnStartPage` メソッドを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-199">These are accessible through the ASP `ObjectContext` object or the `OnStartPage` method.</span></span>  
  
 <span data-ttu-id="7c669-200">ほとんどの場合、このプロパティはコードで設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-200">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="7c669-201">.Aspx ファイルで[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブを使用して、`aspcompat` 属性を `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-201">Set the `aspcompat` attribute to `true` using the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-202">ページが要求されると、動的に生成されたクラスによってプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-202">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncMode">
      <MemberSignature Language="C#" Value="protected bool AsyncMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsyncMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AsyncMode" />
      <MemberSignature Language="VB.NET" Value="Protected Property AsyncMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool AsyncMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncMode : bool with get, set" Usage="System.Web.UI.Page.AsyncMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-203">ページが同期して処理されるのか、非同期に処理されるのかを示す値を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-203">Sets a value indicating whether the page is processed synchronously or asynchronously.</span></span></summary>
        <value><span data-ttu-id="7c669-204">ページが非同期に処理される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-204"><see langword="true" /> if the page is processed asynchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-205"><xref:System.Web.UI.Page.AsyncMode%2A> プロパティは、ページのコードが生成されるときに <xref:System.Web.UI.Page> パーサーによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-205">The <xref:System.Web.UI.Page.AsyncMode%2A> property is set by the <xref:System.Web.UI.Page> parser when code for the page is generated.</span></span> <span data-ttu-id="7c669-206">この値を設定するには、 [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブで `Async` 属性を使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-206">Use the `Async` attribute in [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive to set this value.</span></span>  
  
 <span data-ttu-id="7c669-207">`AspCompat` 属性が `true` に設定されている場合、または[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブで `Transaction` 属性が `Disabled` 以外の値に設定されている場合は、非同期ページが機能しません。</span><span class="sxs-lookup"><span data-stu-id="7c669-207">Asynchronous pages do not work when the `AspCompat` attribute is set to `true` or the `Transaction` attribute is set to a value other than `Disabled` in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncPageBeginProcessRequest">
      <MemberSignature Language="C#" Value="protected IAsyncResult AsyncPageBeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object extraData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult AsyncPageBeginProcessRequest(class System.Web.HttpContext context, class System.AsyncCallback callback, object extraData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function AsyncPageBeginProcessRequest (context As HttpContext, callback As AsyncCallback, extraData As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ AsyncPageBeginProcessRequest(System::Web::HttpContext ^ context, AsyncCallback ^ callback, System::Object ^ extraData);" />
      <MemberSignature Language="F#" Value="member this.AsyncPageBeginProcessRequest : System.Web.HttpContext * AsyncCallback * obj -&gt; IAsyncResult" Usage="page.AsyncPageBeginProcessRequest (context, callback, extraData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="extraData" Type="System.Object" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7c669-208">要求の <see cref="T:System.Web.HttpContext" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-208">The <see cref="T:System.Web.HttpContext" /> for the request.</span></span></param>
        <param name="callback"><span data-ttu-id="7c669-209">処理がいつ完了するのかを知らせるコールバック メソッド。</span><span class="sxs-lookup"><span data-stu-id="7c669-209">The callback method to notify when the process is complete.</span></span></param>
        <param name="extraData"><span data-ttu-id="7c669-210">非同期メソッドの状態データ。</span><span class="sxs-lookup"><span data-stu-id="7c669-210">State data for the asynchronous method.</span></span></param>
        <summary><span data-ttu-id="7c669-211">非同期のページ要求の処理を開始します。</span><span class="sxs-lookup"><span data-stu-id="7c669-211">Begins processing an asynchronous page request.</span></span></summary>
        <returns><span data-ttu-id="7c669-212">非同期の要求を参照する <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-212">An <see cref="T:System.IAsyncResult" /> that references the asynchronous request.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncPageEndProcessRequest">
      <MemberSignature Language="C#" Value="protected void AsyncPageEndProcessRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AsyncPageEndProcessRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AsyncPageEndProcessRequest (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AsyncPageEndProcessRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.AsyncPageEndProcessRequest : IAsyncResult -&gt; unit" Usage="page.AsyncPageEndProcessRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="7c669-213">保留中の非同期の要求を参照している <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-213">An <see cref="T:System.IAsyncResult" /> referencing a pending asynchronous request.</span></span></param>
        <summary><span data-ttu-id="7c669-214">非同期のページ要求の処理を終了します。</span><span class="sxs-lookup"><span data-stu-id="7c669-214">Ends processing an asynchronous page request.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan AsyncTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan AsyncTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AsyncTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan AsyncTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncTimeout : TimeSpan with get, set" Usage="System.Web.UI.Page.AsyncTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-215">取得または非同期タスクを処理するときに使用されるタイムアウト間隔を示す値を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-215">Gets or sets a value indicating the time-out interval used when processing asynchronous tasks.</span></span></summary>
        <value><span data-ttu-id="7c669-216">非同期操作を完了するまでの、許容される時間間隔を格納している <see cref="T:System.TimeSpan" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-216">A <see cref="T:System.TimeSpan" /> that contains the allowed time interval for completion of the asynchronous task.</span></span> <span data-ttu-id="7c669-217">既定の時間間隔は 45 秒です。</span><span class="sxs-lookup"><span data-stu-id="7c669-217">The default time interval is 45 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-218">ページの非同期タイムアウトは、ページが非同期タスクの実行を待機する時間を表します。</span><span class="sxs-lookup"><span data-stu-id="7c669-218">The asynchronous time-out of the page represents the amount of time that the page will wait to perform asynchronous tasks.</span></span> <span data-ttu-id="7c669-219">ほとんどの場合、このプロパティはコードで設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-219">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="7c669-220">Web 構成ファイルの[pages 要素](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100))または[@ page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブを使用して、ページの非同期タイムアウト間隔を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-220">Set the page asynchronous time-out interval using the [pages element](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100)) of the Web configuration file or in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive.</span></span> <span data-ttu-id="7c669-221">ページ構成セクションで設定された値は、ページディレクティブによって上書きされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-221">Values set in the page configuration section are overwritten by the page directive.</span></span>  
  
 <span data-ttu-id="7c669-222"><xref:System.Web.UI.PageAsyncTask> クラスを使用して非同期タスクを定義し、開始、終了、およびタイムアウトハンドラーを登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-222">Define your asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class and register a beginning, an ending, and a time-out handler.</span></span> <span data-ttu-id="7c669-223">指定された時間間隔で非同期タスクが完了しない場合は、タイムアウトハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-223">If the asynchronous task does not complete in the time interval specified, the time-out handler will be invoked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c669-224">次のコード例では、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> メソッドと <xref:System.Web.UI.Page.RegisterAsyncTask%2A> メソッドを使用して、<xref:System.Web.UI.Page.AsyncTimeout%2A> プロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7c669-224">The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods.</span></span> <span data-ttu-id="7c669-225">開始、終了、およびタイムアウトハンドラーの使用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-225">Note the use of beginning, ending, and time-out handlers.</span></span> <span data-ttu-id="7c669-226">この例では、<xref:System.Web.UI.Page.AsyncTimeout%2A> プロパティで指定されているタスクに割り当てられた時間を超える非同期タスクの状況を示すために、人為的な遅延が発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-226">In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property.</span></span> <span data-ttu-id="7c669-227">実際のシナリオでは、非同期タスクを使用してデータベース呼び出しやイメージの生成を実行できます。また、タイムアウトハンドラーは、タスクが指定された時間内に実行されない場合に、正常なパフォーマンス低下を提供します。</span><span class="sxs-lookup"><span data-stu-id="7c669-227">In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.</span></span> <span data-ttu-id="7c669-228">Page ディレクティブには、<xref:System.Web.UI.Page.AsyncTimeout%2A> プロパティが設定されていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-228">Note that the <xref:System.Web.UI.Page.AsyncTimeout%2A> property is set in the page directive.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.aspx#1)]

 [!code-csharp[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.cs#2)]
 [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7c669-229">プロパティは負の値に設定されていました。</span><span class="sxs-lookup"><span data-stu-id="7c669-229">The property was set to a negative value.</span></span></exception>
        <altmember cref="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks" />
        <altmember cref="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)" />
        <altmember cref="T:System.Web.UI.PageAsyncTask" />
      </Docs>
    </Member>
    <Member MemberName="AutoPostBackControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control AutoPostBackControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control AutoPostBackControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.AutoPostBackControl" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPostBackControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ AutoPostBackControl { System::Web::UI::Control ^ get(); void set(System::Web::UI::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AutoPostBackControl : System.Web.UI.Control with get, set" Usage="System.Web.UI.Page.AutoPostBackControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-230">ポストバックの実行に使用されるページ内のコントロールを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-230">Gets or sets the control in the page that is used to perform postbacks.</span></span></summary>
        <value><span data-ttu-id="7c669-231">ポストバックの実行に使用されるコントロール。</span><span class="sxs-lookup"><span data-stu-id="7c669-231">The control that is used to perform postbacks.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="protected bool Buffer { set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Buffer" />
      <MemberSignature Language="VB.NET" Value="Protected Property Buffer As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Buffer {  void set(bool value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Buffer : bool" Usage="System.Web.UI.Page.Buffer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public bool Buffer { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property Buffer As Boolean" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Buffer { bool get(); void set(bool value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Buffer : bool with get, set" Usage="System.Web.UI.Page.Buffer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-232">ページ出力がバッファリングされるかどうかを示す値を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-232">Sets a value indicating whether the page output is buffered.</span></span></summary>
        <value><span data-ttu-id="7c669-233">ページ出力がバッファリングされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-233"><see langword="true" /> if page output is buffered; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7c669-234">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-234">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-235">ほとんどの場合、このプロパティはコードで設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-235">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="7c669-236">.Aspx ファイルで[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブを使用して、<xref:System.Web.UI.Page.Buffer%2A> 属性を `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-236">Set the <xref:System.Web.UI.Page.Buffer%2A> attribute to `true` using the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-237">ページが要求されると、動的に生成されたクラスによってプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-237">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="7c669-238"><xref:System.Web.UI.Page.Buffer%2A> プロパティは、<xref:System.Web.HttpResponse.BufferOutput%2A> プロパティを設定して取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-238">The <xref:System.Web.UI.Page.Buffer%2A> property sets and gets the <xref:System.Web.HttpResponse.BufferOutput%2A> property.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Cache" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cache : System.Web.Caching.Cache" Usage="System.Web.UI.Page.Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-239">ページが存在するアプリケーションに関連付けられた <see cref="T:System.Web.Caching.Cache" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-239">Gets the <see cref="T:System.Web.Caching.Cache" /> object associated with the application in which the page resides.</span></span></summary>
        <value><span data-ttu-id="7c669-240">ページのアプリケーションに関連付けられた <see cref="T:System.Web.Caching.Cache" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-240">The <see cref="T:System.Web.Caching.Cache" /> associated with the page's application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-241">アプリケーションの <xref:System.Web.Caching.Cache> オブジェクトを使用すると、後続の要求に対して任意のデータを格納および取得できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-241">An application's <xref:System.Web.Caching.Cache> object allows you to store and retrieve arbitrary data on subsequent requests.</span></span> <span data-ttu-id="7c669-242">キャッシュは、ページまたはユーザーセッションに特に関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-242">The cache is not specifically associated with a page or user session.</span></span> <span data-ttu-id="7c669-243">これは主に、アプリケーションのパフォーマンスを向上させるために使用されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-243">It is used primarily to enhance application performance.</span></span> <span data-ttu-id="7c669-244">詳細については、「[アプリケーションデータのキャッシュ](https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-244">For more information, see [Caching Application Data](https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)).</span></span> <span data-ttu-id="7c669-245">アプリケーションキャッシュとページ出力キャッシュの違いの詳細については、「ASP.NET cache の[概要](https://docs.microsoft.com/previous-versions/aspnet/ms178597(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-245">For more information on the difference between application caching and page output caching, see [ASP.NET Caching Overview](https://docs.microsoft.com/previous-versions/aspnet/ms178597(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="7c669-246">次のコード例では、<xref:System.Web.UI.Page.Cache%2A?displayProperty=nameWithType> プロパティを使用して、2つの整数の合計を <xref:System.Web.Caching.Cache?displayProperty=nameWithType> オブジェクトに挿入します。</span><span class="sxs-lookup"><span data-stu-id="7c669-246">The following code example inserts the sum of two integers into the <xref:System.Web.Caching.Cache?displayProperty=nameWithType> object using the <xref:System.Web.UI.Page.Cache%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7c669-247">次に、<xref:System.Web.Caching.Cache.Get%2A?displayProperty=nameWithType> メソッドを使用して値を取得し、それを <xref:System.Web.UI.WebControls.Label> Web サーバーコントロールに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7c669-247">It then retrieves the value using the <xref:System.Web.Caching.Cache.Get%2A?displayProperty=nameWithType> method and writes it to a <xref:System.Web.UI.WebControls.Label> Web server control.</span></span>

 [!code-csharp[System.Web.Page.Cache_Replacement#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Page.Cache_Replacement/CS/pagecachecs.aspx#1)]
 [!code-vb[System.Web.Page.Cache_Replacement#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Page.Cache_Replacement/VB/pagecachevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-248"><see cref="T:System.Web.Caching.Cache" /> のインスタンスが作成されていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-248">An instance of <see cref="T:System.Web.Caching.Cache" /> is not created.</span></span></exception>
        <altmember cref="T:System.Web.Caching.Cache" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/6hbbsfk6(v=vs.100)"><span data-ttu-id="7c669-249">アプリケーションデータのキャッシュ</span><span class="sxs-lookup"><span data-stu-id="7c669-249">Caching Application Data</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178597(v=vs.100)"><span data-ttu-id="7c669-250">ASP.NET でのキャッシュの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-250">Introduction to Caching in ASP.NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClientQueryString">
      <MemberSignature Language="C#" Value="public string ClientQueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientQueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ClientQueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientQueryString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientQueryString : string" Usage="System.Web.UI.Page.ClientQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-251">要求された URL のクエリ文字列部分を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-251">Gets the query string portion of the requested URL.</span></span></summary>
        <value><span data-ttu-id="7c669-252">要求された URL のクエリ文字列部分。</span><span class="sxs-lookup"><span data-stu-id="7c669-252">The query string portion of the requested URL.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-253"><xref:System.Web.UI.Page.ClientQueryString%2A> プロパティには、ブラウザーによって要求された URL のクエリ文字列部分が含まれます。</span><span class="sxs-lookup"><span data-stu-id="7c669-253">The <xref:System.Web.UI.Page.ClientQueryString%2A> property contains the query string portion of the URL requested by the browser.</span></span> <span data-ttu-id="7c669-254">たとえば、要求された URL が `http://www.contoso.com/default.aspx?id=100`の場合、<xref:System.Web.UI.Page.ClientQueryString%2A> プロパティには "id = 100" が含まれます。</span><span class="sxs-lookup"><span data-stu-id="7c669-254">For example, if the requested URL is `http://www.contoso.com/default.aspx?id=100`, the <xref:System.Web.UI.Page.ClientQueryString%2A> property will contain "id=100".</span></span> <span data-ttu-id="7c669-255"><xref:System.Web.UI.Page.ClientQueryString%2A> プロパティがエンコードされます。<xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=nameWithType> メソッドを使用して、クエリ文字列をデコードします。</span><span class="sxs-lookup"><span data-stu-id="7c669-255">The <xref:System.Web.UI.Page.ClientQueryString%2A> property is encoded; use the <xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=nameWithType> method to decode the query string.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientScript">
      <MemberSignature Language="C#" Value="public System.Web.UI.ClientScriptManager ClientScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ClientScriptManager ClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ClientScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientScript As ClientScriptManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ClientScriptManager ^ ClientScript { System::Web::UI::ClientScriptManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientScript : System.Web.UI.ClientScriptManager" Usage="System.Web.UI.Page.ClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientScriptManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-256">スクリプトの管理と登録、およびページへの追加に使用する <see cref="T:System.Web.UI.ClientScriptManager" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-256">Gets a <see cref="T:System.Web.UI.ClientScriptManager" /> object used to manage, register, and add script to the page.</span></span></summary>
        <value><span data-ttu-id="7c669-257"><see cref="T:System.Web.UI.ClientScriptManager" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-257">A <see cref="T:System.Web.UI.ClientScriptManager" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-258"><xref:System.Web.UI.Page.ClientScript%2A> プロパティを使用して、Web ページに対するスクリプトの管理、登録、および追加に使用できる <xref:System.Web.UI.ClientScriptManager> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-258">Use the <xref:System.Web.UI.Page.ClientScript%2A> property to get a <xref:System.Web.UI.ClientScriptManager> object that can be used to manage, register, and add script to a Web page.</span></span> <span data-ttu-id="7c669-259">詳細については、<xref:System.Web.UI.ClientScriptManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-259">For more information, see the <xref:System.Web.UI.ClientScriptManager> class.</span></span>

 <span data-ttu-id="7c669-260"><xref:System.Web.UI.ClientScriptManager> クラスは [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] で新しく追加されたものであり、現在非推奨とされているスクリプトを管理するための <xref:System.Web.UI.Page> クラスのメソッドを置き換えます。</span><span class="sxs-lookup"><span data-stu-id="7c669-260">The <xref:System.Web.UI.ClientScriptManager> class is new in [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] and replaces <xref:System.Web.UI.Page> class methods for managing scripts that are now deprecated.</span></span>



## Examples
 <span data-ttu-id="7c669-261">例については、<xref:System.Web.UI.ClientScriptManager> クラスの概要に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-261">For an example, see the <xref:System.Web.UI.ClientScriptManager> class overview topic.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="ClientTarget">
      <MemberSignature Language="C#" Value="public string ClientTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientTarget" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ClientTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientTarget As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientTarget { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientTarget : string with get, set" Usage="System.Web.UI.Page.ClientTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-262">ブラウザーの自動検出機能をオーバーライドし、ページが特定のブラウザー クライアントでどのように表示されるかを指定できるようにする値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-262">Gets or sets a value that allows you to override automatic detection of browser capabilities and to specify how a page is rendered for particular browser clients.</span></span></summary>
        <value><span data-ttu-id="7c669-263">オーバーライドするブラウザー機能を指定する <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-263">A <see cref="T:System.String" /> that specifies the browser capabilities that you want to override.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-264"><xref:System.Web.UI.Page.ClientTarget%2A> プロパティを設定しない場合、<xref:System.Web.UI.Page.Request%2A?displayProperty=nameWithType> プロパティに関連付けられた <xref:System.Web.HttpBrowserCapabilities> オブジェクトは、クライアントブラウザーの機能を反映します。</span><span class="sxs-lookup"><span data-stu-id="7c669-264">If you do not set the <xref:System.Web.UI.Page.ClientTarget%2A> property, the <xref:System.Web.HttpBrowserCapabilities> object associated with the <xref:System.Web.UI.Page.Request%2A?displayProperty=nameWithType> property reflects the capabilities of the client browser.</span></span> <span data-ttu-id="7c669-265">このプロパティを設定すると、クライアントブラウザーの検出が無効になり、指定した値 (エイリアス) に関連付けられたブラウザー機能がページで使用されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-265">If you do set this property, client browser detection is disabled and the page will use browser capabilities associated with the value (alias) that you provide.</span></span>  
  
 <span data-ttu-id="7c669-266">Web サーバーコンピューター上のルート Web.config 構成ファイルは、一般的なユーザーエージェント文字列の短縮形として使用できる次の既定のエイリアスを定義します。</span><span class="sxs-lookup"><span data-stu-id="7c669-266">The root Web.config configuration file on the Web server computer defines the following default aliases that you can use as shorthand for common user-agent strings:</span></span>  
  
-   <span data-ttu-id="7c669-267">`uplevel`。 Internet Explorer 6.0 に相当するブラウザーの機能を指定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-267">`uplevel`, which specifies browser capabilities equivalent to Internet Explorer 6.0.</span></span>  
  
-   <span data-ttu-id="7c669-268">`downlevel`。クライアントスクリプトをサポートしていない古いブラウザーと同等のブラウザー機能を指定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-268">`downlevel`, which specifies browser capabilities equivalent to older browsers that do not support client script.</span></span> <span data-ttu-id="7c669-269">このエイリアスを使用すると、クライアントスクリプトが無効になっているブラウザーで Web ページがどのように動作するかを決定できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-269">You can use this alias to determine how Web pages would work in a browser that has client script disabled.</span></span>  
  
 <span data-ttu-id="7c669-270">このプロパティを使用してプログラムでエイリアスを設定することも、 [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブの `ClientTarget` 属性を使用して、この別名を宣言によって設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-270">You can set the alias programmatically using this property, or you can set it declaratively using the `ClientTarget` attribute of the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive.</span></span>  
  
 <span data-ttu-id="7c669-271">追加のエイリアスは、アプリケーションレベルの Web.config ファイルの `clientTarget` セクションで定義できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-271">You can define additional aliases in the `clientTarget` section of the application-level Web.config file.</span></span> <span data-ttu-id="7c669-272">詳細については、「 [ClientTarget 要素 (ASP.NET Settings スキーマ)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/6379d90d(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-272">For more information, see [clientTarget Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/6379d90d(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c669-273">次のコード例では、`ie302` エイリアスを定義し、Web.config ファイルでアプリケーションを構成するために必要なセクションを含めます。</span><span class="sxs-lookup"><span data-stu-id="7c669-273">The following code example defines an `ie302` alias and includes sections needed to configure your application in its Web.config file.</span></span> <span data-ttu-id="7c669-274">このエイリアスを使用して、<xref:System.Web.UI.Page.ClientTarget%2A> プロパティを `ie302` に設定し、Internet Explorer 3.02 ブラウザー専用のページをカスタマイズできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-274">Using this alias, you can set the <xref:System.Web.UI.Page.ClientTarget%2A> property to `ie302` and customize pages specifically for Internet Explorer 3.02 browsers.</span></span>  
  
```xml
<configuration>  
  <system.web>  
   <clientTarget>  
    <add alias="ie302" useragent="Mozilla/2.0 (compatible; MSIE 3.02; Windows NT 3.5)" />  
   </clientTarget>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/x3k2ssx2(v=vs.100)"><span data-ttu-id="7c669-275">ASP.NET サーバーコントロールとブラウザー機能</span><span class="sxs-lookup"><span data-stu-id="7c669-275">ASP.NET Server Controls and Browser Capabilities</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178684(v=vs.100)"><span data-ttu-id="7c669-276">ASP.NET 構成ファイル</span><span class="sxs-lookup"><span data-stu-id="7c669-276">ASP.NET Configuration Files</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CodePage">
      <MemberSignature Language="C#" Value="protected int CodePage { set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CodePage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.CodePage" />
      <MemberSignature Language="VB.NET" Value="Protected Property CodePage As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int CodePage {  void set(int value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.CodePage : int" Usage="System.Web.UI.Page.CodePage" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public int CodePage { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property CodePage As Integer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CodePage { int get(); void set(int value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.CodePage : int with get, set" Usage="System.Web.UI.Page.CodePage" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-277">現在の <see cref="T:System.Web.UI.Page" /> のコード ページ ID を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-277">Sets the code page identifier for the current <see cref="T:System.Web.UI.Page" />.</span></span></summary>
        <value><span data-ttu-id="7c669-278">現在の <see cref="T:System.Web.UI.Page" /> のコード ページ ID を表す整数。</span><span class="sxs-lookup"><span data-stu-id="7c669-278">An integer that represents the code page identifier for the current <see cref="T:System.Web.UI.Page" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-279">ほとんどの場合、このプロパティはコードで設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-279">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="7c669-280">.Aspx ファイルで[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブを使用して、`CodePage` 属性を目的の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-280">Set the `CodePage` attribute to the value you want using the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-281">ページが要求されると、動的に生成されたクラスによってプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-281">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.Encoding.CodePage" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="protected string ContentType { set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ContentType" />
      <MemberSignature Language="VB.NET" Value="Protected Property ContentType As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ContentType {  void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Web.UI.Page.ContentType" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.UI.Page.ContentType" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-282">ページに関連付けられている <see cref="T:System.Web.HttpResponse" /> オブジェクトの HTTP MIME 型を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-282">Sets the HTTP MIME type for the <see cref="T:System.Web.HttpResponse" /> object associated with the page.</span></span></summary>
        <value><span data-ttu-id="7c669-283">現在のページに関連付けられている HTTP MIME 型。</span><span class="sxs-lookup"><span data-stu-id="7c669-283">The HTTP MIME type associated with the current page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-284">ほとんどの場合、このプロパティはコードで設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-284">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="7c669-285">.Aspx ファイルで[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブを使用して、`ContentType` 属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-285">Set the `ContentType` attribute using the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-286">ページが要求されると、動的に生成されたクラスによってプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-286">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="protected override System.Web.HttpContext Context { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpContext Context" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Context" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Context As HttpContext" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Context : System.Web.HttpContext" Usage="System.Web.UI.Page.Context" />
      <MemberSignature Language="C#" Value="protected internal override System.Web.HttpContext Context { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property Context As HttpContext" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Web::HttpContext ^ Context { System::Web::HttpContext ^ get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-287">ページに関連付けられている <see cref="T:System.Web.HttpContext" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-287">Gets the <see cref="T:System.Web.HttpContext" /> object associated with the page.</span></span></summary>
        <value><span data-ttu-id="7c669-288">現在のページに関連付けられた情報が格納されている <see cref="T:System.Web.HttpContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-288">An <see cref="T:System.Web.HttpContext" /> object that contains information associated with the current page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-289">このプロパティは、ページが実行されているコンテキスト (要求、応答、セッション、アプリケーションに関する情報など) にプログラムでアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="7c669-289">This property provides programmatic access to the context the page runs in, including information about the request, response, session, and application.</span></span>



## Examples
 <span data-ttu-id="7c669-290">次のコード例では、<xref:System.Web.UI.Page.Context%2A> プロパティを使用して、<xref:System.Web.HttpContext.AddError%2A?displayProperty=nameWithType> および <xref:System.Web.HttpContext.ClearError%2A?displayProperty=nameWithType> メソッドと <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=nameWithType> プロパティにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7c669-290">The following code example uses the <xref:System.Web.UI.Page.Context%2A> property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=nameWithType> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=nameWithType> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7c669-291">この例では、<xref:System.Web.HttpContext.AddError%2A> メソッドを使用して3つのカスタム例外を作成し、<xref:System.Web.HttpContext.AllErrors%2A> プロパティを使用してこれらの例外を配列に読み込みます。</span><span class="sxs-lookup"><span data-stu-id="7c669-291">The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array.</span></span> <span data-ttu-id="7c669-292">次に、格納しているページに配列を書き込み、<xref:System.Web.HttpContext.ClearError%2A> メソッドを使用して、<xref:System.Web.UI.Page.Context%2A> プロパティからすべてのエラーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="7c669-292">It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the <xref:System.Web.UI.Page.Context%2A> property.</span></span>

 [!code-csharp[System.Web.UI.Page.Context#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Context/CS/pagecontextcs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Context#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Context/VB/pagecontextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriter">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter tw);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter tw) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateHtmlTextWriter (tw As TextWriter) As HtmlTextWriter" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ tw);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member CreateHtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter&#xA;override this.CreateHtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="page.CreateHtmlTextWriter tw" />
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter tw);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.HtmlTextWriter CreateHtmlTextWriter(class System.IO.TextWriter tw) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateHtmlTextWriter (tw As TextWriter) As HtmlTextWriter" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriter(System::IO::TextWriter ^ tw);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tw" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="tw"><span data-ttu-id="7c669-293"><see cref="T:System.IO.TextWriter" /> を作成するために使用する <see cref="T:System.Web.UI.HtmlTextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-293">The <see cref="T:System.IO.TextWriter" /> used to create the <see cref="T:System.Web.UI.HtmlTextWriter" />.</span></span></param>
        <summary><span data-ttu-id="7c669-294">ページの内容を表示する <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="7c669-294">Creates an <see cref="T:System.Web.UI.HtmlTextWriter" /> object to render the page's content.</span></span></summary>
        <returns><span data-ttu-id="7c669-295"><see cref="T:System.Web.UI.HtmlTextWriter" />または<see cref="T:System.Web.UI.Html32TextWriter" />です。</span><span class="sxs-lookup"><span data-stu-id="7c669-295">An <see cref="T:System.Web.UI.HtmlTextWriter" /> or <see cref="T:System.Web.UI.Html32TextWriter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-296"><xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> メソッドは、ページ要求に関連付けられている <xref:System.Web.HttpContext.Request%2A> オブジェクトの <xref:System.Web.HttpRequest.Browser%2A> プロパティを使用して <xref:System.IO.TextWriter> を作成します。</span><span class="sxs-lookup"><span data-stu-id="7c669-296">The <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method creates a <xref:System.IO.TextWriter> through the <xref:System.Web.HttpRequest.Browser%2A> property of the <xref:System.Web.HttpContext.Request%2A> object associated with the page request.</span></span> <span data-ttu-id="7c669-297">[`browserCaps` 構成] セクションで、<xref:System.Web.UI.HtmlTextWriter> への参照を追加できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-297">You can add a reference to an <xref:System.Web.UI.HtmlTextWriter> in the `browserCaps` configuration section.</span></span> <span data-ttu-id="7c669-298"><xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> メソッドをオーバーライドして、カスタム検索を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c669-298">Override the <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method to perform custom lookup.</span></span>



## Examples
 <span data-ttu-id="7c669-299">次のコード例では、<xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> メソッドを使用して、`MyHtmlTextWriter`という名前のカスタム <xref:System.Web.UI.HtmlTextWriter> オブジェクトのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="7c669-299">The following code example uses the <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method to create an instance of a custom <xref:System.Web.UI.HtmlTextWriter> object named `MyHtmlTextWriter`.</span></span> <span data-ttu-id="7c669-300"><xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> メソッドは <xref:System.Web.UI.Page>から派生する `MyPage` クラスでオーバーライドされます。これ `MyHtmlTextWriter` により、ページが要求されたときに ASP.NET サーバーコントロールがレンダリングされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-300">The <xref:System.Web.UI.Page.CreateHtmlTextWriter%2A> method is overridden in the `MyPage` class, which is derived from <xref:System.Web.UI.Page>, so that `MyHtmlTextWriter` renders ASP.NET server controls when the page is requested.</span></span> <span data-ttu-id="7c669-301">この例では、アダプターの <xref:System.IO.TextWriter> 動作が禁止されていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-301">Note that this example will prevent adapter <xref:System.IO.TextWriter> behavior.</span></span>

 [!code-csharp[Page_CreateHtmlTextWriter#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_CreateHtmlTextWriter/CS/page_createhtmltextwriter.cs#2)]
 [!code-vb[Page_CreateHtmlTextWriter#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_CreateHtmlTextWriter/VB/page_createhtmltextwriter.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="T:System.Web.UI.Html32TextWriter" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="M:System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CreateHtmlTextWriterFromType">
      <MemberSignature Language="C#" Value="public static System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType (System.IO.TextWriter tw, Type writerType);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType(class System.IO.TextWriter tw, class System.Type writerType) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHtmlTextWriterFromType (tw As TextWriter, writerType As Type) As HtmlTextWriter" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::HtmlTextWriter ^ CreateHtmlTextWriterFromType(System::IO::TextWriter ^ tw, Type ^ writerType);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="static member CreateHtmlTextWriterFromType : System.IO.TextWriter * Type -&gt; System.Web.UI.HtmlTextWriter" Usage="System.Web.UI.Page.CreateHtmlTextWriterFromType (tw, writerType)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tw" Type="System.IO.TextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="writerType" Type="System.Type" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="tw"><span data-ttu-id="7c669-302"><see cref="T:System.IO.TextWriter" /> を作成するために使用する <see cref="T:System.Web.UI.HtmlTextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-302">The <see cref="T:System.IO.TextWriter" /> used to create the <see cref="T:System.Web.UI.HtmlTextWriter" />.</span></span></param>
        <param name="writerType"><span data-ttu-id="7c669-303">作成するテキスト ライターの型。</span><span class="sxs-lookup"><span data-stu-id="7c669-303">The type of text writer to create.</span></span></param>
        <summary><span data-ttu-id="7c669-304">ページの内容を表示するために指定された <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="7c669-304">Creates a specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object to render the page's content.</span></span></summary>
        <returns><span data-ttu-id="7c669-305">ページの内容を表示する <see cref="T:System.Web.UI.HtmlTextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-305">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that renders the content of the page.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-306">このメソッドは、ページアダプターで内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-306">This method is used internally in page adapters.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-307"><paramref name="writerType" /> プロパティが無効な型に設定されています。</span><span class="sxs-lookup"><span data-stu-id="7c669-307">The <paramref name="writerType" /> parameter is set to an invalid type.</span></span></exception>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="protected string Culture { set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string Culture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Culture" />
      <MemberSignature Language="VB.NET" Value="Protected Property Culture As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ Culture {  void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Culture : string" Usage="System.Web.UI.Page.Culture" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public string Culture { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Culture { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Culture : string with get, set" Usage="System.Web.UI.Page.Culture" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-308">ページに関連付けられている <see cref="T:System.Threading.Thread" /> オブジェクトのカルチャ ID を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-308">Sets the culture ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.</span></span></summary>
        <value><span data-ttu-id="7c669-309">有効なカルチャ ID。</span><span class="sxs-lookup"><span data-stu-id="7c669-309">A valid culture ID.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-310">.Aspx ファイルの[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブで `Culture` 属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-310">Set the `Culture` attribute in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-311">ページが要求されると、動的に生成されたクラスによって、このプロパティの値が設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-311">When the page is requested, the dynamically generated class sets the value of this property.</span></span> <span data-ttu-id="7c669-312">また、<xref:System.Web.UI.Page.Culture%2A> プロパティの値は、プログラムによって、または web.config ファイルの[グローバリゼーション](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100))要素で明示的に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-312">In addition, you can also explicitly set the value of the <xref:System.Web.UI.Page.Culture%2A> property programmatically or in the [globalization](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100)) element of the Web.config file.</span></span>  
  
 <span data-ttu-id="7c669-313"><xref:System.Web.UI.Page.Culture%2A> プロパティは、ページコンテンツをローカライズするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-313">The <xref:System.Web.UI.Page.Culture%2A> property is used to help localize page content.</span></span> <span data-ttu-id="7c669-314">任意の有効なカルチャ ID に設定できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-314">You can set it to any valid culture ID.</span></span> <span data-ttu-id="7c669-315">たとえば、`en-us` カルチャ ID はページをアメリカ英語に設定し、`fr` カルチャ ID はページをフランス語に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-315">For example, the `en-us` culture ID sets the page to American English, while the `fr` culture ID sets the page to French.</span></span> <span data-ttu-id="7c669-316">また、値を `auto` に設定して、ブラウザーの優先言語の自動検出を実行し、それを設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-316">You can also set the value to `auto` which will perform automatic detection of the browser's preferred language and set it.</span></span> <span data-ttu-id="7c669-317">自動言語検出は、`auto:en-us`などの既定値を使用して修飾できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-317">The automatic language detection can be qualified with a default value such as `auto:en-us`.</span></span>  
  
 <span data-ttu-id="7c669-318">詳細については、「<xref:System.Globalization.CultureInfo> クラスの概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-318">For more information, see the <xref:System.Globalization.CultureInfo> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.LCID" />
      </Docs>
    </Member>
    <Member MemberName="DesignerInitialize">
      <MemberSignature Language="C#" Value="public void DesignerInitialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DesignerInitialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.DesignerInitialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub DesignerInitialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DesignerInitialize();" />
      <MemberSignature Language="F#" Value="member this.DesignerInitialize : unit -&gt; unit" Usage="page.DesignerInitialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-319">RAD デザイナーによって要求される <see cref="T:System.Web.UI.Page" /> クラスのインスタンスの初期化を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c669-319">Performs any initialization of the instance of the <see cref="T:System.Web.UI.Page" /> class that is required by RAD designers.</span></span> <span data-ttu-id="7c669-320">このメソッドは、デザイン時にだけ使用されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-320">This method is used only at design time.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.UserControl.DesignerInitialize" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/c5z9s1h4(v=vs.120)"><span data-ttu-id="7c669-321">デザイン時アーキテクチャ</span><span class="sxs-lookup"><span data-stu-id="7c669-321">Design-Time Architecture</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DeterminePostBackMode () As NameValueCollection" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="page.DeterminePostBackMode " />
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function DeterminePostBackMode () As NameValueCollection" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-322">ポストバックされたデータの <see cref="T:System.Collections.Specialized.NameValueCollection" /> を、POST コマンドまたは GET コマンドのいずれかを使用してページに返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-322">Returns a <see cref="T:System.Collections.Specialized.NameValueCollection" /> of data posted back to the page using either a POST or a GET command.</span></span></summary>
        <returns><span data-ttu-id="7c669-323">フォーム データを格納している <see cref="T:System.Collections.Specialized.NameValueCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-323">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the form data.</span></span> <span data-ttu-id="7c669-324">ポストバックが POST コマンドを使用する場合は、フォーム情報が <see cref="P:System.Web.UI.Page.Context" /> オブジェクトから返されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-324">If the postback used the POST command, the form information is returned from the <see cref="P:System.Web.UI.Page.Context" /> object.</span></span> <span data-ttu-id="7c669-325">ポストバックが GET コマンドを使用する場合は、クエリ文字列情報が返されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-325">If the postback used the GET command, the query string information is returned.</span></span> <span data-ttu-id="7c669-326">初めてページの要求が行われた場合は、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-326">If the page is being requested for the first time, <see langword="null" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-327"><xref:System.Web.UI.Page.DeterminePostBackMode%2A> メソッドは、ページにポストバックされたデータを格納する <xref:System.Collections.Specialized.NameValueCollection> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-327">The <xref:System.Web.UI.Page.DeterminePostBackMode%2A> method returns a <xref:System.Collections.Specialized.NameValueCollection> object that contains the data posted back to the page.</span></span> <span data-ttu-id="7c669-328">ページの非表示フィールドの VIEWSTATE と EVENTTARGET は、ポストバックイベントが発生したかどうかを判断するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-328">The presence of the page hidden fields VIEWSTATE and EVENTTARGET is used to help determine whether a postback event has occurred.</span></span> <span data-ttu-id="7c669-329"><xref:System.Web.UI.Page.IsPostBack%2A> プロパティは、<xref:System.Web.UI.Page.DeterminePostBackMode%2A> メソッドが呼び出されたときに設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-329">The <xref:System.Web.UI.Page.IsPostBack%2A> property is set when the <xref:System.Web.UI.Page.DeterminePostBackMode%2A> method is called.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="page.DeterminePostBackModeUnvalidated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-330">要求に対して ASP.NET 要求の検証を実行せずに、POST また GET コマンドを使用して、ページにポストされたデータの名前と値のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-330">Returns a name-value collection of data that was posted to the page using either a POST or a GET command, without performing ASP.NET request validation on the request.</span></span></summary>
        <returns><span data-ttu-id="7c669-331">未検証のフォーム データを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-331">An object that contains the unvalidated form data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-332">詳細については、<xref:System.Web.UnvalidatedRequestValues> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-332">For more information, see the <xref:System.Web.UnvalidatedRequestValues> class.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEventValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableEventValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableEventValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.EnableEventValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableEventValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableEventValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableEventValidation : bool with get, set" Usage="System.Web.UI.Page.EnableEventValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-333">ページがポストバック イベントとコールバック イベントを検証するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-333">Gets or sets a value indicating whether the page validates postback and callback events.</span></span></summary>
        <value><span data-ttu-id="7c669-334">ページがポストバックイベントとコールバックイベントを検証するかどうかを <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="7c669-334"><see langword="true" /> if the page validates postback and callback events; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7c669-335">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-335">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-336"><xref:System.Web.UI.Page.EnableEventValidation%2A> プロパティが `true`に設定されている場合、ASP.NET は、そのコントロールによってレンダリングされたユーザーインターフェイスからコントロールイベントが発生したことを検証します。</span><span class="sxs-lookup"><span data-stu-id="7c669-336">When the <xref:System.Web.UI.Page.EnableEventValidation%2A> property is set to `true`, ASP.NET validates that a control event originated from the user interface that was rendered by that control.</span></span> <span data-ttu-id="7c669-337">コントロールは、レンダリング中にイベントを登録し、ポストバックまたはコールバック処理中にイベントを検証します。</span><span class="sxs-lookup"><span data-stu-id="7c669-337">A control registers its events during rendering and then validates the events during postback or callback handling.</span></span> <span data-ttu-id="7c669-338">たとえば、ページを表示するときに、リストコントロールに1、2、または3という番号のオプションが含まれていて、オプション番号4を指定してポストバック要求を受け取った場合、ASP.NET は例外を発生させます。</span><span class="sxs-lookup"><span data-stu-id="7c669-338">For example, if a list control includes options numbered 1, 2, or 3 when the page is rendered, and if a postback request is received specifying option number 4, ASP.NET raises an exception.</span></span> <span data-ttu-id="7c669-339">ASP.NET のすべてのイベントドリブンコントロールは、この機能を既定で使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-339">All event-driven controls in ASP.NET use this feature by default.</span></span>

 <span data-ttu-id="7c669-340">実行時にクライアントのコントロールを変更するクライアントスクリプトを記述する場合は、誤ったイベント検証エラーを回避するために <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> メソッドを使用することが必要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-340">If you write client script that changes a control in the client at run time, you might have to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method in order to avoid false event validation errors.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7c669-341">この機能により、未承認または悪意のあるポストバック要求とコールバックのリスクが軽減されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-341">This feature reduces the risk of unauthorized or malicious postback requests and callbacks.</span></span> <span data-ttu-id="7c669-342">イベントの検証を無効にしないことを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="7c669-342">It is strongly recommended that you do not disable event validation.</span></span>  
  
 <span data-ttu-id="7c669-343"><xref:System.Web.UI.Page.EnableEventValidation%2A> プロパティを設定するには、 [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブの `enableEventValidation` 属性、または web.config ファイルの[pages](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100))要素の `enableEventValidation` 属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-343">You set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property by setting the `enableEventValidation` attribute of the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive or the `enableEventValidation` attribute of the [pages](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100)) element in the Web.config file.</span></span> <span data-ttu-id="7c669-344">このプロパティをコードで設定する場合は、ページを初期化する前に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-344">If you set this property in code, you must set it before the page is initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-345">ページの初期化後に <see cref="P:System.Web.UI.Page.EnableEventValidation" /> プロパティが設定されました。</span><span class="sxs-lookup"><span data-stu-id="7c669-345">The <see cref="P:System.Web.UI.Page.EnableEventValidation" /> property was set after the page was initialized.</span></span></exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
        <altmember cref="T:System.Web.UI.SupportsEventValidationAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/debza5t0(v=vs.100)"><span data-ttu-id="7c669-346">検証 ASP.NET コントロール</span><span class="sxs-lookup"><span data-stu-id="7c669-346">Validation ASP.NET Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableViewState">
      <MemberSignature Language="C#" Value="public override bool EnableViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.EnableViewState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableViewState : bool with get, set" Usage="System.Web.UI.Page.EnableViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-347">現在のページ要求が終了したとき、ページがそのビューステート、および格納しているサーバー コントロールのビューステートを維持するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-347">Gets or sets a value indicating whether the page maintains its view state, and the view state of any server controls it contains, when the current page request ends.</span></span></summary>
        <value><span data-ttu-id="7c669-348">ページがビューステートを維持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-348"><see langword="true" /> if the page maintains its view state; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7c669-349">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-349">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-350">ビューステートを無効にする必要がある理由については、「<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-350">For information about why you might want to disable view state, see <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="7c669-351"><xref:System.Web.UI.Page.EnableViewState%2A> が `false`場合でも、ASP.NET がポストバックを検出するために使用する非表示のビューステートフィールドがページに含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-351">Even if <xref:System.Web.UI.Page.EnableViewState%2A> is `false`, the page might contain a hidden view state field that is used by ASP.NET to detect a postback.</span></span>



## Examples
 <span data-ttu-id="7c669-352">次のコード例では、ページが読み込まれるときに `false` するように <xref:System.Web.UI.Page.EnableViewState%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-352">The following code example sets the <xref:System.Web.UI.Page.EnableViewState%2A> property to `false` when the page is loaded.</span></span> <span data-ttu-id="7c669-353">これにより、<xref:System.Web.UI.Page> オブジェクトのビューステートが無効になります。つまり、ページのビューステート情報とページに含まれるコントロールのどちらも保存されません。</span><span class="sxs-lookup"><span data-stu-id="7c669-353">This disables view state for the <xref:System.Web.UI.Page> object, meaning that neither view-state information for the page nor any controls contained by the page are saved.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7c669-354">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-354">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7c669-355">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-355">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7c669-356">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-356">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-csharp[Page_EnableViewState_ReSubmit_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_EnableViewState_ReSubmit_1/CS/page_enableviewstate.cs#1)]
 [!code-vb[Page_EnableViewState_ReSubmit_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_EnableViewState_ReSubmit_1/VB/page_enableviewstate.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.EnableViewStateMac" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386448(v=vs.100)"><span data-ttu-id="7c669-357">ASP.NET ビューステートの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-357">ASP.NET View State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableViewStateMac">
      <MemberSignature Language="C#" Value="protected bool EnableViewStateMac { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableViewStateMac" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.EnableViewStateMac" />
      <MemberSignature Language="VB.NET" Value="Protected Property EnableViewStateMac As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool EnableViewStateMac { bool get(); void set(bool value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.EnableViewStateMac : bool with get, set" Usage="System.Web.UI.Page.EnableViewStateMac" />
      <MemberSignature Language="C#" Value="public bool EnableViewStateMac { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableViewStateMac As Boolean" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableViewStateMac { bool get(); void set(bool value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-358">ページがクライアントからポストバックされたときに、ASP.NET がページのビューステートのメッセージ認証コード (MAC: Message Authentication Code) をチェックする必要があるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-358">Gets or sets a value indicating whether ASP.NET should check message authentication codes (MAC) in the page's view state when the page is posted back from the client.</span></span></summary>
        <value><span data-ttu-id="7c669-359">ビューステートを MAC でチェックしエンコードする必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-359"><see langword="true" /> if the view state should be MAC checked and encoded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7c669-360">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-360">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-361">ビューステート MAC は、ページがブラウザーに送信されるときにページのビューステートが保持される、非表示の変数の暗号化されたバージョンです。</span><span class="sxs-lookup"><span data-stu-id="7c669-361">A view-state MAC is an encrypted version of the hidden variable that a page's view state is persisted to when the page is sent to the browser.</span></span> <span data-ttu-id="7c669-362">このプロパティが `true`に設定されている場合は、暗号化されたビューステートがクライアントで改ざんされていないことを確認するためにチェックされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-362">When this property is set to `true`, the encrypted view state is checked to verify that it has not been tampered with on the client.</span></span>  
  
 <span data-ttu-id="7c669-363">このプロパティは、コードでは設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-363">Do not set this property in code.</span></span> <span data-ttu-id="7c669-364">.Aspx ファイルで[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブを使用して、`EnableViewStateMac` 属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-364">Set the `EnableViewStateMac` attribute using the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-365">ページが要求されると、動的に生成されたクラスによってプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-365">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
> [!IMPORTANT]
> <span data-ttu-id="7c669-366">アプリケーションまたはページでビューステートが使用されていない場合でも、運用 Web サイトでこの属性を `false` に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="7c669-366">This attribute should never be set to `false` in a production Web site, even if the application or page does not use view state.</span></span> <span data-ttu-id="7c669-367">ビューステート MAC は、ビューステートに加えて他の ASP.NET 関数のセキュリティを確保するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="7c669-367">The view state MAC helps ensure the security of other ASP.NET functions in addition to view state.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="ErrorPage">
      <MemberSignature Language="C#" Value="public string ErrorPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ErrorPage" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorPage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorPage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorPage : string with get, set" Usage="System.Web.UI.Page.ErrorPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-368">処理されていないページ例外が発生した場合に、要求側のブラウザーがリダイレクトされる対象のエラー ページを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-368">Gets or sets the error page to which the requesting browser is redirected in the event of an unhandled page exception.</span></span></summary>
        <value><span data-ttu-id="7c669-369">ブラウザーがリダイレクトされる対象のエラー ページ。</span><span class="sxs-lookup"><span data-stu-id="7c669-369">The error page to which the browser is redirected.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 [!code-csharp[Page_ErrorPage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_ErrorPage/CS/page_errorpage.cs.aspx#1)]
 [!code-vb[Page_ErrorPage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_ErrorPage/VB/page_errorpage.vb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w16865z6(v=vs.100)"><span data-ttu-id="7c669-370">ASP.NET ページおよびアプリケーションでのエラー処理</span><span class="sxs-lookup"><span data-stu-id="7c669-370">Error Handling in ASP.NET Pages and Applications</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExecuteRegisteredAsyncTasks">
      <MemberSignature Language="C#" Value="public void ExecuteRegisteredAsyncTasks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteRegisteredAsyncTasks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteRegisteredAsyncTasks ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteRegisteredAsyncTasks();" />
      <MemberSignature Language="F#" Value="member this.ExecuteRegisteredAsyncTasks : unit -&gt; unit" Usage="page.ExecuteRegisteredAsyncTasks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-371">非同期操作の実行を開始します。</span><span class="sxs-lookup"><span data-stu-id="7c669-371">Starts the execution of an asynchronous task.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-372"><xref:System.Web.UI.PageAsyncTask> クラスを使用して、非同期タスクを定義します。</span><span class="sxs-lookup"><span data-stu-id="7c669-372">Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class.</span></span> <span data-ttu-id="7c669-373">タスクが定義され、<xref:System.Web.UI.Page.RegisterAsyncTask%2A> メソッドを使用してページに登録されると、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> メソッドを呼び出して非同期タスクを開始できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-373">After the task is defined, and is registered with the page using the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method, the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can be invoked to begin the asynchronous task.</span></span>

 <span data-ttu-id="7c669-374"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> メソッドは、登録されている非同期タスク (存在する場合) が非同期ページ以外で呼び出された場合に、ページ処理のポイントで自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-374">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method is automatically called at the point in the page processing when any registered asynchronous tasks, if they exist, are invoked for a non-asynchronous page.</span></span> <span data-ttu-id="7c669-375">この自動呼び出し <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> は、<xref:System.Web.UI.Page.PreRenderComplete> イベントの直前に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-375">This automatic call to <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> occurs just before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="7c669-376">このメソッドへの自動呼び出し以外の時間に呼び出されるタスクに対して、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7c669-376">Call the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method for tasks you want to be invoked at times other than the automatic call to this method.</span></span> <span data-ttu-id="7c669-377">非同期タスクは、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> が複数回呼び出される場合でも一度だけ実行されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-377">Note, asynchronous tasks will be executed only once even though <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> may be called more than once.</span></span>

 <span data-ttu-id="7c669-378"><xref:System.Web.UI.Page.AsyncTimeout%2A> プロパティは、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> メソッドを呼び出すたびにリセットされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-378">The <xref:System.Web.UI.Page.AsyncTimeout%2A> property is reset on every call to the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="7c669-379"><xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> メソッドを呼び出す前の <xref:System.Web.UI.Page.AsyncTimeout%2A> の最後の値が優先されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-379">The last value of the <xref:System.Web.UI.Page.AsyncTimeout%2A> prior to invoking the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method takes precedence.</span></span> <span data-ttu-id="7c669-380">非同期タスクが <xref:System.Web.UI.Page.AsyncTimeout%2A>を超える場合、その <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> 呼び出し中に呼び出された後続のタスクはすぐにタイムアウトになります。</span><span class="sxs-lookup"><span data-stu-id="7c669-380">If an asynchronous task takes more than the <xref:System.Web.UI.Page.AsyncTimeout%2A>, subsequent tasks invoked during that <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> call are timed out immediately.</span></span>



## Examples
 <span data-ttu-id="7c669-381">次のコード例では、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> メソッドと <xref:System.Web.UI.Page.RegisterAsyncTask%2A> メソッドを使用して、<xref:System.Web.UI.Page.AsyncTimeout%2A> プロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7c669-381">The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods.</span></span> <span data-ttu-id="7c669-382">開始、終了、およびタイムアウトハンドラーの使用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-382">Note the use of beginning, ending, and time-out handlers.</span></span> <span data-ttu-id="7c669-383">この例では、<xref:System.Web.UI.Page.AsyncTimeout%2A> プロパティで指定されているタスクに割り当てられた時間を超える非同期タスクの状況を示すために、人為的な遅延が発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-383">In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property.</span></span> <span data-ttu-id="7c669-384">実際のシナリオでは、非同期タスクを使用してデータベース呼び出しやイメージの生成を実行できます。また、タイムアウトハンドラーは、タスクが指定された時間内に実行されない場合に、正常なパフォーマンス低下を提供します。</span><span class="sxs-lookup"><span data-stu-id="7c669-384">In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.</span></span>

 [!code-aspx-csharp[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.aspx#1)]

 [!code-csharp[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.cs#2)]
 [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-385">非同期操作での例外です。</span><span class="sxs-lookup"><span data-stu-id="7c669-385">There is an exception in the asynchronous task.</span></span></exception>
        <altmember cref="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)" />
        <altmember cref="T:System.Web.UI.PageAsyncTask" />
        <altmember cref="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="FileDependencies">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList FileDependencies { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList FileDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.FileDependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Property FileDependencies As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ FileDependencies {  void set(System::Collections::ArrayList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FileDependencies : System.Collections.ArrayList" Usage="System.Web.UI.Page.FileDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is HttpResponse.AddFileDependencies. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-386">現在の <see cref="T:System.Web.HttpResponse" /> オブジェクトが依存しているファイルの配列を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-386">Sets an array of files that the current <see cref="T:System.Web.HttpResponse" /> object is dependent upon.</span></span></summary>
        <value><span data-ttu-id="7c669-387">現在の <see cref="T:System.Web.HttpResponse" /> オブジェクトが依存しているファイルの配列。</span><span class="sxs-lookup"><span data-stu-id="7c669-387">The array of files that the current <see cref="T:System.Web.HttpResponse" /> object is dependent upon.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-388">このプロパティは非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="7c669-388">This property has been deprecated.</span></span> <span data-ttu-id="7c669-389">代わりに、<xref:System.Web.HttpResponse> クラスの <xref:System.Web.HttpResponse.AddFileDependencies%2A> メソッドまたは <xref:System.Web.HttpResponse.AddFileDependency%2A> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-389">Use the <xref:System.Web.HttpResponse.AddFileDependencies%2A> method or the <xref:System.Web.HttpResponse.AddFileDependency%2A> method of the <xref:System.Web.HttpResponse> class instead.</span></span>  
  
 <span data-ttu-id="7c669-390">ほとんどの場合、このプロパティはコードで設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-390">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="7c669-391">.Aspx ファイルで[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブを使用して、`FileDependencies` 属性を `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-391">Set the `FileDependencies` attribute to `true` using the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-392">ページが要求されると、動的に生成されたクラスによってプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-392">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ArrayList" />
        <altmember cref="M:System.Web.HttpResponse.AddFileDependencies(System.Collections.ArrayList)" />
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberSignature Language="F#" Value="override this.FindControl : string -&gt; System.Web.UI.Control" Usage="page.FindControl id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="7c669-393">検索されるコントロールの識別子。</span><span class="sxs-lookup"><span data-stu-id="7c669-393">The identifier for the control to be found.</span></span></param>
        <summary><span data-ttu-id="7c669-394">指定した識別子を使用して、サーバー コントロールについてページの名前付けコンテナーを検索します。</span><span class="sxs-lookup"><span data-stu-id="7c669-394">Searches the page naming container for a server control with the specified identifier.</span></span></summary>
        <returns><span data-ttu-id="7c669-395">指定したコントロール。指定したコントロールがない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-395">The specified control, or <see langword="null" /> if the specified control does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-396"><xref:System.Web.UI.Page.FindControl%2A> メソッドを使用して、デザイン時に使用できない <xref:System.Web.UI.Control.ID%2A> を持つコントロールにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-396">The <xref:System.Web.UI.Page.FindControl%2A> method can be used to access a control whose <xref:System.Web.UI.Control.ID%2A> is not available at design time.</span></span> <span data-ttu-id="7c669-397">メソッドは、ページの直接または最上位のコンテナーのみを検索します。ページに含まれているコンテナーの名前付けでは、コントロールは再帰的に検索されません。</span><span class="sxs-lookup"><span data-stu-id="7c669-397">The method searches only the page's immediate, or top-level, container; it does not recursively search for controls in naming containers contained on the page.</span></span> <span data-ttu-id="7c669-398">下位の名前付けコンテナー内のコントロールにアクセスするには、そのコンテナーの `FindControl` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7c669-398">To access controls in a subordinate naming container, call the `FindControl` method of that container.</span></span>



## Examples
 <span data-ttu-id="7c669-399">次のコード例は、<xref:System.Web.UI.Page.FindControl%2A> メソッドを使用して、テンプレート内のコントロールを検索する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-399">The following code example demonstrates how to use the <xref:System.Web.UI.Page.FindControl%2A> method to locate controls inside templates.</span></span> <span data-ttu-id="7c669-400">この例では、2つの <xref:System.Web.UI.WebControls.Repeater> コントロールが定義されています。各は、repeater 項目テンプレート内の <xref:System.Web.UI.WebControls.LinkButton> の <xref:System.Web.UI.WebControls.LinkButton.Click> イベントをキャッチする別の方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-400">In this example, two <xref:System.Web.UI.WebControls.Repeater> controls are defined; each shows a different way to catch the <xref:System.Web.UI.WebControls.LinkButton.Click> event of a <xref:System.Web.UI.WebControls.LinkButton> inside the repeater item template.</span></span>

 [!code-aspx-csharp[System.Web.UI.Page_FindControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_FindControl/cs/pagefindcontrolcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page_FindControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_FindControl/vb/pagefindcontrolvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlForm Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As HtmlForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlForm ^ Form { System::Web::UI::HtmlControls::HtmlForm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Web.UI.HtmlControls.HtmlForm" Usage="System.Web.UI.Page.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-401">ページの HTML フォームを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-401">Gets the HTML form for the page.</span></span></summary>
        <value><span data-ttu-id="7c669-402">ページと関連付けられた <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-402">The <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> object associated with the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-403"><xref:System.Web.UI.Page.Form%2A> プロパティを使用して、ページ上のコントロール階層のベースである <xref:System.Web.UI.HtmlControls.HtmlForm> オブジェクトのメソッドとプロパティにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7c669-403">Use the <xref:System.Web.UI.Page.Form%2A> property to access the methods and properties of the <xref:System.Web.UI.HtmlControls.HtmlForm> object that is the base of the control hierarchy on the page.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
      </Docs>
    </Member>
    <Member MemberName="FrameworkInitialize">
      <MemberSignature Language="C#" Value="protected override void FrameworkInitialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void FrameworkInitialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.FrameworkInitialize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub FrameworkInitialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void FrameworkInitialize();" />
      <MemberSignature Language="F#" Value="override this.FrameworkInitialize : unit -&gt; unit" Usage="page.FrameworkInitialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-404">ページの生成中に、ページの宣言の性質に基づいてコントロール ツリーを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7c669-404">Initializes the control tree during page generation based on the declarative nature of the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-405"><xref:System.Web.UI.Page.FrameworkInitialize%2A> メソッドは、<xref:System.Web.UI.Page> オブジェクトを初期化し、ページの宣言的な性質に基づいてコントロールツリーを作成します。</span><span class="sxs-lookup"><span data-stu-id="7c669-405">The <xref:System.Web.UI.Page.FrameworkInitialize%2A> method initializes the <xref:System.Web.UI.Page> object and creates the control tree based on the declarative nature of the page.</span></span> <span data-ttu-id="7c669-406"><xref:System.Web.UI.Page.FrameworkInitialize%2A> メソッドは、宣言ページの <xref:System.Web.UI.Page> クラスのページ解析とコード生成によってオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-406">The <xref:System.Web.UI.Page.FrameworkInitialize%2A> method is overridden by the page parsing and code generation for the <xref:System.Web.UI.Page> class for a declarative page.</span></span> <span data-ttu-id="7c669-407">通常は、このメソッドをオーバーライドする必要はありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-407">Ordinarily, you should not over need to override this method.</span></span> <span data-ttu-id="7c669-408">をオーバーライドする場合は、必ず基底クラスの <xref:System.Web.UI.Page.FrameworkInitialize%2A> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-408">If overriding, be sure to call the base class's <xref:System.Web.UI.Page.FrameworkInitialize%2A> method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public object GetDataItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetDataItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetDataItem" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataItem () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDataItem();" />
      <MemberSignature Language="F#" Value="member this.GetDataItem : unit -&gt; obj" Usage="page.GetDataItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-409">データ バインディング コンテキスト スタックの最上部のデータ項目を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-409">Gets the data item at the top of the data-binding context stack.</span></span></summary>
        <returns><span data-ttu-id="7c669-410">データ バインディング コンテキスト スタックの最上部のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-410">The object at the top of the data binding context stack.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-411">ページのデータ バインディング コンテキストがありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-411">There is no data-binding context for the page.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientEvent">
      <MemberSignature Language="C#" Value="public string GetPostBackClientEvent (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientEvent(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackClientEvent (control As Control, argument As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientEvent(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientEvent : System.Web.UI.Control * string -&gt; string" Usage="page.GetPostBackClientEvent (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="7c669-412">クライアント イベントのポストバックを受信するサーバー コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c669-412">The server control that receives the client event postback.</span></span></param>
        <param name="argument"><span data-ttu-id="7c669-413"><see cref="T:System.String" /> に渡される<see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-413">A <see cref="T:System.String" /> that is passed to <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />.</span></span></param>
        <summary><span data-ttu-id="7c669-414">指定されたイベント引数を使用して指定したコントロールのサーバーにポストバックするクライアント イベントで使用できる参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-414">Gets a reference that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span></span></summary>
        <returns><span data-ttu-id="7c669-415">クライアント イベントを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="7c669-415">The string that represents the client event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-416">この非推奨メンバーの代替手段については、<xref:System.Web.UI.ClientScriptManager> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-416">See the <xref:System.Web.UI.ClientScriptManager> class for alternatives to this deprecated member.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.OnClientClick" />
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackClientHyperlink (control As Control, argument As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string -&gt; string" Usage="page.GetPostBackClientHyperlink (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackClientHyperlink. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="7c669-417">ポストバックを処理するサーバー コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c669-417">The server control to process the postback.</span></span></param>
        <param name="argument"><span data-ttu-id="7c669-418">サーバー コントロールに渡されたパラメーター。</span><span class="sxs-lookup"><span data-stu-id="7c669-418">The parameter passed to the server control.</span></span></param>
        <summary><span data-ttu-id="7c669-419"><see langword="javascript:" /> を参照の先頭に追加した上で参照を取得します。この参照をクライアント イベントで使用して、指定したコントロールを、指定したイベント引数を使用してサーバーにポストバックできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-419">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span></span></summary>
        <returns><span data-ttu-id="7c669-420">対象のコントロールの ID とイベント引数を保持しているポストバック関数に対する JavaScript 呼び出しを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="7c669-420">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-421">この非推奨メンバーの代替方法については、<xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-421">See the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method for an alternative to this deprecated member.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c669-422">クライアント イベントで使用できる、サーバーにポストバックするための文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-422">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="7c669-423">このメソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="7c669-423">This method has been deprecated.</span></span> <span data-ttu-id="7c669-424">代わりに <see cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" /> クラスの <see cref="T:System.Web.UI.ClientScriptManager" /> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-424">Use the <see cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" /> method in the <see cref="T:System.Web.UI.ClientScriptManager" /> class instead.</span></span></summary>
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (control As Control) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control -&gt; string" Usage="page.GetPostBackEventReference control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="7c669-425">サーバー上でポストバックを処理するサーバー コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c669-425">The server control to process the postback on the server.</span></span></param>
        <summary><span data-ttu-id="7c669-426">クライアント イベントで使用できる、サーバーにポストバックするための文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-426">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="7c669-427">この参照文字列は、指定した <see cref="T:System.Web.UI.Control" /> オブジェクトによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-427">The reference string is defined by the specified <see cref="T:System.Web.UI.Control" /> object.</span></span></summary>
        <returns><span data-ttu-id="7c669-428">クライアントでスクリプトとして扱われた場合に、ポストバックを初期化する文字列。</span><span class="sxs-lookup"><span data-stu-id="7c669-428">A string that, when treated as script on the client, initiates the postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-429">このメソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="7c669-429">This method has been deprecated.</span></span> <span data-ttu-id="7c669-430">代わりに <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> クラスの <xref:System.Web.UI.ClientScriptManager> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-430">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>



## Examples
 [!code-csharp[Page_GetPostBackEventReference#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_GetPostBackEventReference/CS/page_getpostbackeventreference.cs#2)]
 [!code-vb[Page_GetPostBackEventReference#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_GetPostBackEventReference/VB/page_getpostbackeventreference.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (control As Control, argument As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string -&gt; string" Usage="page.GetPostBackEventReference (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.GetPostBackEventReference. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="7c669-431">ポストバックを処理するサーバー コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c669-431">The server control to process the postback.</span></span></param>
        <param name="argument"><span data-ttu-id="7c669-432">サーバー コントロールに渡されたパラメーター。</span><span class="sxs-lookup"><span data-stu-id="7c669-432">The parameter passed to the server control.</span></span></param>
        <summary><span data-ttu-id="7c669-433">クライアント イベントで使用できる、サーバーにポストバックするための文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-433">Returns a string that can be used in a client event to cause postback to the server.</span></span> <span data-ttu-id="7c669-434">この参照文字列は、ポストバックと追加のイベント情報の文字列引数を処理する、指定したコントロールによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-434">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span></span></summary>
        <returns><span data-ttu-id="7c669-435">クライアントでスクリプトとして扱われた場合に、ポストバックを初期化する文字列。</span><span class="sxs-lookup"><span data-stu-id="7c669-435">A string that, when treated as script on the client, initiates the postback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-436">このメソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="7c669-436">This method has been deprecated.</span></span> <span data-ttu-id="7c669-437">代わりに <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> クラスの <xref:System.Web.UI.ClientScriptManager> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-437">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>



## Examples
 [!code-csharp[Page_GetPostBackEventReference#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_GetPostBackEventReference/CS/page_getpostbackeventreference.cs#1)]
 [!code-vb[Page_GetPostBackEventReference#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_GetPostBackEventReference/VB/page_getpostbackeventreference.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeHashCode">
      <MemberSignature Language="C#" Value="public virtual int GetTypeHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTypeHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetTypeHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetTypeHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeHashCode : unit -&gt; int&#xA;override this.GetTypeHashCode : unit -&gt; int" Usage="page.GetTypeHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-438">実行時に生成された <see cref="T:System.Web.UI.Page" /> オブジェクトによって生成されるハッシュ コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-438">Retrieves a hash code that is generated by <see cref="T:System.Web.UI.Page" /> objects that are generated at run time.</span></span> <span data-ttu-id="7c669-439">このハッシュ コードは、<see cref="T:System.Web.UI.Page" /> オブジェクトのコントロール階層に固有のハッシュ コードです。</span><span class="sxs-lookup"><span data-stu-id="7c669-439">This hash code is unique to the <see cref="T:System.Web.UI.Page" /> object's control hierarchy.</span></span></summary>
        <returns><span data-ttu-id="7c669-440">実行時に生成されたハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="7c669-440">The hash code generated at run time.</span></span> <span data-ttu-id="7c669-441">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="7c669-441">The default is 0.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-442">このメソッドはオーバーライドしないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-442">Do not override this method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValidators">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidatorCollection GetValidators (string validationGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.ValidatorCollection GetValidators(string validationGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetValidators(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValidators (validationGroup As String) As ValidatorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::ValidatorCollection ^ GetValidators(System::String ^ validationGroup);" />
      <MemberSignature Language="F#" Value="member this.GetValidators : string -&gt; System.Web.UI.ValidatorCollection" Usage="page.GetValidators validationGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidatorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationGroup" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="validationGroup"><span data-ttu-id="7c669-443">既定の検証グループを返す検証グループまたは <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-443">The validation group to return, or <see langword="null" /> to return the default validation group.</span></span></param>
        <summary><span data-ttu-id="7c669-444">指定した検証グループの検証コントロールのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-444">Returns a collection of control validators for a specified validation group.</span></span></summary>
        <returns><span data-ttu-id="7c669-445">指定した検証グループの検証コントロールを格納している <see cref="T:System.Web.UI.ValidatorCollection" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-445">A <see cref="T:System.Web.UI.ValidatorCollection" /> that contains the control validators for the specified validation group.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-446"><xref:System.Web.UI.Page.GetValidators%2A> メソッドは、特定の検証グループに関連付けられているすべての検証オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-446">The <xref:System.Web.UI.Page.GetValidators%2A> method returns all the validation objects associated with a specific validation group.</span></span> <span data-ttu-id="7c669-447">`validationGroup` パラメーターを `null`に設定することにより、既定の検証グループ (`ValidationGroup` プロパティが設定されていないコントロールに関連付けられているすべての検証コントロール) を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-447">You can return the default validation group (all validation controls associated with controls without the `ValidationGroup` property set) by setting the `validationGroup` parameter to `null`.</span></span>

 <span data-ttu-id="7c669-448">検証グループのメンバーを検証するには、コレクションを列挙し、返された各検証コントロールの <xref:System.Web.UI.IValidator.Validate%2A> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-448">To validate the members of the validation group, you can enumerate over the collection and call the <xref:System.Web.UI.IValidator.Validate%2A> method of each validator returned.</span></span>



## Examples
 <span data-ttu-id="7c669-449">次のコード例では、<xref:System.Web.UI.Page.GetValidators%2A> メソッドを使用して、既定の検証グループを返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-449">The following code example uses the <xref:System.Web.UI.Page.GetValidators%2A> method to return the default validation group.</span></span>

 [!code-csharp[PageGetValidators#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageGetValidators/CS/pagegetvalidatorscs.aspx#1)]
 [!code-vb[PageGetValidators#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageGetValidators/VB/pagegetvalidatorsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate(System.String)" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
      </Docs>
    </Member>
    <Member MemberName="GetWrappedFileDependencies">
      <MemberSignature Language="C#" Value="protected object GetWrappedFileDependencies (string[] virtualFileDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object GetWrappedFileDependencies(string[] virtualFileDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.GetWrappedFileDependencies(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetWrappedFileDependencies (virtualFileDependencies As String()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ GetWrappedFileDependencies(cli::array &lt;System::String ^&gt; ^ virtualFileDependencies);" />
      <MemberSignature Language="F#" Value="member this.GetWrappedFileDependencies : string[] -&gt; obj" Usage="page.GetWrappedFileDependencies virtualFileDependencies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualFileDependencies" Type="System.String[]" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="virtualFileDependencies"><span data-ttu-id="7c669-450">仮想ファイルの場所の文字列配列。</span><span class="sxs-lookup"><span data-stu-id="7c669-450">A string array of virtual file locations.</span></span></param>
        <summary><span data-ttu-id="7c669-451">仮想ファイルの場所の一覧に対応する物理ファイル名の一覧を返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-451">Returns a list of physical file names that correspond to a list of virtual file locations.</span></span></summary>
        <returns><span data-ttu-id="7c669-452">物理ファイルの場所の一覧を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-452">An object containing a list of physical file locations.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-453"><xref:System.Web.UI.Page.GetWrappedFileDependencies%2A> メソッドは、現在のページを構成するユーザーコントロールファイルなどのファイルの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-453">The <xref:System.Web.UI.Page.GetWrappedFileDependencies%2A> method gets a list of files, such as user control files, that make up the current page.</span></span> <span data-ttu-id="7c669-454">これらのページのいずれかが変更された場合は、ページ全体が次に要求されたときにコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-454">If any of these pages are modified, the entire page is compiled the next time it is requested.</span></span> <span data-ttu-id="7c669-455">このメソッドはオーバーライドしないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-455">Do not override this method.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public System.Web.UI.HtmlControls.HtmlHead Header { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.HtmlControls.HtmlHead Header" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Header" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Header As HtmlHead" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::HtmlControls::HtmlHead ^ Header { System::Web::UI::HtmlControls::HtmlHead ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Header : System.Web.UI.HtmlControls.HtmlHead" Usage="System.Web.UI.Page.Header" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlControls.HtmlHead</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-456">ページの宣言で <see langword="head" /> 要素が <see langword="runat=server" /> を使用して定義されている場合に、ドキュメントのヘッダーを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-456">Gets the document header for the page if the <see langword="head" /> element is defined with a <see langword="runat=server" /> in the page declaration.</span></span></summary>
        <value><span data-ttu-id="7c669-457">ページ ヘッダーを格納している <see cref="T:System.Web.UI.HtmlControls.HtmlHead" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-457">An <see cref="T:System.Web.UI.HtmlControls.HtmlHead" /> containing the page header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-458"><xref:System.Web.UI.Page.Header%2A> プロパティは、ページのドキュメントヘッダー情報を設定するために使用できる <xref:System.Web.UI.HtmlControls.HtmlHead> オブジェクトへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-458">The <xref:System.Web.UI.Page.Header%2A> property gets a reference to an <xref:System.Web.UI.HtmlControls.HtmlHead> object that you can use to set document header information for the page.</span></span> <span data-ttu-id="7c669-459"><xref:System.Web.UI.HtmlControls.HtmlHead> を使用すると、スタイルシート、スタイルルール、タイトル、メタデータなどの情報を `head` 要素に追加できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-459">The <xref:System.Web.UI.HtmlControls.HtmlHead> allows you to add information such as style sheets, style rules, a title, and metadata to the `head` element.</span></span>

> [!NOTE]
>  <span data-ttu-id="7c669-460">非同期ポストバック中に <xref:System.Web.UI.IStyleSheet> インターフェイスのメソッドを使用して、プログラムによってスタイルを追加することはできません。</span><span class="sxs-lookup"><span data-stu-id="7c669-460">Adding styles programmatically using the methods of the <xref:System.Web.UI.IStyleSheet> interface during asynchronous postbacks is not supported.</span></span> <span data-ttu-id="7c669-461">AJAX 機能を Web ページに追加する場合、非同期ポストバックではページ全体を更新せずにページの領域が更新されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-461">When you add AJAX capabilities to a Web page, asynchronous postbacks update regions of the page without updating the whole page.</span></span> <span data-ttu-id="7c669-462">詳細については、「 [Microsoft Ajax の概要](https://docs.microsoft.com/previous-versions/aspnet/bb398874(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-462">For more information, see [Microsoft Ajax Overview](https://docs.microsoft.com/previous-versions/aspnet/bb398874(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="7c669-463">次のコード例は、<xref:System.Web.UI.Page.Header%2A> プロパティを使用してプログラムで <xref:System.Web.UI.HtmlControls.HtmlHead> コントロールにアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-463">The following code example demonstrates how to access the <xref:System.Web.UI.HtmlControls.HtmlHead> control programmatically using the <xref:System.Web.UI.Page.Header%2A> property.</span></span> <span data-ttu-id="7c669-464">`title` 要素と `style` 要素が、ページの `head` 要素に追加されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-464">A `title` element and `style` element are added to the `head` element of the page.</span></span>

 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlHeadClass/CS/htmlheadclasscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlHeadClass/VB/htmlheadclassvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlHead" />
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlLink" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ID : string with get, set" Usage="System.Web.UI.Page.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-465"><see cref="T:System.Web.UI.Page" /> クラスの特定のインスタンスの識別子を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-465">Gets or sets an identifier for a particular instance of the <see cref="T:System.Web.UI.Page" /> class.</span></span></summary>
        <value><span data-ttu-id="7c669-466"><see cref="T:System.Web.UI.Page" /> クラスのインスタンスの識別子。</span><span class="sxs-lookup"><span data-stu-id="7c669-466">The identifier for the instance of the <see cref="T:System.Web.UI.Page" /> class.</span></span> <span data-ttu-id="7c669-467">既定値は '_Page' です。</span><span class="sxs-lookup"><span data-stu-id="7c669-467">The default value is '_Page'.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Page.IdSeparator" />
      </Docs>
    </Member>
    <Member MemberName="IdSeparator">
      <MemberSignature Language="C#" Value="public virtual char IdSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IdSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IdSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IdSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property char IdSeparator { char get(); };" />
      <MemberSignature Language="F#" Value="member this.IdSeparator : char" Usage="System.Web.UI.Page.IdSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-468">ページの特定のコントロールに対して一意の ID を作成するときに、コントロールの ID を区別するために使用する文字を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-468">Gets the character used to separate control identifiers when building a unique ID for a control on a page.</span></span></summary>
        <value><span data-ttu-id="7c669-469">コントロールの ID を区別するために使用する文字。</span><span class="sxs-lookup"><span data-stu-id="7c669-469">The character used to separate control identifiers.</span></span> <span data-ttu-id="7c669-470">既定値は、ページをレンダリングする <see cref="T:System.Web.UI.Adapters.PageAdapter" /> インスタンスによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-470">The default is set by the <see cref="T:System.Web.UI.Adapters.PageAdapter" /> instance that renders the page.</span></span> <span data-ttu-id="7c669-471"><see cref="P:System.Web.UI.Page.IdSeparator" /> はサーバー側のフィールドなので、変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-471">The <see cref="P:System.Web.UI.Page.IdSeparator" /> is a server-side field and should not be modified.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Page.ID" />
      </Docs>
    </Member>
    <Member MemberName="InitComplete">
      <MemberSignature Language="C#" Value="public event EventHandler InitComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler InitComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.InitComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InitComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ InitComplete;" />
      <MemberSignature Language="F#" Value="member this.InitComplete : EventHandler " Usage="member this.InitComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-472">ページの初期化が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-472">Occurs when page initialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-473"><xref:System.Web.UI.Page.InitComplete> イベントは、ページの初期化段階の最後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-473">The <xref:System.Web.UI.Page.InitComplete> event is called at the end of the page's initialization stage.</span></span> <span data-ttu-id="7c669-474">ページのライフサイクルのこの段階では、ページ上で宣言されたすべてのコントロールが初期化されますが、ページの状態はまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-474">At this stage of the page's life cycle, all declared controls on the page are initialized, but the page's state is not yet populated.</span></span> <span data-ttu-id="7c669-475">サーバーコントロールにはアクセスできますが、ユーザーから返された情報はまだ含まれていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-475">You can access server controls, but they will not yet contain information returned from the user.</span></span>

 <span data-ttu-id="7c669-476">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="7c669-476">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Page.LoadComplete" />
        <altmember cref="E:System.Web.UI.Page.PreRenderComplete" />
        <altmember cref="E:System.Web.UI.Page.SaveStateComplete" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100)"><span data-ttu-id="7c669-477">ASP.NET ページのライフサイクルの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-477">Introduction to the ASP.NET Page Life Cycle</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeCulture">
      <MemberSignature Language="C#" Value="protected virtual void InitializeCulture ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeCulture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitializeCulture" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeCulture ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeCulture();" />
      <MemberSignature Language="F#" Value="abstract member InitializeCulture : unit -&gt; unit&#xA;override this.InitializeCulture : unit -&gt; unit" Usage="page.InitializeCulture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-478">ページの現在のスレッドの <see cref="P:System.Web.UI.Page.Culture" /> と <see cref="P:System.Web.UI.Page.UICulture" /> を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-478">Sets the <see cref="P:System.Web.UI.Page.Culture" /> and <see cref="P:System.Web.UI.Page.UICulture" /> for the current thread of the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-479"><xref:System.Web.UI.Page.InitializeCulture%2A> メソッドには、コーディングロジックが含まれていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-479">The <xref:System.Web.UI.Page.InitializeCulture%2A> method contains no coding logic.</span></span> <span data-ttu-id="7c669-480"><xref:System.Web.UI.Page> クラスの機能を拡張するコントロール開発者は、<xref:System.Web.UI.Page.InitializeCulture%2A> メソッドをオーバーライドして、ページの <xref:System.Web.UI.Page.Culture%2A> および <xref:System.Web.UI.Page.UICulture%2A> 情報を初期化できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-480">Control developers extending the functionality of the <xref:System.Web.UI.Page> class can override the <xref:System.Web.UI.Page.InitializeCulture%2A> method to initialize the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> information for the page.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="M:System.Web.UI.Page.FrameworkInitialize" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InitOutputCache">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c669-481">現在のページ要求の出力キャッシュを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7c669-481">Initializes the output cache for the current page request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-482">このメソッドはコードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-482">This method is not intended to be used directly from your code.</span></span> <span data-ttu-id="7c669-483">ページの出力キャッシュを有効にして操作するには、次のいずれかの方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-483">To enable and manipulate output caching for a page, use one of these approaches:</span></span>

-   <span data-ttu-id="7c669-484">.Aspx ファイルのディレクティブを使用して、オプションを宣言によって設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-484">Set options declaratively using the  directive in the .aspx file.</span></span>

-   <span data-ttu-id="7c669-485"><xref:System.Web.HttpCachePolicy> クラスのメソッドとプロパティを使用します。これは、ページのコードの `Response.Cache` オブジェクトによって公開されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-485">Use the methods and properties of the <xref:System.Web.HttpCachePolicy> class, which is exposed by the `Response.Cache` object in the page's code.</span></span>

 <span data-ttu-id="7c669-486">詳細については、「 [ASP.NET Pages のキャッシュ](https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-486">For more information, see [Caching ASP.NET Pages](https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InitOutputCache">
      <MemberSignature Language="C#" Value="protected internal virtual void InitOutputCache (System.Web.UI.OutputCacheParameters cacheSettings);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void InitOutputCache(class System.Web.UI.OutputCacheParameters cacheSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub InitOutputCache (cacheSettings As OutputCacheParameters)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void InitOutputCache(System::Web::UI::OutputCacheParameters ^ cacheSettings);" />
      <MemberSignature Language="F#" Value="abstract member InitOutputCache : System.Web.UI.OutputCacheParameters -&gt; unit&#xA;override this.InitOutputCache : System.Web.UI.OutputCacheParameters -&gt; unit" Usage="page.InitOutputCache cacheSettings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheSettings" Type="System.Web.UI.OutputCacheParameters" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="cacheSettings"><span data-ttu-id="7c669-487">キャッシュの設定を格納している <see cref="T:System.Web.UI.OutputCacheParameters" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-487">An <see cref="T:System.Web.UI.OutputCacheParameters" /> that contains the cache settings.</span></span></param>
        <summary><span data-ttu-id="7c669-488">現在のページ要求の出力キャッシュを <see cref="T:System.Web.UI.OutputCacheParameters" /> オブジェクトに基づいて初期化します。</span><span class="sxs-lookup"><span data-stu-id="7c669-488">Initializes the output cache for the current page request based on an <see cref="T:System.Web.UI.OutputCacheParameters" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-489">このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="7c669-489">You should not call this method.</span></span> <span data-ttu-id="7c669-490">ページの出力キャッシュを有効にして操作するには、.aspx ファイルのディレクティブ、または <xref:System.Web.HttpCachePolicy> クラスのメソッドとプロパティのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-490">To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class.</span></span> <span data-ttu-id="7c669-491">後者には、ページのコード宣言ブロックまたは分離コードファイル内の `Response.Cache` 構文を使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-491">The latter are accessible through `Response.Cache` syntax in the page's code declaration block or code-behind file.</span></span> <span data-ttu-id="7c669-492">詳細については、「 [ASP.NET Pages のキャッシュ](https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-492">For more information, see [Caching ASP.NET Pages](https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-493">キャッシュのプロファイルが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="7c669-493">The cache profile was not found.</span></span>

<span data-ttu-id="7c669-494">- または -</span><span class="sxs-lookup"><span data-stu-id="7c669-494">-or-</span></span>

 <span data-ttu-id="7c669-495">存在しないディレクティブまたは存在しない構成設定プロファイル属性です。</span><span class="sxs-lookup"><span data-stu-id="7c669-495">A missing directive or configuration settings profile attribute.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7c669-496">出力キャッシュ設定の位置が無効です。</span><span class="sxs-lookup"><span data-stu-id="7c669-496">The output cache settings location is invalid.</span></span></exception>
        <altmember cref="T:System.Web.HttpCachePolicy" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)"><span data-ttu-id="7c669-497">ASP.NET ページのキャッシュ</span><span class="sxs-lookup"><span data-stu-id="7c669-497">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitOutputCache">
      <MemberSignature Language="C#" Value="protected virtual void InitOutputCache (int duration, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitOutputCache(int32 duration, string varyByHeader, string varyByCustom, valuetype System.Web.UI.OutputCacheLocation location, string varyByParam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitOutputCache (duration As Integer, varyByHeader As String, varyByCustom As String, location As OutputCacheLocation, varyByParam As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitOutputCache(int duration, System::String ^ varyByHeader, System::String ^ varyByCustom, System::Web::UI::OutputCacheLocation location, System::String ^ varyByParam);" />
      <MemberSignature Language="F#" Value="abstract member InitOutputCache : int * string * string * System.Web.UI.OutputCacheLocation * string -&gt; unit&#xA;override this.InitOutputCache : int * string * string * System.Web.UI.OutputCacheLocation * string -&gt; unit" Usage="page.InitOutputCache (duration, varyByHeader, varyByCustom, location, varyByParam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" />
        <Parameter Name="varyByHeader" Type="System.String" />
        <Parameter Name="varyByCustom" Type="System.String" />
        <Parameter Name="location" Type="System.Web.UI.OutputCacheLocation" />
        <Parameter Name="varyByParam" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="duration"><span data-ttu-id="7c669-498">出力キャッシュに格納されているオブジェクトが有効である時間。</span><span class="sxs-lookup"><span data-stu-id="7c669-498">The amount of time that objects stored in the output cache are valid.</span></span></param>
        <param name="varyByHeader"><span data-ttu-id="7c669-499">出力キャッシュの内容の変更に使用されるヘッダーのセミコロン区切りのリスト。</span><span class="sxs-lookup"><span data-stu-id="7c669-499">A semicolon-separated list of headers that content from the output cache will vary by.</span></span></param>
        <param name="varyByCustom"><span data-ttu-id="7c669-500"><see langword="Vary" /> HTTP ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="7c669-500">The <see langword="Vary" /> HTTP header.</span></span></param>
        <param name="location"><span data-ttu-id="7c669-501"><see cref="T:System.Web.UI.OutputCacheLocation" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7c669-501">One of the <see cref="T:System.Web.UI.OutputCacheLocation" /> values.</span></span></param>
        <param name="varyByParam"><span data-ttu-id="7c669-502">出力キャッシュの内容の変更に使用され、GET メソッドまたは POST メソッドが受け取るパラメーターのセミコロン区切りのリスト。</span><span class="sxs-lookup"><span data-stu-id="7c669-502">A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.</span></span></param>
        <summary><span data-ttu-id="7c669-503">現在のページ要求の出力キャッシュを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7c669-503">Initializes the output cache for the current page request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-504">このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="7c669-504">You should not call this method.</span></span> <span data-ttu-id="7c669-505">ページの出力キャッシュを有効にして操作するには、.aspx ファイルのディレクティブ、または <xref:System.Web.HttpCachePolicy> クラスのメソッドとプロパティのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-505">To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or the methods and properties of the <xref:System.Web.HttpCachePolicy> class.</span></span> <span data-ttu-id="7c669-506">後者には、ページのコード内の `Response.Cache` 構文を使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-506">The latter are accessible through `Response.Cache` syntax in the page's code.</span></span> <span data-ttu-id="7c669-507">詳細については、「 [ASP.NET Pages のキャッシュ](https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-507">For more information, see [Caching ASP.NET Pages](https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7c669-508"><paramref name="location" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="7c669-508">An invalid value is specified for <paramref name="location" />.</span></span></exception>
        <altmember cref="T:System.Web.HttpCachePolicy" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)"><span data-ttu-id="7c669-509">ASP.NET ページのキャッシュ</span><span class="sxs-lookup"><span data-stu-id="7c669-509">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitOutputCache">
      <MemberSignature Language="C#" Value="protected virtual void InitOutputCache (int duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitOutputCache(int32 duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, valuetype System.Web.UI.OutputCacheLocation location, string varyByParam) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitOutputCache (duration As Integer, varyByContentEncoding As String, varyByHeader As String, varyByCustom As String, location As OutputCacheLocation, varyByParam As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitOutputCache(int duration, System::String ^ varyByContentEncoding, System::String ^ varyByHeader, System::String ^ varyByCustom, System::Web::UI::OutputCacheLocation location, System::String ^ varyByParam);" />
      <MemberSignature Language="F#" Value="abstract member InitOutputCache : int * string * string * string * System.Web.UI.OutputCacheLocation * string -&gt; unit&#xA;override this.InitOutputCache : int * string * string * string * System.Web.UI.OutputCacheLocation * string -&gt; unit" Usage="page.InitOutputCache (duration, varyByContentEncoding, varyByHeader, varyByCustom, location, varyByParam)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="varyByContentEncoding" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="varyByHeader" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="varyByCustom" Type="System.String" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="location" Type="System.Web.UI.OutputCacheLocation" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="varyByParam" Type="System.String" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="duration"><span data-ttu-id="7c669-510">出力キャッシュに格納されているオブジェクトが有効である時間。</span><span class="sxs-lookup"><span data-stu-id="7c669-510">The amount of time that objects stored in the output cache are valid.</span></span></param>
        <param name="varyByContentEncoding"><span data-ttu-id="7c669-511">出力キャッシュの内容の変更に使用される文字セット (コンテンツ エンコーディング) のセミコロン区切りのリスト。</span><span class="sxs-lookup"><span data-stu-id="7c669-511">A semicolon-separated list of character-sets (content encodings) that content from the output cache will vary by.</span></span></param>
        <param name="varyByHeader"><span data-ttu-id="7c669-512">出力キャッシュの内容の変更に使用されるヘッダーのセミコロン区切りのリスト。</span><span class="sxs-lookup"><span data-stu-id="7c669-512">A semicolon-separated list of headers that content from the output cache will vary by.</span></span></param>
        <param name="varyByCustom"><span data-ttu-id="7c669-513"><see langword="Vary" /> HTTP ヘッダー。</span><span class="sxs-lookup"><span data-stu-id="7c669-513">The <see langword="Vary" /> HTTP header.</span></span></param>
        <param name="location"><span data-ttu-id="7c669-514"><see cref="T:System.Web.UI.OutputCacheLocation" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7c669-514">One of the <see cref="T:System.Web.UI.OutputCacheLocation" /> values.</span></span></param>
        <param name="varyByParam"><span data-ttu-id="7c669-515">出力キャッシュの内容の変更に使用され、GET メソッドまたは POST メソッドが受け取るパラメーターのセミコロン区切りのリスト。</span><span class="sxs-lookup"><span data-stu-id="7c669-515">A semicolon-separated list of parameters received by a GET or POST method that content from the output cache will vary by.</span></span></param>
        <summary><span data-ttu-id="7c669-516">現在のページ要求の出力キャッシュを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7c669-516">Initializes the output cache for the current page request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-517">このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="7c669-517">You should not call this method.</span></span> <span data-ttu-id="7c669-518">ページの出力キャッシュを有効にして操作するには、.aspx ファイルのディレクティブ、または <xref:System.Web.HttpCachePolicy> クラスのメソッドとプロパティのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-518">To enable and manipulate output caching for a page, use either the  directive in the .aspx file, or methods and properties of the <xref:System.Web.HttpCachePolicy> class.</span></span> <span data-ttu-id="7c669-519">後者には、ページのコード内の `Response.Cache` 構文を使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-519">The latter are accessible through `Response.Cache` syntax in the page's code.</span></span> <span data-ttu-id="7c669-520">詳細については、「 [ASP.NET Pages のキャッシュ](https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-520">For more information, see [Caching ASP.NET Pages](https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7c669-521"><paramref name="location" /> に無効な値が指定されています。</span><span class="sxs-lookup"><span data-stu-id="7c669-521">An invalid value is specified for <paramref name="location" />.</span></span></exception>
        <altmember cref="T:System.Web.HttpCachePolicy" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/06bh14hk(v=vs.100)"><span data-ttu-id="7c669-522">ASP.NET ページのキャッシュ</span><span class="sxs-lookup"><span data-stu-id="7c669-522">Caching ASP.NET Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool" Usage="System.Web.UI.Page.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-523">ページが非同期に処理されるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-523">Gets a value indicating whether the page is processed asynchronously.</span></span></summary>
        <value><span data-ttu-id="7c669-524">ページが非同期モードである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-524"><see langword="true" /> if the page is in asynchronous mode; otherwise, <see langword="false" />;</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-525"><xref:System.Web.UI.Page.IsAsync%2A> プロパティを使用して、Web ページが非同期モードで実行されているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="7c669-525">Use the <xref:System.Web.UI.Page.IsAsync%2A> property to determine whether the Web page is running in asynchronous mode.</span></span> <span data-ttu-id="7c669-526">この情報は、ページ上のコントロールまたはコードが非同期であるかどうかによって動作を変更する必要がある場合に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="7c669-526">This information is useful if controls or code on the page need to modify their behavior depending on whether the page is asynchronous.</span></span> <span data-ttu-id="7c669-527">非同期プログラミングの詳細については、「[非同期操作](~/docs/framework/data/adonet/sql/asynchronous-operations.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-527">For more information about asynchronous programming, see [Asynchronous Operations](~/docs/framework/data/adonet/sql/asynchronous-operations.md).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCallback">
      <MemberSignature Language="C#" Value="public bool IsCallback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCallback" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsCallback" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCallback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCallback { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCallback : bool" Usage="System.Web.UI.Page.IsCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-528">ページ要求がコールバックの結果であるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-528">Gets a value that indicates whether the page request is the result of a callback.</span></span></summary>
        <value><span data-ttu-id="7c669-529">ページ要求がコールバックの結果である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-529"><see langword="true" /> if the page request is the result of a callback; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-530">詳細については、「[ポストバックを使用しないクライアントコールバックの実装](https://docs.microsoft.com/previous-versions/aspnet/ms178208(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-530">For more information, see [Implementing Client Callbacks Without Postbacks](https://docs.microsoft.com/previous-versions/aspnet/ms178208(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms366518(v=vs.100)"><span data-ttu-id="7c669-531">方法: ASP.NET Web ページでコールバックを実装する</span><span class="sxs-lookup"><span data-stu-id="7c669-531">How to: Implement Callbacks in ASP.NET Web Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : string -&gt; bool" Usage="page.IsClientScriptBlockRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.IsClientScriptBlockRegistered(string key). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7c669-532">検索対象のクライアント スクリプトの文字列キー。</span><span class="sxs-lookup"><span data-stu-id="7c669-532">The string key of the client script to search for.</span></span></param>
        <summary><span data-ttu-id="7c669-533">指定したキーを持つクライアント スクリプト ブロックがページに登録されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="7c669-533">Determines whether the client script block with the specified key is registered with the page.</span></span></summary>
        <returns><span data-ttu-id="7c669-534">スクリプト ブロックが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-534"><see langword="true" /> if the script block is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-535"><xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=nameWithType> を呼び出す前にこのメソッドを呼び出して、クライアント側のスクリプトを不必要にアセンブルしないようにします。</span><span class="sxs-lookup"><span data-stu-id="7c669-535">Call this method before calling <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=nameWithType> to avoid unnecessarily assembling the client-side script.</span></span> <span data-ttu-id="7c669-536">これは、スクリプトで大量のサーバーリソースを作成する必要がある場合に特に重要です。</span><span class="sxs-lookup"><span data-stu-id="7c669-536">This is particularly important if the script requires a large amount of server resources to create.</span></span>

 <span data-ttu-id="7c669-537"><xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="7c669-537">The <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method has been deprecated.</span></span> <span data-ttu-id="7c669-538"><xref:System.Web.UI.ClientScriptManager> クラスの <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-538">Use the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>



## Examples
 <span data-ttu-id="7c669-539">次のコード例は、<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> メソッドを <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> メソッドと組み合わせて使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-539">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="7c669-540">コード宣言ブロックで記述された ECMAScript が、<xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>によって決定されるようにまだ登録されていない場合は、<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> の呼び出しが行われます。</span><span class="sxs-lookup"><span data-stu-id="7c669-540">If the ECMAScript written in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, then a <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.</span></span>

 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsCrossPagePostBack">
      <MemberSignature Language="C#" Value="public bool IsCrossPagePostBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCrossPagePostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsCrossPagePostBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCrossPagePostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCrossPagePostBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCrossPagePostBack : bool" Usage="System.Web.UI.Page.IsCrossPagePostBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-541">ページが、ページ間のポストバックに関与しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-541">Gets a value indicating whether the page is involved in a cross-page postback.</span></span></summary>
        <value><span data-ttu-id="7c669-542">ページが、ページ間の要求に関与している場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-542"><see langword="true" /> if the page is participating in a cross-page request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-543">ASP.NET は、あるページから別のページにコントロールを転送するための2つのメカニズムを提供します。</span><span class="sxs-lookup"><span data-stu-id="7c669-543">ASP.NET provides two mechanisms for transferring control from one page to another.</span></span> <span data-ttu-id="7c669-544"><xref:System.Web.HttpServerUtility.Transfer%2A> メソッドを使用すると、ページ間で処理を転送できます。また、<xref:System.Web.UI.WebControls.IButtonControl> インターフェイスを実装するボタンコントロールの <xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> プロパティにページ URL を割り当てることにより、ページ間要求を行うこともできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-544">You can use the <xref:System.Web.HttpServerUtility.Transfer%2A> method to transfer processing between pages, or you can make a cross-page request by assigning a page URL to the <xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> property of a button control that implements the <xref:System.Web.UI.WebControls.IButtonControl> interface.</span></span>

 <span data-ttu-id="7c669-545">どちらの場合も、<xref:System.Web.UI.Page.PreviousPage%2A> page プロパティには、前のページまたは発信元ページを表すオブジェクトが含まれます。</span><span class="sxs-lookup"><span data-stu-id="7c669-545">In either case, the <xref:System.Web.UI.Page.PreviousPage%2A> page property will contain an object that represents the previous or originator page.</span></span> <span data-ttu-id="7c669-546">たとえば、ページ a がページ B にポストされた場合、ページ A の <xref:System.Web.UI.Page.IsCrossPagePostBack%2A> プロパティ (<xref:System.Web.UI.Page.PreviousPage%2A> プロパティを使用してアクセスできます) は `true` され、ページ B の <xref:System.Web.UI.Page.PreviousPage%2A> プロパティの名前はページ A になります。</span><span class="sxs-lookup"><span data-stu-id="7c669-546">If, for example, Page A posts to Page B, Page A's <xref:System.Web.UI.Page.IsCrossPagePostBack%2A> property (accessible through the <xref:System.Web.UI.Page.PreviousPage%2A> property) will be `true` and Page B's <xref:System.Web.UI.Page.PreviousPage%2A> property will have the name of Page A.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.PostBackUrl" />
      </Docs>
    </Member>
    <Member MemberName="IsPostBack">
      <MemberSignature Language="C#" Value="public bool IsPostBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsPostBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPostBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPostBack : bool" Usage="System.Web.UI.Page.IsPostBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-547">初めてページを表示しているのか、またはポストバックへの応答としてページを読み込んでいるのかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-547">Gets a value that indicates whether the page is being rendered for the first time or is being loaded in response to a postback.</span></span></summary>
        <value><span data-ttu-id="7c669-548">ページがクライアント ポストバックへの応答として読み込まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-548"><see langword="true" /> if the page is being loaded in response to a client postback; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-549">ポストバックとコールバックの違いについては、「[ポストバックを使用しないクライアントコールバックの実装](https://docs.microsoft.com/previous-versions/aspnet/ms178208(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-549">For an explanation of the difference between postbacks and callbacks, see [Implementing Client Callbacks Without Postbacks](https://docs.microsoft.com/previous-versions/aspnet/ms178208(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="7c669-550">次の例は、ページが読み込まれるときに <xref:System.Web.UI.Page.IsPostBack%2A> プロパティの値をテストして、ページが初めて表示されているか、ポストバックに応答しているかを判断する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-550">The following example shows how to test the value of the <xref:System.Web.UI.Page.IsPostBack%2A> property when the page is loaded in order to determine whether the page is being rendered for the first time or is responding to a postback.</span></span> <span data-ttu-id="7c669-551">ページが初めて表示されている場合、コードは <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7c669-551">If the page is being rendered for the first time, the code calls the <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> method.</span></span>

 <span data-ttu-id="7c669-552">ページマークアップ (表示されません) には、必要な入力フィールドに対してエントリが作成されない場合にアスタリスクを表示する <xref:System.Web.UI.WebControls.RequiredFieldValidator> コントロールが含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c669-552">The page markup (not shown) contains <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls that display asterisks if no entry is made for a required input field.</span></span> <span data-ttu-id="7c669-553"><xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> を呼び出すと、ユーザーが [送信] ボタンをクリックするまで待機するのではなく、ページが表示された直後にアスタリスクが表示されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-553">Calling <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> causes the asterisks to be displayed immediately when the page is rendered, instead of waiting until the user clicks the Submit button.</span></span> <span data-ttu-id="7c669-554">ポストバック後に <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>を呼び出す必要はありません。これは、そのメソッドが <xref:System.Web.UI.Page> のライフサイクルの一部として呼び出されるためです。</span><span class="sxs-lookup"><span data-stu-id="7c669-554">After a postback, you do not have to call <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType>, because that method is called as part of the <xref:System.Web.UI.Page> life cycle.</span></span>

 [!code-csharp[System.Web.UI.Page.Validate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate/CS/validate.cs.aspx#1)]
 [!code-vb[System.Web.UI.Page.Validate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate/VB/validate.vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
        <altmember cref="P:System.Web.UI.Page.IsCallback" />
      </Docs>
    </Member>
    <Member MemberName="IsPostBackEventControlRegistered">
      <MemberSignature Language="C#" Value="public bool IsPostBackEventControlRegistered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostBackEventControlRegistered" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsPostBackEventControlRegistered" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPostBackEventControlRegistered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPostBackEventControlRegistered { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPostBackEventControlRegistered : bool" Usage="System.Web.UI.Page.IsPostBackEventControlRegistered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-555">ポストバックを実行するページ内のコントロールが登録されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-555">Gets a value that indicates whether the control in the page that performs postbacks has been registered.</span></span></summary>
        <value><span data-ttu-id="7c669-556">コントロールが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-556"><see langword="true" /> if the control has been registered; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="public bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReusable : bool" Usage="System.Web.UI.Page.IsReusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.IHttpHandler.IsReusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-557"><see cref="T:System.Web.UI.Page" /> オブジェクトを再利用できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-557">Gets a value indicating whether the <see cref="T:System.Web.UI.Page" /> object can be reused.</span></span></summary>
        <value><span data-ttu-id="7c669-558">常に <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-558"><see langword="false" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.IHttpHandler" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : string -&gt; bool" Usage="page.IsStartupScriptRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.IsStartupScriptRegistered(string key). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7c669-559">検索対象の起動スクリプトの文字列キー。</span><span class="sxs-lookup"><span data-stu-id="7c669-559">The string key of the startup script to search for.</span></span></param>
        <summary><span data-ttu-id="7c669-560">クライアント起動スクリプトが <see cref="T:System.Web.UI.Page" /> オブジェクトに登録されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="7c669-560">Determines whether the client startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <returns><span data-ttu-id="7c669-561">スタートアップ スクリプトが登録されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-561"><see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-562"><xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=nameWithType> を呼び出す前にこのメソッドを呼び出して、クライアント側のスクリプトを不必要にアセンブルしないようにします。</span><span class="sxs-lookup"><span data-stu-id="7c669-562">Call this method before calling <xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=nameWithType> to avoid unnecessarily assembling the client-side script.</span></span> <span data-ttu-id="7c669-563">これは、スクリプトで大量のサーバーリソースを作成する必要がある場合に特に重要です。</span><span class="sxs-lookup"><span data-stu-id="7c669-563">This is particularly important if the script requires a large amount of server resources to create.</span></span>

 <span data-ttu-id="7c669-564"><xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="7c669-564">The <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method has been deprecated.</span></span> <span data-ttu-id="7c669-565"><xref:System.Web.UI.ClientScriptManager> クラスの <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-565">Use the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>



## Examples
 <span data-ttu-id="7c669-566">次のコード例は、<xref:System.Web.UI.Page.RegisterStartupScript%2A> メソッドを <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> メソッドと組み合わせて使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-566">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="7c669-567">コード宣言ブロックで記述された ECMAScript が、<xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>によって決定されるようにまだ登録されていない場合は、<xref:System.Web.UI.Page.RegisterStartupScript%2A> の呼び出しが行われます。</span><span class="sxs-lookup"><span data-stu-id="7c669-567">If the ECMAScript written in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A>, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.</span></span>

 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Page.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-568">ページ検証が成功したかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-568">Gets a value indicating whether page validation succeeded.</span></span></summary>
        <value><span data-ttu-id="7c669-569">ページ検証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-569"><see langword="true" /> if page validation succeeded; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-570">このプロパティが `true`を返すには、現在の検証グループ内のすべての検証サーバーコントロールが正常に検証される必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-570">For this property to return `true`, all validation server controls in the current validation group must validate successfully.</span></span> <span data-ttu-id="7c669-571">このプロパティは、<xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> メソッドを呼び出した後にのみ確認してください。または、フォーム処理を開始する ASP.NET サーバーコントロールの `OnServerClick` イベントハンドラーで `CausesValidation` プロパティを `true` に設定してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-571">You should check this property only after you have called the <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> method, or set the `CausesValidation` property to `true` in the `OnServerClick` event handler for an ASP.NET server control that initiates form processing.</span></span> <span data-ttu-id="7c669-572">これらのサーバーコントロールには、<xref:System.Web.UI.WebControls.Button>、<xref:System.Web.UI.HtmlControls.HtmlButton>、<xref:System.Web.UI.HtmlControls.HtmlInputButton>、<xref:System.Web.UI.HtmlControls.HtmlInputImage>、<xref:System.Web.UI.WebControls.ImageButton>、および <xref:System.Web.UI.WebControls.LinkButton> クラスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="7c669-572">These server controls include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.HtmlControls.HtmlButton>, <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> classes.</span></span>

 <span data-ttu-id="7c669-573"><xref:System.Web.UI.Page.Validate%2A> メソッドを使用して検証グループを強制的に検証する場合は、指定された検証グループ内のすべての検証コントロールも正常に検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-573">If you force validation of a validation group using the <xref:System.Web.UI.Page.Validate%2A> method, then all validation controls in the specified validation group must validate successfully as well.</span></span>



## Examples
 <span data-ttu-id="7c669-574">次のコード例では、<xref:System.Web.UI.Page.IsValid%2A> プロパティを使用して条件付きステートメントを設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7c669-574">The following code example demonstrates using the <xref:System.Web.UI.Page.IsValid%2A> property to set up a conditional statement.</span></span> <span data-ttu-id="7c669-575">プロパティが `true`を返す場合、`lblOutput` コントロールの `Text` プロパティは "Page is valid!" に設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-575">If the property returns `true`, the `Text` property of the `lblOutput` control is set to "Page is valid!"</span></span> <span data-ttu-id="7c669-576">それ以外の場合は、"一部の必須フィールドは空です。" に設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-576">Otherwise, it is set to "Some of the required fields are empty."</span></span>

 [!code-csharp[System.Web.UI.Page.Validate#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate/CS/validate.cs.aspx#2)]
 [!code-vb[System.Web.UI.Page.Validate#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate/VB/validate.vb.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-577">検証が行われる前に <see cref="P:System.Web.UI.Page.IsValid" /> プロパティが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-577">The <see cref="P:System.Web.UI.Page.IsValid" /> property is called before validation has occurred.</span></span></exception>
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/debza5t0(v=vs.100)"><span data-ttu-id="7c669-578">検証 ASP.NET コントロール</span><span class="sxs-lookup"><span data-stu-id="7c669-578">Validation ASP.NET Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Items { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IDictionary" Usage="System.Web.UI.Page.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-579">ページ コンテキストに格納されているオブジェクトの一覧を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-579">Gets a list of objects stored in the page context.</span></span></summary>
        <value><span data-ttu-id="7c669-580">ページ コンテキストに格納されたオブジェクトを格納している <see cref="T:System.Collections.IDictionary" /> への参照。</span><span class="sxs-lookup"><span data-stu-id="7c669-580">A reference to an <see cref="T:System.Collections.IDictionary" /> containing objects stored in the page context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-581">ページ要求と同じ有効期間のオブジェクトを格納するには、<xref:System.Web.UI.Page.Items%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-581">Use the <xref:System.Web.UI.Page.Items%2A> property to store objects with the same lifetime as the page request.</span></span> <span data-ttu-id="7c669-582">このプロパティは読み取り専用です。ただし、返される <xref:System.Collections.IDictionary> オブジェクトにオブジェクトを追加することはできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-582">This property is read-only; however, you can add objects to the <xref:System.Collections.IDictionary> object it returns.</span></span>

 <span data-ttu-id="7c669-583"><xref:System.Web.UI.Page.Items%2A> プロパティに追加されたオブジェクトは、ページの有効期間全体で使用できます。そのため、ページのライフサイクルの早い段階でイベントの <xref:System.Web.UI.Page.Items%2A> プロパティにオブジェクトを追加し、後のイベントでそれらのオブジェクトにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-583">Objects added to the <xref:System.Web.UI.Page.Items%2A> property are available throughout the lifetime of the page, so you can add objects to the <xref:System.Web.UI.Page.Items%2A> property in events early in the page life cycle and access those objects in later events.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LCID">
      <MemberSignature Language="C#" Value="protected int LCID { set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LCID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.LCID" />
      <MemberSignature Language="VB.NET" Value="Protected Property LCID As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int LCID {  void set(int value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.LCID : int" Usage="System.Web.UI.Page.LCID" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public int LCID { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property LCID As Integer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LCID { int get(); void set(int value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.LCID : int with get, set" Usage="System.Web.UI.Page.LCID" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-584">ページと関連付けられている <see cref="T:System.Threading.Thread" /> オブジェクトのロケール識別子を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-584">Sets the locale identifier for the <see cref="T:System.Threading.Thread" /> object associated with the page.</span></span></summary>
        <value><span data-ttu-id="7c669-585"><see cref="T:System.Threading.Thread" /> に渡すロケール識別子。</span><span class="sxs-lookup"><span data-stu-id="7c669-585">The locale identifier to pass to the <see cref="T:System.Threading.Thread" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="7c669-586">ほとんどの場合、このプロパティはコードで設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-586">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="7c669-587">`LCID` 属性は、.aspx ファイルの[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブで設定できます。ただし、ロケール識別子の設定方法としては、<xref:System.Web.UI.Page.Culture%2A> プロパティと <xref:System.Web.UI.Page.UICulture%2A> プロパティを使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="7c669-587">The `LCID` attribute can be set in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive of the .aspx file, however, the preferred method of setting the locale identifier is through the use of the <xref:System.Web.UI.Page.Culture%2A> and <xref:System.Web.UI.Page.UICulture%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Threading.Thread" />
        <altmember cref="P:System.Web.UI.Page.Culture" />
        <altmember cref="P:System.Web.UI.Page.UICulture" />
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="public event EventHandler LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LoadComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.LoadComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LoadComplete;" />
      <MemberSignature Language="F#" Value="member this.LoadComplete : EventHandler " Usage="member this.LoadComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-588">ページの有効期間の読み込み段階が終了するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-588">Occurs at the end of the load stage of the page's life cycle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-589"><xref:System.Web.UI.Page.LoadComplete> イベントは、すべてのポストバックデータとビューステートデータがページに読み込まれた後、ページ上のすべてのコントロールに対して <xref:System.Web.UI.Control.OnLoad%2A> メソッドが呼び出された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-589">The <xref:System.Web.UI.Page.LoadComplete> event occurs after all postback data and view-state data is loaded into the page and after the <xref:System.Web.UI.Control.OnLoad%2A> method has been called for all controls on the page.</span></span>

 <span data-ttu-id="7c669-590">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="7c669-590">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Page.InitComplete" />
        <altmember cref="E:System.Web.UI.Page.PreRenderComplete" />
        <altmember cref="E:System.Web.UI.Page.SaveStateComplete" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100)"><span data-ttu-id="7c669-591">ASP.NET ページのライフサイクルの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-591">Introduction to the ASP.NET Page Life Cycle</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LoadPageStateFromPersistenceMedium">
      <MemberSignature Language="C#" Value="protected virtual object LoadPageStateFromPersistenceMedium ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object LoadPageStateFromPersistenceMedium() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPageStateFromPersistenceMedium () As Object" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ LoadPageStateFromPersistenceMedium();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member LoadPageStateFromPersistenceMedium : unit -&gt; obj&#xA;override this.LoadPageStateFromPersistenceMedium : unit -&gt; obj" Usage="page.LoadPageStateFromPersistenceMedium " />
      <MemberSignature Language="C#" Value="protected internal virtual object LoadPageStateFromPersistenceMedium ();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object LoadPageStateFromPersistenceMedium() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function LoadPageStateFromPersistenceMedium () As Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ LoadPageStateFromPersistenceMedium();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-592">保存されたすべてのビューステートに関する情報を <see cref="T:System.Web.UI.Page" /> オブジェクトに読み込みます。</span><span class="sxs-lookup"><span data-stu-id="7c669-592">Loads any saved view-state information to the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <returns><span data-ttu-id="7c669-593">保存されたビュー ステート。</span><span class="sxs-lookup"><span data-stu-id="7c669-593">The saved view state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-594"><xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> メソッドは、<xref:System.Web.UI.Page.PageStatePersister%2A> プロパティによって参照される <xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType> オブジェクトの <xref:System.Web.UI.PageStatePersister.Load%2A> メソッドを使用して、<xref:System.Web.UI.Page> オブジェクトの保存されているビューステート情報を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="7c669-594">The <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> method uses the <xref:System.Web.UI.PageStatePersister.Load%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to load any saved view-state information for the <xref:System.Web.UI.Page> object.</span></span>

 <span data-ttu-id="7c669-595">ASP.NET クラス <xref:System.Web.UI.PageStatePersister> の2つの子孫 <xref:System.Web.UI.HiddenFieldPageStatePersister>、ASP.NET ページに含まれている隠しフィールドに状態情報を保存するクラス、および要求に関連付けられた <xref:System.Web.UI.Page.Session%2A> オブジェクトに状態を保存する <xref:System.Web.UI.SessionPageStatePersister> クラスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c669-595">ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request.</span></span>

 <span data-ttu-id="7c669-596">任意の場所に状態を保存するには、選択した永続化メディアに状態を保存して読み込む、<xref:System.Web.UI.PageStatePersister> クラスの新しい子孫を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-596">To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice.</span></span> <span data-ttu-id="7c669-597">新しい <xref:System.Web.UI.PageStatePersister> オブジェクトを作成する例については、<xref:System.Web.UI.PageStatePersister> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-597">For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.</span></span>

 <span data-ttu-id="7c669-598">.NET Framework バージョン1.0 または1.1 を使用している場合は、非表示フィールド以外のものから <xref:System.Web.UI.Page> 状態を読み込む場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="7c669-598">If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to load the <xref:System.Web.UI.Page> state from anything other than a hidden field.</span></span> <span data-ttu-id="7c669-599">これを選択した場合は、<xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> メソッドもオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-599">If you choose to do so, you must also override the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="MaintainScrollPositionOnPostBack">
      <MemberSignature Language="C#" Value="public bool MaintainScrollPositionOnPostBack { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MaintainScrollPositionOnPostBack" />
      <MemberSignature Language="VB.NET" Value="Public Property MaintainScrollPositionOnPostBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MaintainScrollPositionOnPostBack { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MaintainScrollPositionOnPostBack : bool with get, set" Usage="System.Web.UI.Page.MaintainScrollPositionOnPostBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-600">ポストバック後に、クライアント ブラウザー内の同じ位置にユーザーを返すかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-600">Gets or sets a value indicating whether to return the user to the same position in the client browser after postback.</span></span> <span data-ttu-id="7c669-601">このプロパティは、使用が推奨されなくなった <see cref="P:System.Web.UI.Page.SmartNavigation" /> プロパティに代わるものです。</span><span class="sxs-lookup"><span data-stu-id="7c669-601">This property replaces the obsolete <see cref="P:System.Web.UI.Page.SmartNavigation" /> property.</span></span></summary>
        <value><span data-ttu-id="7c669-602">クライアントの位置を維持する必要がある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-602"><see langword="true" /> if the client position should be maintained; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-603">Web ページがサーバーにポストバックされると、ユーザーはページの一番上に戻ります。</span><span class="sxs-lookup"><span data-stu-id="7c669-603">When Web pages are posted back to the server, the user is returned to the top of the page.</span></span> <span data-ttu-id="7c669-604">長い Web ページでは、これは、ユーザーがページの最後の位置までページをスクロールする必要があることを意味します。</span><span class="sxs-lookup"><span data-stu-id="7c669-604">On long Web pages, this means that the user has to scroll the page back to the last position on the page.</span></span>  
  
 <span data-ttu-id="7c669-605"><xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> プロパティが `true`に設定されている場合、ユーザーはそのページの最後の位置に返されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-605">When the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property is set to `true`, the user is instead returned to the last position on the page.</span></span>  
  
 <span data-ttu-id="7c669-606">[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブには、<xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-606">You set the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="page.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="7c669-607">仮想パスを表す <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-607">A <see cref="T:System.String" /> that represents the virtual path.</span></span></param>
        <summary><span data-ttu-id="7c669-608">仮想パス (絶対パスまたは相対パス)、またはアプリケーション相対パスの割り当て先の物理パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-608">Retrieves the physical path that a virtual path, either absolute or relative, or an application-relative path maps to.</span></span></summary>
        <returns><span data-ttu-id="7c669-609">仮想パスまたはアプリケーション相対パスに関連付けられている物理パス。</span><span class="sxs-lookup"><span data-stu-id="7c669-609">The physical path associated with the virtual path or application-relative path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!CAUTION]
>  <span data-ttu-id="7c669-610"><xref:System.Web.UI.Page.MapPath%2A> プロパティには、ホスト環境に関する機密情報が含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-610">The <xref:System.Web.UI.Page.MapPath%2A> property can potentially contain sensitive information about the hosting environment.</span></span> <span data-ttu-id="7c669-611">戻り値は、ユーザーに表示されません。</span><span class="sxs-lookup"><span data-stu-id="7c669-611">The return value should not be displayed to users.</span></span>



## Examples
 <span data-ttu-id="7c669-612">次の例では、<xref:System.Web.UI.Page.MapPath%2A> メソッドを使用して、サブフォルダーの物理パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-612">The following example uses the <xref:System.Web.UI.Page.MapPath%2A> method to obtain the physical path of a subfolder.</span></span> <span data-ttu-id="7c669-613">次に、<xref:System.Web.UI.WebControls.TextBox> コントロールの <xref:System.Web.UI.WebControls.TextBox.Text%2A> プロパティから読み取られたファイル名を追加します。</span><span class="sxs-lookup"><span data-stu-id="7c669-613">It then appends the file name that is read from the <xref:System.Web.UI.WebControls.TextBox.Text%2A> property of a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="7c669-614">結果は、そのファイルへの絶対物理パスになります。</span><span class="sxs-lookup"><span data-stu-id="7c669-614">The result is the absolute physical path to that file.</span></span>

 [!code-csharp[Page_MapPath_ResponseEncoding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_MapPath_ResponseEncoding/CS/page_mappath_responseencoding.cs.aspx#1)]
 [!code-vb[Page_MapPath_ResponseEncoding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_MapPath_ResponseEncoding/VB/page_mappath_responseencoding.vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpServerUtility.MapPath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Master">
      <MemberSignature Language="C#" Value="public System.Web.UI.MasterPage Master { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.MasterPage Master" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Master" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Master As MasterPage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::MasterPage ^ Master { System::Web::UI::MasterPage ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Master : System.Web.UI.MasterPage" Usage="System.Web.UI.Page.Master" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.MasterPage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-615">ページの全体的な外観を決定するマスター ページを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-615">Gets the master page that determines the overall look of the page.</span></span></summary>
        <value><span data-ttu-id="7c669-616">存在する場合は、このページに関連付けられた <see cref="T:System.Web.UI.MasterPage" />。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-616">The <see cref="T:System.Web.UI.MasterPage" /> associated with this page if it exists; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-617"><xref:System.Web.UI.Page.Master%2A> プロパティは、このページに関連付けられている <xref:System.Web.UI.MasterPage> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-617">The <xref:System.Web.UI.Page.Master%2A> property returns the <xref:System.Web.UI.MasterPage> object associated with this page.</span></span> <span data-ttu-id="7c669-618">このプロパティは読み取り専用です。ただし、返される <xref:System.Web.UI.MasterPage> オブジェクトにプロパティを設定することができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-618">This property is read-only; however, you can set properties on the <xref:System.Web.UI.MasterPage> object it returns.</span></span>

 <span data-ttu-id="7c669-619"><xref:System.Web.UI.Page.Master%2A> プロパティは、<xref:System.Web.UI.Page.MasterPageFile%2A> プロパティのマスターページを参照するページでのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="7c669-619">The <xref:System.Web.UI.Page.Master%2A> property is valid only on pages that reference a master page in the <xref:System.Web.UI.Page.MasterPageFile%2A> property.</span></span> <span data-ttu-id="7c669-620">マスターページを参照していないページの <xref:System.Web.UI.Page.Master%2A> プロパティにアクセスすると、`null` が返されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-620">If you access the <xref:System.Web.UI.Page.Master%2A> property on a page that does not reference a master page, `null` is returned.</span></span> <span data-ttu-id="7c669-621">マスターページの内容は、<xref:System.Web.UI.Page.PreInit> イベントが発生するまで使用できません。</span><span class="sxs-lookup"><span data-stu-id="7c669-621">The contents of a master page are not available until after the <xref:System.Web.UI.Page.PreInit> event has been raised.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.MasterPageFile" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wtxbf3hh(v=vs.100)"><span data-ttu-id="7c669-622">マスターページについて</span><span class="sxs-lookup"><span data-stu-id="7c669-622">Understanding Master Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MasterPageFile">
      <MemberSignature Language="C#" Value="public virtual string MasterPageFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MasterPageFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MasterPageFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MasterPageFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MasterPageFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MasterPageFile : string with get, set" Usage="System.Web.UI.Page.MasterPageFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-623">マスター ページの仮想パスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-623">Gets or sets the virtual path of the master page.</span></span></summary>
        <value><span data-ttu-id="7c669-624">マスター ページの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="7c669-624">The virtual path of the master page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-625"><xref:System.Web.UI.Page.MasterPageFile%2A> プロパティは、このページに関連付けられているマスターページファイルの仮想パス (アプリケーションのルートから) です。</span><span class="sxs-lookup"><span data-stu-id="7c669-625">The <xref:System.Web.UI.Page.MasterPageFile%2A> property is a virtual path (from the root of the application) of the master page file associated with this page.</span></span> <span data-ttu-id="7c669-626"><xref:System.Web.UI.Page.MasterPageFile%2A> プロパティは、<xref:System.Web.UI.Page.PreInit> イベントでのみ設定できます。<xref:System.Web.UI.Page.PreInit> イベントの後に <xref:System.Web.UI.Page.MasterPageFile%2A> プロパティを設定しようとすると、<xref:System.InvalidOperationException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-626">The <xref:System.Web.UI.Page.MasterPageFile%2A> property can be set only in the <xref:System.Web.UI.Page.PreInit> event; attempting to set the <xref:System.Web.UI.Page.MasterPageFile%2A> property after the <xref:System.Web.UI.Page.PreInit> event will throw an <xref:System.InvalidOperationException> exception.</span></span> <span data-ttu-id="7c669-627"><xref:System.Web.UI.Page.MasterPageFile%2A> プロパティが有効でない場合は、<xref:System.Web.HttpException> 型の例外が後でページライフサイクルでスローされますが、<xref:System.Web.UI.Page.PreInit> イベントでプロパティが設定されている場合、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="7c669-627">If the <xref:System.Web.UI.Page.MasterPageFile%2A> property is not valid, an exception of type <xref:System.Web.HttpException> is thrown later in the page life cycle, but no exception is thrown when the property is set in the <xref:System.Web.UI.Page.PreInit> event.</span></span>

 <span data-ttu-id="7c669-628"><xref:System.Web.UI.Page.MasterPageFile%2A> プロパティが設定されているページはコンテンツページであるため、<xref:System.Web.UI.WebControls.Content> コントロールである最上位レベルのコントロールのみを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-628">Pages that have the <xref:System.Web.UI.Page.MasterPageFile%2A> property set are content pages, and therefore can contain only top-level controls that are <xref:System.Web.UI.WebControls.Content> controls.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-629"><see cref="P:System.Web.UI.Page.MasterPageFile" /> プロパティは <see cref="E:System.Web.UI.Page.PreInit" /> イベントの完了後に設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-629">The <see cref="P:System.Web.UI.Page.MasterPageFile" /> property is set after the <see cref="E:System.Web.UI.Page.PreInit" /> event is complete.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-630"><see cref="P:System.Web.UI.Page.MasterPageFile" /> プロパティで指定されたファイルが存在しません。</span><span class="sxs-lookup"><span data-stu-id="7c669-630">The file specified in the <see cref="P:System.Web.UI.Page.MasterPageFile" /> property does not exist.</span></span>

<span data-ttu-id="7c669-631">- または -</span><span class="sxs-lookup"><span data-stu-id="7c669-631">-or-</span></span>

<span data-ttu-id="7c669-632">ページに、最上位のコントロールである <see cref="T:System.Web.UI.WebControls.Content" /> コントロールがありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-632">The page does not have a <see cref="T:System.Web.UI.WebControls.Content" /> control as the top level control.</span></span></exception>
        <altmember cref="P:System.Web.UI.Page.Master" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/wtxbf3hh(v=vs.100)"><span data-ttu-id="7c669-633">マスターページについて</span><span class="sxs-lookup"><span data-stu-id="7c669-633">Understanding Master Pages</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaxPageStateFieldLength">
      <MemberSignature Language="C#" Value="public int MaxPageStateFieldLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPageStateFieldLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MaxPageStateFieldLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPageStateFieldLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPageStateFieldLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxPageStateFieldLength : int with get, set" Usage="System.Web.UI.Page.MaxPageStateFieldLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-634">ページの状態フィールドの最大長を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-634">Gets or sets the maximum length for the page's state field.</span></span></summary>
        <value><span data-ttu-id="7c669-635">ページの状態フィールドの最大長 (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="7c669-635">The maximum length, in bytes, for the page's state field.</span></span> <span data-ttu-id="7c669-636">既定値は -1 です。</span><span class="sxs-lookup"><span data-stu-id="7c669-636">The default is -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-637"><xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> プロパティが正の数に設定されている場合、クライアントブラウザーに送信されたビューステートは複数の非表示フィールドに分割され、各フィールドの値は <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> プロパティで指定されたサイズより小さくなります。</span><span class="sxs-lookup"><span data-stu-id="7c669-637">When the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property is set to a positive number, the view state sent to the client browser is broken into multiple hidden fields, and each field's value is less than the size specified in the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property.</span></span>

 <span data-ttu-id="7c669-638"><xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> プロパティを負の値 (既定値) に設定すると、ビューステートフィールドをチャンクに分割することはできません。</span><span class="sxs-lookup"><span data-stu-id="7c669-638">Setting the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property to a negative number (the default) indicates that the view-state field should not be separated into chunks.</span></span> <span data-ttu-id="7c669-639"><xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> を小さい数値に設定すると、パフォーマンスが低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-639">Setting the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> to a small number may result in poor performance.</span></span>

 <span data-ttu-id="7c669-640">Web.config ファイルの[pages 要素](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100))の <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> プロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-640">Set the value of the <xref:System.Web.UI.Page.MaxPageStateFieldLength%2A> property in the [pages element](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/950xf363(v=vs.100)) of the Web.config file.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7c669-641"><see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> プロパティが -1 または正の数と等しくありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-641">The <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> property is not equal to -1 or a positive number.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-642">ページの初期化後に <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> プロパティが設定されました。</span><span class="sxs-lookup"><span data-stu-id="7c669-642">The <see cref="P:System.Web.UI.Page.MaxPageStateFieldLength" /> property was set after the page was initialized.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MetaDescription">
      <MemberSignature Language="C#" Value="public string MetaDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MetaDescription" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MetaDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property MetaDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MetaDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MetaDescription : string with get, set" Usage="System.Web.UI.Page.MetaDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-643"><see langword="meta" /> 要素の "description" の内容を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-643">Gets or sets the content of the "description" <see langword="meta" /> element.</span></span></summary>
        <value><span data-ttu-id="7c669-644"><see langword="meta" /> 要素の "description" の内容。</span><span class="sxs-lookup"><span data-stu-id="7c669-644">The content of the "description" <see langword="meta" /> element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-645">HTML `meta` 要素を使用して、検索エンジンの一覧を向上させることができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-645">HTML `meta` elements can be used to improve search-engine listings.</span></span> <span data-ttu-id="7c669-646">"Description" `meta` 要素は、一覧のプレビューを改善するために一部の検索エンジンによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-646">The "description" `meta` element is used by some search engines to improve listing previews.</span></span>  
  
 <span data-ttu-id="7c669-647">ページマークアップの `head` 要素に "description" `meta` 要素がない場合は、ページが表示されるときに `meta` 要素がページに追加されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-647">If there is no "description" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered.</span></span> <span data-ttu-id="7c669-648">ページマークアップに "description" `meta` 要素が既に存在する場合、このプロパティは `meta` 要素の `content` 属性を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-648">If the page markup already has a "description" `meta` element, this property gets or sets the `content` attribute of the `meta` element.</span></span>  
  
 <span data-ttu-id="7c669-649">このプロパティは、 [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブで設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-649">You can also set this property in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c669-650">ページの [<xref:System.Web.UI.Page.MetaDescription%2A>] プロパティを "ASP.NET 概要" に設定すると、表示される HTML に次の要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-650">If you set the <xref:System.Web.UI.Page.MetaDescription%2A> property of a page to "ASP.NET Overview", the following element will appear in the rendered HTML:</span></span>  
  
 `<meta name="description" content="ASP.NET Overview" />`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-651">ページには、ヘッダー コントロール ("server" に設定された <see langword="head" /> 属性を持つ <see langword="runat" /> 要素) はありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-651">The page does not have a header control (a <see langword="head" /> element with the <see langword="runat" /> attribute set to "server").</span></span></exception>
        <altmember cref="P:System.Web.UI.Page.MetaKeywords" />
      </Docs>
    </Member>
    <Member MemberName="MetaKeywords">
      <MemberSignature Language="C#" Value="public string MetaKeywords { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MetaKeywords" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.MetaKeywords" />
      <MemberSignature Language="VB.NET" Value="Public Property MetaKeywords As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MetaKeywords { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MetaKeywords : string with get, set" Usage="System.Web.UI.Page.MetaKeywords" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-652"><see langword="meta" /> 要素の "keywords" の内容を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-652">Gets or sets the content of the "keywords" <see langword="meta" /> element.</span></span></summary>
        <value><span data-ttu-id="7c669-653"><see langword="meta" /> 要素の "keywords" の内容。</span><span class="sxs-lookup"><span data-stu-id="7c669-653">The content of the "keywords" <see langword="meta" /> element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-654">HTML `meta` 要素を使用して、検索エンジンの一覧を向上させることができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-654">HTML `meta` elements can be used to improve search-engine listings.</span></span> <span data-ttu-id="7c669-655">"Keywords" `meta` 要素はまったく使用されていないか、または主要な検索エンジンによってわずかに重み付けされています。</span><span class="sxs-lookup"><span data-stu-id="7c669-655">The "keywords" `meta` element is either not used at all or is given very little weight by the major search engines.</span></span>  
  
 <span data-ttu-id="7c669-656">ページマークアップの `head` 要素に "keywords" `meta` 要素がない場合、ページが表示されるときに `meta` 要素がページに追加されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-656">If there is no "keywords" `meta` element in the `head` element of the page markup, the `meta` element is added to the page when the page is rendered.</span></span> <span data-ttu-id="7c669-657">ページマークアップに "keywords" `meta` 要素が既に存在する場合、このプロパティは `meta` 要素の `content` 属性を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-657">If the page markup already has a "keywords" `meta` element, this property gets or sets the `content` attribute of the `meta` element.</span></span>  
  
 <span data-ttu-id="7c669-658">このプロパティは、 [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブで設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-658">You can also set this property in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c669-659">ページの [<xref:System.Web.UI.Page.MetaKeywords%2A>] プロパティを "HTML, CSS, XML, JavaScript" に設定すると、表示される HTML に次の要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-659">If you set the <xref:System.Web.UI.Page.MetaKeywords%2A> property of a page to "HTML,CSS,XML,JavaScript", the following element will appear in the rendered HTML:</span></span>  
  
 `<meta name="keywords" content=" HTML,CSS,XML,JavaScript" />`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-660">ページには、ヘッダー コントロール ("server" に設定された <see langword="head" /> 属性を持つ <see langword="runat" /> 要素) はありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-660">The page does not have a header control (a <see langword="head" /> element with the <see langword="runat" /> attribute set to "server").</span></span></exception>
        <altmember cref="P:System.Web.UI.Page.MetaDescription" />
      </Docs>
    </Member>
    <Member MemberName="ModelBindingExecutionContext">
      <MemberSignature Language="C#" Value="public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ModelBindingExecutionContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelBindingExecutionContext As ModelBindingExecutionContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ModelBinding::ModelBindingExecutionContext ^ ModelBindingExecutionContext { System::Web::ModelBinding::ModelBindingExecutionContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ModelBindingExecutionContext : System.Web.ModelBinding.ModelBindingExecutionContext" Usage="System.Web.UI.Page.ModelBindingExecutionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ModelBinding.ModelBindingExecutionContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-661">モデル バインディングの実行コンテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-661">Gets the model binding execution context.</span></span></summary>
        <value><span data-ttu-id="7c669-662">モデル バインディングの実行コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="7c669-662">The model binding execution context.</span></span> <span data-ttu-id="7c669-663">モデル バインディングの実行コンテキストが <see langword="null" /> の場合は、新しい実行コンテキストが作成され、それが返されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-663">If the model binding execution context is <see langword="null" />, a new one is created and returned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModelState">
      <MemberSignature Language="C#" Value="public System.Web.ModelBinding.ModelStateDictionary ModelState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ModelBinding.ModelStateDictionary ModelState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ModelState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ModelState As ModelStateDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ModelBinding::ModelStateDictionary ^ ModelState { System::Web::ModelBinding::ModelStateDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ModelState : System.Web.ModelBinding.ModelStateDictionary" Usage="System.Web.UI.Page.ModelState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ModelBinding.ModelStateDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-664">モデルの状態およびモデル バインディングの検証の状態を格納するモデル状態ディクショナリ オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-664">Gets the model state dictionary object that contains the state of the model and of model-binding validation.</span></span></summary>
        <value><span data-ttu-id="7c669-665">モデル状態ディクショナリ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-665">The model state dictionary object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-666">Web フォームでのモデルバインドの使用に関するチュートリアルシリーズについては、「[モデルバインドと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-666">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="page.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7c669-667">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-667">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7c669-668"><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させてページを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7c669-668">Raises the <see cref="E:System.Web.UI.Control.Init" /> event to initialize the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-669"><xref:System.Web.UI.Page.OnInit%2A> メソッドは、<xref:System.Web.UI.Page> インスタンスを作成するために必要な初期化とセットアップの手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c669-669">The <xref:System.Web.UI.Page.OnInit%2A> method performs the initialization and setup steps required to create a <xref:System.Web.UI.Page> instance.</span></span> <span data-ttu-id="7c669-670">ページのライフサイクルのこの段階では、ページ上の宣言されたサーバーコントロールが既定の状態に初期化されます。ただし、各コントロールのビューステートはまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-670">In this stage of the page's life cycle, declared server controls on the page are initialized to their default state; however, the view state of each control is not yet populated.</span></span> <span data-ttu-id="7c669-671">ページ上のコントロールは、他のコントロールが子コントロールであるか親コントロールであるかに関係なく、`Page_Init` フェーズ中にページ上の他のサーバーコントロールにアクセスすることはできません。</span><span class="sxs-lookup"><span data-stu-id="7c669-671">A control on the page cannot access other server controls on the page during the `Page_Init` phase, regardless of whether the other controls are child or parent controls.</span></span> <span data-ttu-id="7c669-672">他のサーバーコントロールを作成し、アクセスできる状態にすることは保証されていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-672">Other server controls are not guaranteed to be created and ready for access.</span></span>

 <span data-ttu-id="7c669-673"><xref:System.Web.UI.Page.OnInit%2A> メソッドは、<xref:System.Web.UI.Page.OnPreInit%2A> メソッドの後、<xref:System.Web.UI.Page.OnInitComplete%2A> メソッドの前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-673">The <xref:System.Web.UI.Page.OnInit%2A> method is called after the <xref:System.Web.UI.Page.OnPreInit%2A> method and before the <xref:System.Web.UI.Page.OnInitComplete%2A> method.</span></span>

 <span data-ttu-id="7c669-674">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-674">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="7c669-675">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-675">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 <span data-ttu-id="7c669-676"><xref:System.Web.UI.Page.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-676">The <xref:System.Web.UI.Page.OnInit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="7c669-677">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="7c669-677">This is the preferred technique for handling the event in a derived class.</span></span>

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7c669-678">派生クラスで <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの<see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-678">When overriding <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnInit(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnInitComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInitComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitComplete(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInitComplete : EventArgs -&gt; unit&#xA;override this.OnInitComplete : EventArgs -&gt; unit" Usage="page.OnInitComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7c669-679">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-679">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7c669-680">ページを初期化した後に <see cref="E:System.Web.UI.Page.InitComplete" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="7c669-680">Raises the <see cref="E:System.Web.UI.Page.InitComplete" /> event after page initialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-681"><xref:System.Web.UI.Page.OnInitComplete%2A> メソッドは、ページの初期化が完了した後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-681">The <xref:System.Web.UI.Page.OnInitComplete%2A> method is called after page initialization is complete.</span></span> <span data-ttu-id="7c669-682">ページのライフサイクルのこの段階では、ページ上で宣言されたすべてのコントロールが初期化されますが、ページのビューステートはまだ設定されていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-682">In this stage of the page's life cycle, all declared controls on the page are initialized, but the page's view state is not yet populated.</span></span> <span data-ttu-id="7c669-683">サーバーコントロールにはアクセスできますが、ユーザーから返された情報はまだ含まれていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-683">You can access server controls, but they will not yet contain information returned from the user.</span></span>

 <span data-ttu-id="7c669-684"><xref:System.Web.UI.Page.OnInitComplete%2A> メソッドは、<xref:System.Web.UI.Page> 初期化ステージの最後と読み込みステージの前に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-684">The <xref:System.Web.UI.Page.OnInitComplete%2A> method occurs at the end of the <xref:System.Web.UI.Page> initialization stage and before the load stage.</span></span>

 <span data-ttu-id="7c669-685">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-685">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="7c669-686">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-686">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 <span data-ttu-id="7c669-687"><xref:System.Web.UI.Page.OnInitComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-687">The <xref:System.Web.UI.Page.OnInitComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="7c669-688">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="7c669-688">This is the preferred technique for handling the event in a derived class.</span></span>

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7c669-689">派生クラスで <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの<see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-689">When overriding <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnInitComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLoadComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnLoadComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLoadComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLoadComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLoadComplete(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLoadComplete : EventArgs -&gt; unit&#xA;override this.OnLoadComplete : EventArgs -&gt; unit" Usage="page.OnLoadComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7c669-690">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-690">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7c669-691">ページの読み込み段階の終了時に <see cref="E:System.Web.UI.Page.LoadComplete" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="7c669-691">Raises the <see cref="E:System.Web.UI.Page.LoadComplete" /> event at the end of the page load stage.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-692"><xref:System.Web.UI.Page.OnLoadComplete%2A> メソッドは、ページ読み込みステージの最後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-692">The <xref:System.Web.UI.Page.OnLoadComplete%2A> method is called at the end of the page load stage.</span></span> <span data-ttu-id="7c669-693">ページライフサイクルのこの時点で、ポストバックデータとビューステートデータはすべて、ページ上のコントロールに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="7c669-693">At this point in the page life cycle, all postback data and view-state data is loaded into controls on the page.</span></span>

 <span data-ttu-id="7c669-694">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-694">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="7c669-695">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-695">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 <span data-ttu-id="7c669-696"><xref:System.Web.UI.Page.OnLoadComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-696">The <xref:System.Web.UI.Page.OnLoadComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="7c669-697">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="7c669-697">This is the preferred technique for handling the event in a derived class.</span></span>

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7c669-698">派生クラスで <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの<see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-698">When overriding <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnLoadComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPreInit">
      <MemberSignature Language="C#" Value="protected virtual void OnPreInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreInit : EventArgs -&gt; unit&#xA;override this.OnPreInit : EventArgs -&gt; unit" Usage="page.OnPreInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7c669-699">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-699">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7c669-700">ページの初期化の開始時に <see cref="E:System.Web.UI.Page.PreInit" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="7c669-700">Raises the <see cref="E:System.Web.UI.Page.PreInit" /> event at the beginning of page initialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-701"><xref:System.Web.UI.Page.OnPreInit%2A> メソッドは、ページ初期化ステージの開始時に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-701">The <xref:System.Web.UI.Page.OnPreInit%2A> method is called at the beginning of the page initialization stage.</span></span>

 <span data-ttu-id="7c669-702"><xref:System.Web.UI.Page.OnPreInit%2A> メソッドが呼び出されると、パーソナル化情報が読み込まれ、ページのテーマ (存在する場合) が初期化されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-702">After the <xref:System.Web.UI.Page.OnPreInit%2A> method is called, personalization information is loaded and the page theme, if any, is initialized.</span></span> <span data-ttu-id="7c669-703">これは、ページの <xref:System.Web.UI.PageTheme> または <xref:System.Web.UI.MasterPage> を動的に定義する場合にも推奨される段階です。</span><span class="sxs-lookup"><span data-stu-id="7c669-703">This is also the preferred stage to dynamically define a <xref:System.Web.UI.PageTheme> or <xref:System.Web.UI.MasterPage> for the Page.</span></span>

 <span data-ttu-id="7c669-704">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-704">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="7c669-705">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-705">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 <span data-ttu-id="7c669-706"><xref:System.Web.UI.Page.OnPreInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-706">The <xref:System.Web.UI.Page.OnPreInit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="7c669-707">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="7c669-707">This is the preferred technique for handling the event in a derived class.</span></span>

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7c669-708">派生クラスで <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの<see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-708">When overriding <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPreLoad">
      <MemberSignature Language="C#" Value="protected virtual void OnPreLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreLoad(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreLoad : EventArgs -&gt; unit&#xA;override this.OnPreLoad : EventArgs -&gt; unit" Usage="page.OnPreLoad e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7c669-709">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-709">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7c669-710">ポストバック データがページ上のサーバー コントロールに読み込まれてから <see cref="E:System.Web.UI.Page.PreLoad" /> イベントが発生するまでの間に <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="7c669-710">Raises the <see cref="E:System.Web.UI.Page.PreLoad" /> event after postback data is loaded into the page server controls but before the <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-711"><xref:System.Web.UI.Page.OnPreLoad%2A> メソッドは、ユーザーから返されたすべてのポストバックデータが読み込まれた後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-711">The <xref:System.Web.UI.Page.OnPreLoad%2A> method is called after all postback data returned from the user is loaded.</span></span> <span data-ttu-id="7c669-712">ページのライフサイクルのこの段階で、初期化段階で作成された宣言されたコントロールとコントロールのビューステート情報およびポストバックデータがページのコントロールに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="7c669-712">At this stage in the page's life cycle, view-state information and postback data for declared controls and controls created during the initialization stage are loaded into the page's controls.</span></span>

 <span data-ttu-id="7c669-713"><xref:System.Web.UI.Page.OnPreLoad%2A> メソッドで作成されたコントロールも、ビューステートおよびポストバックデータと共に読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="7c669-713">Controls created in the <xref:System.Web.UI.Page.OnPreLoad%2A> method will also be loaded with view-state and postback data.</span></span>

 <span data-ttu-id="7c669-714">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-714">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="7c669-715">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-715">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 <span data-ttu-id="7c669-716"><xref:System.Web.UI.Page.OnPreLoad%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-716">The <xref:System.Web.UI.Page.OnPreLoad%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="7c669-717">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="7c669-717">This is the preferred technique for handling the event in a derived class.</span></span>

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7c669-718">派生クラスで <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの<see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-718">When overriding <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPreRenderComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnPreRenderComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreRenderComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreRenderComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreRenderComplete(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRenderComplete : EventArgs -&gt; unit&#xA;override this.OnPreRenderComplete : EventArgs -&gt; unit" Usage="page.OnPreRenderComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7c669-719">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-719">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7c669-720"><see cref="E:System.Web.UI.Page.PreRenderComplete" /> イベントが発生してからページが表示されるまでの間に <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="7c669-720">Raises the <see cref="E:System.Web.UI.Page.PreRenderComplete" /> event after the <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> event and before the page is rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-721"><xref:System.Web.UI.Page.OnPreRenderComplete%2A> メソッドは、ページライフサイクルのプリステージ段階が完了したときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-721">The <xref:System.Web.UI.Page.OnPreRenderComplete%2A> method is called when the prerendering stage of the page life cycle is complete.</span></span> <span data-ttu-id="7c669-722">ページライフサイクルのこの段階では、すべてのコントロールが作成され、ページは出力を表示する準備ができています。</span><span class="sxs-lookup"><span data-stu-id="7c669-722">At this stage of the page life cycle, all controls are created and the page is ready to render the output.</span></span>

 <span data-ttu-id="7c669-723">これは、ページのビューステートが保存される前に呼び出される最後のイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c669-723">This is the last event called before the page's view state is saved.</span></span>

 <span data-ttu-id="7c669-724">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-724">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="7c669-725">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-725">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 <span data-ttu-id="7c669-726"><xref:System.Web.UI.Page.OnPreRenderComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-726">The <xref:System.Web.UI.Page.OnPreRenderComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="7c669-727">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="7c669-727">This is the preferred technique for handling the event in a derived class.</span></span>

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7c669-728">派生クラスで <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの<see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-728">When overriding <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSaveStateComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnSaveStateComplete (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSaveStateComplete(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSaveStateComplete (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSaveStateComplete(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSaveStateComplete : EventArgs -&gt; unit&#xA;override this.OnSaveStateComplete : EventArgs -&gt; unit" Usage="page.OnSaveStateComplete e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7c669-729">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-729">A <see cref="T:System.EventArgs" /> object containing the event data.</span></span></param>
        <summary><span data-ttu-id="7c669-730">ページの状態が永続媒体に保存された後で <see cref="E:System.Web.UI.Page.SaveStateComplete" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="7c669-730">Raises the <see cref="E:System.Web.UI.Page.SaveStateComplete" /> event after the page state has been saved to the persistence medium.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-731"><xref:System.Web.UI.Page.OnSaveStateComplete%2A> メソッドは、コントロールの状態情報がページの永続メディアに書き込まれるときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-731">The <xref:System.Web.UI.Page.OnSaveStateComplete%2A> method is called when the state information for the control has been written to the persistence medium for the page.</span></span> <span data-ttu-id="7c669-732">状態情報は、<xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> メソッドを呼び出すことによって、永続メディアに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="7c669-732">State information is written to the persistence medium by calling the <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method.</span></span>

 <span data-ttu-id="7c669-733">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-733">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="7c669-734">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-734">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 <span data-ttu-id="7c669-735"><xref:System.Web.UI.Page.OnSaveStateComplete%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-735">The <xref:System.Web.UI.Page.OnSaveStateComplete%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="7c669-736">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="7c669-736">This is the preferred technique for handling the event in a derived class.</span></span>

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7c669-737">派生クラスで <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基底クラスの<see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-737">When overriding <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Web.UI.Page.SaveStateComplete" />
        <altmember cref="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)" />
        <altmember cref="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium" />
      </Docs>
    </Member>
    <Member MemberName="PageAdapter">
      <MemberSignature Language="C#" Value="public System.Web.UI.Adapters.PageAdapter PageAdapter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Adapters.PageAdapter PageAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.PageAdapter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PageAdapter As PageAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Adapters::PageAdapter ^ PageAdapter { System::Web::UI::Adapters::PageAdapter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PageAdapter : System.Web.UI.Adapters.PageAdapter" Usage="System.Web.UI.Page.PageAdapter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Adapters.PageAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-738">特定の要求側のブラウザーのページをレンダリングするアダプターを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-738">Gets the adapter that renders the page for the specific requesting browser.</span></span></summary>
        <value><span data-ttu-id="7c669-739">ページをレンダリングする <see cref="T:System.Web.UI.Adapters.PageAdapter" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-739">The <see cref="T:System.Web.UI.Adapters.PageAdapter" /> that renders the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-740"><xref:System.Web.UI.Page.PageAdapter%2A> プロパティは、要求元のブラウザーの <xref:System.Web.UI.Page> オブジェクトの動作を変更する特定の <xref:System.Web.UI.Adapters.PageAdapter> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-740">The <xref:System.Web.UI.Page.PageAdapter%2A> property returns the specific <xref:System.Web.UI.Adapters.PageAdapter> object that modifies the behavior of the <xref:System.Web.UI.Page> object for the requesting browser.</span></span>

 <span data-ttu-id="7c669-741">特定の <xref:System.Web.UI.Adapters.PageAdapter> オブジェクトは、受信 <xref:System.Web.UI.Page.Request%2A> オブジェクトの特性を調べることによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-741">The specific <xref:System.Web.UI.Adapters.PageAdapter> object is determined by examining characteristics of the incoming <xref:System.Web.UI.Page.Request%2A> object.</span></span> <span data-ttu-id="7c669-742">要求に対してアダプターが選択されると、<xref:System.Web.UI.Adapters.PageAdapter> オブジェクトのライフサイクルイベントによって、<xref:System.Web.UI.Page> オブジェクトの対応するイベントが上書きされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-742">When an adapter is chosen for the request, any life cycle events on the <xref:System.Web.UI.Adapters.PageAdapter> object override the corresponding events on the <xref:System.Web.UI.Page> object.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageStatePersister">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PageStatePersister PageStatePersister { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.PageStatePersister PageStatePersister" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.PageStatePersister" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property PageStatePersister As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::PageStatePersister ^ PageStatePersister { System::Web::UI::PageStatePersister ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PageStatePersister : System.Web.UI.PageStatePersister" Usage="System.Web.UI.Page.PageStatePersister" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-743">ページに関連付けられている <see cref="T:System.Web.UI.PageStatePersister" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-743">Gets the <see cref="T:System.Web.UI.PageStatePersister" /> object associated with the page.</span></span></summary>
        <value><span data-ttu-id="7c669-744">ページに関連付けられた <see cref="T:System.Web.UI.PageStatePersister" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-744">A <see cref="T:System.Web.UI.PageStatePersister" /> associated with the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-745">HTTP 要求と応答は本質的にステートレスです。</span><span class="sxs-lookup"><span data-stu-id="7c669-745">HTTP requests and responses are inherently stateless.</span></span> <span data-ttu-id="7c669-746">HTTP 要求間で状態を維持するために、ASP.NET サーバーページは <xref:System.Web.UI.Page> 状態を格納できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-746">To maintain state between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state.</span></span> <span data-ttu-id="7c669-747">この状態は、ビューステートと呼ばれ、ページとコントロールの設定およびデータで構成されています。ページとコントロールは、ユーザーが最後にページに対して行ったラウンドトリップで見て操作したものと同じように見えます。</span><span class="sxs-lookup"><span data-stu-id="7c669-747">This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the page.</span></span> <span data-ttu-id="7c669-748">複数のメカニズムがあり、同じページに対する連続した要求の間にビューステートを格納します。</span><span class="sxs-lookup"><span data-stu-id="7c669-748">Several mechanisms exist to store view state between successive requests to the same page.</span></span> <span data-ttu-id="7c669-749">抽象 <xref:System.Web.UI.PageStatePersister> クラスは、これらの状態格納機構の基本クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="7c669-749">The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state storage mechanisms.</span></span>

 <span data-ttu-id="7c669-750">通常、ページ開発者は、<xref:System.Web.UI.Page.PageStatePersister%2A> プロパティを使用する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-750">Page developers will typically not need to use the <xref:System.Web.UI.Page.PageStatePersister%2A> property.</span></span> <span data-ttu-id="7c669-751"><xref:System.Web.UI.Page.PageStatePersister%2A> プロパティは、主に、<xref:System.Web.UI.Page> クラスの機能を拡張するコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-751">The <xref:System.Web.UI.Page.PageStatePersister%2A> property is used primarily by control developers extending the functionality of the <xref:System.Web.UI.Page> class.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="postEventArgumentID">
      <MemberSignature Language="C#" Value="protected const string postEventArgumentID;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".field family static literal string postEventArgumentID" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.Page.postEventArgumentID" />
      <MemberSignature Language="VB.NET" Value="Protected Const postEventArgumentID As String " FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ postEventArgumentID;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="val mutable postEventArgumentID : string" Usage="System.Web.UI.Page.postEventArgumentID" />
      <MemberSignature Language="C#" Value="public const string postEventArgumentID;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string postEventArgumentID" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Const postEventArgumentID As String " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ postEventArgumentID;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-752">表示されるページの EVENTARGUMENT 非表示フィールドを定義する文字列。</span><span class="sxs-lookup"><span data-stu-id="7c669-752">A string that defines the EVENTARGUMENT hidden field in the rendered page.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Web.UI.Page.postEventSourceID" />
      </Docs>
    </Member>
    <Member MemberName="postEventSourceID">
      <MemberSignature Language="C#" Value="protected const string postEventSourceID;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".field family static literal string postEventSourceID" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.Page.postEventSourceID" />
      <MemberSignature Language="VB.NET" Value="Protected Const postEventSourceID As String " FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ postEventSourceID;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="val mutable postEventSourceID : string" Usage="System.Web.UI.Page.postEventSourceID" />
      <MemberSignature Language="C#" Value="public const string postEventSourceID;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string postEventSourceID" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Const postEventSourceID As String " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ postEventSourceID;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-753">表示されるページの EVENTTARGET 非表示フィールドを定義する文字列。</span><span class="sxs-lookup"><span data-stu-id="7c669-753">A string that defines the EVENTTARGET hidden field in the rendered page.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="F:System.Web.UI.Page.postEventArgumentID" />
      </Docs>
    </Member>
    <Member MemberName="PreInit">
      <MemberSignature Language="C#" Value="public event EventHandler PreInit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreInit" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.PreInit" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreInit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreInit;" />
      <MemberSignature Language="F#" Value="member this.PreInit : EventHandler " Usage="member this.PreInit : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-754">ページの初期化前に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-754">Occurs before page initialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-755">このイベントを使用すると、ポストバックへの応答としてページが読み込まれているかどうかなど、ページ要求の条件を確認できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-755">This event enables you to check conditions of the page request, such as whether the page is being loaded in response to a postback.</span></span> <span data-ttu-id="7c669-756">プロファイルプロパティの値を確認することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-756">You can also check the values of profile properties.</span></span>

 <span data-ttu-id="7c669-757">このイベントを使用すると、後でページのライフサイクルで使用される値を設定できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-757">The event enables you to set values that are used later in the page life cycle.</span></span> <span data-ttu-id="7c669-758">要求されたページのマスターページまたはテーマを動的に設定し、動的コントロールを作成できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-758">You can dynamically set a master page or a theme for the requested page, and create dynamic controls.</span></span>

 <span data-ttu-id="7c669-759"><xref:System.Web.UI.Page.PreInit> イベントが ASP.NET ライフサイクルにどのように適合するかの詳細については、「 [ASP.NET Page ライフサイクルの概要](https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-759">For more information about how the <xref:System.Web.UI.Page.PreInit> event fits into the ASP.NET life cycle, see [ASP.NET Page Life Cycle Overview](https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnPreInit(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.PreLoad" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100)"><span data-ttu-id="7c669-760">ASP.NET ページのライフサイクルの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-760">Introduction to the ASP.NET Page Life Cycle</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PreLoad">
      <MemberSignature Language="C#" Value="public event EventHandler PreLoad;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreLoad" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.PreLoad" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreLoad As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreLoad;" />
      <MemberSignature Language="F#" Value="member this.PreLoad : EventHandler " Usage="member this.PreLoad : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-761">ページの<see cref="E:System.Web.UI.Control.Load" /> イベントの前に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-761">Occurs before the page <see cref="E:System.Web.UI.Control.Load" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-762"><xref:System.Web.UI.Page.PreLoad> イベントは、すべてのポストバックデータ処理の後、<xref:System.Web.UI.Control.Load> イベントの前に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-762">The <xref:System.Web.UI.Page.PreLoad> event is raised after all postback data processing and before the <xref:System.Web.UI.Control.Load> event.</span></span> <span data-ttu-id="7c669-763"><xref:System.Web.UI.Page.OnLoadComplete%2A> イベントの前にポストバックデータを読み込もうとすると、2回目の試行が行われます。</span><span class="sxs-lookup"><span data-stu-id="7c669-763">There is a second attempt to load postback data before the <xref:System.Web.UI.Page.OnLoadComplete%2A> event.</span></span> <span data-ttu-id="7c669-764">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="7c669-764">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnPreLoad(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.PreInit" />
        <altmember cref="E:System.Web.UI.Page.PreRenderComplete" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100)"><span data-ttu-id="7c669-765">ASP.NET ページのライフサイクルの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-765">Introduction to the ASP.NET Page Life Cycle</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PreRenderComplete">
      <MemberSignature Language="C#" Value="public event EventHandler PreRenderComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PreRenderComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.PreRenderComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreRenderComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PreRenderComplete;" />
      <MemberSignature Language="F#" Value="member this.PreRenderComplete : EventHandler " Usage="member this.PreRenderComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-766">ページの内容が表示される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-766">Occurs before the page content is rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-767"><xref:System.Web.UI.Page.PreRenderComplete> イベントは、ページのライフサイクルの事前レンダリングステージが完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-767">The <xref:System.Web.UI.Page.PreRenderComplete> event is raised when the pre-render stage of the page life cycle is complete.</span></span> <span data-ttu-id="7c669-768">ページライフサイクルのこの段階では、すべてのコントロールが作成され、必要なページ割り当てが完了し、ページが出力に表示されるようになります。</span><span class="sxs-lookup"><span data-stu-id="7c669-768">At this stage of the page life cycle, all controls are created, any pagination required is completed, and the page is ready to render to the output.</span></span>

 <span data-ttu-id="7c669-769">これは、ページのビューステートが保存される前に発生する最後のイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c669-769">This is the last event raised before the page's view state is saved.</span></span>

 <span data-ttu-id="7c669-770">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="7c669-770">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.PreLoad" />
        <altmember cref="E:System.Web.UI.Page.PreInit" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100)"><span data-ttu-id="7c669-771">ASP.NET ページのライフサイクルの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-771">Introduction to the ASP.NET Page Life Cycle</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PreviousPage">
      <MemberSignature Language="C#" Value="public System.Web.UI.Page PreviousPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page PreviousPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.PreviousPage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousPage As Page" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Page ^ PreviousPage { System::Web::UI::Page ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousPage : System.Web.UI.Page" Usage="System.Web.UI.Page.PreviousPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-772">現在のページにコントロールが渡されるページを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-772">Gets the page that transferred control to the current page.</span></span></summary>
        <value><span data-ttu-id="7c669-773">現在のページにコントロールが渡されるページを表す <see cref="T:System.Web.UI.Page" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-773">The <see cref="T:System.Web.UI.Page" /> representing the page that transferred control to the current page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-774"><xref:System.Web.HttpServerUtility.Transfer%2A> メソッドを使用する場合、またはクロスページポストを使用して ASP.NET のあるページから別のページへの処理を転送する場合、送信元のページには、送信先ページに必要な要求情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c669-774">When you use the <xref:System.Web.HttpServerUtility.Transfer%2A> method or use cross-page posting to transfer processing from one ASP.NET page to another, the originating page contains request information that might be required for the destination page.</span></span> <span data-ttu-id="7c669-775">この情報にアクセスするには、<xref:System.Web.UI.Page.PreviousPage%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-775">You can use the <xref:System.Web.UI.Page.PreviousPage%2A> property to access that information.</span></span>

 <span data-ttu-id="7c669-776">現在のページが (別のページからの転送またはクロスポストではなく) 直接要求の結果として表示されている場合、<xref:System.Web.UI.Page.PreviousPage%2A> プロパティには `null`が含まれます。</span><span class="sxs-lookup"><span data-stu-id="7c669-776">If the current page is being rendered as a result of a direct request (not a transfer or cross-post from another page), the <xref:System.Web.UI.Page.PreviousPage%2A> property contains `null`.</span></span>



## Examples
 <span data-ttu-id="7c669-777">次の例は、2つの部分に分かれています。</span><span class="sxs-lookup"><span data-stu-id="7c669-777">The following example is in two parts.</span></span> <span data-ttu-id="7c669-778">1つ目は、ページモデルで `Server.Transfer("path")`として公開されている <xref:System.Web.HttpServerUtility.Transfer%2A> メソッドを使用する ASP.NET ページです。</span><span class="sxs-lookup"><span data-stu-id="7c669-778">The first is an ASP.NET page that uses the <xref:System.Web.HttpServerUtility.Transfer%2A> method, exposed in the page model as `Server.Transfer("path")`.</span></span> <span data-ttu-id="7c669-779">2番目の部分はターゲットページで、<xref:System.Web.UI.Page.PreviousPage%2A> プロパティを使用して最初のページのタイトルを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-779">The second part is the target page, which uses the <xref:System.Web.UI.Page.PreviousPage%2A> property to get the title of the first page.</span></span>

 [!code-aspx-csharp[System.Web.UI.Page.PreviousPage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/CS/Main.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.PreviousPage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/VB/Main.aspx#1)]

 [!code-aspx-csharp[System.Web.UI.Page.PreviousPage#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/CS/Notify.aspx#2)]
 [!code-aspx-vb[System.Web.UI.Page.PreviousPage#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.PreviousPage/VB/Notify.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-780">現在のユーザーは、前のページにアクセスすることを許可されていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-780">The current user is not allowed to access the previous page.</span></span>

 <span data-ttu-id="7c669-781">- または -</span><span class="sxs-lookup"><span data-stu-id="7c669-781">-or-</span></span>

 <span data-ttu-id="7c669-782">ASP.NET ルーティングが使用中のため、前のページの URL はルーティング URL です。</span><span class="sxs-lookup"><span data-stu-id="7c669-782">ASP.NET routing is in use and the previous page's URL is a routed URL.</span></span> <span data-ttu-id="7c669-783">ASP.NET がアクセス許可をチェックするときは、その URL がファイルへの実際のパスであることを前提としています。</span><span class="sxs-lookup"><span data-stu-id="7c669-783">When ASP.NET checks access permissions, it assumes that the URL is an actual path to a file.</span></span> <span data-ttu-id="7c669-784">ルーティングされた URL には該当しないため、チェックは失敗します。</span><span class="sxs-lookup"><span data-stu-id="7c669-784">Because this is not the case with a routed URL, the check fails.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="public void ProcessRequest (System.Web.HttpContext context);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessRequest (context As HttpContext)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : System.Web.HttpContext -&gt; unit&#xA;override this.ProcessRequest : System.Web.HttpContext -&gt; unit" Usage="page.ProcessRequest context" />
      <MemberSignature Language="C#" Value="public virtual void ProcessRequest (System.Web.HttpContext context);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessRequest (context As HttpContext)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="7c669-785">HTTP 要求を処理するために使用する、組み込みのサーバー オブジェクト (<see cref="T:System.Web.HttpContext" />、<see cref="P:System.Web.HttpContext.Request" />、<see cref="P:System.Web.HttpContext.Response" /> など) への参照を提供する <see cref="P:System.Web.HttpContext.Session" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-785">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, and <see cref="P:System.Web.HttpContext.Session" />) used to service HTTP requests.</span></span></param>
        <summary><span data-ttu-id="7c669-786"><see cref="T:System.Web.UI.Page" />、<see cref="P:System.Web.UI.Page.Context" />、<see cref="P:System.Web.UI.Page.Request" />、<see cref="P:System.Web.UI.Page.Response" /> の各プロパティなど、<see cref="P:System.Web.UI.Page.Application" /> オブジェクトの組み込みサーバー オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-786">Sets the intrinsic server objects of the <see cref="T:System.Web.UI.Page" /> object, such as the <see cref="P:System.Web.UI.Page.Context" />, <see cref="P:System.Web.UI.Page.Request" />, <see cref="P:System.Web.UI.Page.Response" />, and <see cref="P:System.Web.UI.Page.Application" /> properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-787">このメソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="7c669-787">You should not call this method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Context" />
        <altmember cref="P:System.Web.UI.Page.Request" />
        <altmember cref="P:System.Web.UI.Page.Response" />
        <altmember cref="P:System.Web.UI.Page.Application" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(class System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (sourceControl As IPostBackEventHandler, eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::Web::UI::IPostBackEventHandler ^ sourceControl, System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : System.Web.UI.IPostBackEventHandler * string -&gt; unit&#xA;override this.RaisePostBackEvent : System.Web.UI.IPostBackEventHandler * string -&gt; unit" Usage="page.RaisePostBackEvent (sourceControl, eventArgument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceControl" Type="System.Web.UI.IPostBackEventHandler" />
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceControl"><span data-ttu-id="7c669-788">ポストバックの原因となった ASP.NET サーバー コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c669-788">The ASP.NET server control that caused the postback.</span></span> <span data-ttu-id="7c669-789">このコントロールは、<see cref="T:System.Web.UI.IPostBackEventHandler" /> インターフェイスを実装している必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-789">This control must implement the <see cref="T:System.Web.UI.IPostBackEventHandler" /> interface.</span></span></param>
        <param name="eventArgument"><span data-ttu-id="7c669-790">ポストバックの引数。</span><span class="sxs-lookup"><span data-stu-id="7c669-790">The postback argument.</span></span></param>
        <summary><span data-ttu-id="7c669-791">ポストバックの原因となったサーバー コントロールに、受信ポストバック イベントを処理するよう通知します。</span><span class="sxs-lookup"><span data-stu-id="7c669-791">Notifies the server control that caused the postback that it should handle an incoming postback event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-792"><xref:System.Web.UI.Page> オブジェクトは、ポストバックが発生したときに <xref:System.Web.UI.Page.RaisePostBackEvent%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7c669-792">The <xref:System.Web.UI.Page> object calls the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method when a postback occurs.</span></span> <span data-ttu-id="7c669-793">この呼び出しは、読み込みと変更通知の完了後、プリリリースが発生する前に、ページのライフサイクルで発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-793">This call occurs in the page life cycle after loading and change notification are complete but before prerendering occurs.</span></span>



## Examples
 <span data-ttu-id="7c669-794">次の例では、<xref:System.Web.UI.Page.RaisePostBackEvent%2A> メソッドを使用して、カスタム `userButton` サーバーコントロールがクリックされたときにポストバックイベントが発生することを ASP.NET に通知します。</span><span class="sxs-lookup"><span data-stu-id="7c669-794">The following example uses the <xref:System.Web.UI.Page.RaisePostBackEvent%2A> method to notify ASP.NET that a post-back event is raised when a custom `userButton` server control is clicked.</span></span>

 [!code-csharp[Page_RaisePostBackEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RaisePostBackEvent/CS/page_raisepostbackevent.cs.aspx#1)]
 [!code-vb[Page_RaisePostBackEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RaisePostBackEvent/VB/page_raisepostbackevent.vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100)"><span data-ttu-id="7c669-795">ASP.NET ページのライフサイクルの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-795">Introduction to the ASP.NET Page Life Cycle</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/y3bwdsh3(v=vs.100)"><span data-ttu-id="7c669-796">ASP.NET サーバーコントロールイベントモデル</span><span class="sxs-lookup"><span data-stu-id="7c669-796">ASP.NET Server Control Event Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterArrayDeclaration : string * string -&gt; unit" Usage="page.RegisterArrayDeclaration (arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterArrayDeclaration(string arrayName, string arrayValue). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName"><span data-ttu-id="7c669-797">値の宣言が行われる配列の名前。</span><span class="sxs-lookup"><span data-stu-id="7c669-797">The name of the array in which to declare the value.</span></span></param>
        <param name="arrayValue"><span data-ttu-id="7c669-798">配列に代入する値。</span><span class="sxs-lookup"><span data-stu-id="7c669-798">The value to place in the array.</span></span></param>
        <summary><span data-ttu-id="7c669-799">ページが表示されると、ECMAScript 配列宣言として宣言される値を宣言します。</span><span class="sxs-lookup"><span data-stu-id="7c669-799">Declares a value that is declared as an ECMAScript array declaration when the page is rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-800">このメソッドは、クライアントスクリプトライブラリが同じ型のすべてのコントロールを操作できるように、スクリプトベースのコントロールが配列内で自身を宣言するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-800">This method can be used by script-based controls to declare themselves within an array so that a client script library can work with all the controls of the same type.</span></span>

 <span data-ttu-id="7c669-801"><xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="7c669-801">The <xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> method has been deprecated.</span></span> <span data-ttu-id="7c669-802"><xref:System.Web.UI.ClientScriptManager> クラスの <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-802">Use the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>



## Examples
 <span data-ttu-id="7c669-803">次のコード例では、<xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> メソッドを使用して、`x`、`y`、および `z`という名前の3つのオブジェクトを含む配列 `myArray`を宣言しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-803">The following code example uses the <xref:System.Web.UI.Page.RegisterArrayDeclaration%2A> method to declare an array, `myArray`, that contains three objects named `x`, `y`, and `z`.</span></span> <span data-ttu-id="7c669-804">この例では、<xref:System.Web.UI.Page.RegisterStartupScript%2A> メソッドを使用してスタートアップスクリプトを定義し、登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-804">The example defines and registers a startup script using the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="7c669-805">このコードを含むページから ECMAScript `doClick` 関数が呼び出されると、配列とそのオブジェクトが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-805">When the ECMAScript `doClick` function is called from the page that contains this code, the array and its objects are initialized.</span></span>

 [!code-csharp[Page_RegisterArrayDeclaration#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterArrayDeclaration/CS/page_registerarraydeclaration.cs.aspx#1)]
 [!code-vb[Page_RegisterArrayDeclaration#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterArrayDeclaration/VB/page_registerarraydeclaration.vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAsyncTask">
      <MemberSignature Language="C#" Value="public void RegisterAsyncTask (System.Web.UI.PageAsyncTask task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterAsyncTask(class System.Web.UI.PageAsyncTask task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterAsyncTask (task As PageAsyncTask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterAsyncTask(System::Web::UI::PageAsyncTask ^ task);" />
      <MemberSignature Language="F#" Value="member this.RegisterAsyncTask : System.Web.UI.PageAsyncTask -&gt; unit" Usage="page.RegisterAsyncTask task" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="task" Type="System.Web.UI.PageAsyncTask" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="7c669-806">非同期操作を定義する <see cref="T:System.Web.UI.PageAsyncTask" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-806">A <see cref="T:System.Web.UI.PageAsyncTask" /> that defines the asynchronous task.</span></span></param>
        <summary><span data-ttu-id="7c669-807">新しい非同期操作をページに登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-807">Registers a new asynchronous task with the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-808"><xref:System.Web.UI.PageAsyncTask> クラスを使用して、非同期タスクを定義します。</span><span class="sxs-lookup"><span data-stu-id="7c669-808">Define an asynchronous task using the <xref:System.Web.UI.PageAsyncTask> class.</span></span> <span data-ttu-id="7c669-809">タスクが定義されている場合は、<xref:System.Web.UI.Page.RegisterAsyncTask%2A> メソッドを使用して、そのページにタスクを登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-809">When the task is defined, use the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method to register the task with the page.</span></span> <span data-ttu-id="7c669-810">タスクを登録したら、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> メソッドを呼び出して、非同期タスクを開始します。</span><span class="sxs-lookup"><span data-stu-id="7c669-810">After registering the task, invoke the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method to begin the asynchronous task.</span></span>

 <span data-ttu-id="7c669-811"><xref:System.Web.UI.Page.RegisterAsyncTask%2A> メソッドは、同期ページと非同期ページの両方で使用できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-811">The <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method can be used with both synchronous and asynchronous pages.</span></span>



## Examples
 <span data-ttu-id="7c669-812">次のコード例では、<xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> メソッドと <xref:System.Web.UI.Page.RegisterAsyncTask%2A> メソッドを使用して、<xref:System.Web.UI.Page.AsyncTimeout%2A> プロパティを使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7c669-812">The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods.</span></span> <span data-ttu-id="7c669-813">開始、終了、およびタイムアウトハンドラーの使用に注意してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-813">Note the use of beginning, ending, and time-out handlers.</span></span> <span data-ttu-id="7c669-814">この例では、<xref:System.Web.UI.Page.AsyncTimeout%2A> プロパティで指定されているタスクに割り当てられた時間を超える非同期タスクの状況を示すために、人為的な遅延が発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-814">In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property.</span></span> <span data-ttu-id="7c669-815">実際のシナリオでは、非同期タスクを使用してデータベース呼び出しやイメージの生成を実行できます。また、タイムアウトハンドラーは、タスクが指定された時間内に実行されない場合に、正常なパフォーマンス低下を提供します。</span><span class="sxs-lookup"><span data-stu-id="7c669-815">In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.</span></span>

 [!code-aspx-csharp[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.AsyncTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.aspx#1)]

 [!code-csharp[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/CS/page_asynctask.cs#2)]
 [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.AsyncTimeout/vb/page_asynctask.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c669-816">非同期操作は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-816">The asynchronous task is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.Page.ExecuteRegisteredAsyncTasks" />
        <altmember cref="T:System.Web.UI.PageAsyncTask" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public virtual void RegisterClientScriptBlock (string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterClientScriptBlock(string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterClientScriptBlock (key As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterClientScriptBlock(System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="abstract member RegisterClientScriptBlock : string * string -&gt; unit&#xA;override this.RegisterClientScriptBlock : string * string -&gt; unit" Usage="page.RegisterClientScriptBlock (key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterClientScriptBlock(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7c669-817">スクリプト ブロックを識別する一意のキー。</span><span class="sxs-lookup"><span data-stu-id="7c669-817">Unique key that identifies a script block.</span></span></param>
        <param name="script"><span data-ttu-id="7c669-818">クライアントに送られるスクリプトの内容。</span><span class="sxs-lookup"><span data-stu-id="7c669-818">Content of script that is sent to the client.</span></span></param>
        <summary><span data-ttu-id="7c669-819">応答に対してクライアント側のスクリプト ブロックを出力します。</span><span class="sxs-lookup"><span data-stu-id="7c669-819">Emits client-side script blocks to the response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-820">クライアント側スクリプトは、<xref:System.Web.UI.Page> オブジェクトの `<form runat= server>` 要素の開始タグの直後に生成されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-820">The client-side script is emitted just after the opening tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element.</span></span> <span data-ttu-id="7c669-821">`script` パラメーターに指定されているスクリプトブロック文字列の前後に `<script>` 要素の開始と終了を含めるようにしてください。</span><span class="sxs-lookup"><span data-stu-id="7c669-821">Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter.</span></span>

 <span data-ttu-id="7c669-822">このメソッドは、キーを使用してスクリプトブロックを識別するため、別のサーバーコントロールインスタンスによって要求されるたびに、スクリプトブロックを出力ストリームに出力する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-822">Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance.</span></span> <span data-ttu-id="7c669-823">また、キーを使用すると、さまざまなコントロールのスクリプトブロックが相互に干渉する可能性が低くなります。</span><span class="sxs-lookup"><span data-stu-id="7c669-823">Using a key also decreases the likelihood of different controls' script blocks interfering with each other.</span></span>

 <span data-ttu-id="7c669-824">同じ `key` パラメーター値を持つすべてのスクリプトブロックは、重複していると見なされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-824">Any script blocks with the same `key` parameter values are considered duplicates.</span></span>

> [!NOTE]
>  <span data-ttu-id="7c669-825">要求側のブラウザーでスクリプトがサポートされていない場合は、表示されないように、スクリプトの周囲に HTML コメントタグを含めるようにしてください。</span><span class="sxs-lookup"><span data-stu-id="7c669-825">Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.</span></span>

 <span data-ttu-id="7c669-826"><xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="7c669-826">The <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method has been deprecated.</span></span> <span data-ttu-id="7c669-827">代わりに <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> クラスの <xref:System.Web.UI.ClientScriptManager> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-827">Use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>



## Examples
 <span data-ttu-id="7c669-828">次のコード例は、<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> メソッドを <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> メソッドと組み合わせて使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-828">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="7c669-829">コード宣言ブロックの ECMAScript がまだ登録されていない場合は、<xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>によって決定されますが、<xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> 呼び出しが行われます。</span><span class="sxs-lookup"><span data-stu-id="7c669-829">If the ECMAScript in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.</span></span>

 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public virtual void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="abstract member RegisterHiddenField : string * string -&gt; unit&#xA;override this.RegisterHiddenField : string * string -&gt; unit" Usage="page.RegisterHiddenField (hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName"><span data-ttu-id="7c669-830">表示される非表示フィールドの一意の名前。</span><span class="sxs-lookup"><span data-stu-id="7c669-830">The unique name of the hidden field to be rendered.</span></span></param>
        <param name="hiddenFieldInitialValue"><span data-ttu-id="7c669-831">非表示フォームに出力される値。</span><span class="sxs-lookup"><span data-stu-id="7c669-831">The value to be emitted in the hidden form.</span></span></param>
        <summary><span data-ttu-id="7c669-832">サーバー コントロールがフォームに非表示フィールドを自動的に登録できるようにします。</span><span class="sxs-lookup"><span data-stu-id="7c669-832">Allows server controls to automatically register a hidden field on the form.</span></span> <span data-ttu-id="7c669-833"><see cref="T:System.Web.UI.Page" /> サーバー コントロールが表示されると、フィールドが <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> オブジェクトに送られます。</span><span class="sxs-lookup"><span data-stu-id="7c669-833">The field will be sent to the <see cref="T:System.Web.UI.Page" /> object when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> server control is rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-834"><xref:System.Web.UI.Page.RegisterHiddenField%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="7c669-834">The <xref:System.Web.UI.Page.RegisterHiddenField%2A> method has been deprecated.</span></span> <span data-ttu-id="7c669-835"><xref:System.Web.UI.ClientScriptManager> クラスの <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-835">Use the <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>



## Examples
 <span data-ttu-id="7c669-836">次のコード例では、<xref:System.Web.UI.Page.RegisterHiddenField%2A> メソッドを使用して、要求元のブラウザーに渡される ECMAScript コードを作成します。</span><span class="sxs-lookup"><span data-stu-id="7c669-836">The following code example uses the <xref:System.Web.UI.Page.RegisterHiddenField%2A> method to help create ECMAScript code that is passed to the requesting browser.</span></span> <span data-ttu-id="7c669-837">隠しフィールドの名前が `myHiddenField` に設定され、その値が [Microsoft へようこそ] に設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-837">The name of the hidden field is set to `myHiddenField` and its value is set to "Welcome to Microsoft!"</span></span> <span data-ttu-id="7c669-838"><xref:System.Web.UI.Page.RegisterStartupScript%2A> メソッドは、ユーザーがページのボタンをクリックしたときに `myHiddenField` 値を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7c669-838">The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method calls the `myHiddenField` value when the user clicks a button on the page.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7c669-839">この例には、セキュリティ上の脅威となる可能性のある非表示フィールドがあります。</span><span class="sxs-lookup"><span data-stu-id="7c669-839">This example has a hidden field, which is a potential security threat.</span></span> <span data-ttu-id="7c669-840">既定では、テキストボックスの値と同じように、非表示フィールドの値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-840">By default, you should validate the value of a hidden field as you would the value of a text box.</span></span> <span data-ttu-id="7c669-841">ASP.NET Web ページは、ユーザー入力にスクリプトまたは HTML 要素が含まれていないことを検証します。</span><span class="sxs-lookup"><span data-stu-id="7c669-841">ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7c669-842">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-842">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-csharp[Page_RegisterHiddenField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterHiddenField/CS/page_registerhiddenfield.cs.aspx#1)]
 [!code-vb[Page_RegisterHiddenField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterHiddenField/VB/page_registerhiddenfield.vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterOnSubmitStatement (key As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterOnSubmitStatement : string * string -&gt; unit" Usage="page.RegisterOnSubmitStatement (key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterOnSubmitStatement(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7c669-843">スクリプト ブロックを識別する一意のキー。</span><span class="sxs-lookup"><span data-stu-id="7c669-843">Unique key that identifies a script block.</span></span></param>
        <param name="script"><span data-ttu-id="7c669-844">クライアントに送られるクライアント側のスクリプト。</span><span class="sxs-lookup"><span data-stu-id="7c669-844">The client-side script to be sent to the client.</span></span></param>
        <summary><span data-ttu-id="7c669-845">ページがクライアント <see langword="OnSubmit" /> イベントにアクセスできるようにします。</span><span class="sxs-lookup"><span data-stu-id="7c669-845">Allows a page to access the client <see langword="OnSubmit" /> event.</span></span> <span data-ttu-id="7c669-846">スクリプトは、他の場所に登録されているクライアント コードへの関数の呼び出しである必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-846">The script should be a function call to client code registered elsewhere.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-847"><xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="7c669-847">The <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> method has been deprecated.</span></span> <span data-ttu-id="7c669-848"><xref:System.Web.UI.ClientScriptManager> クラスの <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-848">Use the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method in the <xref:System.Web.UI.ClientScriptManager> class.</span></span>



## Examples
 <span data-ttu-id="7c669-849">次のコード例では、<xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> を使用して、クライアント側の [送信] ボタンがクリックされたときに応答するスクリプトにアクセスする方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7c669-849">The following code example demonstrates using the <xref:System.Web.UI.Page.RegisterOnSubmitStatement%2A> to access a script that responds when a client-side Submit button is clicked.</span></span> <span data-ttu-id="7c669-850">このイベントが発生すると、登録された ECMAScript コードがクライアントで実行されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-850">When this event occurs, the registered ECMAScript code is executed on the client.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7c669-851">この例には、セキュリティ上の脅威となる可能性のある非表示フィールドがあります。</span><span class="sxs-lookup"><span data-stu-id="7c669-851">This example has a hidden field, which is a potential security threat.</span></span> <span data-ttu-id="7c669-852">既定では、テキストボックスの値と同じように、非表示フィールドの値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-852">By default, you should validate the value of a hidden field as you would the value of a text box.</span></span> <span data-ttu-id="7c669-853">ASP.NET Web ページは、ユーザー入力にスクリプトまたは HTML 要素が含まれていないことを検証します。</span><span class="sxs-lookup"><span data-stu-id="7c669-853">ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7c669-854">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-854">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-csharp[Page_RegisterHiddenField#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterHiddenField/CS/page_registerhiddenfield.cs.aspx#2)]
 [!code-vb[Page_RegisterHiddenField#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterHiddenField/VB/page_registerhiddenfield.vb.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterHiddenField(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresControlState">
      <MemberSignature Language="C#" Value="public void RegisterRequiresControlState (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRequiresControlState(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterRequiresControlState (control As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterRequiresControlState(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.RegisterRequiresControlState : System.Web.UI.Control -&gt; unit" Usage="page.RegisterRequiresControlState control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="7c669-855">登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="7c669-855">The control to register.</span></span></param>
        <summary><span data-ttu-id="7c669-856">特定のコントロールを、コントロールの状態を維持する必要があるコントロールとして登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-856">Registers a control as one whose control state must be persisted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-857">コントロールの状態を使用するカスタムサーバーコントロールは、ポストバックイベント中に要求から要求への登録が行われないため、各要求で <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-857">Custom server controls that use control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method on each request because registration for control state is not carried over from request to request during a postback event.</span></span> <span data-ttu-id="7c669-858"><xref:System.Web.UI.Control.Init> イベントで登録を行うことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="7c669-858">It is recommended that registration occur in the <xref:System.Web.UI.Control.Init> event.</span></span>



## Examples
 <span data-ttu-id="7c669-859">次のコード例は、<xref:System.Web.UI.Page.RegisterRequiresControlState%2A> メソッドを呼び出すカスタムサーバーコントロールを示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-859">The following code example shows a custom server control calling the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method.</span></span>

 [!code-csharp[ControlState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlState/CS/controlstatecs.aspx#1)]
 [!code-vb[ControlState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlState/VB/controlstatevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7c669-860">登録するコントロールが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-860">The control to register is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-861"><see cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" /> メソッドを呼び出すことができるのは、<see cref="E:System.Web.UI.Control.PreRender" /> イベントの前か中だけです。</span><span class="sxs-lookup"><span data-stu-id="7c669-861">The <see cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" /> method can be called only before or during the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span></span></exception>
        <altmember cref="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresPostBack">
      <MemberSignature Language="C#" Value="public void RegisterRequiresPostBack (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRequiresPostBack(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterRequiresPostBack (control As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterRequiresPostBack(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.RegisterRequiresPostBack : System.Web.UI.Control -&gt; unit" Usage="page.RegisterRequiresPostBack control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="7c669-862">登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="7c669-862">The control to be registered.</span></span></param>
        <summary><span data-ttu-id="7c669-863">コントロールを、ページがサーバーにポストバックされたときにポストバック処理を必要とするコントロールとして登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-863">Registers a control as one that requires postback handling when the page is posted back to the server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-864">登録するコントロールは <xref:System.Web.UI.IPostBackDataHandler> インターフェイスを実装する必要があります。または、<xref:System.Web.HttpException> が発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-864">The control to be registered must implement the <xref:System.Web.UI.IPostBackDataHandler> interface or an <xref:System.Web.HttpException> is raised.</span></span> <span data-ttu-id="7c669-865">コントロールによって実装された場合、<xref:System.Web.UI.IPostBackDataHandler> インターフェイスは、ポストバックデータの処理と、データ変更後のポストバックイベントの発生を可能にします。</span><span class="sxs-lookup"><span data-stu-id="7c669-865">When implemented by a control, the <xref:System.Web.UI.IPostBackDataHandler> interface enables handling of post back data and raising of any post back data changed events.</span></span> <span data-ttu-id="7c669-866">サーバーコントロールイベントモデルの詳細については、「 [ASP.NET Web フォームサーバーコントロールイベントモデル](https://docs.microsoft.com/previous-versions/aspnet/y3bwdsh3(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-866">For more information on the server control event model, see [ASP.NET Web Forms Server Control Event Model](https://docs.microsoft.com/previous-versions/aspnet/y3bwdsh3(v=vs.100)).</span></span>

 <span data-ttu-id="7c669-867">ページのライフサイクルの `Page_PreRender` イベントの前後のページにコントロールを登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-867">Register controls with the page at or before the `Page_PreRender` event of the page life cycle.</span></span>



## Examples
 <span data-ttu-id="7c669-868">次のコード例では、テキストボックスに関連付けられているコードを実行する前に、<xref:System.Web.UI.Page.RegisterRequiresPostBack%2A> メソッドを使用して、テキストボックスコントロール `myTextBox`をポストバックする必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-868">The following code example uses the <xref:System.Web.UI.Page.RegisterRequiresPostBack%2A> method to require a text box control, `myTextBox`, to be posted back before any code associated with the text box can execute.</span></span> <span data-ttu-id="7c669-869"><xref:System.Web.UI.WebControls.TextBox> コントロールは、<xref:System.Web.UI.IPostBackDataHandler> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="7c669-869"><xref:System.Web.UI.WebControls.TextBox> controls implement the <xref:System.Web.UI.IPostBackDataHandler> interface.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7c669-870">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-870">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7c669-871">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-871">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7c669-872">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-872">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-csharp[Page_RegisterRequiresPostBack#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterRequiresPostBack/CS/page_registerrequirespostback.cs.aspx#1)]
 [!code-vb[Page_RegisterRequiresPostBack#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterRequiresPostBack/VB/page_registerrequirespostback.vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-873">登録するコントロールが <see cref="T:System.Web.UI.IPostBackDataHandler" /> インターフェイスを実装していません。</span><span class="sxs-lookup"><span data-stu-id="7c669-873">The control to register does not implement the <see cref="T:System.Web.UI.IPostBackDataHandler" /> interface.</span></span></exception>
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
        <altmember cref="T:System.Web.UI.IPostBackDataHandler" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100)"><span data-ttu-id="7c669-874">ASP.NET ページのライフサイクルの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-874">Introduction to the ASP.NET Page Life Cycle</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/y3bwdsh3(v=vs.100)"><span data-ttu-id="7c669-875">ASP.NET サーバーコントロールイベントモデル</span><span class="sxs-lookup"><span data-stu-id="7c669-875">ASP.NET Server Control Event Model</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresRaiseEvent">
      <MemberSignature Language="C#" Value="public virtual void RegisterRequiresRaiseEvent (System.Web.UI.IPostBackEventHandler control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRequiresRaiseEvent(class System.Web.UI.IPostBackEventHandler control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterRequiresRaiseEvent (control As IPostBackEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRequiresRaiseEvent(System::Web::UI::IPostBackEventHandler ^ control);" />
      <MemberSignature Language="F#" Value="abstract member RegisterRequiresRaiseEvent : System.Web.UI.IPostBackEventHandler -&gt; unit&#xA;override this.RegisterRequiresRaiseEvent : System.Web.UI.IPostBackEventHandler -&gt; unit" Usage="page.RegisterRequiresRaiseEvent control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.IPostBackEventHandler" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="7c669-876">登録するコントロール。</span><span class="sxs-lookup"><span data-stu-id="7c669-876">The control to register.</span></span></param>
        <summary><span data-ttu-id="7c669-877">ASP.NET サーバー コントロールが <see cref="T:System.Web.UI.Page" /> オブジェクトで処理されたときに、このコントロールをイベントの発生を要求するコントロールとして登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-877">Registers an ASP.NET server control as one requiring an event to be raised when the control is processed on the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-878">1ページ要求ごとに登録できるサーバーコントロールは1つだけです。</span><span class="sxs-lookup"><span data-stu-id="7c669-878">Only one server control can be registered per page request.</span></span> <span data-ttu-id="7c669-879">コントロールのコントロール ID がポストデータのフォームに含まれていない場合は、<xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A> を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-879">The <xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A> must be used when the control does not include its control ID in the form post data.</span></span> <span data-ttu-id="7c669-880">また、登録されているコントロールは、<xref:System.Web.UI.IPostBackEventHandler> インターフェイスを実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-880">Also, the control that is registered must implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>



## Examples
 <span data-ttu-id="7c669-881">次のコード例では、<xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A> メソッドを使用して、イベントの発生を要求するように <xref:System.Web.UI.WebControls.Button> Web サーバーコントロールを登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-881">The following code example uses the <xref:System.Web.UI.Page.RegisterRequiresRaiseEvent%2A> method to register a <xref:System.Web.UI.WebControls.Button> Web server control as requiring an event to be raised.</span></span> <span data-ttu-id="7c669-882">最初の <xref:System.Web.UI.WebControls.Button> コントロールを登録した後、コードで宣言された2番目の <xref:System.Web.UI.WebControls.Button> コントロールを使用して、最初のボタンのクリックイベントの結果をページに投稿できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-882">After you have registered the first <xref:System.Web.UI.WebControls.Button> control, you can cause the second <xref:System.Web.UI.WebControls.Button> control declared in the code to post the results of the first button's click event to the page.</span></span>

 [!code-csharp[Page_RaisePostBackEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RaisePostBackEvent/CS/page_raisepostbackevent.cs.aspx#1)]
 [!code-vb[Page_RaisePostBackEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RaisePostBackEvent/VB/page_raisepostbackevent.vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.IsPostBack" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRequiresViewStateEncryption">
      <MemberSignature Language="C#" Value="public void RegisterRequiresViewStateEncryption ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRequiresViewStateEncryption() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterRequiresViewStateEncryption ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterRequiresViewStateEncryption();" />
      <MemberSignature Language="F#" Value="member this.RegisterRequiresViewStateEncryption : unit -&gt; unit" Usage="page.RegisterRequiresViewStateEncryption " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-883">コントロールを、ビューステートの暗号化が必要なコントロールとしてページに登録します。</span><span class="sxs-lookup"><span data-stu-id="7c669-883">Registers a control with the page as one requiring view-state encryption.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-884">機密性の高い情報を扱うカスタムコントロールを開発している場合は、<xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A> メソッドを呼び出してコントロールをページに登録し、コントロールのビューステートが暗号化されていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="7c669-884">If you are developing a custom control that deals with potentially sensitive information, call the <xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A> method to register the control with the page and ensure view state for the control is encrypted.</span></span>

 <span data-ttu-id="7c669-885"><xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> が <xref:System.Web.UI.ViewStateEncryptionMode.Auto> または <xref:System.Web.UI.ViewStateEncryptionMode.Always>に設定されている場合、ページ全体の状態が暗号化されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-885">The entire page state will be encrypted if the <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> is set to <xref:System.Web.UI.ViewStateEncryptionMode.Auto> or <xref:System.Web.UI.ViewStateEncryptionMode.Always>.</span></span>



## Examples
 <span data-ttu-id="7c669-886">次のコード例では、<xref:System.Web.UI.Page> オブジェクトのビューステートの暗号化モードを設定し、<xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A>によるビューステートの暗号化を要求します。</span><span class="sxs-lookup"><span data-stu-id="7c669-886">The following code example demonstrates setting the view-state encryption mode for a <xref:System.Web.UI.Page> object and requesting encryption of the view state through <xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A>.</span></span> <span data-ttu-id="7c669-887">この例では、顧客情報がデータベースから取得されると、ビューステートが暗号化されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-887">In this example, view state will be encrypted when customer information is retrieved from a database.</span></span>

 [!code-aspx-csharp[System.Web.UI.ViewStateEncryptionMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateEncryptionMode/CS/encryptViewState.cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ViewStateEncryptionMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateEncryptionMode/VB/encryptViewState.vb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-888"><see cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" /> メソッドは、ページ ライフ サイクルの <see langword="PreRender" />フェーズの前またはこのフェーズで呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-888">The <see cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" /> method must be called before or during the page <see langword="PreRender" /> phase in the page life cycle.</span></span></exception>
        <altmember cref="P:System.Web.UI.Page.ViewStateEncryptionMode" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public virtual void RegisterStartupScript (string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStartupScript(string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterStartupScript(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterStartupScript (key As String, script As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterStartupScript(System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="abstract member RegisterStartupScript : string * string -&gt; unit&#xA;override this.RegisterStartupScript : string * string -&gt; unit" Usage="page.RegisterStartupScript (key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is ClientScript.RegisterStartupScript(Type type, string key, string script). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="7c669-889">スクリプト ブロックを識別する一意のキー。</span><span class="sxs-lookup"><span data-stu-id="7c669-889">Unique key that identifies a script block.</span></span></param>
        <param name="script"><span data-ttu-id="7c669-890">クライアントに送られるスクリプトの内容。</span><span class="sxs-lookup"><span data-stu-id="7c669-890">Content of script that will be sent to the client.</span></span></param>
        <summary><span data-ttu-id="7c669-891">ページ応答で、クライアント側のスクリプト ブロックを出力します。</span><span class="sxs-lookup"><span data-stu-id="7c669-891">Emits a client-side script block in the page response.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-892"><xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> メソッドと同様に、<xref:System.Web.UI.Page.RegisterStartupScript%2A> メソッドは、<xref:System.Web.UI.Page> オブジェクトの `<form runat= server>` 要素の終了タグの直前にスクリプトを出力します。</span><span class="sxs-lookup"><span data-stu-id="7c669-892">Similar to the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method emits the script just before the closing tag of the <xref:System.Web.UI.Page> object's `<form runat= server>` element.</span></span> <span data-ttu-id="7c669-893">`script` パラメーターに指定されているスクリプトブロック文字列の前後に `<script>` 要素の開始と終了を含めるようにしてください。</span><span class="sxs-lookup"><span data-stu-id="7c669-893">Be sure to include opening and closing `<script>` elements around the script block string specified in the `script` parameter.</span></span>

 <span data-ttu-id="7c669-894">このメソッドは、キーを使用してスクリプトブロックを識別するため、別のサーバーコントロールインスタンスによって要求されるたびに、スクリプトブロックを出力ストリームに出力する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-894">Because this method uses a key to identify the script block, the script block does not have to be emitted to the output stream each time it is requested by a different server control instance</span></span>

 <span data-ttu-id="7c669-895">同じ `key` パラメーター値を持つすべてのスクリプトブロックは、重複していると見なされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-895">Any script blocks with the same `key` parameter values are considered duplicates.</span></span>

> [!NOTE]
>  <span data-ttu-id="7c669-896">要求側のブラウザーでスクリプトがサポートされていない場合は、表示されないように、スクリプトの周囲に HTML コメントタグを含めるようにしてください。</span><span class="sxs-lookup"><span data-stu-id="7c669-896">Remember to include HTML comment tags around your script so that it will not be rendered if the requesting browser does not support scripts.</span></span>

 <span data-ttu-id="7c669-897"><xref:System.Web.UI.Page.RegisterStartupScript%2A> メソッドの使用は非推奨とされました。</span><span class="sxs-lookup"><span data-stu-id="7c669-897">The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method has been deprecated.</span></span> <span data-ttu-id="7c669-898">代わりに <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> クラスの <xref:System.Web.UI.ClientScriptManager> メソッドを使用してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-898">Use the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method in the <xref:System.Web.UI.ClientScriptManager> class instead.</span></span>



## Examples
 <span data-ttu-id="7c669-899">次のコード例は、<xref:System.Web.UI.Page.RegisterStartupScript%2A> メソッドを <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> メソッドと組み合わせて使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-899">The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="7c669-900">コード宣言ブロックで記述された ECMAScript が、<xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> メソッドによって決定されるようにまだ登録されていない場合は、<xref:System.Web.UI.Page.RegisterStartupScript%2A> の呼び出しが行われます。</span><span class="sxs-lookup"><span data-stu-id="7c669-900">If the ECMAScript written in the code declaration block has not already been registered, as determined by the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.</span></span>

 [!code-aspx-csharp[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.RegisterClientScriptBlock/VB/defaultvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterViewStateHandler">
      <MemberSignature Language="C#" Value="public void RegisterViewStateHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterViewStateHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RegisterViewStateHandler" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterViewStateHandler ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterViewStateHandler();" />
      <MemberSignature Language="F#" Value="member this.RegisterViewStateHandler : unit -&gt; unit" Usage="page.RegisterViewStateHandler " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-901">呼び出されると、ページのビューステートが解析されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-901">Causes page view state to be persisted, if called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-902"><xref:System.Web.UI.Page.RegisterViewStateHandler%2A> メソッドは、<xref:System.Web.UI.HtmlControls.HtmlForm> サーバーコントロールを介して自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-902">The <xref:System.Web.UI.Page.RegisterViewStateHandler%2A> method is automatically called through the <xref:System.Web.UI.HtmlControls.HtmlForm> server control.</span></span> <span data-ttu-id="7c669-903">このメソッドが呼び出されていない場合、ページビューステートは永続化されません。</span><span class="sxs-lookup"><span data-stu-id="7c669-903">If this method is not invoked, the page view state will not be persisted.</span></span>

> [!NOTE]
>  <span data-ttu-id="7c669-904">通常、このメソッドを呼び出すのは、ページの <xref:System.Web.UI.HtmlControls.HtmlForm> サーバーコントロールだけです。</span><span class="sxs-lookup"><span data-stu-id="7c669-904">Typically, only the <xref:System.Web.UI.HtmlControls.HtmlForm> server control for the page calls this method.</span></span>



## Examples
 [!code-csharp[Page_RegisterViewStateHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_RegisterViewStateHandler/CS/page_registerviewstatehandler.cs#1)]
 [!code-vb[Page_RegisterViewStateHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_RegisterViewStateHandler/VB/page_registerviewstatehandler.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresViewStateEncryption" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="page.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="7c669-905">ページの内容を受け取る <see cref="T:System.Web.UI.HtmlTextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-905">The <see cref="T:System.Web.UI.HtmlTextWriter" /> that receives the page content.</span></span></param>
        <summary><span data-ttu-id="7c669-906"><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトを初期化して、表示する <see cref="T:System.Web.UI.Page" /> の子コントロールを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7c669-906">Initializes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and calls on the child controls of the <see cref="T:System.Web.UI.Page" /> to render.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-907"><xref:System.Web.UI.Page.Render%2A> メソッドは、クライアントブラウザーに送信されるテキストとマークアップの作成を担当します。</span><span class="sxs-lookup"><span data-stu-id="7c669-907">The <xref:System.Web.UI.Page.Render%2A> method is responsible for creating the text and markup that is sent to the client browser.</span></span> <span data-ttu-id="7c669-908">既定の <xref:System.Web.UI.Page.Render%2A> メソッドは、<xref:System.Web.UI.Control.RenderChildren%2A> を呼び出して、ページに格納されているコントロールのテキストとマークアップを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="7c669-908">The default <xref:System.Web.UI.Page.Render%2A> method calls <xref:System.Web.UI.Control.RenderChildren%2A> to write the text and markup for the controls contained on the page.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Web.HttpRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpRequest ^ Request { System::Web::HttpRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.Web.HttpRequest" Usage="System.Web.UI.Page.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-909">要求されたページの <see cref="T:System.Web.HttpRequest" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-909">Gets the <see cref="T:System.Web.HttpRequest" /> object for the requested page.</span></span></summary>
        <value><span data-ttu-id="7c669-910">ページに関連付けられている現在の <see cref="T:System.Web.HttpRequest" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-910">The current <see cref="T:System.Web.HttpRequest" /> associated with the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-911"><xref:System.Web.HttpRequest> オブジェクトには、現在の HTTP 要求に関する情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c669-911">The <xref:System.Web.HttpRequest> object contains information about the current HTTP request.</span></span>



## Examples
 <span data-ttu-id="7c669-912">次の例は、<xref:System.Web.HttpRequest> オブジェクトから <xref:System.Web.HttpRequest.Headers%2A> コレクションを取得し、ASP.NET ページに書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-912">The following example demonstrates how to obtain the <xref:System.Web.HttpRequest.Headers%2A> collection from the <xref:System.Web.HttpRequest> object and write it to an ASP.NET page.</span></span>

 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-913"><see cref="T:System.Web.HttpRequest" /> オブジェクトが使用できない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-913">Occurs when the <see cref="T:System.Web.HttpRequest" /> object is not available.</span></span></exception>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequiresControlState">
      <MemberSignature Language="C#" Value="public bool RequiresControlState (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RequiresControlState(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function RequiresControlState (control As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RequiresControlState(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.RequiresControlState : System.Web.UI.Control -&gt; bool" Usage="page.RequiresControlState control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="7c669-914">コントロールの状態を要求するかどうかを確認するための <see cref="T:System.Web.UI.Control" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-914">The <see cref="T:System.Web.UI.Control" /> to check for a control state requirement.</span></span></param>
        <summary><span data-ttu-id="7c669-915">指定した <see cref="T:System.Web.UI.Control" /> オブジェクトが、コントロールの状態管理ができるように登録されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="7c669-915">Determines whether the specified <see cref="T:System.Web.UI.Control" /> object is registered to participate in control state management.</span></span></summary>
        <returns><span data-ttu-id="7c669-916">指定した <see cref="T:System.Web.UI.Control" /> がコントロールの状態を要求する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-916"><see langword="true" /> if the specified <see cref="T:System.Web.UI.Control" /> requires control state; otherwise, <see langword="false" /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-917">コントロールの状態は、Web サーバーコントロールが機能する必要がある重大なビューステートデータで構成されるオブジェクトです。通常のビューステートとは別のオブジェクトに含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c669-917">Control state is an object composed of critical view-state data that Web server controls need to function; it is contained in a separate object from normal view state.</span></span>

 <span data-ttu-id="7c669-918">コントロールの状態を使用するカスタムコントロールは、コントロールの状態を保存する前に、<xref:System.Web.UI.Page.RegisterRequiresControlState%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-918">Custom controls using control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method before saving control state.</span></span> <span data-ttu-id="7c669-919"><xref:System.Web.UI.Page.RequiresControlState%2A> メソッドを使用して、コントロールの状態を要求するページに登録されているコントロールを確認します。</span><span class="sxs-lookup"><span data-stu-id="7c669-919">Use the <xref:System.Web.UI.Page.RequiresControlState%2A> method to check for controls that are registered with the page as requiring control state.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" />
        <altmember cref="P:System.Web.UI.PageStatePersister.ControlState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Web.HttpResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpResponse ^ Response { System::Web::HttpResponse ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Response : System.Web.HttpResponse" Usage="System.Web.UI.Page.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-920"><see cref="T:System.Web.UI.Page" /> オブジェクトに関連付けられている <see cref="T:System.Web.HttpResponse" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-920">Gets the <see cref="T:System.Web.HttpResponse" /> object associated with the <see cref="T:System.Web.UI.Page" /> object.</span></span> <span data-ttu-id="7c669-921">このオブジェクトでは、HTTP 応答データをクライアントに送信し、その応答に関する情報を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-921">This object allows you to send HTTP response data to a client and contains information about that response.</span></span></summary>
        <value><span data-ttu-id="7c669-922">ページに関連付けられている現在の <see cref="T:System.Web.HttpResponse" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-922">The current <see cref="T:System.Web.HttpResponse" /> associated with the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="7c669-923">次のコード例は、<xref:System.Web.HttpResponse> オブジェクトを使用してクッキーを作成し、ページの HTTP 出力に追加する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-923">The following code example demonstrates creating a cookie and adding it to the page's HTTP output by using the <xref:System.Web.HttpResponse> object.</span></span>

 [!code-csharp[Classic HttpResponse.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpResponse.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpResponse.Cookies Example/VB/source.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-924"><see cref="T:System.Web.HttpResponse" /> オブジェクトが使用できません。</span><span class="sxs-lookup"><span data-stu-id="7c669-924">The <see cref="T:System.Web.HttpResponse" /> object is not available.</span></span></exception>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="ResponseEncoding">
      <MemberSignature Language="C#" Value="protected string ResponseEncoding { set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResponseEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ResponseEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Property ResponseEncoding As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ResponseEncoding {  void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.ResponseEncoding : string" Usage="System.Web.UI.Page.ResponseEncoding" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public string ResponseEncoding { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseEncoding As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ResponseEncoding { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ResponseEncoding : string with get, set" Usage="System.Web.UI.Page.ResponseEncoding" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-925">現在の <see cref="T:System.Web.HttpResponse" /> オブジェクトのエンコーディング言語を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-925">Sets the encoding language for the current <see cref="T:System.Web.HttpResponse" /> object.</span></span></summary>
        <value><span data-ttu-id="7c669-926">現在の <see cref="T:System.Web.HttpResponse" /> のエンコーディング言語を格納する文字列。</span><span class="sxs-lookup"><span data-stu-id="7c669-926">A string that contains the encoding language for the current <see cref="T:System.Web.HttpResponse" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-927">ほとんどの場合、このプロパティはコードで設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-927">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="7c669-928">.Aspx ファイルで[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブを使用して、`ResponseEncoding` 属性を目的の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-928">Set the `ResponseEncoding` attribute to the value you want using the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-929">ページが要求されると、動的に生成されたクラスによってプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-929">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteData">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteData RouteData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteData RouteData" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.RouteData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RouteData As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteData ^ RouteData { System::Web::Routing::RouteData ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RouteData : System.Web.Routing.RouteData" Usage="System.Web.UI.Page.RouteData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-930">現在の <see cref="P:System.Web.Routing.RequestContext.RouteData" /> インスタンスの <see cref="T:System.Web.Routing.RequestContext" /> 値を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-930">Gets the <see cref="P:System.Web.Routing.RequestContext.RouteData" /> value of the current <see cref="T:System.Web.Routing.RequestContext" /> instance.</span></span></summary>
        <value><span data-ttu-id="7c669-931">現在の <see cref="P:System.Web.Routing.RequestContext.RouteData" /> インスタンスの <see cref="T:System.Web.Routing.RequestContext" /> 値。</span><span class="sxs-lookup"><span data-stu-id="7c669-931">The <see cref="P:System.Web.Routing.RequestContext.RouteData" /> value of the current <see cref="T:System.Web.Routing.RequestContext" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-932">ASP.NET routing を介して行われた要求に応答してページが実行されている場合、このプロパティは、ルートデータとして渡された URL パラメーター値へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="7c669-932">If a page is running in response to a request made through ASP.NET routing, this property provides access to the URL parameter values that were passed as route data.</span></span> <span data-ttu-id="7c669-933">ページがルート URL ではなく物理 URL に応答して実行される場合、このプロパティは `null`ます。</span><span class="sxs-lookup"><span data-stu-id="7c669-933">If the page runs in response to a physical URL instead of a route URL, this property is `null`.</span></span> <span data-ttu-id="7c669-934">次の例は、`year`という名前の URL パラメーターの値を抽出する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-934">The following example shows how to extract the value of a URL parameter that is named `year`.</span></span>

```vb
Dim year As Integer = Convert.ToInt32(Page.RouteData.Values("year"))
```

```csharp
int year = Convert.ToInt32(Page.RouteData.Values["year"])
```

 <span data-ttu-id="7c669-935">ルートがドメイン `contoso.com`の URL パターン `{locale}/{year}` を使用して定義されていて、要求された URL が `contoso.com/US/2010`場合、このコードを実行すると `year` に値 "2010" が格納されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-935">If the route is defined by using the URL pattern `{locale}/{year}` for the domain `contoso.com`, and if the requested URL is `contoso.com/US/2010`, `year` will contain the value "2010" when this code runs.</span></span>

 <span data-ttu-id="7c669-936">ASP.NET ルーティングの詳細については、「 [ASP.NET routing](https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-936">For more information about ASP.NET routing, see [ASP.NET Routing](https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Routing.RequestContext.RouteData" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)"><span data-ttu-id="7c669-937">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="7c669-937">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd535620(v=vs.140)"><span data-ttu-id="7c669-938">方法: ルーティングページの URL パラメーターにアクセスする</span><span class="sxs-lookup"><span data-stu-id="7c669-938">How to: Access URL Parameters in a Routed Page</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SavePageStateToPersistenceMedium">
      <MemberSignature Language="C#" Value="protected virtual void SavePageStateToPersistenceMedium (object viewState);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SavePageStateToPersistenceMedium(object viewState) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SavePageStateToPersistenceMedium (viewState As Object)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SavePageStateToPersistenceMedium(System::Object ^ viewState);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="abstract member SavePageStateToPersistenceMedium : obj -&gt; unit&#xA;override this.SavePageStateToPersistenceMedium : obj -&gt; unit" Usage="page.SavePageStateToPersistenceMedium viewState" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="protected internal virtual void SavePageStateToPersistenceMedium (object state);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SavePageStateToPersistenceMedium(object state) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SavePageStateToPersistenceMedium (state As Object)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SavePageStateToPersistenceMedium(System::Object ^ state);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member SavePageStateToPersistenceMedium : obj -&gt; unit&#xA;override this.SavePageStateToPersistenceMedium : obj -&gt; unit" Usage="page.SavePageStateToPersistenceMedium state" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewState" Type="System.Object" Index="0" FrameworkAlternate="netframework-1.1" />
        <Parameter Name="state" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="viewState"><span data-ttu-id="7c669-939">ビューステート情報を格納する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-939">An <see cref="T:System.Object" /> in which to store the view-state information.</span></span></param>
        <param name="state"><span data-ttu-id="7c669-940">ビューステート情報を格納する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-940">An <see cref="T:System.Object" /> in which to store the view-state information.</span></span></param>
        <summary><span data-ttu-id="7c669-941">ページのビューステート情報とコントロールの状態情報を保存します。</span><span class="sxs-lookup"><span data-stu-id="7c669-941">Saves any view-state and control-state information for the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-942"><xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> メソッドは、<xref:System.Web.UI.Page.PageStatePersister%2A> プロパティによって参照される <xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType> オブジェクトの <xref:System.Web.UI.PageStatePersister.Save%2A> メソッドを使用して、ページのビューステート情報とコントロール状態情報を格納します。</span><span class="sxs-lookup"><span data-stu-id="7c669-942">The <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A> method uses the <xref:System.Web.UI.PageStatePersister.Save%2A> method of the <xref:System.Web.UI.PageStatePersister?displayProperty=nameWithType> object referenced by the <xref:System.Web.UI.Page.PageStatePersister%2A> property to store view-state and control-state information for the page.</span></span>

 <span data-ttu-id="7c669-943">ASP.NET クラス <xref:System.Web.UI.PageStatePersister> の2つの子孫 <xref:System.Web.UI.HiddenFieldPageStatePersister>、ASP.NET ページに含まれている隠しフィールドに状態情報を保存するクラス、および要求に関連付けられた <xref:System.Web.UI.Page.Session%2A> オブジェクトに状態を保存する <xref:System.Web.UI.SessionPageStatePersister> クラスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c669-943">ASP.NET includes two descendents of the <xref:System.Web.UI.PageStatePersister> class, the <xref:System.Web.UI.HiddenFieldPageStatePersister> class that saves state information in a hidden field included in the ASP.NET page, and the <xref:System.Web.UI.SessionPageStatePersister> class that saves state in the <xref:System.Web.UI.Page.Session%2A> object associated with the request.</span></span> <span data-ttu-id="7c669-944"><xref:System.Web.UI.SessionPageStatePersister> クラスを使用する場合、非表示の VIEWSTATE フィールドは、ポストバックを決定するために使用されるため、引き続きレンダリングされることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-944">Note that when using the <xref:System.Web.UI.SessionPageStatePersister> class the hidden VIEWSTATE field is still rendered as this is used to determine post back.</span></span>

 <span data-ttu-id="7c669-945">任意の場所に状態を保存するには、選択した永続化メディアに状態を保存して読み込む、<xref:System.Web.UI.PageStatePersister> クラスの新しい子孫を作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-945">To save state in the location of your choice, you should create a new descendent of the <xref:System.Web.UI.PageStatePersister> class that saves and loads state to the persistence medium of your choice.</span></span> <span data-ttu-id="7c669-946">新しい <xref:System.Web.UI.PageStatePersister> オブジェクトを作成する例については、<xref:System.Web.UI.PageStatePersister> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-946">For an example of creating a new <xref:System.Web.UI.PageStatePersister> object, see the <xref:System.Web.UI.PageStatePersister> class.</span></span>

 <span data-ttu-id="7c669-947">.NET Framework バージョン1.0 または1.1 を使用している場合は、非表示フィールド以外の状態で <xref:System.Web.UI.Page> 状態を保存する場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="7c669-947">If you are using the .NET Framework version 1.0 or 1.1, override this method if you want to save the <xref:System.Web.UI.Page> state in anything other than a hidden field.</span></span> <span data-ttu-id="7c669-948">これを選択した場合は、<xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> メソッドもオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-948">If you choose to do so, you must also override the <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A> method.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.LoadPageStateFromPersistenceMedium" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="SaveStateComplete">
      <MemberSignature Language="C#" Value="public event EventHandler SaveStateComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SaveStateComplete" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Page.SaveStateComplete" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SaveStateComplete As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SaveStateComplete;" />
      <MemberSignature Language="F#" Value="member this.SaveStateComplete : EventHandler " Usage="member this.SaveStateComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-949">ページで、そのページおよびそのページに含まれるコントロールのすべてのビューステート情報とコントロールの状態情報が保存された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-949">Occurs after the page has completed saving all view state and control state information for the page and controls on the page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-950">Web ページ上のコントロールの状態情報は、<xref:System.Web.UI.Page.PreRenderComplete> イベントの後に保存されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-950">State information for controls on the Web page is saved after the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="7c669-951"><xref:System.Web.UI.Page.SaveStateComplete> イベントは、ページのビューステートとコントロールの状態が永続メディアに保存された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-951">The <xref:System.Web.UI.Page.SaveStateComplete> event is raised after the view state and control state of the page and controls on the page are saved to the persistence medium.</span></span>

 <span data-ttu-id="7c669-952">これは、ページが要求側のブラウザーにレンダリングされる前に発生した最後のイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c669-952">This is the last event raised before the page is rendered to the requesting browser.</span></span>

 <span data-ttu-id="7c669-953">イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-953">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)" />
        <altmember cref="E:System.Web.UI.Page.InitComplete" />
        <altmember cref="E:System.Web.UI.Page.LoadComplete" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178472(v=vs.100)"><span data-ttu-id="7c669-954">ASP.NET ページのライフサイクルの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-954">Introduction to the ASP.NET Page Life Cycle</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)"><span data-ttu-id="7c669-955">セッション状態の概要</span><span class="sxs-lookup"><span data-stu-id="7c669-955">Session State Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Web.HttpServerUtility Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtility Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As HttpServerUtility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpServerUtility ^ Server { System::Web::HttpServerUtility ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtility" Usage="System.Web.UI.Page.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-956"><see cref="T:System.Web.HttpServerUtility" /> クラスのインスタンスである <see langword="Server" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-956">Gets the <see langword="Server" /> object, which is an instance of the <see cref="T:System.Web.HttpServerUtility" /> class.</span></span></summary>
        <value><span data-ttu-id="7c669-957">ページに関連付けられている現在の <see langword="Server" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c669-957">The current <see langword="Server" /> object associated with the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-958">このプロパティを使用すると、頻繁に使用される <xref:System.Web.HttpServerUtility.HtmlEncode%2A> および <xref:System.Web.HttpServerUtility.MapPath%2A> メソッドにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-958">This property provides access to the frequently used <xref:System.Web.HttpServerUtility.HtmlEncode%2A> and <xref:System.Web.HttpServerUtility.MapPath%2A> methods, among others.</span></span>



## Examples
 <span data-ttu-id="7c669-959">次のコード例は、`Server` オブジェクトを使用してサーバーからエラー情報にアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-959">The following code example demonstrates how to access error information from the server by using the `Server` object.</span></span> <span data-ttu-id="7c669-960">具体的には、要求された URL を `Request` オブジェクトから取得し、(<xref:System.Web.HttpServerUtility.GetLastError%2A> メソッドを使用して) `Server` オブジェクトからの最新のエラーを取得し、それらの両方をクライアントが表示できる文字列に変換します。</span><span class="sxs-lookup"><span data-stu-id="7c669-960">In particular, the example gets the requested URL from the `Request` object, the most recent error from the `Server` object (using the <xref:System.Web.HttpServerUtility.GetLastError%2A> method) and converts them both to strings that can be displayed by the client.</span></span> <span data-ttu-id="7c669-961">`message` 変数がクライアントに書き込まれると、<xref:System.Web.HttpServerUtility.ClearError%2A> メソッドを使用してエラーが削除されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-961">Once the `message` variable is written to the client, the error is deleted using the <xref:System.Web.HttpServerUtility.ClearError%2A> method.</span></span>

 [!code-csharp[System.Web.UI.Page_Error method#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_Error method/CS/sourcecs.aspx#1)]
 [!code-vb[System.Web.UI.Page_Error method#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_Error method/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpServerUtility" />
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual System.Web.SessionState.HttpSessionState Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.SessionState.HttpSessionState Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Session" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Session As HttpSessionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::SessionState::HttpSessionState ^ Session { System::Web::SessionState::HttpSessionState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.SessionState.HttpSessionState" Usage="System.Web.UI.Page.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.SessionState.HttpSessionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-962">ASP.NET が提供している現在の <see langword="Session" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-962">Gets the current <see langword="Session" /> object provided by ASP.NET.</span></span></summary>
        <value><span data-ttu-id="7c669-963">現在のセッション状態データ。</span><span class="sxs-lookup"><span data-stu-id="7c669-963">The current session-state data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-964">このプロパティは、現在の要求のセッションに関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="7c669-964">This property provides information about the current request's session.</span></span> <span data-ttu-id="7c669-965">`Session` オブジェクトは、ASP.NET アプリケーションからページまたはドキュメントを要求するユーザーごとに保持されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-965">A `Session` object is maintained for each user that requests a page or document from an ASP.NET application.</span></span> <span data-ttu-id="7c669-966">`Session` オブジェクトに格納されている変数は、ユーザーがアプリケーションのページ間を移動したときに破棄されません。代わりに、これらの変数は、ユーザーがアプリケーションのページにアクセスしている間は保持されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-966">Variables stored in the `Session` object are not discarded when the user moves from page to page in the application; instead, these variables persist as long as the user is accessing pages in your application.</span></span> <span data-ttu-id="7c669-967">セッション状態の詳細については、「 [ASP.NET Session state の概要](https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-967">For more information about session state, see [ASP.NET Session State Overview](https://docs.microsoft.com/previous-versions/aspnet/ms178581(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="7c669-968">次のコード例では、Web フォームページのセッション状態に格納されているキーを取得し、その値を文字列に変換する `GetStyle` 関数を作成します。</span><span class="sxs-lookup"><span data-stu-id="7c669-968">The following code example creates a `GetStyle` function that retrieves a key stored in the session state of the Web Forms page and converts its value to a string.</span></span>

 [!code-csharp[Page.Session_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page.Session_Samples1/CS/sessioncs.aspx#1)]
 [!code-vb[Page.Session_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page.Session_Samples1/VB/sessionvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-969">セッション情報が <see langword="null" /> に設定されると発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-969">Occurs when the session information is set to <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetFocus">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c669-970">ブラウザーのフォーカスを、指定したコントロールに設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-970">Sets the browser focus to the specified control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (string clientID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(string clientID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.SetFocus(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus (clientID As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::String ^ clientID);" />
      <MemberSignature Language="F#" Value="member this.SetFocus : string -&gt; unit" Usage="page.SetFocus clientID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientID" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="clientID"><span data-ttu-id="7c669-971">フォーカスを設定するコントロールの ID。</span><span class="sxs-lookup"><span data-stu-id="7c669-971">The ID of the control to set focus to.</span></span></param>
        <summary><span data-ttu-id="7c669-972">ブラウザーのフォーカスを、指定した ID を持つコントロールに設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-972">Sets the browser focus to the control with the specified identifier.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-973"><xref:System.Web.UI.Page.SetFocus%2A> メソッドを使用して、指定した ID 文字列を持つコントロールを、ブラウザーによって表示される Web ページのアクティブなコントロールにします。</span><span class="sxs-lookup"><span data-stu-id="7c669-973">Use the <xref:System.Web.UI.Page.SetFocus%2A> method to make the control with the specified ID string the active control in the Web page displayed by the browser.</span></span> <span data-ttu-id="7c669-974"><xref:System.Web.UI.Control.PreRender> イベントでクライアントに表示するためにページを準備する前に、<xref:System.Web.UI.Page.SetFocus%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-974">The <xref:System.Web.UI.Page.SetFocus%2A> method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event.</span></span>

> [!NOTE]
>  <span data-ttu-id="7c669-975"><xref:System.Web.UI.Page.SetFocus%2A> メソッドは、ECMAScript バージョン1.3 以降をサポートするブラウザーでのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="7c669-975">The <xref:System.Web.UI.Page.SetFocus%2A> method will work only on browsers supporting ECMAScript version 1.3 or later.</span></span>



## Examples
 <span data-ttu-id="7c669-976">次のコード例では、Web ページの2番目のテキストボックスにフォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-976">The following code example sets the focus to the second text box on a Web page.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7c669-977">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-977">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7c669-978">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-978">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7c669-979">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-979">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[PageSetFocus#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageSetFocus/CS/setfocusbyidcs.aspx#1)]
 [!code-aspx-vb[PageSetFocus#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageSetFocus/VB/setfocusbyidvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c669-980"><paramref name="clientID" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="7c669-980"><paramref name="clientID" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-981"><see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> は、コントロールが Web フォーム ページの一部ではない場合に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-981"><see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> is called when the control is not part of a Web Forms page.</span></span>

<span data-ttu-id="7c669-982">- または -</span><span class="sxs-lookup"><span data-stu-id="7c669-982">-or-</span></span>

 <span data-ttu-id="7c669-983"><see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> は、<see cref="E:System.Web.UI.Control.PreRender" /> イベントの後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-983"><see cref="M:System.Web.UI.Page.SetFocus(System.String)" /> is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFocus(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus (control As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.SetFocus : System.Web.UI.Control -&gt; unit" Usage="page.SetFocus control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="7c669-984">フォーカスを受け取るコントロール。</span><span class="sxs-lookup"><span data-stu-id="7c669-984">The control to receive focus.</span></span></param>
        <summary><span data-ttu-id="7c669-985">ブラウザーのフォーカスを、指定したコントロールに設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-985">Sets the browser focus to the specified control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-986"><xref:System.Web.UI.Page.SetFocus%2A> メソッドを使用して、ブラウザーによって表示される Web ページで、指定したコントロールをアクティブなコントロールにします。</span><span class="sxs-lookup"><span data-stu-id="7c669-986">Use the <xref:System.Web.UI.Page.SetFocus%2A> method to make the specified control the active control on the Web page displayed by the browser.</span></span> <span data-ttu-id="7c669-987"><xref:System.Web.UI.Control.PreRender> イベントでクライアントに表示するためにページを準備する前に、<xref:System.Web.UI.Page.SetFocus%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-987">The <xref:System.Web.UI.Page.SetFocus%2A> method must be called before the page is prepared for rendering to the client in the <xref:System.Web.UI.Control.PreRender> event.</span></span>

> [!NOTE]
>  <span data-ttu-id="7c669-988"><xref:System.Web.UI.Page.SetFocus%2A> メソッドは、ECMAScript バージョン1.3 以降をサポートするブラウザーでのみ動作します。</span><span class="sxs-lookup"><span data-stu-id="7c669-988">The <xref:System.Web.UI.Page.SetFocus%2A> method will work only on browsers supporting ECMAScript version 1.3 or later.</span></span>



## Examples
 <span data-ttu-id="7c669-989">次のコード例では、Web ページの2番目のテキストボックスにフォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-989">The following code example sets the focus to the second text box on a Web page.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7c669-990">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-990">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7c669-991">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-991">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7c669-992">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-992">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[PageSetFocus#2](~/samples/snippets/csharp/VS_Snippets_WebNet/PageSetFocus/CS/setfocusbycontrolcs.aspx#2)]
 [!code-aspx-vb[PageSetFocus#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageSetFocus/VB/setfocusbycontrolvb.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c669-993"><paramref name="control" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="7c669-993"><paramref name="control" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-994"><see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> は、コントロールが Web フォーム ページの一部ではない場合に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-994"><see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> is called when the control is not part of a Web Forms page.</span></span>

<span data-ttu-id="7c669-995">- または -</span><span class="sxs-lookup"><span data-stu-id="7c669-995">-or-</span></span>

 <span data-ttu-id="7c669-996"><see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> は、<see cref="E:System.Web.UI.Control.PreRender" /> イベントの後に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-996"><see cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" /> is called after the <see cref="E:System.Web.UI.Control.PreRender" /> event.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SkipFormActionValidation">
      <MemberSignature Language="C#" Value="public bool SkipFormActionValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipFormActionValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.SkipFormActionValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipFormActionValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipFormActionValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipFormActionValidation : bool with get, set" Usage="System.Web.UI.Page.SkipFormActionValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-997">クエリ文字列値が検証されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-997">Gets or sets a value that indicates whether the query string value is validated.</span></span></summary>
        <value><span data-ttu-id="7c669-998">クエリ文字列の検証をスキップする場合 (クエリ文字列を検証しません) は <see langword="true" />。それ以外の場合で、クエリ文字列の検証を通常どおりに行う場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-998"><see langword="true" /> if query string validation should be skipped (the query string should not be validated); otherwise, <see langword="false" /> if query string validation should take place as normal.</span></span> <span data-ttu-id="7c669-999">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-999">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmartNavigation">
      <MemberSignature Language="C#" Value="public bool SmartNavigation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SmartNavigation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.SmartNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Property SmartNavigation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SmartNavigation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SmartNavigation : bool with get, set" Usage="System.Web.UI.Page.SmartNavigation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is Page.SetFocus and Page.MaintainScrollPositionOnPostBack. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1000">スマート移動できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1000">Gets or sets a value indicating whether smart navigation is enabled.</span></span> <span data-ttu-id="7c669-1001">このプロパティの使用は非推奨とされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1001">This property is deprecated.</span></span></summary>
        <value><span data-ttu-id="7c669-1002">スマート移動が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-1002"><see langword="true" /> if smart navigation is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-1003">ほとんどの場合、このプロパティはコードで設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1003">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="7c669-1004">`SmartNavigation` 属性を、.aspx ファイルの[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブで `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1004">Set the `SmartNavigation` attribute to `true` in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-1005">ページが要求されると、動的に生成されたクラスによってこのプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1005">When the page is requested, the dynamically generated class sets this property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c669-1006">ASP.NET バージョン2.0 では、<xref:System.Web.UI.Page.SmartNavigation%2A> プロパティは非推奨とされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1006">In ASP.NET version 2.0, the <xref:System.Web.UI.Page.SmartNavigation%2A> property is deprecated.</span></span> <span data-ttu-id="7c669-1007">代わりに、<xref:System.Web.UI.Page.SetFocus%2A> メソッドと <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> プロパティを使用してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1007">Use the <xref:System.Web.UI.Page.SetFocus%2A> method and the <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> property instead.</span></span>

 <span data-ttu-id="7c669-1008">Microsoft Internet Explorer 5.5 browser またはそれ以降によってページが要求された場合、スマートナビゲーションは次のようにして、ページのユーザーエクスペリエンスを強化します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1008">When a page is requested by Microsoft Internet Explorer 5.5 browser, or later, smart navigation enhances the user's experience of the page by performing the following:</span></span>

-   <span data-ttu-id="7c669-1009">ナビゲーションによって発生する flash を除去します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1009">Eliminating the flash caused by navigation.</span></span>

-   <span data-ttu-id="7c669-1010">ページからページへ移動するときに、スクロール位置を保持します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1010">Persisting the scroll position when moving from page to page.</span></span>

-   <span data-ttu-id="7c669-1011">ナビゲーション間の要素フォーカスの保持。</span><span class="sxs-lookup"><span data-stu-id="7c669-1011">Persisting element focus between navigations.</span></span>

-   <span data-ttu-id="7c669-1012">ブラウザーの履歴に最後のページの状態のみを保持します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1012">Retaining only the last page state in the browser's history.</span></span>

 <span data-ttu-id="7c669-1013">スマートナビゲーションは、頻繁なポストバックを必要とするが、返されたときには大きく変化しないビジュアルコンテンツを使用する ASP.NET ページで最適に使用されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1013">Smart navigation is best used with ASP.NET pages that require frequent postbacks but with visual content that does not change dramatically on return.</span></span> <span data-ttu-id="7c669-1014">このプロパティを `true`に設定するかどうかを決定するときは、この点をよく検討してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1014">Consider this carefully when deciding whether to set this property to `true`.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Page.SetFocus" />
        <altmember cref="P:System.Web.UI.Page.MaintainScrollPositionOnPostBack" />
      </Docs>
    </Member>
    <Member MemberName="StyleSheetTheme">
      <MemberSignature Language="C#" Value="public virtual string StyleSheetTheme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StyleSheetTheme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.StyleSheetTheme" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StyleSheetTheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StyleSheetTheme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StyleSheetTheme : string with get, set" Usage="System.Web.UI.Page.StyleSheetTheme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1015">ページ ライフ サイクルの初期段階でページに適用されるテーマの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1015">Gets or sets the name of the theme that is applied to the page early in the page life cycle.</span></span></summary>
        <value><span data-ttu-id="7c669-1016">ページ ライフ サイクルの初期段階でページに適用されるテーマの名前。</span><span class="sxs-lookup"><span data-stu-id="7c669-1016">The name of the theme that is applied to the page early in the page life cycle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1017">このプロパティは、カスケードスタイルシート (CSS) を直接参照しません。</span><span class="sxs-lookup"><span data-stu-id="7c669-1017">This property does not refer directly to a cascading style sheet (CSS).</span></span> <span data-ttu-id="7c669-1018">プロパティは、ASP.NET テーマの名前を格納します。このテーマには、CSS ファイルを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1018">The property contains the name of an ASP.NET theme, which can  include CSS files within it.</span></span>

 <span data-ttu-id="7c669-1019"><xref:System.Web.UI.Page.StyleSheetTheme%2A> プロパティは、ページのライフサイクルの早い段階でページに適用されるテーマの名前を指定します。一方、<xref:System.Web.UI.Page.Theme%2A> プロパティは、ページのライフサイクルの後半でページに適用されるテーマの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1019">The <xref:System.Web.UI.Page.StyleSheetTheme%2A> property specifies the name of a theme that is applied to a page early in the page life cycle, whereas the <xref:System.Web.UI.Page.Theme%2A> property specifies the name of a theme that is applied to a page later in the page life cycle.</span></span> <span data-ttu-id="7c669-1020">これは、ページの設定がスタイルシートテーマの設定よりも優先されることを意味します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1020">This means that settings on the page take precedence over settings in the style sheet theme.</span></span> <span data-ttu-id="7c669-1021">詳細については、「 [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1021">For more information, see [ASP.NET Themes and Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).</span></span>

 <span data-ttu-id="7c669-1022">このプロパティの値は、通常、page ディレクティブで設定するか、プロパティをオーバーライドすることによって設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1022">You typically set a value for this property in the page directive or by overriding the property.</span></span> <span data-ttu-id="7c669-1023">詳細については、次のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1023">For information, see the following topics:</span></span>

-   <span data-ttu-id="7c669-1024">[方法: ASP.NET テーマを適用する](https://docs.microsoft.com/previous-versions/aspnet/0yy5hxdk(v=vs.100))</span><span class="sxs-lookup"><span data-stu-id="7c669-1024">[How to: Apply ASP.NET Themes](https://docs.microsoft.com/previous-versions/aspnet/0yy5hxdk(v=vs.100))</span></span>

-   <span data-ttu-id="7c669-1025">[方法: プログラムによって ASP.NET テーマを適用する](https://docs.microsoft.com/previous-versions/aspnet/tx35bd89(v=vs.100))</span><span class="sxs-lookup"><span data-stu-id="7c669-1025">[How to: Apply ASP.NET Themes Programmatically](https://docs.microsoft.com/previous-versions/aspnet/tx35bd89(v=vs.100))</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-1026"><see cref="P:System.Web.UI.Page.StyleSheetTheme" /> メソッドを呼び出した後で <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> プロパティを設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="7c669-1026">An attempt was made to set the <see cref="P:System.Web.UI.Page.StyleSheetTheme" /> property after the <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> method was called.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7c669-1027"><see cref="P:System.Web.UI.Page.StyleSheetTheme" /> が無効なテーマ名に設定されています。</span><span class="sxs-lookup"><span data-stu-id="7c669-1027"><see cref="P:System.Web.UI.Page.StyleSheetTheme" /> is set to an invalid theme name.</span></span> <span data-ttu-id="7c669-1028">この例外がスローされるのは、<see cref="M:System.Web.UI.Page.FrameworkInitialize" /> メソッドが呼び出されるが、プロパティ Set アクセス操作子によって呼び出されるのではないときです。</span><span class="sxs-lookup"><span data-stu-id="7c669-1028">This exception is thrown when the <see cref="M:System.Web.UI.Page.FrameworkInitialize" /> method is called, not by the property setter.</span></span></exception>
        <altmember cref="P:System.Web.UI.Page.Theme" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)"><span data-ttu-id="7c669-1029">ASP.NET テーマとスキンの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-1029">ASP.NET Themes and Skins Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Theme">
      <MemberSignature Language="C#" Value="public virtual string Theme { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Theme" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Theme" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Theme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Theme { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Theme : string with get, set" Usage="System.Web.UI.Page.Theme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1030">ページ テーマの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1030">Gets or sets the name of the page theme.</span></span></summary>
        <value><span data-ttu-id="7c669-1031">ページ テーマの名前。</span><span class="sxs-lookup"><span data-stu-id="7c669-1031">The name of the page theme.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1032"><xref:System.Web.UI.Page.Theme%2A> プロパティは、ページに使用されるテーマの名前を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1032">The <xref:System.Web.UI.Page.Theme%2A> property sets the name of the theme used for the page.</span></span> <span data-ttu-id="7c669-1033">ページの設定がテーマの設定よりも優先されるようにする場合は、<xref:System.Web.UI.Page.StyleSheetTheme%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1033">If you want the settings on the page to take precedence over the settings in the theme, use the <xref:System.Web.UI.Page.StyleSheetTheme%2A> property.</span></span> <span data-ttu-id="7c669-1034">詳細については、「 [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1034">For more information, see [ASP.NET Themes and Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).</span></span>

 <span data-ttu-id="7c669-1035"><xref:System.Web.UI.Page.Theme%2A> プロパティは、<xref:System.Web.UI.Page.PreInit> イベントより前に設定する必要があります。<xref:System.Web.UI.Page.PreInit> イベントの後に <xref:System.Web.UI.Page.Theme%2A> プロパティを設定すると、<xref:System.InvalidOperationException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1035">The <xref:System.Web.UI.Page.Theme%2A> property must be set prior to the <xref:System.Web.UI.Page.PreInit> event; setting the <xref:System.Web.UI.Page.Theme%2A> property after the <xref:System.Web.UI.Page.PreInit> event will cause an <xref:System.InvalidOperationException> exception.</span></span>

 <span data-ttu-id="7c669-1036">指定されたテーマは、アプリケーションまたはグローバルテーマのいずれかとして存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-1036">The specified theme must exist as either an application or a global theme.</span></span> <span data-ttu-id="7c669-1037">テーマが存在しない場合は、<xref:System.Web.HttpException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1037">If the theme does not exist, an <xref:System.Web.HttpException> exception is thrown.</span></span>



## Examples
 <span data-ttu-id="7c669-1038">次のコード例では、<xref:System.Web.UI.Page.Theme%2A> プロパティを、クエリ文字列で渡される名前に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1038">The following code example sets the <xref:System.Web.UI.Page.Theme%2A> property to a name passed in the query string.</span></span>

 [!code-csharp[PageTheme#1](~/samples/snippets/csharp/VS_Snippets_WebNet/PageTheme/CS/pagethemecs.aspx#1)]
 [!code-vb[PageTheme#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/PageTheme/VB/pagethemevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-1039"><see cref="P:System.Web.UI.Page.Theme" /> イベントが発生した後、<see cref="E:System.Web.UI.Page.PreInit" /> を設定しようとしました。</span><span class="sxs-lookup"><span data-stu-id="7c669-1039">An attempt was made to set <see cref="P:System.Web.UI.Page.Theme" /> after the <see cref="E:System.Web.UI.Page.PreInit" /> event has occurred.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7c669-1040"><see cref="P:System.Web.UI.Page.Theme" /> が無効なテーマ名に設定されています。</span><span class="sxs-lookup"><span data-stu-id="7c669-1040"><see cref="P:System.Web.UI.Page.Theme" /> is set to an invalid theme name.</span></span></exception>
        <altmember cref="P:System.Web.UI.Page.StyleSheetTheme" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/tx35bd89(v=vs.100)"><span data-ttu-id="7c669-1041">プログラムによる ASP.NET テーマの適用</span><span class="sxs-lookup"><span data-stu-id="7c669-1041">Applying ASP.NET Themes Programmatically</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.Page.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1042">ページのタイトルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1042">Gets or sets the title for the page.</span></span></summary>
        <value><span data-ttu-id="7c669-1043">ページのタイトル。</span><span class="sxs-lookup"><span data-stu-id="7c669-1043">The title of the page.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1044">要求側のブラウザーに送信される HTML ヘッダーのページタイトルを設定するには、<xref:System.Web.UI.Page.Title%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1044">Use the <xref:System.Web.UI.Page.Title%2A> property to set the page title in the HTML header sent to the requesting browser.</span></span>

> [!NOTE]
>  <span data-ttu-id="7c669-1045">このページには、属性 `runat="server"`を持つ `head` 要素が含まれている必要があります。そうしないと、タイトルは表示されません。</span><span class="sxs-lookup"><span data-stu-id="7c669-1045">The page must contain a `head` element that has the attribute `runat="server"`, otherwise the title will not render.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-1046"><see cref="P:System.Web.UI.Page.Title" /> プロパティには、ページ上のヘッダー コントロールが必要です。</span><span class="sxs-lookup"><span data-stu-id="7c669-1046">The <see cref="P:System.Web.UI.Page.Title" /> property requires a header control on the page.</span></span></exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlTitle" />
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="public System.Web.TraceContext Trace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.TraceContext Trace" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Trace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Trace As TraceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceContext ^ Trace { System::Web::TraceContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Trace : System.Web.TraceContext" Usage="System.Web.UI.Page.Trace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.TraceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1047">現在の Web 要求に対する <see cref="T:System.Web.TraceContext" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1047">Gets the <see cref="T:System.Web.TraceContext" /> object for the current Web request.</span></span></summary>
        <value><span data-ttu-id="7c669-1048">現在の Web 要求に対する <see cref="T:System.Web.TraceContext" /> オブジェクトのデータ。</span><span class="sxs-lookup"><span data-stu-id="7c669-1048">Data from the <see cref="T:System.Web.TraceContext" /> object for the current Web request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-1049">トレースは、Web 要求に関する実行の詳細を追跡して表示します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1049">Tracing tracks and presents the execution details about a Web request.</span></span> <span data-ttu-id="7c669-1050">レンダリングされたページにトレースデータを表示するには、ページレベルまたはアプリケーションレベルでトレースを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-1050">For trace data to be visible in a rendered page, you must enable tracing at the page or application level.</span></span>  
  
 <span data-ttu-id="7c669-1051">既定では、ページのトレースは無効になっています。</span><span class="sxs-lookup"><span data-stu-id="7c669-1051">Tracing on a page is disabled by default.</span></span> <span data-ttu-id="7c669-1052">ページのトレースを有効にするには、 [@ page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブ `<% @ Page trace="true" %>`を使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1052">To enable tracing for a page, use the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive `<% @ Page trace="true" %>`.</span></span> <span data-ttu-id="7c669-1053">アプリケーション全体のトレースを有効にするには、アプリケーションのルートディレクトリに存在するアプリケーションの構成ファイル (web.config) で、トレースを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-1053">To enable tracing for an entire application, you must enable it in the application's configuration file, Web.config, which resides in the root directory of the application.</span></span> <span data-ttu-id="7c669-1054">詳細については、「 [ASP.NET Tracing の概要](https://docs.microsoft.com/previous-versions/aspnet/bb386420(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1054">For more information, see [ASP.NET Tracing Overview](https://docs.microsoft.com/previous-versions/aspnet/bb386420(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c669-1055">次のコード例は、<xref:System.Web.UI.Page.Trace%2A> プロパティを使用して <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=nameWithType> プロパティと <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> メソッドにアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7c669-1055">The following code example demonstrates accessing the <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=nameWithType> property and the <xref:System.Web.TraceContext.Write%2A?displayProperty=nameWithType> method through the <xref:System.Web.UI.Page.Trace%2A> property.</span></span> <span data-ttu-id="7c669-1056">このコードは、<xref:System.Web.UI.Page> オブジェクトに対してトレースが有効になっている場合にのみ、<xref:System.Diagnostics.Trace.Write%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1056">This code calls the <xref:System.Diagnostics.Trace.Write%2A> method only when tracing is enabled for the <xref:System.Web.UI.Page> object.</span></span> <span data-ttu-id="7c669-1057">有効になっていない場合、このコードは実行されないため、アプリケーションのオーバーヘッドを減らすことができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1057">If it is not enabled, this code will not run, which can help reduce overhead for your application.</span></span>  
  
 [!code-csharp[System.Web.UI.Page.Trace#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Trace/CS/trace1cs.aspx#2)]
 [!code-vb[System.Web.UI.Page.Trace#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Trace/VB/trace1vb.aspx#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.TraceContext" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386420(v=vs.100)"><span data-ttu-id="7c669-1058">ASP.NET のトレースの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-1058">ASP.NET Tracing Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TraceEnabled">
      <MemberSignature Language="C#" Value="protected bool TraceEnabled { set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TraceEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.TraceEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Property TraceEnabled As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool TraceEnabled {  void set(bool value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.TraceEnabled : bool" Usage="System.Web.UI.Page.TraceEnabled" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public bool TraceEnabled { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceEnabled As Boolean" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TraceEnabled { bool get(); void set(bool value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.TraceEnabled : bool with get, set" Usage="System.Web.UI.Page.TraceEnabled" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1059"><see cref="T:System.Web.UI.Page" /> オブジェクトのトレースが有効であるかどうかを示す値を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1059">Sets a value indicating whether tracing is enabled for the <see cref="T:System.Web.UI.Page" /> object.</span></span></summary>
        <value><span data-ttu-id="7c669-1060">ページのトレースが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-1060"><see langword="true" /> if tracing is enabled for the page; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7c669-1061">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-1061">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-1062">ほとんどの場合、このプロパティはコードで設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1062">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="7c669-1063">`Trace` 属性を、.aspx ファイルの[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブで `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1063">Set the `Trace` attribute to `true` in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-1064">ページが要求されると、動的に生成されたクラスによってプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1064">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Trace" />
        <altmember cref="P:System.Web.UI.Page.TraceModeValue" />
        <altmember cref="T:System.Web.TraceContext" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386420(v=vs.100)"><span data-ttu-id="7c669-1065">ASP.NET のトレースの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-1065">ASP.NET Tracing Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TraceModeValue">
      <MemberSignature Language="C#" Value="protected System.Web.TraceMode TraceModeValue { set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.TraceMode TraceModeValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.TraceModeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Property TraceModeValue As TraceMode" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::TraceMode TraceModeValue {  void set(System::Web::TraceMode value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.TraceModeValue : System.Web.TraceMode" Usage="System.Web.UI.Page.TraceModeValue" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public System.Web.TraceMode TraceModeValue { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property TraceModeValue As TraceMode" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::TraceMode TraceModeValue { System::Web::TraceMode get(); void set(System::Web::TraceMode value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.TraceModeValue : System.Web.TraceMode with get, set" Usage="System.Web.UI.Page.TraceModeValue" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.TraceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1066">トレース ステートメントがページ上に表示されるモードを設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1066">Sets the mode in which trace statements are displayed on the page.</span></span></summary>
        <value><span data-ttu-id="7c669-1067"><see cref="T:System.Web.TraceMode" /> 列挙体メンバーの 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7c669-1067">One of the <see cref="T:System.Web.TraceMode" /> enumeration members.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-1068">ほとんどの場合、このプロパティはコードで設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1068">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="7c669-1069">.Aspx ファイルの[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブで `TraceMode` 属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1069">Set the `TraceMode` attribute in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-1070">ページが要求されると、動的に生成されたクラスによってプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1070">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.Trace" />
        <altmember cref="P:System.Web.UI.Page.TraceEnabled" />
        <altmember cref="T:System.Web.TraceContext" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb386420(v=vs.100)"><span data-ttu-id="7c669-1071">ASP.NET のトレースの概要</span><span class="sxs-lookup"><span data-stu-id="7c669-1071">ASP.NET Tracing Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransactionMode">
      <MemberSignature Language="C#" Value="protected int TransactionMode { set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TransactionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.TransactionMode" />
      <MemberSignature Language="VB.NET" Value="Protected Property TransactionMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int TransactionMode {  void set(int value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.TransactionMode : int" Usage="System.Web.UI.Page.TransactionMode" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="protected int TransactionMode { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int TransactionMode { int get(); void set(int value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.TransactionMode : int with get, set" Usage="System.Web.UI.Page.TransactionMode" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1072">ページのトランザクション サポートのレベルを設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1072">Sets the level of transaction support for the page.</span></span></summary>
        <value><span data-ttu-id="7c669-1073"><see cref="T:System.EnterpriseServices.TransactionOption" /> 列挙体メンバーの 1 つを表す整数。</span><span class="sxs-lookup"><span data-stu-id="7c669-1073">An integer that represents one of the <see cref="T:System.EnterpriseServices.TransactionOption" /> enumeration members.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-1074">ほとんどの場合、このプロパティはコードで設定しないでください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1074">In most circumstances, do not set this property in code.</span></span> <span data-ttu-id="7c669-1075">.Aspx ファイルの[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブで `Transaction` 属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1075">Set the `Transaction` attribute in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-1076">ページが要求されると、動的に生成されたクラスによってプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1076">When the page is requested, the dynamically generated class sets the property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryUpdateModel&lt;TModel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c669-1077">値プロバイダー内の値を使用して、指定されたモデル インスタンスを更新します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1077">Updates the specified model instance using values from a value provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1078">Web フォームでのモデルバインドの使用に関するチュートリアルシリーズについては、「[モデルバインドと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1078">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryUpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool TryUpdateModel&lt;TModel&gt; (TModel model) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryUpdateModel&lt;class TModel&gt;(!!TModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.TryUpdateModel``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryUpdateModel(Of TModel As Class) (model As TModel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual bool TryUpdateModel(TModel model);" />
      <MemberSignature Language="F#" Value="abstract member TryUpdateModel : 'Model -&gt; bool (requires 'Model : null)&#xA;override this.TryUpdateModel : 'Model -&gt; bool (requires 'Model : null)" Usage="page.TryUpdateModel model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TModel"><span data-ttu-id="7c669-1079">モデルの型。</span><span class="sxs-lookup"><span data-stu-id="7c669-1079">The type of the model.</span></span></typeparam>
        <param name="model"><span data-ttu-id="7c669-1080">モデル。</span><span class="sxs-lookup"><span data-stu-id="7c669-1080">The model.</span></span></param>
        <summary><span data-ttu-id="7c669-1081">データ連結コントロール内の値を使用して、指定されたモデル インスタンスを更新します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1081">Updates the specified model instance using values from the data-bound control.</span></span></summary>
        <returns><span data-ttu-id="7c669-1082">モデル バインドが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-1082"><see langword="true" /> if model binding is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1083">このメソッドは、データバインドコントロールの `UpdateMethod` または `InsertMethod` プロパティによって指定されたメソッドからのみ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-1083">This method should only be called from a method that is specified by a data-bound control's `UpdateMethod` or `InsertMethod` property.</span></span>

 <span data-ttu-id="7c669-1084">Web フォームでのモデルバインドの使用に関するチュートリアルシリーズについては、「[モデルバインドと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1084">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool TryUpdateModel&lt;TModel&gt; (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryUpdateModel&lt;class TModel&gt;(!!TModel model, class System.Web.ModelBinding.IValueProvider valueProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryUpdateModel(Of TModel As Class) (model As TModel, valueProvider As IValueProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual bool TryUpdateModel(TModel model, System::Web::ModelBinding::IValueProvider ^ valueProvider);" />
      <MemberSignature Language="F#" Value="abstract member TryUpdateModel : 'Model * System.Web.ModelBinding.IValueProvider -&gt; bool (requires 'Model : null)&#xA;override this.TryUpdateModel : 'Model * System.Web.ModelBinding.IValueProvider -&gt; bool (requires 'Model : null)" Usage="page.TryUpdateModel (model, valueProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="valueProvider" Type="System.Web.ModelBinding.IValueProvider" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TModel"><span data-ttu-id="7c669-1085">モデルの型。</span><span class="sxs-lookup"><span data-stu-id="7c669-1085">The type of the model.</span></span></typeparam>
        <param name="model"><span data-ttu-id="7c669-1086">モデル。</span><span class="sxs-lookup"><span data-stu-id="7c669-1086">The model.</span></span></param>
        <param name="valueProvider"><span data-ttu-id="7c669-1087">値プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="7c669-1087">The value provider.</span></span></param>
        <summary><span data-ttu-id="7c669-1088">指定された値プロバイダー内の値を使用してモデル インスタンスを更新します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1088">Updates the model instance using values from the specified value provider.</span></span></summary>
        <returns><span data-ttu-id="7c669-1089">モデル バインドが正常に実行された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-1089"><see langword="true" /> if model binding is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1090">Web フォームでのモデルバインドの使用に関するチュートリアルシリーズについては、「[モデルバインドと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1090">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UICulture">
      <MemberSignature Language="C#" Value="protected string UICulture { set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance string UICulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.UICulture" />
      <MemberSignature Language="VB.NET" Value="Protected Property UICulture As String" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ UICulture {  void set(System::String ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.UICulture : string" Usage="System.Web.UI.Page.UICulture" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="public string UICulture { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Property UICulture As String" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UICulture { System::String ^ get(); void set(System::String ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.UICulture : string with get, set" Usage="System.Web.UI.Page.UICulture" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1091">ページに関連付けられている <see cref="T:System.Threading.Thread" /> オブジェクトのユーザー インターフェイス (UI: User Interface) ID を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1091">Sets the user interface (UI) ID for the <see cref="T:System.Threading.Thread" /> object associated with the page.</span></span></summary>
        <value><span data-ttu-id="7c669-1092">UI ID。</span><span class="sxs-lookup"><span data-stu-id="7c669-1092">The UI ID.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-1093">このプロパティは、<xref:System.Threading.Thread.CurrentThread%2A> プロパティのショートカットです。</span><span class="sxs-lookup"><span data-stu-id="7c669-1093">This property is a shortcut for the <xref:System.Threading.Thread.CurrentThread%2A> property.</span></span> <span data-ttu-id="7c669-1094">カルチャは、実行中のスレッドのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c669-1094">The culture is a property of the executing thread</span></span>  
  
 <span data-ttu-id="7c669-1095">.Aspx ファイルの[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブで `UICulture` 属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1095">Set the `UICulture` attribute in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive in the .aspx file.</span></span> <span data-ttu-id="7c669-1096">ページが要求されると、動的に生成されたクラスによって、このプロパティの値が設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1096">When the page is requested, the dynamically generated class sets the value of this property.</span></span> <span data-ttu-id="7c669-1097">また、web.config ファイルの[グローバリゼーション要素](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100))の <xref:System.Web.UI.Page.UICulture%2A> プロパティの値を明示的に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1097">In addition, you can also explicitly set the value of the <xref:System.Web.UI.Page.UICulture%2A> property in the [globalization element](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/hy4kkhe0(v=vs.100)) of the Web.config file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.LCID" />
        <altmember cref="P:System.Web.UI.Page.Culture" />
      </Docs>
    </Member>
    <Member MemberName="UniqueFilePathSuffix">
      <MemberSignature Language="C#" Value="protected internal virtual string UniqueFilePathSuffix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueFilePathSuffix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.UniqueFilePathSuffix" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property UniqueFilePathSuffix As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::String ^ UniqueFilePathSuffix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueFilePathSuffix : string" Usage="System.Web.UI.Page.UniqueFilePathSuffix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1098">ブラウザーをキャッシュするためのファイル パスに付加する一意のサフィックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1098">Gets a unique suffix to append to the file path for caching browsers.</span></span></summary>
        <value><span data-ttu-id="7c669-1099">ファイル パスに追加する一意のサフィックス。</span><span class="sxs-lookup"><span data-stu-id="7c669-1099">A unique suffix appended to the file path.</span></span> <span data-ttu-id="7c669-1100">既定値は "__ufps=" と一意の 6 桁の数字で構成されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1100">The default is "__ufps=" plus a unique 6-digit number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1101"><xref:System.Web.UI.Page.UniqueFilePathSuffix%2A> プロパティは、ブラウザーをキャッシュするために必要な場合に、ファイルパスの末尾に追加される文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1101">The <xref:System.Web.UI.Page.UniqueFilePathSuffix%2A> property returns a string that is appended to the end of a file path when required for caching browsers.</span></span> <span data-ttu-id="7c669-1102">文字列は、特定の要求に関連付けられたファイルパスを識別するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1102">The string is used to identify the file path associated with a specific request.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnobtrusiveValidationMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.UnobtrusiveValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UnobtrusiveValidationMode As UnobtrusiveValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UnobtrusiveValidationMode UnobtrusiveValidationMode { System::Web::UI::UnobtrusiveValidationMode get(); void set(System::Web::UI::UnobtrusiveValidationMode value); };" />
      <MemberSignature Language="F#" Value="member this.UnobtrusiveValidationMode : System.Web.UI.UnobtrusiveValidationMode with get, set" Usage="System.Web.UI.Page.UnobtrusiveValidationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UnobtrusiveValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1103">クライアント側の検証で控えめな JavaScript が使用されるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1103">Gets or sets a value that indicates whether unobtrusive JavaScript is used for client-side validation.</span></span></summary>
        <value><span data-ttu-id="7c669-1104">控え目な JavaScript が使用されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-1104"><see langword="true" /> if unobtrusive JavaScript is used; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterRequiresControlState">
      <MemberSignature Language="C#" Value="public void UnregisterRequiresControlState (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterRequiresControlState(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterRequiresControlState (control As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterRequiresControlState(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.UnregisterRequiresControlState : System.Web.UI.Control -&gt; unit" Usage="page.UnregisterRequiresControlState control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="7c669-1105">コントロールの状態の永続化を中断する <see cref="T:System.Web.UI.Control" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-1105">The <see cref="T:System.Web.UI.Control" /> for which to stop persistence of control state.</span></span></param>
        <summary><span data-ttu-id="7c669-1106">指定したコントロールの、コントロールの状態の永続化を中断します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1106">Stops persistence of control state for the specified control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1107">コントロールの状態を使用するカスタムサーバーコントロールは、状態が永続化される前に、要求ごとに <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-1107">Custom server controls that use control state must call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> on each request during before the state is persisted.</span></span> <span data-ttu-id="7c669-1108">コントロールの状態の登録は、ポストバック中に要求から要求に引き継がれません。</span><span class="sxs-lookup"><span data-stu-id="7c669-1108">Registration for control state is not carried over from request to request during a postback.</span></span> <span data-ttu-id="7c669-1109"><xref:System.Web.UI.Page.UnregisterRequiresControlState%2A> メソッドを使用して、ポストバック用に永続化する必要がなくなったコントロールに対して、コントロールの状態が永続化されないようにします。</span><span class="sxs-lookup"><span data-stu-id="7c669-1109">Use the <xref:System.Web.UI.Page.UnregisterRequiresControlState%2A> method to ensure that control state is not persisted for controls that no longer need to be persisted for postback.</span></span>

 <span data-ttu-id="7c669-1110">内部的には、<xref:System.Web.UI.Control.RemovedControl%2A> メソッドを使用してコントロールコレクションからコントロールを削除すると、<xref:System.Web.UI.Page.UnregisterRequiresControlState%2A> メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1110">Internally, the <xref:System.Web.UI.Page.UnregisterRequiresControlState%2A> method is invoked when using the <xref:System.Web.UI.Control.RemovedControl%2A> method to remove a control from a controls collection.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="7c669-1111"><see cref="T:System.Web.UI.Control" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-1111">The <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/1whwt1k7(v=vs.100)"><span data-ttu-id="7c669-1112">コントロールの状態とビューステートのサンプル</span><span class="sxs-lookup"><span data-stu-id="7c669-1112">Control State vs. View State Sample</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateModel&lt;TModel&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c669-1113">値プロバイダー内の値を使用して、指定されたモデル インスタンスを更新します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1113">Updates the specified model instance using values from a value provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1114">Web フォームでのモデルバインドの使用に関するチュートリアルシリーズについては、「[モデルバインドと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1114">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual void UpdateModel&lt;TModel&gt; (TModel model) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateModel&lt;class TModel&gt;(!!TModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.UpdateModel``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateModel(Of TModel As Class) (model As TModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual void UpdateModel(TModel model);" />
      <MemberSignature Language="F#" Value="abstract member UpdateModel : 'Model -&gt; unit (requires 'Model : null)&#xA;override this.UpdateModel : 'Model -&gt; unit (requires 'Model : null)" Usage="page.UpdateModel model" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TModel"><span data-ttu-id="7c669-1115">モデルの型。</span><span class="sxs-lookup"><span data-stu-id="7c669-1115">The type of the model.</span></span></typeparam>
        <param name="model"><span data-ttu-id="7c669-1116">モデル。</span><span class="sxs-lookup"><span data-stu-id="7c669-1116">The model.</span></span></param>
        <summary><span data-ttu-id="7c669-1117">データ連結コントロール内の値を使用して、指定されたモデル インスタンスを更新します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1117">Updates the specified model instance using values from the data-bound control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1118">このメソッドは、データバインドコントロールの `UpdateMethod` または `InsertMethod` プロパティによって指定されたメソッドからのみ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-1118">This method should only be called from a method that is specified by a data-bound control's `UpdateMethod` or `InsertMethod` property.</span></span>

 <span data-ttu-id="7c669-1119">Web フォームでのモデルバインドの使用に関するチュートリアルシリーズについては、「[モデルバインドと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1119">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateModel&lt;TModel&gt;">
      <MemberSignature Language="C#" Value="public virtual void UpdateModel&lt;TModel&gt; (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateModel&lt;class TModel&gt;(!!TModel model, class System.Web.ModelBinding.IValueProvider valueProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateModel(Of TModel As Class) (model As TModel, valueProvider As IValueProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TModel&gt;&#xA; where TModel : class virtual void UpdateModel(TModel model, System::Web::ModelBinding::IValueProvider ^ valueProvider);" />
      <MemberSignature Language="F#" Value="abstract member UpdateModel : 'Model * System.Web.ModelBinding.IValueProvider -&gt; unit (requires 'Model : null)&#xA;override this.UpdateModel : 'Model * System.Web.ModelBinding.IValueProvider -&gt; unit (requires 'Model : null)" Usage="page.UpdateModel (model, valueProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TModel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="model" Type="TModel" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="valueProvider" Type="System.Web.ModelBinding.IValueProvider" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TModel"><span data-ttu-id="7c669-1120">モデルの型。</span><span class="sxs-lookup"><span data-stu-id="7c669-1120">The type of the model.</span></span></typeparam>
        <param name="model"><span data-ttu-id="7c669-1121">モデル。</span><span class="sxs-lookup"><span data-stu-id="7c669-1121">The model.</span></span></param>
        <param name="valueProvider"><span data-ttu-id="7c669-1122">値プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="7c669-1122">The value provider.</span></span></param>
        <summary><span data-ttu-id="7c669-1123">指定された値プロバイダー内の値を使用して、指定されたモデル インスタンスを更新します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1123">Updates the specified model instance using values from a specified value provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1124">Web フォームでのモデルバインドの使用に関するチュートリアルシリーズについては、「[モデルバインドと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1124">For a tutorial series on using model binding with Web Forms, see [Model Binding and Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Web.UI.Page.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1125">ページ要求を行っているユーザーに関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1125">Gets information about the user making the page request.</span></span></summary>
        <value><span data-ttu-id="7c669-1126">ページ要求を行っているユーザーを表す <see cref="T:System.Security.Principal.IPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-1126">An <see cref="T:System.Security.Principal.IPrincipal" /> that represents the user making the page request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1127"><xref:System.Security.Principal.IPrincipal> オブジェクトは、コードが実行されているユーザーのセキュリティコンテキストを表します。これには、そのユーザーの id と、そのユーザーが属するロールが含まれます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1127">An <xref:System.Security.Principal.IPrincipal> object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>

 <span data-ttu-id="7c669-1128">このプロパティは、<xref:System.Web.HttpContext> オブジェクトの <xref:System.Web.HttpContext.User%2A> プロパティを使用して、要求の送信元を特定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1128">This property uses the <xref:System.Web.HttpContext> object's <xref:System.Web.HttpContext.User%2A> property to determine where the request originates.</span></span>



## Examples
 <span data-ttu-id="7c669-1129">次のコード例では、<xref:System.Web.UI.Page.User%2A> プロパティを使用して、現在のユーザーの認証情報と id 情報にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="7c669-1129">The following code example uses the <xref:System.Web.UI.Page.User%2A> property to access authentication and identity information for the current user.</span></span> <span data-ttu-id="7c669-1130">認証されていないユーザーは、ログインページにリダイレクトされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1130">If the user is not authenticated, it redirects them to a login page.</span></span>

 [!code-csharp[Page_User#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_User/CS/page_user.cs.aspx#1)]
 [!code-vb[Page_User#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_User/VB/page_user.vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpContext" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c669-1131">ページに含まれている検証コントロールに対して、割り当てられた情報を検証するように指示します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1131">Instructs any validation controls included on the page to validate their assigned information.</span></span></summary>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate();" />
      <MemberSignature Language="F#" Value="abstract member Validate : unit -&gt; unit&#xA;override this.Validate : unit -&gt; unit" Usage="page.Validate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c669-1132">ページに含まれている検証コントロールに対して、割り当てられた情報を検証するように指示します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1132">Instructs any validation controls included on the page to validate their assigned information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1133">このメソッドは、`CausesValidation` プロパティが `true`に設定されている ASP.NET サーバーコントロールをユーザーがクリックすると呼び出されます。これは既定のです。</span><span class="sxs-lookup"><span data-stu-id="7c669-1133">This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default.</span></span> <span data-ttu-id="7c669-1134">これには、<xref:System.Web.UI.WebControls.Button>、<xref:System.Web.UI.WebControls.ImageButton>、<xref:System.Web.UI.WebControls.LinkButton> Web サーバーコントロール、<xref:System.Web.UI.HtmlControls.HtmlInputButton>、<xref:System.Web.UI.HtmlControls.HtmlInputImage>、および <xref:System.Web.UI.HtmlControls.HtmlButton> HTML サーバーコントロール、および <xref:System.Web.UI.WebControls.TextBox>、<xref:System.Web.UI.WebControls.CheckBox>、<xref:System.Web.UI.WebControls.ListControl>、<xref:System.Web.UI.WebControls.BulletedList> の各コントロールなど、サーバーに自動的にポストバックできるコントロールが含まれます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1134">These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls.</span></span>

 <span data-ttu-id="7c669-1135">ページ上のボタンコントロールの検証を無効にするには、ボタンコントロールの `CausesValidation` プロパティを `false`に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1135">To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`.</span></span>

 <span data-ttu-id="7c669-1136">このメソッドが呼び出されると、<xref:System.Web.UI.Page.Validators%2A?displayProperty=nameWithType> プロパティに関連付けられている <xref:System.Web.UI.ValidatorCollection> オブジェクトに格納されている検証コントロールを反復処理し、現在の検証グループの各検証コントロールの検証ロジックを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1136">When this method is invoked, it iterates through the validation controls contained in the <xref:System.Web.UI.ValidatorCollection> object associated with the <xref:System.Web.UI.Page.Validators%2A?displayProperty=nameWithType> property and invokes the validation logic for each validation control in the current validation group.</span></span> <span data-ttu-id="7c669-1137">検証グループは、ページをサーバーにポストしたコントロールによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1137">The validation group is determined by the control that posted the page to the server.</span></span> <span data-ttu-id="7c669-1138">検証グループが指定されていない場合、検証グループは使用されません。</span><span class="sxs-lookup"><span data-stu-id="7c669-1138">If no validation group is specified, then no validation group is used.</span></span>

> [!NOTE]
>  <span data-ttu-id="7c669-1139">ページの検証の動作が変更されました。</span><span class="sxs-lookup"><span data-stu-id="7c669-1139">The behavior of page validation has changed.</span></span> <span data-ttu-id="7c669-1140">[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]では、コントロールが <xref:System.Web.UI.Page.Validate?displayProperty=nameWithType> メソッドを呼び出すことがなくなりました。代わりに、<xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1140">In [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)], controls no longer call the <xref:System.Web.UI.Page.Validate?displayProperty=nameWithType> method; they use the <xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="7c669-1141">[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] ページで <xref:System.Web.UI.Page.Validate?displayProperty=nameWithType> メソッドを使用した場合、検証グループは無視され、すべてのコントロールが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1141">If you use the <xref:System.Web.UI.Page.Validate?displayProperty=nameWithType> method on an [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)] page, validation groups are ignored and all controls are validated.</span></span>



## Examples
 <span data-ttu-id="7c669-1142">次のコード例では、複数の異なる検証グループが定義されているシナリオで、ページの <xref:System.Web.UI.Page.Validate%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1142">The following code example calls the <xref:System.Web.UI.Page.Validate%2A> method on a page in a scenario with several different validation groups defined.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7c669-1143">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-1143">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7c669-1144">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1144">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7c669-1145">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1145">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[System.Web.UI.Page.Validate2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/cs/pagevalidatecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.Validate2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/vb/pagevalidatevb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="7c669-1146"><see cref="M:System.Web.UI.Page.Validate" /> メソッドは [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]では使用されません。</span><span class="sxs-lookup"><span data-stu-id="7c669-1146">The <see cref="M:System.Web.UI.Page.Validate" /> method is not used by [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)].</span></span> <span data-ttu-id="7c669-1147">[!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)]を使用する場合は、<see cref="M:System.Web.UI.Page.Validate(System.String)" /> メソッドをオーバーライドして、ページの検証動作を変更します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1147">When you are using [!INCLUDE[vstecasplong](~/includes/vstecasplong-md.md)], override the <see cref="M:System.Web.UI.Page.Validate(System.String)" /> method to change page validation behavior.</span></span></para></block>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual void Validate (string validationGroup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(string validationGroup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.Validate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Validate (validationGroup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate(System::String ^ validationGroup);" />
      <MemberSignature Language="F#" Value="abstract member Validate : string -&gt; unit&#xA;override this.Validate : string -&gt; unit" Usage="page.Validate validationGroup" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationGroup" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="validationGroup"><span data-ttu-id="7c669-1148">検証されるコントロールの検証グループ名。</span><span class="sxs-lookup"><span data-stu-id="7c669-1148">The validation group name of the controls to validate.</span></span></param>
        <summary><span data-ttu-id="7c669-1149">指定した検証グループの検証コントロールに対して、割り当てられた情報を検証するように指示します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1149">Instructs the validation controls in the specified validation group to validate their assigned information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1150">このメソッドは、`CausesValidation` プロパティが `true`に設定されている ASP.NET サーバーコントロールをユーザーがクリックすると呼び出されます。これは既定のです。</span><span class="sxs-lookup"><span data-stu-id="7c669-1150">This method is invoked when a user clicks any ASP.NET server control that has the `CausesValidation` property set to `true`, which is the default.</span></span> <span data-ttu-id="7c669-1151">これには、<xref:System.Web.UI.WebControls.Button>、<xref:System.Web.UI.WebControls.ImageButton>、<xref:System.Web.UI.WebControls.LinkButton> Web サーバーコントロール、<xref:System.Web.UI.HtmlControls.HtmlInputButton>、<xref:System.Web.UI.HtmlControls.HtmlInputImage>、および <xref:System.Web.UI.HtmlControls.HtmlButton> HTML サーバーコントロール、および <xref:System.Web.UI.WebControls.TextBox>、<xref:System.Web.UI.WebControls.CheckBox>、<xref:System.Web.UI.WebControls.ListControl>、<xref:System.Web.UI.WebControls.BulletedList> の各コントロールなど、サーバーに自動的にポストバックできるコントロールが含まれます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1151">These include the <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, and <xref:System.Web.UI.WebControls.LinkButton> Web server controls, the <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, and <xref:System.Web.UI.HtmlControls.HtmlButton> HTML server controls, and controls that can automatically post back to the server such as the <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, and <xref:System.Web.UI.WebControls.BulletedList> controls.</span></span>

 <span data-ttu-id="7c669-1152">ページ上のボタンコントロールの検証を無効にするには、ボタンコントロールの `CausesValidation` プロパティを `false`に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1152">To disable validation for any button control on the page, set the button control's `CausesValidation` property to `false`.</span></span>

 <span data-ttu-id="7c669-1153"><xref:System.Web.UI.Page.Validate%2A> メソッドは、指定された検証グループを検証します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1153">The <xref:System.Web.UI.Page.Validate%2A> method validates the specified validation group.</span></span> <span data-ttu-id="7c669-1154">検証グループで <xref:System.Web.UI.Page.Validate%2A> メソッドを呼び出した後、<xref:System.Web.UI.Page.IsValid%2A> メソッドは、指定された検証グループと、そのページがサーバーにポストされる原因となったコントロールの検証グループの両方が有効な場合にのみ、`true` を返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1154">After calling the <xref:System.Web.UI.Page.Validate%2A> method on a validation group, the <xref:System.Web.UI.Page.IsValid%2A> method will return `true` only if both the specified validation group and the validation group of the control that caused the page to be posted to the server are valid.</span></span>



## Examples
 <span data-ttu-id="7c669-1155">次のコード例では、複数の異なる検証グループが定義されているシナリオで、ページの <xref:System.Web.UI.Page.Validate%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1155">The following code example calls the <xref:System.Web.UI.Page.Validate%2A> method on a page in a scenario with several different validation groups defined.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="7c669-1156">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-1156">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7c669-1157">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1157">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7c669-1158">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1158">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 [!code-aspx-csharp[System.Web.UI.Page.Validate2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/cs/pagevalidatecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Page.Validate2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page.Validate2/vb/pagevalidatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
        <altmember cref="P:System.Web.UI.Page.Validators" />
        <altmember cref="P:System.Web.UI.Page.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.Page.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1159">ブラウザーからのクライアント入力の安全性をページで調べるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1159">Gets or sets a value that indicates whether the page checks client input from the browser for potentially dangerous values.</span></span></summary>
        <value><span data-ttu-id="7c669-1160">ページがクライアントの入力をチェックするかどうかを示す値。</span><span class="sxs-lookup"><span data-stu-id="7c669-1160">A value that indicates whether the page checks client input.</span></span> <span data-ttu-id="7c669-1161">既定値は、<see cref="F:System.Web.UI.ValidateRequestMode.Enabled" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-1161">The default is <see cref="F:System.Web.UI.ValidateRequestMode.Enabled" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1162"><xref:System.Web.UI.ValidateRequestMode.Inherit> 値は、継承するものがないため、<xref:System.Web.UI.Page> クラスでは使用されません。</span><span class="sxs-lookup"><span data-stu-id="7c669-1162">The value <xref:System.Web.UI.ValidateRequestMode.Inherit> is not used in the <xref:System.Web.UI.Page> class because there is nothing to inherit from.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Validators">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidatorCollection Validators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ValidatorCollection Validators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Validators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Validators As ValidatorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidatorCollection ^ Validators { System::Web::UI::ValidatorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Validators : System.Web.UI.ValidatorCollection" Usage="System.Web.UI.Page.Validators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidatorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1163">要求されたページに含まれているすべての検証コントロールのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1163">Gets a collection of all validation controls contained on the requested page.</span></span></summary>
        <value><span data-ttu-id="7c669-1164">検証コントロールのコレクション。</span><span class="sxs-lookup"><span data-stu-id="7c669-1164">The collection of validation controls.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1165">このプロパティを使用すると、現在の <xref:System.Web.UI.Page> インスタンスに関連付けられている <xref:System.Web.UI.ValidatorCollection> オブジェクトのメソッドとプロパティを操作できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1165">You can use this property to manipulate the methods and properties of the <xref:System.Web.UI.ValidatorCollection> object associated with the current <xref:System.Web.UI.Page> instance.</span></span> <span data-ttu-id="7c669-1166">このコレクションには、ページに含まれるすべての検証サーバーコントロールが含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c669-1166">This collection contains all the validation server controls that are contained in a page.</span></span>

 <span data-ttu-id="7c669-1167"><xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> メソッドを呼び出すと、現在の検証グループ内の各検証サーバーコントロールに対して検証ロジックが実行されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1167">Calling the <xref:System.Web.UI.Page.Validate%2A?displayProperty=nameWithType> method causes validation logic to be executed for each validation server control in the current validation group.</span></span> <span data-ttu-id="7c669-1168">これらのコントロールのいずれかがを満たしていない場合、<xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> プロパティは `false`を返します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1168">If any of these controls do not pass, the <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> property returns `false`.</span></span>

 <span data-ttu-id="7c669-1169">検証コントロールの詳細については、「 [ASP.NET Validation controls](https://docs.microsoft.com/previous-versions/aspnet/debza5t0(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1169">For more information on validation controls, see [ASP.NET Validation Controls](https://docs.microsoft.com/previous-versions/aspnet/debza5t0(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ValidatorCollection" />
      </Docs>
    </Member>
    <Member MemberName="VerifyRenderingInServerForm">
      <MemberSignature Language="C#" Value="public virtual void VerifyRenderingInServerForm (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VerifyRenderingInServerForm(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VerifyRenderingInServerForm (control As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void VerifyRenderingInServerForm(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member VerifyRenderingInServerForm : System.Web.UI.Control -&gt; unit&#xA;override this.VerifyRenderingInServerForm : System.Web.UI.Control -&gt; unit" Usage="page.VerifyRenderingInServerForm control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="7c669-1170"><see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロール内に配置する必要がある ASP.NET サーバー コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c669-1170">The ASP.NET server control that is required in the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control.</span></span></param>
        <summary><span data-ttu-id="7c669-1171">実行時に、指定された ASP.NET サーバー コントロールに <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> コントロールが表示されることを確認します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1171">Confirms that an <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> control is rendered for the specified ASP.NET server control at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1172">`<form runat=server>` タグの内側に配置する必要があるコントロールは、レンダリングする前にこのメソッドを呼び出すことができるため、タグの外側に配置されている場合はエラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1172">Controls that are required to be inside `<form runat=server>` tags can call this method before they render so that an error message is shown if they are placed outside the tags.</span></span> <span data-ttu-id="7c669-1173">ポストバックまたは登録されたスクリプトブロックに依存するコントロールは、<xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> メソッドのオーバーライドでこのメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-1173">Controls that post back or depend on registered script blocks should call this method in an override of the <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="7c669-1174">サーバーフォーム要素を表示する方法が異なるページでは、このメソッドをオーバーライドして、異なる条件で例外をスローすることができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1174">Pages that have a different way of rendering the server form element can override this method to throw an exception under different conditions.</span></span>

 <span data-ttu-id="7c669-1175">クライアント側スクリプトをポストバックまたは使用するサーバーコントロールは、<xref:System.Web.UI.HtmlControls.HtmlForm> サーバーコントロール (<`form runat="server">`) タグで囲まれていないと機能しません。</span><span class="sxs-lookup"><span data-stu-id="7c669-1175">Server controls that post back or use client-side script will not work if they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> server control (<`form runat="server">`) tags.</span></span> <span data-ttu-id="7c669-1176">これらのコントロールは、レンダリング時にこのメソッドを呼び出して、<xref:System.Web.UI.HtmlControls.HtmlForm> コントロールで囲まれていないときに明確なエラーメッセージを提供できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1176">These controls can call this method when they render to provide a clear error message when they are not enclosed in the <xref:System.Web.UI.HtmlControls.HtmlForm> control.</span></span>

 <span data-ttu-id="7c669-1177">カスタムサーバーコントロールを開発する場合は、任意の種類の入力タグに対して `Render` メソッドをオーバーライドするときに、このメソッドを呼び出すのが一般的です。</span><span class="sxs-lookup"><span data-stu-id="7c669-1177">When you develop a custom server control, it is common to call this method when you override the `Render` method for any kind of input tag.</span></span> <span data-ttu-id="7c669-1178">これは、入力コントロールが <xref:System.Web.UI.Page.GetPostBackEventReference%2A>を呼び出す場合、またはクライアントスクリプトを出力する場合に特に重要です。</span><span class="sxs-lookup"><span data-stu-id="7c669-1178">This is particularly important if the input control calls <xref:System.Web.UI.Page.GetPostBackEventReference%2A>, or if it emits client script.</span></span> <span data-ttu-id="7c669-1179">複合サーバーコントロールは、この呼び出しを行う必要はありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-1179">A composite server control does not need to make this call.</span></span>



## Examples
 <span data-ttu-id="7c669-1180">次のコード例では、カスタムサーバーコントロールの <xref:System.Web.UI.Page.Render%2A?displayProperty=nameWithType> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="7c669-1180">The following code example overrides the <xref:System.Web.UI.Page.Render%2A?displayProperty=nameWithType> method of a custom server control.</span></span> <span data-ttu-id="7c669-1181">このコントロールがページにコンテンツを書き込むときは、<xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> メソッドを使用して、<xref:System.Web.UI.HtmlControls.HtmlForm> コントロールの開始タグと終了タグの間にコントロールが確実に表示されるようにします。</span><span class="sxs-lookup"><span data-stu-id="7c669-1181">When this control writes its content to a page, it uses the <xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A> method to make sure that the control appears between the opening and closing tags of an <xref:System.Web.UI.HtmlControls.HtmlForm> control.</span></span>

 [!code-csharp[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Page_VerifyRenderingInServerForm/CS/testlinkbutton.cs#3)]
 [!code-vb[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Page_VerifyRenderingInServerForm/vb/testlinkbutton.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-1182">実行時に、指定されたサーバー コントロールが <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> サーバー コントロールの開始タグと終了タグの間に含まれていません。</span><span class="sxs-lookup"><span data-stu-id="7c669-1182">The specified server control is not contained between the opening and closing tags of the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> server control at run time.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c669-1183">検証するコントロールが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-1183">The control to verify is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ViewStateEncryptionMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ViewStateEncryptionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateEncryptionMode As ViewStateEncryptionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ViewStateEncryptionMode ViewStateEncryptionMode { System::Web::UI::ViewStateEncryptionMode get(); void set(System::Web::UI::ViewStateEncryptionMode value); };" />
      <MemberSignature Language="F#" Value="member this.ViewStateEncryptionMode : System.Web.UI.ViewStateEncryptionMode with get, set" Usage="System.Web.UI.Page.ViewStateEncryptionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ViewStateEncryptionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1184">ビューステートの暗号化モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1184">Gets or sets the encryption mode of the view state.</span></span></summary>
        <value><span data-ttu-id="7c669-1185"><see cref="T:System.Web.UI.ViewStateEncryptionMode" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7c669-1185">One of the <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> values.</span></span> <span data-ttu-id="7c669-1186">既定値は <see cref="F:System.Web.UI.ViewStateEncryptionMode.Auto" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-1186">The default value is <see cref="F:System.Web.UI.ViewStateEncryptionMode.Auto" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c669-1187"><xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> プロパティをコードで設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="7c669-1187">The <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> property cannot be set in code.</span></span> <span data-ttu-id="7c669-1188">設定できるのは、 [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブ、または構成ファイルの < 要素だけです。</span><span class="sxs-lookup"><span data-stu-id="7c669-1188">It can only be set in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive or in the < element of the configuration file.</span></span> <span data-ttu-id="7c669-1189">[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブで設定された値は、構成ファイルで設定されている値よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1189">Values set in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive override any values set in the configuration file.</span></span>  
  
 <span data-ttu-id="7c669-1190">[@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100))ディレクティブでこのプロパティを設定するための構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="7c669-1190">The syntax for setting this property in the [@ Page](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ydy4x04a(v=vs.100)) directive is as follows:</span></span>  
  
```vb  
<%@ Page Language="VB" ViewStateEncryptionMode="Always" %>  
```  
  
```csharp  
<%@ Page Language="C#" ViewStateEncryptionMode="Always" %>  
```  
  
 <span data-ttu-id="7c669-1191">構成ファイルでこのプロパティを設定するための構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="7c669-1191">The syntax for setting this property in the configuration file is as follows:</span></span>  
  
```vb  
<system.web>  
  <pages viewStateEncryptionMode="Always" />  
</system.web>  
```  
  
```csharp  
<system.web>  
  <pages viewStateEncryptionMode="Always" />  
</system.web>  
```  
  
 <span data-ttu-id="7c669-1192">カスタムコントロールの開発者は、機密性の高いデータをコントロールに表示する前に、コード内のこのプロパティの値を確認することができます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1192">Custom control developers may wish to check the value of this property in code before saving potentially sensitive data to view state in their control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7c669-1193">設定される値は、<see cref="T:System.Web.UI.ViewStateEncryptionMode" /> 列挙体のメンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="7c669-1193">The value set is not a member of the <see cref="T:System.Web.UI.ViewStateEncryptionMode" /> enumeration.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c669-1194"><see cref="P:System.Web.UI.Page.ViewStateEncryptionMode" /> プロパティは、ページの有効期間内の <see langword="PreRender" />フェーズで、またはこのフェーズの前でだけ設定できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1194">The <see cref="P:System.Web.UI.Page.ViewStateEncryptionMode" /> property can be set only in or before the page <see langword="PreRender" /> phase in the page life cycle.</span></span></exception>
        <altmember cref="T:System.Web.UI.ViewStateEncryptionMode" />
      </Docs>
    </Member>
    <Member MemberName="ViewStateUserKey">
      <MemberSignature Language="C#" Value="public string ViewStateUserKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ViewStateUserKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.ViewStateUserKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewStateUserKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ViewStateUserKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewStateUserKey : string with get, set" Usage="System.Web.UI.Page.ViewStateUserKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1195">現在のページに関連付けられているビューステート変数で、個別のユーザーに ID を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1195">Assigns an identifier to an individual user in the view-state variable associated with the current page.</span></span></summary>
        <value><span data-ttu-id="7c669-1196">個別のユーザーの ID。</span><span class="sxs-lookup"><span data-stu-id="7c669-1196">The identifier for the individual user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="7c669-1197"><xref:System.Web.UI.Page.ViewStateUserKey%2A> プロパティを設定すると、悪意のあるユーザーからアプリケーションへの攻撃を防ぐのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1197">Setting the <xref:System.Web.UI.Page.ViewStateUserKey%2A> property can help you prevent attacks on your application from malicious users.</span></span> <span data-ttu-id="7c669-1198">これは、個々のユーザーのビューステート変数に識別子を割り当てて、変数を使用して攻撃を生成することができないようにすることで実現されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1198">It does this by allowing you to assign an identifier to the view-state variable for individual users so that they cannot use the variable to generate an attack.</span></span> <span data-ttu-id="7c669-1199">Web 攻撃の詳細と、それを防ぐためにできることの詳細については、「 [ASP.NET 組み込み機能を活用して Web 攻撃を回避オフにする](https://go.microsoft.com/fwlink/?LinkId=163557)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c669-1199">For more information about Web attacks and about what you can do to help prevent them, see [Take Advantage of ASP.NET Built-in Features to Fend Off Web Attacks](https://go.microsoft.com/fwlink/?LinkId=163557).</span></span>

 <span data-ttu-id="7c669-1200">このプロパティは、ユーザーの認証された名前や <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> 値など、任意の文字列値に設定できます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1200">You can set this property to any string value, such as the user's authenticated name or the <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value.</span></span>

> [!NOTE]
>  <span data-ttu-id="7c669-1201">このプロパティは、ページ処理の `Page_Init` フェーズ中に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c669-1201">You must set this property during the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="7c669-1202">`Page_Load` フェーズ中にこのプロパティを設定すると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1202">Setting this property during the `Page_Load` phase throws an exception.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="7c669-1203">ページ処理中、<see cref="P:System.Web.UI.Page.ViewStateUserKey" /> プロパティへのアクセスが遅すぎました。</span><span class="sxs-lookup"><span data-stu-id="7c669-1203">The <see cref="P:System.Web.UI.Page.ViewStateUserKey" /> property was accessed too late during page processing.</span></span></exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=163557"><span data-ttu-id="7c669-1204">ASP.NET 組み込み機能を活用して Web 攻撃を回避</span><span class="sxs-lookup"><span data-stu-id="7c669-1204">Take Advantage of ASP.NET Built-in Features to Fend Off Web Attacks</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Page.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.Page.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c669-1205"><see cref="T:System.Web.UI.Page" /> オブジェクトが表示されているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c669-1205">Gets or sets a value indicating whether the <see cref="T:System.Web.UI.Page" /> object is rendered.</span></span></summary>
        <value><span data-ttu-id="7c669-1206"><see cref="T:System.Web.UI.Page" /> が表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c669-1206"><see langword="true" /> if the <see cref="T:System.Web.UI.Page" /> is to be rendered; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7c669-1207">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c669-1207">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="7c669-1208">次の例では、<xref:System.Web.UI.Page.Visible%2A> プロパティを `false` に設定して、ページの表示内容を非表示にします。</span><span class="sxs-lookup"><span data-stu-id="7c669-1208">The following example sets the <xref:System.Web.UI.Page.Visible%2A> property to `false` to hide the rendered content of a page.</span></span> <span data-ttu-id="7c669-1209">このページが最初に要求されると、データソースが設定され、ページに表示されます。</span><span class="sxs-lookup"><span data-stu-id="7c669-1209">When this page is first requested, a data source is populated and displayed in the page.</span></span> <span data-ttu-id="7c669-1210">ユーザーがボタンをクリックすると、`HideButton_Click` イベントハンドラーによって、ページのレンダリングされたコンテンツ全体が非表示になります。</span><span class="sxs-lookup"><span data-stu-id="7c669-1210">When a user clicks the button, the `HideButton_Click` event handler hides the entire rendered content of the page.</span></span>

 [!code-csharp[Page_Visible#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Page_Visible/CS/page_visible.cs.aspx#1)]
 [!code-vb[Page_Visible#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Page_Visible/VB/page_visible.vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Control" />
        <altmember cref="T:System.Web.UI.TemplateControl" />
        <altmember cref="T:System.Web.UI.UserControl" />
      </Docs>
    </Member>
  </Members>
</Type>
