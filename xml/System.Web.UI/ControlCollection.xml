<Type Name="ControlCollection" FullName="System.Web.UI.ControlCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="52603358b1487c8225780b30a31f2eb33dd53c46" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73398438" /></Metadata><TypeSignature Language="C#" Value="public class ControlCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ControlCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type ControlCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="22586-101">ASP.NET サーバー コントロールが子コントロールのリストを維持できるようにする、コレクション コンテナーを提供します。</span><span class="sxs-lookup"><span data-stu-id="22586-101">Provides a collection container that enables ASP.NET server controls to maintain a list of their child controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22586-102"><xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> プロパティを使用して、<xref:System.Web.UI.ControlCollection> クラスのプロパティおよびメソッドにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="22586-102">You can access any of the properties and methods of the <xref:System.Web.UI.ControlCollection> class through the <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="22586-103"><xref:System.Web.UI.Control> クラスはすべての ASP.NET サーバーコントロールの基底クラスであるため、すべてのサーバーコントロールはこのプロパティを継承します。</span><span class="sxs-lookup"><span data-stu-id="22586-103">Since the <xref:System.Web.UI.Control> class is the base class for all ASP.NET server controls, all server controls inherit this property.</span></span>  
  
 <span data-ttu-id="22586-104">コレクションの詳細については、「[コレクションとデータ構造](~/docs/standard/collections/index.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="22586-104">For more information about collections, see [Collections and Data Structures](~/docs/standard/collections/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22586-105">次のコード例では、<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> メソッドをオーバーライドして、`ChildControl`という名前のカスタムクラスのインスタンスの両方で、`Message`という名前の文字列プロパティを持つ2つのコントロールを作成します。</span><span class="sxs-lookup"><span data-stu-id="22586-105">The following code example overrides the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> method to create two controls, both instances of the custom class named `ChildControl`, which has a string property named `Message`.</span></span> <span data-ttu-id="22586-106">作成されると、2つのコントロールが <xref:System.Web.UI.ControlCollection>に追加されます。</span><span class="sxs-lookup"><span data-stu-id="22586-106">When created, the two controls are added to the <xref:System.Web.UI.ControlCollection>.</span></span> <span data-ttu-id="22586-107"><xref:System.Web.UI.ControlCollection.Add%2A> メソッドは、このバージョンの <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>を含むクラスに追加するために、これらの各コントロールで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="22586-107">The <xref:System.Web.UI.ControlCollection.Add%2A> method is called on each of these controls to add them to the class that contains this version of <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="22586-108">これらのコントロールが不必要に再作成されないように、<xref:System.Web.UI.Control.ChildControlsCreated%2A> プロパティは `true` に設定されています。</span><span class="sxs-lookup"><span data-stu-id="22586-108">The <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true` so that these controls will not be created again unnecessarily.</span></span>  
  
 [!code-csharp[Control_Sample_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Control_Sample_1/CS/control_sample.cs#1)]
 [!code-vb[Control_Sample_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Control_Sample_1/VB/control_sample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.UI.Control.Controls" />
    <related type="Article" href="~/docs/standard/collections/index.md"><span data-ttu-id="22586-109">コレクションとデータ構造体</span><span class="sxs-lookup"><span data-stu-id="22586-109">Collections and Data Structures</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlCollection (System.Web.UI.Control owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Control owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlCollection(System::Web::UI::Control ^ owner);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ControlCollection : System.Web.UI.Control -&gt; System.Web.UI.ControlCollection" Usage="new System.Web.UI.ControlCollection owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="22586-110">コントロール コレクションが作成される対象となる ASP.NET サーバー コントロール。</span><span class="sxs-lookup"><span data-stu-id="22586-110">The ASP.NET server control that the control collection is created for.</span></span></param>
        <summary><span data-ttu-id="22586-111">指定した親サーバー コントロールの <see cref="T:System.Web.UI.ControlCollection" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="22586-111">Initializes a new instance of the <see cref="T:System.Web.UI.ControlCollection" /> class for the specified parent server control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="22586-112">次のコード例は、コレクションのインスタンスが作成されるときに、コンストラクターをオーバーライドして、メッセージ (<xref:System.Web.UI.ControlCollection.Owner%2A> プロパティの名前を含む) がトレースログに書き込まれるようにするカスタム <xref:System.Web.UI.ControlCollection> クラスです。</span><span class="sxs-lookup"><span data-stu-id="22586-112">The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the constructor to write messages (which include the name of the <xref:System.Web.UI.ControlCollection.Owner%2A> property) to the trace log when an instance of the collection is created.</span></span> <span data-ttu-id="22586-113">この例を使用するには、ページまたはアプリケーションのトレースを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="22586-113">You must enable tracing for the page or application for this example to work.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#1)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22586-114"><paramref name="owner" /> パラメーターが <see langword="null" /> である場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="22586-114">Occurs if the <paramref name="owner" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Web.UI.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Web.UI.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (child As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Web::UI::Control ^ child);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Web.UI.Control -&gt; unit&#xA;override this.Add : System.Web.UI.Control -&gt; unit" Usage="controlCollection.Add child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="22586-115">コレクションに追加する <see cref="T:System.Web.UI.Control" />。</span><span class="sxs-lookup"><span data-stu-id="22586-115">The <see cref="T:System.Web.UI.Control" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="22586-116">指定した <see cref="T:System.Web.UI.Control" /> オブジェクトをコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="22586-116">Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22586-117">序数インデックス配列の末尾に新しいコントロールが追加されます。</span><span class="sxs-lookup"><span data-stu-id="22586-117">The new control is added to the end of an ordinal index array.</span></span> <span data-ttu-id="22586-118">このコントロールは、任意の ASP.NET サーバーコントロール、作成したカスタムサーバーコントロール、またはリテラルコントロールのインスタンスにすることができます。</span><span class="sxs-lookup"><span data-stu-id="22586-118">The control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.</span></span>  
  
 <span data-ttu-id="22586-119">コレクションの特定のインデックス位置にコントロールを追加するには、<xref:System.Web.UI.ControlCollection.AddAt%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="22586-119">To add a control to the collection at a specific index location, use the <xref:System.Web.UI.ControlCollection.AddAt%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22586-120">次のコード例では、<xref:System.Web.UI.ControlCollection.Add%2A> メソッドを使用して、一連のテンプレート項目 (サーバーコントロールのビューステートから取得した数) をカスタムテンプレートコントロールに追加します。</span><span class="sxs-lookup"><span data-stu-id="22586-120">The following code example uses the <xref:System.Web.UI.ControlCollection.Add%2A> method to add a series of template items, the number of which are taken from the server control's view state, to a custom templated control.</span></span>  
  
 [!code-csharp[TemplatedDataBoundControl#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#2)]
 [!code-vb[TemplatedDataBoundControl#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22586-121"><paramref name="child" /> パラメーターがコントロールを指定しない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="22586-121">Thrown if the <paramref name="child" /> parameter does not specify a control.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="22586-122"><see cref="T:System.Web.UI.ControlCollection" /> が読み取り専用の場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="22586-122">Thrown if the <see cref="T:System.Web.UI.ControlCollection" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public virtual void AddAt (int index, System.Web.UI.Control child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAt(int32 index, class System.Web.UI.Control child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAt (index As Integer, child As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAt(int index, System::Web::UI::Control ^ child);" />
      <MemberSignature Language="F#" Value="abstract member AddAt : int * System.Web.UI.Control -&gt; unit&#xA;override this.AddAt : int * System.Web.UI.Control -&gt; unit" Usage="controlCollection.AddAt (index, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="child" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22586-123">子コントロールを追加する配列内の位置。</span><span class="sxs-lookup"><span data-stu-id="22586-123">The location in the array at which to add the child control.</span></span></param>
        <param name="child"><span data-ttu-id="22586-124">コレクションに追加する <see cref="T:System.Web.UI.Control" />。</span><span class="sxs-lookup"><span data-stu-id="22586-124">The <see cref="T:System.Web.UI.Control" /> to add to the collection.</span></span></param>
        <summary><span data-ttu-id="22586-125">指定したインデックス位置に、指定した <see cref="T:System.Web.UI.Control" /> オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="22586-125">Adds the specified <see cref="T:System.Web.UI.Control" /> object to the collection at the specified index location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22586-126">追加されたコントロールは、任意の ASP.NET サーバーコントロール、作成したカスタムサーバーコントロール、またはリテラルコントロールのインスタンスにすることができます。</span><span class="sxs-lookup"><span data-stu-id="22586-126">The added control can be an instance of any ASP.NET server control, a custom server control you create, or a literal control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22586-127">次のコード例では、<xref:System.Web.UI.ControlCollection.AddAt%2A> メソッドを使用して `ChildControl2` という名前の新しい <xref:System.Web.UI.LiteralControl> を作成し、インデックス位置1にある `myButton` コントロールの <xref:System.Web.UI.ControlCollection> コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="22586-127">The following code example uses the <xref:System.Web.UI.ControlCollection.AddAt%2A> method to create a new <xref:System.Web.UI.LiteralControl> named `ChildControl2` and add it to the `myButton` control's <xref:System.Web.UI.ControlCollection> collection at the index location of 1.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#1)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="22586-128"><paramref name="child" /> パラメーターがコントロールを指定しません。</span><span class="sxs-lookup"><span data-stu-id="22586-128">The <paramref name="child" /> parameter does not specify a control.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22586-129"><paramref name="index" /> パラメーターが 0 未満か、<see cref="P:System.Web.UI.ControlCollection.Count" /> プロパティより大きい値です。</span><span class="sxs-lookup"><span data-stu-id="22586-129">The <paramref name="index" /> parameter is less than zero or greater than the <see cref="P:System.Web.UI.ControlCollection.Count" /> property.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="22586-130"><see cref="T:System.Web.UI.ControlCollection" /> は読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="22586-130">The <see cref="T:System.Web.UI.ControlCollection" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="controlCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22586-131">現在のサーバー コントロールの <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトからすべてのコントロールを削除します。</span><span class="sxs-lookup"><span data-stu-id="22586-131">Removes all controls from the current server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22586-132">このメソッドは、<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> メソッドと <xref:System.Web.UI.Control.DataBind%2A> メソッドをオーバーライドするときに、カスタムコントロールの <xref:System.Web.UI.ControlCollection> を空にするために使用します。</span><span class="sxs-lookup"><span data-stu-id="22586-132">Use this method to empty a custom control's <xref:System.Web.UI.ControlCollection> when you override the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> and <xref:System.Web.UI.Control.DataBind%2A> methods.</span></span> <span data-ttu-id="22586-133">これは、複合、テンプレート化されたコントロール、またはテンプレート化されたデータバインドコントロールを開発するときに行います。</span><span class="sxs-lookup"><span data-stu-id="22586-133">Do this when you develop composite, templated controls or templated data-bound controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22586-134">次のコード例では、<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> メソッドをオーバーライドし、<xref:System.Web.UI.ControlCollection.Clear%2A> メソッドを使用して、以前 <xref:System.Web.UI.ControlCollection> オブジェクトですべての子コントロールを削除します。</span><span class="sxs-lookup"><span data-stu-id="22586-134">The following code example demonstrates overriding the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> method, and using the <xref:System.Web.UI.ControlCollection.Clear%2A> method to delete all child controls previously in the <xref:System.Web.UI.ControlCollection> object.</span></span> <span data-ttu-id="22586-135">この場合は、コントロールの <xref:System.Web.UI.ControlCollection> の古いオブジェクトが不適切に表示されないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="22586-135">In this case, you must do this so that outdated objects in your control's <xref:System.Web.UI.ControlCollection> are not displayed inappropriately.</span></span>  
  
 [!code-csharp[TemplatedDataBoundControl#2](~/samples/snippets/csharp/VS_Snippets_WebNet/TemplatedDataBoundControl/CS/templatedataboundcontrol.cs#2)]
 [!code-vb[TemplatedDataBoundControl#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TemplatedDataBoundControl/VB/templatedataboundcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (System.Web.UI.Control c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Web.UI.Control c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (c As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Web::UI::Control ^ c);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Web.UI.Control -&gt; bool&#xA;override this.Contains : System.Web.UI.Control -&gt; bool" Usage="controlCollection.Contains c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="22586-136">コレクション内で検索されるサーバー コントロール。</span><span class="sxs-lookup"><span data-stu-id="22586-136">The server control to search for in the collection.</span></span></param>
        <summary><span data-ttu-id="22586-137">指定したサーバー コントロールが親サーバー コントロールの <see cref="T:System.Web.UI.ControlCollection" /> オブジェクト内にあるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="22586-137">Determines whether the specified server control is in the parent server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <returns><span data-ttu-id="22586-138">指定されたサーバー コントロールがコレクションにある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22586-138"><see langword="true" /> if the specified server control exists in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[System.Web.UI.ctrlCollection_Contains#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.CtrlCollection_Contains/CS/ctrlcollection_contains.cs.aspx#1)]
 [!code-vb[System.Web.UI.ctrlCollection_Contains#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.CtrlCollection_Contains/VB/ctrlcollection_contains.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="controlCollection.CopyTo (array, index)" />
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="22586-139">子コントロールのコピー先の <see cref="T:System.Array" />。</span><span class="sxs-lookup"><span data-stu-id="22586-139">The <see cref="T:System.Array" /> to copy the child controls to.</span></span></param>
        <param name="index"><span data-ttu-id="22586-140">コピーの開始位置となる、<paramref name="array" /> の 0 から始まる相対インデックス番号。</span><span class="sxs-lookup"><span data-stu-id="22586-140">The zero-based relative index in <paramref name="array" /> where copying begins.</span></span></param>
        <summary><span data-ttu-id="22586-141"><see cref="T:System.Web.UI.ControlCollection" /> オブジェクトに格納されている子コントロールを、<see cref="T:System.Array" /> オブジェクトに、<see cref="T:System.Array" /> 内の指定したインデックス位置からコピーします。</span><span class="sxs-lookup"><span data-stu-id="22586-141">Copies the child controls stored in the <see cref="T:System.Web.UI.ControlCollection" /> object to an <see cref="T:System.Array" /> object, beginning at the specified index location in the <see cref="T:System.Array" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="22586-142"><paramref name="array" /> が <see langword="null" /> ではなく、1 次元でもありません。</span><span class="sxs-lookup"><span data-stu-id="22586-142"><paramref name="array" /> is not <see langword="null" /> and not one-dimensional.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.ControlCollection.Count" />
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22586-143">指定された ASP.NET サーバー コントロールの <see cref="T:System.Web.UI.ControlCollection" /> オブジェクト内にあるサーバー コントロールの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="22586-143">Gets the number of server controls in the <see cref="T:System.Web.UI.ControlCollection" /> object for the specified ASP.NET server control.</span></span></summary>
        <value><span data-ttu-id="22586-144"><see cref="T:System.Web.UI.ControlCollection" /> 内のサーバー コントロールの数。</span><span class="sxs-lookup"><span data-stu-id="22586-144">The number of server controls in the <see cref="T:System.Web.UI.ControlCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="22586-145">次のコード例では、<xref:System.Web.UI.ControlCollection.Count%2A> プロパティを使用して、コントロールの <xref:System.Web.UI.ControlCollection> オブジェクトを反復処理する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="22586-145">The following code example demonstrates how to use the <xref:System.Web.UI.ControlCollection.Count%2A> property to iterate through a control's <xref:System.Web.UI.ControlCollection> object.</span></span> <span data-ttu-id="22586-146"><xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> プロパティを使用すると、コントロールに子コントロールがあるかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="22586-146">The use of the <xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> property verifies that the control has child controls.</span></span> <span data-ttu-id="22586-147"><xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> が `false`を返した場合、残りのコードは実行されません。</span><span class="sxs-lookup"><span data-stu-id="22586-147">If <xref:System.Web.UI.Control.HasControls%2A?displayProperty=nameWithType> returns `false`, the remaining code does not run.</span></span>  
  
 [!code-csharp[Classic Control.HasControls Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Control.HasControls Example/CS/source.cs#1)]
 [!code-vb[Classic Control.HasControls Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Control.HasControls Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="controlCollection.GetEnumerator " />
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="22586-148"><see cref="T:System.Web.UI.ControlCollection" /> オブジェクトを反復処理できる列挙子を取得します。</span><span class="sxs-lookup"><span data-stu-id="22586-148">Retrieves an enumerator that can iterate through the <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <returns><span data-ttu-id="22586-149">コレクションを反復処理する列挙子。</span><span class="sxs-lookup"><span data-stu-id="22586-149">The enumerator to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="22586-150">次のコード例では、<xref:System.Web.UI.WebControls.Button> コントロールの <xref:System.Web.UI.ControlCollection> コレクションを通じて、`myButton`を列挙するメソッドを作成します。</span><span class="sxs-lookup"><span data-stu-id="22586-150">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="22586-151">列挙子が作成されると、<xref:System.Web.UI.ControlCollection.IsSynchronized%2A> プロパティがチェックされ、操作がスレッドセーフであるかどうかが確認されます。そうでない場合は、<xref:System.Web.UI.ControlCollection.SyncRoot%2A> プロパティを使用してオブジェクトを取得し、操作をスレッドセーフにします。</span><span class="sxs-lookup"><span data-stu-id="22586-151">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="22586-152">列挙が完了すると、<xref:System.Web.UI.ControlCollection.IsReadOnly%2A> プロパティの値が、含んでいるページの <xref:System.Web.UI.WebControls.Label> コントロールの <xref:System.Web.UI.WebControls.Label.Text%2A> プロパティとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="22586-152">When the enumeration is completed, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (System.Web.UI.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Web.UI.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Control) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Web::UI::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : System.Web.UI.Control -&gt; int&#xA;override this.IndexOf : System.Web.UI.Control -&gt; int" Usage="controlCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22586-153">インデックスを返す対象となる <see cref="T:System.Web.UI.Control" />。</span><span class="sxs-lookup"><span data-stu-id="22586-153">The <see cref="T:System.Web.UI.Control" /> for which the index is returned.</span></span></param>
        <summary><span data-ttu-id="22586-154">コレクション内の指定した <see cref="T:System.Web.UI.Control" /> オブジェクトのインデックスを取得します。</span><span class="sxs-lookup"><span data-stu-id="22586-154">Retrieves the index of a specified <see cref="T:System.Web.UI.Control" /> object in the collection.</span></span></summary>
        <returns><span data-ttu-id="22586-155">指定したサーバー コントロールのインデックス。</span><span class="sxs-lookup"><span data-stu-id="22586-155">The index of the specified server control.</span></span> <span data-ttu-id="22586-156">サーバー コントロールが現在コレクションのメンバーではない場合は -1 が返されます。</span><span class="sxs-lookup"><span data-stu-id="22586-156">If the server control is not currently a member of the collection, it returns -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22586-157">このメソッドを使用して、<xref:System.Web.UI.ControlCollection> オブジェクト内の指定されたサーバーコントロールのインデックス位置を確認します。</span><span class="sxs-lookup"><span data-stu-id="22586-157">Use this method to determine the index location of the specified server control in the <xref:System.Web.UI.ControlCollection> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22586-158">次のコード例では、<xref:System.Web.UI.ControlCollection.IndexOf%2A> メソッドを使用して、`myButton`という名前の <xref:System.Web.UI.WebControls.Button> コントロールの <xref:System.Web.UI.ControlCollection> コレクションに、コントロールのインデックス位置 `myLiteralControl`を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="22586-158">The following code example uses the <xref:System.Web.UI.ControlCollection.IndexOf%2A> method to write the index location of a control, `myLiteralControl`, in the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control named `myButton`.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#1)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.ControlCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22586-159"><see cref="T:System.Web.UI.ControlCollection" /> オブジェクトが読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="22586-159">Gets a value indicating whether the <see cref="T:System.Web.UI.ControlCollection" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="22586-160">コントロールが読み取り専用の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="22586-160"><see langword="true" /> if the control is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="22586-161">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="22586-161">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="22586-162">次のコード例では、<xref:System.Web.UI.WebControls.Button> コントロールの <xref:System.Web.UI.ControlCollection> コレクションを通じて、`myButton`を列挙するメソッドを作成します。</span><span class="sxs-lookup"><span data-stu-id="22586-162">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="22586-163">列挙子が作成されると、<xref:System.Web.UI.ControlCollection.IsSynchronized%2A> プロパティがチェックされ、操作がスレッドセーフであるかどうかが確認されます。そうでない場合は、<xref:System.Web.UI.ControlCollection.SyncRoot%2A> プロパティを使用してオブジェクトを取得し、操作をスレッドセーフにします。</span><span class="sxs-lookup"><span data-stu-id="22586-163">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="22586-164">列挙が完了すると、<xref:System.Web.UI.ControlCollection.IsReadOnly%2A> プロパティの値が、含んでいるページの <xref:System.Web.UI.WebControls.Label> コントロールの <xref:System.Web.UI.WebControls.Label.Text%2A> プロパティとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="22586-164">When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.ControlCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22586-165"><see cref="T:System.Web.UI.ControlCollection" /> オブジェクトの同期がとられているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="22586-165">Gets a value indicating whether the <see cref="T:System.Web.UI.ControlCollection" /> object is synchronized.</span></span></summary>
        <value><span data-ttu-id="22586-166">このプロパティは常に <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="22586-166">This property is always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="22586-167">次のコード例では、<xref:System.Web.UI.WebControls.Button> コントロールの <xref:System.Web.UI.ControlCollection> コレクションを通じて、`myButton`を列挙するメソッドを作成します。</span><span class="sxs-lookup"><span data-stu-id="22586-167">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="22586-168">列挙子が作成されると、<xref:System.Web.UI.ControlCollection.IsSynchronized%2A> プロパティがチェックされ、操作がスレッドセーフであるかどうかが確認されます。そうでない場合は、<xref:System.Web.UI.ControlCollection.SyncRoot%2A> プロパティを使用してオブジェクトを取得し、操作をスレッドセーフにします。</span><span class="sxs-lookup"><span data-stu-id="22586-168">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="22586-169">列挙が完了すると、<xref:System.Web.UI.ControlCollection.IsReadOnly%2A> プロパティの値が、含んでいるページの <xref:System.Web.UI.WebControls.Label> コントロールの <xref:System.Web.UI.WebControls.Label.Text%2A> プロパティとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="22586-169">When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Control this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Control ^ default[int] { System::Web::UI::Control ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.Control" Usage="System.Web.UI.ControlCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22586-170"><see cref="T:System.Web.UI.ControlCollection" /> 内のサーバー コントロールの位置。</span><span class="sxs-lookup"><span data-stu-id="22586-170">The location of the server control in the <see cref="T:System.Web.UI.ControlCollection" />.</span></span></param>
        <summary><span data-ttu-id="22586-171"><see cref="T:System.Web.UI.ControlCollection" /> オブジェクトの指定されたインデックス位置にあるサーバー コントロールへの参照を取得します。</span><span class="sxs-lookup"><span data-stu-id="22586-171">Gets a reference to the server control at the specified index location in the <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <value><span data-ttu-id="22586-172">コントロールへの参照。</span><span class="sxs-lookup"><span data-stu-id="22586-172">The reference to the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="22586-173">次のコード例では、<xref:System.Web.UI.ControlCollection.Item%2A> プロパティを使用して、<xref:System.Web.UI.ControlCollection.Remove%2A> メソッドの呼び出しで削除される子コントロールのインデックス位置を指定します。</span><span class="sxs-lookup"><span data-stu-id="22586-173">The following code example uses the <xref:System.Web.UI.ControlCollection.Item%2A> property to specify the index location of a child control that is removed in a <xref:System.Web.UI.ControlCollection.Remove%2A> method call.</span></span> <span data-ttu-id="22586-174">これは、`myButton.Controls.Remove` 構文によって実行されます。</span><span class="sxs-lookup"><span data-stu-id="22586-174">This is performed by the `myButton.Controls.Remove` syntax.</span></span>  
  
 [!code-aspx-csharp[ControlCollection_ReSubmit_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlCollection_ReSubmit_2/CS/controlcollection_copyto.cs.aspx#1)]
 [!code-aspx-vb[ControlCollection_ReSubmit_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlCollection_ReSubmit_2/VB/controlcollection_copyto.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="22586-175"><paramref name="index" /> パラメーターが 0 未満か、<see cref="P:System.Web.UI.ControlCollection.Count" /> 以上です。</span><span class="sxs-lookup"><span data-stu-id="22586-175">The <paramref name="index" /> parameter is less than zero or greater than or equal to <see cref="P:System.Web.UI.ControlCollection.Count" />.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Control Owner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control Owner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.Owner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Owner As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Control ^ Owner { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Web.UI.Control" Usage="System.Web.UI.ControlCollection.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22586-176"><see cref="T:System.Web.UI.ControlCollection" /> オブジェクトが属する ASP.NET サーバー コントロールを取得します。</span><span class="sxs-lookup"><span data-stu-id="22586-176">Gets the ASP.NET server control to which the <see cref="T:System.Web.UI.ControlCollection" /> object belongs.</span></span></summary>
        <value><span data-ttu-id="22586-177"><see cref="T:System.Web.UI.Control" /> が属する <see cref="T:System.Web.UI.ControlCollection" />。</span><span class="sxs-lookup"><span data-stu-id="22586-177">The <see cref="T:System.Web.UI.Control" /> to which the <see cref="T:System.Web.UI.ControlCollection" /> belongs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="22586-178">次のコード例は、コレクションのインスタンスが作成されたときに、<xref:System.Web.UI.ControlCollection.%23ctor%2A> メソッドをオーバーライドして、(<xref:System.Web.UI.ControlCollection.Owner%2A> プロパティの名前を含む) メッセージをトレースログに書き込むカスタム <xref:System.Web.UI.ControlCollection> クラスです。</span><span class="sxs-lookup"><span data-stu-id="22586-178">The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the <xref:System.Web.UI.ControlCollection.%23ctor%2A> method to write messages (which include the name of the <xref:System.Web.UI.ControlCollection.Owner%2A> property) to the trace log when an instance of the collection is created.</span></span> <span data-ttu-id="22586-179">この例を使用するには、ページまたはアプリケーションのトレースを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="22586-179">You must enable tracing for the page or application for this example to work.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/cs/controlcollection_7.cs#1)]
 [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_CTor_Owner/VB/controlcollection_7.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Web.UI.Control value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Web.UI.Control value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Web::UI::Control ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Web.UI.Control -&gt; unit&#xA;override this.Remove : System.Web.UI.Control -&gt; unit" Usage="controlCollection.Remove value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="22586-180">削除されるサーバー コントロール。</span><span class="sxs-lookup"><span data-stu-id="22586-180">The server control to be removed.</span></span></param>
        <summary><span data-ttu-id="22586-181">親サーバー コントロールの <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトから、指定したサーバー コントロールを削除します。</span><span class="sxs-lookup"><span data-stu-id="22586-181">Removes the specified server control from the parent server control's <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22586-182">インデックス位置からコントロールを削除するには、<xref:System.Web.UI.ControlCollection.RemoveAt%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="22586-182">To remove a control from an index location, use the <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22586-183">次のコード例では、<xref:System.Web.UI.ControlCollection.Remove%2A> メソッドを使用して、`myButton` サーバーコントロールから子コントロールを削除します。</span><span class="sxs-lookup"><span data-stu-id="22586-183">The following code example uses the <xref:System.Web.UI.ControlCollection.Remove%2A> method to delete a child control from the `myButton` server control.</span></span> <span data-ttu-id="22586-184">まず、このコードでは、<xref:System.Web.UI.ControlCollection.Contains%2A> メソッドを使用して、`myChildControl` が <xref:System.Web.UI.ControlCollection> オブジェクトに含まれているかどうかを確認し、存在する場合は削除します。</span><span class="sxs-lookup"><span data-stu-id="22586-184">First the code uses the <xref:System.Web.UI.ControlCollection.Contains%2A> method to determine whether the `myChildControl` is contained in the <xref:System.Web.UI.ControlCollection> object, and, if it is, removes it.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#4)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" />
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="controlCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="22586-185">コレクションから削除されるサーバー コントロールの序数インデックス。</span><span class="sxs-lookup"><span data-stu-id="22586-185">The ordinal index of the server control to be removed from the collection.</span></span></param>
        <summary><span data-ttu-id="22586-186"><see cref="T:System.Web.UI.ControlCollection" /> オブジェクトから、指定したインデックス位置にある子コントロールを削除します。</span><span class="sxs-lookup"><span data-stu-id="22586-186">Removes a child control, at the specified index location, from the <see cref="T:System.Web.UI.ControlCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="22586-187">値に基づいてコレクションからコントロールを削除するには、<xref:System.Web.UI.ControlCollection.Remove%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="22586-187">To remove a control from the collection based on its value, use the <xref:System.Web.UI.ControlCollection.Remove%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="22586-188">次のコード例では、<xref:System.Web.UI.ControlCollection.RemoveAt%2A> メソッドを使用して、`myButton` サーバーコントロールから子コントロールを削除します。</span><span class="sxs-lookup"><span data-stu-id="22586-188">The following code example uses the <xref:System.Web.UI.ControlCollection.RemoveAt%2A> method to delete a child control from the `myButton` server control.</span></span> <span data-ttu-id="22586-189">メソッド呼び出しでは、最初にコントロールが削除されるインデックス位置として1を指定します。</span><span class="sxs-lookup"><span data-stu-id="22586-189">The method call first specifies an index location of 1 from which the control is deleted.</span></span> <span data-ttu-id="22586-190">この例では、その場所にあるコントロールが <xref:System.Web.UI.ControlCollection> コレクションから削除されたことを示すテキストメッセージを含むページに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="22586-190">The example then writes to the containing page a text message saying that the control at that location has been deleted from the <xref:System.Web.UI.ControlCollection> collection.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#5)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="22586-191"><see cref="T:System.Web.UI.ControlCollection" /> が読み取り専用の場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="22586-191">Thrown if the <see cref="T:System.Web.UI.ControlCollection" /> is read-only.</span></span></exception>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ControlCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.ControlCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="22586-192">コントロールのコレクションへのアクセスを同期するために使用するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="22586-192">Gets an object that can be used to synchronize access to the collection of controls.</span></span></summary>
        <value><span data-ttu-id="22586-193">コレクションを同期するために使用する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="22586-193">The <see cref="T:System.Object" /> used to synchronize the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="22586-194">次のコード例では、<xref:System.Web.UI.WebControls.Button> コントロールの <xref:System.Web.UI.ControlCollection> コレクションを通じて、`myButton`を列挙するメソッドを作成します。</span><span class="sxs-lookup"><span data-stu-id="22586-194">The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`.</span></span> <span data-ttu-id="22586-195">列挙子が作成されると、<xref:System.Web.UI.ControlCollection.IsSynchronized%2A> プロパティがチェックされ、操作がスレッドセーフであるかどうかが確認されます。そうでない場合は、<xref:System.Web.UI.ControlCollection.SyncRoot%2A> プロパティを使用してオブジェクトを取得し、操作をスレッドセーフにします。</span><span class="sxs-lookup"><span data-stu-id="22586-195">When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe.</span></span> <span data-ttu-id="22586-196">列挙が完了すると、<xref:System.Web.UI.ControlCollection.IsReadOnly%2A> プロパティの値が、含んでいるページの <xref:System.Web.UI.WebControls.Label> コントロールの <xref:System.Web.UI.WebControls.Label.Text%2A> プロパティとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="22586-196">When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.</span></span>  
  
 [!code-csharp[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/CS/controlcollection1_cs.aspx#2)]
 [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ControlCollection_NewSamples/VB/controlcollection1_vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
      </Docs>
    </Member>
  </Members>
</Type>
