<Type Name="Timer" FullName="System.Web.UI.Timer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8fe5e0206fd3567fec972ba89c5dea1c13c2d02f" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78758107" /></Metadata><TypeSignature Language="C#" Value="public class Timer : System.Web.UI.Control, System.Web.UI.IPostBackEventHandler, System.Web.UI.IScriptControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.Web.UI.Control implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.IScriptControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Control&#xA;Implements IPostBackEventHandler, IScriptControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::Web::UI::Control, System::Web::UI::IPostBackEventHandler, System::Web::UI::IScriptControl" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Control&#xA;    interface IPostBackEventHandler&#xA;    interface IScriptControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IScriptControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Tick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.TimerDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.Timer.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.TimerDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>非同期または同期の Web ページのポストバックを定義された間隔で実行します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#introduction)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.Timer> コントロールを使用すると、指定した間隔でポストバックを実行できます。 <xref:System.Web.UI.UpdatePanel> コントロールのトリガーとして <xref:System.Web.UI.Timer> コントロールを使用すると、非同期の部分ページ更新を使用して <xref:System.Web.UI.UpdatePanel> コントロールが更新されます。 <xref:System.Web.UI.Timer> コントロールを使用するには、Web ページに <xref:System.Web.UI.ScriptManager> オブジェクトを含める必要があります。  
  
 <xref:System.Web.UI.Timer> コントロールを使用して、<xref:System.Web.UI.UpdatePanel> コントロール内にタイマーを含めることによって <xref:System.Web.UI.UpdatePanel> コントロールを更新します。 または、タイマーを <xref:System.Web.UI.UpdatePanel> コントロールの外側に配置し、タイマーをトリガーとして設定することもできます。  
  
 Web ページに <xref:System.Web.UI.Timer> コントロールを含め、<xref:System.Web.UI.UpdatePanel> コントロールのトリガーとして設定しないことで、完全な Web ページのポストバックを開始することもできます。  
  
 <xref:System.Web.UI.Timer.Tick> イベントのイベントハンドラーを作成することによって、タイマー間隔が経過したときにサーバーコードを実行できます。 イベントハンドラーには、<xref:System.Web.UI.Timer> コントロールの動作を動的に調整するコードを含めることができます。  
  
 ポストバックを実行する頻度を指定するには、<xref:System.Web.UI.Timer.Interval%2A> プロパティを設定します。 <xref:System.Web.UI.Timer> をオンまたはオフにするには、<xref:System.Web.UI.Timer.Enabled%2A> プロパティを設定します。  
  
> [!NOTE]
>  <xref:System.Web.UI.Timer> コントロールが Web サーバーにポストバックするタイミングの精度は、ブラウザーで実行されている ECMAScript (JavaScript) `window.setTimeout` 関数の精度によって異なります。  
  
 <xref:System.Web.UI.Timer.Interval%2A> プロパティは、ミリ秒単位で定義されます。 次のポストバックが開始される前に少なくとも1つの非同期ポストバックを完了できるように、<xref:System.Web.UI.Timer.Interval%2A> プロパティを値に設定する必要があります。 <xref:System.Web.UI.Timer> コントロールが <xref:System.Web.UI.UpdatePanel> コントロールの外部にある場合、<xref:System.Web.UI.UpdatePanel> コントロールのコンテンツが更新されても、タイマーは引き続き実行されます。 以前のポストバックが処理されている間に新しいポストバックが開始された場合、最初のポストバックはキャンセルされます。 既定値は6万ミリ秒 (60 秒) です。  
  
> [!NOTE]
>  <xref:System.Web.UI.Timer.Interval%2A> プロパティに小さい値を指定して <xref:System.Web.UI.Timer> コントロールを追加すると、Web サーバーとの間で大量のトラフィックが発生する可能性があります。 必要に応じてコンテンツを更新するには、<xref:System.Web.UI.Timer> コントロールを使用します。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:Timer  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    Interval="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnTick="Tick event handler"  
    OnUnload="Unload handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## Examples  
 次の例は、ランダムに生成された株価と株価が生成された時刻を表示する <xref:System.Web.UI.UpdatePanel> コントロールを示しています。 <xref:System.Web.UI.Timer> コントロールは、<xref:System.Web.UI.UpdatePanel> コントロールのコンテンツを10秒ごとに更新します。  
  
> [!NOTE]
>  この例では、タイマー間隔を10秒に設定して、この例を実行するときに、結果を表示するために長い時間待機する必要がないようにします。 各タイマー間隔はネットワークトラフィックを発生させるポストバックを発生させるため、実稼働アプリケーションでは、アプリケーションにとって実用的な最長時間に間隔を設定する必要があります。  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Timer" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.Timer" /> コントロールが、<see cref="P:System.Web.UI.Timer.Interval" /> プロパティで指定されたミリ秒単位の時間後にサーバーへのポストバックを開始するかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.Timer" /> がポストバックを開始する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Timer> コントロールのオンとオフを切り替えるには、<xref:System.Web.UI.Timer.Enabled%2A> プロパティを使用します。 <xref:System.Web.UI.Timer.Enabled%2A> を `true`に設定すると、Web ページが表示されたときに <xref:System.Web.UI.Timer> コントロールがタイマーのカウントダウンを開始します。  
  
 ポストバック時には、<xref:System.Web.UI.Timer.Enabled%2A> プロパティでプロパティの値を変更できます。また、ブラウザーで Web ページのコンテンツを表示すると、変更が反映されます。 同じポストバック中に <xref:System.Web.UI.Timer.Enabled%2A> プロパティを変更して元の値に戻すと、変更が行われなかったかのように <xref:System.Web.UI.Timer> コントロールが実行されます。  
  
   
  
## Examples  
 次の例は、ランダムに生成された株価と株価が生成された時刻を表示する <xref:System.Web.UI.UpdatePanel> コントロールを示しています。 既定では、<xref:System.Web.UI.Timer> コントロールは、<xref:System.Web.UI.UpdatePanel> コントロールのコンテンツを10秒ごとに更新します。 ユーザーは、60秒ごとに、またはまったくない株価を10秒ごとに更新することができます。 ユーザーが株価を更新しないことを決定した場合、<xref:System.Web.UI.Timer.Enabled%2A> プロパティは `false`に設定されます。  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptDescriptors">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.GetScriptDescriptors" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ GetScriptDescriptors();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptDescriptors : unit -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;&#xA;override this.GetScriptDescriptors : unit -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;" Usage="timer.GetScriptDescriptors " />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor)" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptDescriptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.Timer/&lt;GetScriptDescriptors&gt;d__22))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.Timer/&lt;GetScriptDescriptors&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Timer" /> オブジェクトから、ブラウザーにタイマー ロジックを実装するクライアント コンポーネントに渡されるプロパティを取得します。</summary>
        <returns><see cref="T:System.Web.UI.ScriptDescriptor" /> 型の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Timer.GetScriptDescriptors%2A> メソッドは、<xref:System.Web.UI.Timer> クラスのインスタンスから <xref:System.Web.UI.ScriptDescriptor> オブジェクトに <xref:System.Web.UI.Timer.Interval%2A> および <xref:System.Web.UI.Timer.Enabled%2A> プロパティを追加します。 クライアントコンポーネントは、値にアクセスし、スクリプト内の対応する値を設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptReferences">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetScriptReferences () As IEnumerable(Of ScriptReference)" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ GetScriptReferences();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;&#xA;override this.GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;" Usage="timer.GetScriptReferences " />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function GetScriptReferences () As IEnumerable(Of ScriptReference)" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptReferences</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.Timer/&lt;GetScriptReferences&gt;d__23))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.Timer/&lt;GetScriptReferences&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Timer" /> コントロールのクライアント スクリプトを取得します。</summary>
        <returns><see cref="T:System.Web.UI.ScriptReference" /> コントロールのクライアント スクリプトが含まれる <see cref="T:System.Web.UI.Timer" /> オブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : int with get, set" Usage="System.Web.UI.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(60000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ポストバックが開始されるまでのミリ秒単位の待機時間を取得または設定します。</summary>
        <value>ポストバックが開始されるまでのミリ秒単位の待機時間。 既定値は 6万 (60 秒) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Timer.Interval%2A> プロパティを使用して、<xref:System.Web.UI.Timer> コントロールがサーバーへのポストバックを開始する頻度を設定します。 ポストバック後にサーバーコードの <xref:System.Web.UI.Timer.Interval%2A> プロパティの値を変更できます。たとえば、<xref:System.Web.UI.Timer.Tick> イベントのイベントハンドラーなどです。 <xref:System.Web.UI.Timer> コントロールが Web サーバーにポストバックするタイミングの精度は、ブラウザーで実行される ECMAScript (JavaScript) `window.setTimeout` 関数の精度によって異なります。  
  
> [!NOTE]
>  <xref:System.Web.UI.Timer.Interval%2A> プロパティを小さい値に設定すると、Web サーバーとの間で大量のトラフィックが発生する可能性があります。 必要に応じてコンテンツを更新するには、<xref:System.Web.UI.Timer> コントロールを使用します。  
  
 <xref:System.Web.UI.Timer.Interval%2A> プロパティの値を変更すると、ブラウザーで実行されている ECMAScript のタイミングコードは、更新が表示されるときにリセットされます。  
  
   
  
## Examples  
 次の例は、ランダムに生成された株価と株価が生成された時刻を表示する <xref:System.Web.UI.UpdatePanel> コントロールを示しています。 既定では、<xref:System.Web.UI.Timer> コントロールは、<xref:System.Web.UI.UpdatePanel> コントロールのコンテンツを10秒ごとに更新します。 ユーザーは、60秒ごとに、またはまったくない株価を10秒ごとに更新することができます。 <xref:System.Web.UI.Timer.Interval%2A> プロパティは、ユーザーの選択に設定されます。  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された値がゼロ以下です。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="timer.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> コントロールの <see cref="T:System.Web.UI.Timer" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTick : EventArgs -&gt; unit&#xA;override this.OnTick : EventArgs -&gt; unit" Usage="timer.OnTick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary><see cref="E:System.Web.UI.Timer.Tick" /> コントロールの <see cref="T:System.Web.UI.Timer" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Timer.Tick> イベントは、Web ページがレンダリングされた後、または前の <xref:System.Web.UI.Timer.Tick> イベントが発生してから、<xref:System.Web.UI.Timer.Interval%2A> プロパティで指定されたミリ秒数が経過したときに発生します。  
  
   
  
## Examples  
 次の例は、ランダムに生成された株価と株価が生成された時刻を表示する <xref:System.Web.UI.UpdatePanel> コントロールを示しています。 <xref:System.Web.UI.Timer> コントロールは、<xref:System.Web.UI.UpdatePanel> コントロールのコンテンツを10秒ごとに更新します。 株価と時間は、<xref:System.Web.UI.Timer.Tick> イベントのハンドラーで設定されます。  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="timer.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡される省略可能な引数を持つ文字列。</param>
        <summary>ページがサーバーにポストされるときに <see cref="T:System.Web.UI.Timer" /> コントロールが <see cref="E:System.Web.UI.Timer.Tick" /> イベントを発生させることができるようにします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="timer.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">ブラウザーに <see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールのコンテンツをレンダリングするために使用する <see cref="T:System.Web.UI.Timer" /> オブジェクト。</param>
        <summary>指定された <see cref="T:System.Web.UI.Timer" /> オブジェクトを使用して、ブラウザーに <see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールのコンテンツをレンダリングします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit&#xA;override this.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit" Usage="timer.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡される省略可能な引数を持つ文字列。</param>
        <summary>ページがサーバーにポストされるときに <see cref="E:System.Web.UI.Timer.Tick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.Timer> のインスタンスが <xref:System.Web.UI.IPostBackEventHandler> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptControl.GetScriptDescriptors">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; IScriptControl.GetScriptDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; System.Web.UI.IScriptControl.GetScriptDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors" />
      <MemberSignature Language="VB.NET" Value="Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor) Implements IScriptControl.GetScriptDescriptors" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ System.Web.UI.IScriptControl.GetScriptDescriptors() = System::Web::UI::IScriptControl::GetScriptDescriptors;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IScriptControl.GetScriptDescriptors : unit -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;&#xA;override this.System.Web.UI.IScriptControl.GetScriptDescriptors : unit -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;" Usage="timer.System.Web.UI.IScriptControl.GetScriptDescriptors " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptDescriptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Timer" /> オブジェクトから、クライアント コンポーネントに渡されるプロパティを取得します。</summary>
        <returns><see cref="T:System.Web.UI.ScriptDescriptor" /> 型の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.Timer> のインスタンスが <xref:System.Web.UI.IScriptControl> インターフェイスにキャストされる場合のみ、使用できます。  
  
 <xref:System.Web.UI.Timer.GetScriptDescriptors%2A> メソッドは、<xref:System.Web.UI.Timer> クラスのインスタンスから <xref:System.Web.UI.ScriptDescriptor> オブジェクトに <xref:System.Web.UI.Timer.Interval%2A> および <xref:System.Web.UI.Timer.Enabled%2A> プロパティを追加します。 クライアントコンポーネントは、値を取得し、スクリプト内の対応する値を設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptControl.GetScriptReferences">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; IScriptControl.GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; System.Web.UI.IScriptControl.GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Function GetScriptReferences () As IEnumerable(Of ScriptReference) Implements IScriptControl.GetScriptReferences" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ System.Web.UI.IScriptControl.GetScriptReferences() = System::Web::UI::IScriptControl::GetScriptReferences;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IScriptControl.GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;&#xA;override this.System.Web.UI.IScriptControl.GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;" Usage="timer.System.Web.UI.IScriptControl.GetScriptReferences " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptReferences</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.Timer" /> コントロールのクライアント スクリプトを取得します。</summary>
        <returns><see cref="T:System.Web.UI.ScriptReference" /> コントロールのクライアント スクリプトが含まれる <see cref="T:System.Web.UI.Timer" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.Timer> のインスタンスが <xref:System.Web.UI.IScriptControl> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; Tick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler(Of EventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;EventArgs ^&gt; ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler&lt;EventArgs&gt; " Usage="member this.Tick : System.EventHandler&lt;System.EventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.Timer.Interval" /> プロパティで指定されたミリ秒単位の時間が経過したときに発生し、ページがサーバーにポストされます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Timer.Tick> イベントは、Web ページが最後にレンダリングされた後、または前の <xref:System.Web.UI.Timer.Tick> イベントが発生してから、<xref:System.Web.UI.Timer.Interval%2A> プロパティで指定されたミリ秒数が経過したときに発生します。 各ポストバック中にアクションを実行する必要がある場合は、<xref:System.Web.UI.Timer.Tick> イベントを処理します。  
  
   
  
## Examples  
 次の例は、ランダムに生成された株価と株価が生成された時刻を表示する <xref:System.Web.UI.UpdatePanel> コントロールを示しています。 <xref:System.Web.UI.Timer> コントロールは、<xref:System.Web.UI.UpdatePanel> コントロールのコンテンツを10秒ごとに更新します。 株価と時間は、<xref:System.Web.UI.Timer.Tick> イベントのハンドラーで設定されます。  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Timer.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.Timer.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.Control.Visible" /> クラスの <see cref="T:System.Web.UI.Control" /> プロパティをオーバーライドして、この値が設定されないようにします。</summary>
        <value>コントロールがページにレンダリングされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの設定を防ぐために、`Visible` プロパティは <xref:System.Web.UI.Timer> クラスでオーバーライドされます。 `Visible` プロパティは、<xref:System.Web.UI.Timer.Enabled%2A> が `false`に設定されている場合でも、<xref:System.Web.UI.Timer> クラスのクライアントコンポーネントが Web ページに含まれている場合に `true` を返します。 `Visible` プロパティは、`Visible` プロパティが `false`に設定されている <xref:System.Web.UI.UpdatePanel> コントロールなど、コンテナー内にある場合に `false` を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">値が <c>Visible</c> プロパティに代入されます。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
