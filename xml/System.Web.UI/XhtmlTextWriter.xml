<Type Name="XhtmlTextWriter" FullName="System.Web.UI.XhtmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="476b13e882d43a71da91624ba8105b1d87d84a1b" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77244201" /></Metadata><TypeSignature Language="C#" Value="public class XhtmlTextWriter : System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XhtmlTextWriter extends System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.XhtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XhtmlTextWriter&#xA;Inherits HtmlTextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XhtmlTextWriter : System::Web::UI::HtmlTextWriter" />
  <TypeSignature Language="F#" Value="type XhtmlTextWriter = class&#xA;    inherit HtmlTextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlTextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a814c-101">XHTML から派生した拡張ハイパーテキスト マークアップ言語 (XHTML) モジュールのすべてのバリエーションを含む XHTML 固有文字が、モバイル デバイス用の ASP.NET サーバー コントロールの出力ストリームに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="a814c-101">Writes Extensible Hypertext Markup Language (XHTML)-specific characters, including all variations of XHTML modules that derive from XHTML, to the output stream for an ASP.NET server control for mobile devices.</span></span> <span data-ttu-id="a814c-102">ASP.NET ページとサーバー コントロールにカスタム XHTML レンダリングを行う場合には <see cref="T:System.Web.UI.XhtmlTextWriter" /> クラスをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="a814c-102">Override the <see cref="T:System.Web.UI.XhtmlTextWriter" /> class to provide custom XHTML rendering for ASP.NET pages and server controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a814c-103">XHTML は、HTML 4.1 に基づく XML 準拠のマークアップ言語で、複数のデバイスの種類に適した Web サイトを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="a814c-103">XHTML is an XML-compliant markup language, based on HTML 4.1, which allows you to create Web sites that are suitable for multiple device types.</span></span> <span data-ttu-id="a814c-104">HTML によって提供される厳密な要素のガイドラインを使用して、HTML によって提供される使いやすさと、幅広い形式およびスタイルのオプションを持つマークアップ言語を生成し、マークアップタグのあいまいさを減らすことができます。</span><span class="sxs-lookup"><span data-stu-id="a814c-104">It merges the ease of use provided by HTML with the strict element guidelines provided by XML to produce a markup language with a wide range of format and style options, and with reduced markup tag ambiguity.</span></span> <span data-ttu-id="a814c-105"><xref:System.Web.UI.XhtmlTextWriter> クラスは、ASP.NET サーバーコントロールが XHTML コンテンツをクライアントに表示するときに使用する書式設定機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="a814c-105">The <xref:System.Web.UI.XhtmlTextWriter> class provides formatting capabilities that ASP.NET server controls use when rendering XHTML content to clients.</span></span> <span data-ttu-id="a814c-106"><xref:System.Web.UI.XhtmlTextWriter.SetDocType%2A> メソッドを使用して、テキストライターがレンダリングする XHTML の種類を指定できます。</span><span class="sxs-lookup"><span data-stu-id="a814c-106">You can use the <xref:System.Web.UI.XhtmlTextWriter.SetDocType%2A> method to specify which type of XHTML the text writer renders.</span></span> <span data-ttu-id="a814c-107">サポートされているドキュメントの種類は、<xref:System.Web.UI.XhtmlMobileDocType> 列挙体で定義されています。</span><span class="sxs-lookup"><span data-stu-id="a814c-107">Supported document types are defined in the <xref:System.Web.UI.XhtmlMobileDocType> enumeration.</span></span>  
  
 <span data-ttu-id="a814c-108"><xref:System.Web.UI.XhtmlTextWriter> クラスは、要素の2つの属性セットをレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="a814c-108">The <xref:System.Web.UI.XhtmlTextWriter> class renders two sets of attributes for elements.</span></span> <span data-ttu-id="a814c-109">一方のセットは、<xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> プロパティで参照される共通属性のコレクションです。</span><span class="sxs-lookup"><span data-stu-id="a814c-109">One set is a collection of common attributes, as referenced in the <xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> property.</span></span> <span data-ttu-id="a814c-110">2番目のセットは、<xref:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes%2A> プロパティで参照される、要素固有の属性のコレクションです。</span><span class="sxs-lookup"><span data-stu-id="a814c-110">The second set is a collection of element-specific attributes, as referenced in the <xref:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes%2A> property.</span></span> <span data-ttu-id="a814c-111">レンダリングされる要素とスタイルの詳細については、 [World Wide Web コンソーシアム (W3C) の Web サイト](https://go.microsoft.com/fwlink/?linkid=37125)にある XHTML モジュール化の仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a814c-111">For more information on the elements and styles that are rendered, see the XHTML modularization specification at the [World Wide Web Consortium (W3C) Web site](https://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 <span data-ttu-id="a814c-112"><xref:System.Web.UI.XhtmlTextWriter> クラスのメンバーと任意の派生クラスを使用して、カスタムの XHTML ページアダプターまたはクラスアダプターで使用するカスタムテキストライターを作成できます。</span><span class="sxs-lookup"><span data-stu-id="a814c-112">You can use the members of the <xref:System.Web.UI.XhtmlTextWriter> class and any derived classes to create custom text writers to use in custom XHTML page adapters or class adapters.</span></span> <span data-ttu-id="a814c-113"><xref:System.Web.UI.XhtmlTextWriter> クラスの標準動作をオーバーライドする派生クラスを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="a814c-113">You can also create derived classes that override the standard behavior of the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 <span data-ttu-id="a814c-114">既定では、HTML 4.0 をサポートするブラウザーで作業している場合、ASP.NET ページとコントロールは、XHTML 1.1 standard と互換性のあるマークアップを表示します。</span><span class="sxs-lookup"><span data-stu-id="a814c-114">By default, when you are working with browsers that support HTML 4.0, ASP.NET pages and controls render markup that is compatible with the XHTML 1.1 standard.</span></span> <span data-ttu-id="a814c-115">詳細については、「 [Visual Studio と ASP.NET の XHTML 標準](https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a814c-115">For more information, see [XHTML Standards in Visual Studio and ASP.NET](https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100)).</span></span>  
  
 <span data-ttu-id="a814c-116">XHTML マークアップをレンダリングしないように ASP.NET を構成していない場合、<xref:System.Web.UI.HtmlTextWriter> は XHTML を出力します。</span><span class="sxs-lookup"><span data-stu-id="a814c-116">The <xref:System.Web.UI.HtmlTextWriter> outputs XHTML unless you configure ASP.NET specifically to not render XHTML markup.</span></span> <span data-ttu-id="a814c-117">詳細については、「[方法: ASP.NET Web サイトで XHTML レンダリングを構成する](https://docs.microsoft.com/previous-versions/aspnet/ms178159(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a814c-117">For more information, see [How to: Configure XHTML Rendering in ASP.NET Web Sites](https://docs.microsoft.com/previous-versions/aspnet/ms178159(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a814c-118">このセクションのコード例には、4つの部分が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a814c-118">The code example in this section contains four parts.</span></span> <span data-ttu-id="a814c-119">最初の例では、派生クラスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a814c-119">The first example demonstrates how to create a derived class.</span></span> <span data-ttu-id="a814c-120">2番目のコード例は、カスタムコントロールを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a814c-120">The second code example demonstrates how to create a custom control.</span></span> <span data-ttu-id="a814c-121">3番目のコード例は、カスタムコントロールの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a814c-121">The third code example demonstrates how to use the custom control.</span></span> <span data-ttu-id="a814c-122">4番目のコード例では、カスタムコントロールを実行するために必要なコードを提供します。</span><span class="sxs-lookup"><span data-stu-id="a814c-122">The fourth code example provides the code that is required to run the custom control.</span></span>  
  
 <span data-ttu-id="a814c-123">次のコード例は、<xref:System.Web.UI.XhtmlTextWriter> クラスから派生したカスタムクラスを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a814c-123">The following code example demonstrates how to create a custom class that is derived from the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span> <span data-ttu-id="a814c-124">これには、<xref:System.Web.UI.HtmlTextWriter> クラスから直接または間接的に継承するすべてのクラスの標準である2つのコンストラクターがあります。</span><span class="sxs-lookup"><span data-stu-id="a814c-124">It has two constructors, which is standard for all classes that inherit directly or indirectly from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="a814c-125">最初のコンストラクターは、パラメーターとして <xref:System.IO.TextWriter> オブジェクトを受け取り、2番目のコンストラクターを呼び出して、次の2つのパラメーター値を渡します。</span><span class="sxs-lookup"><span data-stu-id="a814c-125">The first constructor takes a <xref:System.IO.TextWriter> object as a parameter and calls the second constructor, passing the following two parameter values:</span></span>  
  
-   <span data-ttu-id="a814c-126"><xref:System.IO.TextWriter> のインスタンスです。</span><span class="sxs-lookup"><span data-stu-id="a814c-126">The <xref:System.IO.TextWriter> instance.</span></span>  
  
-   <span data-ttu-id="a814c-127">XHTML テキストライターによって使用される既定の行インデントを定義する <xref:System.Web.UI.HtmlTextWriter.DefaultTabString?displayProperty=nameWithType> プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="a814c-127">The value of the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString?displayProperty=nameWithType> property, which defines the default line indentation that is used by the XHTML text writer.</span></span>  
  
 <span data-ttu-id="a814c-128">このコード例では、<xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> および <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> メソッドをオーバーライドして、テキストサイズと色のスタイルをそれぞれフィルター処理する方法も示しています。</span><span class="sxs-lookup"><span data-stu-id="a814c-128">This code example also shows how to override the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> methods to filter for text size and color style, respectively.</span></span> <span data-ttu-id="a814c-129">さらに、<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> および <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> メソッドをオーバーライドして、コントロールがレンダリングされる前後にテキスト文字列を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="a814c-129">Additionally, it overrides the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> and <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> methods to write a text string before and after a control has rendered.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#1)]  
  
 <span data-ttu-id="a814c-130">次のコード例は、`TestLabel` という名前のカスタム <xref:System.Web.UI.WebControls.Label> コントロールと、コントロールのコンテンツを XHTML としてレンダリングする `XhtmlTestLabelAdapter` という名前のカスタムアダプターを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a814c-130">The following code example demonstrates how to create a custom <xref:System.Web.UI.WebControls.Label> control named `TestLabel` and a custom adapter named `XhtmlTestLabelAdapter` that renders the content of the control as XHTML.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/cs/xhtmltextlabel.cs#1)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/VB/xhtmltestlabel.vb#1)]  
  
 <span data-ttu-id="a814c-131">ASP.NET Web ページでカスタムコントロール `TestLabel` を使用する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="a814c-131">The following code example demonstrates how to use the custom control `TestLabel` on an ASP.NET Web page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.XhtmlTextWriter_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/cs/xhtmltextlabel.aspx#4)]
 [!code-aspx-vb[System.Web.UI.XhtmlTextWriter_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/VB/xhtmltestlabel.aspx#4)]  
  
 <span data-ttu-id="a814c-132">前のコード例でカスタムコントロールを使用するには、次の `<controlAdapters>` 要素を2つのファイルのいずれかに追加します。</span><span class="sxs-lookup"><span data-stu-id="a814c-132">To use the custom control in the preceding code example, add the following `<controlAdapters>` element to one of two files.</span></span> <span data-ttu-id="a814c-133">このファイルは、.NET Framework 構成ディレクトリのサブフォルダーとして、特定のブラウザーのサブディレクトリにある、適切なコンピューター全体のファイルに追加できます。</span><span class="sxs-lookup"><span data-stu-id="a814c-133">You can add it to the appropriate machine-wide file in the subdirectory for a specific browser, as a subfolder of the .NET Framework configuration directory.</span></span> <span data-ttu-id="a814c-134">または、Web アプリケーションルートの下にある App_Browsers ディレクトリのカスタムブラウザーファイルに追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="a814c-134">Alternatively, you can add it to a custom browser file in the App_Browsers directory under the Web application root.</span></span>  
  
```  
<controlAdapters>  
   <adapter controlType="AspNet.Samples.TestLabel"  
   adapterType="AspNet.Samples.XhtmlTestLabelAdapter" />  
</controlAdapters>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/exc57y7e(v=vs.100)"><span data-ttu-id="a814c-135">ASP.NET と XHTML のコンプライアンス</span><span class="sxs-lookup"><span data-stu-id="a814c-135">ASP.NET and XHTML Compliance</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a814c-136"><see cref="T:System.Web.UI.XhtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a814c-136">Initializes a new instance of the <see cref="T:System.Web.UI.XhtmlTextWriter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XhtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XhtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.XhtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.XhtmlTextWriter" Usage="new System.Web.UI.XhtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a814c-137">XHTML コンテンツをレンダリングする <see cref="T:System.IO.TextWriter" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="a814c-137">A <see cref="T:System.IO.TextWriter" /> instance that renders the XHTML content.</span></span></param>
        <summary><span data-ttu-id="a814c-138"><see cref="T:System.Web.UI.XhtmlTextWriter" /> フィールドに指定されている行インデントを使用する、<see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a814c-138">Initializes a new instance of the <see cref="T:System.Web.UI.XhtmlTextWriter" /> class that uses the line indentation that is specified in the <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> field.</span></span> <span data-ttu-id="a814c-139">既定の行インデントを変更しない場合に <see cref="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter)" /> コンストラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="a814c-139">Use the <see cref="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter)" /> constructor if you do not want to change the default line indentation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a814c-140">パラメーターとして <xref:System.IO.TextWriter> オブジェクトを受け取る <xref:System.Web.UI.XhtmlTextWriter.%23ctor%2A> コンストラクターは、2つのパラメーター値を渡して2番目のコンストラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a814c-140">The <xref:System.Web.UI.XhtmlTextWriter.%23ctor%2A> constructor that takes a <xref:System.IO.TextWriter> object as a parameter calls the second constructor, passing two parameter values:</span></span>  
  
-   <span data-ttu-id="a814c-141"><xref:System.IO.TextWriter> のインスタンスです。</span><span class="sxs-lookup"><span data-stu-id="a814c-141">The <xref:System.IO.TextWriter> instance.</span></span>  
  
-   <span data-ttu-id="a814c-142"><xref:System.Web.UI.HtmlTextWriter.DefaultTabString> フィールドに指定された文字列値。 XHTML テキストライターによって使用されるタブ間隔を定義します。</span><span class="sxs-lookup"><span data-stu-id="a814c-142">The string value that is specified in the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field, which defines the tab spacing that is used by the XHTML text writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a814c-143">次のコード例は、2つのコンストラクターを作成する方法を示しています。これは、<xref:System.Web.UI.XhtmlTextWriter> クラスから派生したカスタムクラスの、<xref:System.Web.UI.HtmlTextWriter> クラスから直接的または間接的に派生したすべてのクラスの標準です。</span><span class="sxs-lookup"><span data-stu-id="a814c-143">The following code example demonstrates how to create the two constructors, which is standard for all classes that derive directly or indirectly from the <xref:System.Web.UI.HtmlTextWriter> class, for a custom class that is derived from the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XhtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XhtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.XhtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.XhtmlTextWriter" Usage="new System.Web.UI.XhtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a814c-144">XHTML コンテンツをレンダリングする <see cref="T:System.IO.TextWriter" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="a814c-144">A <see cref="T:System.IO.TextWriter" /> instance that renders the XHTML content.</span></span></param>
        <param name="tabString"><span data-ttu-id="a814c-145">行のインデントをレンダリングする際に使用される文字列。</span><span class="sxs-lookup"><span data-stu-id="a814c-145">The string used to render a line indentation.</span></span></param>
        <summary><span data-ttu-id="a814c-146">指定した行インデントを使用して <see cref="T:System.Web.UI.XhtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a814c-146">Initializes a new instance of the <see cref="T:System.Web.UI.XhtmlTextWriter" /> class with the specified line indentation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a814c-147">次のコード例は、2つのコンストラクターを作成する方法を示しています。これは、<xref:System.Web.UI.XhtmlTextWriter> クラスから派生したカスタムクラスの、<xref:System.Web.UI.HtmlTextWriter> クラスから直接的または間接的に派生したすべてのクラスの標準です。</span><span class="sxs-lookup"><span data-stu-id="a814c-147">The following code example demonstrates how to create the two constructors, which is standard for all classes that derive directly or indirectly from the <xref:System.Web.UI.HtmlTextWriter> class, for a custom class that is derived from the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member AddRecognizedAttribute : string * string -&gt; unit&#xA;override this.AddRecognizedAttribute : string * string -&gt; unit" Usage="xhtmlTextWriter.AddRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="a814c-148">属性を追加する XHTML 要素。</span><span class="sxs-lookup"><span data-stu-id="a814c-148">The XHTML element to add the attribute to.</span></span></param>
        <param name="attributeName"><span data-ttu-id="a814c-149">追加する属性。</span><span class="sxs-lookup"><span data-stu-id="a814c-149">The attribute to add.</span></span></param>
        <summary><span data-ttu-id="a814c-150">属性を XHTML 要素に追加します。</span><span class="sxs-lookup"><span data-stu-id="a814c-150">Adds an attribute to an XHTML element.</span></span> <span data-ttu-id="a814c-151"><see cref="T:System.Web.UI.XhtmlTextWriter" /> オブジェクトに対する要素固有属性のコレクションは、<see cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" /> プロパティによって参照されます。</span><span class="sxs-lookup"><span data-stu-id="a814c-151">The collection of element-specific attributes for the <see cref="T:System.Web.UI.XhtmlTextWriter" /> object is referenced by the <see cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a814c-152"><xref:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute%2A> メソッドを使用して、XHTML 要素に属性を追加します。</span><span class="sxs-lookup"><span data-stu-id="a814c-152">Use the <xref:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute%2A> method to add an attribute to an XHTML element.</span></span> <span data-ttu-id="a814c-153">追加した属性は、<xref:System.Web.UI.XhtmlTextWriter> オブジェクトによって認識され、表示できます。</span><span class="sxs-lookup"><span data-stu-id="a814c-153">The added attribute can then be recognized and rendered by the <xref:System.Web.UI.XhtmlTextWriter> object.</span></span> <span data-ttu-id="a814c-154">ライターが XHTML 要素の共通属性を表示しないようにするには、<xref:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="a814c-154">To prevent the writer from rendering a common attribute of an XHTML element, use the <xref:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CommonAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable CommonAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable CommonAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CommonAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ CommonAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommonAttributes : System.Collections.Hashtable" Usage="System.Web.UI.XhtmlTextWriter.CommonAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a814c-155"><see cref="T:System.Collections.Hashtable" /> オブジェクトに対するマークアップ タグの共通属性を格納している <see cref="T:System.Web.UI.XhtmlTextWriter" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a814c-155">Gets a <see cref="T:System.Collections.Hashtable" /> object containing common attributes of the markup tags for the <see cref="T:System.Web.UI.XhtmlTextWriter" /> object.</span></span></summary>
        <value><span data-ttu-id="a814c-156">共通属性を格納している <see cref="T:System.Collections.Hashtable" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a814c-156">A <see cref="T:System.Collections.Hashtable" /> object containing common attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a814c-157"><xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> コレクションには、XHTML 要素で許可され、<xref:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes%2A> プロパティでは抑制されない属性が含まれています。</span><span class="sxs-lookup"><span data-stu-id="a814c-157">The <xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> collection contains attributes that are allowed in XHTML elements and that are not suppressed in the <xref:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes%2A> property.</span></span> <span data-ttu-id="a814c-158">一般的な属性の詳細については、 [World Wide Web コンソーシアム (W3C) の Web サイト](https://go.microsoft.com/fwlink/?linkid=37125)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a814c-158">For more information on common attributes, see the [World Wide Web Consortium (W3C) Web site](https://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 <span data-ttu-id="a814c-159"><xref:System.Web.UI.XhtmlTextWriter> クラスの新しいインスタンスが作成されると、初期化される共通の属性は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="a814c-159">When a new instance of the <xref:System.Web.UI.XhtmlTextWriter> class is created, the common attributes that are initialized are:</span></span>  
  
-   `class`  
  
-   `id`  
  
-   `title`  
  
-   `xml:lang`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes" />
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
      </Docs>
    </Member>
    <Member MemberName="ElementSpecificAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable ElementSpecificAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable ElementSpecificAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ElementSpecificAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ ElementSpecificAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementSpecificAttributes : System.Collections.Hashtable" Usage="System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a814c-160">要素固有属性を格納している <see cref="T:System.Collections.Hashtable" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a814c-160">Gets a <see cref="T:System.Collections.Hashtable" /> object containing element-specific attributes.</span></span></summary>
        <value><span data-ttu-id="a814c-161">要素固有属性を格納している <see cref="T:System.Collections.Hashtable" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a814c-161">A <see cref="T:System.Collections.Hashtable" /> object containing element-specific attributes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a814c-162"><xref:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute%2A> メソッドを使用して、認識された属性を XHTML 要素に追加します。</span><span class="sxs-lookup"><span data-stu-id="a814c-162">Use the <xref:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute%2A> method to add recognized attributes to an XHTML element.</span></span> <span data-ttu-id="a814c-163">XHTML 要素の共通属性を削除するには、<xref:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="a814c-163">To remove common attributes on an XHTML element, use the <xref:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute%2A> method.</span></span>  
  
 <span data-ttu-id="a814c-164"><xref:System.Web.UI.XhtmlTextWriter> クラスの新しいインスタンスが作成されると、要素固有の属性の <xref:System.Collections.Hashtable> オブジェクトに、次の表に示す属性が設定されます。</span><span class="sxs-lookup"><span data-stu-id="a814c-164">When a new instance of the <xref:System.Web.UI.XhtmlTextWriter> class is created, the <xref:System.Collections.Hashtable> object of element-specific attributes is populated with the attributes shown in the following table.</span></span>  
  
|<span data-ttu-id="a814c-165">要素</span><span class="sxs-lookup"><span data-stu-id="a814c-165">Element</span></span>|<span data-ttu-id="a814c-166">属性</span><span class="sxs-lookup"><span data-stu-id="a814c-166">Attributes</span></span>|  
|-------------|----------------|  
|`<a>`|<span data-ttu-id="a814c-167">`accesskey`, `href`, `charset`, `hreflang`, `rel`, `type`, `rev`, `title`, `tabindex`</span><span class="sxs-lookup"><span data-stu-id="a814c-167">`accesskey`, `href`, `charset`, `hreflang`, `rel`, `type`, `rev`, `title`, `tabindex`</span></span>|  
|`<base>`|`href`|  
|`<blockquote>`|`cite`|  
|`<br>`|<span data-ttu-id="a814c-168">`id`、`class`、`title`</span><span class="sxs-lookup"><span data-stu-id="a814c-168">`id`, `class`, `title`</span></span>|  
|`<form>`|<span data-ttu-id="a814c-169">`action`、`method`、`enctype`</span><span class="sxs-lookup"><span data-stu-id="a814c-169">`action`, `method`, `enctype`</span></span>|  
|`<head>`|`xml:lang`|  
|`<html>`|<span data-ttu-id="a814c-170">`version`、`xml:lang`、`xmlns`</span><span class="sxs-lookup"><span data-stu-id="a814c-170">`version`, `xml:lang`, `xmlns`</span></span>|  
|`<img>`|<span data-ttu-id="a814c-171">`src`、`alt`、`width`、`longdesc`、`height`</span><span class="sxs-lookup"><span data-stu-id="a814c-171">`src`, `alt`, `width`, `longdesc`, `height`</span></span>|  
|`<input>`|<span data-ttu-id="a814c-172">`size`、`accesskey`、`title`、`name`、`type`、`disabled`、`value`、`src`、`checked`、`maxlength`、`tabindex`</span><span class="sxs-lookup"><span data-stu-id="a814c-172">`size`, `accesskey`, `title`, `name`, `type`, `disabled`, `value`, `src`, `checked`, `maxlength`, `tabindex`</span></span>|  
|`<label>`|<span data-ttu-id="a814c-173">`accesskey`, `for`</span><span class="sxs-lookup"><span data-stu-id="a814c-173">`accesskey`, `for`</span></span>|  
|`<li>`|`value`|  
|`<link>`|<span data-ttu-id="a814c-174">`hreflang`､`rev`、`type`、`charset`、`rel`、`href`、`media`</span><span class="sxs-lookup"><span data-stu-id="a814c-174">`hreflang`, `rev`, `type`, `charset`, `rel`, `href`, `media`</span></span>|  
|`<meta>`|<span data-ttu-id="a814c-175">`content`、`name`、`xml:lang`、`http-equiv`、`scheme`</span><span class="sxs-lookup"><span data-stu-id="a814c-175">`content`, `name`, `xml:lang`, `http-equiv`, `scheme`</span></span>|  
|`<object>`|<span data-ttu-id="a814c-176">`codebase`, `classid`, `data`, `standby`, `name`, `type`, `height`, `archive`, `declare`, `width`, `tabindex`, `codetype`</span><span class="sxs-lookup"><span data-stu-id="a814c-176">`codebase`, `classid`, `data`, `standby`, `name`, `type`, `height`, `archive`, `declare`, `width`, `tabindex`, `codetype`</span></span>|  
|`<ol>`|`start`|  
|`<optgroup>`|<span data-ttu-id="a814c-177">`label`, `disabled`</span><span class="sxs-lookup"><span data-stu-id="a814c-177">`label`, `disabled`</span></span>|  
|`<option>`|<span data-ttu-id="a814c-178">`selected`, `value`</span><span class="sxs-lookup"><span data-stu-id="a814c-178">`selected`, `value`</span></span>|  
|`<param>`|<span data-ttu-id="a814c-179">`id`、`name`、`valuetype`、`value`、`type`</span><span class="sxs-lookup"><span data-stu-id="a814c-179">`id`, `name`, `valuetype`, `value`, `type`</span></span>|  
|`<pre>`|`xml:space`|  
|`<q>`|`cite`|  
|`<select>`|<span data-ttu-id="a814c-180">`name`、`tabindex`、`disabled`、`multiple`、`size`</span><span class="sxs-lookup"><span data-stu-id="a814c-180">`name`, `tabindex`, `disabled`, `multiple`, `size`</span></span>|  
|`<style>`|<span data-ttu-id="a814c-181">`xml:lang`、`xml:space`、`type`、`title`、`media`</span><span class="sxs-lookup"><span data-stu-id="a814c-181">`xml:lang`, `xml:space`, `type`, `title`, `media`</span></span>|  
|`<table>`|<span data-ttu-id="a814c-182">`width`, `summary`</span><span class="sxs-lookup"><span data-stu-id="a814c-182">`width`, `summary`</span></span>|  
|`<textarea>`|<span data-ttu-id="a814c-183">`name`、`cols`、`accesskey`、`tabindex`、`rows`</span><span class="sxs-lookup"><span data-stu-id="a814c-183">`name`, `cols`, `accesskey`, `tabindex`, `rows`</span></span>|  
|`<td>`|<span data-ttu-id="a814c-184">`headers`, `align`, `rowspan`, `colspan`, `axis`, `scope`, `abbr`, `valign`</span><span class="sxs-lookup"><span data-stu-id="a814c-184">`headers`, `align`, `rowspan`, `colspan`, `axis`, `scope`, `abbr`, `valign`</span></span>|  
|`<th>`|<span data-ttu-id="a814c-185">`headers`, `align`, `rowspan`, `colspan`, `axis`, `scope`, `abbr`, `valign`</span><span class="sxs-lookup"><span data-stu-id="a814c-185">`headers`, `align`, `rowspan`, `colspan`, `axis`, `scope`, `abbr`, `valign`</span></span>|  
|`<title>`|`xml:lang`|  
|`<tr>`|<span data-ttu-id="a814c-186">`align`, `valign`</span><span class="sxs-lookup"><span data-stu-id="a814c-186">`align`, `valign`</span></span>|  
  
 <span data-ttu-id="a814c-187">レンダリングされる要素とスタイルの詳細については、 [World Wide Web コンソーシアム (W3C) の Web サイト](https://go.microsoft.com/fwlink/?linkid=37125)にある XHTML モジュール化の仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a814c-187">For more information on the elements and styles that are rendered, see the XHTML modularization specification at the [World Wide Web Consortium (W3C) Web site](https://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes" />
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public override bool IsValidFormAttribute (string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValidFormAttribute(string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValidFormAttribute (attributeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValidFormAttribute(System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="override this.IsValidFormAttribute : string -&gt; bool" Usage="xhtmlTextWriter.IsValidFormAttribute attributeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attributeName"><span data-ttu-id="a814c-188">確認対象の属性名。</span><span class="sxs-lookup"><span data-stu-id="a814c-188">The attribute name to check.</span></span></param>
        <summary><span data-ttu-id="a814c-189">XHTML 属性をチェックして、<see langword="&lt;form&gt;" /> 要素の開始タグにその XHTML 属性をレンダリングできるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="a814c-189">Checks an XHTML attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> element.</span></span></summary>
        <returns><span data-ttu-id="a814c-190">属性を <see langword="true" /> 要素に適用できる場合は <see langword="&lt;form&gt;" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a814c-190"><see langword="true" /> if the attribute can be applied to a <see langword="&lt;form&gt;" /> element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a814c-191">このメソッドは、要求元のデバイスの XHTML ドキュメントタイプによってサポートされているかどうかに応じて、条件付きで属性を表示する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="a814c-191">This method is useful to conditionally render an attribute depending on whether it is supported by the XHTML document type of the requesting device.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a814c-192">次のコード例は、カスタム <xref:System.Web.UI.WebControls.Label> コントロールと、XHTML としてコントロールのコンテンツをレンダリングするアダプターを作成する、より大きな例の一部です。</span><span class="sxs-lookup"><span data-stu-id="a814c-192">The following code example is part of a larger example that creates a custom <xref:System.Web.UI.WebControls.Label> control and an adapter that renders the content of the control as XHTML.</span></span>  
  
 <span data-ttu-id="a814c-193">このコード例では、`attTest` という名前のブール型変数を作成し、パラメーター値 "style" を指定して <xref:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute%2A> メソッドを呼び出した結果として返される戻り値に設定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a814c-193">This code example demonstrates how to create a Boolean variable named `attTest` and set it to the return value that results from calling the <xref:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute%2A> method with the parameter value "style".</span></span> <span data-ttu-id="a814c-194"><xref:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute%2A> メソッドが `true`を返す場合、コントロールに関連付けられているスタイルは、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A?displayProperty=nameWithType> および <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A?displayProperty=nameWithType> メソッドを使用して表示されます。</span><span class="sxs-lookup"><span data-stu-id="a814c-194">If the <xref:System.Web.UI.XhtmlTextWriter.IsValidFormAttribute%2A> method returns `true`, the styles that are associated with the control are rendered using the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A?displayProperty=nameWithType> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="a814c-195">`attTest` 値が `false`場合、スタイルはレンダリングされません。</span><span class="sxs-lookup"><span data-stu-id="a814c-195">If the `attTest` value is `false`, the styles are not rendered.</span></span> <span data-ttu-id="a814c-196">このページには、コントロールのテキスト、<xref:System.Web.UI.XhtmlTextWriter.WriteBreak%2A> メソッドによって表示される `<br/>` 要素、およびコントロールの XHTML コンテンツが条件付きでレンダリングされたことをユーザーに通知するテキスト文字列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="a814c-196">Instead, the page displays the text for the control, a `<br/>` element that is rendered by the <xref:System.Web.UI.XhtmlTextWriter.WriteBreak%2A> method, and a text string informing the user that the XHTML content of the control has rendered conditionally.</span></span>  
  
 <span data-ttu-id="a814c-197">このコード例は、<xref:System.Web.UI.XhtmlTextWriter> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="a814c-197">This code example is part of a larger example provided for the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/cs/xhtmltextlabel.cs#3)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.XhtmlTextWriter_Sample1/VB/xhtmltestlabel.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="xhtmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a814c-198">レンダリングする XHTML 属性。</span><span class="sxs-lookup"><span data-stu-id="a814c-198">The XHTML attribute to render.</span></span></param>
        <param name="value"><span data-ttu-id="a814c-199">XHTML 属性に代入される値。</span><span class="sxs-lookup"><span data-stu-id="a814c-199">The value assigned to the XHTML attribute.</span></span></param>
        <param name="key"><span data-ttu-id="a814c-200">XHTML 属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="a814c-200">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value associated with the XHTML attribute.</span></span></param>
        <summary><span data-ttu-id="a814c-201">指定した XHTML 属性とその値を現在のマークアップ要素に出力できるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="a814c-201">Determines whether the specified XHTML attribute and its value can be rendered to the current markup element.</span></span></summary>
        <returns><span data-ttu-id="a814c-202">属性をページにレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a814c-202"><see langword="true" /> if the attribute is rendered to the page; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a814c-203">次のコード例では、<xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> メソッドをオーバーライドして、このテキストライターによってレンダリングされるいずれかの要素に対して `size` 属性が表示されるかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a814c-203">The following code example demonstrates how to override the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> method to check whether a `size` attribute is rendered for any of the elements that are rendered by this text writer.</span></span> <span data-ttu-id="a814c-204">`size` 属性がレンダリングされる場合、コードはその値が8ポイントかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="a814c-204">If a `size` attribute is rendered, the code checks whether its value is 8 point.</span></span> <span data-ttu-id="a814c-205">その場合、<xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> メソッドは `true`を返し、属性とその値を表示できるようにします。</span><span class="sxs-lookup"><span data-stu-id="a814c-205">If so, the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> method returns `true`, allowing the attribute and its value to render.</span></span> <span data-ttu-id="a814c-206">値が8ポイント以外の場合、<xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> メソッドは `false`を返し、属性とその値はレンダリングされません。</span><span class="sxs-lookup"><span data-stu-id="a814c-206">If the value is other than 8 point, the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> method returns `false`, and the attribute and its value are not rendered.</span></span> <span data-ttu-id="a814c-207"><xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> メソッドのキーパラメーターが <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 属性と一致しない場合、<xref:System.Web.UI.XhtmlTextWriter> クラスで定義されているように、<xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> メソッドの基本機能が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a814c-207">If the key parameter of the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> method does not match the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute, the base functionality of the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> method is called, as defined in the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 <span data-ttu-id="a814c-208">このコード例は、<xref:System.Web.UI.XhtmlTextWriter> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="a814c-208">This code example is part of a larger example provided for the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#2)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="xhtmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a814c-209">レンダリングする XHTML スタイル属性。</span><span class="sxs-lookup"><span data-stu-id="a814c-209">The XHTML style attribute to render.</span></span></param>
        <param name="value"><span data-ttu-id="a814c-210">XHTML スタイル属性に代入される値。</span><span class="sxs-lookup"><span data-stu-id="a814c-210">The value assigned to the XHTML style attribute.</span></span></param>
        <param name="key"><span data-ttu-id="a814c-211">XHTML スタイル属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="a814c-211">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value associated with the XHTML style attribute.</span></span></param>
        <summary><span data-ttu-id="a814c-212">指定した XHTML スタイル属性とその値を現在のマークアップ要素に出力できるかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="a814c-212">Determines whether the specified XHTML style attribute and its value can be rendered to the current markup element.</span></span></summary>
        <returns><span data-ttu-id="a814c-213">スタイル属性がレンダリングされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a814c-213"><see langword="true" /> if the style attribute is rendered; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a814c-214">次のコード例では、<xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> メソッドをオーバーライドして、このテキストライターによってレンダリングされるいずれかの要素に対して <xref:System.Web.UI.HtmlTextWriterStyle.Color> 属性が表示されているかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a814c-214">The following code example demonstrates how to override the <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> method to check whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute is being rendered for any of the elements that are rendered by this text writer.</span></span> <span data-ttu-id="a814c-215"><xref:System.Web.UI.HtmlTextWriterStyle.Color> の属性が表示される場合、コードはその値が紫色であるかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="a814c-215">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute is rendered, the code checks whether its value is purple.</span></span> <span data-ttu-id="a814c-216">値が紫色の場合、<xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> メソッドは `false` を返し、属性とその値はレンダリングされません。</span><span class="sxs-lookup"><span data-stu-id="a814c-216">If the value is purple, the <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> method returns `false` and the attribute and its value are not rendered.</span></span> <span data-ttu-id="a814c-217"><xref:System.Web.UI.HtmlTextWriterStyle.Color> 属性が他の値に設定されている場合、<xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> メソッドは `true` を返し、属性とその値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="a814c-217">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute is set to any other value, the <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> method returns `true` and the attribute and its value are rendered.</span></span> <span data-ttu-id="a814c-218"><xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> メソッドのキーパラメーターが <xref:System.Web.UI.HtmlTextWriterStyle.Color> 属性と一致しない場合、<xref:System.Web.UI.XhtmlTextWriter> クラスで定義されているように、<xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> メソッドの基本機能が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a814c-218">If the key parameter of the <xref:System.Web.UI.XhtmlTextWriter.OnAttributeRender%2A> method does not match the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute, the base functionality of the <xref:System.Web.UI.XhtmlTextWriter.OnStyleAttributeRender%2A> method is called, as defined in the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 <span data-ttu-id="a814c-219">このコード例は、<xref:System.Web.UI.XhtmlTextWriter> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="a814c-219">This code example is part of a larger example provided for the <xref:System.Web.UI.XhtmlTextWriter> class.</span></span>  
  
 [!code-csharp[System.Web.UI.XhtmlTextWriter_Sample2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.XhtmlTextWriter_Sample2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRecognizedAttribute">
      <MemberSignature Language="C#" Value="public virtual void RemoveRecognizedAttribute (string elementName, string attributeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRecognizedAttribute(string elementName, string attributeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.RemoveRecognizedAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRecognizedAttribute (elementName As String, attributeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRecognizedAttribute(System::String ^ elementName, System::String ^ attributeName);" />
      <MemberSignature Language="F#" Value="abstract member RemoveRecognizedAttribute : string * string -&gt; unit&#xA;override this.RemoveRecognizedAttribute : string * string -&gt; unit" Usage="xhtmlTextWriter.RemoveRecognizedAttribute (elementName, attributeName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="a814c-220">属性を削除する XHTML 要素。</span><span class="sxs-lookup"><span data-stu-id="a814c-220">The XHTML element to remove an attribute from.</span></span></param>
        <param name="attributeName"><span data-ttu-id="a814c-221">指定された XHTML 要素から削除する属性。</span><span class="sxs-lookup"><span data-stu-id="a814c-221">The attribute to remove from the specified XHTML element.</span></span></param>
        <summary><span data-ttu-id="a814c-222">要素の <see cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" /> コレクションから属性を削除します。</span><span class="sxs-lookup"><span data-stu-id="a814c-222">Removes an attribute from the <see cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" /> collection of an element.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
        <altmember cref="M:System.Web.UI.XhtmlTextWriter.AddRecognizedAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetDocType">
      <MemberSignature Language="C#" Value="public virtual void SetDocType (System.Web.UI.XhtmlMobileDocType docType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDocType(valuetype System.Web.UI.XhtmlMobileDocType docType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.SetDocType(System.Web.UI.XhtmlMobileDocType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetDocType (docType As XhtmlMobileDocType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetDocType(System::Web::UI::XhtmlMobileDocType docType);" />
      <MemberSignature Language="F#" Value="abstract member SetDocType : System.Web.UI.XhtmlMobileDocType -&gt; unit&#xA;override this.SetDocType : System.Web.UI.XhtmlMobileDocType -&gt; unit" Usage="xhtmlTextWriter.SetDocType docType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="docType" Type="System.Web.UI.XhtmlMobileDocType" />
      </Parameters>
      <Docs>
        <param name="docType"><span data-ttu-id="a814c-223"><see cref="T:System.Web.UI.XhtmlMobileDocType" /> 列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="a814c-223">One of the <see cref="T:System.Web.UI.XhtmlMobileDocType" /> enumeration values.</span></span></param>
        <summary><span data-ttu-id="a814c-224">テキスト ライターがページまたはコントロールにレンダリングする XHTML ドキュメント タイプを指定します。</span><span class="sxs-lookup"><span data-stu-id="a814c-224">Specifies the XHTML document type for the text writer to render to the page or control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a814c-225">カスタムページアダプターの <xref:System.Web.UI.XhtmlTextWriter.SetDocType%2A> メソッドを使用して、要求元のデバイスにレンダリングする XHTML の種類を定義します。</span><span class="sxs-lookup"><span data-stu-id="a814c-225">Use the <xref:System.Web.UI.XhtmlTextWriter.SetDocType%2A> method in a custom page adapter to define the type of XHTML that you want to render to the requesting device.</span></span> <span data-ttu-id="a814c-226">サポートされているドキュメントの種類は、<xref:System.Web.UI.XhtmlMobileDocType> 列挙体で定義されています。</span><span class="sxs-lookup"><span data-stu-id="a814c-226">Supported document types are defined in the <xref:System.Web.UI.XhtmlMobileDocType> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.XhtmlMobileDocType" />
      </Docs>
    </Member>
    <Member MemberName="SuppressCommonAttributes">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable SuppressCommonAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable SuppressCommonAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SuppressCommonAttributes As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ SuppressCommonAttributes { System::Collections::Hashtable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SuppressCommonAttributes : System.Collections.Hashtable" Usage="System.Web.UI.XhtmlTextWriter.SuppressCommonAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a814c-227"><see cref="T:System.Collections.Hashtable" /> 属性が出力されない要素の <see cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a814c-227">Gets a <see cref="T:System.Collections.Hashtable" /> object of elements for which <see cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" /> attributes are suppressed.</span></span></summary>
        <value><span data-ttu-id="a814c-228">レンダリングされない <see cref="T:System.Collections.Hashtable" /> のコレクションを格納している要素の <see cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="a814c-228">A <see cref="T:System.Collections.Hashtable" /> of elements containing a collection of <see cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" /> that are not rendered.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a814c-229">抑制された属性のコレクションには、<xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> 属性がレンダリングされない XHTML 要素のリストが含まれます。</span><span class="sxs-lookup"><span data-stu-id="a814c-229">The suppressed attribute collection includes a list of XHTML elements for which <xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> attributes are not rendered.</span></span>  
  
 <span data-ttu-id="a814c-230"><xref:System.Web.UI.XhtmlTextWriter> クラスの新しいインスタンスが作成されると、<xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> 属性が抑制される要素の <xref:System.Collections.Hashtable> オブジェクトには次のものが含まれます。</span><span class="sxs-lookup"><span data-stu-id="a814c-230">When a new instance of the <xref:System.Web.UI.XhtmlTextWriter> class is created, the <xref:System.Collections.Hashtable> object of elements for which <xref:System.Web.UI.XhtmlTextWriter.CommonAttributes%2A> attributes are suppressed includes:</span></span>  
  
-   `base`  
  
-   `meta`  
  
-   `br`  
  
-   `head`  
  
-   `title`  
  
-   `html`  
  
-   `style`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.CommonAttributes" />
        <altmember cref="P:System.Web.UI.XhtmlTextWriter.ElementSpecificAttributes" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public override void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.XhtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBreak();" />
      <MemberSignature Language="F#" Value="override this.WriteBreak : unit -&gt; unit" Usage="xhtmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a814c-231"><see langword="&lt;br/&gt;" /> 要素を XHTML 出力ストリームに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="a814c-231">Writes a <see langword="&lt;br/&gt;" /> element to the XHTML output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a814c-232">次のコード例では、継承された <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A?displayProperty=nameWithType> メソッドをオーバーライドし、<xref:System.Web.UI.HtmlTextWriter.Write%2A?displayProperty=nameWithType> メソッドと、<xref:System.Web.UI.XhtmlTextWriter.WriteBreak%2A> メソッドを使用して `<br/>` 要素を使用してテキスト文字列を書き込む方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a814c-232">The following code example demonstrates how to override the inherited <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A?displayProperty=nameWithType> method to write a text string with the <xref:System.Web.UI.HtmlTextWriter.Write%2A?displayProperty=nameWithType> method and a `<br/>` element with the <xref:System.Web.UI.XhtmlTextWriter.WriteBreak%2A> method.</span></span>  
  
 [!code-csharp[system.web.ui.xhtmltextwriter_sample2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/CS/customxhtmltextwriter.cs#4)]
 [!code-vb[system.web.ui.xhtmltextwriter_sample2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.xhtmltextwriter_Sample2/VB/customxhtmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
