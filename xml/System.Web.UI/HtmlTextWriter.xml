<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6e86e75eded7da1995ae4dc3f982d2d2818c8e8" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78759861" /></Metadata><TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type HtmlTextWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>マークアップ文字とテキストを ASP.NET サーバー コントロールの出力ストリームに書き込みます。 このクラスには、ASP.NET サーバー コントロールがマークアップをクライアントにレンダリングするときに使用する書式設定機能が用意されています。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter> クラスは、HTML 4.0 をデスクトップブラウザーに表示するために使用されます。 <xref:System.Web.UI.HtmlTextWriter> は、<xref:System.Web.UI.ChtmlTextWriter>、<xref:System.Web.UI.Html32TextWriter>、<xref:System.Web.UI.XhtmlTextWriter> クラスを含む、<xref:System.Web.UI> 名前空間のすべてのマークアップライターの基本クラスでもあります。 これらのクラスは、さまざまな種類のマークアップの要素、属性、およびスタイルとレイアウトの情報を記述するために使用されます。 また、これらのクラスは、各マークアップ言語に関連付けられているページおよびコントロールアダプタークラスによって使用されます。  
  
 ほとんどの場合、ASP.NET は、要求元のデバイスに適切なライターを自動的に使用します。 ただし、カスタムのテキストライターを作成する場合、または特定のデバイスのページを表示するために特定のライターを指定する場合は、アプリケーションのブラウザーファイルの `controlAdapters` セクションのページにライターをマップする必要があります。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.Control> クラスから派生したカスタムコントロールの <xref:System.Web.UI.Control.Render%2A> メソッドをオーバーライドする方法を示しています。 このコード例は、さまざまな <xref:System.Web.UI.HtmlTextWriter> メソッド、プロパティ、およびフィールドの使用方法を示しています。  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">マークアップ コンテンツをレンダリングする <see cref="T:System.IO.TextWriter" /> インスタンス。</param>
        <summary>既定のタブ文字列を使用する <see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> コンストラクターの <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> オーバーロードでは、行のインデントが必要なときに <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> 定数が使用されます。 <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> のオーバーロードを呼び出して、新しいインスタンスを初期化します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> コンストラクターを使用して `StyledLabelHtmlWriter.` という名前のカスタム <xref:System.Web.UI.HtmlTextWriter> オブジェクトを作成する方法を示しています。これは、<xref:System.Web.UI.Page> クラスから派生した `MyPage` カスタムクラスがクライアントブラウザーによって要求された場合、`StyledLabelHtmlWriter` クラスを使用してそのコンテンツを出力ストリームにレンダリングします。  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">マークアップ コンテンツをレンダリングする <see cref="T:System.IO.TextWriter" />。</param>
        <param name="tabString">行のインデントをレンダリングするために使用する文字列。</param>
        <summary>タブ文字列を指定して、<see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 行のインデントが必要な場合、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> コンストラクターの <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> オーバーロードは `tabString` を使用します。 <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> の基本コンストラクターを呼び出して、新しいインスタンスを初期化します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> コンストラクターを使用して `StyledLabelHtmlWriter.` という名前のカスタム <xref:System.Web.UI.HtmlTextWriter> オブジェクトを作成する方法を示しています。これは、<xref:System.Web.UI.Page> クラスから派生した `MyPage` カスタムクラスがクライアントブラウザーによって要求された場合、`StyledLabelHtmlWriter` クラスを使用してそのコンテンツを出力ストリームにレンダリングします。  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、指定されたマークアップ属性および値を追加します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string -&gt; unit&#xA;override this.AddAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">追加する属性の名前を格納している文字列。</param>
        <param name="value">属性に割り当てる値を格納している文字列。</param>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、指定されたマークアップ属性および値を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性が <xref:System.Web.UI.HtmlTextWriterAttribute> 値のいずれでもない場合、または属性が実行時までわからない場合は、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> オーバーロードを使用します。  
  
 特定のマークアップ要素のインスタンスの場合、<xref:System.Web.UI.HtmlTextWriter> クラスは、その要素の属性のリストを保持します。 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドが呼び出されると、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドによって追加されたすべての属性が要素の開始タグにレンダリングされます。 次に、属性の一覧が <xref:System.Web.UI.HtmlTextWriter> オブジェクトからクリアされます。  
  
 マークアップ要素を表示するためのコーディングパターンは次のとおりです。  
  
-   要素に属性を追加するには、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドを使用します。  
  
-   <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。  
  
-   必要に応じて他のメソッドを使用して、要素の開始タグと終了タグの間に見つかったコンテンツをレンダリングします。  
  
-   <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを呼び出す前に <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドを呼び出す方法を示しています。 このコードは、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> の2つの異なるオーバーロードを呼び出し <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> の2つの異なるオーバーロードを呼び出してから、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを呼び出して `<span>` 要素を出力ストリームにレンダリングします。 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> メソッドを使用して、`CustomAttribute` という名前のカスタム属性と、このコードがレンダリングする `<span>` 要素に `CustomAttributeValue` という名前のカスタム値を定義します。  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">出力ストリームに追加するマークアップ属性を表す <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</param>
        <param name="value">属性に割り当てる値を格納している文字列。</param>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、マークアップ属性および属性値を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> オーバーロードを使用して、標準のマークアップ属性を表示します。  
  
 特定のマークアップ要素のインスタンスの場合、<xref:System.Web.UI.HtmlTextWriter> クラスは、その要素の属性のリストを保持します。 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドが呼び出されると、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドによって追加されたすべての属性が要素の開始タグにレンダリングされます。 属性の一覧が <xref:System.Web.UI.HtmlTextWriter>からクリアされます。  
  
 マークアップ要素を表示するためのコーディングパターンは次のとおりです。  
  
-   要素に属性を追加するには、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドを使用します。  
  
-   <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。  
  
-   必要に応じて他のメソッドを使用して、要素の開始タグと終了タグの間に見つかったコンテンツをレンダリングします。  
  
-   <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> オーバーロードを使用して、`Onclick` 属性をマークアップ要素に追加し、その値を次の ECMAScript コードに設定する方法を示しています。  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * bool -&gt; unit&#xA;override this.AddAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, fEndode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">追加する属性の名前を格納している文字列。</param>
        <param name="value">属性に割り当てる値を格納している文字列。</param>
        <param name="fEndode">属性とその値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>オプションのエンコーディングを使用して、<see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、指定されたマークアップ属性および値を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性が <xref:System.Web.UI.HtmlTextWriterAttribute> 値のいずれでもない場合、または実行時とエンコードが必要になるまで属性がわからない場合は、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> オーバーロードを使用します。  
  
 特定のマークアップ要素のインスタンスの場合、<xref:System.Web.UI.HtmlTextWriter> クラスは、その要素の属性のリストを保持します。 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドが呼び出されると、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドによって追加されたすべての属性が要素の開始タグにレンダリングされます。 次に、属性の一覧が <xref:System.Web.UI.HtmlTextWriter> オブジェクトからクリアされます。  
  
 属性に引用符 (")、小なり記号 (<)、またはアンパサンド (&) が含まれる可能性がある場合は、`fEncode` を `true`に設定して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> メソッドを使用します。 メソッドの呼び出しでは、要求元のデバイスの要件を満たすように属性がエンコードされます。 これらの文字が生成されないことがわかっている場合、または属性が既にエンコードされていることがわかっている場合は、`fEncode` を `false`に設定できます。  
 
属性の型が `Style`の場合、`fEndode` が `true`場合でも、値はエンコードされません。 スタイルの値が CSS に準拠していて、悪意のあるコードが含まれていないことを確認してください。
  
 マークアップ要素を表示するためのコーディングパターンは次のとおりです。  
  
-   要素に属性を追加するには、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドを使用します。  
  
-   <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。  
  
-   必要に応じて他のメソッドを使用して、要素の開始タグと終了タグの間に見つかったコンテンツをレンダリングします。  
  
-   <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> オーバーロードを使用して、`<img>` 要素に対してカスタム属性、`myattribute`、およびその値がエンコードされていないことを確認する方法を示します。  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit&#xA;override this.AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">追加する属性の名前を格納している文字列。</param>
        <param name="value">属性に割り当てる値を格納している文字列。</param>
        <param name="key">属性を表す <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</param>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、<see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列挙値と共に、指定されたマークアップ属性および値を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> オーバーロードは、<xref:System.Web.UI.HtmlTextWriter> クラスから継承する場合にのみ使用します。 これにより、新しい `name` と `key` 属性のペアを作成できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">出力ストリームに追加するマークアップ属性を表す <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</param>
        <param name="value">属性に割り当てる値を格納している文字列。</param>
        <param name="fEncode">属性とその値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>オプションのエンコーディングを使用して、<see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、マークアップ属性および属性値を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> オーバーロードを使用して、省略可能なエンコーディングを使用して標準のマークアップ属性を表示します。  
  
 特定のマークアップ要素のインスタンスの場合、<xref:System.Web.UI.HtmlTextWriter> クラスは、その要素の属性のリストを保持します。 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドが呼び出されると、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> によって追加されたすべての属性が要素の開始タグにレンダリングされます。 次に、属性の一覧が <xref:System.Web.UI.HtmlTextWriter> オブジェクトからクリアされます。  
  
 属性に引用符 (")、小なり記号 (<)、またはアンパサンド (&) が含まれる可能性がある場合は、`fEncode` を `true`に設定して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> メソッドを使用します。 メソッドの呼び出しでは、要求元のデバイスの要件を満たすように属性がエンコードされます。 これらの文字が生成されないことがわかっている場合、または属性が既にエンコードされていることがわかっている場合は、`fEncode` を `false`に設定できます。  
 
 属性の型が `Style`の場合、`fEncode` が `true`場合でも、値はエンコードされません。 スタイルの値が CSS に準拠していて、悪意のあるコードが含まれていないことを確認してください。

  
 マークアップ要素を表示するためのコーディングパターンは次のとおりです。  
  
-   要素に属性を追加するには、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドを使用します。  
  
-   <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。  
  
-   必要に応じて他のメソッドを使用して、要素の開始タグと終了タグの間に見つかったコンテンツをレンダリングします。  
  
-   <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> メソッドを使用して、`<img>` 要素の `Alt` 属性に割り当てられている文字列値が、要求元のデバイス用にエンコードされていることを確認する方法を示しています。  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトが後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成する要素の開始タグに、マークアップ スタイル属性を追加します。</summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string -&gt; unit&#xA;override this.AddStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">追加するスタイル属性を格納している文字列。</param>
        <param name="value">属性に割り当てる値を格納している文字列。</param>
        <summary>後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成される開始タグに、指定されたマークアップ スタイル属性および属性値を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイルが <xref:System.Web.UI.HtmlTextWriterStyle> 列挙体のメンバーでない場合、または実行時までわからない場合は、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> オーバーロードを使用します。  
  
 <xref:System.Web.UI.HtmlTextWriter> クラスは、レンダリングするマークアップ要素のスタイルの一覧を保持します。 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドが呼び出されると、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> メソッドによって追加されたすべてのスタイルが要素の開始タグにレンダリングされます。 スタイルの一覧がクリアされます。  
  
 マークアップ要素を表示するためのコーディングパターンは次のとおりです。  
  
-   <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> メソッドを使用して、要素にスタイル属性を追加します。  
  
-   <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。  
  
-   必要に応じて他のメソッドを使用して、要素の開始タグと終了タグの間に見つかったコンテンツをレンダリングします。  
  
-   <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> オーバーロードを使用して、`<p>` 要素に `font-size` および `color` スタイル属性をレンダリングする方法を示します。 このコード例では、<xref:System.Web.UI.HtmlTextWriter> クラスを使用して、コントロールの内容を表示します。  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit&#xA;override this.AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">出力ストリームに追加するスタイル属性を表す <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</param>
        <param name="value">属性に割り当てる値を格納している文字列。</param>
        <summary>後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成される開始マークアップ タグに、指定された <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 値および属性値に関連付けられたマークアップ スタイル属性を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スタイルが <xref:System.Web.UI.HtmlTextWriterStyle> 列挙体のメンバーであり、実行時よりも前にわかっている場合は、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> オーバーロードを使用します。  
  
 <xref:System.Web.UI.HtmlTextWriter> クラスは、レンダリングするマークアップ要素のスタイルの一覧を保持します。 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドが呼び出されると、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> メソッドによって追加されたスタイルは、要素の開始タグにレンダリングされます。 スタイルの一覧がクリアされます。  
  
 マークアップ要素を表示するためのコーディングパターンは次のとおりです。  
  
-   <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> メソッドを使用して、要素にスタイル属性を追加します。  
  
-   <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用します。  
  
-   必要に応じて他のメソッドを使用して、要素の開始タグと終了タグの間に見つかったコンテンツをレンダリングします。  
  
-   <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを使用します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter> クラスから派生したクラスの <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドのオーバーライドの一部を使用する方法を示しています。 このコードでは、`<Label>` 要素がレンダリングされているかどうかを確認します。 その場合は、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> メソッドを呼び出して、`<Label>` 要素に対して `Color` スタイル属性が定義されているかどうかを確認します。 `Color` の属性が定義されていない場合、コードは、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> メソッドのこのオーバーロードを呼び出して `Color` 属性をスタイル属性に追加し、その値を `red`に設定します。  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit&#xA;override this.AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">追加されるスタイル属性を格納している文字列。</param>
        <param name="value">属性に割り当てる値を格納している文字列。</param>
        <param name="key">追加するスタイル属性を表す <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</param>
        <summary>後続の <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの呼び出しで作成される開始マークアップ タグに、<see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値と共に、指定されたマークアップ スタイル属性および属性値を追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> オーバーロードは、<xref:System.Web.UI.HtmlTextWriter> クラスから継承する場合にのみ使用します。 <xref:System.Web.UI.HtmlTextWriterStyle> 属性の新しい `name` と `value` のペアを作成できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberSignature Language="F#" Value="abstract member BeginRender : unit -&gt; unit&#xA;override this.BeginRender : unit -&gt; unit" Usage="htmlTextWriter.BeginRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトまたは派生クラスのオブジェクトに、コントロールが出力されようとしていることを通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> メソッドの <xref:System.Web.UI.HtmlTextWriter> クラスの実装には、機能がありません。 独自のレンダリング機能を提供するには、<xref:System.Web.UI.HtmlTextWriter> から派生したクラスの <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> メソッドをオーバーライドする必要があります。 たとえば、`<p>` の要素をコントロールのすぐ前にレンダリングする必要があるマークアップ言語では、`<p>` 要素が必要である場合は、<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> オーバーライドを使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="htmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトを閉じ、関連付けられているシステム リソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この <xref:System.Web.UI.HtmlTextWriter.Close%2A> メソッドの実装は、<xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> の基本メソッドを呼び出します。  
  
 <xref:System.Web.UI.HtmlTextWriter.Close%2A> メソッドを呼び出すと、すべてのリソースが解放されているため、<xref:System.Web.UI.HtmlTextWriter> オブジェクトに対する操作によって例外がスローされる可能性があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberSignature Language="F#" Value="val mutable DefaultTabString : string" Usage="System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>単一のタブ文字を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 1つのタブは、ASCII 9 文字で表されます。  
  
   
  
## Examples  
 次のコード例は、パラメーターとして <xref:System.IO.TextWriter> オブジェクトを受け取り、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString> フィールドをパラメーター引数としてコンストラクターの2番目のバージョンに渡すコンストラクターを作成する方法を示しています。 このコンストラクターがコードから呼び出された場合、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString> フィールドは、ページまたはアダプターによって使用されるマークアップライターのインスタンスのインデントポリシーを定義します。  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable DoubleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>引用符 (") を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> フィールドは、属性を閉じるために <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドによって使用されます。  
  
   
  
## Examples  
 次のコード例は、`<table>` 要素の `border` 属性を表示する方法を示しています。 このコードは、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを呼び出して属性とその値を表示し、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを使用して <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> および <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> フィールドを表示します。  
  
 このコード例では、次のマークアップをレンダリングします。  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>現在のコンテキストの <see cref="T:System.Web.HttpRequest" /> オブジェクトの要件に基づいて、指定したマークアップ属性の値をエンコードします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="member this.EncodeAttributeValue : string * bool -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">エンコードする属性値を含む文字列。</param>
        <param name="fEncode">属性値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>現在のコンテキストの <see cref="T:System.Web.HttpRequest" /> オブジェクトの要件に基づいて、指定したマークアップ属性の値をエンコードします。</summary>
        <returns><paramref name="value" /> が空の場合は、エンコードされた属性値を含む文字列 <see langword="null" />。または <paramref name="fEncode" /> が <see langword="false" /> の場合は、エンコードされていない属性値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性が <xref:System.Web.UI.HtmlTextWriterAttribute> 列挙値でない場合、または実行時までわからない場合は、<xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> オーバーロードを使用します。  
  
 <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> メソッドは、入力に関係なく、二重引用符 (")、アンパサンド (&)、および小記号 (<) を削除して、無効なタグが生成されないようにします。 実際のエンコーディングは、<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> メソッドによって実行されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドの呼び出しでパラメーターとして <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> メソッドを呼び出し、`color:blue` スタイル属性値をエンコードする方法を示しています。  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string&#xA;override this.EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (attrKey, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey">マークアップ属性を表す <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</param>
        <param name="value">エンコードする属性値を含む文字列。</param>
        <summary>現在のコンテキストの <see cref="T:System.Web.HttpRequest" /> オブジェクトの要件に基づいて、指定したマークアップ属性の値をエンコードします。</summary>
        <returns>エンコードされた属性値を格納している文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> メソッドは、入力に関係なく、二重引用符 (")、アンパサンド (&)、および小記号 (<) を削除して、無効なタグが生成されないようにします。 実際のエンコーディングは、<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> メソッドによって実行されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.EncodeUrl : string -&gt; string" Usage="htmlTextWriter.EncodeUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">エンコードする URL を格納している文字列。</param>
        <summary>指定した URL 内の空白文字列を "%20" に変換して、最小限の URL エンコーディングを実行します。</summary>
        <returns>エンコードされた URL を格納している文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字の URL エンコードは、パーセント記号 (%) で構成され、その後に、文字の ISO ラテンコードポイントの2桁の16進数表現 (大文字と小文字は区別されません) で構成されます。 スペースの16進数表現は20です。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> メソッドを呼び出して、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドの呼び出しでパラメーターとして渡された URL 内の空白を変換する方法を示しています。  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトがページにコンテンツを書き込むために使用するエンコーディングを取得します。</summary>
        <value>マークアップをページに書き込むときに使用される <see cref="T:System.Text.Encoding" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> プロパティは、基本 <xref:System.IO.TextWriter> オブジェクトから値を取得します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.HtmlTextWriter.Encoding%2A> プロパティを使用して、カスタムコントロールがテキストを含むページにテキストを表示するために使用するエンコードの種類を記述する方法を示します。  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberSignature Language="F#" Value="abstract member EndRender : unit -&gt; unit&#xA;override this.EndRender : unit -&gt; unit" Usage="htmlTextWriter.EndRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトまたは派生クラスのオブジェクトに、コントロールのレンダリングが完了したことを通知します。 このメソッドを使用して、<see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> メソッドで開かれたすべてのマークアップ要素を閉じることができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> メソッドの <xref:System.Web.UI.HtmlTextWriter> クラスの実装には、機能がありません。 <xref:System.Web.UI.HtmlTextWriter> クラスから派生したクラスの <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> をオーバーライドして、独自のレンダリング機能を提供する必要があります。  
  
 <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> メソッドを使用して、<xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> メソッドで開かれたマークアップ要素を閉じることができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberSignature Language="F#" Value="val mutable EndTagLeftChars : string" Usage="System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マークアップ要素の終了タグの左山かっことスラッシュ記号 (&lt;/) を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> フィールドは、マークアップ要素の終了タグを構築するために、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドによって使用されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> と <xref:System.Web.UI.HtmlTextWriter.TagRightChar> フィールドを <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドの呼び出しでパラメーター値として使用して、`<table>` マークアップ要素の終了タグをレンダリングする方法を示しています。  
  
 このコード例では、次のマークアップをレンダリングします。  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたスタイルのレイアウトと文字書式を実装するための属性を含むマークアップ要素の開始タグを書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterStyle (style As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.EnterStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style">マークアップ ブロックへの適用を開始するレイアウトと書式を指定する <see cref="T:System.Web.UI.WebControls.Style" />。</param>
        <summary>指定されたスタイルのレイアウトと文字書式を実装するための属性を含む <see langword="&lt;span&gt;" /> 要素の開始タグを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドを使用して、背景色や境界線の幅などのスタイルをマークアップのブロックに適用します。  
  
 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドと <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> メソッドを使用すると、デバイスアダプターまたはコントロールは、指定されたスタイルの文字書式を使用するマークアップを作成できます。 対応する <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> メソッドで使用する <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドで、`style` に同じ値を使用します。  
  
 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> のオーバーロードは `<span>` 要素の開始タグをレンダリングします。 次に、このメソッドは、必要な属性とスタイル属性を `<span>` 要素の開始タグに追加して、<xref:System.Web.UI.WebControls.Style> オブジェクトによって指定された設定を表示します。 属性とスタイル属性を格納するために別のマークアップ要素をレンダリングする場合は、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> オーバーロードを使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.WebControl> クラスから派生した `TextSample`という名前のカスタムクラスを使用して、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドを使用して、テキストの文字列に <xref:System.Web.UI.WebControls.Style.ForeColor%2A> スタイルを適用する方法を示します。  
  
 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドは、HTML `<span style="color:Navy;">`を表示します。 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> メソッドの呼び出しは、テキストがレンダリングされた後に `<span>` 要素を閉じます。  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnterStyle (style As Style, tag As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.EnterStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style">マークアップ ブロックへの適用を開始するレイアウトと書式を指定する <see cref="T:System.Web.UI.WebControls.Style" />。</param>
        <param name="tag"><paramref name="style" /> で指定されたスタイル オブジェクトを含んだマークアップ要素の開始タグを指定する <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</param>
        <summary>指定されたスタイルのレイアウトと文字書式を実装するための属性を含むマークアップ要素の開始タグを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドを使用して、背景色や境界線の幅などのスタイルをマークアップのブロックに適用します。  
  
 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドと <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> メソッドを使用すると、デバイスアダプターまたはコントロールは、指定されたスタイルの文字書式を使用するマークアップを作成できます。 対応する <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> メソッドで使用する <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドで、`style` に同じ値を使用します。  
  
 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> オーバーロードは、`tag` パラメーターによって指定された要素の開始タグをレンダリングします。 次に、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> メソッドは、要素の開始タグに必要な属性とスタイル属性を追加して、<xref:System.Web.UI.WebControls.Style> オブジェクトによって指定された設定を表示します。 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> オーバーロードを使用して、`<span>` 要素の開始タグをレンダリングします。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.WebControl> クラスから派生した `TextSample`という名前のカスタムクラスを使用して、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドを使用して、テキストの文字列に <xref:System.Web.UI.WebControls.Style.ForeColor%2A> スタイルを適用する方法を示します。  
  
 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドは、HTML`<span style="color:Navy;">`を表示します。 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> メソッドの呼び出しは、テキストがレンダリングされた後に `<span>` 要素を閉じます。  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable EqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>等号 (<see langword="=" />) を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 属性値の開始区切り記号を構築するときに、<xref:System.Web.UI.HtmlTextWriter.EqualsChar> フィールドの代わりに <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> フィールドを使用することもできます。  
  
   
  
## Examples  
 次のコード例は、`<img>` 要素の `src` 属性とその値の一部を表示する方法を示しています。 このコードでは、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッド呼び出しの <xref:System.Web.UI.HtmlTextWriter.EqualsChar> フィールドを使用して、`src` 属性とその値の間に等号 (=) を表示します。  
  
 このコード例では、次のマークアップをレンダリングします。  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberSignature Language="F#" Value="val mutable EqualsDoubleQuoteString : string" Usage="System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>文字列 (=") の等号 (=) と二重引用符文字 (") の両方を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> フィールドは、属性値の開始区切り記号を作成するために <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> および <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドによって使用されます。  
  
   
  
## Examples  
 次のコード例は、`<table>` 要素の `border` 属性を表示する方法を示しています。 このコードは、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを呼び出して属性とその値を表示し、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを使用して <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> および <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> フィールドを表示します。  
  
 このコード例では、次のマークアップをレンダリングします。  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したレイアウトと文字書式を終了するマークアップ要素の終了タグを書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitStyle (style As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.ExitStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style">閉じるレイアウトと書式設定を指定する <see cref="T:System.Web.UI.WebControls.Style" />。</param>
        <summary>指定したレイアウトと文字書式を終了する <see langword="&lt;span&gt;" /> 要素の終了タグを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> オーバーロードは、コントロールの終了タグの後にある `<span>` 要素の終了タグをレンダリングし、対応する <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> 呼び出しによって開かれた要素を閉じます。  
  
 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> メソッドと <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドを使用すると、デバイスアダプターまたはコントロールは、指定されたスタイルの文字書式を使用してブロックを開始および終了するマークアップを作成できます。 対応する <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> メソッドで使用する <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドで、`style` に同じ値を使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.WebControl> クラスから派生した `TextSample`という名前のカスタムクラスを使用して、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドを使用して、テキストの文字列に <xref:System.Web.UI.WebControls.Style.ForeColor%2A> スタイルを適用する方法を示します。  
  
 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドは、HTML `<span style="color:Navy;">`を表示します。 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> メソッドの呼び出しは、テキストがレンダリングされた後に `<span>` 要素を閉じます。  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExitStyle (style As Style, tag As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.ExitStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="style">出力テキストへの適用を停止するよう、レイアウトと書式設定を指定する <see cref="T:System.Web.UI.WebControls.Style" />。</param>
        <param name="tag">指定されたスタイルを適用した属性を含んだマークアップ要素の終了タグを指定する <see cref="T:System.Web.UI.HtmlTextWriterTag" />。 これは、対応する <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> 呼び出しで渡されたキーに一致する必要があります。</param>
        <summary>指定されたマークアップ要素の終了タグを書き込んで、指定されたレイアウトと文字書式を終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> オーバーロードは、コントロールの終了タグの後 `tag` によって指定された要素の終了タグをレンダリングし、対応する <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> メソッド呼び出しによって開かれた要素を閉じます。  
  
 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> メソッドと <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドを使用すると、デバイスアダプターまたはコントロールは、指定されたスタイルの文字書式を使用してブロックを開始および終了するマークアップを作成できます。 対応する <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> メソッドで使用する <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドで、`style` に同じ値を使用します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.WebControl> クラスから派生した `TextSample`という名前のカスタムクラスを使用して、<xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドを使用して、テキストの文字列に <xref:System.Web.UI.WebControls.Style.ForeColor%2A> スタイルを適用する方法を示します。  
  
 <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> メソッドは、HTML `<span style="color:Navy;">`を表示します。 <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> メソッドの呼び出しは、テキストがレンダリングされた後に `<span>` 要素を閉じます。  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : unit -&gt; unit&#xA;override this.FilterAttributes : unit -&gt; unit" Usage="htmlTextWriter.FilterAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページまたは Web サーバー コントロールのすべてのプロパティで、すべてのマークアップとスタイル属性を削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 マークアップ要素に属性がレンダリングされる前に、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> メソッドが呼び出されます。 さらに、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> メソッドは、レンダリングする各属性とスタイルに対して <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> と <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> メソッドを呼び出します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter> クラスから派生したカスタムクラスを使用して、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> メソッドをオーバーライドする方法を示しています。 <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> のオーバーライドは、呼び出されると、テキストライターが `<label>` または `<a>` の要素を表示するかどうかを確認します。  
  
-   `<label>` 要素がレンダリングされている場合、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> メソッドは `style` 属性が要素にレンダリングされているかどうかを確認し、存在しない場合は `style` の属性を作成して `color: blue`に設定します。  
  
-   `<a>` 要素がレンダリングされている場合、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> メソッドは `href` 属性が含まれているかどうかを判断し、存在しない場合は `href` を URL http://www.cohowinery.comに追加します。  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="htmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトのすべてのバッファーをクリアし、バッファー内のすべてのデータを出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Flush%2A> メソッドの <xref:System.Web.UI.HtmlTextWriter> クラスの実装は <xref:System.IO.TextWriter.Flush%2A> の基本メソッドを呼び出すだけです。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeKey : string -&gt; System.Web.UI.HtmlTextWriterAttribute" Usage="htmlTextWriter.GetAttributeKey attrName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName"><see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> の取得対象となる属性を格納している文字列。</param>
        <summary>指定した属性に対応する <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列挙値を取得します。</summary>
        <returns>指定した属性の <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 列挙値。属性が列挙型のメンバーでない場合は無効な <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `attrName` が `null` または空の文字列 ("") の場合、または属性名のテーブルに存在しない場合は、<xref:System.Web.UI.HtmlTextWriterAttribute> オブジェクトに型指定された-1 が返されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter> クラスから派生したクラスを使用して、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドをオーバーライドする方法を示しています。 オーバーライドは、`tagKey` が <xref:System.Web.UI.HtmlTextWriterTag.Font> フィールドと等しいかどうかを確認します。これは、`<font>` マークアップ要素がレンダリングされることを示します。 その場合、オーバーライドは <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> メソッドを呼び出して、`<font>` 要素に <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 属性が含まれているかどうかを確認します。 <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> が `false`を返す場合、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドは、<xref:System.Web.UI.HtmlTextWriterAttribute.Size> を定義し、その値を `30pt`に設定する <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> メソッドを呼び出します。  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeName : System.Web.UI.HtmlTextWriterAttribute -&gt; string" Usage="htmlTextWriter.GetAttributeName attrKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey">マークアップ属性名の取得対象の <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> 値に関連付けられたマークアップ属性の名前を取得します。</summary>
        <returns>マークアップ属性の名前を格納している文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `attrKey` が有効な <xref:System.Web.UI.HtmlTextWriterAttribute> 値でない場合、<xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> メソッドは空の文字列 ("") を返します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> メソッドを使用して、<xref:System.Web.UI.HtmlTextWriterAttribute.Size> 列挙値を文字列名に変換する方法を示します。  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberSignature Language="F#" Value="member this.GetStyleKey : string -&gt; System.Web.UI.HtmlTextWriterStyle" Usage="htmlTextWriter.GetStyleKey styleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName"><see cref="T:System.Web.UI.HtmlTextWriterStyle" /> の取得対象のスタイル属性。</param>
        <summary>指定したスタイルの <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値を取得します。</summary>
        <returns><paramref name="styleName" /> に対応する <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> メソッドは、`styleName` が <xref:System.Web.UI.HtmlTextWriterStyle> 列挙値に対応していない場合、<xref:System.Web.UI.HtmlTextWriterStyle> 値として型指定された値-1 を返します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter> クラスから派生したクラスの <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドをオーバーライドする方法を示しています。 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> のオーバーライドは、`<label>` マークアップを表示するかどうかを決定し、存在する場合は、要素に <xref:System.Web.UI.HtmlTextWriterStyle.Color> 属性があるかどうかを確認します。 <xref:System.Web.UI.HtmlTextWriterStyle.Color> の属性が定義されていない場合は、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> メソッドの呼び出しの最初のパラメーターとして <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> メソッドを使用して、<xref:System.Web.UI.HtmlTextWriterStyle.Color> の属性を `<label>` マークアップ要素に追加し、<xref:System.Web.UI.HtmlTextWriterStyle.Color> 属性を `red`に設定します。  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="F#" Value="member this.GetStyleName : System.Web.UI.HtmlTextWriterStyle -&gt; string" Usage="htmlTextWriter.GetStyleName styleKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey">スタイル属性名の取得対象の <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値に関連付けられたマークアップ スタイル属性名を取得します。</summary>
        <returns><paramref name="styleKey" /> で指定された <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> 列挙値に関連付けられたスタイル属性名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `styleKey` が有効な <xref:System.Web.UI.HtmlTextWriterStyle> オブジェクトでない場合、<xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> メソッドは空の文字列 ("") を返します。  
  
   
  
## Examples  
 次のコード例は、`<label>` 要素がレンダリングされているかどうかを確認する方法を示しています。 その場合は、<xref:System.Web.UI.HtmlTextWriterStyle.Color> スタイル属性が要素で定義されているかどうかを確認します。 属性が定義されていない場合、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> メソッドが呼び出され、<xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> メソッドによって、<xref:System.Web.UI.HtmlTextWriterStyle.Color> 列挙メンバーが <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> メソッドに渡される文字列形式に変換されます。  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag&#xA;override this.GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag" Usage="htmlTextWriter.GetTagKey tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName"><see cref="T:System.Web.UI.HtmlTextWriterTag" /> の取得対象のマークアップ要素。</param>
        <summary>指定したマークアップ要素に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値を取得します。</summary>
        <returns><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値。<paramref name="tagName" /> が特定の <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値に関連付けられていない場合は <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `tagName` が `null`場合、空の文字列 ("")、またはマークアップタグ名のテーブルに見つからない場合、<xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> メソッドは <xref:System.Web.UI.HtmlTextWriterTag.Unknown> フィールドを返します。  
  
   
  
## Examples  
 次のコード例は、パラメーターとして文字列を受け取る <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドのオーバーロードをオーバーライドする方法を示しています。 文字列は <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> メソッドに渡されます。このメソッドは、それを対応する <xref:System.Web.UI.HtmlTextWriterTag> 列挙メンバーに変換し、<xref:System.Web.UI.HtmlTextWriterTag> 列挙値をパラメーターとして受け取る <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> オーバーロードに渡します。  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string&#xA;override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="htmlTextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">マークアップ要素の取得対象の <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値に関連付けられたマークアップ要素を取得します。</summary>
        <returns>マークアップ要素を表す文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `tagKey` が有効な <xref:System.Web.UI.HtmlTextWriterTag> 値でない場合、<xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> メソッドは空の文字列 ("") を返します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> メソッドを使用して `<font>` 要素を閉じる方法を示しています。 <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> メソッドは、<xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> メソッドを呼び出して、<xref:System.Web.UI.HtmlTextWriterTag.Font> 値を文字列に変換します。  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.Web.UI.HtmlTextWriter.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マークアップの各行の開始位置のインデントを設定するタブ位置の数を取得または設定します。</summary>
        <value>各行のインデントを設定するタブ位置の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インデントは、<xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> コンストラクターの `tabString` パラメーターによって指定された文字列を、<xref:System.Web.UI.HtmlTextWriter.Indent%2A> プロパティによって指定された回数だけ書き込むことによって実行されます。  
  
 <xref:System.Web.UI.HtmlTextWriter.Indent%2A> プロパティが負の値に設定されている場合は、保存される前に0に変更されます。  
  
   
  
## Examples  
 次のコード例は、`<span>` 要素の開始タグに属性が追加され、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドが呼び出されたときに、<xref:System.Web.UI.HtmlTextWriter.Indent%2A> プロパティに割り当てられている値をインクリメントする方法を示しています。 これにより、`<span>` 要素内に表示されるマークアップのインデントが増加します。  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerWriter : System.IO.TextWriter with get, set" Usage="System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マークアップ要素の内部コンテンツを書き込むテキスト ライターを取得または設定します。</summary>
        <value>内部マークアップの内容を書き込む <see cref="T:System.IO.TextWriter" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 内部マークアップコンテンツは、マークアップ言語要素の開始タグと終了タグの間にあるテキストです。  
  
 <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> プロパティが <xref:System.Web.HttpWriter> クラスのインスタンスである <xref:System.IO.TextWriter> オブジェクトに設定されている場合、このファクトはメモされ、別の参照が保存されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebControl> クラスから派生したカスタム Web サーバーコントロールを使用して、<xref:System.Web.UI.Control.Render%2A> メソッドをオーバーライドする方法を示しています。 <xref:System.Web.UI.HtmlTextWriter> クラスを使用して、`<font>` 要素を書き込みます。 要素の開始タグを書き込むと、<xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> プロパティを使用して文字列 `"<br> The time on the server:"` が書き込まれ、この文字列が <xref:System.DateTime.Now%2A?displayProperty=nameWithType> プロパティの値と連結されます。  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ属性とその値をレンダリングするかどうかを決定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key">マークアップ属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</param>
        <summary><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ属性とその値をレンダリングするかどうかを決定します。</summary>
        <returns><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に属性をレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriterAttribute> オブジェクトに割り当てられる値を取得するには、この値ではなく <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> オーバーロードを使用します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter> クラスから継承するクラスの <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドのオーバーライドを使用する方法を示しています。 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> オーバーライドは、`<font>` マークアップ要素がレンダリングされるかどうかを確認します。 その場合、オーバーライドは <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> メソッドを呼び出して、`<font>` 要素に <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 属性が含まれているかどうかを確認します。 それ以外の場合、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドは、<xref:System.Web.UI.HtmlTextWriterAttribute.Size> 属性を定義し、その値を `30pt`に設定する <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> メソッドを呼び出します。  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute * string -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">マークアップ属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</param>
        <param name="value">属性に代入される値。</param>
        <summary><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ属性とその値をレンダリングするかどうかを決定します。</summary>
        <returns><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に属性をレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> メソッドが `true`を返す場合、<xref:System.Web.UI.HtmlTextWriterAttribute> オブジェクトに割り当てられる値が `value` パラメーターに返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、マークアップ スタイル属性をレンダリングするかどうかを決定します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">属性に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</param>
        <summary><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ スタイル属性をレンダリングするかどうかを決定します。</summary>
        <returns><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に属性をレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定されたスタイル属性でレンダリングされる値を取得するには、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> メソッドの <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> オーバーロードを使用します。  
  
   
  
## Examples  
 次のコード例は、`<label>` 要素がレンダリングされているかどうかを確認する方法を示しています。 その場合、<xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> メソッドは、<xref:System.Web.UI.HtmlTextWriterStyle.Color> スタイル属性が要素で定義されているかどうかをチェックします。 <xref:System.Web.UI.HtmlTextWriterStyle.Color> 属性が定義されていない場合、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> メソッドは <xref:System.Web.UI.HtmlTextWriterStyle.Color> 属性を定義し、その値を `red`に設定します。  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle * string -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">属性に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</param>
        <param name="value">スタイル属性に割り当てられた値。</param>
        <summary><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に、指定したマークアップ スタイル属性とその値をレンダリングするかどうかを決定します。</summary>
        <returns><see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> メソッドの次回の呼び出し中に属性とその値をレンダリングする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> メソッドが `true`を返す場合、<xref:System.Web.UI.HtmlTextWriterStyle> 属性に割り当てられる値が `value` パラメーターに返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member IsValidFormAttribute : string -&gt; bool&#xA;override this.IsValidFormAttribute : string -&gt; bool" Usage="htmlTextWriter.IsValidFormAttribute attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="attribute">確認する属性の名前が格納されている文字列。</param>
        <summary><see langword="&lt;form&gt;" /> マークアップ要素の開始タグに確実に属性がレンダリングされるようにするために、属性を確認します。</summary>
        <returns>常に <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> メソッドの <xref:System.Web.UI.HtmlTextWriter> クラスの実装は、すべての属性に対して `true` を返します。 <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> をオーバーライドして、`<form>` 要素の開始タグに表示できる属性を制限します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> メソッドをオーバーライドして、<see cref="T:System.Web.UI.HtmlTextWriter" /> クラスから派生したクラスのマークアップの <see langword="&lt;form&gt;" /> 要素に含めることができる属性に対してのみ <see langword="true" /> を返すようにします。</para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトで使用される行終端文字列を取得または設定します。</summary>
        <value>現在の <see cref="T:System.Web.UI.HtmlTextWriter" /> で使用される行終端文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は復帰で、その後にラインフィード ("\r\n") が続きます。  
  
 行終端記号文字列は、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドのいずれかが呼び出されるたびに出力ストリームに書き込まれます。 <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> プロパティが `null`に設定されている場合は、既定の改行文字が使用されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter> クラスから派生したカスタムクラスを使用して、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> メソッドをオーバーライドする方法を示しています。 <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> のオーバーライドは、呼び出されると、テキストライターが `<label>` または `<a>` の要素を表示するかどうかを確認します。 その場合、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> メソッドは、ラベルにスタイル属性が定義されているかどうかを判断します。 スタイルが定義されていない場合、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> メソッドは、`style:color` 属性の既定値を blue に設定します。 次に、<xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> メソッドは、<xref:System.Web.UI.HtmlTextWriter.NewLine%2A> プロパティを使用してマークアップタグに改行を挿入し、その他の定義済みの属性を書き込みます。  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool&#xA;override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">レンダリングする属性の名前を格納している文字列。</param>
        <param name="value">属性に割り当てる値を格納している文字列。</param>
        <param name="key">マークアップ属性に関連付けられた <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</param>
        <summary>指定したマークアップ属性とその値を現在のマークアップ要素にレンダリングするかどうかを決定します。</summary>
        <returns>常に <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> メソッドの <xref:System.Web.UI.HtmlTextWriter> クラスの実装は、常に `true`を返します。 <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> のオーバーライドでは、属性がページに表示されるかどうかを判断できます。  
  
   
  
## Examples  
 <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> メソッドをオーバーライドする方法を次のコード例に示します。 <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 属性がレンダリングされても、<xref:System.Web.UI.HtmlTextWriterAttribute.Size> 値が `30pt`ない場合、<xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> のオーバーライドは <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドを呼び出して <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 属性を追加し、その値を `30pt`に設定します。  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.HtmlTextWriter" /> クラスから継承する場合、<see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> メソッドをオーバーライドして <see langword="false" /> を返すことで、属性がまったく表示されないようにしたり、特定の要素にレンダリングしたり、特定のマークアップに対してレンダリングしたりすることができます。 たとえば、<see cref="T:System.Web.UI.HtmlTextWriter" /> から派生したオブジェクトが <see langword="bgcolor" /> 属性を <see langword="&lt;table&gt;" /> 要素に表示しないようにする場合は、<see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> をオーバーライドし、<see langword="false" /> が <paramref name="name" /> を渡し、<see langword="bgcolor" /> プロパティ値が <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> ときに <see langword="table" />を返すことができます。</para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool&#xA;override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">レンダリングするスタイル属性の名前を格納している文字列。</param>
        <param name="value">スタイル属性に割り当てる値を格納している文字列。</param>
        <param name="key">スタイル属性に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</param>
        <summary>指定されたマークアップ スタイル属性とその値を現在のマークアップ要素にレンダリングするかどうかを決定します。</summary>
        <returns>常に <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> メソッドの <xref:System.Web.UI.HtmlTextWriter> クラスの実装は、常に `true`を返します。 <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> のオーバーライドでは、スタイル属性がページに表示されるかどうかを判断できます。  
  
   
  
## Examples  
 <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> メソッドをオーバーライドする方法を次のコード例に示します。 <xref:System.Web.UI.HtmlTextWriterStyle.Color> スタイル属性が表示されていても、<xref:System.Web.UI.HtmlTextWriterStyle.Color> 値が `purple`ない場合、<xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> のオーバーライドでは、<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> メソッドを使用して <xref:System.Web.UI.HtmlTextWriterStyle.Color> 属性が `purple`に設定されます。  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.HtmlTextWriter" /> クラスから継承する場合は、<see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> メソッドをオーバーライドして <see langword="false" /> を返すことで、スタイル属性がまったく表示されないようにしたり、特定の要素にレンダリングしたり、特定のマークアップ言語でレンダリングしたりすることができます。 たとえば、<see cref="T:System.Web.UI.HtmlTextWriter" /> から派生したオブジェクトが <see langword="&lt;p&gt;" /> 要素に <see langword="color" /> スタイル属性を表示しないようにする場合は、<see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> をオーバーライドし、<see langword="false" /> が <paramref name="name" /> を渡し、<see langword="color" /> プロパティ値が <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> ときに <see langword="p" />を返すことができます。</para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="abstract member OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool&#xA;override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="htmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">レンダリングする要素の名前を格納している文字列。</param>
        <param name="key">要素に関連付けられている <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</param>
        <summary>指定したマークアップ要素を要求側のページにレンダリングするかどうかを決定します。</summary>
        <returns>常に <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> メソッドの <xref:System.Web.UI.HtmlTextWriter> クラスの実装は、常に `true`を返します。 <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> のオーバーライドでは、要素がページに表示されるかどうかを判断できます。  
  
   
  
## Examples  
 <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> メソッドをオーバーライドする方法を次のコード例に示します。 <xref:System.Web.UI.HtmlTextWriterTag.Font> 要素がレンダリングされている場合、<xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> オーバーライドは <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> メソッドを使用して <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 属性が表示されているかどうかを判断します。 そうでない場合は、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドを使用して <xref:System.Web.UI.HtmlTextWriterAttribute.Size> 属性を作成し、その値を `20pt`に設定します。  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.HtmlTextWriter" /> クラスから継承する場合は、<see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> メソッドをオーバーライドして <see langword="false" /> を返すことで、マークアップ要素がまったく表示されないようにしたり、特定のマークアップ言語を使用したりすることができます。 たとえば、<see cref="T:System.Web.UI.HtmlTextWriter" /> から派生したオブジェクトが <see langword="&lt;font&gt;" /> 要素を表示しないようにする場合は、<see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> メソッドをオーバーライドして、<see langword="&lt;font&gt;" /> 要素を含むページが要求されたときに <see langword="false" /> を返すことができます。</para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberSignature Language="F#" Value="abstract member OutputTabs : unit -&gt; unit&#xA;override this.OutputTabs : unit -&gt; unit" Usage="htmlTextWriter.OutputTabs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マークアップ文字の行のインデント レベルを表す一連のタブ文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> メソッドは、<xref:System.Web.UI.HtmlTextWriter.Indent%2A> プロパティを使用して、目的のインデントを取得するために書き込むタブ文字列の数を決定します。  
  
 タブ文字列は <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> コンストラクターで指定されます。 タブ文字列が指定されていない場合は、<xref:System.Web.UI.HtmlTextWriter.DefaultTabString> 定数 (`\t`) が使用されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter> クラスから派生したクラスの <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> メソッドをオーバーライドする方法を示しています。 <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> のオーバーライドでは、常に <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> 定数を使用して、インデントが行われます。  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberSignature Language="F#" Value="member this.PopEndTag : unit -&gt; string" Usage="htmlTextWriter.PopEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>レンダリングする要素のリストから、最近保存したマークアップ要素を削除します。</summary>
        <returns>最近レンダリングしたマークアップ要素を格納している <see cref="T:System.String" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要素は、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドによって、表示されるマークアップ要素のリストに追加されます。 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドは、<xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> メソッドを呼び出すことによって、リストからマークアップ要素を削除します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">レンダリングする要素のリストが空です。</exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberSignature Language="F#" Value="member this.PushEndTag : string -&gt; unit" Usage="htmlTextWriter.PushEndTag endTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag">マークアップ要素の終了タグ。</param>
        <summary>マークアップ要素の終了タグを生成するときに、後で使用できるように、指定されたマークアップ要素を保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドが <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> メソッドを呼び出すと、表示されるマークアップ要素のリストに要素が追加されます。 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドは、要素の終了タグをレンダリングした後、リストからマークアップ要素を削除します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="static member RegisterAttribute : string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterAttribute (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">登録するマークアップ属性の名前を格納している文字列。</param>
        <param name="key">属性名に対応する <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />。</param>
        <summary>リテラルの、または動的に生成されたマークアップ属性をソース ファイルから登録して、これらの属性を要求側のクライアントに適切にレンダリングできるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML マークアップ言語の定義済みの属性は、最初の <xref:System.Web.UI.HtmlTextWriter> オブジェクトが作成されるときに <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> メソッドを呼び出すことによって登録されます。 動的属性は、<xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> メソッドを使用して、他のタイミングで登録できます。  
  
 <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> メソッドによって使用される登録テーブルは `static`ため、属性の登録は、ホストコンピューター上のすべての <xref:System.Web.UI.HtmlTextWriter> オブジェクトに適用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="static member RegisterStyle : string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterStyle (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">スタイル名を指定するソース ファイルから渡された文字列。</param>
        <param name="key">指定したスタイルに対応する <see cref="T:System.Web.UI.HtmlTextWriterStyle" />。</param>
        <summary>リテラルの、または動的に生成されたマークアップ スタイル プロパティをソース ファイルから登録して、これらのプロパティを要求側のクライアントに適切にレンダリングできるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML マークアップ言語の定義済みのカスケードスタイルシート (CSS) 属性は、最初の <xref:System.Web.UI.HtmlTextWriter> オブジェクトが作成されるときに、<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> メソッドの呼び出しによって登録されます。 動的スタイル属性は、<xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> メソッドを使用して、他のタイミングで登録できます。  
  
 <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> メソッドによって使用される登録テーブルは `static`ため、属性の登録は、ホストコンピューター上のすべての <xref:System.Web.UI.HtmlTextWriter> オブジェクトに適用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="static member RegisterTag : string * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterTag (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">HTML タグを格納している文字列。</param>
        <param name="key">レンダリングする要素を指定する <see cref="T:System.Web.UI.HtmlTextWriterTag" />。</param>
        <summary>リテラルの、または動的に生成されたマークアップ タグをソース ファイルから登録して、それらのタグを要求側のクライアントに適切にレンダリングできるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML 言語の定義済みマークアップタグは、最初の <xref:System.Web.UI.HtmlTextWriter> オブジェクトが作成されるときに <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> メソッドを呼び出すことによって登録されます。 動的マークアップタグは、<xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> メソッドを使用して、他のタイミングで登録できます。  
  
 <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> メソッドによって使用される登録テーブルは `static`ため、タグの登録はホストコンピューター上のすべての <xref:System.Web.UI.HtmlTextWriter> オブジェクトに適用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterContent : unit -&gt; string&#xA;override this.RenderAfterContent : unit -&gt; string" Usage="htmlTextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マークアップ要素のコンテンツの後および終了タグの前に出現するテキストまたは空白文字をマークアップの出力ストリームに書き込みます。</summary>
        <returns>要素のコンテンツの後に書き込む空白文字またはテキストを格納している文字列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> メソッドは、現在のマークアップ要素に子要素を挿入する場合に役立ちます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter> クラスから派生したクラスの <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> メソッドをオーバーライドして、`<label>` 要素がレンダリングされているかどうかを判断する方法を示しています。 その場合、<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> オーバーライドは `<label>` 要素の終了タグの直前にある `<font>` 要素の終了タグを挿入します。 `<label>` 以外の要素が表示されている場合は、<xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> の基本メソッドが使用されます。  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> メソッドの <see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの実装は <see langword="null" />を返します。 要素の内容の後、終了タグの前にテキストまたは空白文字を書き込む場合は、<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> をオーバーライドします。</para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterTag : unit -&gt; string&#xA;override this.RenderAfterTag : unit -&gt; string" Usage="htmlTextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マークアップ要素の終了タグの後に出現する空白文字またはテキストを書き込みます。</summary>
        <returns>要素の終了タグの後に書き込む空白文字またはテキスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> メソッドは、要素タグの後に追加の終了タグを表示する場合に役立ちます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> メソッドをオーバーライドして、<xref:System.Web.UI.HtmlTextWriter> クラスから派生したクラスが `<label>` 要素をレンダリングしているかどうかを判断する方法を示しています。 その場合、<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> オーバーライドは、`<font>` 要素の終了タグを `<label>` 要素の直後に挿入します。 `<label>` 要素でない場合は、<xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> の基本メソッドが使用されます。  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> メソッドの <see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの実装は <see langword="null" />を返します。 要素の終了タグの後にテキストまたは空白文字を書き込む場合は、<see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> をオーバーライドします。</para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeContent : unit -&gt; string&#xA;override this.RenderBeforeContent : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マークアップ要素のコンテンツの前および開始タグの後にテキストまたは空白文字を書き込みます。</summary>
        <returns>要素のコンテンツの前に書き込むテキストまたは空白文字。 オーバーライドされない場合、<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> は <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> メソッドは、内部マークアップの前に現在のマークアップ要素に子要素を挿入する場合に役立ちます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> メソッドをオーバーライドして、<xref:System.Web.UI.HtmlTextWriter> クラスから派生したクラスが `<label>` 要素を表示しようとしているかどうかを判断する方法を示します。 その場合、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> オーバーライドは `<label>` 要素の開始タグの直後にある `<font>` 要素の開始タグを挿入します。 `<label>` 要素でない場合は、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> の基本メソッドが使用されます。  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> メソッドの <see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの実装は <see langword="null" />を返します。 開始タグの後、要素の内容の前にテキストまたは空白を書き込む場合は、<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> をオーバーライドします。</para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeTag : unit -&gt; string&#xA;override this.RenderBeforeTag : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マークアップ要素の開始タグの前に出現するテキストまたは空白文字を書き込みます。</summary>
        <returns>マークアップ要素の開始タグの前に書き込むテキストまたは空白文字。 オーバーライドされない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> メソッドは、目的の要素の開始タグの前に追加の開始タグを表示する場合に役立ちます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> メソッドをオーバーライドして、<xref:System.Web.UI.HtmlTextWriter> クラスから派生したクラスが `<label>` 要素を表示しようとしているかどうかを判断する方法を示します。 その場合、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> オーバーライドは、`<font>` 要素の開始タグを `<label>` 要素の直前に挿入します。 `<label>` 要素がレンダリングされていない場合は、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> の基本メソッドが使用されます。  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> メソッドの <see cref="T:System.Web.UI.HtmlTextWriter" /> クラスの実装は <see langword="null" />を返します。 要素の開始タグの前にテキストまたはスペースを書き込む場合は、<see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> をオーバーライドします。</para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>マークアップ要素の開始タグを出力ストリームに書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : string -&gt; unit&#xA;override this.RenderBeginTag : string -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">開始タグをレンダリングするマークアップ要素の名前を含む文字列。</param>
        <summary>指定したマークアップ要素の開始タグを出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 マークアップ要素が <xref:System.Web.UI.HtmlTextWriterTag> 列挙値のいずれでもない場合は、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> メソッドのオーバーライド <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> を使用します。  
  
 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用してマークアップ要素を生成するには、まず、必要に応じて <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> と <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> メソッドを呼び出して、要素の開始タグに表示される要素属性またはスタイル属性を指定します。 内部マークアップを生成した後、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを呼び出して終了タグを生成します。  
  
   
  
## Examples  
 次のコード例は、カスタムコントロールの <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを呼び出して、非標準の `MyTag` 要素の開始タグを表示する方法を示しています。 次に、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを呼び出して内部マークアップをレンダリングした後、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを呼び出して要素を閉じます。  
  
 このコード例では、次のマークアップが生成されます。  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">レンダリングするマークアップ要素の開始タグを定義する <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値の 1 つ。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値に関連付けられたマークアップ要素の開始タグを出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 マークアップ要素が <xref:System.Web.UI.HtmlTextWriterTag> 列挙値のいずれかである既知の型である場合は、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> メソッドの <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> オーバーロードを使用します。  
  
 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用してマークアップ要素を生成するには、まず、必要に応じて <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> と <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> メソッドを呼び出して、要素の開始タグに表示される要素属性またはスタイル属性を指定します。 内部マークアップを生成した後、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを呼び出して終了タグを生成します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドを使用して、`<img>` 要素の開始タグを出力する方法を示しています。 <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> メソッドによって要素に追加される属性は、開始 `<img>` タグに含まれます。 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドは、終了タグを生成するために使用されます。  
  
 このコード例では、次のマークアップが生成されます。  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : unit -&gt; unit&#xA;override this.RenderEndTag : unit -&gt; unit" Usage="htmlTextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>マークアップ要素の終了タグを出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> のオーバーロードが呼び出された後、要素の開始タグと終了タグ (内部マークアップ) 間のすべてのコンテンツがレンダリングされた後に、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを呼び出します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドを呼び出す方法を示しています。これは、開始タグを生成する <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドと、カスタム `MyTag` 要素の開始タグと終了タグの間で内部マークアップをレンダリングする <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドの両方が呼び出された後に呼び出される方法を示しています。  
  
 このコード例では、次のマークアップが生成されます。  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingChars : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マークアップ タグの空白文字と自己終了スラッシュ記号 (/) を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> フィールドは、自己終了したマークアップ要素で使用されます。 次に例を示します。  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingTagEnd : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>自己終了マークアップ要素の終了スラッシュ記号と右山かっこ (/&gt;) を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> フィールドは、自己終了マークアップ要素を構築するときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドによって使用されます。  
  
   
  
## Examples  
 次のコード例では、カスタム `FileName` プロパティの値の後に引用符と <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> フィールドで表される文字を表示する方法を示します。 このコード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを呼び出し、<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> フィールドをパラメーター引数として渡して要素を閉じます。  
  
 このコード例では、`FileName` プロパティ値を表示し、次のマークアップをレンダリングします。  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberSignature Language="F#" Value="val mutable SemicolonChar : char" Usage="System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セミコロン (;) を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタムコントロールまたはアダプターからセミコロンをレンダリングする場合は、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドの呼び出しで <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> フィールドをパラメーター引数として渡します。  
  
   
  
## Examples  
 次のコード例は、マークアップ要素の一連のスタイルを手動で表示する方法を示しています。 このコード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを使用して、`font-size` と `border-style` スタイル属性をレンダリングします。 <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> フィールドは、`border-style` 属性の先頭から `font-size` 属性の値を分離するために、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドのパラメーターとして使用されます。  
  
 このコード例では、次のマークアップをレンダリングします。  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable SingleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アポストロフィ (') を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アポストロフィを描画する必要がある場合は、[<xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar>] フィールドを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberSignature Language="F#" Value="val mutable SlashChar : char" Usage="System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スラッシュ記号 (/) を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 URL を記述するときにスラッシュ記号を表示するには、[<xref:System.Web.UI.HtmlTextWriter.SlashChar>] フィールドを使用します。 <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> メソッドは、マークアップ要素の終了タグを書き込むときに <xref:System.Web.UI.HtmlTextWriter.SlashChar> フィールドを使用します。  
  
   
  
## Examples  
 次のコード例は、`<img>` 要素の `src` 属性を手動でレンダリングする方法を示しています。 このコード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドをパラメーターとして <xref:System.Web.UI.HtmlTextWriter.SlashChar> フィールドと共に使用して、`src` 属性に適用されているパスにスラッシュ記号を表示します。  
  
 このコード例では、次のマークアップをレンダリングします。  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberSignature Language="F#" Value="val mutable SpaceChar : char" Usage="System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>空白文字 ( ) を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.SpaceChar> フィールドは、要素と属性の間に区切り記号を記述するときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドと <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドによって使用されます。  
  
   
  
## Examples  
 このセクションでは、2つのコード例について説明します。 最初の例では、文字配列を作成する方法を示します。 2つ目は、配列の使用方法を示しています。  
  
 これらのコード例では、次のマークアップが生成されます。  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.SpaceChar> フィールドを含む <xref:System.Char> 配列を作成する方法を示しています。  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを呼び出すときに、前のコード例で作成した配列をパラメーターとして使用する方法を示しています。  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable StyleEqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スタイル属性を値に等しく設定するために使用するスタイル イコール (<see langword=":" />) 文字を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> フィールドは、スタイル名と値を区切るために <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> メソッドによって使用されます。  
  
   
  
## Examples  
 次のコード例は、要素の開始タグに `bold` の `FontWeight` の属性と値を表示する方法を示しています。 このコード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドをパラメーターとして <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> フィールドと共に使用して、各スタイル属性の値を設定する文字を表示します。  
  
 このコード例では、次のマークアップをレンダリングします。  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag with get, set" Usage="System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定したマークアップ要素の <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得または設定します。</summary>
        <value>開始タグが出力されるマークアップ要素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> プロパティは、<xref:System.Web.UI.HtmlTextWriter> クラスを継承するクラスにのみ使用されます。 <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> プロパティの読み取りまたは設定は、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドの呼び出しでのみ行う必要があります。これは、一貫した値に設定されている唯一の時間です。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter> クラスから派生したクラスの <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> メソッドのオーバーライドされたバージョンを示しています。 この例では、<xref:System.Web.UI.HtmlTextWriter.TagKey%2A> プロパティの値を使用して、カスタム <xref:System.Web.UI.HtmlTextWriter> オブジェクトを使用するサーバーコントロールが `<label>` マークアップ要素をレンダリングしているかどうかを判断します。 指定されている場合は、`color` 属性が `red` に設定された `<font>` 要素が返され、`<label>` 要素のテキストの書式設定が変更されます。  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">プロパティ値が設定できません。</exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberSignature Language="F#" Value="val mutable TagLeftChar : char" Usage="System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マークアップ タグの開始山かっこ (&lt;) を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> フィールドは、マークアップタグを記述するときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>、<xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>、<xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>、および <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> の各メソッドによって使用されます。  
  
   
  
## Examples  
 次のコード例では、要素名を使用して、`<table>` 要素の開始タグの最初の文字をレンダリングします。 このコード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドをパラメーターとして <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> フィールドと共に使用します。  
  
 このコード例では、次のマークアップをレンダリングします。  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.UI.HtmlTextWriter.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>レンダリングされるマークアップ要素のタグ名を取得または設定します。</summary>
        <value>出力されるマークアップ要素のタグ名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.TagName%2A> プロパティは、<xref:System.Web.UI.HtmlTextWriter> クラスを継承するクラスにのみ使用されます。 <xref:System.Web.UI.HtmlTextWriter.TagName%2A> プロパティの読み取りまたは設定は、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> メソッドの呼び出しでのみ行う必要があります。これは、一貫した値に設定されている唯一の時間です。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter> クラスから派生したクラスの <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> メソッドのオーバーライドされたバージョンを示しています。 このコード例では、表示する要素が <xref:System.String.Compare%2A?displayProperty=nameWithType> メソッドを呼び出し、<xref:System.Web.UI.HtmlTextWriter.TagName%2A> プロパティ値と文字列 `"label"`をパラメーター引数として渡すことによって、`<label>` 要素であるかどうかを確認します。 `<label>` 要素を表示しようとしている場合は、`color` 属性が `red`に設定されている `<font>` 要素の開始タグが `<label>` 要素の開始タグの前にレンダリングされます。 レンダリングする要素が `<label>` 要素でない場合は、<xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> メソッドの基本クラスのバージョンが呼び出されます。  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberSignature Language="F#" Value="val mutable TagRightChar : char" Usage="System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マークアップ タグの終了山かっこ (&gt;) を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.TagRightChar> フィールドは、マークアップタグを記述するときに、<xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>、<xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>、および <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> の各メソッドによって使用されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドのオーバーロードを呼び出すことによって、`<table>` 要素の終了タグを表示する方法を示しています。 このコード例では、タグの最後の文字を表示するために、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドをパラメーターとして <xref:System.Web.UI.HtmlTextWriter.TagRightChar> フィールドと共に使用します。  
  
 このコード例では、次のマークアップをレンダリングします。  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>保留中のタブ空白文字と共に、指定したデータ型を出力ストリームに書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberSignature Language="F#" Value="override this.Write : bool -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込む <see cref="T:System.Boolean" />。</param>
        <summary>保留中のタブ空白文字と共に、ブール値のテキスト形式を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="override this.Write : char -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込む Unicode 文字。</param>
        <summary>保留中のタブ空白文字と共に、Unicode 文字のテキスト形式を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを使用して、<xref:System.Web.UI.HtmlTextWriter.TagRightChar> 定数を使用して `<img>` 要素の開始タグを終了する方法を示します。  
  
 このコード例では、次のマークアップをレンダリングします。  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] -&gt; unit" Usage="htmlTextWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">出力ストリームに書き込む Unicode 文字の配列。</param>
        <summary>保留中のタブ空白文字と共に、Unicode 文字の配列のテキスト形式を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
   
  
## Examples  
 このセクションでは、2つのコード例について説明します。 1つ目は、文字の配列を作成する方法を示しています。 2つ目は、配列の使用方法を示しています。  
  
 これらのコード例では、次のマークアップが生成されます。  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 次のコード例では `hello world`をスペルチェックする文字の配列を作成する方法を示します。 配列には、2つの単語の間にスペースを作成する <xref:System.Web.UI.HtmlTextWriter.SpaceChar> フィールドが含まれています。  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを使用して、前のコード例で作成した `hello world` 文字配列をページに表示する方法を示しています。このコード例を含むコントロールがページに含まれている場合です。  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberSignature Language="F#" Value="override this.Write : double -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込む倍精度浮動小数点数。</param>
        <summary>保留中のタブ空白文字と共に、倍精度浮動小数点数のテキスト形式を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを使用して <xref:System.Double.MaxValue?displayProperty=nameWithType> フィールドの値を表示する方法を示しています。  
  
 このコード例では、次のマークアップが生成されます。  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberSignature Language="F#" Value="override this.Write : int -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込む 32 バイト符号付き整数。</param>
        <summary>保留中のタブ空白文字と共に、32 バイトの符号付き整数のテキスト形式を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberSignature Language="F#" Value="override this.Write : int64 -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込む 64 バイト符号付き整数。</param>
        <summary>保留中のタブ空白文字と共に、64 バイトの符号付き整数のテキスト形式を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : obj -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込むオブジェクト。</param>
        <summary>保留中のタブ空白文字と共に、オブジェクトのテキスト形式を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティの値を表示する方法を示しています。  
  
 このコード例では、次のマークアップが生成されます。  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 <xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティの値:  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberSignature Language="F#" Value="override this.Write : single -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込む単精度浮動小数点数。</param>
        <summary>保留中のタブ空白文字と共に、単精度浮動小数点数のテキスト形式を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを使用して <xref:System.Single.Epsilon?displayProperty=nameWithType> フィールドの値を表示する方法を示しています。これは、<xref:System.Single> 構造体の最小値です。  
  
 このコード例では、次のマークアップが生成されます。  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="htmlTextWriter.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">出力ストリームに書き込む文字列。</param>
        <summary>保留中のタブ空白文字と共に、指定した文字列を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを使用して、カスタムマークアップ要素の開始タグと終了タグの間に文字列を表示する方法を示しています。  
  
 このコード例では、次のマークアップが生成されます。  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="override this.Write : string * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">0 個以上の書式項目を格納している文字列。</param>
        <param name="arg0">書式指定するオブジェクト。</param>
        <summary>保留中のタブ空白文字と共に、<see cref="M:System.String.Format(System.String,System.Object)" /> メソッドと同じセマンティクスを使用して、タブ文字列と書式設定された文字列を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティの値を持つ書式設定された文字列を表示する方法を示しています。  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="override this.Write : string * obj[] -&gt; unit" Usage="htmlTextWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">0 個以上の書式項目を格納している文字列。</param>
        <param name="arg">書式設定するオブジェクト配列。</param>
        <summary>保留中のタブ空白文字と共に、オブジェクト配列のテキスト形式を格納する書式設定された文字列を出力ストリームに書き込みます。 このメソッドは <see cref="M:System.String.Format(System.String,System.Object[])" /> メソッドと同じセマンティクスを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初の例では、書式設定された文字列と配列の内容を表示する方法を示します。 2つ目は、配列を宣言する方法を示しています。  
  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを使用して、書式設定された文字列と、`curPriceTime`という名前のオブジェクト配列の内容を表示する方法を示しています。 メソッド呼び出しでは、最初のメンバーをレンダリングする前に、配列の2番目のメンバーがレンダリングされます。  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 次のコード例は、`curPriceTime` オブジェクトの配列を宣言する方法を示しています。  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="htmlTextWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">出力ストリームへのテキストの書き込み元となる文字配列。</param>
        <param name="index">書き込みの開始位置を示す配列内のインデックス位置。</param>
        <param name="count">出力ストリームに書き込む文字数。</param>
        <summary>保留中のタブ空白文字と共に、Unicode 文字の部分配列のテキスト形式を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
   
  
## Examples  
 このセクションでは、2つのコード例について説明します。 最初の例では、文字配列を作成する方法を示します。 2つ目は、配列の使用方法を示しています。  
  
 これらのコード例では、次のマークアップが生成されます。  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 次のコード例は、`hello world`を示す文字の配列を作成する方法を示しています。 配列には、2つの単語の間にスペースを作成する <xref:System.Web.UI.HtmlTextWriter.SpaceChar> フィールドが含まれています。  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 コード例の次の部分では、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドの `index` パラメーターと `count` パラメーターを使用して、前の例で作成した配列の最初の5文字を表示します。  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="override this.Write : string * obj * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">0 個以上の書式項目を格納している文字列。</param>
        <param name="arg0">書式指定するオブジェクト。</param>
        <param name="arg1">書式指定するオブジェクト。</param>
        <summary>保留中のタブ空白文字と共に、2 つのオブジェクトのテキスト形式を格納する書式設定された文字列を出力ストリームに書き込みます。 このメソッドは <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> メソッドと同じセマンティクスを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドは、保留中のすべてのタブを生成し、<xref:System.IO.TextWriter.Write%2A> の基本メソッドを呼び出します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.HtmlTextWriter.Write%2A> メソッドを使用して、書式設定された文字列と、<xref:System.Globalization.CultureInfo.CurrentCulture%2A> および <xref:System.DateTime.Today%2A> プロパティの値を表示する方法を示します。  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>マークアップ属性とその値を出力ストリームに書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string -&gt; unit&#xA;override this.WriteAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">出力ストリームに書き込む属性。</param>
        <param name="value">属性に代入する値。</param>
        <summary>指定したマークアップ属性と値を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 エンコードせずにマークアップ属性とその値を書き込むには、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドを使用します。 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドは、二重引用符 (") で囲まれた属性値を書き込みます。 `value` が `null`場合、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドは属性名のみを書き込みます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドの両方のオーバーロードが呼び出される `<img>` 要素を表示する方法を示しています。 このコード例では、次のプロセスを使用します。  
  
-   <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> メソッドを呼び出します。これにより、要素の開始文字がレンダリングされます。  
  
-   <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> のオーバーロードを呼び出します。これにより、`alt` 属性とその値が `<img>` 要素に書き込まれます。  
  
-   <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> のオーバーロードを呼び出して、`No "encoding" required`の値を持つカスタム `myattribute` 属性を表示し、`fEncode` を `false`に設定します。  
  
-   要素の開始タグを閉じ、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> メソッドを呼び出して `<img>` 要素を閉じます。  
  
 このコード例では、次のマークアップが生成されます。  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスでは、<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> メソッドをオーバーライドして、属性とその値を書き込むためのカスタム規則を定義できます。 たとえば、<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> メソッドが空の値を持つ属性を書き込むことを許可したコードを記述することができます。</para></block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string * bool -&gt; unit&#xA;override this.WriteAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">出力ストリームに書き込むマークアップ属性。</param>
        <param name="value">属性に代入する値。</param>
        <param name="fEncode">属性とその代入値をエンコードする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <summary>指定されたマークアップ属性と値を出力ストリームに書き込みます。また、指定されている場合は、エンコードされた値も書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドを使用して、エンコーディングの有無にかかわらずマークアップ属性とその値を書き込みます。 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドは、<xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> メソッドを使用してエンコーディングを実行します。  
  
 <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドは、二重引用符 (") で囲まれた属性値を書き込みます。 `value` が `null`場合、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドは属性名のみを書き込みます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドの両方のオーバーロードが呼び出される `<img>` 要素を表示する方法を示しています。 このコード例では、次のプロセスを使用します。  
  
-   <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> メソッドを呼び出します。これにより、要素の開始文字がレンダリングされます。  
  
-   <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> のオーバーロードを呼び出します。これにより、`alt` 属性とその値が `<img>` 要素に書き込まれます。  
  
-   <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> のオーバーロードを呼び出して、`No "encoding" required`の値を持つカスタム `myattribute` 属性を表示し、`fEncode` を `false`に設定します。  
  
-   要素の開始タグを閉じ、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> メソッドを呼び出して `<img>` 要素を閉じます。  
  
 このコード例では、次のマークアップが生成されます。  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスでは、<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> メソッドをオーバーライドして、属性とその値を書き込むためのカスタム規則を定義できます。 たとえば、<see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> メソッドが空の値を持つ属性を書き込むことを許可したコードを記述することができます。</para></block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteBeginTag : string -&gt; unit&#xA;override this.WriteBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">開始タグを書き込むマークアップ要素。</param>
        <summary>タブ空白文字と指定したマークアップ要素の開始タグを出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> メソッドは、マークアップ要素の開始タグの終わり山かっこ (>) を書き込みません。 これにより、要素の開始タグにマークアップ属性を書き込むことができます。 <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> メソッドを呼び出すときに、<xref:System.Web.UI.HtmlTextWriter.TagRightChar> 定数を使用して開始タグを閉じます。 自己終了するマークアップ要素を記述するときに、<xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> 定数と共に <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> メソッドは、タグまたは属性のマッピングを許可せず、各要求に対して同じ方法でマークアップ要素を表示しないカスタムサーバーコントロールによって使用されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドの両方のオーバーロードが呼び出される `<img>` 要素を表示する方法を示しています。 このコード例では、次のプロセスを使用します。  
  
-   <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> メソッドを呼び出します。これにより、要素の開始文字がレンダリングされます。  
  
-   <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> のオーバーロードを呼び出します。これにより、`alt` 属性とその値が `<img>` 要素に書き込まれます。  
  
-   <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> のオーバーロードを呼び出して、`No "encoding" required`の値を持つカスタム `myattribute` 属性を表示し、`fEncode` を `false`に設定します。  
  
-   要素の開始タグを閉じ、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> メソッドを呼び出して `<img>` 要素を閉じます。  
  
 このコード例では、次のマークアップが生成されます。  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberSignature Language="F#" Value="abstract member WriteBreak : unit -&gt; unit&#xA;override this.WriteBreak : unit -&gt; unit" Usage="htmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see langword="&lt;br /&gt;" /> マークアップ要素を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> メソッドを使用して、カスタムコントロールまたはアダプターマークアップで改行をレンダリングします。 <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> メソッドは、HTML 互換性を向上させるために、`br` と `/` の間にスペースを書き込みます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> メソッドがエンコードされた `&lt;custID&gt; &amp; &lt;invoice#&gt;` マークアップを書き込むと、<xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> メソッドを呼び出して、要求元のブラウザーに `<br />` 要素を書き込む方法を示しています。  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedText : string -&gt; unit&#xA;override this.WriteEncodedText : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">エンコードして出力ストリームに書き込む文字列。</param>
        <summary>要求元のデバイスで指定したテキストをエンコードし、それを出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 文字列に山かっこ (\< または >) またはアンパサンド (&) が含まれている場合は、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> メソッドを使用します。  
  
 <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> メソッドは、<xref:System.Web.HttpUtility.HtmlEncode%2A> メソッドを使用してエンコードを実行し、Unicode 文字の `00A0` を `&nbsp;`に変換します。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> メソッドを使用して、エンコードされたマークアップ `&lt;custID&gt; &amp; &lt;invoice#&gt;` を出力ストリームに書き込む方法を示しています。 <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> メソッドは、`<br />`を書き込みます。  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> が <see langword="null" />です。</exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrl : string -&gt; unit&#xA;override this.WriteEncodedUrl : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="url">エンコードして出力ストリームに書き込む URL 文字列。</param>
        <summary>指定された URL をエンコードしてから、出力ストリームに書き込みます。 URL にはパラメーターが含まれている場合があります。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> メソッドは、URL エンコードの仕様に従って、`url` パラメーターの文字列をエンコードします。 疑問符 (?) の区切り記号に続くパラメーターはエンコードされません。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> メソッドを使用する方法を示しています。これにより、次の出力が生成されます。  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrlParameter : string -&gt; unit&#xA;override this.WriteEncodedUrlParameter : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrlParameter urlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="urlText">エンコードして出力ストリームに書き込む URL パラメーターの文字列。</param>
        <summary>指定した URL パラメーターを要求側のデバイスに合わせてエンコードし、それを出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 URL のパラメーター部分のスペースは、正符号 (+) としてエンコードされ、等号 (=) は `%3d`としてエンコードされます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> メソッドを使用する方法を示しています。これにより、次の出力が生成されます。  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteEndTag : string -&gt; unit&#xA;override this.WriteEndTag : string -&gt; unit" Usage="htmlTextWriter.WriteEndTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">終了タグを書き込む要素。</param>
        <summary>タブ空白文字と指定したマークアップ要素の終了タグを書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> メソッドとは異なり、<xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> メソッドには、要素の終了タグが対応する開始タグと一致するようにするロジックはありません。  
  
   
  
## Examples  
 `<img>` 要素を表示するコード例を次に示します。 このコード例では、次のプロセスを使用します。  
  
-   <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> メソッドを呼び出して、要素の開始文字を表示します。  
  
-   `<img>` 要素に属性を書き込むために、<xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> メソッドの2つのオーバーロードを呼び出します。  
  
-   <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> メソッドを呼び出して、`<img>` 要素を閉じます。  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteFullBeginTag : string -&gt; unit&#xA;override this.WriteFullBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteFullBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">出力ストリームに書き込む要素。</param>
        <summary>タブ空白文字と指定したマークアップ要素の開始タグを出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> メソッドは、終了山かっこを記述しない <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> メソッドとは異なり、要素の開始タグの終わり山かっこ (>) を自動的に書き込みます。 属性を持たないマークアップ要素には <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> を使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>オーバーロードされたパラメーターで指定されたデータを <see cref="T:System.Web.UI.HtmlTextWriter" /> 出力ストリームに書き込み、続けて行終端文字列を書き込みます。 このメソッドのすべてのバージョンで、保留中のタブ空白文字が出力ストリームに書き込まれます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberSignature Language="F#" Value="override this.WriteLine : unit -&gt; unit" Usage="htmlTextWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>行終端文字列を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 詳細については、「<xref:System.IO.TextWriter.WriteLine%2A>」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドを使用して、`<img>` 要素がレンダリングされた後に行を挿入する方法を示しています。  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : bool -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込むブール値。</param>
        <summary>保留中のタブ空白文字とブール値のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : char -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込む文字。</param>
        <summary>保留中のタブ空白文字と Unicode 文字を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : char[] -&gt; unit" Usage="htmlTextWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">出力ストリームに書き込む文字配列。</param>
        <summary>保留中のタブ空白文字と Unicode 文字の配列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
   
  
## Examples  
 このセクションでは、2つのコード例について説明します。 最初の例では、配列を作成する方法を示します。 2つ目は、その配列の使用方法を示しています。  
  
 これらのコード例では、次のマークアップが生成されます。  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 次のコード例は、`hello world`を示す文字の配列を作成する方法を示しています。 配列には、2つの単語の間にスペースを作成する <xref:System.Web.UI.HtmlTextWriter.SpaceChar> フィールドが含まれています。  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 次のコード例では、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドを使用して、前の例で作成した `hello world` 文字配列をレンダリングします。  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : double -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込む倍精度浮動小数点数。</param>
        <summary>保留中のタブ空白文字と倍精度浮動小数点数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドを使用して <xref:System.Double.MaxValue?displayProperty=nameWithType> フィールドの値を表示する方法を示しています。  
  
 このコード例では、次のマークアップが生成されます。  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : int -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込む 32 バイト符号付き整数。</param>
        <summary>指定したタブ文字列と 32 バイトの符号付き整数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : int64 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込む 64 バイト符号付き整数。</param>
        <summary>指定したタブ文字列と 64 バイトの符号付き整数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : obj -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込むオブジェクト。</param>
        <summary>保留中のタブ空白文字とオブジェクトのテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドを使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> プロパティの値をコントロールに表示する方法を示しています。  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : single -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込む単精度浮動小数点数。</param>
        <summary>保留中のタブ空白文字と単精度浮動小数点数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドを使用して <xref:System.Single.Epsilon?displayProperty=nameWithType> フィールドの値を表示する方法を示しています。これは、<xref:System.Single> 構造体の最小値です。  
  
 このコード例では、次のマークアップが生成されます。  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="htmlTextWriter.WriteLine s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">出力ストリームに書き込む文字列。</param>
        <summary>保留中のタブ空白文字とテキスト文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : uint32 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">出力ストリームに書き込む 4 バイト符号なし整数。</param>
        <summary>指定したタブ文字列と 4 バイトの符号なし整数のテキスト形式を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">0 個以上の書式項目を格納している文字列。</param>
        <param name="arg0">書式指定するオブジェクト。</param>
        <summary>保留中のタブ空白文字とオブジェクトのテキスト形式を格納する書式設定された文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドは、<xref:System.String.Format%28System.String%2CSystem.Object%29> メソッドと同じセマンティクスを使用します。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドを使用して、<xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティの値を持つ書式設定された文字列を表示する方法を示しています。  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string * obj[] -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-1.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">0 個以上の書式項目を格納している文字列。</param>
        <param name="arg">書式設定するオブジェクト配列。</param>
        <summary>保留中のタブ空白文字とオブジェクト配列のテキスト形式を格納する書式設定された文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドは、<xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> メソッドと同じセマンティクスを使用します。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドを使用して、`value` メソッドを記述します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初の例では、文字列と配列を出力ストリームに表示する方法を示します。 2つ目は、配列を宣言する方法を示しています。  
  
 次のコード例は、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドを使用して、書式設定された文字列とオブジェクト配列の内容を出力ストリームに表示する方法を示しています。  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 次のコード例は、前のコード例でレンダリングされたオブジェクト配列を宣言する方法を示しています。  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : char[] * int * int -&gt; unit" Usage="htmlTextWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">出力ストリームにテキストを書き込む文字配列。</param>
        <param name="index">書き込みを開始する文字配列内の位置。</param>
        <param name="count">出力ストリームに書き込む配列内の文字数。</param>
        <summary>保留中のタブ空白文字と Unicode 文字の部分配列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初の例では、文字配列を作成する方法を示します。 2つ目は、配列の使用方法を示しています。  
  
 これらのコード例では、次のマークアップが生成されます。  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 次のコード例では `hello world`をスペルチェックする文字の配列を作成する方法を示します。 配列には、2つの単語の間にスペースを作成する <xref:System.Web.UI.HtmlTextWriter.SpaceChar> フィールドが含まれています。  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 次のコード例では、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドの `index` パラメーターと `count` パラメーターを使用して、前のコード例で作成した配列の最初の5文字を表示します。  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string * obj * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">0 個以上の書式項目を格納している文字列。</param>
        <param name="arg0">書式指定するオブジェクト。</param>
        <param name="arg1">書式指定するオブジェクト。</param>
        <summary>保留中のタブ空白文字と 2 つのオブジェクトのテキスト形式を格納する書式設定された文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドは、<xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> メソッドと同じセマンティクスを使用します。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドを使用して、書式設定された文字列と、<xref:System.Globalization.CultureInfo.CurrentCulture%2A> プロパティと <xref:System.DateTime.Today%2A> プロパティの値を表示する方法を示します。  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.WriteLineNoTabs : string -&gt; unit" Usage="htmlTextWriter.WriteLineNoTabs s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">出力ストリームに書き込む文字列。</param>
        <summary>文字列を出力ストリームに書き込み、続けて行終端文字列を書き込みます。 このメソッドは、指定されたタブ空白文字を無視します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 レンダリングされた文字列 `s`の前にタブ間隔を描画しない場合は、<xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> メソッドではなく <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> メソッドを使用します。  
  
 既定の行終端記号文字列は、キャリッジリターンの後にラインフィード ("\r\n") が続きます。 <xref:System.IO.TextWriter.WriteLine%2A> の基本メソッドは、`value` パラメーターを書き込むために使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>スタイル属性とその値を出力ストリームに書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string -&gt; unit&#xA;override this.WriteStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">出力ストリームに書き込むスタイル属性。</param>
        <param name="value">スタイル属性に割り当てられた値。</param>
        <summary>指定したスタイル属性を出力ストリームに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> メソッドは、次の形式でスタイル属性を書き込みます。  
  
 `name` `=` `value` `;`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string * bool -&gt; unit&#xA;override this.WriteStyleAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">出力ストリームに書き込むスタイル属性。</param>
        <param name="value">スタイル属性に割り当てられた値。</param>
        <param name="fEncode">スタイル属性と割り当てられた値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>指定したスタイル属性と値を出力ストリームに書き込み、さらに指定されている場合は値をエンコードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> メソッドは、次の形式でスタイル属性を書き込みます。  
  
 `name` `=` `value` `;`  
  
 <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> メソッドは、`value` パラメーターをエンコードするために使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberSignature Language="F#" Value="member this.WriteUrlEncodedString : string * bool -&gt; unit" Usage="htmlTextWriter.WriteUrlEncodedString (text, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="argument" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">エンコードして出力ストリームに書き込む文字列。</param>
        <param name="argument">URL のパラメーター セクションの一部として文字列をエンコードする場合は <see langword="true" />。URL のパス セクションの一部として文字列をエンコードする場合は <see langword="false" />。</param>
        <summary>指定された文字列を書き込んで、URL の要件に従ってエンコードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> メソッドは、ASCII コードが128未満の場合、URL 区切り記号 (`argument`の設定に依存) と見なされる文字を `%xx`形式の文字列にエンコードします。それ以外の場合は `%uxxxx`になります。 `x` は16進数字です。  
  
 <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> メソッドと <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> メソッドでは、<xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> メソッドがユーティリティメソッドとして使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
