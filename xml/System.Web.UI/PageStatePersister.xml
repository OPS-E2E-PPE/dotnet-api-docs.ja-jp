<Type Name="PageStatePersister" FullName="System.Web.UI.PageStatePersister">
  <Metadata><Meta Name="ms.openlocfilehash" Value="45a13af7920e084aaeead3475608a3f987f872a1" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78759341" /></Metadata><TypeSignature Language="C#" Value="public abstract class PageStatePersister" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageStatePersister extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageStatePersister" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageStatePersister" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageStatePersister abstract" />
  <TypeSignature Language="F#" Value="type PageStatePersister = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="82e5a-101">ASP.NET ビューステート永続化機構の基本機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-101">Provides the base functionality for ASP.NET view state persistence mechanisms.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82e5a-102">HTTP 要求と応答は本質的にステートレスです。</span><span class="sxs-lookup"><span data-stu-id="82e5a-102">The HTTP requests and responses are inherently stateless.</span></span> <span data-ttu-id="82e5a-103">HTTP 要求間の状態情報を保持するために、ASP.NET サーバーページは <xref:System.Web.UI.Page> 状態を格納できます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-103">To maintain state information between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state.</span></span> <span data-ttu-id="82e5a-104">この状態は、ビューステートと呼ばれ、ページおよびコントロールの設定とデータで構成されています。ページとコントロールは、ユーザーが最後にサーバーに対して行ったラウンドトリップで見て操作したものと同じように見えます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-104">This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the server.</span></span> <span data-ttu-id="82e5a-105">複数のメカニズムがあり、同じページに対する連続した要求の間にビューステートを格納します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-105">Several mechanisms exist to store view state between successive requests to the same page.</span></span> <span data-ttu-id="82e5a-106">抽象 <xref:System.Web.UI.PageStatePersister> クラスは、これらの状態情報格納機構の基本クラスを表します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-106">The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state information storage mechanisms.</span></span>  
  
 <span data-ttu-id="82e5a-107">ASP.NET の既定のビューステート永続化機構では、ページ上の非表示の HTML 要素 (`type` 属性が `"hidden"`に設定されている要素) で、Base64 でエンコードされた文字列として状態情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-107">The default view state persistence mechanism in ASP.NET is to maintain the state information as a Base64-encoded string in a hidden HTML element (an element with the `type` attribute set to `"hidden"`) on the page.</span></span> <span data-ttu-id="82e5a-108">ASP.NET ページは、<xref:System.Web.UI.IStateFormatter> インスタンスを使用してオブジェクトの状態情報をシリアル化および逆シリアル化するために、<xref:System.Web.UI.HiddenFieldPageStatePersister> オブジェクトを使用してこの作業を実行します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-108">An ASP.NET page uses a <xref:System.Web.UI.HiddenFieldPageStatePersister> object to perform this work, using an <xref:System.Web.UI.IStateFormatter> instance to serialize and deserialize object state information.</span></span> <span data-ttu-id="82e5a-109">または、帯域幅とリソースが限られているモバイルクライアントの <xref:System.Web.UI.SessionPageStatePersister> クラスを使用して、ページのビューステートをサーバーの <xref:System.Web.HttpContext.Session%2A> オブジェクトに格納することもできます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-109">Alternately, you can store the view state for your pages in the <xref:System.Web.HttpContext.Session%2A> object on the server using the <xref:System.Web.UI.SessionPageStatePersister> class for mobile clients with limited bandwidth and resources.</span></span> <span data-ttu-id="82e5a-110">場合によっては、ビューステートの永続化を完全に無効にすることがあります。</span><span class="sxs-lookup"><span data-stu-id="82e5a-110">In some cases, you might disable view state persistence altogether.</span></span> <span data-ttu-id="82e5a-111">これを行うと、状態の永続化に依存するページやコントロールが正しく動作しなくなることがあります。</span><span class="sxs-lookup"><span data-stu-id="82e5a-111">If you do this, the result is that sometimes pages and controls that rely on state persistence do not behave correctly.</span></span> <span data-ttu-id="82e5a-112">ページ状態管理とビューステートの詳細については、「 [ASP.NET State management の概要](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="82e5a-112">For more information about page state management and view state, see [ASP.NET State Management Overview](https://docs.microsoft.com/previous-versions/aspnet/75x4ha6s(v=vs.100)).</span></span>  
  
 <span data-ttu-id="82e5a-113">コントロールを作成する場合は、コントロールの状態情報を <xref:System.Web.UI.Control.ViewState%2A> ディクショナリ (<xref:System.Web.UI.StateBag> オブジェクト) に格納できます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-113">If you are writing controls, you can store state information for the controls in the <xref:System.Web.UI.Control.ViewState%2A> dictionary, which is a <xref:System.Web.UI.StateBag> object.</span></span> <span data-ttu-id="82e5a-114">開発者は、<xref:System.Web.UI.PageStatePersister.ControlState%2A> プロパティを使用してコントロールの状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-114">A developer would retrieve the control state through the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property.</span></span> <span data-ttu-id="82e5a-115"><xref:System.Web.UI.Control.ViewState%2A> プロパティにキーと値を割り当て、<xref:System.Web.UI.Page> オブジェクトが要求間で状態情報をシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-115">You assign keys and values to the <xref:System.Web.UI.Control.ViewState%2A> property, and the <xref:System.Web.UI.Page> object serializes the state information between requests.</span></span> <span data-ttu-id="82e5a-116">コントロールでカスタムの状態処理を実行するには、<xref:System.Web.UI.Control.LoadViewState%2A> メソッドと <xref:System.Web.UI.Control.SaveViewState%2A> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="82e5a-116">To perform custom state handling in your control, override the <xref:System.Web.UI.Control.LoadViewState%2A> and <xref:System.Web.UI.Control.SaveViewState%2A> methods.</span></span> <span data-ttu-id="82e5a-117">このディクショナリに格納されている状態情報は、ページ開発者によってビューステートが無効にされていると失われます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-117">Any state information that is stored in this dictionary is lost when view state is disabled by a page developer.</span></span> <span data-ttu-id="82e5a-118">この問題を軽減するために、ASP.NET バージョン2.0 では、重大な状態情報を制御状態と呼ばれる別のオブジェクトに格納できます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-118">To mitigate this, in ASP.NET version 2.0 you can store critical state information in a separate object, called control state.</span></span> <span data-ttu-id="82e5a-119">コントロールの状態オブジェクトは、ページ開発者によってビューステートが無効にされている場合には影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="82e5a-119">The control state object is not affected when view state is disabled by a page developer.</span></span> <span data-ttu-id="82e5a-120">状態情報をコントロール状態オブジェクトに格納するには、コントロールが <xref:System.Web.UI.Control.LoadControlState%2A> メソッドと <xref:System.Web.UI.Control.SaveControlState%2A> メソッドをオーバーライドし、コントロールが初期化されるたびに状態情報をコントロール状態に格納するようにコントロールを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="82e5a-120">Storing state information in the control state object requires that the control override the <xref:System.Web.UI.Control.LoadControlState%2A> and <xref:System.Web.UI.Control.SaveControlState%2A> methods and that the control be registered to store state information in control state every time the control is initialized.</span></span> <span data-ttu-id="82e5a-121"><xref:System.Web.UI.Control.OnInit%2A> メソッドをオーバーライドし、<xref:System.Web.UI.Page.RegisterRequiresControlState%2A> メソッドを呼び出すことによって、コントロールの状態を使用するようにコントロールを登録できます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-121">You can register a control to use control state by overriding the <xref:System.Web.UI.Control.OnInit%2A> method and calling the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method.</span></span> <span data-ttu-id="82e5a-122">コントロールの開発時に <xref:System.Web.UI.Control.ViewState%2A> プロパティとコントロールの状態を使用する方法の詳細については、「[カスタム ASP.NET サーバーコントロールの開発](https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="82e5a-122">For more information about using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)).</span></span>  
  
 <span data-ttu-id="82e5a-123">既存のビューステート永続化メカニズムをサポートできないクライアントのビューステートを維持するために、<xref:System.Web.UI.PageStatePersister> クラスを拡張して独自のビューステート永続化メソッドを導入できます。また、ページアダプターを使用すると、ページが提供されるクライアントの種類に基づいて、異なるビューステート永続化メカニズムを使用するように ASP.NET アプリケーションを構成できます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-123">To maintain view state on clients that cannot support the existing view state persistence mechanisms, you can extend the <xref:System.Web.UI.PageStatePersister> class to introduce your own view state persistence methods, and you can use page adapters to configure your ASP.NET application to use different view state persistence mechanisms based on the type of client to which a page is served.</span></span> <span data-ttu-id="82e5a-124"><xref:System.Web.UI.PageStatePersister> クラスから派生するクラスは、抽象 <xref:System.Web.UI.PageStatePersister.Save%2A> メソッドをオーバーライドして、ビューステートとコントロールの状態を永続メディアに格納し、<xref:System.Web.UI.PageStatePersister.Load%2A> メソッドをオーバーライドして抽出する必要があります。</span><span class="sxs-lookup"><span data-stu-id="82e5a-124">Classes that derive from the <xref:System.Web.UI.PageStatePersister> class must override the abstract <xref:System.Web.UI.PageStatePersister.Save%2A> method to store view state and control state in the persistence medium, and override the <xref:System.Web.UI.PageStatePersister.Load%2A> method to extract it.</span></span> <span data-ttu-id="82e5a-125">ビューステートとコントロールの状態を文字列にシリアル化する必要がある場合は、<xref:System.Web.UI.PageStatePersister.StateFormatter%2A> プロパティを使用してアクセスされる <xref:System.Web.UI.IStateFormatter> オブジェクトを使用できます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-125">If you need to serialize view state and control state to a string, you can use the <xref:System.Web.UI.IStateFormatter> object that is accessed using the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property.</span></span> <span data-ttu-id="82e5a-126">オブジェクトの状態情報を、Base64 でエンコードされた文字列に効率的にシリアル化および逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-126">It efficiently serializes and deserializes object state information to a Base64-encoded string.</span></span> <span data-ttu-id="82e5a-127">また、<xref:System.Web.UI.PageStatePersister.StateFormatter%2A> プロパティをオーバーライドして、独自のオブジェクト状態のシリアル化メカニズムを提供することもできます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-127">You can also override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to supply your own object state serialization mechanism.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82e5a-128">次のコード例では、Web サーバーにビューとコントロールの状態を保存する <xref:System.Web.UI.PageStatePersister> オブジェクトを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-128">The following code example demonstrates how to create a <xref:System.Web.UI.PageStatePersister> object that saves view and control state on the Web server.</span></span> <span data-ttu-id="82e5a-129">`StreamPageStatePersister` は、<xref:System.Web.UI.PageStatePersister.Load%2A> メソッドと <xref:System.Web.UI.PageStatePersister.Save%2A> メソッドをオーバーライドして、ビューステート情報を抽出して保存する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="82e5a-129">The `StreamPageStatePersister` demonstrates how to override the <xref:System.Web.UI.PageStatePersister.Load%2A> and <xref:System.Web.UI.PageStatePersister.Save%2A> methods to extract and save view state information.</span></span> <span data-ttu-id="82e5a-130">状態の永続化メカニズムはアダプティブレンダリングとクライアント機能に関連しているため、ASP.NET アプリケーションの `StreamPageStatePersister` をアクティブ化するために `MyPageAdapter` クラスが用意されています。</span><span class="sxs-lookup"><span data-stu-id="82e5a-130">Because the state persistence mechanisms are related to adaptive rendering and client capabilities, the `MyPageAdapter` class is provided to activate the `StreamPageStatePersister` for an ASP.NET application.</span></span> <span data-ttu-id="82e5a-131">最後に、ブラウザー機能 (ブラウザー) ファイルが提供され、特定のクライアントクラス (この場合は既定の Web ブラウザー) に対して `MyPageAdapter` アダプターが有効になります。</span><span class="sxs-lookup"><span data-stu-id="82e5a-131">Finally, a browser capabilities (.browser) file is provided to enable the `MyPageAdapter` adapter for a specific class of clients (in this case, the default Web browser).</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#1)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#1)]  
  
 <span data-ttu-id="82e5a-132">次のコード例は、`StreamPageStatePersister`のインスタンスを返す <xref:System.Web.UI.Adapters.PageAdapter> クラスを作成する方法を示しています。これは、ASP.NET Web ページのビューとコントロールの状態を保持するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-132">The following code example demonstrates how to create a <xref:System.Web.UI.Adapters.PageAdapter> class that returns an instance of `StreamPageStatePersister`, which is used to persist view and control state for an ASP.NET Web page.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#5)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#5)]  
  
 <span data-ttu-id="82e5a-133">次のコンパイラコマンドラインを使用して、サンプルを実行するために使用できるアセンブリにこれらの2つのクラスをコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="82e5a-133">Compile these two classes into an assembly that you can use to run a sample, using the following compiler command line.</span></span> <span data-ttu-id="82e5a-134">コンパイルされたアセンブリが、ASP.NET アプリケーションルートの下の \Bin ディレクトリにあることを確認します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-134">Ensure that the compiled assembly is in the \Bin directory underneath the ASP.NET application root.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#6)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#6)]  
  
 <span data-ttu-id="82e5a-135">最後に、`MyPageAdapter` アダプターを有効にするには、ASP.NET アプリケーションルートの下にブラウザーという名前のディレクトリを作成し、構成情報を含むブラウザーファイルをインクルードする必要があります。</span><span class="sxs-lookup"><span data-stu-id="82e5a-135">Finally, to enable the `MyPageAdapter` adapter, you must create a directory named Browsers underneath the ASP.NET application root, and include a .browser file with configuration information.</span></span> <span data-ttu-id="82e5a-136">構成ファイルの `<refid>` 要素は、構成が既定のブラウザー構成ファイルの既定のブラウザーに指定された値をオーバーライドすることを示します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-136">The `<refid>` element in the configuration file indicates that the configuration overrides the values specified for the default browser in the Default.browser configuration file.</span></span> <span data-ttu-id="82e5a-137">この例では、(通常はアダプターが使用されていない) ASP.NET Web ページに対して `MyPageAdapter` が使用されます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-137">In this example, `MyPageAdapter` is used for ASP.NET Web pages (where normally no adapter is used).</span></span>  
  
```  
<browsers>  
    <browser refid="Default" >  
        <controlAdapters>  
            <adapter   
                controlType="System.Web.UI.Page"                              
                adapterType="Samples.AspNet.CS.MyPageAdapter" />  
        </controlAdapters>  
    </browser>  
</browsers>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ObjectStateFormatter" />
    <altmember cref="T:System.Web.UI.LosFormatter" />
    <altmember cref="T:System.Web.UI.Pair" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageStatePersister (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (page As Page)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageStatePersister(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageStatePersister : System.Web.UI.Page -&gt; System.Web.UI.PageStatePersister" Usage="new System.Web.UI.PageStatePersister page" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page"><span data-ttu-id="82e5a-138">ビューステート永続化機構が作成される <see cref="T:System.Web.UI.Page" />。</span><span class="sxs-lookup"><span data-stu-id="82e5a-138">The <see cref="T:System.Web.UI.Page" /> that the view state persistence mechanism is created for.</span></span></param>
        <summary><span data-ttu-id="82e5a-139"><see cref="T:System.Web.UI.PageStatePersister" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-139">Initializes a new instance of the <see cref="T:System.Web.UI.PageStatePersister" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="82e5a-140"><paramref name="page" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="82e5a-140">The <paramref name="page" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ControlState">
      <MemberSignature Language="C#" Value="public object ControlState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ControlState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ControlState" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ControlState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ControlState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ControlState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82e5a-141">オブジェクトを取得または設定します。このオブジェクトは、現在の <see cref="T:System.Web.UI.Page" /> オブジェクトによって格納されているコントロールが Web サーバーへの HTTP 要求間で永続化するために使用しているデータを表します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-141">Gets or sets an object that represents the data that controls contained by the current <see cref="T:System.Web.UI.Page" /> object use to persist across HTTP requests to the Web server.</span></span></summary>
        <value><span data-ttu-id="82e5a-142">ビューステート データを格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82e5a-142">An object that contains view state data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82e5a-143">コントロールの状態は、Web サーバーコントロールが機能する必要がある重大なビューステートデータで構成されるオブジェクトであり、通常のビューステート情報とは別のオブジェクトに含まれています。</span><span class="sxs-lookup"><span data-stu-id="82e5a-143">Control state is an object comprised of critical view state data that Web server controls need to function, and is contained in a separate object from normal view state information.</span></span> <span data-ttu-id="82e5a-144">コントロールの状態データは、ビューステートが <xref:System.Web.UI.Page> レベルで無効になっている場合は影響を受けませんが、を使用するための追加の実装手順が必要です。</span><span class="sxs-lookup"><span data-stu-id="82e5a-144">Control state data is not affected when view state is disabled at the <xref:System.Web.UI.Page> level, but requires extra implementation steps to use.</span></span> <span data-ttu-id="82e5a-145">コントロールの開発時に <xref:System.Web.UI.Control.ViewState%2A> のプロパティとコントロールの状態を使用する方法の詳細については、「[カスタム ASP.NET サーバーコントロールの開発](https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="82e5a-145">For more information on using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82e5a-146">次のコード例は、<xref:System.Web.UI.PageStatePersister> クラスから派生したクラスが <xref:System.Web.UI.PageStatePersister.ControlState%2A> プロパティを初期化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="82e5a-146">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property.</span></span> <span data-ttu-id="82e5a-147">この例では、<xref:System.Web.UI.PageStatePersister.ControlState%2A> プロパティが <xref:System.Web.UI.Pair> オブジェクトの <xref:System.Web.UI.Pair.Second> フィールドに割り当てられ、<xref:System.Web.UI.ObjectStateFormatter> クラスを使用してシリアル化されています。</span><span class="sxs-lookup"><span data-stu-id="82e5a-147">In this example, the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property has been assigned to the <xref:System.Web.UI.Pair.Second> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> class.</span></span> <span data-ttu-id="82e5a-148"><xref:System.Web.UI.PageStatePersister.Load%2A> メソッドが呼び出されると、<xref:System.Web.UI.ObjectStateFormatter> クラスを使用してビューステートとコントロールの状態情報が逆シリアル化され、<xref:System.Web.UI.PageStatePersister.ControlState%2A> プロパティが結果の <xref:System.Web.UI.Pair> オブジェクトの <xref:System.Web.UI.Pair.Second> フィールドから初期化されます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-148">When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> class is used to deserialize view state and control state information, and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.Second> field.</span></span> <span data-ttu-id="82e5a-149">このコード例は、<xref:System.Web.UI.PageStatePersister> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="82e5a-149">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Load" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Load ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Load();" />
      <MemberSignature Language="F#" Value="abstract member Load : unit -&gt; unit" Usage="pageStatePersister.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82e5a-150">派生クラスによってオーバーライドされ、<see cref="T:System.Web.UI.Page" /> オブジェクトが自身のコントロール階層を初期化するときに、永続化された状態情報を逆シリアル化して読み込みます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-150">Overridden by derived classes to deserialize and load persisted state information when a <see cref="T:System.Web.UI.Page" /> object initializes its control hierarchy.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82e5a-151"><xref:System.Web.UI.PageStatePersister> クラスから派生するクラスは、<xref:System.Web.UI.PageStatePersister.Load%2A> メソッドを実装して、<xref:System.Web.UI.PageStatePersister.ViewState%2A> および <xref:System.Web.UI.PageStatePersister.ControlState%2A> プロパティを保存形式から初期化します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-151">Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Load%2A> method to initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties from some persisted format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82e5a-152">次のコード例は、<xref:System.Web.UI.PageStatePersister> クラスから派生したクラスが <xref:System.Web.UI.PageStatePersister.Load%2A> メソッドを実装して、永続メディアからビューステートを読み込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="82e5a-152">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the <xref:System.Web.UI.PageStatePersister.Load%2A> method to load view state from a persistence medium.</span></span> <span data-ttu-id="82e5a-153">`StreamPageStatePersister` は、ストリームからデータを読み取ろうとします。</span><span class="sxs-lookup"><span data-stu-id="82e5a-153">The `StreamPageStatePersister` attempts to read data from a stream.</span></span> <span data-ttu-id="82e5a-154"><xref:System.Web.UI.IStateFormatter> オブジェクトを使用して、ビューステートデータを逆シリアル化し、<xref:System.Web.UI.PageStatePersister.ViewState%2A> プロパティと <xref:System.Web.UI.PageStatePersister.ControlState%2A> プロパティを初期化します。このプロパティは、ページがコントロールを初期化するために使用します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-154">It uses an <xref:System.Web.UI.IStateFormatter> object to deserialize view state data and initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property, which a page uses to initialize controls.</span></span> <span data-ttu-id="82e5a-155">このコード例は、<xref:System.Web.UI.PageStatePersister> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="82e5a-155">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Page">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Page Page { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Page Page" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.Page" />
      <MemberSignature Language="VB.NET" Value="Protected Property Page As Page" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Page ^ Page { System::Web::UI::Page ^ get(); void set(System::Web::UI::Page ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Page : System.Web.UI.Page with get, set" Usage="System.Web.UI.PageStatePersister.Page" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Page</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82e5a-156">ビューステート永続化機構が作成される対象の <see cref="T:System.Web.UI.Page" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-156">Gets or sets the <see cref="T:System.Web.UI.Page" /> object that the view state persistence mechanism is created for.</span></span></summary>
        <value><span data-ttu-id="82e5a-157"><see cref="T:System.Web.UI.Page" /> が関連付けられる <see cref="T:System.Web.UI.PageStatePersister" />。</span><span class="sxs-lookup"><span data-stu-id="82e5a-157">The <see cref="T:System.Web.UI.Page" /> that the <see cref="T:System.Web.UI.PageStatePersister" /> is associated with.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82e5a-158">現在の <xref:System.Web.HttpContext> オブジェクトにアクセスするには、<xref:System.Web.UI.PageStatePersister.Page%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-158">You can use the <xref:System.Web.UI.PageStatePersister.Page%2A> property to access the current <xref:System.Web.HttpContext> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public abstract void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageStatePersister.Save" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Save();" />
      <MemberSignature Language="F#" Value="abstract member Save : unit -&gt; unit" Usage="pageStatePersister.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="82e5a-159">派生クラスによってオーバーライドされ、<see cref="T:System.Web.UI.Page" /> オブジェクトがメモリから読み出されるときに、永続化された状態情報をシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-159">Overridden by derived classes to serialize persisted state information when a <see cref="T:System.Web.UI.Page" /> object is unloaded from memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82e5a-160"><xref:System.Web.UI.PageStatePersister> クラスから派生するクラスは、<xref:System.Web.UI.PageStatePersister.ViewState%2A> および <xref:System.Web.UI.PageStatePersister.ControlState%2A> プロパティの内容を永続メディアに保存するための <xref:System.Web.UI.PageStatePersister.Save%2A> メソッドを実装します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-160">Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Save%2A> method to persist the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties to a persistence medium.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82e5a-161">次のコード例は、<xref:System.Web.UI.PageStatePersister> クラスから派生するクラスが <xref:System.Web.UI.PageStatePersister.Save%2A> メソッドを実装して、ビューステートを永続メディアに永続化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="82e5a-161">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the <xref:System.Web.UI.PageStatePersister.Save%2A> method to persist view state to a persistence medium.</span></span> <span data-ttu-id="82e5a-162">`StreamPageStatePersister` は <xref:System.Web.UI.IStateFormatter> オブジェクトを使用して、<xref:System.Web.UI.PageStatePersister.ViewState%2A> プロパティと <xref:System.Web.UI.PageStatePersister.ControlState%2A> プロパティの内容をシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-162">The `StreamPageStatePersister` uses an <xref:System.Web.UI.IStateFormatter> object to serialize the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and <xref:System.Web.UI.PageStatePersister.ControlState%2A> property.</span></span> <span data-ttu-id="82e5a-163">このコード例は、<xref:System.Web.UI.PageStatePersister> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="82e5a-163">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateFormatter">
      <MemberSignature Language="C#" Value="protected System.Web.UI.IStateFormatter StateFormatter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IStateFormatter StateFormatter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StateFormatter As IStateFormatter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::IStateFormatter ^ StateFormatter { System::Web::UI::IStateFormatter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StateFormatter : System.Web.UI.IStateFormatter" Usage="System.Web.UI.PageStatePersister.StateFormatter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IStateFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82e5a-164"><see cref="T:System.Web.UI.IStateFormatter" /> メソッドおよび <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> メッソドへの呼び出しで、<see cref="P:System.Web.UI.PageStatePersister.ControlState" /> プロパティおよび <see cref="M:System.Web.UI.PageStatePersister.Save" /> プロパティに格納されている状態情報のシリアル化と逆シリアル化に使用する <see cref="M:System.Web.UI.PageStatePersister.Load" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-164">Gets an <see cref="T:System.Web.UI.IStateFormatter" /> object that is used to serialize and deserialize the state information contained in the <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> and <see cref="P:System.Web.UI.PageStatePersister.ControlState" /> properties during calls to the <see cref="M:System.Web.UI.PageStatePersister.Save" /> and <see cref="M:System.Web.UI.PageStatePersister.Load" /> methods.</span></span></summary>
        <value><span data-ttu-id="82e5a-165">オブジェクトの状態のシリアル化と逆シリアル化に使用する <see cref="T:System.Web.UI.IStateFormatter" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="82e5a-165">An instance of <see cref="T:System.Web.UI.IStateFormatter" /> that is used to serialize and deserialize object state.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82e5a-166"><xref:System.Web.UI.PageStatePersister.StateFormatter%2A> プロパティをオーバーライドして、独自のビューステートフォーマッタを提供できます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-166">You can override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to provide your own view state formatter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82e5a-167">次のコード例は、<xref:System.Web.UI.PageStatePersister> クラスから派生したクラスが <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> プロパティにアクセスして <xref:System.Web.UI.ObjectStateFormatter> オブジェクトを取得する方法を示しています。これは、<xref:System.Web.UI.IStateFormatter> インターフェイスの既定の実装であり、ビューステートとコントロール状態をストリームにシリアル化するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-167">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class accesses the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to retrieve an <xref:System.Web.UI.ObjectStateFormatter> object, which is the default implementation of the <xref:System.Web.UI.IStateFormatter> interface, to serialize view state and control state to a stream.</span></span> <span data-ttu-id="82e5a-168">このコード例は、<xref:System.Web.UI.PageStatePersister> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="82e5a-168">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="public object ViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageStatePersister.ViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ViewState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : obj with get, set" Usage="System.Web.UI.PageStatePersister.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82e5a-169">オブジェクトを取得または設定します。このオブジェクトは、現在の <see cref="T:System.Web.UI.Page" /> オブジェクトによって格納されているコントロールが Web サーバーへの HTTP 要求間で永続化するために使用しているデータを表します。</span><span class="sxs-lookup"><span data-stu-id="82e5a-169">Gets or sets an object that represents the data that controls contained by the current <see cref="T:System.Web.UI.Page" /> object use to persist across HTTP requests to the Web server.</span></span></summary>
        <value><span data-ttu-id="82e5a-170">ビューステート データを格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="82e5a-170">An object that contains view state data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82e5a-171">ビューステートは、Web サーバーコントロールが自身で機能してレンダリングする必要がある状態データのディクショナリです。</span><span class="sxs-lookup"><span data-stu-id="82e5a-171">View state is a dictionary of state data that Web server controls need to function and render themselves.</span></span> <span data-ttu-id="82e5a-172">コントロール開発者は、通常、<xref:System.Web.UI.Control.ViewState%2A> プロパティを使用してビューステートオブジェクトにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="82e5a-172">Control developers typically access the view state object using the <xref:System.Web.UI.Control.ViewState%2A> property.</span></span> <span data-ttu-id="82e5a-173">ビューステートは、<xref:System.Web.UI.Page> レベルでビューステートが無効になっていると影響を受けます。その結果、このようなシナリオでは、コントロールが正しく動作しなくなる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="82e5a-173">View state is affected when view state is disabled at the <xref:System.Web.UI.Page> level, and as a result controls might not behave correctly in these scenarios.</span></span> <span data-ttu-id="82e5a-174">コントロールの開発時に <xref:System.Web.UI.Control.ViewState%2A> とコントロールの状態を使用する方法の詳細については、「[カスタム ASP.NET サーバーコントロールの開発](https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="82e5a-174">For more information on using <xref:System.Web.UI.Control.ViewState%2A> and control state when developing controls, see [Developing Custom ASP.NET Server Controls](https://docs.microsoft.com/previous-versions/aspnet/zt27tfhy(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="82e5a-175">次のコード例は、<xref:System.Web.UI.PageStatePersister> クラスから派生したクラスが <xref:System.Web.UI.PageStatePersister.ViewState%2A> プロパティを初期化する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="82e5a-175">The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property.</span></span> <span data-ttu-id="82e5a-176">この例では、<xref:System.Web.UI.PageStatePersister.ViewState%2A> プロパティが <xref:System.Web.UI.Pair> オブジェクトの <xref:System.Web.UI.Pair.First> フィールドに割り当てられ、<xref:System.Web.UI.ObjectStateFormatter> オブジェクトを使用してシリアル化されています。これは <xref:System.Web.UI.IStateFormatter> インターフェイスのインスタンスです。</span><span class="sxs-lookup"><span data-stu-id="82e5a-176">In this example, the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property has been assigned to the <xref:System.Web.UI.Pair.First> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> object, which is an instance of the <xref:System.Web.UI.IStateFormatter> interface.</span></span> <span data-ttu-id="82e5a-177"><xref:System.Web.UI.PageStatePersister.Load%2A> メソッドが呼び出されると、<xref:System.Web.UI.ObjectStateFormatter> インターフェイスを使用してビューステート情報が逆シリアル化され、<xref:System.Web.UI.PageStatePersister.ViewState%2A> プロパティが結果の <xref:System.Web.UI.Pair> オブジェクトの <xref:System.Web.UI.Pair.First> フィールドから初期化されます。</span><span class="sxs-lookup"><span data-stu-id="82e5a-177">When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> interface is used to deserialize view state information, and the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.First> field.</span></span> <span data-ttu-id="82e5a-178">このコード例は、<xref:System.Web.UI.PageStatePersister> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="82e5a-178">This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]
 [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
