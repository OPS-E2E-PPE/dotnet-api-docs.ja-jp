<Type Name="ScriptReference" FullName="System.Web.UI.ScriptReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ca159e5a341c1b346d2197e61bb430712b170c5" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78758951" /></Metadata><TypeSignature Language="C#" Value="public class ScriptReference : System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptReference extends System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptReference&#xA;Inherits ScriptReferenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptReference : System::Web::UI::ScriptReferenceBase" />
  <TypeSignature Language="F#" Value="type ScriptReference = class&#xA;    inherit ScriptReferenceBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptReferenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET Web ページで使用する ECMAScript (JavaScript) ファイルを登録します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET オブジェクト <xref:System.Web.UI.ScriptReference> を使用して登録することにより、JavaScript ファイルを Web ページに含めることができます。 Web サイトには、.js ファイル (静的スクリプトファイル) として配置されているスクリプトファイルを登録できます。 また、アセンブリにリソースとして埋め込まれているスクリプトファイルを登録することもできます。 スクリプトファイルの登録後、Web ページのクライアントスクリプトでその関数を使用できます。  
  
 静的スクリプトファイルを登録するには、<xref:System.Web.UI.ScriptReference> オブジェクトの <xref:System.Web.UI.ScriptReferenceBase.Path%2A> プロパティをファイルの相対位置に設定します。  
  
 アセンブリにリソースとして埋め込まれているスクリプトファイルを登録するには、<xref:System.Web.UI.ScriptReference.Assembly%2A> プロパティを、ファイルを含むアセンブリの名前に設定します。 次に、[<xref:System.Web.UI.ScriptReference.Name%2A>] プロパティを、アセンブリに埋め込まれている .js ファイルの名前に設定します。 この場合、スクリプトファイルは、リンクされていない埋め込みである必要があります。  
  
 <xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A> プロパティを設定して、スクリプトのデバッグバージョンまたはリリースバージョンのどちらを使用するかを指定します。  
  
 <xref:System.Web.UI.ScriptMode.Auto> 値は、スタンドアロンスクリプトファイルを参照しているか、アセンブリにリソースとして埋め込まれているスクリプトファイルを参照しているかによって、異なる結果を生成します。 スタンドアロンスクリプトファイルは、<xref:System.Web.UI.ScriptReferenceBase.Path%2A> プロパティを使用して定義されます。 アセンブリ参照にアクセスするには、<xref:System.Web.UI.ScriptReference.Name%2A> プロパティと <xref:System.Web.UI.ScriptReference.Assembly%2A> プロパティを使用する必要があります。 <xref:System.Web.UI.ScriptMode.Auto> 値の結果は次のようになります。  
  
-   <xref:System.Web.UI.ScriptReferenceBase.Path%2A> プロパティが指定されているスタンドアロンスクリプトファイルに適用すると、<xref:System.Web.UI.ScriptMode.Auto> 値は <xref:System.Web.UI.ScriptMode.Release>に相当します。  
  
-   アセンブリ内のスクリプト参照に適用された場合、<xref:System.Web.UI.ScriptMode.Auto> は <xref:System.Web.UI.ScriptMode.Inherit>に相当します。 <xref:System.Web.UI.ScriptReference.Name%2A> だけを指定した場合は、スクリプトを参照するために使用されます。 <xref:System.Web.UI.ScriptReference.Name%2A> と <xref:System.Web.UI.ScriptReferenceBase.Path%2A> プロパティの両方が指定されている場合、<xref:System.Web.UI.ScriptReference.Name%2A>ではなく <xref:System.Web.UI.ScriptReferenceBase.Path%2A> プロパティが使用されますが、<xref:System.Web.UI.ScriptMode.Auto> の値は引き続き <xref:System.Web.UI.ScriptMode.Inherit>となります。  
  
   
  
## Examples  
 次の例は、コントロールアセンブリに埋め込まれているカスタムコントロールと JavaScript ファイルを参照する方法を示しています。 アセンブリは、Web サイトの Bin フォルダーにあると想定されます。 カスタムコントロールは <xref:System.Web.UI.UpdatePanel> コントロールをアニメーション化します。 JavaScript ファイルは、SampleControl という名前の埋め込みリソースとしてコンパイルされます。 埋め込み JavaScript ファイルを登録するには、<xref:System.Web.UI.ScriptReference.Assembly%2A> プロパティと <xref:System.Web.UI.ScriptReference.Name%2A> プロパティを使用します。  
  
 この例を使用するには、例に示されている JavaScript ファイルを、カスタムコントロールを含む埋め込みリソースとしてコンパイルします。 生成されたアセンブリを Web サイトの Bin フォルダーに配置します。 JavaScript ファイルをアセンブリに埋め込む方法の例については、「[チュートリアル: Javascript ファイルをリソースとしてアセンブリに埋め](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)込む」を参照してください。  
  
 次の例は、カスタムコントロールを使用するページを示しています。  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 次の例は、カスタムコントロールクラス定義を示しています。  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 次の例は、サポートする JavaScript ファイルを示しています。  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 次の例は、カスタムコントロールおよび JavaScript ファイルを含むプロジェクトの AssemblyInfo ファイルに追加する必要があるコードを示しています。  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.ScriptReference" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.ScriptReference" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Web ページを基準とした相対的なクライアント スクリプト ファイルのパス。</param>
        <summary>指定されたパスを使用して、<see cref="T:System.Web.UI.ScriptReference" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string name, string assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, assembly As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ name, System::String ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string * string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference (name, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">アセンブリに埋め込まれているスクリプト ファイルの名前。</param>
        <param name="assembly">クライアント スクリプト ファイルがリソースとして埋め込まれているアセンブリの名前。</param>
        <summary>指定された名前とアセンブリを使用して、<see cref="T:System.Web.UI.ScriptReference" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : string with get, set" Usage="System.Web.UI.ScriptReference.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント スクリプト ファイルがリソースとして埋め込まれているアセンブリの名前を取得または設定します。</summary>
        <value>クライアント スクリプト ファイルがリソースとして埋め込まれているアセンブリの完全修飾名または部分修飾名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アセンブリに埋め込まれたリソースとして含まれているクライアントスクリプトファイルを参照する場合は、<xref:System.Web.UI.ScriptReference.Assembly%2A> プロパティを設定します。 <xref:System.Web.UI.ScriptReference.Assembly%2A> を完全修飾または部分修飾アセンブリ名に設定します。 完全修飾アセンブリ名には、名前、カルチャ、公開キー、およびバージョン番号が含まれます。 部分修飾アセンブリ名には、名前のみが含まれます。  
  
 <xref:System.Web.UI.ScriptReference.Assembly%2A>の値を指定する場合は、<xref:System.Web.UI.ScriptReference.Name%2A> プロパティで埋め込みリソースの名前も指定する必要があります。 それ以外の場合は、<xref:System.InvalidOperationException> がスローされます。  
  
 参照されるアセンブリは、Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに配置されている必要があります。  
  
   
  
## Examples  
 次の例は、コントロールアセンブリに埋め込まれているカスタムコントロールと JavaScript ファイルを参照する方法を示しています。 アセンブリは、Web サイトの Bin フォルダーにあると想定されます。 カスタムコントロールは <xref:System.Web.UI.UpdatePanel> コントロールをアニメーション化します。 JavaScript ファイルは、SampleControl という名前の埋め込みリソースとしてコンパイルされます。 埋め込み JavaScript ファイルを登録するには、<xref:System.Web.UI.ScriptReference.Assembly%2A> プロパティと <xref:System.Web.UI.ScriptReference.Name%2A> プロパティを使用します。  
  
 この例を使用するには、例に示されている JavaScript ファイルを、カスタムコントロールを含む埋め込みリソースとしてコンパイルします。 生成されたアセンブリを Web サイトの Bin フォルダーに配置します。 JavaScript ファイルをアセンブリに埋め込む方法の例については、「[チュートリアル: Javascript ファイルをリソースとしてアセンブリに埋め](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)込む」を参照してください。  
  
 次の例は、カスタムコントロールを使用するページを示しています。  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 次の例は、カスタムコントロールクラス定義を示しています。  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 次の例は、サポートする JavaScript ファイルを示しています。  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 次の例は、カスタムコントロールおよび JavaScript ファイルを含むプロジェクトの AssemblyInfo ファイルに追加する必要があるコードを示しています。  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrl">
      <MemberSignature Language="C#" Value="protected internal override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetUrl(class System.Web.UI.ScriptManager scriptManager, bool zip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetUrl (scriptManager As ScriptManager, zip As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetUrl(System::Web::UI::ScriptManager ^ scriptManager, bool zip);" />
      <MemberSignature Language="F#" Value="override this.GetUrl : System.Web.UI.ScriptManager * bool -&gt; string" Usage="scriptReference.GetUrl (scriptManager, zip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="zip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scriptManager">対象 Web ページ上の <see langword="ScriptManager" /> コントロール。</param>
        <param name="zip">スクリプトを圧縮する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary><see langword="src" /> 要素の <see langword="script" /> 属性の値として表示される URL を取得します。</summary>
        <returns><see langword="src" /> 要素の <see langword="script" /> 属性の値として表示される URL を含む文字列。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreScriptPath">
      <MemberSignature Language="C#" Value="public bool IgnoreScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreScriptPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreScriptPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreScriptPath : bool with get, set" Usage="System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. Instead of using ScriptManager.ScriptPath, set the Path property on each individual ScriptReference.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リソースからクライアント スクリプト ファイルを登録する場合に、URL に <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> プロパティが含まれるかどうかを示す値を取得または設定します。</summary>
        <value>クライアント スクリプトの登録時にスクリプト パスを使用しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スクリプトファイルの URL に <xref:System.Web.UI.ScriptManager.ScriptPath%2A> 値を含めずに、クライアントスクリプトファイルを登録する場合は、<xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A> を `true` に設定します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAjaxFrameworkScript">
      <MemberSignature Language="C#" Value="protected internal override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsAjaxFrameworkScript(class System.Web.UI.ScriptManager scriptManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsAjaxFrameworkScript (scriptManager As ScriptManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsAjaxFrameworkScript(System::Web::UI::ScriptManager ^ scriptManager);" />
      <MemberSignature Language="F#" Value="override this.IsAjaxFrameworkScript : System.Web.UI.ScriptManager -&gt; bool" Usage="scriptReference.IsAjaxFrameworkScript scriptManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="scriptManager"><see cref="T:System.Web.UI.ScriptManager" /> オブジェクト。</param>
        <summary>スクリプト参照が AJAX スクリプトであるかどうかを判断します。</summary>
        <returns>指定されたスクリプト参照が AJAX スクリプトである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromSystemWebExtensions">
      <MemberSignature Language="C#" Value="protected internal override bool IsFromSystemWebExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsFromSystemWebExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsFromSystemWebExtensions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsFromSystemWebExtensions();" />
      <MemberSignature Language="F#" Value="override this.IsFromSystemWebExtensions : unit -&gt; bool" Usage="scriptReference.IsFromSystemWebExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete. Use IsAjaxFrameworkScript(ScriptManager) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>複合スクリプトに ASP.NET AJAX フレームワーク スクリプトへの参照が含まれているかどうかを示します。</summary>
        <returns>複合スクリプトに ASP.NET AJAX フレームワーク スクリプトへの参照が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.ScriptReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント スクリプト ファイルが含まれる埋め込みリソースの名前を取得または設定します。</summary>
        <value>アセンブリにリソースとして埋め込まれているクライアント スクリプト ファイルの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アセンブリにリソースとして埋め込まれているクライアントスクリプトファイルを参照するように <xref:System.Web.UI.ScriptReference.Name%2A> プロパティを設定します。  
  
 同じスクリプト参照で <xref:System.Web.UI.ScriptReferenceBase.Path%2A> と <xref:System.Web.UI.ScriptReference.Name%2A> の両方のプロパティの値を定義すると、<xref:System.Web.UI.ScriptReferenceBase.Path%2A> プロパティが優先されます。  
  
   
  
## Examples  
 次の例は、コントロールアセンブリに埋め込まれているカスタムコントロールと JavaScript ファイルを参照する方法を示しています。 アセンブリは、Web サイトの Bin フォルダーにあると想定されます。 カスタムコントロールは <xref:System.Web.UI.UpdatePanel> コントロールをアニメーション化します。 JavaScript ファイルは、SampleControl という名前の埋め込みリソースとしてコンパイルされます。 埋め込み JavaScript ファイルを登録するには、<xref:System.Web.UI.ScriptReference.Assembly%2A> プロパティと <xref:System.Web.UI.ScriptReference.Name%2A> プロパティを使用します。  
  
 この例を使用するには、例に示されている JavaScript ファイルを、カスタムコントロールを含む埋め込みリソースとしてコンパイルします。 生成されたアセンブリを Web サイトの Bin フォルダーに配置します。 JavaScript ファイルをアセンブリに埋め込む方法の例については、「[チュートリアル: Javascript ファイルをリソースとしてアセンブリに埋め](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)込む」を参照してください。  
  
 次の例は、カスタムコントロールを使用するページを示しています。  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 次の例は、カスタムコントロールクラス定義を示しています。  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 次の例は、サポートする JavaScript ファイルを示しています。  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 次の例は、カスタムコントロールおよび JavaScript ファイルを含むプロジェクトの AssemblyInfo ファイルに追加する必要があるコードを示しています。  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="scriptReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.ScriptReference.Name" /> プロパティ、<see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> プロパティ、または型名の値を表す文字列を返します。</summary>
        <returns><see cref="P:System.Web.UI.ScriptReference.Name" /> プロパティが定義されていれば、そのプロパティの値。<see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> プロパティが定義されていれば、そのプロパティの値。それ以外の場合は、<see cref="P:System.Reflection.MemberInfo.Name" /> プロパティの値。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
