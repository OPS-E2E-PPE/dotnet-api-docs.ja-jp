<Type Name="ScriptReference" FullName="System.Web.UI.ScriptReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2ca159e5a341c1b346d2197e61bb430712b170c5" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78758951" /></Metadata><TypeSignature Language="C#" Value="public class ScriptReference : System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptReference extends System.Web.UI.ScriptReferenceBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptReference" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptReference&#xA;Inherits ScriptReferenceBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptReference : System::Web::UI::ScriptReferenceBase" />
  <TypeSignature Language="F#" Value="type ScriptReference = class&#xA;    inherit ScriptReferenceBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.ScriptReferenceBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1da1a-101">ASP.NET Web ページで使用する ECMAScript (JavaScript) ファイルを登録します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-101">Registers an ECMAScript (JavaScript) file for use on an ASP.NET Web page.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da1a-102">ASP.NET オブジェクト <xref:System.Web.UI.ScriptReference> を使用して登録することにより、JavaScript ファイルを Web ページに含めることができます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-102">You can include a JavaScript file on an ASP.NET Web page by registering it through a <xref:System.Web.UI.ScriptReference> object.</span></span> <span data-ttu-id="1da1a-103">Web サイトには、.js ファイル (静的スクリプトファイル) として配置されているスクリプトファイルを登録できます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-103">You can register a script file that is located as a .js file (a static script file) on the Web site.</span></span> <span data-ttu-id="1da1a-104">また、アセンブリにリソースとして埋め込まれているスクリプトファイルを登録することもできます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-104">You can also register a script file that is embedded as a resource in an assembly.</span></span> <span data-ttu-id="1da1a-105">スクリプトファイルの登録後、Web ページのクライアントスクリプトでその関数を使用できます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-105">After registering the script file, you can use its functions in client script on the Web page.</span></span>  
  
 <span data-ttu-id="1da1a-106">静的スクリプトファイルを登録するには、<xref:System.Web.UI.ScriptReference> オブジェクトの <xref:System.Web.UI.ScriptReferenceBase.Path%2A> プロパティをファイルの相対位置に設定します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-106">To register a static script file, set the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property of the <xref:System.Web.UI.ScriptReference> object to the relative location of the file.</span></span>  
  
 <span data-ttu-id="1da1a-107">アセンブリにリソースとして埋め込まれているスクリプトファイルを登録するには、<xref:System.Web.UI.ScriptReference.Assembly%2A> プロパティを、ファイルを含むアセンブリの名前に設定します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-107">To register a script file that is embedded as a resource in an assembly, set the <xref:System.Web.UI.ScriptReference.Assembly%2A> property to the name of the assembly that contains the file.</span></span> <span data-ttu-id="1da1a-108">次に、[<xref:System.Web.UI.ScriptReference.Name%2A>] プロパティを、アセンブリに埋め込まれている .js ファイルの名前に設定します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-108">Then set the <xref:System.Web.UI.ScriptReference.Name%2A> property to the name of the .js file that is embedded in the assembly.</span></span> <span data-ttu-id="1da1a-109">この場合、スクリプトファイルは、リンクされていない埋め込みである必要があります。</span><span class="sxs-lookup"><span data-stu-id="1da1a-109">In that case, the script file must be embedded, not linked.</span></span>  
  
 <span data-ttu-id="1da1a-110"><xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A> プロパティを設定して、スクリプトのデバッグバージョンまたはリリースバージョンのどちらを使用するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-110">You set the <xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A> property to indicate whether to use the debug or release version of the script.</span></span>  
  
 <span data-ttu-id="1da1a-111"><xref:System.Web.UI.ScriptMode.Auto> 値は、スタンドアロンスクリプトファイルを参照しているか、アセンブリにリソースとして埋め込まれているスクリプトファイルを参照しているかによって、異なる結果を生成します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-111">The <xref:System.Web.UI.ScriptMode.Auto> value produces different results depending on whether it refers to a standalone script file or to a script file that is embedded as a resource in an assembly.</span></span> <span data-ttu-id="1da1a-112">スタンドアロンスクリプトファイルは、<xref:System.Web.UI.ScriptReferenceBase.Path%2A> プロパティを使用して定義されます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-112">A standalone script file is defined with the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property.</span></span> <span data-ttu-id="1da1a-113">アセンブリ参照にアクセスするには、<xref:System.Web.UI.ScriptReference.Name%2A> プロパティと <xref:System.Web.UI.ScriptReference.Assembly%2A> プロパティを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1da1a-113">An assembly reference must be accessed through the <xref:System.Web.UI.ScriptReference.Name%2A> and <xref:System.Web.UI.ScriptReference.Assembly%2A> properties.</span></span> <span data-ttu-id="1da1a-114"><xref:System.Web.UI.ScriptMode.Auto> 値の結果は次のようになります。</span><span class="sxs-lookup"><span data-stu-id="1da1a-114">The results for the <xref:System.Web.UI.ScriptMode.Auto> value are as follows:</span></span>  
  
-   <span data-ttu-id="1da1a-115"><xref:System.Web.UI.ScriptReferenceBase.Path%2A> プロパティが指定されているスタンドアロンスクリプトファイルに適用すると、<xref:System.Web.UI.ScriptMode.Auto> 値は <xref:System.Web.UI.ScriptMode.Release>に相当します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-115">When it is applied to a standalone script file where the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property is specified, the <xref:System.Web.UI.ScriptMode.Auto> value is equivalent to <xref:System.Web.UI.ScriptMode.Release>.</span></span>  
  
-   <span data-ttu-id="1da1a-116">アセンブリ内のスクリプト参照に適用された場合、<xref:System.Web.UI.ScriptMode.Auto> は <xref:System.Web.UI.ScriptMode.Inherit>に相当します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-116">When it is applied to a script reference in an assembly, <xref:System.Web.UI.ScriptMode.Auto> is equivalent to <xref:System.Web.UI.ScriptMode.Inherit>.</span></span> <span data-ttu-id="1da1a-117"><xref:System.Web.UI.ScriptReference.Name%2A> だけを指定した場合は、スクリプトを参照するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-117">When only <xref:System.Web.UI.ScriptReference.Name%2A> is specified, it is used to reference the script.</span></span> <span data-ttu-id="1da1a-118"><xref:System.Web.UI.ScriptReference.Name%2A> と <xref:System.Web.UI.ScriptReferenceBase.Path%2A> プロパティの両方が指定されている場合、<xref:System.Web.UI.ScriptReference.Name%2A>ではなく <xref:System.Web.UI.ScriptReferenceBase.Path%2A> プロパティが使用されますが、<xref:System.Web.UI.ScriptMode.Auto> の値は引き続き <xref:System.Web.UI.ScriptMode.Inherit>となります。</span><span class="sxs-lookup"><span data-stu-id="1da1a-118">When <xref:System.Web.UI.ScriptReference.Name%2A> and the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property are both specified, the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property is used instead of <xref:System.Web.UI.ScriptReference.Name%2A>, but the <xref:System.Web.UI.ScriptMode.Auto> value is still equivalent to <xref:System.Web.UI.ScriptMode.Inherit>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1da1a-119">次の例は、コントロールアセンブリに埋め込まれているカスタムコントロールと JavaScript ファイルを参照する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-119">The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly.</span></span> <span data-ttu-id="1da1a-120">アセンブリは、Web サイトの Bin フォルダーにあると想定されます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-120">The assembly is assumed to be in the Bin folder of the Web site.</span></span> <span data-ttu-id="1da1a-121">カスタムコントロールは <xref:System.Web.UI.UpdatePanel> コントロールをアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-121">The custom control animates <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="1da1a-122">JavaScript ファイルは、SampleControl という名前の埋め込みリソースとしてコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-122">The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js.</span></span> <span data-ttu-id="1da1a-123">埋め込み JavaScript ファイルを登録するには、<xref:System.Web.UI.ScriptReference.Assembly%2A> プロパティと <xref:System.Web.UI.ScriptReference.Name%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-123">You register the embedded JavaScript file by using the <xref:System.Web.UI.ScriptReference.Assembly%2A> and <xref:System.Web.UI.ScriptReference.Name%2A> properties.</span></span>  
  
 <span data-ttu-id="1da1a-124">この例を使用するには、例に示されている JavaScript ファイルを、カスタムコントロールを含む埋め込みリソースとしてコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="1da1a-124">To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control.</span></span> <span data-ttu-id="1da1a-125">生成されたアセンブリを Web サイトの Bin フォルダーに配置します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-125">Put the resulting assembly into the Bin folder of the Web site.</span></span> <span data-ttu-id="1da1a-126">JavaScript ファイルをアセンブリに埋め込む方法の例については、「[チュートリアル: Javascript ファイルをリソースとしてアセンブリに埋め](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)込む」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1da1a-126">For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).</span></span>  
  
 <span data-ttu-id="1da1a-127">次の例は、カスタムコントロールを使用するページを示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-127">The following example shows a page that uses the custom control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 <span data-ttu-id="1da1a-128">次の例は、カスタムコントロールクラス定義を示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-128">The following example shows the custom control class definition.</span></span>  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 <span data-ttu-id="1da1a-129">次の例は、サポートする JavaScript ファイルを示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-129">The following example shows the supporting JavaScript file.</span></span>  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 <span data-ttu-id="1da1a-130">次の例は、カスタムコントロールおよび JavaScript ファイルを含むプロジェクトの AssemblyInfo ファイルに追加する必要があるコードを示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-130">The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.</span></span>  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1da1a-131"><see cref="T:System.Web.UI.ScriptReference" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-131">Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1da1a-132"><see cref="T:System.Web.UI.ScriptReference" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-132">Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1da1a-133">Web ページを基準とした相対的なクライアント スクリプト ファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="1da1a-133">The path of the client script file relative to the Web page.</span></span></param>
        <summary><span data-ttu-id="1da1a-134">指定されたパスを使用して、<see cref="T:System.Web.UI.ScriptReference" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-134">Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class by using a specified path.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptReference (string name, string assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, assembly As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptReference(System::String ^ name, System::String ^ assembly);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ScriptReference : string * string -&gt; System.Web.UI.ScriptReference" Usage="new System.Web.UI.ScriptReference (name, assembly)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assembly" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="1da1a-135">アセンブリに埋め込まれているスクリプト ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="1da1a-135">The name of the script file that is embedded in the assembly.</span></span></param>
        <param name="assembly"><span data-ttu-id="1da1a-136">クライアント スクリプト ファイルがリソースとして埋め込まれているアセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="1da1a-136">The name of the assembly that contains the client script file as an embedded resource.</span></span></param>
        <summary><span data-ttu-id="1da1a-137">指定された名前とアセンブリを使用して、<see cref="T:System.Web.UI.ScriptReference" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-137">Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class by using a specified name and assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public string Assembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Property Assembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Assembly { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : string with get, set" Usage="System.Web.UI.ScriptReference.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1da1a-138">クライアント スクリプト ファイルがリソースとして埋め込まれているアセンブリの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-138">Gets or sets the name of the assembly that contains the client script file as an embedded resource.</span></span></summary>
        <value><span data-ttu-id="1da1a-139">クライアント スクリプト ファイルがリソースとして埋め込まれているアセンブリの完全修飾名または部分修飾名。</span><span class="sxs-lookup"><span data-stu-id="1da1a-139">The fully qualified or partially qualified name of the assembly that contains a client script file as an embedded resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da1a-140">アセンブリに埋め込まれたリソースとして含まれているクライアントスクリプトファイルを参照する場合は、<xref:System.Web.UI.ScriptReference.Assembly%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-140">You set the <xref:System.Web.UI.ScriptReference.Assembly%2A> property when you reference a client script file that is included as an embedded resource in an assembly.</span></span> <span data-ttu-id="1da1a-141"><xref:System.Web.UI.ScriptReference.Assembly%2A> を完全修飾または部分修飾アセンブリ名に設定します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-141">Set <xref:System.Web.UI.ScriptReference.Assembly%2A> to the fully qualified or partially qualified assembly name.</span></span> <span data-ttu-id="1da1a-142">完全修飾アセンブリ名には、名前、カルチャ、公開キー、およびバージョン番号が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-142">A fully qualified assembly name includes a name, culture, public key, and version number.</span></span> <span data-ttu-id="1da1a-143">部分修飾アセンブリ名には、名前のみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-143">A partially qualified assembly name includes only a name.</span></span>  
  
 <span data-ttu-id="1da1a-144"><xref:System.Web.UI.ScriptReference.Assembly%2A>の値を指定する場合は、<xref:System.Web.UI.ScriptReference.Name%2A> プロパティで埋め込みリソースの名前も指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1da1a-144">When you specify a value for <xref:System.Web.UI.ScriptReference.Assembly%2A>, you must also specify the name of the embedded resource in the <xref:System.Web.UI.ScriptReference.Name%2A> property.</span></span> <span data-ttu-id="1da1a-145">それ以外の場合は、<xref:System.InvalidOperationException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-145">Otherwise, an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 <span data-ttu-id="1da1a-146">参照されるアセンブリは、Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに配置されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1da1a-146">The assembly being referenced must be located in either the Bin folder of the Web site or in the global assembly cache.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1da1a-147">次の例は、コントロールアセンブリに埋め込まれているカスタムコントロールと JavaScript ファイルを参照する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-147">The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly.</span></span> <span data-ttu-id="1da1a-148">アセンブリは、Web サイトの Bin フォルダーにあると想定されます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-148">The assembly is assumed to be in the Bin folder of the Web site.</span></span> <span data-ttu-id="1da1a-149">カスタムコントロールは <xref:System.Web.UI.UpdatePanel> コントロールをアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-149">The custom control animates <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="1da1a-150">JavaScript ファイルは、SampleControl という名前の埋め込みリソースとしてコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-150">The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js.</span></span> <span data-ttu-id="1da1a-151">埋め込み JavaScript ファイルを登録するには、<xref:System.Web.UI.ScriptReference.Assembly%2A> プロパティと <xref:System.Web.UI.ScriptReference.Name%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-151">You register the embedded JavaScript file by using the <xref:System.Web.UI.ScriptReference.Assembly%2A> and <xref:System.Web.UI.ScriptReference.Name%2A> properties.</span></span>  
  
 <span data-ttu-id="1da1a-152">この例を使用するには、例に示されている JavaScript ファイルを、カスタムコントロールを含む埋め込みリソースとしてコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="1da1a-152">To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control.</span></span> <span data-ttu-id="1da1a-153">生成されたアセンブリを Web サイトの Bin フォルダーに配置します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-153">Put the resulting assembly into the Bin folder of the Web site.</span></span> <span data-ttu-id="1da1a-154">JavaScript ファイルをアセンブリに埋め込む方法の例については、「[チュートリアル: Javascript ファイルをリソースとしてアセンブリに埋め](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)込む」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1da1a-154">For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).</span></span>  
  
 <span data-ttu-id="1da1a-155">次の例は、カスタムコントロールを使用するページを示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-155">The following example shows a page that uses the custom control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 <span data-ttu-id="1da1a-156">次の例は、カスタムコントロールクラス定義を示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-156">The following example shows the custom control class definition.</span></span>  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 <span data-ttu-id="1da1a-157">次の例は、サポートする JavaScript ファイルを示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-157">The following example shows the supporting JavaScript file.</span></span>  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 <span data-ttu-id="1da1a-158">次の例は、カスタムコントロールおよび JavaScript ファイルを含むプロジェクトの AssemblyInfo ファイルに追加する必要があるコードを示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-158">The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.</span></span>  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrl">
      <MemberSignature Language="C#" Value="protected internal override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetUrl(class System.Web.UI.ScriptManager scriptManager, bool zip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetUrl (scriptManager As ScriptManager, zip As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::String ^ GetUrl(System::Web::UI::ScriptManager ^ scriptManager, bool zip);" />
      <MemberSignature Language="F#" Value="override this.GetUrl : System.Web.UI.ScriptManager * bool -&gt; string" Usage="scriptReference.GetUrl (scriptManager, zip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" />
        <Parameter Name="zip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scriptManager"><span data-ttu-id="1da1a-159">対象 Web ページ上の <see langword="ScriptManager" /> コントロール。</span><span class="sxs-lookup"><span data-stu-id="1da1a-159">The <see langword="ScriptManager" /> control on the target Web page.</span></span></param>
        <param name="zip"><span data-ttu-id="1da1a-160">スクリプトを圧縮する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1da1a-160"><see langword="true" /> if the script should be compressed; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1da1a-161"><see langword="src" /> 要素の <see langword="script" /> 属性の値として表示される URL を取得します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-161">Retrieves the URL that is rendered as the value of the <see langword="src" /> attribute of the <see langword="script" /> element.</span></span></summary>
        <returns><span data-ttu-id="1da1a-162"><see langword="src" /> 要素の <see langword="script" /> 属性の値として表示される URL を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="1da1a-162">A string that contains the URL that is rendered as the value of the <see langword="src" /> attribute of the <see langword="script" /> element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreScriptPath">
      <MemberSignature Language="C#" Value="public bool IgnoreScriptPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreScriptPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreScriptPath As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreScriptPath { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreScriptPath : bool with get, set" Usage="System.Web.UI.ScriptReference.IgnoreScriptPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This property is obsolete. Instead of using ScriptManager.ScriptPath, set the Path property on each individual ScriptReference.")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1da1a-163">リソースからクライアント スクリプト ファイルを登録する場合に、URL に <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> プロパティが含まれるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-163">Gets or sets a value that indicates whether the <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> property is included in the URL when you register a client script file from a resource.</span></span></summary>
        <value><span data-ttu-id="1da1a-164">クライアント スクリプトの登録時にスクリプト パスを使用しない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1da1a-164"><see langword="true" /> if the script path is not used when you register the client script; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da1a-165">スクリプトファイルの URL に <xref:System.Web.UI.ScriptManager.ScriptPath%2A> 値を含めずに、クライアントスクリプトファイルを登録する場合は、<xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A> を `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-165">You set <xref:System.Web.UI.ScriptReference.IgnoreScriptPath%2A> to `true` when you want to register a client script file without including the <xref:System.Web.UI.ScriptManager.ScriptPath%2A> value in the URL of the script file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAjaxFrameworkScript">
      <MemberSignature Language="C#" Value="protected internal override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsAjaxFrameworkScript(class System.Web.UI.ScriptManager scriptManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsAjaxFrameworkScript (scriptManager As ScriptManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsAjaxFrameworkScript(System::Web::UI::ScriptManager ^ scriptManager);" />
      <MemberSignature Language="F#" Value="override this.IsAjaxFrameworkScript : System.Web.UI.ScriptManager -&gt; bool" Usage="scriptReference.IsAjaxFrameworkScript scriptManager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptManager" Type="System.Web.UI.ScriptManager" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="scriptManager"><span data-ttu-id="1da1a-166"><see cref="T:System.Web.UI.ScriptManager" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1da1a-166">A <see cref="T:System.Web.UI.ScriptManager" /> object.</span></span></param>
        <summary><span data-ttu-id="1da1a-167">スクリプト参照が AJAX スクリプトであるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-167">Determines whether the script reference is an AJAX script.</span></span></summary>
        <returns><span data-ttu-id="1da1a-168">指定されたスクリプト参照が AJAX スクリプトである場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1da1a-168"><see langword="true" /> if the script reference is an AJAX script; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFromSystemWebExtensions">
      <MemberSignature Language="C#" Value="protected internal override bool IsFromSystemWebExtensions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool IsFromSystemWebExtensions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function IsFromSystemWebExtensions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool IsFromSystemWebExtensions();" />
      <MemberSignature Language="F#" Value="override this.IsFromSystemWebExtensions : unit -&gt; bool" Usage="scriptReference.IsFromSystemWebExtensions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This method is obsolete. Use IsAjaxFrameworkScript(ScriptManager) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1da1a-169">複合スクリプトに ASP.NET AJAX フレームワーク スクリプトへの参照が含まれているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-169">Indicates whether the composite script contains a reference to an ASP.NET AJAX framework script.</span></span></summary>
        <returns><span data-ttu-id="1da1a-170">複合スクリプトに ASP.NET AJAX フレームワーク スクリプトへの参照が含まれている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1da1a-170"><see langword="true" /> if the composite script contains a reference to an ASP.NET AJAX framework script; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptReference.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.ScriptReference.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1da1a-171">クライアント スクリプト ファイルが含まれる埋め込みリソースの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-171">Gets or sets the name of the embedded resource that contains the client script file.</span></span></summary>
        <value><span data-ttu-id="1da1a-172">アセンブリにリソースとして埋め込まれているクライアント スクリプト ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="1da1a-172">The name of the client script file that is embedded as a resource in an assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1da1a-173">アセンブリにリソースとして埋め込まれているクライアントスクリプトファイルを参照するように <xref:System.Web.UI.ScriptReference.Name%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-173">You set the <xref:System.Web.UI.ScriptReference.Name%2A> property to reference a client script file that is embedded as a resource in an assembly.</span></span>  
  
 <span data-ttu-id="1da1a-174">同じスクリプト参照で <xref:System.Web.UI.ScriptReferenceBase.Path%2A> と <xref:System.Web.UI.ScriptReference.Name%2A> の両方のプロパティの値を定義すると、<xref:System.Web.UI.ScriptReferenceBase.Path%2A> プロパティが優先されます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-174">If you define values for both the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> and <xref:System.Web.UI.ScriptReference.Name%2A> properties in the same script reference, the <xref:System.Web.UI.ScriptReferenceBase.Path%2A> property takes precedence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1da1a-175">次の例は、コントロールアセンブリに埋め込まれているカスタムコントロールと JavaScript ファイルを参照する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-175">The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly.</span></span> <span data-ttu-id="1da1a-176">アセンブリは、Web サイトの Bin フォルダーにあると想定されます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-176">The assembly is assumed to be in the Bin folder of the Web site.</span></span> <span data-ttu-id="1da1a-177">カスタムコントロールは <xref:System.Web.UI.UpdatePanel> コントロールをアニメーション化します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-177">The custom control animates <xref:System.Web.UI.UpdatePanel> controls.</span></span> <span data-ttu-id="1da1a-178">JavaScript ファイルは、SampleControl という名前の埋め込みリソースとしてコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="1da1a-178">The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js.</span></span> <span data-ttu-id="1da1a-179">埋め込み JavaScript ファイルを登録するには、<xref:System.Web.UI.ScriptReference.Assembly%2A> プロパティと <xref:System.Web.UI.ScriptReference.Name%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-179">You register the embedded JavaScript file by using the <xref:System.Web.UI.ScriptReference.Assembly%2A> and <xref:System.Web.UI.ScriptReference.Name%2A> properties.</span></span>  
  
 <span data-ttu-id="1da1a-180">この例を使用するには、例に示されている JavaScript ファイルを、カスタムコントロールを含む埋め込みリソースとしてコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="1da1a-180">To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control.</span></span> <span data-ttu-id="1da1a-181">生成されたアセンブリを Web サイトの Bin フォルダーに配置します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-181">Put the resulting assembly into the Bin folder of the Web site.</span></span> <span data-ttu-id="1da1a-182">JavaScript ファイルをアセンブリに埋め込む方法の例については、「[チュートリアル: Javascript ファイルをリソースとしてアセンブリに埋め](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89)込む」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1da1a-182">For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](https://msdn.microsoft.com/library/d8cb78cd-95a9-4dc6-92df-391866817e89).</span></span>  
  
 <span data-ttu-id="1da1a-183">次の例は、カスタムコントロールを使用するページを示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-183">The following example shows a page that uses the custom control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ScriptReference#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ScriptReference#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/Default.aspx#1)]  
  
 <span data-ttu-id="1da1a-184">次の例は、カスタムコントロールクラス定義を示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-184">The following example shows the custom control class definition.</span></span>  
  
 [!code-csharp[System.Web.UI.ScriptReference#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/customcontrol.cs#2)]
 [!code-vb[System.Web.UI.ScriptReference#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/customcontrol.vb#2)]  
  
 <span data-ttu-id="1da1a-185">次の例は、サポートする JavaScript ファイルを示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-185">The following example shows the supporting JavaScript file.</span></span>  
  
 [!code-javascript[System.Web.UI.ScriptReference#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/UpdatePanelAnimation.js#3)]  
  
 <span data-ttu-id="1da1a-186">次の例は、カスタムコントロールおよび JavaScript ファイルを含むプロジェクトの AssemblyInfo ファイルに追加する必要があるコードを示しています。</span><span class="sxs-lookup"><span data-stu-id="1da1a-186">The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.</span></span>  
  
 [!code-csharp[System.Web.UI.ScriptReference#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.ScriptReference/CS/AssemblyInfo.cs#4)]
 [!code-vb[System.Web.UI.ScriptReference#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.ScriptReference/vb/AssemblyInfo.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptReference.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="scriptReference.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1da1a-187"><see cref="P:System.Web.UI.ScriptReference.Name" /> プロパティ、<see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> プロパティ、または型名の値を表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="1da1a-187">Returns a string that represents the value of the <see cref="P:System.Web.UI.ScriptReference.Name" /> property, the <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> property, or the type name.</span></span></summary>
        <returns><span data-ttu-id="1da1a-188"><see cref="P:System.Web.UI.ScriptReference.Name" /> プロパティが定義されていれば、そのプロパティの値。<see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> プロパティが定義されていれば、そのプロパティの値。それ以外の場合は、<see cref="P:System.Reflection.MemberInfo.Name" /> プロパティの値。</span><span class="sxs-lookup"><span data-stu-id="1da1a-188">The value of the <see cref="P:System.Web.UI.ScriptReference.Name" /> property if it is defined, or the value of the <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> property if it is defined; otherwise, the value of the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
