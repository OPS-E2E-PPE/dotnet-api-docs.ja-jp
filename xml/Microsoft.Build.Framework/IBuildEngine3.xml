<Type Name="IBuildEngine3" FullName="Microsoft.Build.Framework.IBuildEngine3">
  <Metadata><Meta Name="ms.openlocfilehash" Value="72535430a472c28762db6558c8a118071c92bbc9" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73364965" /></Metadata><TypeSignature Language="C#" Value="public interface IBuildEngine3 : Microsoft.Build.Framework.IBuildEngine2" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBuildEngine3 implements class Microsoft.Build.Framework.IBuildEngine, class Microsoft.Build.Framework.IBuildEngine2" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Framework.IBuildEngine3" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBuildEngine3&#xA;Implements IBuildEngine2" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBuildEngine3 : Microsoft::Build::Framework::IBuildEngine2" />
  <TypeSignature Language="F#" Value="type IBuildEngine3 = interface&#xA;    interface IBuildEngine2&#xA;    interface IBuildEngine" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Framework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.IBuildEngine2</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>このインターフェイスは、IBuildEngine を拡張して、プロジェクト ファイルを並列にビルドできるようにするメソッドを提供します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="BuildProjectFilesInParallel">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.BuildEngineResult BuildProjectFilesInParallel (string[] projectFileNames, string[] targetNames, System.Collections.IDictionary[] globalProperties, System.Collections.Generic.IList&lt;string&gt;[] removeGlobalProperties, string[] toolsVersion, bool returnTargetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.Build.Framework.BuildEngineResult BuildProjectFilesInParallel(string[] projectFileNames, string[] targetNames, class System.Collections.IDictionary[] globalProperties, class System.Collections.Generic.IList`1&lt;string&gt;[] removeGlobalProperties, string[] toolsVersion, bool returnTargetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine3.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.Generic.IList{System.String}[],System.String[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function BuildProjectFilesInParallel (projectFileNames As String(), targetNames As String(), globalProperties As IDictionary(), removeGlobalProperties As IList(Of String)(), toolsVersion As String(), returnTargetOutputs As Boolean) As BuildEngineResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Framework::BuildEngineResult BuildProjectFilesInParallel(cli::array &lt;System::String ^&gt; ^ projectFileNames, cli::array &lt;System::String ^&gt; ^ targetNames, cli::array &lt;System::Collections::IDictionary ^&gt; ^ globalProperties, cli::array &lt;System::Collections::Generic::IList&lt;System::String ^&gt; ^&gt; ^ removeGlobalProperties, cli::array &lt;System::String ^&gt; ^ toolsVersion, bool returnTargetOutputs);" />
      <MemberSignature Language="F#" Value="abstract member BuildProjectFilesInParallel : string[] * string[] * System.Collections.IDictionary[] * System.Collections.Generic.IList&lt;string&gt;[] * string[] * bool -&gt; Microsoft.Build.Framework.BuildEngineResult" Usage="iBuildEngine3.BuildProjectFilesInParallel (projectFileNames, targetNames, globalProperties, removeGlobalProperties, toolsVersion, returnTargetOutputs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.BuildEngineResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileNames" Type="System.String[]" />
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="globalProperties" Type="System.Collections.IDictionary[]" />
        <Parameter Name="removeGlobalProperties" Type="System.Collections.Generic.IList&lt;System.String&gt;[]" />
        <Parameter Name="toolsVersion" Type="System.String[]" />
        <Parameter Name="returnTargetOutputs" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="projectFileNames">ビルドするプロジェクト。</param>
        <param name="targetNames">ビルドするプロジェクト内のターゲット (null も指定できます)。</param>
        <param name="globalProperties">子プロジェクトに適用される、追加のグローバル プロパティの <see cref="T:System.Collections.IDictionary" /> の配列 (配列のエントリは null にすることもできます)。  
  
キーと値はどちらも文字列である必要があります。</param>
        <param name="removeGlobalProperties">削除する必要のあるグローバル プロパティのリスト。</param>
        <param name="toolsVersion">このビルド中に使用されるエンジンによって認識されるツール バージョン (null も指定できます)。</param>
        <param name="returnTargetOutputs">ターゲットの出力は、BuildEngineResult で返す必要があります。</param>
        <summary>タスクが特定のプロジェクト ファイルでのビルドを開始できるようにします。</summary>
        <returns>ビルドに成功した場合は、指定したターゲットの出力が返されます。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reacquire">
      <MemberSignature Language="C#" Value="public void Reacquire ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reacquire() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine3.Reacquire" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reacquire ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reacquire();" />
      <MemberSignature Language="F#" Value="abstract member Reacquire : unit -&gt; unit" Usage="iBuildEngine3.Reacquire " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを譲渡した後に、その再取得を待ちます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Yield">
      <MemberSignature Language="C#" Value="public void Yield ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Yield() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Framework.IBuildEngine3.Yield" />
      <MemberSignature Language="VB.NET" Value="Public Sub Yield ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Yield();" />
      <MemberSignature Language="F#" Value="abstract member Yield : unit -&gt; unit" Usage="iBuildEngine3.Yield " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Framework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このタスクに時間のかかるアウトプロセス コンポーネントがあり、その処理が完了するまでにビルドで他の処理を実行できることを、システムに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 CPU ごとに1つのノード (msbuild.exe プロセス) のみが存在します。 ノード上でいつでもビルドできるプロジェクト、ターゲット、およびタスクは1つだけです。 タスクが待機している場合、たとえば、生成されたツールやその他のイベントが完了するまで、タスクは Yield を呼び出すことができます。この場合、直ちにが返されます。 これにより、ノードが別のプロジェクトでターゲットをビルドできるようになります (使用可能な場合)。  タスクを続行する準備ができたら、<xref:Microsoft.Build.Framework.IBuildEngine3.Reacquire%2A> を呼び出す必要があります。 大まかなルールとして、タスクで、操作の実行に 20 ~ 30 秒以上かかると想定されている場合は、操作を開始する前に `Yield` を呼び出し、操作が完了したときに `Reacquire` することができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
