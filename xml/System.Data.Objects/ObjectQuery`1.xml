<Type Name="ObjectQuery&lt;T&gt;" FullName="System.Data.Objects.ObjectQuery&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c425390170366dd2695c3b67aa0c050f2dd4b23e" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83926471" /></Metadata><TypeSignature Language="C#" Value="public class ObjectQuery&lt;T&gt; : System.Data.Objects.ObjectQuery, System.Collections.Generic.IEnumerable&lt;T&gt;, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable&lt;T&gt;, System.Linq.IQueryable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectQuery`1&lt;T&gt; extends System.Data.Objects.ObjectQuery implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IOrderedQueryable`1&lt;!T&gt;, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectQuery(Of T)&#xA;Inherits ObjectQuery&#xA;Implements IEnumerable(Of T), IListSource, IOrderedQueryable(Of T), IQueryable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ObjectQuery : System::Data::Objects::ObjectQuery, System::Collections::Generic::IEnumerable&lt;T&gt;, System::ComponentModel::IListSource, System::Linq::IOrderedQueryable&lt;T&gt;, System::Linq::IQueryable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ObjectQuery&lt;'T&gt; = class&#xA;    inherit ObjectQuery&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface IOrderedQueryable&#xA;    interface IQueryable&#xA;    interface IEnumerable&#xA;    interface IListSource" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
  <TypeSignature Language="F#" Value="type ObjectQuery&lt;'T&gt; = class&#xA;    inherit ObjectQuery&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.ObjectQuery</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="27626-101">クエリのエンティティ型です。</span><span class="sxs-lookup"><span data-stu-id="27626-101">The entity type of the query.</span></span></typeparam>
    <summary><span data-ttu-id="27626-102">指定されたオブジェクト コンテキスト内の概念モデルに対する型指定されたクエリを表します。</span><span class="sxs-lookup"><span data-stu-id="27626-102">Represents a typed query against a conceptual model in a given object context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-103"><xref:System.Data.Objects.ObjectQuery%601> ジェネリック クラスは、特定の型のオブジェクトを 0 個以上含んだコレクションを返すクエリを表します。</span><span class="sxs-lookup"><span data-stu-id="27626-103">The <xref:System.Data.Objects.ObjectQuery%601> generic class represents a query that returns a collection of zero or more objects of a specific type.</span></span> <span data-ttu-id="27626-104">オブジェクト クエリを実行するには、事前に <xref:System.Data.Objects.ObjectContext> を定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-104">The <xref:System.Data.Objects.ObjectContext> must be defined before an object query can be executed.</span></span> <span data-ttu-id="27626-105">このコンテキストにより、クエリの作成と実行に必要な接続情報とメタデータ情報が取得されます。</span><span class="sxs-lookup"><span data-stu-id="27626-105">This context provides the connection and metadata information that is required to compose and execute the query.</span></span> <span data-ttu-id="27626-106">オブジェクト クエリは次のシナリオで実行されます。</span><span class="sxs-lookup"><span data-stu-id="27626-106">An object query is executed in the following scenarios:</span></span>

-   <span data-ttu-id="27626-107">`foreach` (C#) や `For Each` (Visual Basic) 列挙などの操作を実行するとき。</span><span class="sxs-lookup"><span data-stu-id="27626-107">When it is acted upon, such as during a `foreach` (C#) or `For Each` (Visual Basic) enumeration.</span></span>

-   <span data-ttu-id="27626-108"><xref:System.Collections.Generic.List%601> コレクションにデータを設定するためにクエリが割り当てられているとき。</span><span class="sxs-lookup"><span data-stu-id="27626-108">When it is assigned to fill a <xref:System.Collections.Generic.List%601> collection.</span></span>

-   <span data-ttu-id="27626-109"><xref:System.Data.Objects.ObjectQuery%601.Execute%2A> メソッドが明示的に呼び出されたとき。</span><span class="sxs-lookup"><span data-stu-id="27626-109">When the <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> method is explicitly called.</span></span>

 <span data-ttu-id="27626-110">クエリは、[!INCLUDE[esql](~/includes/esql-md.md)] ステートメントまたは LINQ クエリを使用して作成するか、またはクラスに含まれているクエリ ビルダー メソッドを使用して段階的に構築できます。</span><span class="sxs-lookup"><span data-stu-id="27626-110">The query itself can be created by using an [!INCLUDE[esql](~/includes/esql-md.md)] statement or a LINQ query, or it can be incrementally built by using the query builder methods included in the class.</span></span> <span data-ttu-id="27626-111">いずれの場合も、結果は新しい <xref:System.Data.Objects.ObjectQuery%601> インスタンスであり、これが明示的に実行されるか列挙されることで、クエリがデータ ソースに送信されて実行され、結果が返されます。</span><span class="sxs-lookup"><span data-stu-id="27626-111">In every case, the result is a new <xref:System.Data.Objects.ObjectQuery%601> instance that, when explicitly executed or enumerated over, will send the query to the data source for execution and return the results.</span></span>

 <span data-ttu-id="27626-112"><xref:System.Data.Objects.ObjectQuery%601> で多いのはエンティティ型ですが、<xref:System.Data.Common.DbDataRecord> 型 (匿名型に投影する場合) またはプリミティブ型 (整数や文字列など) にすることもできます。</span><span class="sxs-lookup"><span data-stu-id="27626-112">An <xref:System.Data.Objects.ObjectQuery%601> is frequently of an entity type, but it can also be of <xref:System.Data.Common.DbDataRecord> type, for projections to an anonymous type, or of a primitive type, such as an integer or string.</span></span> <span data-ttu-id="27626-113">詳しくは、「[オブジェクト クエリ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100))」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="27626-113">For more information, see [Object Queries](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="27626-114">このトピックの例は、 [Microsoft SQL Server の製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-114">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span>

 <span data-ttu-id="27626-115">この例では、<xref:System.Data.Objects.ObjectQuery%601> クラスのインスタンスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27626-115">The example shows how to construct an instance of the <xref:System.Data.Objects.ObjectQuery%601> class.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]

 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/9e7d8837-28c5-429d-a824-7bafb59724cf"><span data-ttu-id="27626-116">Entity SQL 言語</span><span class="sxs-lookup"><span data-stu-id="27626-116">Entity SQL Language</span></span></related>
    <related type="Article" href="/dotnet/framework/data/adonet/ef/language-reference/linq-to-entities"><span data-ttu-id="27626-117">LINQ to Entities</span><span class="sxs-lookup"><span data-stu-id="27626-117">LINQ to Entities</span></span></related>
    <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-118">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-118">Querying Data as Objects (Entity Framework)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="27626-119"><see cref="T:System.Data.Objects.ObjectQuery`1" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="27626-119">Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectQuery`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-120"><xref:System.Data.Objects.ObjectQuery%601> は、スカラー結果のコレクションではなく単一のスカラー結果を表すように初期化できます。</span><span class="sxs-lookup"><span data-stu-id="27626-120">An <xref:System.Data.Objects.ObjectQuery%601> can be initialized in such a way that it represents a single scalar result and not a collection of scalar results.</span></span> <span data-ttu-id="27626-121">一部の拡張メソッドは、入力としてコレクション結果を必要とします。</span><span class="sxs-lookup"><span data-stu-id="27626-121">Some extension methods require collection results as input.</span></span> <span data-ttu-id="27626-122">その場合は、該当するメソッドのいずれかが呼び出されたときに、<xref:System.ArgumentException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="27626-122">In this case, an <xref:System.ArgumentException> is thrown when one of these methods is called.</span></span> <span data-ttu-id="27626-123">詳しくは、「[オブジェクト クエリ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100))」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="27626-123">For more information, see [Object Queries](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span></span>

 <span data-ttu-id="27626-124">アプリケーションが実行時に Entity SQL クエリを生成する場合、データソースのコマンド長の制限事項に注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-124">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="27626-125">Entity SQL では、クエリ内のコマンドテキストの長さに制限は適用されません。</span><span class="sxs-lookup"><span data-stu-id="27626-125">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-126">オブジェクトとしてのデータのクエリと結果の整形 (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-126">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, context As ObjectContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectQuery(System::String ^ commandText, System::Data::Objects::ObjectContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectQuery&lt;'T&gt; : string * System.Data.Objects.ObjectContext -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="new System.Data.Objects.ObjectQuery&lt;'T&gt; (commandText, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="27626-127">[!INCLUDE[esql](~/includes/esql-md.md)] クエリ。</span><span class="sxs-lookup"><span data-stu-id="27626-127">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</span></span></param>
        <param name="context"><span data-ttu-id="27626-128">クエリが実行される <see cref="T:System.Data.Objects.ObjectContext" />。</span><span class="sxs-lookup"><span data-stu-id="27626-128">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</span></span></param>
        <summary><span data-ttu-id="27626-129">指定された [!INCLUDE[esql](~/includes/esql-md.md)] コマンドを最初のクエリとして使用して、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="27626-129">Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-130">アプリケーションが実行時に Entity SQL クエリを生成する場合、データソースのコマンド長の制限事項に注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-130">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="27626-131">Entity SQL では、クエリ内のコマンドテキストの長さに制限は適用されません。</span><span class="sxs-lookup"><span data-stu-id="27626-131">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>



## Examples
 <span data-ttu-id="27626-132">このトピックの例は、 [Microsoft SQL Server の製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-132">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="27626-133">この例では、<xref:System.Data.Objects.ObjectQuery%601> クラスのインスタンスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="27626-133">The example shows how to construct an instance of the <xref:System.Data.Objects.ObjectQuery%601> class.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-134">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-134">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, context As ObjectContext, mergeOption As MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectQuery(System::String ^ commandText, System::Data::Objects::ObjectContext ^ context, System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectQuery&lt;'T&gt; : string * System.Data.Objects.ObjectContext * System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="new System.Data.Objects.ObjectQuery&lt;'T&gt; (commandText, context, mergeOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="commandText"><span data-ttu-id="27626-135">[!INCLUDE[esql](~/includes/esql-md.md)] クエリ。</span><span class="sxs-lookup"><span data-stu-id="27626-135">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</span></span></param>
        <param name="context"><span data-ttu-id="27626-136">クエリが実行される <see cref="T:System.Data.Objects.ObjectContext" />。</span><span class="sxs-lookup"><span data-stu-id="27626-136">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</span></span></param>
        <param name="mergeOption"><span data-ttu-id="27626-137">このクエリによって取得されるエンティティを、同じ <see cref="T:System.Data.Objects.ObjectContext" /> に対する以前のクエリから返されたエンティティとどのようにマージするかを指定します。</span><span class="sxs-lookup"><span data-stu-id="27626-137">Specifies how the entities that are retrieved through this query should be merged with the entities that have been returned from previous queries against the same <see cref="T:System.Data.Objects.ObjectContext" />.</span></span></param>
        <summary><span data-ttu-id="27626-138">指定された [!INCLUDE[esql](~/includes/esql-md.md)] コマンドを最初のクエリとして使用し、さらに指定されたマージ オプションを使用して、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="27626-138">Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query and the specified merge option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-139">アプリケーションが実行時に Entity SQL クエリを生成する場合、データソースのコマンド長の制限事項に注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-139">When your application generates Entity SQL queries at runtime, you should be aware of any command length limitations of the data source.</span></span> <span data-ttu-id="27626-140">Entity SQL では、クエリ内のコマンドテキストの長さに制限は適用されません。</span><span class="sxs-lookup"><span data-stu-id="27626-140">Entity SQL does not enforce limitations on the length of the command text in queries.</span></span>



## Examples
 <span data-ttu-id="27626-141">この例は、Microsoft SQL Server の[製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-141">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="27626-142"><xref:System.Data.Objects.ObjectQuery%601> は、指定されたクエリ、<xref:System.Data.Objects.ObjectContext>、および <xref:System.Data.Objects.MergeOption> で初期化されます。</span><span class="sxs-lookup"><span data-stu-id="27626-142">The <xref:System.Data.Objects.ObjectQuery%601> is initialized with the specified query, <xref:System.Data.Objects.ObjectContext>, and <xref:System.Data.Objects.MergeOption>.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Function Distinct () As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Distinct();" />
      <MemberSignature Language="F#" Value="member this.Distinct : unit -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Distinct " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27626-143">結果が一意となるようにクエリを制限します。</span><span class="sxs-lookup"><span data-stu-id="27626-143">Limits the query to unique results.</span></span></summary>
        <returns><span data-ttu-id="27626-144"><see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT DISTINCT</see> が適用された元のインスタンスに相当する新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-144">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT DISTINCT</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-145">このクエリビルダーメソッドは、 [SELECT DISTINCT](/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql)が適用された元のクエリに相当する <xref:System.Data.Objects.ObjectQuery%601> インスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="27626-145">This query builder method returns an <xref:System.Data.Objects.ObjectQuery%601> instance that is equivalent to the original query with [SELECT DISTINCT](/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql) applied.</span></span>

 <span data-ttu-id="27626-146">`DISTINCT` 演算子は、データソース内の比較できない列 (ntext など) へのマッピングを含むオブジェクトには適用できません。</span><span class="sxs-lookup"><span data-stu-id="27626-146">The `DISTINCT` operator cannot be applied to an object that includes a mapping to a non-comparable column in the data source (such as ntext).</span></span>



## Examples
 <span data-ttu-id="27626-147">このトピックの例は、 [Microsoft SQL Server の製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-147">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="27626-148">この例では、<xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> メソッドを使用して、新しい <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="27626-148">The example uses <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span> <span data-ttu-id="27626-149">次に、新しい <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> オブジェクトで <xref:System.Data.Objects.ObjectQuery%601> を呼び出して、このクエリの一意の結果を取得します。</span><span class="sxs-lookup"><span data-stu-id="27626-149">Then it calls <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-150">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-150">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Except (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Except(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Except (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Except(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Except : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Except query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="27626-151">クエリから除外する結果を表す <see cref="T:System.Data.Objects.ObjectQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="27626-151">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to exclude from the query.</span></span></param>
        <summary><span data-ttu-id="27626-152">別のオブジェクト クエリの結果を基に一部の結果を除外することで、クエリの結果を制限します。</span><span class="sxs-lookup"><span data-stu-id="27626-152">Limits the query results by excluding results based on the results of another object query.</span></span></summary>
        <returns><span data-ttu-id="27626-153">指定された <paramref name="query" /> に基づいて <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/except-entity-sql">EXCEPT</see> が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-153">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/except-entity-sql">EXCEPT</see> applied based on the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-154">除外する結果を定義する指定された `query` は、同じ型であるか、または <xref:System.Data.Objects.ObjectQuery%601>と互換性のある型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-154">The supplied `query` that defines results to exclude must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>

 <span data-ttu-id="27626-155">指定された `query` で定義されているパラメーターは、<xref:System.Data.Objects.ObjectQuery%601> インスタンスで定義されているパラメーターとマージされます。</span><span class="sxs-lookup"><span data-stu-id="27626-155">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="27626-156">パラメーターは、結合された <xref:System.Data.Objects.ObjectParameterCollection> 内で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-156">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="27626-157">結合されたコレクション内に同じ名前のパラメーターが 2 つ存在することはできません。</span><span class="sxs-lookup"><span data-stu-id="27626-157">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="27626-158">詳細については、「[クエリビルダーメソッド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27626-158">For more information, see [Query Builder Methods](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span></span>

 <span data-ttu-id="27626-159">結果のクエリは、<xref:System.Data.Objects.ObjectQuery%601> が呼び出された <xref:System.Data.Objects.ObjectQuery%601.Except%2A> インスタンスから接続を継承します。</span><span class="sxs-lookup"><span data-stu-id="27626-159">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Except%2A> was called.</span></span>



## Examples
 <span data-ttu-id="27626-160">この例は、Microsoft SQL Server の[製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-160">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="27626-161">この例では、<xref:System.Data.Objects.ObjectQuery%601.Except%2A> メソッドを使用して新しい <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを作成し、新しいクエリの結果を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="27626-161">The example uses <xref:System.Data.Objects.ObjectQuery%601.Except%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object and then iterates through the result of the new query.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_except)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_except)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27626-162"><paramref name="query" /> パラメーターが <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="27626-162">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-163">オブジェクトとしてのデータのクエリと結果の整形 (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-163">Querying Data as Objects and Shaping Results (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;T&gt; Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!T&gt; Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute (mergeOption As MergeOption) As ObjectResult(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult&lt;T&gt; ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult&lt;'T&gt;" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption"><span data-ttu-id="27626-164">クエリの実行時に使用する <see cref="T:System.Data.Objects.MergeOption" />。</span><span class="sxs-lookup"><span data-stu-id="27626-164">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query.</span></span> <span data-ttu-id="27626-165">既定では、 <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />です。</span><span class="sxs-lookup"><span data-stu-id="27626-165">The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</span></span></param>
        <summary><span data-ttu-id="27626-166">指定されたマージ オプションを使用してオブジェクト クエリを実行します。</span><span class="sxs-lookup"><span data-stu-id="27626-166">Executes the object query with the specified merge option.</span></span></summary>
        <returns><span data-ttu-id="27626-167">クエリによって返されるエンティティ オブジェクトのコレクションを含む <see cref="T:System.Data.Objects.ObjectResult`1" />。</span><span class="sxs-lookup"><span data-stu-id="27626-167">An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-168">オブジェクト クエリの既定のマージ オプションは <xref:System.Data.Objects.MergeOption.AppendOnly> です。</span><span class="sxs-lookup"><span data-stu-id="27626-168">The default merge option for object queries is <xref:System.Data.Objects.MergeOption.AppendOnly>.</span></span> <span data-ttu-id="27626-169">詳しくは、「[ID 解決、状態管理、および変更の追跡](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100))」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="27626-169">For more information, see [Identity Resolution, State Management, and Change Tracking](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="27626-170">この例は、Microsoft SQL Server の[製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-170">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="27626-171">この例では、<xref:System.Data.Objects.ObjectResult%601> メソッドから <xref:System.Data.Objects.ObjectQuery.Execute%2A> を返します。</span><span class="sxs-lookup"><span data-stu-id="27626-171">The example returns an <xref:System.Data.Objects.ObjectResult%601> from <xref:System.Data.Objects.ObjectQuery.Execute%2A> method.</span></span> <span data-ttu-id="27626-172">次に、列挙子を取得し、クエリ結果を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="27626-172">Then it gets an enumerator and iterates through the query results.</span></span> <span data-ttu-id="27626-173">最後に、列挙子と <xref:System.Data.Objects.ObjectResult%601> オブジェクトを解放します。</span><span class="sxs-lookup"><span data-stu-id="27626-173">At the end it releases the enumerator and the <xref:System.Data.Objects.ObjectResult%601> object.</span></span>

 [!code-csharp[DP ObjectServices Concepts#QueryResult](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#queryresult)]
 [!code-vb[DP ObjectServices Concepts#QueryResult](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#queryresult)]

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-174">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-174">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; GroupBy (string keys, string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; GroupBy(string keys, string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBy (keys As String, projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of DbDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;System::Data::Common::DbDataRecord ^&gt; ^ GroupBy(System::String ^ keys, System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string * string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" Usage="objectQuery.GroupBy (keys, projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="27626-175">結果のグループ化に使用するキー列。</span><span class="sxs-lookup"><span data-stu-id="27626-175">The key columns by which to group the results.</span></span></param>
        <param name="projection"><span data-ttu-id="27626-176">投影を定義する、選択したプロパティの一覧。</span><span class="sxs-lookup"><span data-stu-id="27626-176">The list of selected properties that defines the projection.</span></span></param>
        <param name="parameters"><span data-ttu-id="27626-177">このメソッドで使用される 0 個以上のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="27626-177">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="27626-178">指定された条件でクエリの結果をグループ化します。</span><span class="sxs-lookup"><span data-stu-id="27626-178">Groups the query results by the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="27626-179"><see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/group-by-entity-sql">GROUP BY</see> が適用された元のインスタンスに相当する、<see cref="T:System.Data.Common.DbDataRecord" /> 型の新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-179">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/group-by-entity-sql">GROUP BY</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-180"><xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> は、`projection` パラメーターで指定されたプロジェクションを適用します。</span><span class="sxs-lookup"><span data-stu-id="27626-180"><xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="27626-181">つまり、<xref:System.Data.Objects.ObjectQuery%601> メソッドから返される <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> の型は、常に <xref:System.Data.Common.DbDataRecord> です。</span><span class="sxs-lookup"><span data-stu-id="27626-181">This means that the <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> method is always of type <xref:System.Data.Common.DbDataRecord>.</span></span> <span data-ttu-id="27626-182">詳しくは、「[オブジェクト クエリ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100))」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="27626-182">For more information, see [Object Queries](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span></span>



## Examples
 <span data-ttu-id="27626-183">この例は、Microsoft SQL Server の[製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-183">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span>

 <span data-ttu-id="27626-184">この例では、製品名でグループ化された既存のクエリの結果を含む <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを新たに作成します。</span><span class="sxs-lookup"><span data-stu-id="27626-184">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query grouped by product name.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_groupby)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_groupby)]

 <span data-ttu-id="27626-185">この例では、`Contact.LastName`の最初の文字でグループ化され、アルファベット順に並べ替えられた、`Contact.LastName` 列を含む入れ子になったデータレコードのセットを返します。</span><span class="sxs-lookup"><span data-stu-id="27626-185">This example returns a set of nested data records that contain the `Contact.LastName` column, grouped and sorted alphabetically by the first letter of `Contact.LastName`.</span></span>

 [!code-csharp[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_groupby)]
 [!code-vb[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_groupby)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27626-186"><paramref name="query" /> パラメーターが <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="27626-186">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</span></span>

<span data-ttu-id="27626-187">または</span><span class="sxs-lookup"><span data-stu-id="27626-187">-or-</span></span>

<span data-ttu-id="27626-188"><paramref name="projection" /> パラメーターが <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="27626-188">The <paramref name="projection" /> parameter is <see langword="null" /> or an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-189">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-189">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Include (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Include(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Include(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Include (path As String) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Include(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Include : string -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Include path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="27626-190">クエリの結果で返す関連オブジェクトをドットで区切った一覧。</span><span class="sxs-lookup"><span data-stu-id="27626-190">Dot-separated list of related objects to return in the query results.</span></span></param>
        <summary><span data-ttu-id="27626-191">クエリ結果に含める関連オブジェクトを指定します。</span><span class="sxs-lookup"><span data-stu-id="27626-191">Specifies the related objects to include in the query results.</span></span></summary>
        <returns><span data-ttu-id="27626-192">定義されたクエリ パスを使用する新しい <see cref="T:System.Data.Objects.ObjectQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="27626-192">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> with the defined query path.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-193">クエリ パスは、Entity SQL および LINQ クエリで使用できます。</span><span class="sxs-lookup"><span data-stu-id="27626-193">Query paths can be used with Entity SQL and LINQ queries.</span></span>

 <span data-ttu-id="27626-194">パスは包括的です。</span><span class="sxs-lookup"><span data-stu-id="27626-194">Paths are all-inclusive.</span></span> <span data-ttu-id="27626-195">たとえば、include 呼び出しで `Include("Orders.OrderLines")`が指定されている場合、`OrderLines` だけでなく `Orders`も含まれます。</span><span class="sxs-lookup"><span data-stu-id="27626-195">For example, if an include call indicates `Include("Orders.OrderLines")`, not only will `OrderLines` be included, but also `Orders`.</span></span> <span data-ttu-id="27626-196">詳しくは、「[関連オブジェクトの読み込み](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100))」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="27626-196">For more information, see [Loading Related Objects](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100)).</span></span>

 <span data-ttu-id="27626-197"><xref:System.Data.Objects.ObjectQuery%601.Include%2A> メソッドを呼び出した場合、クエリ パスは <xref:System.Data.Objects.ObjectQuery%601> の返されたインスタンスでのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="27626-197">When you call the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method, the query path is only valid on the returned instance of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="27626-198"><xref:System.Data.Objects.ObjectQuery%601> の他のインスタンスとオブジェクト コンテキスト自体は影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="27626-198">Other instances of <xref:System.Data.Objects.ObjectQuery%601> and the object context itself are not affected.</span></span>

 <span data-ttu-id="27626-199"><xref:System.Data.Objects.ObjectQuery%601.Include%2A> メソッドはクエリ オブジェクトを返すので、このメソッドを <xref:System.Data.Objects.ObjectQuery%601> で複数回呼び出すことで、次の例のようにクエリに複数のパスを指定できます。</span><span class="sxs-lookup"><span data-stu-id="27626-199">Because the <xref:System.Data.Objects.ObjectQuery%601.Include%2A> method returns the query object, you can call this method multiple times on an <xref:System.Data.Objects.ObjectQuery%601> to specify multiple paths for the query, as in the following example:</span></span>

 [!code-csharp[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#spanonlywithmultiplepaths)]
 [!code-vb[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#spanonlywithmultiplepaths)]



## Examples
 [!code-csharp[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithspan)]
 [!code-vb[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithspan)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27626-200"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-200"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27626-201"><paramref name="path" /> は <see langword="empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-201"><paramref name="path" /> is <see langword="empty" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-202">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-202">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Intersect (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Intersect(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Intersect(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Intersect query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="27626-203">クエリに含める結果を表す <see cref="T:System.Data.Objects.ObjectQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="27626-203">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to include in the query.</span></span></param>
        <summary><span data-ttu-id="27626-204">別のオブジェクト クエリに存在する結果のみを含めることで、クエリの結果を制限します。</span><span class="sxs-lookup"><span data-stu-id="27626-204">Limits the query results by including only the results that exist in another object query.</span></span></summary>
        <returns><span data-ttu-id="27626-205">指定された <paramref name="query" /> に基づいて <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/intersect-entity-sql">INTERSECT</see> が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-205">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/intersect-entity-sql">INTERSECT</see> applied based on the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-206">含める結果を定義する指定された `query` は、同じ型であるか、または <xref:System.Data.Objects.ObjectQuery%601>と互換性のある型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-206">The supplied `query` that defines results to include must be of the same type or of a type that is compatible with the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>

 <span data-ttu-id="27626-207">指定された `query` で定義されているパラメーターは、<xref:System.Data.Objects.ObjectQuery%601> インスタンスで定義されているパラメーターとマージされます。</span><span class="sxs-lookup"><span data-stu-id="27626-207">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="27626-208">パラメーターは、結合された <xref:System.Data.Objects.ObjectParameterCollection> 内で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-208">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="27626-209">結合されたコレクション内に同じ名前のパラメーターが 2 つ存在することはできません。</span><span class="sxs-lookup"><span data-stu-id="27626-209">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="27626-210">詳細については、「[クエリビルダーメソッド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27626-210">For more information, see [Query Builder Methods](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span></span>

 <span data-ttu-id="27626-211">結果のクエリは、<xref:System.Data.Objects.ObjectQuery%601> メソッドが呼び出された <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> インスタンスから接続を継承します。</span><span class="sxs-lookup"><span data-stu-id="27626-211">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which the <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> method was called.</span></span>



## Examples
 <span data-ttu-id="27626-212">このトピックの例は、 [Microsoft SQL Server の製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-212">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="27626-213">この例では、他の 2 つのクエリの結果を含む <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを新たに作成します。</span><span class="sxs-lookup"><span data-stu-id="27626-213">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of two other queries.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_intersect)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_intersect)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27626-214"><paramref name="query" /> パラメーターが <see langword="null" /> または空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="27626-214">The <paramref name="query" /> parameter is <see langword="null" /> or is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-215">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-215">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Objects.ObjectQuery&lt;'T&gt;.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="27626-216">このオブジェクト クエリの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="27626-216">Gets or sets the name of this object query.</span></span></summary>
        <value><span data-ttu-id="27626-217">この <see cref="T:System.Data.Objects.ObjectQuery`1" /> の名前を表す <see langword="string" /> 値。</span><span class="sxs-lookup"><span data-stu-id="27626-217">A <see langword="string" /> value that is the name of this <see cref="T:System.Data.Objects.ObjectQuery`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-218">オブジェクト クエリの名前は、クエリ ビルダー メソッドの作成時に、シーケンス内の現在のオブジェクト クエリを名前で識別するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="27626-218">The name of the object query identifies the current object query in the sequence by name when constructing query builder methods.</span></span> <span data-ttu-id="27626-219">既定では、クエリ名は `it`です。</span><span class="sxs-lookup"><span data-stu-id="27626-219">By default, the query name is `it`.</span></span> <span data-ttu-id="27626-220">この名前は、<xref:System.Data.Objects.ObjectQuery`1.Where*> メソッド内の結合または <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> メソッド内で、現在のシーケンスを参照する際に便利です。</span><span class="sxs-lookup"><span data-stu-id="27626-220">This can be useful when referring to the current sequence in joins inside the <xref:System.Data.Objects.ObjectQuery`1.Where*> method or in the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method.</span></span> <span data-ttu-id="27626-221">詳細については、「[クエリビルダーメソッド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27626-221">For more information, see [Query Builder Methods](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span></span>

 <span data-ttu-id="27626-222"><xref:System.Data.Objects.ObjectQuery%601.Name%2A> の <xref:System.Data.Objects.ObjectQuery%601> プロパティを設定すると、その値が後続のメソッドで別名として使用されます。</span><span class="sxs-lookup"><span data-stu-id="27626-222">When you set the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property of an <xref:System.Data.Objects.ObjectQuery%601>, that value becomes the alias in successive methods.</span></span>

 <span data-ttu-id="27626-223"><xref:System.Data.Objects.ObjectQuery%601.Name%2A> プロパティの値は、先頭を英字にする必要があり、英字、数字、およびアンダースコアを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="27626-223">The value of the <xref:System.Data.Objects.ObjectQuery%601.Name%2A> property must start with a letter and can contain letters, digits, and underscores.</span></span>



## Examples
 <span data-ttu-id="27626-224">この例では、最初の <xref:System.Data.Objects.ObjectQuery%601> の名前を "product" に設定し、この別名を後続の <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> メソッドで使用します。</span><span class="sxs-lookup"><span data-stu-id="27626-224">This example sets the name of the first <xref:System.Data.Objects.ObjectQuery%601> to "product" and then uses this alias in the successive <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> method.</span></span> <span data-ttu-id="27626-225">このトピックの例は、 [Microsoft SQL Server の製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-225">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span>

 [!code-csharp[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithaliasnamed)]
 [!code-vb[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithaliasnamed)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27626-226">設定時に指定された値が無効です。</span><span class="sxs-lookup"><span data-stu-id="27626-226">The value specified on set is not valid.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-227">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-227">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; OfType&lt;TResultType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; OfType&lt;TResultType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OfType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function OfType(Of TResultType) () As ObjectQuery(Of TResultType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TResultType&gt; ^ OfType();" />
      <MemberSignature Language="F#" Value="member this.OfType : unit -&gt; System.Data.Objects.ObjectQuery&lt;'ResultType&gt;" Usage="objectQuery.OfType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="27626-228">フィルターを適用してクエリを実行したときに返された <see cref="T:System.Data.Objects.ObjectResult`1" /> の型。</span><span class="sxs-lookup"><span data-stu-id="27626-228">The type of the <see cref="T:System.Data.Objects.ObjectResult`1" /> returned when the query is executed with the applied filter.</span></span></typeparam>
        <summary><span data-ttu-id="27626-229">特定の型のみが結果となるようにクエリを制限します。</span><span class="sxs-lookup"><span data-stu-id="27626-229">Limits the query to only results of a specific type.</span></span></summary>
        <returns><span data-ttu-id="27626-230"><see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/oftype-entity-sql">OFTYPE</see> が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-230">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/oftype-entity-sql">OFTYPE</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
<span data-ttu-id="27626-231"><xref:System.Data.Objects.ObjectQuery`1.OfType*> は、クエリの結果を特定のエンティティ型または複合型でフィルター処理するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="27626-231"><xref:System.Data.Objects.ObjectQuery`1.OfType*> is used to filter query results by a specific entity or complex type.</span></span> <span data-ttu-id="27626-232">これは、オブジェクトの継承を持つ概念モデルをサポートします。</span><span class="sxs-lookup"><span data-stu-id="27626-232">This supports a conceptual model with object inheritance.</span></span> <span data-ttu-id="27626-233">詳細については、「 [Entity Data Model: 継承](/dotnet/framework/data/adonet/entity-data-model-inheritance)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27626-233">For more information, see [Entity Data Model: Inheritance](/dotnet/framework/data/adonet/entity-data-model-inheritance).</span></span>

<span data-ttu-id="27626-234"><xref:System.Data.Objects.ObjectQuery`1.OfType*> メソッドは、EDM で定義されているエンティティ型または複合型の <xref:System.Data.Objects.ObjectQuery%601> にのみ適用できます。</span><span class="sxs-lookup"><span data-stu-id="27626-234">The <xref:System.Data.Objects.ObjectQuery`1.OfType*> method can only be applied to an <xref:System.Data.Objects.ObjectQuery%601> of an entity type or complex type that is defined in the EDM.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Data.EntitySqlException"><span data-ttu-id="27626-235">指定された型が無効です。</span><span class="sxs-lookup"><span data-stu-id="27626-235">The type specified is not valid.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/be01614e-070e-41be-9746-bb674b41e488(v=vs.90)"><span data-ttu-id="27626-236">Table-Per-Hierarchy 継承を使用してオブジェクト クエリを作成および実行する方法 (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-236">How to: Create and Execute Object Queries using Table-per-Hierarchy Inheritance (Entity Framework)</span></span></related>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-237">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-237">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; OrderBy (string keys, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; OrderBy(string keys, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function OrderBy (keys As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ OrderBy(System::String ^ keys, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.OrderBy (keys, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="27626-238">結果の並べ替えに使用するキー列。</span><span class="sxs-lookup"><span data-stu-id="27626-238">The key columns by which to order the results.</span></span></param>
        <param name="parameters"><span data-ttu-id="27626-239">このメソッドで使用される 0 個以上のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="27626-239">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="27626-240">指定された条件でクエリの結果を並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="27626-240">Orders the query results by the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="27626-241"><see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-241">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-242">入れ子になったクエリでの結果の並べ替えは保証されません。</span><span class="sxs-lookup"><span data-stu-id="27626-242">The ordering of results in a nested query cannot be guaranteed.</span></span>

 <span data-ttu-id="27626-243"><xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> は常に、シーケンス内の最終的なクエリビルダーメソッドである必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-243"><xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> should always be the final query builder method in the sequence.</span></span>



## Examples
 <span data-ttu-id="27626-244">この例は、Microsoft SQL Server の[製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-244">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="27626-245">この例では、`ProductID`によって既存のクエリ順序の結果を含む新しい <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="27626-245">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> object that contains the results of the existing query order by `ProductID`.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_orderby)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_orderby)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27626-246"><paramref name="keys" /> パラメーターまたは <paramref name="parameters" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-246">The <paramref name="keys" /> or <paramref name="parameters" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27626-247"><paramref name="key" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="27626-247">The <paramref name="key" /> is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-248">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-248">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; Select (string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; Select(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of DbDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;System::Data::Common::DbDataRecord ^&gt; ^ Select(System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Select : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" Usage="objectQuery.Select (projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="projection"><span data-ttu-id="27626-249">投影を定義する、選択したプロパティの一覧。</span><span class="sxs-lookup"><span data-stu-id="27626-249">The list of selected properties that defines the projection.</span></span></param>
        <param name="parameters"><span data-ttu-id="27626-250">このメソッドで使用される 0 個以上のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="27626-250">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="27626-251">クエリの結果を、指定された投影で定義されているプロパティのみに制限します。</span><span class="sxs-lookup"><span data-stu-id="27626-251">Limits the query results to only the properties that are defined in the specified projection.</span></span></summary>
        <returns><span data-ttu-id="27626-252"><see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT</see> が適用された元のインスタンスに相当する、<see cref="T:System.Data.Common.DbDataRecord" /> 型の新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-252">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-253"><xref:System.Data.Objects.ObjectQuery%601.Select%2A> は、`projection` パラメーターで指定されたプロジェクションを適用します。</span><span class="sxs-lookup"><span data-stu-id="27626-253"><xref:System.Data.Objects.ObjectQuery%601.Select%2A> applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="27626-254"><xref:System.Data.Objects.ObjectQuery%601> メソッドで返される <xref:System.Data.Objects.ObjectQuery%601.Select%2A> は、常に <xref:System.Data.Common.DbDataRecord> の行型です。</span><span class="sxs-lookup"><span data-stu-id="27626-254">The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method is always a row type of <xref:System.Data.Common.DbDataRecord>.</span></span> <span data-ttu-id="27626-255">単純型、エンティティ型、または複合型の値を返すには、<xref:System.Data.Objects.ObjectQuery`1.SelectValue*> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="27626-255">Use the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method to return values that are simple types, entity types, or complex types.</span></span> <span data-ttu-id="27626-256">詳しくは、「[LINQ to Entities](/dotnet/framework/data/adonet/ef/language-reference/linq-to-entities)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="27626-256">For more information, see [LINQ to Entities](/dotnet/framework/data/adonet/ef/language-reference/linq-to-entities).</span></span>

 <span data-ttu-id="27626-257">投影にナビゲーション プロパティが含まれている場合は、入れ子になった <xref:System.Data.Common.DbDataRecord> オブジェクトのコレクションがクエリの結果に含まれます。</span><span class="sxs-lookup"><span data-stu-id="27626-257">When a navigation property is included in the projection, the query results include a collection of nested <xref:System.Data.Common.DbDataRecord> objects.</span></span> <span data-ttu-id="27626-258">詳細については、「[方法: ナビゲーションプロパティを使用してリレーションシップをナビゲートする](https://msdn.microsoft.com/library/b1d71c7d-16a7-4b46-96ac-690176bd5057)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27626-258">For more information, see [How to: Navigate Relationships Using Navigation Properties](https://msdn.microsoft.com/library/b1d71c7d-16a7-4b46-96ac-690176bd5057).</span></span>



## Examples
 <span data-ttu-id="27626-259">この例は、Microsoft SQL Server の[製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-259">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="27626-260">この例では、このクエリの結果の `ProductID` フィールドを含むデータレコードを結果とする新しい <xref:System.Data.Objects.ObjectQuery%601> を作成します。</span><span class="sxs-lookup"><span data-stu-id="27626-260">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> whose results are data records that contain the `ProductID` fields of the results of this query.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27626-261"><paramref name="projection" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-261"><paramref name="projection" /> is <see langword="null" />.</span></span>

<span data-ttu-id="27626-262">または</span><span class="sxs-lookup"><span data-stu-id="27626-262">-or-</span></span>

 <span data-ttu-id="27626-263"><paramref name="parameters" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-263"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27626-264"><paramref name="projection" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="27626-264">The <paramref name="projection" /> is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-265">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-265">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SelectValue&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; SelectValue&lt;TResultType&gt; (string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; SelectValue&lt;TResultType&gt;(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectValue(Of TResultType) (projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of TResultType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TResultType&gt; ^ SelectValue(System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.SelectValue : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'ResultType&gt;" Usage="objectQuery.SelectValue (projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="27626-266"><see cref="T:System.Data.Objects.ObjectQuery`1" /> メソッドによって返された <see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" /> の型。</span><span class="sxs-lookup"><span data-stu-id="27626-266">The type of the <see cref="T:System.Data.Objects.ObjectQuery`1" /> returned by the <see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" /> method.</span></span></typeparam>
        <param name="projection"><span data-ttu-id="27626-267">投影の一覧。</span><span class="sxs-lookup"><span data-stu-id="27626-267">The projection list.</span></span></param>
        <param name="parameters"><span data-ttu-id="27626-268">解析時にスコープに含める必要があるオプションのクエリ パラメーターのセット。</span><span class="sxs-lookup"><span data-stu-id="27626-268">An optional set of query parameters that should be in scope when parsing.</span></span></param>
        <summary><span data-ttu-id="27626-269">クエリの結果を、投影で指定されたプロパティのみに制限します。</span><span class="sxs-lookup"><span data-stu-id="27626-269">Limits the query results to only the property specified in the projection.</span></span></summary>
        <returns><span data-ttu-id="27626-270">特定の投影と互換性がある型の新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-270">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of a type compatible with the specific projection.</span></span> <span data-ttu-id="27626-271">返される <see cref="T:System.Data.Objects.ObjectQuery`1" /> は、<see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT VALUE</see> が適用された元のインスタンスに相当します。</span><span class="sxs-lookup"><span data-stu-id="27626-271">The returned <see cref="T:System.Data.Objects.ObjectQuery`1" /> is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/select-entity-sql">SELECT VALUE</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-272"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*> は、単純型、エンティティ型、または複合型の値を返す場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="27626-272"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*> is used to return values that are simple types, entity types, or complex types.</span></span> <span data-ttu-id="27626-273">値型ではなく行型を必要とする投影には、<xref:System.Data.Objects.ObjectQuery%601.Select%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="27626-273">Use the <xref:System.Data.Objects.ObjectQuery%601.Select%2A> method for projections that require a row type instead of a value type.</span></span> <span data-ttu-id="27626-274">詳しくは、「[オブジェクト クエリ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100))」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="27626-274">For more information, see [Object Queries](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896241(v=vs.100)).</span></span>

 <span data-ttu-id="27626-275"><xref:System.Data.Objects.ObjectQuery`1.SelectValue*> メソッドは、`projection` パラメーターによって指定されたプロジェクションを適用します。</span><span class="sxs-lookup"><span data-stu-id="27626-275">The <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method applies the projection specified by the `projection` parameter.</span></span> <span data-ttu-id="27626-276"><xref:System.Data.Objects.ObjectQuery%601> メソッドから返される <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> は、投影と互換性のある値型であり、かつ <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> と同じ型である必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-276">The <xref:System.Data.Objects.ObjectQuery%601> returned by the <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> method must be of a value type that is compatible with the projection and must be the same type as the type of <xref:System.Data.Objects.ObjectQuery`1.SelectValue*>.</span></span>



## Examples
 <span data-ttu-id="27626-277">この例は、Microsoft SQL Server の[製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-277">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="27626-278">この例では、既存のクエリの結果から投影された `ProductID` 値のシーケンスである結果を含む新しい <xref:System.Data.Objects.ObjectQuery%601> を作成します。</span><span class="sxs-lookup"><span data-stu-id="27626-278">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results that are a sequence of `ProductID` values projected from the results of the existing query.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_selectvalue)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_selectvalue)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27626-279"><paramref name="projection" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-279"><paramref name="projection" /> is <see langword="null" />.</span></span>

<span data-ttu-id="27626-280">または</span><span class="sxs-lookup"><span data-stu-id="27626-280">-or-</span></span>

 <span data-ttu-id="27626-281"><paramref name="parameters" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-281"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27626-282"><paramref name="projection" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="27626-282">The <paramref name="projection" /> is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-283">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-283">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Skip (string keys, string count, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Skip(string keys, string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Skip (keys As String, count As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Skip(System::String ^ keys, System::String ^ count, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Skip : string * string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Skip (keys, count, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="27626-284">結果の並べ替えに使用するキー列。</span><span class="sxs-lookup"><span data-stu-id="27626-284">The key columns by which to order the results.</span></span></param>
        <param name="count"><span data-ttu-id="27626-285">スキップする結果の数。</span><span class="sxs-lookup"><span data-stu-id="27626-285">The number of results to skip.</span></span> <span data-ttu-id="27626-286">定数またはパラメーター参照を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-286">This must be either a constant or a parameter reference.</span></span></param>
        <param name="parameters"><span data-ttu-id="27626-287">解析時にスコープに含める必要があるオプションのクエリ パラメーターのセット。</span><span class="sxs-lookup"><span data-stu-id="27626-287">An optional set of query parameters that should be in scope when parsing.</span></span></param>
        <summary><span data-ttu-id="27626-288">指定された条件でクエリの結果を並べ替え、指定された数の結果をスキップします。</span><span class="sxs-lookup"><span data-stu-id="27626-288">Orders the query results by the specified criteria and skips a specified number of results.</span></span></summary>
        <returns><span data-ttu-id="27626-289"><see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> と [SKIP](/dotnet/framework/data/adonet/ef/language-reference/skip-entity-sql) の両方が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-289">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with both <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql">ORDER BY</see> and [SKIP](/dotnet/framework/data/adonet/ef/language-reference/skip-entity-sql) applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-290"><xref:System.Data.Objects.ObjectQuery%601.Skip%2A> メソッドを <xref:System.Data.Objects.ObjectQuery%601.Top%2A> メソッドの後に使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="27626-290">The <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method cannot be used after the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method.</span></span> <span data-ttu-id="27626-291"><xref:System.Data.Objects.ObjectQuery%601.Skip%2A>後に <xref:System.Data.Objects.ObjectQuery%601.Top%2A> を使用すると、句の[LIMIT](/dotnet/framework/data/adonet/ef/language-reference/limit-entity-sql)ステートメントと同様に機能します。</span><span class="sxs-lookup"><span data-stu-id="27626-291">When you use <xref:System.Data.Objects.ObjectQuery%601.Top%2A> after <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>, it functions like the [LIMIT](/dotnet/framework/data/adonet/ef/language-reference/limit-entity-sql) statement of an  clause.</span></span>



## Examples
 <span data-ttu-id="27626-292">この例では、クエリ結果の最初の3つのオブジェクトを `Product.ListPrice`で並べ替えて、5つの `Product` オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="27626-292">This example gets five `Product` objects after skipping the first three in the query result, sorted by `Product.ListPrice`.</span></span>

 [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27626-293">任意の引数が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-293">Any argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27626-294"><paramref name="keys" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="27626-294"><paramref name="keys" /> is an empty string.</span></span>

<span data-ttu-id="27626-295">または</span><span class="sxs-lookup"><span data-stu-id="27626-295">-or-</span></span>

 <span data-ttu-id="27626-296"><paramref name="count" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="27626-296"><paramref name="count" /> is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-297">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-297">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="objectQuery.System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="27626-298">クエリの結果を反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="27626-298">Returns an enumerator that iterates through the results of the query.</span></span></summary>
        <returns><span data-ttu-id="27626-299">結果の反復処理に使用できる <see cref="T:System.Collections.Generic.IEnumerator`1" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="27626-299">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the results.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-300"><xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> を呼び出すとクエリが実行されます。</span><span class="sxs-lookup"><span data-stu-id="27626-300">Calling <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> executes the query.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-301">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-301">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Top (string count, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Top(string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Top (count As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Top(System::String ^ count, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Top : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Top (count, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="27626-302">結果に文字列として返されるアイテムの数。</span><span class="sxs-lookup"><span data-stu-id="27626-302">The number of items in the results as a string.</span></span></param>
        <param name="parameters"><span data-ttu-id="27626-303">解析時にスコープに含める必要があるオプションのクエリ パラメーターのセット。</span><span class="sxs-lookup"><span data-stu-id="27626-303">An optional set of query parameters that should be in scope when parsing.</span></span></param>
        <summary><span data-ttu-id="27626-304">クエリの結果を、指定されたアイテム数に制限します。</span><span class="sxs-lookup"><span data-stu-id="27626-304">Limits the query results to a specified number of items.</span></span></summary>
        <returns><span data-ttu-id="27626-305"><see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/top-entity-sql">TOP</see> が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-305">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/top-entity-sql">TOP</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-306"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> は、クエリが並べ替えられていない限り、非決定的です。</span><span class="sxs-lookup"><span data-stu-id="27626-306"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> is nondeterministic unless the query is sorted.</span></span>

 <span data-ttu-id="27626-307"><xref:System.Data.Objects.ObjectQuery%601.Skip%2A> メソッドの後に <xref:System.Data.Objects.ObjectQuery%601.Top%2A> メソッドを使用すると、 [ORDER by](/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql)句の[LIMIT](/dotnet/framework/data/adonet/ef/language-reference/limit-entity-sql)ステートメントと同様に機能します。</span><span class="sxs-lookup"><span data-stu-id="27626-307">When you use the <xref:System.Data.Objects.ObjectQuery%601.Top%2A> method after the <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> method, it functions like the [LIMIT](/dotnet/framework/data/adonet/ef/language-reference/limit-entity-sql) statement of an [ORDER BY](/dotnet/framework/data/adonet/ef/language-reference/order-by-entity-sql) clause.</span></span>



## Examples
 <span data-ttu-id="27626-308">これらの例は、 [Microsoft SQL Server の製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-308">These examples are based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span>

 <span data-ttu-id="27626-309">この例では、既存のクエリの最初の 2 つの結果を含む <xref:System.Data.Objects.ObjectQuery%601> を新たに作成します。</span><span class="sxs-lookup"><span data-stu-id="27626-309">This example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains the first two results of the existing query.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_top)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_top)]

 <span data-ttu-id="27626-310">この例では、クエリ結果の最初の3つのオブジェクトを `Product.ListPrice`で並べ替えて、5つの `Product` オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="27626-310">This example gets five `Product` objects after skipping the first three in the query result, sorted by `Product.ListPrice`.</span></span> <span data-ttu-id="27626-311">ページングの[制限](/dotnet/framework/data/adonet/ef/language-reference/limit-entity-sql)ではなく <xref:System.Data.Objects.ObjectQuery%601.Top%2A> が使用されます。</span><span class="sxs-lookup"><span data-stu-id="27626-311"><xref:System.Data.Objects.ObjectQuery%601.Top%2A> is used instead of [LIMIT](/dotnet/framework/data/adonet/ef/language-reference/limit-entity-sql) for paging.</span></span>

 [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27626-312"><paramref name="count" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-312"><paramref name="count" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27626-313"><paramref name="count" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="27626-313"><paramref name="count" /> is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-314">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-314">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Union (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Union(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Union(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Union query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="27626-315">追加する結果を表す <see cref="T:System.Data.Objects.ObjectQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="27626-315">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</span></span></param>
        <summary><span data-ttu-id="27626-316">クエリの結果を、別のオブジェクト クエリの結果と重複しないように結合します。</span><span class="sxs-lookup"><span data-stu-id="27626-316">Combines the results of the query with the results of another object query, without any duplicates.</span></span></summary>
        <returns><span data-ttu-id="27626-317">指定された <paramref name="query" /> の結果を追加するために <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION</see> を適用した元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-317">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION</see> applied to add the results of the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-318"><xref:System.Data.Objects.ObjectQuery%601.Union%2A> は、指定された `query` の結果を重複せずに追加します。</span><span class="sxs-lookup"><span data-stu-id="27626-318"><xref:System.Data.Objects.ObjectQuery%601.Union%2A> adds the results of the supplied `query` without any duplicates.</span></span>

 <span data-ttu-id="27626-319">追加する結果を定義する指定された `query` は、この <xref:System.Data.Objects.ObjectQuery%601>の型に昇格できる型または型と同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-319">The supplied `query` that defines the results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="27626-320">たとえば、次の例は、`DiscontinuedProducts` を `Products`に昇格できるため、有効です。</span><span class="sxs-lookup"><span data-stu-id="27626-320">For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:</span></span>

```
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)
```

 <span data-ttu-id="27626-321">`Products` を `DiscontinuedProducts`に昇格させることができないため、次のような例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="27626-321">The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.</span></span>

```
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)
```

 <span data-ttu-id="27626-322"><xref:System.Data.Common.DbDataRecord>型の <xref:System.Data.Objects.ObjectQuery%601> では、両方のクエリのレコードの列数は同じである必要があります。また、渡された `query` の <xref:System.Data.Common.DbDataRecord> の列の型は、<xref:System.Data.Common.DbDataRecord> の <xref:System.Data.Objects.ObjectQuery%601>内の列の型に上位変換できる必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-322">For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>

 <span data-ttu-id="27626-323">指定された `query` で定義されているパラメーターは、<xref:System.Data.Objects.ObjectQuery%601> インスタンスで定義されているパラメーターとマージされます。</span><span class="sxs-lookup"><span data-stu-id="27626-323">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="27626-324">パラメーターは、結合された <xref:System.Data.Objects.ObjectParameterCollection> 内で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-324">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="27626-325">結合されたコレクション内に同じ名前のパラメーターが 2 つ存在することはできません。</span><span class="sxs-lookup"><span data-stu-id="27626-325">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="27626-326">詳細については、「[クエリビルダーメソッド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27626-326">For more information, see [Query Builder Methods](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span></span>

 <span data-ttu-id="27626-327">結果のクエリは、<xref:System.Data.Objects.ObjectQuery%601> が呼び出された <xref:System.Data.Objects.ObjectQuery%601.Union%2A> インスタンスから接続を継承します。</span><span class="sxs-lookup"><span data-stu-id="27626-327">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.Union%2A> was called.</span></span>



## Examples
 <span data-ttu-id="27626-328">この例は、Microsoft SQL Server の[製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-328">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="27626-329">この例では、<xref:System.Data.Objects.ObjectQuery%601.Union%2A> メソッドを使用して、新しい <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="27626-329">The example uses <xref:System.Data.Objects.ObjectQuery%601.Union%2A> method to creates a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_union)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_union)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27626-330"><paramref name="query" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-330">The <paramref name="query" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-331">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-331">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; UnionAll (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; UnionAll(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function UnionAll (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ UnionAll(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.UnionAll : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.UnionAll query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="27626-332">追加する結果を表す <see cref="T:System.Data.Objects.ObjectQuery`1" />。</span><span class="sxs-lookup"><span data-stu-id="27626-332">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</span></span></param>
        <summary><span data-ttu-id="27626-333">クエリの結果を、別のオブジェクト クエリの結果と、重複をすべて含めて結合します。</span><span class="sxs-lookup"><span data-stu-id="27626-333">Combines the results of the query with the results of another object query, including all duplicates.</span></span></summary>
        <returns><span data-ttu-id="27626-334">指定された <paramref name="query" /> の結果を追加するために <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION ALL</see> を適用した元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-334">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/union-entity-sql">UNION ALL</see> applied to add the results of the specified <paramref name="query" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="27626-335"><xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> は、指定された `query` の結果をすべての重複を含めて追加します。</span><span class="sxs-lookup"><span data-stu-id="27626-335"><xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> adds the results of the supplied `query` including all duplicates.</span></span>

 <span data-ttu-id="27626-336">追加する結果を定義する指定された `query` は、この <xref:System.Data.Objects.ObjectQuery%601>の型に昇格できる型または型と同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-336">The supplied `query` that defines results to add must be of the same type or of a type that can be promoted to the type of this <xref:System.Data.Objects.ObjectQuery%601>.</span></span> <span data-ttu-id="27626-337">たとえば、次の例は、`DiscontinuedProducts` を `Products`に昇格できるため、有効です。</span><span class="sxs-lookup"><span data-stu-id="27626-337">For example, the following is valid because `DiscontinuedProducts` can be promoted to `Products`:</span></span>

```
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)
```

 <span data-ttu-id="27626-338">`Products` を `DiscontinuedProducts`に昇格させることができないため、次のような例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="27626-338">The following will throw an exception because `Products` cannot be promoted to `DiscontinuedProducts`.</span></span>

```
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)
```

 <span data-ttu-id="27626-339"><xref:System.Data.Common.DbDataRecord>型の <xref:System.Data.Objects.ObjectQuery%601> では、両方のクエリのレコードの列数は同じである必要があります。また、渡された `query` の <xref:System.Data.Common.DbDataRecord> の列の型は、<xref:System.Data.Common.DbDataRecord> の <xref:System.Data.Objects.ObjectQuery%601>内の列の型に上位変換できる必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-339">For an <xref:System.Data.Objects.ObjectQuery%601> of type <xref:System.Data.Common.DbDataRecord>, the records in both queries must have the same number of columns, and the types in the columns of the <xref:System.Data.Common.DbDataRecord> of the passed `query` must be promotable to the types of the columns in the <xref:System.Data.Common.DbDataRecord> of the <xref:System.Data.Objects.ObjectQuery%601>.</span></span>

 <span data-ttu-id="27626-340">指定された `query` で定義されているパラメーターは、<xref:System.Data.Objects.ObjectQuery%601> インスタンスで定義されているパラメーターとマージされます。</span><span class="sxs-lookup"><span data-stu-id="27626-340">Parameters that are defined in the supplied `query` are merged with parameters that are defined in the <xref:System.Data.Objects.ObjectQuery%601> instance.</span></span> <span data-ttu-id="27626-341">パラメーターは、結合された <xref:System.Data.Objects.ObjectParameterCollection> 内で一意である必要があります。</span><span class="sxs-lookup"><span data-stu-id="27626-341">Parameters must be unique in the combined <xref:System.Data.Objects.ObjectParameterCollection>.</span></span> <span data-ttu-id="27626-342">結合されたコレクション内に同じ名前のパラメーターが 2 つ存在することはできません。</span><span class="sxs-lookup"><span data-stu-id="27626-342">There cannot be two parameters in the combined collection with the same name.</span></span> <span data-ttu-id="27626-343">詳細については、「[クエリビルダーメソッド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="27626-343">For more information, see [Query Builder Methods](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896238(v=vs.100)).</span></span>

 <span data-ttu-id="27626-344">結果のクエリは、<xref:System.Data.Objects.ObjectQuery%601> が呼び出された <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> インスタンスから接続を継承します。</span><span class="sxs-lookup"><span data-stu-id="27626-344">The resulting query inherits the connection from the <xref:System.Data.Objects.ObjectQuery%601> instance on which <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> was called.</span></span>



## Examples
 <span data-ttu-id="27626-345">このトピックの例は、 [Microsoft SQL Server の製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-345">The example in this topic is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="27626-346">この例では、<xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> メソッドを使用して、新しい <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="27626-346">The example uses the <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> method to create a new <xref:System.Data.Objects.ObjectQuery%601> object.</span></span> <span data-ttu-id="27626-347">次に、新しい <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> オブジェクトで <xref:System.Data.Objects.ObjectQuery%601> メソッドを呼び出して、このクエリの一意の結果を取得します。</span><span class="sxs-lookup"><span data-stu-id="27626-347">Then it calls the <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> method on the new <xref:System.Data.Objects.ObjectQuery%601> object to get the unique results of this query.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27626-348"><paramref name="query" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-348">The <paramref name="query" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-349">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-349">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Where (string predicate, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Where(string predicate, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Where (predicate As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Where(System::String ^ predicate, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Where : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Where (predicate, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.5">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="predicate"><span data-ttu-id="27626-350">フィルター述語。</span><span class="sxs-lookup"><span data-stu-id="27626-350">The filter predicate.</span></span></param>
        <param name="parameters"><span data-ttu-id="27626-351">このメソッドで使用される 0 個以上のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="27626-351">Zero or more parameters that are used in this method.</span></span></param>
        <summary><span data-ttu-id="27626-352">指定されたフィルター条件と一致する結果となるようにクエリを制限します。</span><span class="sxs-lookup"><span data-stu-id="27626-352">Limits the query to results that match specified filtering criteria.</span></span></summary>
        <returns><span data-ttu-id="27626-353"><see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/where-entity-sql">WHERE</see> が適用された元のインスタンスに相当する、新しい <see cref="T:System.Data.Objects.ObjectQuery`1" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="27626-353">A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with <see href="https://docs.microsoft.com/dotnet/framework/data/adonet/ef/language-reference/where-entity-sql">WHERE</see> applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="27626-354">この例は、Microsoft SQL Server の[製品サンプルデータベース](https://archive.codeplex.com/?p=msftdbprodsamples)に基づいています。</span><span class="sxs-lookup"><span data-stu-id="27626-354">This example is based on the [Microsoft SQL Server Product Samples: Database](https://archive.codeplex.com/?p=msftdbprodsamples).</span></span> <span data-ttu-id="27626-355">この例では、<xref:System.Data.Objects.ObjectQuery%601> という条件でフィルターされた既存のクエリの結果を含む `"it.ProductID = 900"` を新たに作成します。</span><span class="sxs-lookup"><span data-stu-id="27626-355">The example creates a new <xref:System.Data.Objects.ObjectQuery%601> that contains results of the existing query filtered by the following criteria: `"it.ProductID = 900"`.</span></span>

 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_where)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_where)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="27626-356"><paramref name="predicate" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-356"><paramref name="predicate" /> is <see langword="null" />.</span></span>

<span data-ttu-id="27626-357">または</span><span class="sxs-lookup"><span data-stu-id="27626-357">-or-</span></span>

 <span data-ttu-id="27626-358"><paramref name="parameters" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="27626-358"><paramref name="parameters" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="27626-359"><paramref name="predicate" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="27626-359">The <paramref name="predicate" /> is an empty string.</span></span></exception>
        <related type="Article" href="/dotnet/framework/data/adonet/ef/querying-a-conceptual-model"><span data-ttu-id="27626-360">オブジェクトとしてのデータのクエリ (Entity Framework)</span><span class="sxs-lookup"><span data-stu-id="27626-360">Querying Data as Objects (Entity Framework)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
