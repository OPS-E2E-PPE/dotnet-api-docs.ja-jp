<Type Name="PeerName" FullName="System.Net.PeerToPeer.PeerName">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0f1f24b0124dd999fa9a71cb4f9fc1fdbad112d2" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78820064" /></Metadata><TypeSignature Language="C#" Value="public class PeerName : IEquatable&lt;System.Net.PeerToPeer.PeerName&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerName extends System.Object implements class System.IEquatable`1&lt;class System.Net.PeerToPeer.PeerName&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerName" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerName&#xA;Implements IEquatable(Of PeerName), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerName : IEquatable&lt;System::Net::PeerToPeer::PeerName ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerName = class&#xA;    interface ISerializable&#xA;    interface IEquatable&lt;PeerName&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.PeerName&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cfe95-101">ピアツーピア <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトを定義する値を指定します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-101">Specifies the values that define a peer-to-peer <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span> <span data-ttu-id="cfe95-102">ピア名は、通常、ピア リソースを識別するために使用される文字列です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-102">A peer name is typically a string used to identify a peer resource.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="N:System.Net.PeerToPeer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cfe95-103"><see cref="T:System.Net.PeerToPeer.PeerName" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-103">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerName" /> class.</span></span></summary>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerName (string remotePeerName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string remotePeerName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (remotePeerName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerName(System::String ^ remotePeerName);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerName : string -&gt; System.Net.PeerToPeer.PeerName" Usage="new System.Net.PeerToPeer.PeerName remotePeerName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="remotePeerName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="remotePeerName"><span data-ttu-id="cfe95-104">エンコードするピア名を <see cref="T:System.Net.PeerToPeer.PeerName" /> インスタンスとして格納します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-104">Contains the peer name to encode as a <see cref="T:System.Net.PeerToPeer.PeerName" /> instance.</span></span></param>
        <summary><span data-ttu-id="cfe95-105">型 <see cref="T:System.Net.PeerToPeer.PeerName" /> の新しいオブジェクトを、指定された完全修飾のピア名 <see cref="T:System.String" /> 値で初期化します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-105">Initializes a new object of type <see cref="T:System.Net.PeerToPeer.PeerName" /> with the supplied fully qualified peer name <see cref="T:System.String" /> value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cfe95-106">指定した <see cref="T:System.String" /> は有効な <see cref="T:System.Net.PeerToPeer.PeerName" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="cfe95-106">The <see cref="T:System.String" /> provided is not a valid <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfe95-107"><paramref name="remotePeerName" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-107"><paramref name="remotePeerName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerName (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerName(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerName : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerName" Usage="new System.Net.PeerToPeer.PeerName (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="cfe95-108">このインスタンスの逆シリアル化に必要なデータを格納するオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="cfe95-108">Reference to the object that holds the data needed to deserialize this instance.</span></span></param>
        <param name="context"><span data-ttu-id="cfe95-109">データを逆シリアル化するための手段を提供するコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="cfe95-109">Context that provides the means for deserializing the data.</span></span> <span data-ttu-id="cfe95-110">シリアル化されたデータのソースとも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-110">Also referred to as the source of the serialized data.</span></span></param>
        <summary><span data-ttu-id="cfe95-111"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> オブジェクトに、 <see cref="T:System.Net.PeerToPeer.PeerName" />をシリアル化するために必要なデータを設定します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-111">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-112">このコンストラクターは、この型の逆シリアル化に必要です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-112">This constructor is required for deserialization of this type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfe95-113">1 つ以上のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-113">One or more parameters are <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Runtime.Serialization" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerName (string classifier, System.Net.PeerToPeer.PeerNameType peerNameType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string classifier, valuetype System.Net.PeerToPeer.PeerNameType peerNameType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classifier As String, peerNameType As PeerNameType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerName(System::String ^ classifier, System::Net::PeerToPeer::PeerNameType peerNameType);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerName : string * System.Net.PeerToPeer.PeerNameType -&gt; System.Net.PeerToPeer.PeerName" Usage="new System.Net.PeerToPeer.PeerName (classifier, peerNameType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classifier" Type="System.String" />
        <Parameter Name="peerNameType" Type="System.Net.PeerToPeer.PeerNameType" />
      </Parameters>
      <Docs>
        <param name="classifier"><span data-ttu-id="cfe95-114"><see cref="T:System.String" /> としてエンコードするためのピア名を含む <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="cfe95-114"><see cref="T:System.String" /> that contains the Peer Name to encode as a <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></param>
        <param name="peerNameType"><span data-ttu-id="cfe95-115">作成するピア名の種類を指定する <see cref="T:System.Net.PeerToPeer.PeerNameType" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="cfe95-115"><see cref="T:System.Net.PeerToPeer.PeerNameType" /> enumeration value that specifies the type of peer name to create.</span></span></param>
        <summary><span data-ttu-id="cfe95-116"><see cref="T:System.Net.PeerToPeer.PeerName" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-116">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerName" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-117">このコンストラクターは、ピアの完全修飾名を含む <xref:System.Net.PeerToPeer.PeerName> 型のオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-117">This constructor returns an object of type <xref:System.Net.PeerToPeer.PeerName> that contains the fully qualified name of the peer.</span></span> <span data-ttu-id="cfe95-118">また、ピア名がセキュリティで保護されているか、セキュリティ保護されていないかを指定します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-118">It also specifies whether the peer name is secured or unsecured.</span></span>  
  
 <span data-ttu-id="cfe95-119">このインスタンスでは、指定された分類子と種類で作成するピア名の種類に加えて、現在のユーザーの既定のピア id と指定された <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-119">This instance uses the default peer identity for the current user and the specified <xref:System.Net.PeerToPeer.PeerName.Classifier%2A>, in addition to the type of peer name to create with the specified classifier and type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cfe95-120"><see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> に 1 つ以上の無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="cfe95-120">The <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> includes one or more illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfe95-121">1 つ以上のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-121">One or more parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="cfe95-122">-   <see cref="T:System.Net.PeerToPeer.PeerName" /> の基礎として使用される既定の ID を取得できませんでした。</span><span class="sxs-lookup"><span data-stu-id="cfe95-122">-   The Default Identity used as the basis of the <see cref="T:System.Net.PeerToPeer.PeerName" /> could not be retrieved.</span></span>  
  
<span data-ttu-id="cfe95-123">-   <see cref="T:System.Net.PeerToPeer.PeerName" /> は作成できませんでした。</span><span class="sxs-lookup"><span data-stu-id="cfe95-123">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> could not be created.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="Authority">
      <MemberSignature Language="C#" Value="public string Authority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Authority" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerName.Authority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Authority As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Authority { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Authority : string" Usage="System.Net.PeerToPeer.PeerName.Authority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfe95-124">この <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> オブジェクトで使用される <see cref="T:System.Net.PeerToPeer.PeerName" /> を指定する文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-124">Returns a string that specifies the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> used by this <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></summary>
        <value><span data-ttu-id="cfe95-125">指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> の認証部分を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="cfe95-125">The string which contains the authentication portion of the specified <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span> <span data-ttu-id="cfe95-126">セキュリティ保護されたピア名の場合、このプロパティには、公開キーが 40 文字の 16 進数文字列として格納されます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-126">For secured peer names, this property contains the public key as a forty-character hexadecimal string.</span></span> <span data-ttu-id="cfe95-127">セキュリティ保護されていないピア名の場合、このプロパティは 0 に設定されます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-127">For unsecured peer names, this property is set to zero (0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-128">セキュリティで保護されたピア名を登録できるのは、所有者 (ピアホスト) だけです。</span><span class="sxs-lookup"><span data-stu-id="cfe95-128">Only the owner, or peer host, can register a secured peer name.</span></span> <span data-ttu-id="cfe95-129">ピア名は、自己署名証明書によってサポートされている場合、セキュリティで保護されていると見なされます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-129">A peer name is considered secured if it is backed by a self-signed certificate.</span></span>  
  
 <span data-ttu-id="cfe95-130">ピア名は大文字と小文字が区別され、ピア名の形式は: *Authority*です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-130">Peer names are case-sensitive and the format of a peer name is: *Authority.Classifier*.</span></span> <span data-ttu-id="cfe95-131">たとえば、"0. MyPeerName" は、正しい形式のピア名です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-131">For example, "0.MyPeerName" is a well-formed peer name.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="cfe95-132">セキュリティで保護されたピア名を使用しても、ネットワークアプリケーションの全体的なセキュリティが保証されるわけではありません。</span><span class="sxs-lookup"><span data-stu-id="cfe95-132">Using a secured peer name does not ensure the overall security of the networking application.</span></span> <span data-ttu-id="cfe95-133">アプリケーションのセキュリティは、実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="cfe95-133">Security of the application is implementation-dependent.</span></span></para></block>
        <altmember cref="P:System.Net.PeerToPeer.PeerName.Classifier" />
        <altmember cref="T:System.Net.PeerToPeer.PeerNameType" />
      </Docs>
    </Member>
    <Member MemberName="Classifier">
      <MemberSignature Language="C#" Value="public string Classifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Classifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerName.Classifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Classifier As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Classifier { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Classifier : string" Usage="System.Net.PeerToPeer.PeerName.Classifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfe95-134">ピアツーピア <see cref="T:System.Net.PeerToPeer.PeerName" /> の分類子が格納された文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-134">Returns a string that contains the classifier for a peer-to-peer <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
        <value><span data-ttu-id="cfe95-135">PNRP <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 内で.<see cref="T:System.Net.PeerToPeer.Cloud" /> または解決を行うピア名を識別するために使用する分類子部分を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="cfe95-135">The string which contains the classifier portion used to identify a peer name for <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> or resolution within a PNRP <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span>  
  
<span data-ttu-id="cfe95-136">すべてのプロパティの既定値は、明示的に指定されない限り、参照型では <see langword="null" />、<see langword="int" /> 型のプロパティではゼロ (0) です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-136">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types and zero (0) for properties of type <see langword="int" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-137">ピア名の形式は、: *Authority です*。</span><span class="sxs-lookup"><span data-stu-id="cfe95-137">The format of a peer name is: *Authority.Classifier*.</span></span> <span data-ttu-id="cfe95-138">ピア名*分類子*コンポーネントは、149文字以下の Unicode 文字を含む任意の文字列に設定できます (`null` ("\ 0") ターミネータを含む)。</span><span class="sxs-lookup"><span data-stu-id="cfe95-138">The peer name *Classifier* component can be set to any string that contains 149 or fewer Unicode characters, including the `null` ("\0") terminator.</span></span> <span data-ttu-id="cfe95-139">ピア名の文字列では、大文字と小文字が区別されます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-139">Peer name strings are case-sensitive.</span></span>  
  
 <span data-ttu-id="cfe95-140">セキュリティで保護されたピア名の場合、証明機関の後にある分類子とドット (ピリオド) は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-140">For secured peer names, the classifier and the dot (period) after the authority are optional.</span></span> <span data-ttu-id="cfe95-141">セキュリティで保護されていないピア名の場合、分類子は省略可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="cfe95-141">For unsecured peer names, the classifier is not optional.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.PeerToPeer.PeerName.Authority" />
        <altmember cref="P:System.Net.PeerToPeer.PeerName.IsSecured" />
        <altmember cref="T:System.Net.PeerToPeer.PeerNameType" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPeerHostName">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.PeerName CreateFromPeerHostName (string peerHostName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.PeerName CreateFromPeerHostName(string peerHostName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromPeerHostName (peerHostName As String) As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::PeerName ^ CreateFromPeerHostName(System::String ^ peerHostName);" />
      <MemberSignature Language="F#" Value="static member CreateFromPeerHostName : string -&gt; System.Net.PeerToPeer.PeerName" Usage="System.Net.PeerToPeer.PeerName.CreateFromPeerHostName peerHostName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerHostName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerHostName"><span data-ttu-id="cfe95-142">DNS 修飾ホスト名を格納している文字列。</span><span class="sxs-lookup"><span data-stu-id="cfe95-142">A string that contains the DNS-qualified host name.</span></span></param>
        <summary><span data-ttu-id="cfe95-143">指定したピア ホスト名を使用して、指定した <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> オブジェクトの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-143">Creates a new instance of the specified <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> object with the specified peer host name.</span></span></summary>
        <returns><span data-ttu-id="cfe95-144">指定したピア ホスト名を表す <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cfe95-144">A <see cref="T:System.Net.PeerToPeer.PeerName" /> object that represents the specified peer host name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-145">ピアツーピアホストは、ピアツーピアネットワークセッションを開始する "シードノード" であり、この種類のネットワーク接続がチャットグループやゲームなどの通信に最も適しているアプリケーションに参加するようにピアを招待します。sessions.</span><span class="sxs-lookup"><span data-stu-id="cfe95-145">The peer-to-peer host is the "seed node" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.</span></span>  
  
 <span data-ttu-id="cfe95-146">このメソッドは、<xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> プロパティに基づいて <xref:System.Net.PeerToPeer.PeerName> オブジェクトを作成するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-146">This method can be used to create a <xref:System.Net.PeerToPeer.PeerName> object based on the <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> property.</span></span> <span data-ttu-id="cfe95-147">このピア名は、呼び出し元ノードの id に関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="cfe95-147">This peer name is not associated with the identity of the calling node.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cfe95-148">指定した <see cref="T:System.String" /> は有効なピア ホスト名文字列ではありません。</span><span class="sxs-lookup"><span data-stu-id="cfe95-148">The <see cref="T:System.String" /> provided is not a valid peer host name string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfe95-149"><see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-149"><see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="cfe95-150">指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> から <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> を作成できませんでした。</span><span class="sxs-lookup"><span data-stu-id="cfe95-150">A <see cref="T:System.Net.PeerToPeer.PeerName" /> could not be created from the supplied <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /></span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelativePeerName">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.PeerName CreateRelativePeerName (System.Net.PeerToPeer.PeerName peerName, string classifier);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.PeerName CreateRelativePeerName(class System.Net.PeerToPeer.PeerName peerName, string classifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRelativePeerName (peerName As PeerName, classifier As String) As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::PeerName ^ CreateRelativePeerName(System::Net::PeerToPeer::PeerName ^ peerName, System::String ^ classifier);" />
      <MemberSignature Language="F#" Value="static member CreateRelativePeerName : System.Net.PeerToPeer.PeerName * string -&gt; System.Net.PeerToPeer.PeerName" Usage="System.Net.PeerToPeer.PeerName.CreateRelativePeerName (peerName, classifier)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerName" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="classifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerName"><span data-ttu-id="cfe95-151">新しい分類子の文字列値を設定する対象の <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cfe95-151">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object on which to set the new classifier string value.</span></span></param>
        <param name="classifier"><span data-ttu-id="cfe95-152">返された <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> に設定する <see cref="T:System.Net.PeerToPeer.PeerName" />。</span><span class="sxs-lookup"><span data-stu-id="cfe95-152">The <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> to set on the returned <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></param>
        <summary><span data-ttu-id="cfe95-153">指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトで定義されている <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> フィールドを、指定した分類子の文字列値で置き換えることにより、新しい <see cref="T:System.Net.PeerToPeer.PeerName" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-153">Creates a new <see cref="T:System.Net.PeerToPeer.PeerName" /> by replacing the <see cref="P:System.Net.PeerToPeer.PeerName.Classifier" /> field defined on the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object with the specified classifier string value.</span></span></summary>
        <returns><span data-ttu-id="cfe95-154">更新された分類子を格納している新しい <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cfe95-154">The new <see cref="T:System.Net.PeerToPeer.PeerName" /> object that contains the updated classifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-155"><xref:System.Net.PeerToPeer.PeerName.Classifier%2A> は、<xref:System.Net.PeerToPeer.PeerName>の既存の <xref:System.Net.PeerToPeer.PeerName.Authority%2A> 部分に追加されます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-155">The <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> is appended to the existing <xref:System.Net.PeerToPeer.PeerName.Authority%2A> portion of the <xref:System.Net.PeerToPeer.PeerName>.</span></span> <span data-ttu-id="cfe95-156">この文字列の長さは、`null` ターミネータを含め、149文字以下でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="cfe95-156">This string is no more than 149 characters long, including the `null` terminator.</span></span> <span data-ttu-id="cfe95-157">Id のピア名を返す `null` を指定します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-157">Specify `null` to return the peer name of the identity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cfe95-158">指定した <see cref="T:System.String" /> は有効なピア名分類子ではありません。</span><span class="sxs-lookup"><span data-stu-id="cfe95-158">The <see cref="T:System.String" /> provided is not a valid peer name classifier.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cfe95-159">1 つ以上のパラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-159">One or more parameters are <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="cfe95-160">指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> から <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> を作成できませんでした。</span><span class="sxs-lookup"><span data-stu-id="cfe95-160">A <see cref="T:System.Net.PeerToPeer.PeerName" /> could not be created from the supplied <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /></span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cfe95-161">この <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトの内容が、別のオブジェクトの内容と等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-161">Determines whether the content of this <see cref="T:System.Net.PeerToPeer.PeerName" /> object is equivalent to the content of another object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-162">Equals の実装は、IEquatable\<T > によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-162">The implementation of Equals is defined by IEquatable\<T>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.PeerToPeer.PeerName.Authority" />
        <altmember cref="P:System.Net.PeerToPeer.PeerName.Classifier" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.PeerName other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.PeerName other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As PeerName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::PeerName ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.PeerName -&gt; bool" Usage="peerName.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.PeerName" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="cfe95-163">この <see cref="T:System.Net.PeerToPeer.PeerName" /> と比較するピア名。</span><span class="sxs-lookup"><span data-stu-id="cfe95-163">The peer name to compare with this <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></param>
        <summary><span data-ttu-id="cfe95-164">現在の <see cref="T:System.Net.PeerToPeer.PeerName" /> と指定したピア名を、大文字と小文字を区別して比較します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-164">Performs a case-sensitive comparison of the current <see cref="T:System.Net.PeerToPeer.PeerName" /> and the specified peer name.</span></span></summary>
        <returns><span data-ttu-id="cfe95-165">指定した <see langword="true" /> が現在のピア名オブジェクトと同じリソースを示す場合は <see cref="T:System.Net.PeerToPeer.PeerName" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfe95-165"><see langword="true" /> if the specified <see cref="T:System.Net.PeerToPeer.PeerName" /> identifies the same resource as the current peer name object; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="cfe95-166">このメソッドは、<see langword="false" /> が <paramref name="other" /> に設定されている場合にも <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-166">This method also returns <see langword="false" /> if <paramref name="other" /> is set to <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-167">2つのピア名は、<xref:System.Net.PeerToPeer.PeerName.Authority%2A> と <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> コンポーネントに同一の文字が含まれている場合、等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-167">Two peer names are considered equal if they contain identical characters in their <xref:System.Net.PeerToPeer.PeerName.Authority%2A> and <xref:System.Net.PeerToPeer.PeerName.Classifier%2A> components.</span></span>  
  
 <span data-ttu-id="cfe95-168">比較の前に、文字列に対して normalizations 演算は実行されません。</span><span class="sxs-lookup"><span data-stu-id="cfe95-168">No normalizations are performed on the strings prior to comparison.</span></span>  <span data-ttu-id="cfe95-169">すべての正規化は、ピア名オブジェクトの作成中または構築前に完了している必要があります。</span><span class="sxs-lookup"><span data-stu-id="cfe95-169">All normalization should have been completed while or before constructing the peer name objects.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="peerName.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="cfe95-170">現在の <see cref="T:System.Object" /> と比較する <see cref="T:System.Net.PeerToPeer.PeerName" /> です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-170">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></param>
        <summary><span data-ttu-id="cfe95-171">この <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトの内容が、別のオブジェクトの内容と等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-171">Determines whether the content of this <see cref="T:System.Net.PeerToPeer.PeerName" /> is equal to the content of another object.</span></span></summary>
        <returns><span data-ttu-id="cfe95-172"><see langword="true" /> と比較対象のオブジェクトが同じ情報を含んでいる場合は <see cref="T:System.Net.PeerToPeer.PeerName" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cfe95-172"><see langword="true" /> if the <see cref="T:System.Net.PeerToPeer.PeerName" /> and the comparison object contain the same information; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-173">このメソッドは、<xref:System.Object>から既定のシグネチャと動作を継承します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-173">This method inherits the default signature and behavior from <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="peerName.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfe95-174"><see cref="M:System.Object.GetHashCode" /> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="cfe95-174">Overrides the <see cref="M:System.Object.GetHashCode" /> method.</span></span></summary>
        <returns><span data-ttu-id="cfe95-175">現在の <see cref="T:System.Object" /> のハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="cfe95-175">A hashcode for the current <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-176">2つのオブジェクトが等しいと見なされるのは、このメソッドが両方のオブジェクトに対して同じハッシュコードを返す場合です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-176">Two objects are considered equal if this method returns the same hashcode for both of them.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerName.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="cfe95-177"><see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに関連付けられたシリアル化データを保持します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-177">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="cfe95-178"><see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに関連付けられたシリアル化ストリームの転送先を格納します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-178">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></param>
        <summary><span data-ttu-id="cfe95-179">シリアル化情報オブジェクトを、<see cref="T:System.Net.PeerToPeer.PeerName" /> のシリアル化に必要なデータで事前設定します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-179">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-180">派生型は基本型の <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="cfe95-180">A derived type must call the base type <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerName.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool" Usage="System.Net.PeerToPeer.PeerName.IsSecured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfe95-181">このピア名がセキュリティ保護されたピア名かどうかを指定するブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-181">Gets a Boolean value that specifies whether this is a secured peer name.</span></span></summary>
        <value><span data-ttu-id="cfe95-182"><see langword="true" /> の場合、このピア名は秘密キーと公開キーのペアでセキュリティ保護されています。</span><span class="sxs-lookup"><span data-stu-id="cfe95-182">If <see langword="true" />, this peer name is secured with a private key/ public key pair.</span></span> <span data-ttu-id="cfe95-183">この名前には、そのピア コンピューターのユーザー証明書の公開キーの SHA (Secure Hash Algorithm) ハッシュが含まれています。</span><span class="sxs-lookup"><span data-stu-id="cfe95-183">Its name contains the Secure Hash Algorithm (SHA) hash of the public key of the user certificate of that peer machine.</span></span> <span data-ttu-id="cfe95-184"><see langword="false" /> の場合、ピア名には ID が関連付けられていません。</span><span class="sxs-lookup"><span data-stu-id="cfe95-184">Otherwise, if <see langword="false" />, the peer name has no associated identity.</span></span>  
  
<span data-ttu-id="cfe95-185">すべてのプロパティの既定値は、明示的に指定されない限り、参照型では <see langword="null" />、<see langword="int" /> 型のプロパティではゼロ (0) です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-185">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types and zero (0) for properties of type <see langword="int" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-186">ピア名は、自己署名証明書によってサポートされている場合、セキュリティで保護されていると見なされます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-186">A peer name is considered secured if it is backed by a self-signed certificate.</span></span>  
  
 <span data-ttu-id="cfe95-187">セキュリティで保護されたピア名を PNRP に登録できるのは、所有者だけです。</span><span class="sxs-lookup"><span data-stu-id="cfe95-187">Only the owner can register a secured peer name with PNRP.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="cfe95-188">セキュリティで保護されたピア名を使用しても、ネットワークアプリケーションの全体的なセキュリティが保証されるわけではありません。</span><span class="sxs-lookup"><span data-stu-id="cfe95-188">Using a secured peer name does not ensure the overall security of the networking application.</span></span> <span data-ttu-id="cfe95-189">アプリケーションのセキュリティは、実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="cfe95-189">Security of the application is implementation-dependent.</span></span></para></block>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Security.Permissions" />
      </Docs>
    </Member>
    <Member MemberName="PeerHostName">
      <MemberSignature Language="C#" Value="public string PeerHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PeerHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerName.PeerHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PeerHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerHostName : string" Usage="System.Net.PeerToPeer.PeerName.PeerHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cfe95-190">ピアツーピア ホストの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-190">Gets the name of the peer-to-peer host.</span></span> <span data-ttu-id="cfe95-191">これは <see cref="T:System.Net.PeerToPeer.PeerName" /> の DNS エンコード バージョンで、ID であるという点で <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="cfe95-191">This is a DNS-encoded version of the <see cref="T:System.Net.PeerToPeer.PeerName" /> which is equivalent to a <see cref="P:System.Net.PeerToPeer.PeerName.PeerHostName" /> in that they are both identifiers.</span></span>  <span data-ttu-id="cfe95-192">両者の間の違いは、視覚的表現です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-192">The difference between the two is visual representation.</span></span></summary>
        <value><span data-ttu-id="cfe95-193">ピアツーピア ホストの名前である <see cref="T:System.String" /> 値。</span><span class="sxs-lookup"><span data-stu-id="cfe95-193">A <see cref="T:System.String" /> value that is the name of the peer-to-peer host.</span></span> <span data-ttu-id="cfe95-194">明示的に指定しない場合、すべてのプロパティの既定値は、参照型では <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cfe95-194">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-195">ピアツーピアホストは、ピアツーピアネットワークセッションを開始する "シードノード" であり、この種類のネットワーク接続がチャットグループやゲームなどの通信に最も適しているアプリケーションに参加するようにピアを招待します。sessions.</span><span class="sxs-lookup"><span data-stu-id="cfe95-195">The peer-to-peer host is the "seed node" responsible for initiating the peer-to-peer networking session, inviting peers to participate in applications for which this type of network connectivity is most appropriate for communications such as chat groups or game sessions.</span></span>  
  
 <span data-ttu-id="cfe95-196"><xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> プロパティは、ピアツーピアネットワークセッションを作成したピアの名前を指定します。これは、セッションのホストと見なされます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-196">The <xref:System.Net.PeerToPeer.PeerName.PeerHostName%2A> property specifies the name of a peer that created the peer-to-peer networking session, and which is considered the host of the session.</span></span>  <span data-ttu-id="cfe95-197">ピアツーピアネットワークセッションのホストは、ピアを複数の <xref:System.Net.PeerToPeer.Cloud>に収集できます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-197">The host of a peer-to-peer networking session may collect peers into more than one <xref:System.Net.PeerToPeer.Cloud>.</span></span> <span data-ttu-id="cfe95-198">また、ピアは複数のピアホストによって同時にホストされる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="cfe95-198">Also, a peer may simultaneously be hosted by more than one peer host.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerName.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="cfe95-199"><see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに関連付けられたシリアル化データを保持します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-199">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="cfe95-200"><see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに関連付けられたシリアル化ストリームの転送先を格納します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-200">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></param>
        <summary><span data-ttu-id="cfe95-201"><see cref="T:System.Runtime.Serialization.ISerializable" /> インターフェイスを実装し、<see cref="T:System.Net.PeerToPeer.PeerName" /> インスタンスをシリアル化するために必要なデータを返します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-201">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerName" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cfe95-202">現在の <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトの文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-202">Returns a string representation of the current <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></summary>
        <returns><span data-ttu-id="cfe95-203">現在の <see cref="T:System.Net.PeerToPeer.PeerName" /> を表す文字列。*Authority.Classifier* の形式で指定されます。</span><span class="sxs-lookup"><span data-stu-id="cfe95-203">A string that represents the current <see cref="T:System.Net.PeerToPeer.PeerName" />, and specified in the following format: *Authority.Classifier*.</span></span> <span data-ttu-id="cfe95-204">たとえば "0.MyInternetPeer" のように指定します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-204">For example, "0.MyInternetPeer".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfe95-205">このメソッドは、<xref:System.Object>から既定のシグネチャと動作を継承します。</span><span class="sxs-lookup"><span data-stu-id="cfe95-205">This method inherits the default signature and behavior from <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
      </Docs>
    </Member>
  </Members>
</Type>
