<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2690dd4a2fa11fc574e9753f2ffbb401f94b3108" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78697028" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8a2fd-101"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> またはクラウドのセットに <see cref="T:System.Net.PeerToPeer.Cloud" /> を登録します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-101">Registers a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in a <see cref="T:System.Net.PeerToPeer.Cloud" /> or set of clouds.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-102">登録によって、ピアクラウドまたはクラウド内の <xref:System.Net.PeerToPeer.PeerName> に関連付けられているすべての情報が作成 (または更新) されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-102">Registration creates (or updates) all the information that is associated with a <xref:System.Net.PeerToPeer.PeerName> in a peer cloud or clouds.</span></span>  
  
 <span data-ttu-id="8a2fd-103">同じピア名に対して複数の <xref:System.Net.PeerToPeer.PeerNameRegistration> オブジェクトを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-103">It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name.</span></span> <span data-ttu-id="8a2fd-104">このような場合、ピア名がセキュリティで保護されている場合、各インスタンスは異なるクラウド内の <xref:System.Net.PeerToPeer.PeerNameRegistration> を表します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-104">In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud.</span></span> <span data-ttu-id="8a2fd-105">ただし、ピア名がセキュリティで保護されていない場合は、同じクラウドに複数回登録できます。これにより、各登録が異なるプロセスから実行されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-105">However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a2fd-106"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a2fd-107"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> クラスの新しい既定のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-107">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-108"><xref:System.Net.PeerToPeer.PeerNameRegistration>型の新しい既定のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-108">Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>.</span></span> <span data-ttu-id="8a2fd-109">構築時にピア名の登録は実行されません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-109">It does not perform peer name registration during construction.</span></span>  
  
 <span data-ttu-id="8a2fd-110">このコンストラクターを使用してオブジェクトをインスタンス化した後、呼び出し元は、<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> または <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>を呼び出す前に、インスタンス内の適切なフィールドを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-110">After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8a2fd-111">登録する <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-111">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="8a2fd-112">登録するポート番号を指定する整数値。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-112">Integer value that specifies the port number to register.</span></span></param>
        <summary><span data-ttu-id="8a2fd-113">指定した名前とポート番号を使用して、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-113">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified name and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-114">このコンストラクターを呼び出すと、すべてのソースアドレス (IPv6and IPv4 の両方) と、ピアが現在参加しているすべてのクラウドの指定されたポートを登録するために使用されるインスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-114">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</span></span>  <span data-ttu-id="8a2fd-115">オブジェクトが正常に構築されると、指定された <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> および <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> が設定されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-115">If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.</span></span>  
  
 <span data-ttu-id="8a2fd-116">ピア名がセキュリティで保護されていて、ピアが現在参加している <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> で以前に登録されていた場合は、<xref:System.Net.PeerToPeer.PeerToPeerException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-116">If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="8a2fd-117">このコンストラクターは、<xref:System.Net.PeerToPeer.PeerNameRegistration> インスタンスだけを作成します。登録は実行されません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-117">This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration.</span></span> <span data-ttu-id="8a2fd-118">このコンストラクターを使用して登録オブジェクトをインスタンス化し、そのフィールドを設定した後、アプリケーションは <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> を呼び出して実際の登録を実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-118">After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a2fd-119"><paramref name="name" /> パラメーターとして <see langword="null" /> を使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-119">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a2fd-120">指定したポート番号が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-120">The specified port number is less than zero.</span></span>  <span data-ttu-id="8a2fd-121">ポート番号は 0 以上で、65,535 (0xFFFF) 未満である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-121">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="8a2fd-122">-   指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> はこのホストから既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-122">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="8a2fd-123">-   リモート ピアには、指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに対する <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-123">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="8a2fd-124">このインスタンスの逆シリアル化に必要なデータを格納するオブジェクトへの参照。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-124">Reference to the object that holds the data needed to deserialize this instance.</span></span></param>
        <param name="context"><span data-ttu-id="8a2fd-125">データを逆シリアル化するための手段を提供するコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-125">Context that provides the means for deserializing the data.</span></span> <span data-ttu-id="8a2fd-126">シリアル化されたデータのソースとも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-126">Also referred to as the source of the serialized data.</span></span></param>
        <summary><span data-ttu-id="8a2fd-127">新しくシリアル化可能な <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-127">Initializes a new serializable <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer, cloud As Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8a2fd-128">登録する <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-128">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="8a2fd-129">登録するポート番号を指定する整数値。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-129">Integer value that specifies the port number to register.</span></span></param>
        <param name="cloud"><span data-ttu-id="8a2fd-130">ピア名を登録する <see cref="T:System.Net.PeerToPeer.Cloud" />。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-130"><see cref="T:System.Net.PeerToPeer.Cloud" /> in which to register the peer name.</span></span></param>
        <summary><span data-ttu-id="8a2fd-131">指定したピア名、ポート番号、<see cref="T:System.Net.PeerToPeer.Cloud" /> を使用して、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-131">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified peer name, port number, and <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-132">このコンストラクターを呼び出すと、すべての送信元アドレス (IPv6 と IPv4 の両方)、指定されたポート、および指定された <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>を登録するために使用されるインスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-132">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  <span data-ttu-id="8a2fd-133">オブジェクトが正常に構築された場合、プロパティには、指定した <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>、<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> および <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>が設定されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-133">If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  
  
 <span data-ttu-id="8a2fd-134">クラウドパラメーターが `null`場合は、<xref:System.Net.PeerToPeer.Cloud.Available> ショートカットを使用して名前が登録されます。これにより、<xref:System.Net.PeerToPeer.Cloud.Name%2A>、<xref:System.Net.PeerToPeer.Cloud.Scope%2A>、および <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>の既定値が初期化されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-134">If the cloud parameter is `null`, the name is registered using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="8a2fd-135">インスタンス化後、<xref:System.Net.PeerToPeer.PeerName>を登録するには、<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-135">After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a2fd-136"><paramref name="name" /> パラメーターとして <see langword="null" /> を使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-136">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a2fd-137">指定したポート番号が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-137">The specified port number is less than zero.</span></span>  <span data-ttu-id="8a2fd-138">ポート番号は 0 以上で、65,535 (0xFFFF) 未満である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-138">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="8a2fd-139">-   指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> はこのホストから既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-139">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="8a2fd-140">-   リモート ピアには、指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに対する <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-140">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a2fd-141">この <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> オブジェクトを登録する <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 内の情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-141">Gets or sets information in a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> into which this <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> object will be registered.</span></span></summary>
        <value><span data-ttu-id="8a2fd-142">この登録を定義するピア クラウドを指定する <see cref="T:System.Net.PeerToPeer.Cloud" /> 型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-142">An object of type <see cref="T:System.Net.PeerToPeer.Cloud" /> that specifies the peer cloud for which this registration is defined.</span></span> <span data-ttu-id="8a2fd-143">既定では、このプロパティは <see langword="null" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-143">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a2fd-144"><see cref="T:System.Net.PeerToPeer.PeerName" /> に登録する <see cref="T:System.Net.PeerToPeer.Cloud" /> オブジェクトに関する追加情報を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-144">Gets or sets additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> object that will be registered with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="8a2fd-145"><see cref="T:System.Net.PeerToPeer.PeerName" /> に関連付ける <see cref="T:System.Net.PeerToPeer.Cloud" /> に関する追加情報を含んでいるコメント。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-145">The comment that contains additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> to associate with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="8a2fd-146">既定では、このプロパティは <see langword="null" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-146">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="8a2fd-147">指定した文字列値は、39 文字を超える Unicode 文字です。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-147">The specified string value is greater than 39 Unicode characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a2fd-148"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトのアプリケーション定義のバイナリ データを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-148">Gets or sets application-defined binary data for the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="8a2fd-149">エントリに関連付けられているバイナリ データを保持するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-149">An array of bytes that holds the binary data associated with the entry.</span></span> <span data-ttu-id="8a2fd-150">既定では、このプロパティは <see langword="null" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-150">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-151">指定できる <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> の最大量は4096バイトです。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-151">The maximum amount of <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> that can be supplied is 4,096 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a2fd-152">指定した <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> が 4096 バイトを超えています。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-152">The specified <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> is greater than 4096 bytes.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a2fd-153"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-153">Releases the resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-154">ピアが <xref:System.Net.PeerToPeer.Cloud>を終了すると、クラウドはピアに関連付けられた <xref:System.Net.PeerToPeer.PeerNameRegistration> オブジェクトを必要としなくなります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-154">When a peer leaves a <xref:System.Net.PeerToPeer.Cloud>, the cloud no longer requires the <xref:System.Net.PeerToPeer.PeerNameRegistration> object associated with the peer.</span></span>  <span data-ttu-id="8a2fd-155">登録オブジェクトが停止しているか破棄されたかは、クラウドがオブジェクトを再利用してこのピアまたは別のピアを登録するかどうかによって決まります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-155">Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer.</span></span> <span data-ttu-id="8a2fd-156">ピアホストが通信することが想定されている登録オブジェクト内に他のエンドポイントがある場合は、このオブジェクトを停止または破棄する前に、クラウド内にこれらのエンドポイントを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-156">If there are any other endpoint(s) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.</span></span>  
  
 <span data-ttu-id="8a2fd-157">クラウドでより多くのピアを登録する必要がある場合は、<xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> 方法をお勧めします。クラウドがメモリを必要としなくなった場合は、<xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> 方法を使用してオペレーティングシステムに返される必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-157">If the cloud expects to register more peers, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a2fd-158">この <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-158">Releases all resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8a2fd-159"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトを破棄する前に、常に Dispose メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-159">Always call the Dispose method before destroying the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="8a2fd-160">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-160"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8a2fd-161">アンマネージド リソースを解放します。オプションで <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトによって使用されているマネージド リソースも解放できます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-161">Releases the unmanaged resources and optionally releases the managed resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8a2fd-162"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトへの最後の参照を解放する前に、常に Dispose メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-162">Always call the Dispose method before releasing the last reference to the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a2fd-163">関連付けられているピア名が登録されたネットワーク エンドポイントのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-163">Gets the collection of network endpoints for which the associated peer name is registered.</span></span></summary>
        <value><span data-ttu-id="8a2fd-164">関連付けられているピア名が登録されたネットワーク エンドポイントを格納している <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-164">An <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> object that contains the network endpoints for which the associated peer name is registered.</span></span> <span data-ttu-id="8a2fd-165">明示的に指定しない場合、すべてのプロパティの既定値は、参照型では <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-165">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-166"><xref:System.Net> 名前空間では、<xref:System.Net.IPEndPoint> は IP アドレスとポート番号としてネットワークエンドポイントを表します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-166">In the <xref:System.Net> namespace, an <xref:System.Net.IPEndPoint> represents a network endpoint as an IP address and a port number.</span></span>  <span data-ttu-id="8a2fd-167">PNRP の場合、エンドポイントごとに IP アドレスとポート値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-167">For PNRP, an IP address and port value must be provided for each endpoint.</span></span>  <span data-ttu-id="8a2fd-168">提供できるエンドポイントの最大数は10です。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-168">The maximum number of endpoints that can be provided is ten.</span></span> <span data-ttu-id="8a2fd-169">このパラメーターを `null`すると、アドレスの自動選択が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-169">Automatic address selection is used when this parameter is `null`.</span></span>  
  
 <span data-ttu-id="8a2fd-170">登録するアドレスを自動的に選択する登録方法が使用されている場合、ピア名が登録されているアドレスを特定する方法はありません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-170">If a registration method is used that automatically selects the addresses to register, there is no method to determine the addresses for which the peer name was registered.</span></span>  <span data-ttu-id="8a2fd-171">つまり、選択したアドレスを反映するために <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> プロパティは更新されません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-171">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="8a2fd-172">ピア名が複数のノードに登録されている場合、各 <xref:System.Net.PeerToPeer.PeerNameRegistration> は区別され、各登録インスタンスで定義されている <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> プロパティは異なります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-172">When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different.</span></span> <span data-ttu-id="8a2fd-173">また、<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> が複数の <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>に登録されている場合、各登録は区別され、通常、エンドポイントのコレクションはインスタンスごとに異なります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-173">Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="8a2fd-174">このピアが通信するエンドポイントのリストは、このピア名が知られているエンドポイントのリストと同じではありません。これは、異なる方法で格納されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-174">The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</span></span></para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="8a2fd-175"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトに関連付けられたシリアル化データを保持します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-175">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="8a2fd-176"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトに関連付けられたシリアル化ストリームの転送先を格納します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-176">Contains destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <summary><span data-ttu-id="8a2fd-177">シリアル化情報オブジェクトを、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> インスタンスのシリアル化に必要なデータで事前設定します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-177">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a2fd-178"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティで指定されているピア名が、ホスト上の特定の <see cref="T:System.Net.PeerToPeer.Cloud" /> に登録されているかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-178">Gets or sets whether the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" /> on a host.</span></span></summary>
        <returns><span data-ttu-id="8a2fd-179">ピア名がピア ホストの <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> に登録されている場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-179">If <see langword="true" />, the peer name is registered with a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> for the peer host.</span></span> <span data-ttu-id="8a2fd-180"><see langword="false" /> の場合、<see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> を使用して登録プロセスを開始できます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-180">If <see langword="false" />, then the registration process can be started with <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a2fd-181">既に破棄されているオブジェクトは登録できません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-181">An object that has been disposed already cannot be registered.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a2fd-182">ピア クラウドに登録するピア名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-182">Gets or sets the peer name to register with a peer cloud.</span></span></summary>
        <value><span data-ttu-id="8a2fd-183">この <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトに関連付けられた値が格納されている <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-183">An object of type <see cref="T:System.Net.PeerToPeer.PeerName" /> that contains values associated with this <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span> <span data-ttu-id="8a2fd-184">明示的に指定しない場合、すべてのプロパティの既定値は、参照型では <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-184">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-185">複数のノードに対してピア名を登録できます。各 <xref:System.Net.PeerToPeer.PeerNameRegistration> インスタンスは区別されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-185">A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct.</span></span> <span data-ttu-id="8a2fd-186">対応する各 <xref:System.Net.PeerToPeer.PeerName> インスタンスに関連付けられている <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> プロパティが異なります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-186">The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different.</span></span> <span data-ttu-id="8a2fd-187">また、ノードが接続されている複数のクラウドに対してピア名を登録することもできます。これらの各登録は個別です。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-187">Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</span></span> <span data-ttu-id="8a2fd-188">ピア名の <xref:System.Net.IPEndPointCollection> は、これらの各インスタンスで異なります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-188">The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a2fd-189"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトに登録するピアが使用する [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) ポート番号を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-189">Gets or sets the [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) port number used by the peer being registered into the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="8a2fd-190"><see cref="T:System.Net.IPEndPoint" /> の TCP ポート番号を示す整数値。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-190">An integer value indicating the TCP port number of the <see cref="T:System.Net.IPEndPoint" />.</span></span> <span data-ttu-id="8a2fd-191">明示的に指定しない場合、このプロパティの既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-191">Unless explicitly specified, the default value for this property is zero (0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-192">既定のポートは、エンドポイントが指定されていない場合にのみ、<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> メソッドによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-192">The default port is used by the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method only when no endpoints are specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="8a2fd-193">指定したポート値が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-193">The specified port value is less than zero.</span></span>  <span data-ttu-id="8a2fd-194">ポート番号は 0 以上で、65,535 (0xFFFF) 未満である必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-194">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a2fd-195"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> を <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> に登録します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-195">Registers the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> into the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span> <span data-ttu-id="8a2fd-196"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> がまったく指定されないと、<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> プロパティで指定したポート値を使用して、自動アドレス選択が使用されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-196">If no <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> is specified, automatic address selection is used with the port value specified by the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-197">メソッドは、<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> プロパティで指定されたピア名を、すべてのソースアドレスと、コンストラクターで指定された <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> に登録します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-197">The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor.</span></span> <span data-ttu-id="8a2fd-198">このメソッドでは、エンドポイントが指定されていない場合にのみ、既定のポートが使用されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-198">The default port is used by this method only when no endpoints are specified.</span></span>  
  
 <span data-ttu-id="8a2fd-199"><xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> プロパティが `null`の場合、このメソッドは <xref:System.Net.PeerToPeer.Cloud.Available> フィールドを使用して、<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> プロパティに指定されたピア名を登録します。このフィールドは、<xref:System.Net.PeerToPeer.Cloud.Name%2A>、<xref:System.Net.PeerToPeer.Cloud.Scope%2A>、および <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>の既定値を初期化します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-199">If the <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> property is `null`, this method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property using the <xref:System.Net.PeerToPeer.Cloud.Available> field, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="8a2fd-200"><xref:System.Net.PeerToPeer.PeerNameRegistration> オブジェクトが開始された後、<xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> メソッドを使用して停止します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-200">After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it.</span></span>  
  
 <span data-ttu-id="8a2fd-201">登録を更新するには、<xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> メソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-201">To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8a2fd-202">次のコード例では、<xref:System.Net.PeerToPeer.PeerName> を作成し、指定されたメタデータと共に登録します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-202">The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.</span></span>  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a2fd-203"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティが <see langword="null" /> に設定されている。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-203">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a2fd-204">このオブジェクトでは、Dispose() が既に呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-204">This object had Dispose() called on it previously.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="8a2fd-205">-   指定した <see cref="T:System.Net.PeerToPeer.PeerName" /> は既に登録されています。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-205">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered.</span></span> <span data-ttu-id="8a2fd-206">登録を更新するには、<see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> メソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-206">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method must be used to update a registration.</span></span>  
  
<span data-ttu-id="8a2fd-207">-   リモート ピアに、指定した <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> の <see cref="T:System.Net.PeerToPeer.PeerName" /> がありません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-207">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the <see cref="T:System.Net.PeerToPeer.PeerName" /> specified.</span></span>  
  
<span data-ttu-id="8a2fd-208">-   <see cref="T:System.Net.PeerToPeer.PeerName" /> と <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> がどちらも指定されていません。少なくとも 1 つを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-208">-   Either the <see cref="T:System.Net.PeerToPeer.PeerName" /> or the <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> is not specified; at least one needs to be provided.</span></span>  
  
<span data-ttu-id="8a2fd-209">-   メッセージまたはデータ要素が無効です。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-209">-   The message or data elements are invalid.</span></span> <span data-ttu-id="8a2fd-210">または、<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> が設定されておらず、データ BLOB または <see cref="T:System.Net.IPEndPoint" /> が指定されていません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-210">Or, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> is not set and no data blob or <see cref="T:System.Net.IPEndPoint" /> is specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a2fd-211"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティで指定されたピア名の登録を、登録されていたすべてのクラウドから解除します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-211">Unregisters the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property from all the clouds in which it was registered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-212">登録プロセスが停止されると、登録オブジェクトの状態は、パラメーターなしのコンストラクターによって構築された直後の状態と同じになります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-212">After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the parameterless constructor.</span></span> <span data-ttu-id="8a2fd-213">この状態では、すべてのプロパティに値がないと見なされます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-213">In this state, all of its properties are assumed to have no value.</span></span> <span data-ttu-id="8a2fd-214"><xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> メソッドを使用して再起動することができます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-214">The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.</span></span>  
  
 <span data-ttu-id="8a2fd-215">同じピア名に対して複数の登録オブジェクトを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-215">It is possible to have multiple registration objects for the same peer name.</span></span>  <span data-ttu-id="8a2fd-216">このような場合、ピア名がセキュリティで保護されている場合、各インスタンスは別の PNRP クラウドでの登録を表します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-216">In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</span></span>  <span data-ttu-id="8a2fd-217">ただし、ピア名がセキュリティで保護されていない場合は、同じクラウドに複数回登録できます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-217">However, if the peer name is not secured, it can be registered in the same cloud multiple times.</span></span>  
  
 <span data-ttu-id="8a2fd-218">このインスタンスが既に停止している場合、このメソッドを呼び出しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-218">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8a2fd-219"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティは登録されていません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-219">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="8a2fd-220">これは、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> オブジェクトが空のコンストラクターを使用して構築されている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-220">This occurs when a <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object is constructed using the empty constructor.</span></span> <span data-ttu-id="8a2fd-221"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> を呼び出す前に、このインスタンスで <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> プロパティを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-221">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property must be populated in this instance prior to calling <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a2fd-222">このオブジェクトでは、Dispose() が既に呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-222">This object had Dispose() called on it previously.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="8a2fd-223"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> インスタンスに関連付けられているシリアル化データを保持します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-223">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <param name="context"><span data-ttu-id="8a2fd-224"><see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> インスタンスに関連付けられているシリアル化ストリームの転送先を格納します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-224">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <summary><span data-ttu-id="8a2fd-225"><see cref="T:System.Runtime.Serialization.ISerializable" /> インターフェイスを実装し、<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> インスタンスをシリアル化するために必要なデータを返します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-225">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a2fd-226">特定の <see cref="T:System.Net.PeerToPeer.Cloud" /> に登録されたノードの <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> を更新します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-226">Updates the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> for a node registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="8a2fd-227">プロパティで指定された情報を使用して更新が実行されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-227">Update is performed using the information specified in the properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-228">この <xref:System.Net.PeerToPeer.PeerName> のクラウドに登録されているすべての情報は、呼び出しの前に完全に破棄されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-228">All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.</span></span>  <span data-ttu-id="8a2fd-229">新しいデータは、既存の登録と結合されません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-229">The new data is not combined with the existing registration.</span></span>  <span data-ttu-id="8a2fd-230"><xref:System.Net.PeerToPeer.PeerNameRegistration>を更新するには、まずこのインスタンスのプロパティを更新してから、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-230">To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.</span></span>  
  
 <span data-ttu-id="8a2fd-231"><xref:System.Net.PeerToPeer.PeerNameRecord> が登録されると、<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> プロパティを更新できなくなります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-231">After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.</span></span>  <span data-ttu-id="8a2fd-232">レコード内の他のすべてのフィールドが更新される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-232">All other fields in the record may be updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8a2fd-233"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティが <see langword="null" /> に設定されている。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-233">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="8a2fd-234">-   <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティがまだ登録されていません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-234">-   The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="8a2fd-235"><see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> プロパティで指定されたピア名が 1 つ以上のクラウドに登録されるまで、<see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> メソッドを呼び出すことはできません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-235">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method cannot be called until the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered in one or more clouds.</span></span>  
  
<span data-ttu-id="8a2fd-236">-   <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> プロパティで指定されたピア名が、対応する <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> の登録以降に変更されています。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-236">-   The peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has changed since the corresponding <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> was registered.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="8a2fd-237">既に破棄されているオブジェクトは登録できません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-237">An object that has been disposed cannot be registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a2fd-238"><see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> プロパティが <see langword="null" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-238">A <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> property is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a2fd-239">ピア メッシュまたは <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> を走査するときにエンドポイントの自動選択を使用するかどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-239">Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="8a2fd-240">エンドポイントの自動選択を使用する場合は <see langword="true" />。それ以外の方法でエンドポイントを決定する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-240"><see langword="true" /> if automatic endpoint selection is to be used; <see langword="false" /> if some other method will be used to determine an endpoint.</span></span> <span data-ttu-id="8a2fd-241">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-241">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a2fd-242"><xref:System.Net.PeerToPeer.PeerNameRegistration>の開始前にエンドポイント情報が指定されていない状態で、エンドポイントの自動選択を `true`使用すると、システムは個々のエンドポイントを選択し、関連付けられているピア名を使用して、使用可能なすべてのクラウドに発行します。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-242">When auto endpoint selection is used (this property is set to `true`) with no endpoint information specified prior to the start of a <xref:System.Net.PeerToPeer.PeerNameRegistration>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</span></span>  <span data-ttu-id="8a2fd-243">ポートが指定されていない場合、自動選択によって <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>として0が選択されます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-243">If the port is not specified, auto selection chooses zero as the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</span></span>  
  
 <span data-ttu-id="8a2fd-244">`false`に設定すると、上記のように自動選択が実行されません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-244">When set to `false`, auto selection as described above is not performed.</span></span>  <span data-ttu-id="8a2fd-245">これにより、登録プロセスは、(<xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> プロパティによって指定された) データ blob と共にピア名を公開できます。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-245">This enables the registration process to publish a peer name along with a data blob (as specified by the <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> property).</span></span> <span data-ttu-id="8a2fd-246">名前に関連付けられているエンドポイントがありません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-246">No endpoints are associated with the name.</span></span>  
  
 <span data-ttu-id="8a2fd-247">登録するアドレスを自動的に選択する登録方法が使用されている場合、<xref:System.Net.PeerToPeer.PeerName> オブジェクトがどのアドレスに登録されたかを判断する方法はありません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-247">If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered.</span></span>  <span data-ttu-id="8a2fd-248">つまり、選択したアドレスを反映するために <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> プロパティは更新されません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-248">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="8a2fd-249">ピア名の登録が開始された後にこのプロパティを更新しても影響はありません。</span><span class="sxs-lookup"><span data-stu-id="8a2fd-249">Updating this property after peer name registration has started has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
