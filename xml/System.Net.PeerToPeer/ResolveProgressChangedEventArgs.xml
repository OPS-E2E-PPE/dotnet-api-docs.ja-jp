<Type Name="ResolveProgressChangedEventArgs" FullName="System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="98f1ac29961f6222543c20609a406847ec63a623" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78696794" /></Metadata><TypeSignature Language="C#" Value="public class ResolveProgressChangedEventArgs : System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ResolveProgressChangedEventArgs extends System.ComponentModel.ProgressChangedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ResolveProgressChangedEventArgs&#xA;Inherits ProgressChangedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResolveProgressChangedEventArgs : System::ComponentModel::ProgressChangedEventArgs" />
  <TypeSignature Language="F#" Value="type ResolveProgressChangedEventArgs = class&#xA;    inherit ProgressChangedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.ProgressChangedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bb661-101"><see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> イベントの通知と組み合わせて使用します。</span><span class="sxs-lookup"><span data-stu-id="bb661-101">Used in conjunction with signaling the <see cref="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" /> event.</span></span>  <span data-ttu-id="bb661-102">特定の <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> に対する <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作への応答として <see cref="T:System.Net.PeerToPeer.PeerName" /> オブジェクトが見つかるたびにシグナル状態になります。</span><span class="sxs-lookup"><span data-stu-id="bb661-102">It is signaled whenever a <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object is found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation on a specific <see cref="T:System.Net.PeerToPeer.PeerName" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb661-103">クエリ対象のクラウドに複数のピア名レコードオブジェクトが存在する場合、このイベントは、見つかった各レコードオブジェクトにつき1回通知されます。</span><span class="sxs-lookup"><span data-stu-id="bb661-103">If multiple peer name record objects exist in the cloud(s) being queried, this event is signaled once for each record object found.</span></span> <span data-ttu-id="bb661-104"><xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> イベントは、すべてのエンドポイントが検出されたときに1回だけ発生します。</span><span class="sxs-lookup"><span data-stu-id="bb661-104">The <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> event is raised only once when all endpoints have been found.</span></span>  
  
 <span data-ttu-id="bb661-105">通常の処理の完了とは、リゾルバーオブジェクトがピア名を照会するためにクラウドの最後に到達したか、または構築しているピア名レコードコレクションのレコードエントリの最大数に達したことを意味します。</span><span class="sxs-lookup"><span data-stu-id="bb661-105">Normal process completion implies that either the Resolver object has reached the end of the cloud(s) to query for peer names, or it has reached the maximum number of record entries for the peer name record collection it is constructing.</span></span>  
  
 <span data-ttu-id="bb661-106">この競合回避モジュールのこのインスタンスへの参照はすべて、この非同期解決要求の一意の識別子であるトークンである userState <xref:System.Object>と連携します。</span><span class="sxs-lookup"><span data-stu-id="bb661-106">All references to this instance of the Resolver are coordinated with the token userState <xref:System.Object>, which is a unique identifier for this asynchronous resolve request.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ResolveProgressChangedEventArgs (System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerNameRecord peerNameRecord, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (peerNameRecord As PeerNameRecord, userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResolveProgressChangedEventArgs(System::Net::PeerToPeer::PeerNameRecord ^ peerNameRecord, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.ResolveProgressChangedEventArgs : System.Net.PeerToPeer.PeerNameRecord * obj -&gt; System.Net.PeerToPeer.ResolveProgressChangedEventArgs" Usage="new System.Net.PeerToPeer.ResolveProgressChangedEventArgs (peerNameRecord, userToken)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="peerNameRecord" Type="System.Net.PeerToPeer.PeerNameRecord" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerNameRecord"><span data-ttu-id="bb661-107">検索する <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb661-107">The <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object to be found.</span></span></param>
        <param name="userToken"><span data-ttu-id="bb661-108"><see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> 操作が開始された場合に指定した一意のユーザー状態オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb661-108">The unique user state object supplied when a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation was started.</span></span></param>
        <summary><span data-ttu-id="bb661-109"><see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="bb661-109">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb661-110">解決されたピア名には、<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> プロパティを使用してアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="bb661-110">The resolved peer name is accessible via the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property.</span></span>  
  
 <span data-ttu-id="bb661-111">ユーザー状態は <xref:System.ComponentModel.AsyncCompletedEventArgs>から継承されます。</span><span class="sxs-lookup"><span data-stu-id="bb661-111">The user state is inherited from <xref:System.ComponentModel.AsyncCompletedEventArgs>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeerNameRecord">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerNameRecord PeerNameRecord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerNameRecord PeerNameRecord" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerNameRecord As PeerNameRecord" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerNameRecord ^ PeerNameRecord { System::Net::PeerToPeer::PeerNameRecord ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerNameRecord : System.Net.PeerToPeer.PeerNameRecord" Usage="System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerNameRecord</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bb661-112">解決する <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="bb661-112">Gets the <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> object to resolve.</span></span></summary>
        <value><span data-ttu-id="bb661-113">特定の <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> に対する <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 操作への応答として見つかったピア名レコード オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bb661-113">The peer name record object found in response to a <see cref="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" /> operation on a specific <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />.</span></span>  
  
<span data-ttu-id="bb661-114">すべてのプロパティの既定値は、明示的に指定されない限り、参照型では <see langword="null" />、<see langword="int" /> 型のプロパティではゼロ (0) です。</span><span class="sxs-lookup"><span data-stu-id="bb661-114">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types and zero (0) for properties of type <see langword="int" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bb661-115">セキュリティで保護されていないピア名は、同じ <xref:System.Net.PeerToPeer.Cloud>内の異なるユーザーによって同時に登録でき、異なるエンドポイントに関連付けられます。</span><span class="sxs-lookup"><span data-stu-id="bb661-115">Unsecured peer names can be registered simultaneously by different users in the same <xref:System.Net.PeerToPeer.Cloud>, and associated with different endpoints.</span></span> <span data-ttu-id="bb661-116">その結果、<xref:System.Net.PeerToPeer.PeerNameResolver> クラスを使用して、ピア名をクラウドまたはピア名レコードに解決します。</span><span class="sxs-lookup"><span data-stu-id="bb661-116">Consequently, the <xref:System.Net.PeerToPeer.PeerNameResolver> class is used to resolve peer names to clouds or peer names to peer name records.</span></span> <span data-ttu-id="bb661-117">進行状況を報告するイベントは、競合回避モジュールが <xref:System.Net.PeerToPeer.PeerName>のクラウドに対してクエリを実行している間にピア名が見つかったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="bb661-117">The event to report progress is raised each time a peer name is found while the Resolver is querying clouds for the <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
