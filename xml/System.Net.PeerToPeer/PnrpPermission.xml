<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0acf79f3c878a2cd7089499a7c2baa4f18961ba2" /><Meta Name="ms.sourcegitcommit" Value="385ff23cc00fe9aa1c93460c62603b45c2041d0b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/22/2019" /><Meta Name="ms.locfileid" Value="74387119" /></Metadata><TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PnrpPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9fc8d-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc8d-102">既定のアクセス許可では、すべてのローカルおよびイントラネットのゾーンアプリケーションが PNRP サービスにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="9fc8d-103">既定のアクセス許可が変更されていない場合、すべてのリンクローカルアプリケーションとサイトローカルアプリケーションはピアツーピアサービスにアクセスできますが、グローバル (インターネット) アプリケーションにアクセスすることはできません。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="9fc8d-104">この型のインスタンスには、アクセス許可によって保護されているリソースへのアクセス権がないか、これらのリソースへの無制限のフルアクセス権を持っている、という2つのアクセス許可状態があります。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-104">Instances of this type have two permission states: they either have no access to the resources protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="9fc8d-105">PNRP 名前空間プロバイダー API</span><span class="sxs-lookup"><span data-stu-id="9fc8d-105">PNRP Namespace Provider API</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PnrpPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.PnrpPermission" Usage="new System.Net.PeerToPeer.PnrpPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="9fc8d-106">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-106">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="9fc8d-107">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-107">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc8d-108">この型のインスタンスには、アクセス許可によって保護されているリソースへのアクセス権がないか、これらのリソースへの無制限のフルアクセス権を持っている、という2つのアクセス許可状態があります。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-108">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="9fc8d-109">`state` が無制限の場合、Pnのアクセス許可インスタンスはすべての要求を渡します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-109">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="9fc8d-110">`state` に他の値が含まれている場合は、すべての要求が失敗します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-110">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="pnrpPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9fc8d-111">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-111">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></summary>
        <returns><span data-ttu-id="9fc8d-112">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-112">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc8d-113">アクセス許可のコピーは、元のアクセス許可と同じリソースへのアクセスを表します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-113">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="9fc8d-114">この型のインスタンスには、アクセス許可によって保護されているリソースへのアクセス権がないか、これらのリソースへの無制限のフルアクセス権を持っている、という2つのアクセス許可状態があります。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-114">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9fc8d-115">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-115">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>

<span data-ttu-id="9fc8d-116">-or-</span><span class="sxs-lookup"><span data-stu-id="9fc8d-116">-or-</span></span>

<span data-ttu-id="9fc8d-117">The parameter's version number is not supported.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-117">The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9fc8d-118">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9fc8d-118">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="9fc8d-119">PNRP 名前空間プロバイダー API</span><span class="sxs-lookup"><span data-stu-id="9fc8d-119">PNRP Namespace Provider API</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="pnrpPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="9fc8d-120">The XML encoding to use to reconstruct the permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-120">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="9fc8d-121">Reconstructs a security object with a specified state from an XML encoding.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-121">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc8d-122">セキュリティ オブジェクトのエンコーディングの XML オブジェクト モデルを表します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-122">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="9fc8d-123">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-123">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="9fc8d-124">このクラスは、一般的な XML オブジェクトモデルとしてではなく、セキュリティシステム内で使用するための単純な XML オブジェクトモデルの軽量の実装であることを意図しています。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-124">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9fc8d-125">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-125">The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>

<span data-ttu-id="9fc8d-126">-or-</span><span class="sxs-lookup"><span data-stu-id="9fc8d-126">-or-</span></span>

<span data-ttu-id="9fc8d-127">The parameter's version number is not supported.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-127">The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9fc8d-128">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9fc8d-128">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9fc8d-129">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-129">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span></span> <span data-ttu-id="9fc8d-130">It must be of the same type as the current permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-130">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="9fc8d-131">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-131">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="9fc8d-132">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-132">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span> <span data-ttu-id="9fc8d-133">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-133">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc8d-134">2つのアクセス許可の積集合は、両方が共通で記述する一連の操作を記述するアクセス許可です。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-134">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="9fc8d-135">両方の元のアクセス許可を渡す要求だけが、積集合を渡します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-135">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="9fc8d-136">Intersect メソッドのすべての実装に対して、次のステートメントを `true` する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-136">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="9fc8d-137">X と Y は、`null` 参照ではない <xref:System.Security.IPermission> オブジェクト参照を表します (Visual Basic では Nothing)。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-137">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="9fc8d-138">X 積集合 (X) は X に等しい値を返します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-138">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="9fc8d-139">[X] Intersect (Y) は、Y 積集合 (X) と同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-139">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="9fc8d-140">X. Intersect (Visual Basic で`Nothing` `null` 参照) は `null` 参照 (`Nothing` では Visual Basic) を返します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-140">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9fc8d-141">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-141">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="pnrpPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9fc8d-142">A permission that is to be tested for the subset relationship.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-142">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="9fc8d-143">This permission must be of the same type as the current permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-143">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="9fc8d-144">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-144">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="9fc8d-145"><see langword="true" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-145"><see langword="true" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="9fc8d-146">現在の <xref:System.Net.PeerToPeer.PnrpPermission> は、指定したアクセス許可によって完全に含まれる一連の操作を現在のアクセス許可が指定している場合に、指定したアクセス許可のサブセットです。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-146">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="9fc8d-147">たとえば、"*C:\example.txt*" へのアクセスを表すアクセス許可は、"*C:\\*" へのアクセスを表すアクセス許可のサブセットです。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-147">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="9fc8d-148">このメソッドが `true`を返す場合、現在のアクセス許可は、指定されたアクセス許可よりも保護されたリソースへのアクセスを許可しません。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-148">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
<span data-ttu-id="9fc8d-149">IsSubsetOf メソッドのすべての実装に対して、次のステートメントを `true` する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-149">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="9fc8d-150">X、Y、Z は、`null` 参照 (Visual Basic では`Nothing`) ではない <xref:System.Security.IPermission> オブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-150">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>

- <span data-ttu-id="9fc8d-151">`X.IsSubsetOf(X)` は、`true` を返します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-151">`X.IsSubsetOf(X)` returns `true`.</span></span>

- <span data-ttu-id="9fc8d-152">`X.IsSubsetOf(Y)` は、X と Y が同じ権限のセットを表している場合にのみ、`Y.IsSubsetOf(X)` と同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-152">`X.IsSubsetOf(Y)` returns the same value as `Y.IsSubsetOf(X)` if and only if X and Y represent the same set of permissions.</span></span>

- <span data-ttu-id="9fc8d-153">`X.IsSubsetOf(Y)` と `Y.IsSubsetOf(Z)` 両方が `true`を返す場合、`X.IsSubsetOf(Z)` は `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-153">If `X.IsSubsetOf(Y)` and `Y.IsSubsetOf(Z)` both return `true`, `X.IsSubsetOf(Z)` returns `true`.</span></span>
  
<span data-ttu-id="9fc8d-154">X が、アクセス許可の状態が*None*である空の <xref:System.Security.IPermission> オブジェクトを表し、Y が `null` 参照 (`Nothing` Visual Basic) である <xref:System.Security.IPermission> オブジェクトを表している場合、`X.IsSubsetOf(Y)` は `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-154">If X represents an empty <xref:System.Security.IPermission> object with a permission state of *None*, and Y represents an <xref:System.Security.IPermission> object that is a `null` reference (`Nothing` in Visual Basic), `X.IsSubsetOf(Y)` returns `true`.</span></span> <span data-ttu-id="9fc8d-155">Z が空の権限でもある場合は、複合セット操作 `X.Union(Z).IsSubsetOf(Y)` も `true` を返します。これは、2つの空の権限の <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> が空の権限であるためです。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-155">If Z is also an empty permission, the compound set operation `X.Union(Z).IsSubsetOf(Y)` also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9fc8d-156">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-156">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="pnrpPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9fc8d-157">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-157">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="9fc8d-158"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-158"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc8d-159">無制限のアクセス許可は、アクセス許可によって保護されているすべてのリソースへのアクセスを表します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-159">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="pnrpPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9fc8d-160">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-160">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span></span></summary>
        <returns><span data-ttu-id="9fc8d-161">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-161">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="9fc8d-162">A permission to combine with the current permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-162">A permission to combine with the current permission.</span></span> <span data-ttu-id="9fc8d-163">It must be of the same type as the current permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-163">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="9fc8d-164">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-164">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="9fc8d-165">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-165">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9fc8d-166"><xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> の呼び出しの結果は、現在の <xref:System.Net.PeerToPeer.PnrpPermission> と指定したアクセス許可の両方によって表されるすべての操作を表すアクセス許可です。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-166">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="9fc8d-167">いずれかのアクセス許可を渡す要求では、その共用体が渡されます。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-167">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="9fc8d-168">Union メソッドのすべての実装に対して、次のステートメントを `true` する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-168">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="9fc8d-169">X と Y は、`null` 参照 (Visual Basic では`Nothing`) ではない <xref:System.Security.IPermission> オブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-169">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="9fc8d-170">X. Union (X) は、X と同じ値を持つオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-170">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="9fc8d-171">X.y (Y) は、(X) によって返されたオブジェクトと同じ値を持つオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-171">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="9fc8d-172">X. 共用体 (Visual Basic で`Nothing` `null` 参照) は、X と同じ値を持つオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="9fc8d-172">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9fc8d-173"><paramref name="target" /> parameter is invalid.</span><span class="sxs-lookup"><span data-stu-id="9fc8d-173"><paramref name="target" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>
