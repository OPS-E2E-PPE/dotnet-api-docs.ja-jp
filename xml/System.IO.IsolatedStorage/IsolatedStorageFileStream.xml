<Type Name="IsolatedStorageFileStream" FullName="System.IO.IsolatedStorage.IsolatedStorageFileStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="735c08f4650ac776d4b3bc1c324c54877274f89b" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73388478" /></Metadata><TypeSignature Language="C#" Value="public class IsolatedStorageFileStream : System.IO.FileStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IsolatedStorageFileStream extends System.IO.FileStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />
  <TypeSignature Language="VB.NET" Value="Public Class IsolatedStorageFileStream&#xA;Inherits FileStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsolatedStorageFileStream : System::IO::FileStream" />
  <TypeSignature Language="F#" Value="type IsolatedStorageFileStream = class&#xA;    inherit FileStream" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.FileStream</BaseTypeName>
    <BaseTypeName FrameworkAlternate="dotnet-uwp-10.0">System.IO.Stream</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1124b-101">分離ストレージ内のファイルを公開します。</span><span class="sxs-lookup"><span data-stu-id="1124b-101">Exposes a file within isolated storage.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-102">このクラスを使用して、分離ストレージ内のファイルの読み取り、書き込み、および作成を行います。</span><span class="sxs-lookup"><span data-stu-id="1124b-102">Use this class to read, write and create files in isolated storage.</span></span>  
  
 <span data-ttu-id="1124b-103">このクラスは <xref:System.IO.FileStream>を拡張するため、<xref:System.IO.StreamReader> や <xref:System.IO.StreamWriter>を構築するなど、<xref:System.IO.FileStream> が使用される可能性があるほとんどの状況で <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> のインスタンスを使用できます。</span><span class="sxs-lookup"><span data-stu-id="1124b-103">Since this class extends <xref:System.IO.FileStream>, you can use an instance of <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> in most situations where a <xref:System.IO.FileStream> might otherwise be used, such as to construct a <xref:System.IO.StreamReader> or <xref:System.IO.StreamWriter>.</span></span>  
  
 <span data-ttu-id="1124b-104">この型は <xref:System.IDisposable> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="1124b-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="1124b-105">型の使用が完了したら、直接的または間接的に型を破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-105">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="1124b-106">直接的に型を破棄するには、<xref:System.IDisposable.Dispose%2A> `try` / ブロック内で `catch` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1124b-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="1124b-107">間接的に型を破棄するには、`using` (C# の場合) または `Using` (Visual Basic 言語) などの言語構成要素を使用します。</span><span class="sxs-lookup"><span data-stu-id="1124b-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="1124b-108">詳細については、<xref:System.IDisposable> インターフェイスに関するトピック内の「IDisposable を実装するオブジェクトの使用」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1124b-109">分離ストレージは [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] アプリでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="1124b-109">Isolated storage is not available for [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)] apps.</span></span> <span data-ttu-id="1124b-110">代わりに、 `Windows.Storage` API に含まれる [!INCLUDE[wrt](~/includes/wrt-md.md)] 名前空間内のアプリケーション データ クラスを使用して、ローカル データとローカル ファイルを格納します。</span><span class="sxs-lookup"><span data-stu-id="1124b-110">Instead, use the application data classes in the `Windows.Storage` namespaces included in the [!INCLUDE[wrt](~/includes/wrt-md.md)] API to store local data and files.</span></span> <span data-ttu-id="1124b-111">詳細については、Windows デベロッパー センターの[アプリケーション データ](https://go.microsoft.com/fwlink/?LinkId=229175)に関する説明を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-111">For more information, see [Application data](https://go.microsoft.com/fwlink/?LinkId=229175) in the Windows Dev Center.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1124b-112">次のコンソールアプリケーションは、<xref:System.IO.IsolatedStorage.IsolatedStorageFile> と <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> を使用して、分離ストレージファイルにデータを書き込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1124b-112">The following console application demonstrates how you can use <xref:System.IO.IsolatedStorage.IsolatedStorageFile> and <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> to write data to an Isolated Storage file.</span></span> <span data-ttu-id="1124b-113">ユーザーはログインするように要求されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-113">The user is requested to log in.</span></span> <span data-ttu-id="1124b-114">ユーザーが新しいユーザーの場合、ニュースの URL とスポーツの URL は、個人設定として分離ストレージに記録されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-114">If the user is a new user, a News URL and a Sports URL are recorded as personal preferences in Isolated Storage.</span></span> <span data-ttu-id="1124b-115">ユーザーが戻っている場合は、ユーザーの現在の設定が表示されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-115">If the user is a returning user, the user's current preferences are displayed.</span></span> <span data-ttu-id="1124b-116">この名前空間全体で使用されるコード例は、このサンプルアプリケーションのコンテキストで示されています。</span><span class="sxs-lookup"><span data-stu-id="1124b-116">The code examples used throughout this namespace are presented in the context of this sample application.</span></span> <span data-ttu-id="1124b-117">[Storeadm.exe (分離ストレージツール)](~/docs/framework/tools/storeadm-exe-isolated-storage-tool.md)ユーティリティを使用して、このコンソールアプリケーションで作成された分離ストレージファイルを一覧表示したり、削除したりできます。</span><span class="sxs-lookup"><span data-stu-id="1124b-117">You can use the [Storeadm.exe (Isolated Storage Tool)](~/docs/framework/tools/storeadm-exe-isolated-storage-tool.md) utility to list and remove the Isolated Storage files that are created with this console application.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#1)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#1)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1124b-118"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1124b-118">Initializes a new instance of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> class.</span></span> <span data-ttu-id="1124b-119"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> を開く唯一の方法は、そのコンストラクターの 1 つを使用することです。</span><span class="sxs-lookup"><span data-stu-id="1124b-119">The only way to open an <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> is by using one of its constructors.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsolatedStorageFileStream (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IsolatedStorageFileStream(System::String ^ path, System::IO::FileMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.IsolatedStorage.IsolatedStorageFileStream : string * System.IO.FileMode -&gt; System.IO.IsolatedStorage.IsolatedStorageFileStream" Usage="new System.IO.IsolatedStorage.IsolatedStorageFileStream (path, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1124b-120">分離ストレージ内でのファイルの相対パス。</span><span class="sxs-lookup"><span data-stu-id="1124b-120">The relative path of the file within isolated storage.</span></span></param>
        <param name="mode"><span data-ttu-id="1124b-121"><see cref="T:System.IO.FileMode" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1124b-121">One of the <see cref="T:System.IO.FileMode" /> values.</span></span></param>
        <summary><span data-ttu-id="1124b-122">指定した <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> で、<paramref name="path" /> によって指定されたファイルへのアクセスを与える <paramref name="mode" /> オブジェクトの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1124b-122">Initializes a new instance of an <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object giving access to the file designated by <paramref name="path" /> in the specified <paramref name="mode" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-123">使用される分離ストアは、現在実行中のアセンブリの id と、それが実行されているアプリケーションドメインのスコープによって制限されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-123">The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running.</span></span> <span data-ttu-id="1124b-124">このストアは、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトの有効期間のみ開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="1124b-124">This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object.</span></span> <span data-ttu-id="1124b-125">別の分離ストレージスコープを指定する場合、またはストアを開いたままにする場合は (複数の <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトを開くことができるようにするため)、<xref:System.IO.IsolatedStorage.IsolatedStorageFile> オブジェクトを受け取るコンストラクターの形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="1124b-125">To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object.</span></span>  
  
 <span data-ttu-id="1124b-126">`mode` パラメーターは、新しいファイルを作成するかどうか、既存のファイルを使用するかどうかなどを示します。</span><span class="sxs-lookup"><span data-stu-id="1124b-126">The `mode` parameter indicates whether a new file should be created, an existing one used, and so on.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1124b-127">特定のカルチャ設定を使用して文字のセットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-127">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1124b-128"><paramref name="path" /> の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-128">The <paramref name="path" /> is badly formed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1124b-129"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-129">The <paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="1124b-130"><paramref name="path" /> にディレクトリが存在しません。</span><span class="sxs-lookup"><span data-stu-id="1124b-130">The directory in <paramref name="path" /> does not exist.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1124b-131">ファイルが見つかりませんでした。<paramref name="mode" /> は <see cref="F:System.IO.FileMode.Open" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-131">No file was found and the <paramref name="mode" /> is set to <see cref="F:System.IO.FileMode.Open" /></span></span></exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission"><span data-ttu-id="1124b-132">分離ストレージアクセスの場合</span><span class="sxs-lookup"><span data-stu-id="1124b-132">for isolated storage access</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IsolatedStorageFileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="new System.IO.IsolatedStorage.IsolatedStorageFileStream : string * System.IO.FileMode * System.IO.FileAccess -&gt; System.IO.IsolatedStorage.IsolatedStorageFileStream" Usage="new System.IO.IsolatedStorage.IsolatedStorageFileStream (path, mode, access)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1124b-133">分離ストレージ内でのファイルの相対パス。</span><span class="sxs-lookup"><span data-stu-id="1124b-133">The relative path of the file within isolated storage.</span></span></param>
        <param name="mode"><span data-ttu-id="1124b-134"><see cref="T:System.IO.FileMode" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1124b-134">One of the <see cref="T:System.IO.FileMode" /> values.</span></span></param>
        <param name="access"><span data-ttu-id="1124b-135"><see cref="T:System.IO.FileAccess" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="1124b-135">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values.</span></span></param>
        <summary><span data-ttu-id="1124b-136"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> に指定したモードで、<paramref name="path" /> で指定したファイルへの、<paramref name="mode" /> に指定した種類のアクセスを提供する、<paramref name="access" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1124b-136">Initializes a new instance of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> class giving access to the file designated by <paramref name="path" />, in the specified <paramref name="mode" />, with the kind of <paramref name="access" /> requested.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-137">使用される分離ストアは、現在実行中のアセンブリの id と、それが実行されているアプリケーションドメインのスコープによって制限されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-137">The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running.</span></span> <span data-ttu-id="1124b-138">このストアは、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトの有効期間のみ開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="1124b-138">This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object.</span></span> <span data-ttu-id="1124b-139">別の分離ストレージスコープを指定する場合、またはストアを開いたままにする場合は (複数の <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトを開くことができるようにするため)、<xref:System.IO.IsolatedStorage.IsolatedStorageFile> オブジェクトを受け取るコンストラクターの形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="1124b-139">To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object.</span></span>  
  
 <span data-ttu-id="1124b-140">`mode` パラメーターは、新しいファイルを作成するか、既存のファイルを使用するかを示します。</span><span class="sxs-lookup"><span data-stu-id="1124b-140">The `mode` parameter indicates whether a new file should be created or an existing one used.</span></span> <span data-ttu-id="1124b-141">`access` パラメーターには、読み取り専用、読み取り/書き込み、書き込み専用があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-141">The `access` parameter includes read-only, read/write, and write-only.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1124b-142">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-142">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1124b-143"><paramref name="path" /> の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-143">The <paramref name="path" /> is badly formed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1124b-144"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-144">The <paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1124b-145">ファイルが見つかりません。<paramref name="mode" /> は <see cref="F:System.IO.FileMode.Open" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-145">No file was found and the <paramref name="mode" /> is set to <see cref="F:System.IO.FileMode.Open" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission"><span data-ttu-id="1124b-146">分離ストレージアクセスの場合</span><span class="sxs-lookup"><span data-stu-id="1124b-146">for isolated storage access</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.IsolatedStorage.IsolatedStorageFile isf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, class System.IO.IsolatedStorage.IsolatedStorageFile isf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, isf As IsolatedStorageFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IsolatedStorageFileStream(System::String ^ path, System::IO::FileMode mode, System::IO::IsolatedStorage::IsolatedStorageFile ^ isf);" />
      <MemberSignature Language="F#" Value="new System.IO.IsolatedStorage.IsolatedStorageFileStream : string * System.IO.FileMode * System.IO.IsolatedStorage.IsolatedStorageFile -&gt; System.IO.IsolatedStorage.IsolatedStorageFileStream" Usage="new System.IO.IsolatedStorage.IsolatedStorageFileStream (path, mode, isf)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="isf" Type="System.IO.IsolatedStorage.IsolatedStorageFile" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1124b-147">分離ストレージ内でのファイルの相対パス。</span><span class="sxs-lookup"><span data-stu-id="1124b-147">The relative path of the file within isolated storage.</span></span></param>
        <param name="mode"><span data-ttu-id="1124b-148"><see cref="T:System.IO.FileMode" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1124b-148">One of the <see cref="T:System.IO.FileMode" /> values.</span></span></param>
        <param name="isf"><span data-ttu-id="1124b-149"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> を開くために使用する <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />。</span><span class="sxs-lookup"><span data-stu-id="1124b-149">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> in which to open the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />.</span></span></param>
        <summary><span data-ttu-id="1124b-150"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> で指定したモード、<paramref name="path" /> で指定した <paramref name="mode" /> のコンテキストを使用して、<see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> で指定したファイルへのアクセスを提供する <paramref name="isf" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1124b-150">Initializes a new instance of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> class giving access to the file designated by <paramref name="path" />, in the specified <paramref name="mode" />, and in the context of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> specified by <paramref name="isf" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-151">`mode` パラメーターは、新しいファイルを作成するかどうか、既存のファイルを使用するかどうかなどを示します。</span><span class="sxs-lookup"><span data-stu-id="1124b-151">The `mode` parameter indicates whether a new file should be created, an existing one used, and so on.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1124b-152">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-152">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1124b-153">次のコード例は、このコンストラクターの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1124b-153">The following code example demonstrates the use of this constructor.</span></span> <span data-ttu-id="1124b-154">この例の完全なコンテキストについては、「<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> の概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-154">For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#11)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#11)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1124b-155"><paramref name="path" /> の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-155">The <paramref name="path" /> is badly formed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1124b-156"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-156">The <paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1124b-157">ファイルが見つかりません。<paramref name="mode" /> は <see cref="F:System.IO.FileMode.Open" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-157">No file was found and the <paramref name="mode" /> is set to <see cref="F:System.IO.FileMode.Open" />.</span></span></exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException"><span data-ttu-id="1124b-158"><paramref name="isf" /> にクォータがありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-158"><paramref name="isf" /> does not have a quota.</span></span></exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission"><span data-ttu-id="1124b-159">分離ストレージアクセスの場合</span><span class="sxs-lookup"><span data-stu-id="1124b-159">for isolated storage access</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IsolatedStorageFileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share);" />
      <MemberSignature Language="F#" Value="new System.IO.IsolatedStorage.IsolatedStorageFileStream : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.IsolatedStorage.IsolatedStorageFileStream" Usage="new System.IO.IsolatedStorage.IsolatedStorageFileStream (path, mode, access, share)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1124b-160">分離ストレージ内でのファイルの相対パス。</span><span class="sxs-lookup"><span data-stu-id="1124b-160">The relative path of the file within isolated storage.</span></span></param>
        <param name="mode"><span data-ttu-id="1124b-161"><see cref="T:System.IO.FileMode" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1124b-161">One of the <see cref="T:System.IO.FileMode" /> values.</span></span></param>
        <param name="access"><span data-ttu-id="1124b-162"><see cref="T:System.IO.FileAccess" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="1124b-162">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values.</span></span></param>
        <param name="share"><span data-ttu-id="1124b-163"><see cref="T:System.IO.FileShare" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="1124b-163">A bitwise combination of the <see cref="T:System.IO.FileShare" /> values.</span></span></param>
        <summary><span data-ttu-id="1124b-164"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> で指定したモード、<paramref name="path" /> で指定した共有モードを使用して、<paramref name="mode" /> で指定したファイルへの、<paramref name="access" /> で指定した種類のアクセスを提供する <paramref name="share" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1124b-164">Initializes a new instance of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> class giving access to the file designated by <paramref name="path" />, in the specified <paramref name="mode" />, with the specified file <paramref name="access" />, using the file sharing mode specified by <paramref name="share" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-165">使用される分離ストアは、現在実行中のアセンブリの id と、それが実行されているアプリケーションドメインのスコープによって制限されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-165">The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running.</span></span> <span data-ttu-id="1124b-166">このストアは、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトの有効期間のみ開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="1124b-166">This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object.</span></span> <span data-ttu-id="1124b-167">別の分離ストレージスコープを指定する場合、またはストアを開いたままにする場合は (複数の <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトを開くことができるようにするため)、<xref:System.IO.IsolatedStorage.IsolatedStorageFile> オブジェクトを受け取るコンストラクターの形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="1124b-167">To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1124b-168">特定のカルチャ設定を使用して文字のセットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-168">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable and can cause an exception to be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1124b-169">次のコード例は、このコンストラクターの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1124b-169">The following code example demonstrates the use of this constructor.</span></span> <span data-ttu-id="1124b-170">この例の完全なコンテキストについては、「<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> の概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-170">For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#15)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#15)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1124b-171"><paramref name="path" /> の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-171">The <paramref name="path" /> is badly formed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1124b-172"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-172">The <paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1124b-173">ファイルが見つかりません。<paramref name="mode" /> は <see cref="F:System.IO.FileMode.Open" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-173">No file was found and the <paramref name="mode" /> is set to <see cref="F:System.IO.FileMode.Open" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission"><span data-ttu-id="1124b-174">分離ストレージアクセスの場合</span><span class="sxs-lookup"><span data-stu-id="1124b-174">for isolated storage access</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.IsolatedStorage.IsolatedStorageFile isf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, class System.IO.IsolatedStorage.IsolatedStorageFile isf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, isf As IsolatedStorageFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IsolatedStorageFileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::IsolatedStorage::IsolatedStorageFile ^ isf);" />
      <MemberSignature Language="F#" Value="new System.IO.IsolatedStorage.IsolatedStorageFileStream : string * System.IO.FileMode * System.IO.FileAccess * System.IO.IsolatedStorage.IsolatedStorageFile -&gt; System.IO.IsolatedStorage.IsolatedStorageFileStream" Usage="new System.IO.IsolatedStorage.IsolatedStorageFileStream (path, mode, access, isf)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="isf" Type="System.IO.IsolatedStorage.IsolatedStorageFile" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1124b-175">分離ストレージ内でのファイルの相対パス。</span><span class="sxs-lookup"><span data-stu-id="1124b-175">The relative path of the file within isolated storage.</span></span></param>
        <param name="mode"><span data-ttu-id="1124b-176"><see cref="T:System.IO.FileMode" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1124b-176">One of the <see cref="T:System.IO.FileMode" /> values.</span></span></param>
        <param name="access"><span data-ttu-id="1124b-177"><see cref="T:System.IO.FileAccess" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="1124b-177">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values.</span></span></param>
        <param name="isf"><span data-ttu-id="1124b-178"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> を開くために使用する <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />。</span><span class="sxs-lookup"><span data-stu-id="1124b-178">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> in which to open the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />.</span></span></param>
        <summary><span data-ttu-id="1124b-179">指定されたファイル <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> により、また <paramref name="path" /> によって指定された <paramref name="mode" /> のコンテキストの中で、指定された <paramref name="access" /> の中で <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> によって指定されるファイルへのアクセスを提供して、<paramref name="isf" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1124b-179">Initializes a new instance of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> class giving access to the file designated by <paramref name="path" /> in the specified <paramref name="mode" />, with the specified file <paramref name="access" />, and in the context of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> specified by <paramref name="isf" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-180">`mode` パラメーターは、新しいファイルを作成するか、既存のファイルを使用するかを示します。</span><span class="sxs-lookup"><span data-stu-id="1124b-180">The `mode` parameter indicates whether a new file should be created or an existing one used.</span></span> <span data-ttu-id="1124b-181">`access` パラメーターには、読み取り専用、読み取り/書き込み、書き込み専用があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-181">The `access` parameter includes read-only, read/write, and write-only.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1124b-182">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-182">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1124b-183">次のコード例は、このコンストラクターの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1124b-183">The following code example demonstrates the use of this constructor.</span></span> <span data-ttu-id="1124b-184">この例の完全なコンテキストについては、「<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> の概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-184">For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#10)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#10)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1124b-185"><paramref name="path" /> の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-185">The <paramref name="path" /> is badly formed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1124b-186"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-186">The <paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1124b-187">分離ストアは閉じています。</span><span class="sxs-lookup"><span data-stu-id="1124b-187">The isolated store is closed.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1124b-188">ファイルが見つかりません。<paramref name="mode" /> は <see cref="F:System.IO.FileMode.Open" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-188">No file was found and the <paramref name="mode" /> is set to <see cref="F:System.IO.FileMode.Open" />.</span></span></exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException"><span data-ttu-id="1124b-189"><paramref name="isf" /> にクォータがありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-189"><paramref name="isf" /> does not have a quota.</span></span></exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission"><span data-ttu-id="1124b-190">分離ストレージアクセスの場合</span><span class="sxs-lookup"><span data-stu-id="1124b-190">for isolated storage access</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IsolatedStorageFileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.IsolatedStorage.IsolatedStorageFileStream : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * int -&gt; System.IO.IsolatedStorage.IsolatedStorageFileStream" Usage="new System.IO.IsolatedStorage.IsolatedStorageFileStream (path, mode, access, share, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1124b-191">分離ストレージ内でのファイルの相対パス。</span><span class="sxs-lookup"><span data-stu-id="1124b-191">The relative path of the file within isolated storage.</span></span></param>
        <param name="mode"><span data-ttu-id="1124b-192"><see cref="T:System.IO.FileMode" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1124b-192">One of the <see cref="T:System.IO.FileMode" /> values.</span></span></param>
        <param name="access"><span data-ttu-id="1124b-193"><see cref="T:System.IO.FileAccess" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="1124b-193">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values.</span></span></param>
        <param name="share"><span data-ttu-id="1124b-194"><see cref="T:System.IO.FileShare" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="1124b-194">A bitwise combination of the <see cref="T:System.IO.FileShare" /> values.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="1124b-195"><see cref="T:System.IO.FileStream" /> のバッファー サイズ。</span><span class="sxs-lookup"><span data-stu-id="1124b-195">The <see cref="T:System.IO.FileStream" /> buffer size.</span></span></param>
        <summary><span data-ttu-id="1124b-196"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> で指定したモード、<paramref name="path" /> で指定したファイル共有モード、<paramref name="mode" /> で指定したバッファー サイズを使用して、<paramref name="access" /> で指定したファイルへの、<paramref name="share" /> で指定した種類のアクセスを提供する <paramref name="buffersize" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1124b-196">Initializes a new instance of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> class giving access to the file designated by <paramref name="path" />, in the specified <paramref name="mode" />, with the specified file <paramref name="access" />, using the file sharing mode specified by <paramref name="share" />, with the <paramref name="buffersize" /> specified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-197">使用される分離ストアは、現在実行中のアセンブリの id と、それが実行されているアプリケーションドメインのスコープによって制限されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-197">The isolated store that is used is scoped by the current executing assembly's identity and that of the application domain in which it is running.</span></span> <span data-ttu-id="1124b-198">このストアは、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトの有効期間のみ開いたままになります。</span><span class="sxs-lookup"><span data-stu-id="1124b-198">This store will remain open only for the lifetime of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object.</span></span> <span data-ttu-id="1124b-199">別の分離ストレージスコープを指定する場合、またはストアを開いたままにする場合は (複数の <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトを開くことができるようにするため)、<xref:System.IO.IsolatedStorage.IsolatedStorageFile> オブジェクトを受け取るコンストラクターの形式を使用します。</span><span class="sxs-lookup"><span data-stu-id="1124b-199">To specify a different isolated storage scope, or to allow the store to remain open (so multiple <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects can be opened from it), use the form of the constructor that accepts an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object.</span></span>  
  
 <span data-ttu-id="1124b-200">`mode` パラメーターは、新しいファイルを作成するか、既存のファイルを使用するかを示します。</span><span class="sxs-lookup"><span data-stu-id="1124b-200">The `mode` parameter indicates whether a new file should be created or an existing one used.</span></span> <span data-ttu-id="1124b-201">`access` パラメーターには、読み取り専用、読み取り/書き込み、書き込み専用があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-201">The `access` parameter includes read-only, read/write, and write-only.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1124b-202">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-202">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1124b-203"><paramref name="path" /> の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-203">The <paramref name="path" /> is badly formed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1124b-204"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-204">The <paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1124b-205">ファイルが見つかりません。<paramref name="mode" /> は <see cref="F:System.IO.FileMode.Open" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-205">No file was found and the <paramref name="mode" /> is set to <see cref="F:System.IO.FileMode.Open" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission"><span data-ttu-id="1124b-206">分離ストレージアクセスの場合</span><span class="sxs-lookup"><span data-stu-id="1124b-206">for isolated storage access</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.IO.IsolatedStorage.IsolatedStorageFile isf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, class System.IO.IsolatedStorage.IsolatedStorageFile isf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, isf As IsolatedStorageFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IsolatedStorageFileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, System::IO::IsolatedStorage::IsolatedStorageFile ^ isf);" />
      <MemberSignature Language="F#" Value="new System.IO.IsolatedStorage.IsolatedStorageFileStream : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * System.IO.IsolatedStorage.IsolatedStorageFile -&gt; System.IO.IsolatedStorage.IsolatedStorageFileStream" Usage="new System.IO.IsolatedStorage.IsolatedStorageFileStream (path, mode, access, share, isf)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
        <Parameter Name="isf" Type="System.IO.IsolatedStorage.IsolatedStorageFile" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1124b-207">分離ストレージ内でのファイルの相対パス。</span><span class="sxs-lookup"><span data-stu-id="1124b-207">The relative path of the file within isolated storage.</span></span></param>
        <param name="mode"><span data-ttu-id="1124b-208"><see cref="T:System.IO.FileMode" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1124b-208">One of the <see cref="T:System.IO.FileMode" /> values.</span></span></param>
        <param name="access"><span data-ttu-id="1124b-209"><see cref="T:System.IO.FileAccess" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="1124b-209">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values.</span></span></param>
        <param name="share"><span data-ttu-id="1124b-210"><see cref="T:System.IO.FileShare" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="1124b-210">A bitwise combination of the <see cref="T:System.IO.FileShare" /> values.</span></span></param>
        <param name="isf"><span data-ttu-id="1124b-211"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> を開くために使用する <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />。</span><span class="sxs-lookup"><span data-stu-id="1124b-211">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> in which to open the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />.</span></span></param>
        <summary><span data-ttu-id="1124b-212"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> で指定したモード、<paramref name="path" /> で指定したファイル共有モード、<paramref name="mode" /> で指定した <paramref name="access" /> のコンテキストを使用して、<paramref name="share" /> で指定したファイルへの、<see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> で指定した種類のアクセスを提供する <paramref name="isf" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1124b-212">Initializes a new instance of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> class giving access to the file designated by <paramref name="path" />, in the specified <paramref name="mode" />, with the specified file <paramref name="access" />, using the file sharing mode specified by <paramref name="share" />, and in the context of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> specified by <paramref name="isf" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-213">`mode` パラメーターは、新しいファイルを作成するか、既存のファイルを使用するかを示します。</span><span class="sxs-lookup"><span data-stu-id="1124b-213">The `mode` parameter indicates whether a new file should be created or an existing one used.</span></span> <span data-ttu-id="1124b-214">`access` パラメーターには、読み取り専用、読み取り/書き込み、書き込み専用があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-214">The `access` parameter includes read-only, read/write, and write-only.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1124b-215">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-215">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1124b-216">次のコード例は、このコンストラクターの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1124b-216">The following code example demonstrates the use of this constructor.</span></span> <span data-ttu-id="1124b-217">この例の完全なコンテキストについては、「<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> の概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-217">For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#11)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#11)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1124b-218"><paramref name="path" /> の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-218">The <paramref name="path" /> is badly formed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1124b-219"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-219">The <paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1124b-220">ファイルが見つかりません。<paramref name="mode" /> は <see cref="F:System.IO.FileMode.Open" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-220">No file was found and the <paramref name="mode" /> is set to <see cref="F:System.IO.FileMode.Open" />.</span></span></exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException"><span data-ttu-id="1124b-221"><paramref name="isf" /> にクォータがありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-221"><paramref name="isf" /> does not have a quota.</span></span></exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission"><span data-ttu-id="1124b-222">分離ストレージアクセスの場合</span><span class="sxs-lookup"><span data-stu-id="1124b-222">for isolated storage access</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, System.IO.IsolatedStorage.IsolatedStorageFile isf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share, int32 bufferSize, class System.IO.IsolatedStorage.IsolatedStorageFile isf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mode As FileMode, access As FileAccess, share As FileShare, bufferSize As Integer, isf As IsolatedStorageFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IsolatedStorageFileStream(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, int bufferSize, System::IO::IsolatedStorage::IsolatedStorageFile ^ isf);" />
      <MemberSignature Language="F#" Value="new System.IO.IsolatedStorage.IsolatedStorageFileStream : string * System.IO.FileMode * System.IO.FileAccess * System.IO.FileShare * int * System.IO.IsolatedStorage.IsolatedStorageFile -&gt; System.IO.IsolatedStorage.IsolatedStorageFileStream" Usage="new System.IO.IsolatedStorage.IsolatedStorageFileStream (path, mode, access, share, bufferSize, isf)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="mode" Type="System.IO.FileMode" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="access" Type="System.IO.FileAccess" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="share" Type="System.IO.FileShare" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bufferSize" Type="System.Int32" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="isf" Type="System.IO.IsolatedStorage.IsolatedStorageFile" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="1124b-223">分離ストレージ内でのファイルの相対パス。</span><span class="sxs-lookup"><span data-stu-id="1124b-223">The relative path of the file within isolated storage.</span></span></param>
        <param name="mode"><span data-ttu-id="1124b-224"><see cref="T:System.IO.FileMode" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1124b-224">One of the <see cref="T:System.IO.FileMode" /> values.</span></span></param>
        <param name="access"><span data-ttu-id="1124b-225"><see cref="T:System.IO.FileAccess" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="1124b-225">A bitwise combination of the <see cref="T:System.IO.FileAccess" /> values.</span></span></param>
        <param name="share"><span data-ttu-id="1124b-226"><see cref="T:System.IO.FileShare" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="1124b-226">A bitwise combination of the <see cref="T:System.IO.FileShare" /> values</span></span></param>
        <param name="bufferSize"><span data-ttu-id="1124b-227"><see cref="T:System.IO.FileStream" /> のバッファー サイズ。</span><span class="sxs-lookup"><span data-stu-id="1124b-227">The <see cref="T:System.IO.FileStream" /> buffer size.</span></span></param>
        <param name="isf"><span data-ttu-id="1124b-228"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> を開くために使用する <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />。</span><span class="sxs-lookup"><span data-stu-id="1124b-228">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> in which to open the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />.</span></span></param>
        <summary><span data-ttu-id="1124b-229"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> で指定したモード、<paramref name="path" /> で指定したファイル共有モード、<paramref name="mode" /> で指定したバッファー サイズ、<paramref name="access" /> で指定した <paramref name="share" /> のコンテキストを使用して、<paramref name="buffersize" /> で指定したファイルへの、<see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> で指定した種類のアクセスを提供する <paramref name="isf" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1124b-229">Initializes a new instance of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> class giving access to the file designated by <paramref name="path" />, in the specified <paramref name="mode" />, with the specified file <paramref name="access" />, using the file sharing mode specified by <paramref name="share" />, with the <paramref name="buffersize" /> specified, and in the context of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> specified by <paramref name="isf" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-230">`mode` パラメーターは、新しいファイルを作成するか、既存のファイルを使用するかを示します。</span><span class="sxs-lookup"><span data-stu-id="1124b-230">The `mode` parameter indicates whether a new file should be created or an existing one used.</span></span> <span data-ttu-id="1124b-231">`access` パラメーターには、読み取り専用、読み取り/書き込み、書き込み専用があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-231">The `access` parameter includes read-only, read/write, and write-only.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1124b-232">特定のカルチャ設定を使用して文字セットをコンパイルし、異なるカルチャ設定で同じ文字を取得すると、文字が解釈されない可能性があり、例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-232">When you compile a set of characters with a particular cultural setting and retrieve those same characters with a different cultural setting, the characters might not be interpretable, and can cause an exception to be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1124b-233">次のコード例は、このコンストラクターの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1124b-233">The following code example demonstrates the use of this constructor.</span></span> <span data-ttu-id="1124b-234">この例の完全なコンテキストについては、「<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> の概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-234">For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#12)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#12)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1124b-235"><paramref name="path" /> の形式が正しくありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-235">The <paramref name="path" /> is badly formed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1124b-236"><paramref name="path" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-236">The <paramref name="path" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="1124b-237">ファイルが見つかりません。<paramref name="mode" /> は <see cref="F:System.IO.FileMode.Open" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-237">No file was found and the <paramref name="mode" /> is set to <see cref="F:System.IO.FileMode.Open" />.</span></span></exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException"><span data-ttu-id="1124b-238"><paramref name="isf" /> にクォータがありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-238"><paramref name="isf" /> does not have a quota.</span></span></exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission"><span data-ttu-id="1124b-239">分離ストレージアクセスの場合</span><span class="sxs-lookup"><span data-stu-id="1124b-239">for isolated storage access</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="BeginRead">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginRead (byte[] buffer, int offset, int numBytes, AsyncCallback userCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginRead(unsigned int8[] buffer, int32 offset, int32 numBytes, class System.AsyncCallback userCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginRead (buffer As Byte(), offset As Integer, numBytes As Integer, userCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginRead(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int numBytes, AsyncCallback ^ userCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="override this.BeginRead : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="isolatedStorageFileStream.BeginRead (buffer, offset, numBytes, userCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="numBytes" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1124b-240">データを読み取るバッファー。</span><span class="sxs-lookup"><span data-stu-id="1124b-240">The buffer to read data into.</span></span></param>
        <param name="offset"><span data-ttu-id="1124b-241">読み取りの開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="1124b-241">The byte offset in <paramref name="buffer" /> at which to begin reading.</span></span></param>
        <param name="numBytes"><span data-ttu-id="1124b-242">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="1124b-242">The maximum number of bytes to read.</span></span></param>
        <param name="userCallback"><span data-ttu-id="1124b-243">非同期の読み取り操作が完了したときに呼び出すメソッド。</span><span class="sxs-lookup"><span data-stu-id="1124b-243">The method to call when the asynchronous read operation is completed.</span></span> <span data-ttu-id="1124b-244">このパラメーターは省略できます。</span><span class="sxs-lookup"><span data-stu-id="1124b-244">This parameter is optional.</span></span></param>
        <param name="stateObject"><span data-ttu-id="1124b-245">非同期の読み取りの状態。</span><span class="sxs-lookup"><span data-stu-id="1124b-245">The status of the asynchronous read.</span></span></param>
        <summary><span data-ttu-id="1124b-246">非同期の読み取りを開始します。</span><span class="sxs-lookup"><span data-stu-id="1124b-246">Begins an asynchronous read.</span></span></summary>
        <returns><span data-ttu-id="1124b-247">非同期の読み取りを表す <see cref="T:System.IAsyncResult" /> オブジェクト。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="1124b-247">An <see cref="T:System.IAsyncResult" /> object that represents the asynchronous read, which is possibly still pending.</span></span> <span data-ttu-id="1124b-248">読み取ったバイト数を確認するには、<see cref="T:System.IAsyncResult" /> をこのストリームの <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)" /> メソッドに渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-248">This <see cref="T:System.IAsyncResult" /> must be passed to this stream's <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)" /> method to determine how many bytes were read.</span></span> <span data-ttu-id="1124b-249">この操作は、<see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> を呼び出した同じコードを使用するか、または <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> に渡されたコールバックで行うことができます。</span><span class="sxs-lookup"><span data-stu-id="1124b-249">This can be done either by the same code that called <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> or in a callback passed to <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-250">ストリーム内の現在位置は、i/o 操作が完了したときではなく、非同期の読み取りまたは書き込みを発行したときに更新されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-250">The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.</span></span>  
  
 <span data-ttu-id="1124b-251">読み取られたバイト数を調べるには、この <xref:System.IAsyncResult> で <xref:System.IO.Stream.EndRead%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-251">You must call <xref:System.IO.Stream.EndRead%2A> with this <xref:System.IAsyncResult> to find out how many bytes were read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1124b-252">非同期の読み取りがファイルの終わりを超えて試行されました。</span><span class="sxs-lookup"><span data-stu-id="1124b-252">An asynchronous read was attempted past the end of the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginWrite">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginWrite (byte[] buffer, int offset, int numBytes, AsyncCallback userCallback, object stateObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginWrite(unsigned int8[] buffer, int32 offset, int32 numBytes, class System.AsyncCallback userCallback, object stateObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginWrite (buffer As Byte(), offset As Integer, numBytes As Integer, userCallback As AsyncCallback, stateObject As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginWrite(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int numBytes, AsyncCallback ^ userCallback, System::Object ^ stateObject);" />
      <MemberSignature Language="F#" Value="override this.BeginWrite : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="isolatedStorageFileStream.BeginWrite (buffer, offset, numBytes, userCallback, stateObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="numBytes" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="userCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="stateObject" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1124b-253">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="1124b-253">The buffer to write data to.</span></span></param>
        <param name="offset"><span data-ttu-id="1124b-254">書き込みの開始位置を示す <paramref name="buffer" /> 内のバイト オフセット。</span><span class="sxs-lookup"><span data-stu-id="1124b-254">The byte offset in <paramref name="buffer" /> at which to begin writing.</span></span></param>
        <param name="numBytes"><span data-ttu-id="1124b-255">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="1124b-255">The maximum number of bytes to write.</span></span></param>
        <param name="userCallback"><span data-ttu-id="1124b-256">非同期の書き込み操作が完了したときに呼び出すメソッド。</span><span class="sxs-lookup"><span data-stu-id="1124b-256">The method to call when the asynchronous write operation is completed.</span></span> <span data-ttu-id="1124b-257">このパラメーターは省略できます。</span><span class="sxs-lookup"><span data-stu-id="1124b-257">This parameter is optional.</span></span></param>
        <param name="stateObject"><span data-ttu-id="1124b-258">非同期の書き込みの状態。</span><span class="sxs-lookup"><span data-stu-id="1124b-258">The status of the asynchronous write.</span></span></param>
        <summary><span data-ttu-id="1124b-259">非同期の書き込みを開始します。</span><span class="sxs-lookup"><span data-stu-id="1124b-259">Begins an asynchronous write.</span></span></summary>
        <returns><span data-ttu-id="1124b-260">非同期の書き込みを表す <see cref="T:System.IAsyncResult" />。まだ保留状態の場合もあります。</span><span class="sxs-lookup"><span data-stu-id="1124b-260">An <see cref="T:System.IAsyncResult" /> that represents the asynchronous write, which is possibly still pending.</span></span> <span data-ttu-id="1124b-261">書き込みが完了したことを確認してから、リソースを適切に解放するには、このストリームの <see cref="T:System.IAsyncResult" /> メソッドに <see cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" /> を渡す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-261">This <see cref="T:System.IAsyncResult" /> must be passed to this stream's <see cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" /> method to ensure that the write is complete, then frees resources appropriately.</span></span> <span data-ttu-id="1124b-262">この操作は、<see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> を呼び出した同じコードを使用するか、または <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> に渡されたコールバックで行うことができます。</span><span class="sxs-lookup"><span data-stu-id="1124b-262">This can be done either by the same code that called <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> or in a callback passed to <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-263"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトが書き込み可能な場合は、ストリームの末尾に書き込みを行うとストリームが拡張されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-263">If a <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is writable, writing at the end of the stream expands the stream.</span></span>  
  
 <span data-ttu-id="1124b-264">ストリーム内の現在位置は、i/o 操作が完了したときではなく、非同期の読み取りまたは書き込みを発行したときに更新されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-264">The current position in the stream is updated when you issue the asynchronous read or write, not when the I/O operation completes.</span></span>  
  
 <span data-ttu-id="1124b-265">書き込まれたバイト数を調べるには、このメソッドが返す <xref:System.IAsyncResult> オブジェクトを使用して <xref:System.IO.Stream.EndWrite%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-265">You must call <xref:System.IO.Stream.EndWrite%2A> with the <xref:System.IAsyncResult> object that this method returns to find out how many bytes were written.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1124b-266">非同期の書き込みがファイルの終わりを超えて試行されました。</span><span class="sxs-lookup"><span data-stu-id="1124b-266">An asynchronous write was attempted past the end of the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1124b-267">ファイルを読み取ることができるかどうかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1124b-267">Gets a Boolean value indicating whether the file can be read.</span></span></summary>
        <value><span data-ttu-id="1124b-268"><see langword="true" /> オブジェクトを読み取ることができる場合は <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1124b-268"><see langword="true" /> if an <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object can be read; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-269">このプロパティを使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトを読み取ることができるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="1124b-269">Use this property to determine whether the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object can be read.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1124b-270">次のコード例では、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead%2A> プロパティを使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A> または <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A> メソッドを呼び出す前にストリームを読み取ることができるかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1124b-270">The following code example demonstrates how you could use the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead%2A> property, as a check to see whether a stream can be read before calling the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A> or <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A> methods.</span></span> <span data-ttu-id="1124b-271">この例の完全なコンテキストについては、「<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> の概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-271">For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#11)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#11)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSeek">
      <MemberSignature Language="C#" Value="public override bool CanSeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSeek" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSeek As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSeek { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSeek : bool" Usage="System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1124b-272">シーク操作をサポートしているかどうかを示す ブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1124b-272">Gets a Boolean value indicating whether seek operations are supported.</span></span></summary>
        <value><span data-ttu-id="1124b-273"><see langword="true" /> オブジェクトがシーク操作をサポートしている場合は <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1124b-273"><see langword="true" /> if an <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object supports seek operations; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-274">このプロパティを使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトがシーク操作をサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="1124b-274">Use this property to determine whether the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object supports seek operations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1124b-275">ファイルに書き込むことができるかどうかを示す ブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1124b-275">Gets a Boolean value indicating whether you can write to the file.</span></span></summary>
        <value><span data-ttu-id="1124b-276"><see langword="true" /> オブジェクトに書き込むことができる場合は <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1124b-276"><see langword="true" /> if an <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object can be written; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-277">このプロパティを使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトを書き込むことができるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="1124b-277">Use this property to determine whether the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object can be written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1124b-278">次のコード例では、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite%2A> プロパティを使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write%2A> または <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A> メソッドを呼び出す前にストリームを読み取ることができるかどうかを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1124b-278">The following code example demonstrates how you could use the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite%2A> property, as a check to see whether a stream can be read before calling the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write%2A> or <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A> methods.</span></span> <span data-ttu-id="1124b-279">この例の完全なコンテキストについては、「<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> の概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-279">For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#13)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#13)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="isolatedStorageFileStream.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1124b-280"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトに関連付けられたリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="1124b-280">Releases resources associated with the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1124b-281">以前にバッファーに書き込まれたデータは、ファイルストリームが閉じられる前にファイルにコピーされるため、Close を呼び出す前に <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%2A> を呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="1124b-281">Any data previously written to the buffer is copied to the file before the file stream is closed, so it is not necessary to call <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%2A> before invoking Close.</span></span>

<span data-ttu-id="1124b-282">Close の呼び出しの後、ファイルストリームに対するすべての操作で例外が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-282">Following a call to Close, any operations on the file stream might raise exceptions.</span></span> <span data-ttu-id="1124b-283">`Close` が一度だけ呼び出された後は、再度呼び出されても何も行われません。</span><span class="sxs-lookup"><span data-stu-id="1124b-283">After `Close` has been called once, it does nothing if called again.</span></span> <span data-ttu-id="1124b-284"><xref:System.Object.Finalize> メソッドは Close を呼び出して、ガベージコレクターがオブジェクトを終了する前にファイルストリームが閉じられるようにします。</span><span class="sxs-lookup"><span data-stu-id="1124b-284">The <xref:System.Object.Finalize> method invokes Close so the file stream is closed before the garbage collector finalizes the object.</span></span>

<span data-ttu-id="1124b-285"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトには、アクセスするファイルのストレージコンテキストを決定する <xref:System.IO.IsolatedStorage.IsolatedStorageFile> オブジェクトが必要です。</span><span class="sxs-lookup"><span data-stu-id="1124b-285"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects require an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object that determines the storage context for the files accessed.</span></span> <span data-ttu-id="1124b-286"><xref:System.IO.IsolatedStorage.IsolatedStorageFile> オブジェクトを渡さずに開かれたストリームの場合は、実行中のアセンブリに対して既定の <xref:System.IO.IsolatedStorage.IsolatedStorageFile> オブジェクトが作成され、Close の呼び出し中に閉じられます。</span><span class="sxs-lookup"><span data-stu-id="1124b-286">For streams opened without passing an <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object, a default <xref:System.IO.IsolatedStorage.IsolatedStorageFile> object is created for the executing assembly and then closed during the call to Close.</span></span>

> [!NOTE]
> <span data-ttu-id="1124b-287">`Close` メソッドは、disposing が true に設定された <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose%2A> を呼び出してリソースを解放し、<xref:System.GC.SuppressFinalize%2A> を呼び出して、ガベージコレクターによるこのオブジェクトの終了を抑制します。</span><span class="sxs-lookup"><span data-stu-id="1124b-287">The `Close` method calls <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose%2A> with disposing set to true to release its resources, then calls <xref:System.GC.SuppressFinalize%2A> to suppress finalization of this object by the garbage collector.</span></span>

## Examples

<span data-ttu-id="1124b-288">Close メソッドのコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="1124b-288">The following code example demonstrates the Close method.</span></span>

```csharp
IsolatedStorageFileStream source =
     new IsolatedStorageFileStream(this.userName,FileMode.Open,isoFile);
 // This stream is the one that data will be read from
 Console.WriteLine("Source can be read?" + (source.CanRead?"true":"false"));
 IsolatedStorageFileStream target =
     new IsolatedStorageFileStream("Archive\\ " + this.userName,FileMode.OpenOrCreate,isoFile);
 // This stream is the one that data will be written to
 Console.WriteLine("Target is writable?" + (target.CanWrite?"true":"false"));
 // Do work...
 // After you have read and written to the streams, close them
 source.Close();
 target.Close();
```

```vb
Dim source As New IsolatedStorageFileStream(UserName,FileMode.Open,isoFile)
 ' This stream is the one that data will be read from
 If source.CanRead Then
     Console.WriteLine("Source can read ? true")
 Else
     Console.WriteLine("Source can read ? false")
 End If
 Dim target As New IsolatedStorageFileStream("Archive\\ " & UserName, _
                                             FileMode.OpenOrCreate, _
                                             isoFile)
 ' This stream is the one that data will be written to
 If target.CanWrite Then
     Console.WriteLine("Target is writable? true")
 Else
     Console.WriteLine("Target is writable? false")
 End If
 ' After you have read and written to the streams, close them
 source.Close()
 target.Close()
```

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="isolatedStorageFileStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="1124b-289">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1124b-289"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources</span></span></param>
        <summary><span data-ttu-id="1124b-290"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="1124b-290">Releases the unmanaged resources used by the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-291">このメソッドは、パブリック <xref:System.IDisposable.Dispose%2A> メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-291">This method is called by the public <xref:System.IDisposable.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="1124b-292"><xref:System.IDisposable.Dispose%2A> は、`disposing` パラメーターを true に設定して、protected <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1124b-292"><xref:System.IDisposable.Dispose%2A> invokes the protected <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose%2A> method with the `disposing` parameter set to true.</span></span> <span data-ttu-id="1124b-293"><xref:System.Object.Finalize%2A> は `disposing` を false に設定して <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1124b-293"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose%2A> with `disposing` set to false.</span></span>  
  
 <span data-ttu-id="1124b-294">`disposing` パラメーターが true の場合、このメソッドは、この <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> が参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="1124b-294">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> references.</span></span> <span data-ttu-id="1124b-295">このメソッドは、参照される各オブジェクトの <xref:System.IDisposable.Dispose%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="1124b-295">This method invokes the <xref:System.IDisposable.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1124b-296">
            <see cref="M:System.IDisposable.Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="1124b-296">
            <see cref="M:System.IDisposable.Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="1124b-297"><see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)" /> をオーバーライドする場合は、以前に <see cref="M:System.IDisposable.Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-297">When overriding <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.IDisposable.Dispose" />.</span></span> <span data-ttu-id="1124b-298"><see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-298">For more information about how to implement <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="1124b-299"><see cref="M:System.IDisposable.Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-299">For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="isolatedStorageFileStream.DisposeAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1124b-300"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> によって使用されているアンマネージ リソースを非同期に解放します。</span><span class="sxs-lookup"><span data-stu-id="1124b-300">Asynchronously releases the unmanaged resources used by the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />.</span></span></summary>
        <returns><span data-ttu-id="1124b-301">非同期の破棄操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="1124b-301">A task that represents the asynchronous dispose operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRead">
      <MemberSignature Language="C#" Value="public override int EndRead (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 EndRead(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EndRead (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int EndRead(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndRead : IAsyncResult -&gt; int" Usage="isolatedStorageFileStream.EndRead asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="1124b-302">保留中の非同期の要求。</span><span class="sxs-lookup"><span data-stu-id="1124b-302">The pending asynchronous request.</span></span></param>
        <summary><span data-ttu-id="1124b-303">非同期読み込み要求の保留状態を終了します。</span><span class="sxs-lookup"><span data-stu-id="1124b-303">Ends a pending asynchronous read request.</span></span></summary>
        <returns><span data-ttu-id="1124b-304">ストリームから読み取ったバイト数 (0 ～要求したバイト数の間の数値)。</span><span class="sxs-lookup"><span data-stu-id="1124b-304">The number of bytes read from the stream, between zero and the number of requested bytes.</span></span> <span data-ttu-id="1124b-305">ストリームは、末尾に達した場合にだけ 0 を返します。</span><span class="sxs-lookup"><span data-stu-id="1124b-305">Streams will only return zero at the end of the stream.</span></span> <span data-ttu-id="1124b-306">それ以外の場合、ストリームは少なくとも 1 バイトが読み取られるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="1124b-306">Otherwise, they will block until at least one byte is available.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-307"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> は <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>からのすべての <xref:System.IAsyncResult> オブジェクトで1回だけ呼び出す必要があります。また、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> を呼び出すことは、<xref:System.IO.Stream>から読み取られたバイト数を確認する唯一の方法です。</span><span class="sxs-lookup"><span data-stu-id="1124b-307"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> must be called exactly once on every <xref:System.IAsyncResult> object from <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>, and calling <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> is the only way to know how many bytes were read from the <xref:System.IO.Stream>.</span></span> <span data-ttu-id="1124b-308">i/o 操作が完了するまで、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> はブロックされます。</span><span class="sxs-lookup"><span data-stu-id="1124b-308"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> will block until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1124b-309"><paramref name="asyncResult" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-309">The <paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndWrite">
      <MemberSignature Language="C#" Value="public override void EndWrite (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndWrite(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndWrite (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndWrite(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="override this.EndWrite : IAsyncResult -&gt; unit" Usage="isolatedStorageFileStream.EndWrite asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="1124b-310">保留中の非同期 I/O 終了要求。</span><span class="sxs-lookup"><span data-stu-id="1124b-310">The pending asynchronous I/O request to end.</span></span></param>
        <summary><span data-ttu-id="1124b-311">非同期の書き込みを終了します。</span><span class="sxs-lookup"><span data-stu-id="1124b-311">Ends an asynchronous write.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-312"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A> は、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>からのすべての <xref:System.IAsyncResult> で1回だけ呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-312"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A> must be called exactly once on every <xref:System.IAsyncResult> from <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>.</span></span>  
  
 <span data-ttu-id="1124b-313">i/o 操作が完了するまで、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A> はブロックされます。</span><span class="sxs-lookup"><span data-stu-id="1124b-313"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A> will block until the I/O operation has completed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1124b-314"><paramref name="asyncResult" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-314">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1124b-315">このストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにします。</span><span class="sxs-lookup"><span data-stu-id="1124b-315">Clears buffers for this stream and causes any buffered data to be written to the file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="isolatedStorageFileStream.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1124b-316">このストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにします。</span><span class="sxs-lookup"><span data-stu-id="1124b-316">Clears buffers for this stream and causes any buffered data to be written to the file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-317">バッファーは読み取りと書き込みのどちらにも使用できますが、同時に使用することはできないため、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%2A> は2つの関数を実行します。</span><span class="sxs-lookup"><span data-stu-id="1124b-317">Because a buffer can be used for either reading or writing, but not both simultaneously, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%2A> performs two functions.</span></span> <span data-ttu-id="1124b-318">最初に、バッファーに書き込まれたすべてのデータがファイルにコピーされ、バッファーがクリアされます。</span><span class="sxs-lookup"><span data-stu-id="1124b-318">First, any data previously written to the buffer is copied to the file and the buffer is cleared.</span></span> <span data-ttu-id="1124b-319">2番目の <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A> が `true` で、データが以前にファイルから読み取り用にバッファーにコピーされていた場合、ファイル内の現在位置は、バッファー内の未読バイト数だけ減少します。</span><span class="sxs-lookup"><span data-stu-id="1124b-319">Second, if <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A> is `true` and data was previously copied from the file to the buffer for reading, the current position within the file is decremented by the number of unread bytes in the buffer.</span></span> <span data-ttu-id="1124b-320">バッファーがクリアされます。</span><span class="sxs-lookup"><span data-stu-id="1124b-320">The buffer is then cleared.</span></span>  
  
 <span data-ttu-id="1124b-321">中間ファイルバッファー内のすべてのバッファーデータがディスクに書き込まれるようにするには、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%28System.Boolean%29> メソッドのオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="1124b-321">Use the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%28System.Boolean%29> method overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush (bool flushToDisk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush(bool flushToDisk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush (flushToDisk As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush(bool flushToDisk);" />
      <MemberSignature Language="F#" Value="override this.Flush : bool -&gt; unit" Usage="isolatedStorageFileStream.Flush flushToDisk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flushToDisk" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="flushToDisk"><span data-ttu-id="1124b-322">すべての中間ファイル バッファーをフラッシュする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1124b-322"><see langword="true" /> to flush all intermediate file buffers; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1124b-323">このストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにし、すべての中間ファイル バッファーもクリアします。</span><span class="sxs-lookup"><span data-stu-id="1124b-323">Clears buffers for this stream and causes any buffered data to be written to the file, and also clears all intermediate file buffers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-324">このオーバーロードは、中間ファイルバッファー内のすべてのバッファーデータがディスクに書き込まれるようにする場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="1124b-324">Use this overload when you want to ensure that all buffered data in intermediate file buffers is written to disk.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush" />
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.FlushAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="isolatedStorageFileStream.FlushAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="1124b-325">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="1124b-325">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="1124b-326">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-326">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="1124b-327">非同期でこのストリームのバッファーをクリアして、バッファー内のデータがファイルに書き込まれるようにします。</span><span class="sxs-lookup"><span data-stu-id="1124b-327">Asynchronously clears buffers for this stream and causes any buffered data to be written to the file.</span></span></summary>
        <returns><span data-ttu-id="1124b-328">非同期のフラッシュ操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="1124b-328">A task that represents the asynchronous flush operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public override IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use SafeFileHandle - once available")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("This property has been deprecated.  Please use IsolatedStorageFileStream's SafeFileHandle property instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This property has been deprecated.  Please use IsolatedStorageFileStream's SafeFileHandle property instead.  https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1124b-329">現在の <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="1124b-329">Gets the file handle for the file that the current <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object encapsulates.</span></span> <span data-ttu-id="1124b-330"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトではこのプロパティへのアクセスは許可されておらず、<see cref="T:System.IO.IsolatedStorage.IsolatedStorageException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1124b-330">Accessing this property is not permitted on an <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object, and throws an <see cref="T:System.IO.IsolatedStorage.IsolatedStorageException" />.</span></span></summary>
        <value><span data-ttu-id="1124b-331">現在の <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトによってカプセル化されるファイルのファイル ハンドル。</span><span class="sxs-lookup"><span data-stu-id="1124b-331">The file handle for the file that the current <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object encapsulates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-332">詳細については、「<xref:System.IO.FileStream.Handle%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-332">For more information, see <xref:System.IO.FileStream.Handle%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1124b-333">次のコード例は、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle%2A> プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="1124b-333">The following code example demonstrates the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle%2A> property.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#4)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#4)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException"><span data-ttu-id="1124b-334"><see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle" /> プロパティには、常にこの例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-334">The <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle" /> property always generates this exception.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1124b-335">アンマネージコードにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="1124b-335">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1124b-336">関連付けられた列挙: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="1124b-336">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="1124b-337">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="1124b-337">requires full trust for the immediate caller.</span></span> <span data-ttu-id="1124b-338">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="1124b-338">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public override bool IsAsync { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAsync { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAsync : bool" Usage="System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1124b-339"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトが非同期的に開かれたか、同期的に開かれたかを示すブール値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1124b-339">Gets a Boolean value indicating whether the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object was opened asynchronously or synchronously.</span></span></summary>
        <value><span data-ttu-id="1124b-340"><see langword="true" /> オブジェクトが非同期アクセスをサポートしている場合は <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1124b-340"><see langword="true" /> if the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object supports asynchronous access; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-341"><xref:System.IO.FileStream>とは異なり、非同期 <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトを作成することはできません。</span><span class="sxs-lookup"><span data-stu-id="1124b-341">Asynchronous <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects cannot be created, unlike <xref:System.IO.FileStream>.</span></span> <span data-ttu-id="1124b-342">ただし、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A>、および <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> の各メソッドは同期インスタンスでサポートされており、パフォーマンスが低下することがあります。</span><span class="sxs-lookup"><span data-stu-id="1124b-342">However, the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A>, and <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A> methods are supported on synchronous instances, with some performance penalties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1124b-343">次のコード例では、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync%2A> プロパティを使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> が同期されていることを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1124b-343">The following code example demonstrates how you can use the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync%2A> property to verify that an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> is synchronous.</span></span> <span data-ttu-id="1124b-344">この例の完全なコンテキストについては、「<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> の概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-344">For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#7)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#7)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.FileStream" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public override long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Length { long get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64" Usage="System.IO.IsolatedStorage.IsolatedStorageFileStream.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1124b-345"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトの長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="1124b-345">Gets the length of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object.</span></span></summary>
        <value><span data-ttu-id="1124b-346">バイト単位の <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトの長さ。</span><span class="sxs-lookup"><span data-stu-id="1124b-346">The length of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-347"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length%2A> は、ファイル内の現在のバイト数を表します。</span><span class="sxs-lookup"><span data-stu-id="1124b-347"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length%2A> represents the number of bytes currently in the file.</span></span> <span data-ttu-id="1124b-348">分離ストレージクォータの影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="1124b-348">It is not affected by isolated storage quota.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1124b-349">次のコード例は、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length%2A> プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="1124b-349">The following code example demonstrates the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Length%2A> property.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#14)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#14)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public override void Lock (long position, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Lock(int64 position, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Lock (position As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Lock(long position, long length);" />
      <MemberSignature Language="F#" Value="override this.Lock : int64 * int64 -&gt; unit" Usage="isolatedStorageFileStream.Lock (position, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="length" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="1124b-350">ロックする範囲の開始位置。</span><span class="sxs-lookup"><span data-stu-id="1124b-350">The starting position of the range to lock.</span></span> <span data-ttu-id="1124b-351">このパラメーターの値は、0 (ゼロ) 以上にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-351">The value of this parameter must be equal to or greater than 0 (zero).</span></span></param>
        <param name="length"><span data-ttu-id="1124b-352">ロックするバイト数。</span><span class="sxs-lookup"><span data-stu-id="1124b-352">The number of bytes to lock.</span></span></param>
        <summary><span data-ttu-id="1124b-353">ストリームに対する他のプロセスの読み取りまたは書き込みを禁止します。</span><span class="sxs-lookup"><span data-stu-id="1124b-353">Prevents other processes from reading from or writing to the stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-354">ファイルストリームの範囲をロックすると、ロックプロセスのスレッドは、そのファイルストリームの範囲に排他的にアクセスできるようになります。</span><span class="sxs-lookup"><span data-stu-id="1124b-354">Locking a range of a file stream gives the threads of the locking process exclusive access to that range of the file stream.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1124b-355"><paramref name="position" /> または <paramref name="length" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="1124b-355"><paramref name="position" /> or <paramref name="length" /> is negative.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1124b-356">ファイルは閉じられています。</span><span class="sxs-lookup"><span data-stu-id="1124b-356">The file is closed.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="1124b-357">別のプロセスがファイルの一部をロックしているため、プロセスはこのファイルにアクセスできません。</span><span class="sxs-lookup"><span data-stu-id="1124b-357">The process cannot access the file because another process has locked a portion of the file.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public override long Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Position" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Position As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Position { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Position : int64 with get, set" Usage="System.IO.IsolatedStorage.IsolatedStorageFileStream.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1124b-358">現在の <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトの現在位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1124b-358">Gets or sets the current position of the current <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object.</span></span></summary>
        <value><span data-ttu-id="1124b-359"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトの現在位置。</span><span class="sxs-lookup"><span data-stu-id="1124b-359">The current position of this <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-360">このプロパティの設定は、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A> プロパティが `true`場合に機能します。</span><span class="sxs-lookup"><span data-stu-id="1124b-360">Setting this property works when the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1124b-361">次のコード例では、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position%2A> プロパティを使用して、データをファイルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1124b-361">The following code example uses the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Position%2A> property to write data to a file.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#14)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#14)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1124b-362">位置は、負の値に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="1124b-362">The position cannot be set to a negative number.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (Span&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(valuetype System.Span`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(Span&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Read : Span&lt;byte&gt; -&gt; int" Usage="isolatedStorageFileStream.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1124b-363">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="1124b-363">The buffer to write the data into.</span></span></param>
        <summary><span data-ttu-id="1124b-364">現在のバッファー内の <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトからバイト スパンにバイトをコピーします。</span><span class="sxs-lookup"><span data-stu-id="1124b-364">Copies bytes from the current buffered <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object to a byte span.</span></span></summary>
        <returns><span data-ttu-id="1124b-365"><paramref name="buffer" /> に読み取る合計バイト数。</span><span class="sxs-lookup"><span data-stu-id="1124b-365">The total number of bytes read into the <paramref name="buffer" />.</span></span> <span data-ttu-id="1124b-366">要求しただけのバイト数を読み取ることができなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="1124b-366">This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream is reached.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Read : byte[] * int * int -&gt; int" Usage="isolatedStorageFileStream.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1124b-367">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="1124b-367">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="1124b-368">書き込みの開始位置を示すバッファー内のオフセット。</span><span class="sxs-lookup"><span data-stu-id="1124b-368">The offset in the buffer at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="1124b-369">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="1124b-369">The maximum number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="1124b-370">現在のバッファー内の <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトからバイト配列にバイトをコピーします。</span><span class="sxs-lookup"><span data-stu-id="1124b-370">Copies bytes from the current buffered <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object to a byte array.</span></span></summary>
        <returns><span data-ttu-id="1124b-371"><paramref name="buffer" /> に読み取る合計バイト数。</span><span class="sxs-lookup"><span data-stu-id="1124b-371">The total number of bytes read into the <paramref name="buffer" />.</span></span> <span data-ttu-id="1124b-372">要求しただけのバイト数を読み取ることができなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="1124b-372">This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1124b-373">`buffer` パラメーターには、<xref:System.Buffer> クラスのインスタンスか、次のいずれかの型の配列を指定できます: <xref:System.Byte>、<xref:System.SByte>、<xref:System.Char>、<xref:System.Int16>、<xref:System.Int32>、<xref:System.Int64>、<xref:System.UInt16>、<xref:System.UInt32>、<xref:System.UInt64>、<xref:System.Single>、または <xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="1124b-373">The `buffer` parameter can be an instance of the <xref:System.Buffer> class, or an array of one of the following types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Char>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, or <xref:System.Double>.</span></span> 

<span data-ttu-id="1124b-374">読み取り操作が成功した場合、ストリームの現在位置は、読み取ったバイト数だけ進んでいます。</span><span class="sxs-lookup"><span data-stu-id="1124b-374">If the read operation is successful, the current position of the stream is advanced by the number of bytes read.</span></span> <span data-ttu-id="1124b-375">例外が発生した場合、ストリームの現在位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="1124b-375">If an exception occurs, the current position of the stream is unchanged.</span></span>

<span data-ttu-id="1124b-376"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A> メソッドは、実際の型に関係なく、`buffer` パラメーターをバイトのブロックとして扱います。</span><span class="sxs-lookup"><span data-stu-id="1124b-376">The <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A> method treats the `buffer` parameter as a block of bytes, regardless of its actual type.</span></span> <span data-ttu-id="1124b-377">同様に、`offset` パラメーターと `count` パラメーターは常にバイト単位で指定されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-377">Likewise, the `offset` and `count` parameters are always specified in bytes.</span></span> <span data-ttu-id="1124b-378">バイト配列以外の `buffer` パラメーターの場合、`offset` または `count`に対して正しい値を形成するには、要素のインデックスまたは要素の数をバイト単位で乗算する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-378">For `buffer` parameters other than byte arrays, this means that an element index or the number of elements must be multiplied by the element size in bytes to form a correct value for `offset` or `count`.</span></span>

<span data-ttu-id="1124b-379"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A> メソッドは、ストリームの末尾に到達した場合にのみ0を返します。</span><span class="sxs-lookup"><span data-stu-id="1124b-379">The <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A> method will return zero only if the end of the stream is reached.</span></span> <span data-ttu-id="1124b-380">それ以外の場合は、を返す前に、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A> は常にストリームから少なくとも1バイトを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="1124b-380">In all other cases, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A> always reads at least one byte from the stream before returning.</span></span> <span data-ttu-id="1124b-381"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A>の呼び出し時に <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトから使用できるデータがない場合、メソッドは、少なくとも1バイトのデータが返されるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="1124b-381">If no data is available from the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object upon a call to <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A>, the method will block until at least one byte of data can be returned.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : Memory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="isolatedStorageFileStream.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1124b-382">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="1124b-382">The buffer to write the data into.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1124b-383">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="1124b-383">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="1124b-384">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-384">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="1124b-385">非同期で現在のバッファー内の <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトからバイト メモリ範囲にバイトをコピーします。</span><span class="sxs-lookup"><span data-stu-id="1124b-385">Asynchronously copies bytes from the current buffered <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object to a byte memory range.</span></span></summary>
        <returns><span data-ttu-id="1124b-386">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="1124b-386">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="1124b-387"><paramref name="buffer" /> に読み取られた合計バイト数をラップします。</span><span class="sxs-lookup"><span data-stu-id="1124b-387">It wraps the total number of bytes read into the <paramref name="buffer" />.</span></span> <span data-ttu-id="1124b-388">要求しただけのバイト数を読み取ることができなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="1124b-388">This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream is reached.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.ReadAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="isolatedStorageFileStream.ReadAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1124b-389">データを書き込むバッファー。</span><span class="sxs-lookup"><span data-stu-id="1124b-389">The buffer to write the data into.</span></span></param>
        <param name="offset"><span data-ttu-id="1124b-390">書き込みの開始位置を示すバッファー内のオフセット。</span><span class="sxs-lookup"><span data-stu-id="1124b-390">The offset in the buffer at which to begin writing.</span></span></param>
        <param name="count"><span data-ttu-id="1124b-391">読み取る最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="1124b-391">The maximum number of bytes to read.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1124b-392">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="1124b-392">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="1124b-393">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-393">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="1124b-394">非同期で現在のバッファー内の <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトからバイト配列にバイトをコピーします。</span><span class="sxs-lookup"><span data-stu-id="1124b-394">Asynchronously copies bytes from the current buffered <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object to a byte array.</span></span></summary>
        <returns><span data-ttu-id="1124b-395">非同期の読み取り操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="1124b-395">A task that represents the asynchronous read operation.</span></span> <span data-ttu-id="1124b-396"><paramref name="buffer" /> に読み取られた合計バイト数をラップします。</span><span class="sxs-lookup"><span data-stu-id="1124b-396">It wraps the total number of bytes read into the <paramref name="buffer" />.</span></span> <span data-ttu-id="1124b-397">要求しただけのバイト数を読み取ることができなかった場合、この値は要求したバイト数より小さくなります。ストリームの末尾に到達した場合は 0 になることがあります。</span><span class="sxs-lookup"><span data-stu-id="1124b-397">This can be less than the number of bytes requested if that many bytes are not currently available, or zero if the end of the stream is reached.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1124b-398">`buffer` パラメーターには、<xref:System.Buffer> クラスのインスタンスか、次のいずれかの型の配列を指定できます: <xref:System.Byte>、<xref:System.SByte>、<xref:System.Char>、<xref:System.Int16>、<xref:System.Int32>、<xref:System.Int64>、<xref:System.UInt16>、<xref:System.UInt32>、<xref:System.UInt64>、<xref:System.Single>、または <xref:System.Double>。</span><span class="sxs-lookup"><span data-stu-id="1124b-398">The `buffer` parameter can be an instance of the <xref:System.Buffer> class, or an array of one of the following types: <xref:System.Byte>, <xref:System.SByte>, <xref:System.Char>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Single>, or <xref:System.Double>.</span></span> 

<span data-ttu-id="1124b-399">読み取り操作が成功した場合、ストリームの現在位置は、読み取ったバイト数だけ進んでいます。</span><span class="sxs-lookup"><span data-stu-id="1124b-399">If the read operation is successful, the current position of the stream is advanced by the number of bytes read.</span></span> <span data-ttu-id="1124b-400">例外が発生した場合、ストリームの現在位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="1124b-400">If an exception occurs, the current position of the stream is unchanged.</span></span>

<span data-ttu-id="1124b-401"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync%2A> メソッドは、実際の型に関係なく、`buffer` パラメーターをバイトのブロックとして扱います。</span><span class="sxs-lookup"><span data-stu-id="1124b-401">The <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync%2A> method treats the `buffer` parameter as a block of bytes, regardless of its actual type.</span></span> <span data-ttu-id="1124b-402">同様に、`offset` パラメーターと `count` パラメーターは常にバイト単位で指定されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-402">Likewise, the `offset` and `count` parameters are always specified in bytes.</span></span> <span data-ttu-id="1124b-403">バイト配列以外の `buffer` パラメーターの場合、`offset` または `count`に対して正しい値を形成するには、要素のインデックスまたは要素の数をバイト単位で乗算する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-403">For `buffer` parameters other than byte arrays, this means that an element index or the number of elements must be multiplied by the element size in bytes to form a correct value for `offset` or `count`.</span></span>

<span data-ttu-id="1124b-404"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync%2A> メソッドは、ストリームの末尾に到達した場合にのみ0を返します。</span><span class="sxs-lookup"><span data-stu-id="1124b-404">The <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync%2A> method will return zero only if the end of the stream is reached.</span></span> <span data-ttu-id="1124b-405">それ以外の場合は、を返す前に、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync%2A> は常にストリームから少なくとも1バイトを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="1124b-405">In all other cases, <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync%2A> always reads at least one byte from the stream before returning.</span></span> <span data-ttu-id="1124b-406"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync%2A>の呼び出し時に <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトから使用できるデータがない場合、メソッドは、少なくとも1バイトのデータが返されるまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="1124b-406">If no data is available from the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object upon a call to <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadAsync%2A>, the method will block until at least one byte of data can be returned.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public override int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int ReadByte();" />
      <MemberSignature Language="F#" Value="override this.ReadByte : unit -&gt; int" Usage="isolatedStorageFileStream.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1124b-407">分離ストレージで <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトから 1 バイトを読み取ります。</span><span class="sxs-lookup"><span data-stu-id="1124b-407">Reads a single byte from the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object in isolated storage.</span></span></summary>
        <returns><span data-ttu-id="1124b-408">分離ストレージ ファイルから読み取られた 8 ビット符号なし整数値。</span><span class="sxs-lookup"><span data-stu-id="1124b-408">The 8-bit unsigned integer value read from the isolated storage file.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1124b-409">次のコード例は、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte%2A> メソッドを使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトからデータを読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1124b-409">The following code example demonstrates how the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte%2A> method can be used to read data from an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object.</span></span> <span data-ttu-id="1124b-410">この例の完全なコンテキストについては、「<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> の概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-410">For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#14)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#14)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileHandle">
      <MemberSignature Language="C#" Value="public override Microsoft.Win32.SafeHandles.SafeFileHandle SafeFileHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeFileHandle SafeFileHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SafeFileHandle As SafeFileHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::Win32::SafeHandles::SafeFileHandle ^ SafeFileHandle { Microsoft::Win32::SafeHandles::SafeFileHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileHandle : Microsoft.Win32.SafeHandles.SafeFileHandle" Usage="System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeFileHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1124b-411">現在の <see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /> オブジェクトによってカプセル化されるファイルのオペレーティング システム ファイル ハンドルを表す <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="1124b-411">Gets a <see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /> object that represents the operating system file handle for the file that the current <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object encapsulates.</span></span></summary>
        <value><span data-ttu-id="1124b-412">現在の <see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /> オブジェクトによってカプセル化されるファイルのオペレーティング システム ファイル ハンドルを表す <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1124b-412">A <see cref="T:Microsoft.Win32.SafeHandles.SafeFileHandle" /> object that represents the operating system file handle for the file that the current <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object encapsulates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-413"><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle%2A> プロパティはサポートされていないため、常に <xref:System.IO.IsolatedStorage.IsolatedStorageException> 例外を生成します。</span><span class="sxs-lookup"><span data-stu-id="1124b-413">The <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle%2A> property is not supported and always generates an <xref:System.IO.IsolatedStorage.IsolatedStorageException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException"><span data-ttu-id="1124b-414"><see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle" /> プロパティには、常にこの例外が生成されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-414">The <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle" /> property always generates this exception.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="1124b-415">アンマネージコードにアクセスするための。</span><span class="sxs-lookup"><span data-stu-id="1124b-415">for the ability to access unmanaged code.</span></span> <span data-ttu-id="1124b-416">関連付けられた列挙: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></span><span class="sxs-lookup"><span data-stu-id="1124b-416">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" /></span></span></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="1124b-417">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="1124b-417">requires full trust for the immediate caller.</span></span> <span data-ttu-id="1124b-418">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="1124b-418">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public override long Seek (long offset, System.IO.SeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 Seek(int64 offset, valuetype System.IO.SeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Seek (offset As Long, origin As SeekOrigin) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long Seek(long offset, System::IO::SeekOrigin origin);" />
      <MemberSignature Language="F#" Value="override this.Seek : int64 * System.IO.SeekOrigin -&gt; int64" Usage="isolatedStorageFileStream.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="origin" Type="System.IO.SeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="1124b-419">新しい <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトの位置。</span><span class="sxs-lookup"><span data-stu-id="1124b-419">The new position of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object.</span></span></param>
        <param name="origin"><span data-ttu-id="1124b-420"><see cref="T:System.IO.SeekOrigin" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="1124b-420">One of the <see cref="T:System.IO.SeekOrigin" /> values.</span></span></param>
        <summary><span data-ttu-id="1124b-421"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトの現在位置を特定の値に設定します。</span><span class="sxs-lookup"><span data-stu-id="1124b-421">Sets the current position of this <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object to the specified value.</span></span></summary>
        <returns><span data-ttu-id="1124b-422">新しい <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトの位置。</span><span class="sxs-lookup"><span data-stu-id="1124b-422">The new position in the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-423">一部の <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトでは、ストリームの長さを超える位置がサポートされています。この場合、他のオブジェクトは例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="1124b-423">Some <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> objects support positioning beyond the length of the stream, others will throw an exception in this case.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1124b-424"><paramref name="origin" /> は <see cref="T:System.IO.SeekOrigin" /> 値のいずれかである必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-424">The <paramref name="origin" /> must be one of the <see cref="T:System.IO.SeekOrigin" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLength">
      <MemberSignature Language="C#" Value="public override void SetLength (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetLength(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetLength (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetLength(long value);" />
      <MemberSignature Language="F#" Value="override this.SetLength : int64 -&gt; unit" Usage="isolatedStorageFileStream.SetLength value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1124b-425">新しい <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトの長さ。</span><span class="sxs-lookup"><span data-stu-id="1124b-425">The new length of the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object.</span></span></param>
        <summary><span data-ttu-id="1124b-426"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトの長さを指定した <paramref name="value" /> に設定します。</span><span class="sxs-lookup"><span data-stu-id="1124b-426">Sets the length of this <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object to the specified <paramref name="value" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1124b-427">指定された `value` が <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトの現在の長さよりも小さい場合、ストリームは切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="1124b-427">If the specified `value` is less than the current length of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object, the stream is truncated.</span></span> <span data-ttu-id="1124b-428">指定した `value` がストリームの現在の長さより大きい場合は、ストリームが展開されます。</span><span class="sxs-lookup"><span data-stu-id="1124b-428">If the specified `value` is larger than the current length of the stream, the stream is expanded.</span></span> <span data-ttu-id="1124b-429">ストリームが展開されている場合、古い値と新しい長さの間のストリームの内容は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="1124b-429">If the stream is expanded, the contents of the stream between the old and the new length are undefined.</span></span> <span data-ttu-id="1124b-430">このメソッドを使用するには、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトが書き込みとシークの両方をサポートしている必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-430">In order to use this method, an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object must support both writing and seeking.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1124b-431"><paramref name="value" /> は負の値です。</span><span class="sxs-lookup"><span data-stu-id="1124b-431"><paramref name="value" /> is a negative number.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public override void Unlock (long position, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Unlock(int64 position, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Unlock (position As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Unlock(long position, long length);" />
      <MemberSignature Language="F#" Value="override this.Unlock : int64 * int64 -&gt; unit" Usage="isolatedStorageFileStream.Unlock (position, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="length" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="1124b-432">アンロックする範囲の開始位置。</span><span class="sxs-lookup"><span data-stu-id="1124b-432">The starting position of the range to unlock.</span></span> <span data-ttu-id="1124b-433">このパラメーターの値は、0 (ゼロ) 以上にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1124b-433">The value of this parameter must be equal to or greater than 0 (zero).</span></span></param>
        <param name="length"><span data-ttu-id="1124b-434">ロックを解除するバイト数。</span><span class="sxs-lookup"><span data-stu-id="1124b-434">The number of bytes to unlock.</span></span></param>
        <summary><span data-ttu-id="1124b-435">以前にロックされたファイルの全部または一部への他のプロセスによるアクセスを許可します。</span><span class="sxs-lookup"><span data-stu-id="1124b-435">Allows other processes to access all or part of a file that was previously locked.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1124b-436"><paramref name="position" /> または <paramref name="length" /> が負の値です。</span><span class="sxs-lookup"><span data-stu-id="1124b-436"><paramref name="position" /> or <paramref name="length" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;byte&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;System::Byte&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="isolatedStorageFileStream.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1124b-437">読み取り専用バイト スパンであり、ここから現在の分離ストレージ ファイル ストリームにバイトをコピーします。</span><span class="sxs-lookup"><span data-stu-id="1124b-437">The read-only byte span from which to copy bytes to the current isolated storage file stream.</span></span></param>
        <summary><span data-ttu-id="1124b-438">読み取り専用バイト スパンから構成されるバッファーから読み取られたデータを利用し、分離ストレージ ファイル ストリーム オブジェクトにバイトのブロックを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1124b-438">Writes a block of bytes to the isolated storage file stream object using data read from a buffer consisting of a read-only byte span.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : byte[] * int * int -&gt; unit" Usage="isolatedStorageFileStream.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1124b-439">バイト配列であり、ここから現在の分離ストレージ ファイル ストリームにバイトをコピーします。</span><span class="sxs-lookup"><span data-stu-id="1124b-439">The byte array from which to copy bytes to the current isolated storage file stream.</span></span></param>
        <param name="offset"><span data-ttu-id="1124b-440"><paramref name="buffer" /> のバイト オフセットであり、ここから開始します。</span><span class="sxs-lookup"><span data-stu-id="1124b-440">The byte offset in <paramref name="buffer" /> from which to begin.</span></span></param>
        <param name="count"><span data-ttu-id="1124b-441">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="1124b-441">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="1124b-442">バイト配列から構成されるバッファーから読み取られたデータを利用し、分離ストレージ ファイル ストリーム オブジェクトにバイトのブロックを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1124b-442">Writes a block of bytes to the isolated storage file stream object using data read from a buffer consisting of a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="1124b-443">書き込み操作が成功した場合、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトの現在の位置は、書き込まれたバイト数だけ進んでいます。</span><span class="sxs-lookup"><span data-stu-id="1124b-443">If the write operation is successful, the current position of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is advanced by the number of bytes written.</span></span> <span data-ttu-id="1124b-444">例外が発生した場合、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトの現在の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="1124b-444">If an exception occurs, the current position of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is unchanged.</span></span>  

          ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException"><span data-ttu-id="1124b-445"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトのクォータを超える書き込みが試行されています。</span><span class="sxs-lookup"><span data-stu-id="1124b-445">The write attempt exceeds the quota for the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.ValueTask WriteAsync (ReadOnlyMemory&lt;byte&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Threading.Tasks.ValueTask WriteAsync(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;byte&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask" Usage="isolatedStorageFileStream.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1124b-446">読み取り専用のバイト メモリであり、ここから現在の分離ストレージ ファイル ストリームにバイトをコピーします。</span><span class="sxs-lookup"><span data-stu-id="1124b-446">The read-only byte memory from which to copy bytes to the current isolated storage file stream.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1124b-447">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="1124b-447">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="1124b-448">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-448">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="1124b-449">読み取り専用のバイト メモリ範囲から構成されるバッファーから読み取られたデータを利用し、分離ストレージ ファイル ストリーム オブジェクトにバイトのブロックを非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1124b-449">Asynchronously writes a block of bytes to the isolated storage file stream object using data read from a buffer consisting of a read-only byte memory range.</span></span></summary>
        <returns><span data-ttu-id="1124b-450">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="1124b-450">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(unsigned int8[] buffer, int32 offset, int32 count, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : byte[] * int * int * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="isolatedStorageFileStream.WriteAsync (buffer, offset, count, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="offset" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="1124b-451">バイト配列であり、ここから現在の分離ストレージ ファイル ストリームにバイトをコピーします。</span><span class="sxs-lookup"><span data-stu-id="1124b-451">The byte array from which to copy bytes to the current isolated storage file stream.</span></span></param>
        <param name="offset"><span data-ttu-id="1124b-452"><paramref name="buffer" /> のバイト オフセットであり、ここから開始します。</span><span class="sxs-lookup"><span data-stu-id="1124b-452">The byte offset in <paramref name="buffer" /> from which to begin.</span></span></param>
        <param name="count"><span data-ttu-id="1124b-453">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="1124b-453">The maximum number of bytes to write.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="1124b-454">キャンセル要求を監視するためのトークン。</span><span class="sxs-lookup"><span data-stu-id="1124b-454">The token to monitor for cancellation requests.</span></span> <span data-ttu-id="1124b-455">既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="1124b-455">The default value is <see cref="P:System.Threading.CancellationToken.None" />.</span></span></param>
        <summary><span data-ttu-id="1124b-456">バイト配列から構成されるバッファーから読み取られたデータを利用し、分離ストレージ ファイル ストリーム オブジェクトにバイトのブロックを非同期で書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1124b-456">Asynchronously writes a block of bytes to the isolated storage file stream object using data read from a buffer consisting of a byte array.</span></span></summary>
        <returns><span data-ttu-id="1124b-457">非同期の書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="1124b-457">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="1124b-458">書き込み操作が成功した場合、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトの現在の位置は、書き込まれたバイト数だけ進んでいます。</span><span class="sxs-lookup"><span data-stu-id="1124b-458">If the write operation is successful, the current position of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is advanced by the number of bytes written.</span></span> <span data-ttu-id="1124b-459">例外が発生した場合、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトの現在の位置は変更されません。</span><span class="sxs-lookup"><span data-stu-id="1124b-459">If an exception occurs, the current position of the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object is unchanged.</span></span>  

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteByte">
      <MemberSignature Language="C#" Value="public override void WriteByte (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteByte(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteByte (value As Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteByte(System::Byte value);" />
      <MemberSignature Language="F#" Value="override this.WriteByte : byte -&gt; unit" Usage="isolatedStorageFileStream.WriteByte value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1124b-460">分離ストレージ ファイルに書き込むバイト値。</span><span class="sxs-lookup"><span data-stu-id="1124b-460">The byte value to write to the isolated storage file.</span></span></param>
        <summary><span data-ttu-id="1124b-461"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトに 1 バイトを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1124b-461">Writes a single byte to the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1124b-462">次のコード例は、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte%2A> メソッドを使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> オブジェクトからデータを読み取る方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1124b-462">The following code example demonstrates how the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte%2A> method can be used to read data from an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object.</span></span> <span data-ttu-id="1124b-463">この例の完全なコンテキストについては、「<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> の概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1124b-463">For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.</span></span>  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#14)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#14)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException"><span data-ttu-id="1124b-464"><see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> オブジェクトのクォータを超える書き込みが試行されています。</span><span class="sxs-lookup"><span data-stu-id="1124b-464">The write attempt exceeds the quota for the <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" /> object.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
