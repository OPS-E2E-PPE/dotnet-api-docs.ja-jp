<Type Name="KeyContainerPermissionAccessEntryEnumerator" FullName="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="489b5cc181cb427df467a68bbe13cca851612897" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78834585" /></Metadata><TypeSignature Language="C#" Value="public sealed class KeyContainerPermissionAccessEntryEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit KeyContainerPermissionAccessEntryEnumerator extends System.Object implements class System.Collections.IEnumerator" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class KeyContainerPermissionAccessEntryEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyContainerPermissionAccessEntryEnumerator sealed : System::Collections::IEnumerator" />
  <TypeSignature Language="F#" Value="type KeyContainerPermissionAccessEntryEnumerator = class&#xA;    interface IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit KeyContainerPermissionAccessEntryEnumerator extends System.Object implements class System.Collections.IEnumerator" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d5a4f-101"><see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> 内の <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" /> オブジェクトの列挙子を表します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-101">Represents the enumerator for <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> objects in a <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a4f-102">列挙子は、コレクション内のデータの読み取りのみを許可します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-102">Enumerators allow only reading the data in the collection.</span></span> <span data-ttu-id="d5a4f-103">列挙子を使用して、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-103">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="d5a4f-104">最初、列挙子はコレクションの先頭の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-104">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="d5a4f-105"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> メソッドは、この位置に列挙子を戻します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-105">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="d5a4f-106">この位置で <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> プロパティを呼び出すと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-106">At this position, calling the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception.</span></span> <span data-ttu-id="d5a4f-107">したがって、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> プロパティの値を読み取る前に、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> メソッドを呼び出して、列挙子をコレクションの最初の要素に進めておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-107">Therefore, you must call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="d5a4f-108"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> は、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> または <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-108"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the same object until either <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="d5a4f-109"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> は、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> を次の要素に進めます。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-109"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> sets <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="d5a4f-110">列挙子は、コレクションの末尾を越えると、コレクションの最後の要素の後に位置付けられるので、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> を呼び出すと `false` が返されます。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-110">After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="d5a4f-111">前回 <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> を呼び出して `false` が返された場合に、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> を呼び出すと例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-111">If the last call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="d5a4f-112"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> をコレクションの最初の要素にリセットするには、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> を呼び出し、その後に <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-112">To reset <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> to the first element of the collection, call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> followed by a call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="d5a4f-113">列挙子は、コレクションが変更されない限り有効です。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-113">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="d5a4f-114">要素の追加、変更、削除などの変更がコレクションに対して行われた場合、列挙子はなりに無効になり、次に <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> または <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> を呼び出すと <xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-114">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> or <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="d5a4f-115"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> と <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>の呼び出しの間でコレクションが変更された場合、列挙子が既に無効になっていても、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> は現在設定されている要素を返します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-115">If the collection is modified between calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> and <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A>, <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> returns the element to which it is currently set, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="d5a4f-116">列挙子はコレクションに排他アクセスできないため、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-116">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="d5a4f-117">コレクションが同期されていても、他のスレッドがコレクションを変更する場合があり、このときは列挙子から例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-117">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="d5a4f-118">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-118">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyContainerPermissionAccessEntryEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyContainerPermissionAccessEntryEnumerator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Security.Permissions.KeyContainerPermissionAccessEntry Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Permissions.KeyContainerPermissionAccessEntry Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As KeyContainerPermissionAccessEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Permissions::KeyContainerPermissionAccessEntry ^ Current { System::Security::Permissions::KeyContainerPermissionAccessEntry ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Security.Permissions.KeyContainerPermissionAccessEntry" Usage="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.KeyContainerPermissionAccessEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5a4f-119">コレクション内の現在のエントリを取得します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-119">Gets the current entry in the collection.</span></span></summary>
        <value><span data-ttu-id="d5a4f-120">コレクション内にある現在の <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-120">The current <see cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry" /> object in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a4f-121">列挙子が作成されると、オブジェクトを指していないので、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> プロパティは無効になり、アクセスされた場合は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-121">When the enumerator is created, it does not point to an object, so the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property is not valid and will throw an exception if it is accessed.</span></span> <span data-ttu-id="d5a4f-122">まず、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> メソッドを呼び出して、カーソルをコレクション内の最初のオブジェクトに配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-122">You must first call the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method to position the cursor at the first object in the collection.</span></span>  
  
 <span data-ttu-id="d5a4f-123"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> を介在させることなく、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> プロパティを複数回取得すると、毎回同じ <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-123">Getting the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property multiple times with no intervening calls to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> will return the same <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object each time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d5a4f-124"><see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> メソッドを先に呼び出す前に <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> プロパティにアクセスしています。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-124">The <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> property is accessed before first calling the <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> method.</span></span> <span data-ttu-id="d5a4f-125">カーソルは、コレクション内の最初のオブジェクトより前に位置しています。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-125">The cursor is located before the first object in the collection.</span></span>  
  
<span data-ttu-id="d5a4f-126">または</span><span class="sxs-lookup"><span data-stu-id="d5a4f-126">-or-</span></span> 
<span data-ttu-id="d5a4f-127"><see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> メソッドの呼び出しが <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> を返した (カーソルがコレクション内の最後のオブジェクトの後ろに配置されていることを示す) 後で <see langword="false" /> プロパティにアクセスしています。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-127">The <see cref="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current" /> property is accessed after a call to the <see cref="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" /> method returns <see langword="false" />, which indicates that the cursor is located after the last object in the collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberSignature Language="F#" Value="abstract member MoveNext : unit -&gt; bool&#xA;override this.MoveNext : unit -&gt; bool" Usage="keyContainerPermissionAccessEntryEnumerator.MoveNext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5a4f-128">コレクションの次の要素に移動します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-128">Moves to the next element in the collection.</span></span></summary>
        <returns><span data-ttu-id="d5a4f-129">列挙子が次の要素に正常に進んだ場合は <see langword="true" />。列挙子がコレクションの末尾を越えた場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-129"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a4f-130"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> メソッドは、コレクション内にオブジェクトがない場合に `false` を直ちに返します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-130">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> method returns `false` immediately if there are no objects in the collection.</span></span>  
  
 <span data-ttu-id="d5a4f-131"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> は、コレクションの末尾に到達するまで `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-131"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> returns `true` until it has reached the end of the collection.</span></span> <span data-ttu-id="d5a4f-132">次に、後続の呼び出しごとに `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-132">It then returns `false` for each successive call.</span></span> <span data-ttu-id="d5a4f-133">ただし、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> が `false`を返した後、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> プロパティにアクセスすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-133">However, once <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> has returned `false`, accessing the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property throws an exception.</span></span>  
  
 <span data-ttu-id="d5a4f-134">作成時に、列挙子はコレクション内の最初の <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> オブジェクトの前に配置され、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> の最初の呼び出しによって、列挙子はコレクション内の最初のオブジェクトに配置されます。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-134">Upon creation, an enumerator is positioned before the first <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> object in the collection, and the first call to <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> positions the enumerator to the first object in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="keyContainerPermissionAccessEntryEnumerator.Reset " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d5a4f-135">列挙子をコレクションの先頭にリセットします。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-135">Resets the enumerator to the beginning of the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a4f-136">列挙子は順方向専用に移動します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-136">An enumerator moves in a forward-only direction.</span></span> <span data-ttu-id="d5a4f-137">このメソッドを使用して、コレクションの先頭に戻ります。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-137">Use this method to return to the beginning of the collection.</span></span>  
  
 <span data-ttu-id="d5a4f-138"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> メソッドは、カーソルをコレクション内の最初のオブジェクトに配置します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-138">The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A> method positions the cursor at the first object in the collection.</span></span> <span data-ttu-id="d5a4f-139"><xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>を呼び出した後、カーソルを最初のオブジェクトに移動するために <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> を呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-139">After calling <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A>, you do not need to call <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A> to move the cursor forward to the first object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IEnumerator::Current { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IEnumerator.Current : obj" Usage="System.Collections.IEnumerator.Current" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d5a4f-140">コレクション内の現在のオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-140">Gets the current object in the collection.</span></span></summary>
        <value><span data-ttu-id="d5a4f-141">コレクション内にある現在のオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-141">The current object in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5a4f-142">このメソッドは呼び出さないでください。代わりに、<xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> プロパティを使用してください。</span><span class="sxs-lookup"><span data-stu-id="d5a4f-142">Do not call this method; use the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A> property instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
