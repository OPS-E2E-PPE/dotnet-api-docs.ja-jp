<Type Name="RegularExpressionAttribute" FullName="System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bd22c921381c911542051a6e012f6051c21066b4" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82479095" /></Metadata><TypeSignature Language="C#" Value="public class RegularExpressionAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegularExpressionAttribute extends System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class RegularExpressionAttribute&#xA;Inherits ValidationAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegularExpressionAttribute : System::ComponentModel::DataAnnotations::ValidationAttribute" />
  <TypeSignature Language="F#" Value="type RegularExpressionAttribute = class&#xA;    inherit ValidationAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ComponentModel.DataAnnotations" FromVersion="4.0.0.0" To="System.ComponentModel.Annotations" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0;netcore-2.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ComponentModel.DataAnnotations.ValidationAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.0;netcore-3.1;net-5.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d7df9-101">ASP.NET Dynamic Data のデータ フィールド値が指定した正規表現に一致しなければならないことを指定します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-101">Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7df9-102">正規表現に対してプロパティの値を検証する必要がある場合は、RegularExpressionAttribute 属性をプロパティに適用します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-102">You apply the RegularExpressionAttribute attribute to a property when you need to validate values for the property against a regular expression.</span></span> <span data-ttu-id="d7df9-103">正規表現を使用すると、有効な値の形式を厳密に指定できます。</span><span class="sxs-lookup"><span data-stu-id="d7df9-103">The regular expression enables you to specify very precisely the format of valid values.</span></span> <span data-ttu-id="d7df9-104">Pattern プロパティには、正規表現が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d7df9-104">The Pattern property contains the regular expression.</span></span> <span data-ttu-id="d7df9-105">プロパティの値が null または空の文字列 ("") の場合、値は RegularExpressionAttribute 属性の検証に自動的に合格します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-105">If the value of the property is null or an empty string (""), the value automatically passes validation for the RegularExpressionAttribute attribute.</span></span> <span data-ttu-id="d7df9-106">値が `null` または空の文字列でないことを検証するには、 **RequiredAttribute**属性を使用します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-106">To validate that the value is not `null` or an empty string, use the **RequiredAttribute** attribute.</span></span> 

<span data-ttu-id="d7df9-107">正規表現は、パターンの最後に `$` `^` を使用するのではなく、完全に一致したものを検索し、使用した場合と同じ結果を生成します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-107">The regular expression searches for an exact match, not using `^` before and `$` at the end of the pattern produces the same results as using it.</span></span> <span data-ttu-id="d7df9-108">検索にヒットするには、`.*`にパターンを付加して追加します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-108">For a search hit, prepend and append the pattern with `.*`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d7df9-109">次の例は、<xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> 属性を使用して FirstName と LastName のデータフィールドを検証する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d7df9-109">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to validate the FirstName and LastName data fields.</span></span> <span data-ttu-id="d7df9-110">正規表現では、最大40の大文字と小文字を使用できます。</span><span class="sxs-lookup"><span data-stu-id="d7df9-110">The regular expression allows up to 40 uppercase and lowercase characters.</span></span> <span data-ttu-id="d7df9-111">この例では、次のタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-111">The example performs the following tasks:</span></span>  
  
-   <span data-ttu-id="d7df9-112">メタデータ部分クラスと関連付けられたメタデータクラスを実装します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-112">Implements a metadata partial class and the associated metadata class.</span></span>  
  
-   <span data-ttu-id="d7df9-113">関連付けられたメタデータクラスで、<xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> 属性を FirstName および LastName データフィールドに適用して、パターンとカスタムエラーメッセージを指定します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-113">In the associated metadata class, applies the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to the FirstName and LastName data fields, specifying the pattern and custom error messages.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegularExpressionAttribute (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegularExpressionAttribute(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DataAnnotations.RegularExpressionAttribute : string -&gt; System.ComponentModel.DataAnnotations.RegularExpressionAttribute" Usage="new System.ComponentModel.DataAnnotations.RegularExpressionAttribute pattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="d7df9-114">データ フィールド値の検証に使用する正規表現。</span><span class="sxs-lookup"><span data-stu-id="d7df9-114">The regular expression that is used to validate the data field value.</span></span></param>
        <summary><span data-ttu-id="d7df9-115"><see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-115">Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d7df9-116">次の例は、データフィールドに <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> を適用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d7df9-116">The following example shows how to apply the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> to a data field.</span></span> <span data-ttu-id="d7df9-117">検証が失敗した場合、この例のコードでは、動的データによって提供された検証エラーメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="d7df9-117">If validation fails, the code in the example displays the validation error message that is provided by Dynamic Data.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d7df9-118"><paramref name="pattern" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="d7df9-118"><paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FormatErrorMessage">
      <MemberSignature Language="C#" Value="public override string FormatErrorMessage (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string FormatErrorMessage(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FormatErrorMessage (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ FormatErrorMessage(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.FormatErrorMessage : string -&gt; string" Usage="regularExpressionAttribute.FormatErrorMessage name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d7df9-119">検証失敗の原因になったフィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="d7df9-119">The name of the field that caused the validation failure.</span></span></param>
        <summary><span data-ttu-id="d7df9-120">正規表現検証が失敗した場合に表示するエラー メッセージを書式設定します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-120">Formats the error message to display if the regular expression validation fails.</span></span></summary>
        <returns><span data-ttu-id="d7df9-121">形式を設定したエラー メッセージです。</span><span class="sxs-lookup"><span data-stu-id="d7df9-121">The formatted error message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7df9-122"><xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> は、検証エラーの原因となったデータフィールドの名前を使用して、エラーメッセージを作成します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-122">The <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> creates the error message by using the name of the data field that caused the validation failure.</span></span> <span data-ttu-id="d7df9-123">カスタム検証属性でこのメソッドをオーバーライドして、エラーの作成方法をカスタマイズしたり、実行時に評価するパラメーターを含むより複雑なメッセージを提供したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="d7df9-123">You can override this method in custom validation attributes to customize how errors are created or to provide a more complex message that contains parameters that you evaluate at run time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7df9-124">現在の属性の形式が誤っています。</span><span class="sxs-lookup"><span data-stu-id="d7df9-124">The current attribute is ill-formed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7df9-125"><see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> は有効な正規表現ではありません。</span><span class="sxs-lookup"><span data-stu-id="d7df9-125">The <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> is not a valid regular expression.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.IsValid : obj -&gt; bool" Usage="regularExpressionAttribute.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d7df9-126">検証するデータ フィールド値。</span><span class="sxs-lookup"><span data-stu-id="d7df9-126">The data field value to validate.</span></span></param>
        <summary><span data-ttu-id="d7df9-127">ユーザーが入力した値が正規表現パターンと一致するかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="d7df9-127">Checks whether the value entered by the user matches the regular expression pattern.</span></span></summary>
        <returns><span data-ttu-id="d7df9-128">検証が成功した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d7df9-128"><see langword="true" /> if validation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="d7df9-129">このオーバーライドは、`value` フィールドの特定の正規表現の一致を実行します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-129">This override performs the specific regular expression matching of `value` field.</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="d7df9-130">データ フィールド値が正規表現パターンと一致しませんでした。</span><span class="sxs-lookup"><span data-stu-id="d7df9-130">The data field value did not match the regular expression pattern.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d7df9-131">現在の属性の形式が誤っています。</span><span class="sxs-lookup"><span data-stu-id="d7df9-131">The current attribute is ill-formed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d7df9-132"><see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> は有効な正規表現ではありません。</span><span class="sxs-lookup"><span data-stu-id="d7df9-132"><see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> is not a valid regular expression.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeoutInMilliseconds">
      <MemberSignature Language="C#" Value="public int MatchTimeoutInMilliseconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MatchTimeoutInMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeoutInMilliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MatchTimeoutInMilliseconds { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeoutInMilliseconds : int with get, set" Usage="System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7df9-133">操作がタイムアウトする前に 1 つの一致操作を実行するミリ秒単位の時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-133">Gets or sets the amount of time in milliseconds to execute a single matching operation before the operation times out.</span></span></summary>
        <value><span data-ttu-id="d7df9-134">1 つの一致操作を実行するミリ秒単位の時間。</span><span class="sxs-lookup"><span data-stu-id="d7df9-134">The amount of time in milliseconds to execute a single matching operation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : string" Usage="System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7df9-135">正規表現パターンを取得します。</span><span class="sxs-lookup"><span data-stu-id="d7df9-135">Gets the regular expression pattern.</span></span></summary>
        <value><span data-ttu-id="d7df9-136">照合するパターン。</span><span class="sxs-lookup"><span data-stu-id="d7df9-136">The pattern to match.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
