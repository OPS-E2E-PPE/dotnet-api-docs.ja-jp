<Type Name="ISerializable" FullName="System.Runtime.Serialization.ISerializable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ee75ecf7b1938e5642e874d12f4cf3685c2b87b" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75083326" /></Metadata><TypeSignature Language="C#" Value="public interface ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISerializable" />
  <TypeSignature Language="F#" Value="type ISerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>オブジェクトが独自のシリアル化および逆シリアル化を制御できるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 シリアル化される可能性のあるすべてのクラスは、<xref:System.SerializableAttribute>でマークする必要があります。 クラスがシリアル化プロセスを制御する必要がある場合は、<xref:System.Runtime.Serialization.ISerializable> インターフェイスを実装できます。 <xref:System.Runtime.Serialization.Formatter> は、シリアル化時に <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> を呼び出し、指定された <xref:System.Runtime.Serialization.SerializationInfo> に、オブジェクトを表すために必要なすべてのデータを設定します。 <xref:System.Runtime.Serialization.Formatter> は、グラフ内のオブジェクトの型を使用して <xref:System.Runtime.Serialization.SerializationInfo> を作成します。 プロキシを送信する必要があるオブジェクトは、<xref:System.Runtime.Serialization.SerializationInfo> で <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> および <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> メソッドを使用して、送信される情報を変更できます。  
  
 クラスの継承の場合、<xref:System.Runtime.Serialization.ISerializable>を実装する基本クラスから派生したクラスをシリアル化することができます。 この場合、派生クラスは <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>の実装内の <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> の基本クラスの実装を呼び出す必要があります。 それ以外の場合、基本クラスのデータはシリアル化されません。  
  
 <xref:System.Runtime.Serialization.ISerializable> インターフェイスは、シグネチャコンストラクター (<xref:System.Runtime.Serialization.SerializationInfo> 情報、<xref:System.Runtime.Serialization.StreamingContext> コンテキスト) を持つコンストラクターを意味します。 逆シリアル化時には、<xref:System.Runtime.Serialization.SerializationInfo> のデータがフォーマッタによって逆シリアル化された後にのみ、現在のコンストラクターが呼び出されます。 一般に、クラスがシールされていない場合は、このコンストラクターを保護する必要があります。  
  
 オブジェクトを逆シリアル化する順序を保証することはできません。 たとえば、ある型がまだ逆シリアル化されていない型を参照している場合、例外が発生します。 このような依存関係を持つ型を作成する場合は、`IDeserializationCallback` インターフェイスと `OnDeserialization` メソッドを実装することで、問題を回避できます。  
  
 シリアル化アーキテクチャは、<xref:System.Object>を拡張する型と同じ <xref:System.MarshalByRefObject> を拡張するオブジェクト型を処理します。 これらの型は、<xref:System.SerializableAttribute> でマークし、他のオブジェクト型として <xref:System.Runtime.Serialization.ISerializable> インターフェイスを実装できます。 オブジェクトの状態がキャプチャされ、ストリームに保持されます。  
  
 これらの型が <xref:System.Runtime.Remoting>によって使用されている場合、リモート処理インフラストラクチャによって、一般的なシリアル化をプリエンプション、代わりにプロキシを <xref:System.MarshalByRefObject>にシリアル化するサロゲートが提供されます。 サロゲートは、特定の型のオブジェクトをシリアル化および逆シリアル化する方法を認識するヘルパーです。 ほとんどの場合、ユーザーに表示されないプロキシは <xref:System.Runtime.Remoting.ObjRef>型になります。  
  
 一般的な設計パターンとして、クラスが serializable 属性でマークされ、<xref:System.MarshalByRefObject>が拡張されることは珍しくありません。 開発者は、これら2つの特性を組み合わせるときに、考えられるシリアル化とリモート処理のシナリオについて慎重に検討する必要があります これが適用される可能性がある例としては、<xref:System.IO.MemoryStream>があります。 <xref:System.IO.MemoryStream> (<xref:System.IO.Stream>) の基本クラスは <xref:System.MarshalByRefObject>から拡張されますが、<xref:System.IO.MemoryStream> の状態をキャプチャして、そのまま復元することもできます。 このため、このストリームの状態をデータベースにシリアル化して、後で復元することは意味があるかもしれません。 ただし、リモート処理によって使用される場合、この型のオブジェクトはプロキシ化されます。  
  
 <xref:System.MarshalByRefObject>を拡張するクラスのシリアル化の詳細については、「<xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>」を参照してください。 <xref:System.Runtime.Serialization.ISerializable>の実装の詳細については、「[カスタムシリアル化](~/docs/standard/serialization/custom-serialization.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Runtime.Serialization.ISerializable> インターフェイスを使用して、クラスのカスタムシリアル化動作を定義する方法を示しています。  
  
 [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>オブジェクトが独自のシリアル化と逆シリアル化に参加できるようにするには、このインターフェイスを実装します。</para></block>
    <altmember cref="T:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector" />
    <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML シリアル化および SOAP シリアル化</related>
    <related type="Article" href="~/docs/standard/serialization/custom-serialization.md">カスタムのシリアル化</related>
  </Docs>
  <Members>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="iSerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
        <summary><see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、オブジェクトをシリアル化するために必要なデータを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Serialization.SerializationInfo> に含まれるオブジェクトは、フォーマッタによって自動的に追跡およびシリアル化されます。  
  
 <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> を呼び出すコードには、シリアル化サービスを提供するための <xref:System.Security.Permissions.SecurityPermission> が必要です。 <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType> (関連する列挙体)  
  
> [!NOTE]
>  シリアル化時、このメソッドが呼び出される回数は、各オブジェクト インスタンスにつき 1 回だけであるとは限りません。 したがって、呼び出しの回数に関係なく同じ動作が保たれるようにメソッドを実装する必要があります。  
  
   
  
## Examples  
 次の例では、<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> メソッドを使用して、シリアル化されたオブジェクトに代替値を設定します。 このコードでは、オブジェクトがシリアル化されるときに、<xref:System.Runtime.Serialization.SerializationInfo> クラスの <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> メソッドを使用して代替値を格納します。 逆に、逆シリアル化中に `Person` クラスのコンストラクターが呼び出されると、alternatve 値は <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A> メソッドを使用して取得され、オブジェクトのフィールドに再割り当てされます。  
  
 [!code-csharp[ISerializable_GetObjectData#0](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable_GetObjectData/cs/ISerializable_GetObjectData.cs#0)]
 [!code-vb[ISerializable_GetObjectData#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable_GetObjectData/vb/ISerializable_GetObjectData.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <related type="Article" href="~/docs/standard/serialization/custom-serialization.md">カスタムのシリアル化</related>
      </Docs>
    </Member>
  </Members>
</Type>
