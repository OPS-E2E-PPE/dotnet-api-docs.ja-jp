<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="53ef0982a772d7a490be29f2d4441badee01431c" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75164732" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DataContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netstandard-2.1;netcore-1.0;netcore-1.1;netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ebd71-101">この型が、データ コントラクトを定義または実装し、<see cref="T:System.Runtime.Serialization.DataContractSerializer" /> などのシリアライザーによってシリアル化可能であることを指定します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-101">Specifies that the type defines or implements a data contract and is serializable by a serializer, such as the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span></span> <span data-ttu-id="ebd71-102">型をシリアル化可能にするには、型作成者が、型のデータ コントラクトを定義する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ebd71-102">To make their type serializable, type authors must define a data contract for their type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebd71-103"><xref:System.Runtime.Serialization.DataContractAttribute> によるシリアル化および逆シリアル化操作で使用される型 (クラス、構造体、または列挙) に対して、<xref:System.Runtime.Serialization.DataContractSerializer> 属性を適用します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-103">Apply the <xref:System.Runtime.Serialization.DataContractAttribute> attribute to types (classes, structures, or enumerations) that are used in serialization and deserialization operations by the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="ebd71-104">Windows Communication Foundation (WCF) インフラストラクチャを使用してメッセージを送受信する場合は、メッセージで送信されるデータを保持および操作するクラスに <xref:System.Runtime.Serialization.DataContractAttribute> も適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ebd71-104">If you send or receive messages by using the Windows Communication Foundation (WCF) infrastructure, you should also apply the <xref:System.Runtime.Serialization.DataContractAttribute> to any classes that hold and manipulate data sent in messages.</span></span> <span data-ttu-id="ebd71-105">データコントラクトの詳細については、「[データコントラクトの使用](~/docs/framework/wcf/feature-details/using-data-contracts.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ebd71-105">For more information about data contracts, see [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
 <span data-ttu-id="ebd71-106">シリアル化する値を保持するフィールド、プロパティ、またはイベントにも、<xref:System.Runtime.Serialization.DataMemberAttribute> を適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ebd71-106">You must also apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to any field, property, or event that holds values you want to serialize.</span></span> <span data-ttu-id="ebd71-107"><xref:System.Runtime.Serialization.DataContractAttribute> の適用によって、<xref:System.Runtime.Serialization.DataContractSerializer> によるデータのシリアル化と逆シリアル化を明示的に有効にします。</span><span class="sxs-lookup"><span data-stu-id="ebd71-107">By applying the <xref:System.Runtime.Serialization.DataContractAttribute>, you explicitly enable the <xref:System.Runtime.Serialization.DataContractSerializer> to serialize and deserialize the data.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ebd71-108">プライベートなフィールドに対して <xref:System.Runtime.Serialization.DataMemberAttribute> を適用できます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-108">You can apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to private fields.</span></span> <span data-ttu-id="ebd71-109">フィールドによって返されるデータは (プライベートであっても) シリアル化と逆シリアル化の対象となるため、悪意のあるユーザーやプロセスによって傍受される可能性があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ebd71-109">Be aware that the data returned by the field (even if it is private) is serialized and deserialized, and thus can be viewed or intercepted by a malicious user or process.</span></span>  
  
 <span data-ttu-id="ebd71-110">データコントラクトの詳細については、「[データコントラクトの使用](~/docs/framework/wcf/feature-details/using-data-contracts.md)」に記載されているトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ebd71-110">For more information about data contracts, see the topics listed in [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
## <a name="data-contracts"></a><span data-ttu-id="ebd71-111">データ コントラクト</span><span class="sxs-lookup"><span data-stu-id="ebd71-111">Data Contracts</span></span>  
 <span data-ttu-id="ebd71-112">*データコントラクト*は、各フィールドの名前とデータ型を持つ一連のフィールドの抽象的な説明です。</span><span class="sxs-lookup"><span data-stu-id="ebd71-112">A *data contract* is an abstract description of a set of fields with a name and data type for each field.</span></span> <span data-ttu-id="ebd71-113">データ コントラクトは、単一の実装の外部に存在することで、異なるプラットフォームでのサービスの相互運用を可能にします。</span><span class="sxs-lookup"><span data-stu-id="ebd71-113">The data contract exists outside of any single implementation to allow services on different platforms to interoperate.</span></span> <span data-ttu-id="ebd71-114">サービス間で渡されるデータが同一のコントラクトに準拠している限り、すべてのサービスがそのデータを処理できます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-114">As long as the data passed between the services conforms to the same contract, all the services can process the data.</span></span> <span data-ttu-id="ebd71-115">この処理は、*疎結合システム*とも呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-115">This processing is also known as a *loosely coupled system*.</span></span> <span data-ttu-id="ebd71-116">データ コントラクトは、アプリケーションによる処理が可能なようにデータを伝送する方法を指定するという点でインターフェイスに似ています。</span><span class="sxs-lookup"><span data-stu-id="ebd71-116">A data contract is also similar to an interface in that the contract specifies how data must be delivered so that it can be processed by an application.</span></span> <span data-ttu-id="ebd71-117">たとえば、"FirstName" と "LastName" という 2 つのテキスト フィールドがある "Person" という名前のデータ型をデータ コントラクトで呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-117">For example, the data contract may call for a data type named "Person" that has two text fields, named "FirstName" and "LastName".</span></span> <span data-ttu-id="ebd71-118">データ コントラクトを作成するには、<xref:System.Runtime.Serialization.DataContractAttribute> をクラスに適用し、シリアル化する必要がある任意のフィールドまたはプロパティに <xref:System.Runtime.Serialization.DataMemberAttribute> を適用します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-118">To create a data contract, apply the <xref:System.Runtime.Serialization.DataContractAttribute> to the class and apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to any fields or properties that must be serialized.</span></span> <span data-ttu-id="ebd71-119">データがシリアル化されるときに、データは、型に暗黙的に組み込まれたデータ コントラクトに従って処理されます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-119">When serialized, the data conforms to the data contract that is implicitly built into the type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ebd71-120">データ コントラクトは、継承動作の点で、実際のインターフェイスとは大きく異なります。</span><span class="sxs-lookup"><span data-stu-id="ebd71-120">A data contract differs significantly from an actual interface in its inheritance behavior.</span></span> <span data-ttu-id="ebd71-121">インターフェイスは、任意の派生する型によって継承されます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-121">Interfaces are inherited by any derived types.</span></span> <span data-ttu-id="ebd71-122"><xref:System.Runtime.Serialization.DataContractAttribute> を基本クラスに適用しても、派生する型は、属性も動作も継承しません。</span><span class="sxs-lookup"><span data-stu-id="ebd71-122">When you apply the <xref:System.Runtime.Serialization.DataContractAttribute> to a base class, the derived types do not inherit the attribute or the behavior.</span></span> <span data-ttu-id="ebd71-123">ただし、派生する型にデータ コントラクトがある場合、基本クラスのデータ メンバーはシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-123">However, if a derived type has a data contract, the data members of the base class are serialized.</span></span> <span data-ttu-id="ebd71-124">しかし、派生クラスの新しいメンバーをシリアル化可能にするには、新しいメンバーに対して <xref:System.Runtime.Serialization.DataMemberAttribute> を適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ebd71-124">However, you must apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to new members in a derived class to make them serializable.</span></span>  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a><span data-ttu-id="ebd71-125">XML スキーマ ドキュメントと SvcUtil ツール</span><span class="sxs-lookup"><span data-stu-id="ebd71-125">XML Schema Documents and the SvcUtil Tool</span></span>  
 <span data-ttu-id="ebd71-126">他のサービスとデータを交換する場合は、データ コントラクトを記述する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ebd71-126">If you are exchanging data with other services, you must describe the data contract.</span></span> <span data-ttu-id="ebd71-127"><xref:System.Runtime.Serialization.DataContractSerializer> の現在のバージョンでは、XML スキーマを使用してデータ コントラクトを定義できます </span><span class="sxs-lookup"><span data-stu-id="ebd71-127">For the current version of the <xref:System.Runtime.Serialization.DataContractSerializer>, an XML schema can be used to define data contracts.</span></span> <span data-ttu-id="ebd71-128">(その他の形式のメタデータ/説明は、同じ目的で使用できます)。アプリケーションから XML スキーマを作成するには、 [ServiceModel メタデータユーティリティツール (svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)と **/dconly**コマンドラインオプションを使用します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-128">(Other forms of metadata/description could be used for the same purpose.) To create an XML schema from your application, use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) with the **/dconly** command line option.</span></span> <span data-ttu-id="ebd71-129">ツールへの入力が既定ではアセンブリの場合、ツーは、そのアセンブリで検出されたすべてのデータ コントラクトの型を定義する XML スキーマ セットを生成します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-129">When the input to the tool is an assembly, by default, the tool generates a set of XML schemas that define all the data contract types found in that assembly.</span></span> <span data-ttu-id="ebd71-130">逆に、Svcutil.exe ツールは、データ コントラクトによって表現できる構造体を使用する XML スキーマの要件に適合する Visual Basic または C# クラスの定義を作成するために使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-130">Conversely, you can also use the Svcutil.exe tool to create Visual Basic or C# class definitions that conform to the requirements of XML schemas that use constructs that can be expressed by data contracts.</span></span> <span data-ttu-id="ebd71-131">この場合、 **/dconly**コマンドラインオプションは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="ebd71-131">In this case, the **/dconly** command line option is not required.</span></span>  
  
 <span data-ttu-id="ebd71-132">Svcutil.exe ツールへの入力が既定では XML スキーマの場合、ツールは、クラスのセットを作成します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-132">If the input to the Svcutil.exe tool is an XML schema, by default, the tool creates a set of classes.</span></span> <span data-ttu-id="ebd71-133">これらのクラスを確認すれば、<xref:System.Runtime.Serialization.DataContractAttribute> が適用されていることがわかります。</span><span class="sxs-lookup"><span data-stu-id="ebd71-133">If you examine those classes, you find that the <xref:System.Runtime.Serialization.DataContractAttribute> has been applied.</span></span> <span data-ttu-id="ebd71-134">これらのクラスを使用して、他のサービスと交換する必要があるデータを処理するための新しいアプリケーションを作成できます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-134">You can use those classes to create a new application to process data that must be exchanged with other services.</span></span>  
  
 <span data-ttu-id="ebd71-135">また、Web サービス記述言語 (WSDL) ドキュメントを返すエンドポイントに対してツールを実行して、コードと構成を自動的に生成し、Windows Communication Foundation (WCF) クライアントを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-135">You can also run the tool against an endpoint that returns a Web Services Description Language (WSDL) document to automatically generate the code and configuration to create an Windows Communication Foundation (WCF) client.</span></span> <span data-ttu-id="ebd71-136">生成されたコードには、<xref:System.Runtime.Serialization.DataContractAttribute> でマークされた型が含まれます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-136">The generated code includes types that are marked with the <xref:System.Runtime.Serialization.DataContractAttribute>.</span></span>  
  
## <a name="reusing-existing-types"></a><span data-ttu-id="ebd71-137">既存の型の再利用</span><span class="sxs-lookup"><span data-stu-id="ebd71-137">Reusing Existing Types</span></span>  
 <span data-ttu-id="ebd71-138">データ コントラクトには、安定名とメンバー リストという 2 つの基本的な要件があります。</span><span class="sxs-lookup"><span data-stu-id="ebd71-138">A data contract has two basic requirements: a stable name and a list of members.</span></span> <span data-ttu-id="ebd71-139">安定名は、名前空間の URI (uniform resource identifier) とコントラクトのローカル名で構成されます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-139">The stable name consists of the namespace uniform resource identifier (URI) and the local name of the contract.</span></span> <span data-ttu-id="ebd71-140">既定では、<xref:System.Runtime.Serialization.DataContractAttribute> をクラスに適用すると、クラス名がローカル名として使用され、クラスの名前空間 (プレフィックスは `"http://schemas.datacontract.org/2004/07/"`) が名前空間 URI として使用されます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-140">By default, when you apply the <xref:System.Runtime.Serialization.DataContractAttribute> to a class, it uses the class name as the local name and the class's namespace (prefixed with `"http://schemas.datacontract.org/2004/07/"`) as the namespace URI.</span></span> <span data-ttu-id="ebd71-141"><xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> プロパティと <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> プロパティを設定することで、これらの既定値をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-141">You can override the defaults by setting the <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> and <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> properties.</span></span> <span data-ttu-id="ebd71-142"><xref:System.Runtime.Serialization.ContractNamespaceAttribute> を名前空間に適用することで、名前空間を変更することもできます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-142">You can also change the namespace by applying the <xref:System.Runtime.Serialization.ContractNamespaceAttribute> to the namespace.</span></span> <span data-ttu-id="ebd71-143">この機能は、目的どおりにデータを処理する既存の型が存在するが、データ コントラクトの名前空間とクラス名が異なる場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-143">Use this capability when you have an existing type that processes data exactly as you require but has a different namespace and class name from the data contract.</span></span> <span data-ttu-id="ebd71-144">既定値をオーバーライドすることで、既存の型を再利用しながら、シリアル化するデータをデータ コントラクトに準拠させることができます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-144">By overriding the default values, you can reuse your existing type and have the serialized data conform to the data contract.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ebd71-145">コードでは、`DataContract` の代わりに <xref:System.Runtime.Serialization.DataContractAttribute> という短い語を使用できます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-145">In any code, you can use the word `DataContract` instead of the longer <xref:System.Runtime.Serialization.DataContractAttribute>.</span></span>  
  
## <a name="versioning"></a><span data-ttu-id="ebd71-146">バージョン管理</span><span class="sxs-lookup"><span data-stu-id="ebd71-146">Versioning</span></span>  
 <span data-ttu-id="ebd71-147">データ コントラクトは、それ自体の新しいバージョンに対応できます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-147">A data contract can also accommodate later versions of itself.</span></span> <span data-ttu-id="ebd71-148">つまり、コントラクトの次のバージョンに追加データが含まれている場合、そのデータは保存され、送信側にそのまま返送されます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-148">That is, when a later version of the contract includes extra data, that data is stored and returned to a sender untouched.</span></span> <span data-ttu-id="ebd71-149">これを行うには、<xref:System.Runtime.Serialization.IExtensibleDataObject> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-149">To do this, implement the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.</span></span>  
  
 <span data-ttu-id="ebd71-150">バージョン管理の詳細については、「[データコントラクトのバージョン管理](~/docs/framework/wcf/feature-details/data-contract-versioning.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ebd71-150">For more information about versioning, see [Data Contract Versioning](~/docs/framework/wcf/feature-details/data-contract-versioning.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ebd71-151">`Person` が適用された <xref:System.Runtime.Serialization.DataContractAttribute> という名前のクラスをシリアル化および逆シリアル化する例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-151">The following example serializes and deserializes a class named `Person` to which the <xref:System.Runtime.Serialization.DataContractAttribute> has been applied.</span></span> <span data-ttu-id="ebd71-152"><xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> プロパティと <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> プロパティに、既定の設定をオーバーライドするための値が設定されていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ebd71-152">Note that the <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> and <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> properties have been set to values that override the default settings.</span></span>  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md"><span data-ttu-id="ebd71-153">データ コントラクトの使用</span><span class="sxs-lookup"><span data-stu-id="ebd71-153">Using Data Contracts</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ebd71-154">
          <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-154">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebd71-155"><see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> が明示的に設定されているかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-155">Gets whether <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="ebd71-156">名前が明示的に設定されている場合は <see langword="true" />。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-156"><see langword="true" /> if the name has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebd71-157"><see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> が明示的に設定されているかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-157">Gets whether <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="ebd71-158">名前空間が明示的に設定されている場合は <see langword="true" />。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-158"><see langword="true" /> if the namespace has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebd71-159">オブジェクト参照データを保持するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-159">Gets or sets a value that indicates whether to preserve object reference data.</span></span></summary>
        <value><span data-ttu-id="ebd71-160">標準 XML を使用してオブジェクト参照データを保持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ebd71-160"><see langword="true" /> to keep object reference data using standard XML; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ebd71-161">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="ebd71-161">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebd71-162">`IsReference` プロパティを使用して、<xref:System.Runtime.Serialization.DataContractSerializer> に、オブジェクト参照情報を保持する XML コンストラクトの挿入を指示します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-162">Use the `IsReference` property to instruct the <xref:System.Runtime.Serialization.DataContractSerializer> to insert XML constructs that preserve object reference information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebd71-163"><see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> が明示的に設定されているかどうかを取得します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-163">Gets whether <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="ebd71-164">参照が明示的に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ebd71-164"><see langword="true" /> if the reference has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebd71-165">型のデータ コントラクトの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-165">Gets or sets the name of the data contract for the type.</span></span></summary>
        <value><span data-ttu-id="ebd71-166">データ コントラクトのローカル名。</span><span class="sxs-lookup"><span data-stu-id="ebd71-166">The local name of a data contract.</span></span> <span data-ttu-id="ebd71-167">既定値は、この属性が適用されるクラスの名前です。</span><span class="sxs-lookup"><span data-stu-id="ebd71-167">The default is the name of the class that the attribute is applied to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebd71-168"><xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> プロパティを使用して、データ コントラクトに名前を割り当てます。この名前は、XML スキーマ内の型の名前にもなります。</span><span class="sxs-lookup"><span data-stu-id="ebd71-168">The <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> property is used to give a name to a data contract, which is the name of the type in XML schema.</span></span> <span data-ttu-id="ebd71-169">詳細については、「[データコントラクト名](~/docs/framework/wcf/feature-details/data-contract-names.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ebd71-169">For more information, see [Data Contract Names](~/docs/framework/wcf/feature-details/data-contract-names.md).</span></span>  
  
 <span data-ttu-id="ebd71-170">既定では、データ コントラクトの名前は、<xref:System.Runtime.Serialization.DataContractAttribute> が適用される型の名前になります。</span><span class="sxs-lookup"><span data-stu-id="ebd71-170">By default, the name of a data contract is the name of the type that the <xref:System.Runtime.Serialization.DataContractAttribute> is applied to.</span></span> <span data-ttu-id="ebd71-171">ただし、理由によっては、この既定の名前を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-171">However, there may be reasons to change this default name.</span></span> <span data-ttu-id="ebd71-172">1 つ目の理由は、既存のデータ コントラクトに準拠させる必要があるデータを既存の型で処理できるようにすることです。</span><span class="sxs-lookup"><span data-stu-id="ebd71-172">One reason is to allow an existing type to process data that must conform to an existing data contract.</span></span> <span data-ttu-id="ebd71-173">たとえば、`Person` という名前の型が存在するが、XML スキーマのデータ コントラクトでは、その型が `Customer` という名前でなければならないとします。</span><span class="sxs-lookup"><span data-stu-id="ebd71-173">For example, there exists a type named `Person` but the data contract, embodied in an XML schema, requires that the name be `Customer`.</span></span> <span data-ttu-id="ebd71-174">この場合、プロパティ値を `Customer` に設定することで、コントラクトを活用できます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-174">The contract can be satisfied by setting the property value to `Customer`.</span></span>  
  
 <span data-ttu-id="ebd71-175">2 つ目の理由は、型名としては無効な名前を生成できるようにすることです。</span><span class="sxs-lookup"><span data-stu-id="ebd71-175">A second reason is to allow the generation of names that are invalid as type names.</span></span> <span data-ttu-id="ebd71-176">たとえば、データ コントラクトで、型名としては許されない名前が必要な場合は、プロパティ値をその許されない名前に設定します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-176">For example, if a data contract demands a name that is not allowable as a type name, set the property value to that disallowed name.</span></span> <span data-ttu-id="ebd71-177">たとえば、文字列 "$value" は型名としては使用できませんが、<xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> プロパティの値としては設定できます。</span><span class="sxs-lookup"><span data-stu-id="ebd71-177">For instance, the string "$value" is disallowed as a type name but is allowed as a <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ebd71-178">型のデータ コントラクトの名前空間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-178">Gets or sets the namespace for the data contract for the type.</span></span></summary>
        <value><span data-ttu-id="ebd71-179">コントラクトの名前空間。</span><span class="sxs-lookup"><span data-stu-id="ebd71-179">The namespace of the contract.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ebd71-180">型で特定のデータ コントラクトに準拠するデータを返す必要がある場合は、このプロパティを使用して特定の名前空間を指定します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-180">Use this property to specify a particular namespace if your type must return data that complies with a specific data contract.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="ebd71-181">データを正常に送信するには、クライアントとサーバーの両方でデータ コントラクト内のデータの名前が同じでなければなりません。</span><span class="sxs-lookup"><span data-stu-id="ebd71-181">For the data to be successfully transmitted, the name of the data in a data contract must be the same in both the client and the server.</span></span> <span data-ttu-id="ebd71-182">プロジェクトを Visual Basic、既定では、各ファイルで定義されている名前空間にプレフィックスを追加します (プロジェクトの後に名前を付けた "ルート名前空間" と呼ばれます)。</span><span class="sxs-lookup"><span data-stu-id="ebd71-182">Visual Basic projects, by default, add a prefix to the namespace defined in each file (called the "root namespace," named after the project).</span></span> <span data-ttu-id="ebd71-183">このプレフィックスを追加すると、クライアントとサーバーの名前空間は同じ型の別々の名前空間になります。</span><span class="sxs-lookup"><span data-stu-id="ebd71-183">Adding this prefix causes the client and server namespaces to be different for the same type.</span></span> <span data-ttu-id="ebd71-184">解決策として、<xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> プロパティを "" に設定するか、このプロパティでデータコントラクトの名前空間を明示的に設定します。</span><span class="sxs-lookup"><span data-stu-id="ebd71-184">The solution is to set the <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> property to "", or to explicitly set the data contract namespace in this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
