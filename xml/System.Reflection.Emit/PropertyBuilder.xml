<Type Name="PropertyBuilder" FullName="System.Reflection.Emit.PropertyBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1aafbcb084b64d7e5eab9fa00e11d70d8c79e308" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78801799" /></Metadata><TypeSignature Language="C#" Value="public sealed class PropertyBuilder : System.Reflection.PropertyInfo" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyBuilder extends System.Reflection.PropertyInfo" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.PropertyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyBuilder&#xA;Inherits PropertyInfo" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyBuilder sealed : System::Reflection::PropertyInfo" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type PropertyBuilder = class&#xA;    inherit PropertyInfo" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1;xamarinios-10.8" />
  <TypeSignature Language="C#" Value="public sealed class PropertyBuilder : System.Reflection.PropertyInfo, System.Runtime.InteropServices._PropertyBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyBuilder extends System.Reflection.PropertyInfo implements class System.Runtime.InteropServices._PropertyBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyBuilder&#xA;Inherits PropertyInfo&#xA;Implements _PropertyBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyBuilder sealed : System::Reflection::PropertyInfo, System::Runtime::InteropServices::_PropertyBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type PropertyBuilder = class&#xA;    inherit PropertyInfo&#xA;    interface _PropertyBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit PropertyBuilder extends System.Reflection.PropertyInfo implements class System.Runtime.InteropServices._PropertyBuilder" FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public abstract class PropertyBuilder : System.Reflection.PropertyInfo" FrameworkAlternate="xamarinios-10.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyBuilder extends System.Reflection.PropertyInfo" FrameworkAlternate="xamarinios-10.8" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyBuilder&#xA;Inherits PropertyInfo" FrameworkAlternate="xamarinios-10.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyBuilder abstract : System::Reflection::PropertyInfo" FrameworkAlternate="xamarinios-10.8" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.PropertyInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._PropertyBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._PropertyBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a892a-101">型のプロパティを定義します。</span><span class="sxs-lookup"><span data-stu-id="a892a-101">Defines the properties for a type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-102">`PropertyBuilder` は常に `TypeBuilder`に関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="a892a-102">A `PropertyBuilder` is always associated with a `TypeBuilder`.</span></span> <span data-ttu-id="a892a-103">`TypeBuilder`。</span><span class="sxs-lookup"><span data-stu-id="a892a-103">The `TypeBuilder`.</span></span> <span data-ttu-id="a892a-104">`DefineProperty` メソッドは、クライアントに新しい `PropertyBuilder` を返します。</span><span class="sxs-lookup"><span data-stu-id="a892a-104">`DefineProperty` method will return a new `PropertyBuilder` to a client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a892a-105">次のコードサンプルでは、<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A?displayProperty=nameWithType> 経由で取得した `PropertyBuilder` を使用してプロパティフレームワークと関連付けられた <xref:System.Reflection.Emit.MethodBuilder> を作成し、プロパティ内に IL ロジックを実装する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="a892a-105">The following code sample demonstrates how to implement properties in a dynamic type using a `PropertyBuilder` obtained via <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A?displayProperty=nameWithType> to create the property framework and an associated <xref:System.Reflection.Emit.MethodBuilder> to implement the IL logic within the property.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.PropertyBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.PropertyBuilder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyBuilder ();" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.#ctor" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyBuilder();" FrameworkAlternate="xamarinios-10.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOtherMethod">
      <MemberSignature Language="C#" Value="public void AddOtherMethod (System.Reflection.Emit.MethodBuilder mdBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOtherMethod(class System.Reflection.Emit.MethodBuilder mdBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.AddOtherMethod(System.Reflection.Emit.MethodBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOtherMethod (mdBuilder As MethodBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOtherMethod(System::Reflection::Emit::MethodBuilder ^ mdBuilder);" />
      <MemberSignature Language="F#" Value="member this.AddOtherMethod : System.Reflection.Emit.MethodBuilder -&gt; unit" Usage="propertyBuilder.AddOtherMethod mdBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
      </Parameters>
      <Docs>
        <param name="mdBuilder"><span data-ttu-id="a892a-106">他のメソッドを表す <see langword="MethodBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-106">A <see langword="MethodBuilder" /> object that represents the other method.</span></span></param>
        <summary><span data-ttu-id="a892a-107">このプロパティに関連付ける別のメソッドを追加します。</span><span class="sxs-lookup"><span data-stu-id="a892a-107">Adds one of the other methods associated with this property.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a892a-108"><paramref name="mdBuilder" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a892a-108"><paramref name="mdBuilder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a892a-109"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> が、外側の型に対して呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="a892a-109"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.PropertyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PropertyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As PropertyAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::PropertyAttributes Attributes { System::Reflection::PropertyAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.PropertyAttributes" Usage="System.Reflection.Emit.PropertyBuilder.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a892a-110">このプロパティの属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-110">Gets the attributes for this property.</span></span></summary>
        <value><span data-ttu-id="a892a-111">このプロパティの属性。</span><span class="sxs-lookup"><span data-stu-id="a892a-111">Attributes of this property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public override bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Reflection.Emit.PropertyBuilder.CanRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a892a-112">プロパティを読み取ることができるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-112">Gets a value indicating whether the property can be read.</span></span></summary>
        <value><span data-ttu-id="a892a-113">このプロパティを読み取ることができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a892a-113"><see langword="true" /> if this property can be read; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-114">プロパティを読み取ることができるかどうかを示すブール型プロパティです。</span><span class="sxs-lookup"><span data-stu-id="a892a-114">Boolean property indicating if the property can be read.</span></span> <span data-ttu-id="a892a-115">プロパティに get アクセサーがない場合は、このプロパティを読み取ることができません。</span><span class="sxs-lookup"><span data-stu-id="a892a-115">If the property does not have a get accessor, it cannot be read.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public override bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Reflection.Emit.PropertyBuilder.CanWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a892a-116">プロパティに書き込むことができるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-116">Gets a value indicating whether the property can be written to.</span></span></summary>
        <value><span data-ttu-id="a892a-117">このプロパティに書き込むことができる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a892a-117"><see langword="true" /> if this property can be written to; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-118">プロパティに書き込むことができるかどうかを示すブール型プロパティです。</span><span class="sxs-lookup"><span data-stu-id="a892a-118">Boolean property indicating if the property can be written to.</span></span> <span data-ttu-id="a892a-119">プロパティに set アクセサーがない場合は、このプロパティに書き込むことはできません。</span><span class="sxs-lookup"><span data-stu-id="a892a-119">If the property does not have a set accessor, it cannot be written to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Reflection.Emit.PropertyBuilder.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a892a-120">このメンバーを宣言するクラスを取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-120">Gets the class that declares this member.</span></span></summary>
        <value><span data-ttu-id="a892a-121">このメンバーを宣言するクラスの <see langword="Type" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-121">The <see langword="Type" /> object for the class that declares this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetAccessors(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetAccessors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAccessors (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetAccessors : bool -&gt; System.Reflection.MethodInfo[]" Usage="propertyBuilder.GetAccessors nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="a892a-122"><see langword="MethodInfo" /> 配列で非パブリック メソッドを返すかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a892a-122">Indicates whether non-public methods should be returned in the <see langword="MethodInfo" /> array.</span></span> <span data-ttu-id="a892a-123">非パブリック メソッドが含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a892a-123"><see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a892a-124">このプロパティのパブリックおよび非パブリックな <see langword="get" /> アクセサーと <see langword="set" /> アクセサーの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="a892a-124">Returns an array of the public and non-public <see langword="get" /> and <see langword="set" /> accessors on this property.</span></span></summary>
        <returns><span data-ttu-id="a892a-125">一致するパブリック アクセサーまたは非パブリック アクセサーを格納している <see langword="MethodInfo" /> 型の配列。このプロパティに一致するアクセサーがない場合は、空の配列。</span><span class="sxs-lookup"><span data-stu-id="a892a-125">An array of type <see langword="MethodInfo" /> containing the matching public or non-public accessors, or an empty array if matching accessors do not exist on this property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-126">プロパティのアクセサーを取得するには、型 GetType またはアセンブリを使用してプロパティの親型を反映し、型からリフレクションプロパティオブジェクトを取得して、PropertyInfo を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a892a-126">To get the accessors of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetAccessors.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a892a-127">この方法はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a892a-127">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a892a-128">このプロパティに定義されているすべてのカスタム属性を返します。</span><span class="sxs-lookup"><span data-stu-id="a892a-128">Returns all the custom attributes defined on this property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="propertyBuilder.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="a892a-129">このプロパティの継承チェーンを検索して、カスタム属性を見つける場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a892a-129">If <see langword="true" />, walks up this property's inheritance chain to find the custom attributes</span></span></param>
        <summary><span data-ttu-id="a892a-130">このプロパティのすべてのカスタム属性の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="a892a-130">Returns an array of all the custom attributes for this property.</span></span></summary>
        <returns><span data-ttu-id="a892a-131">すべてのカスタム属性の配列。</span><span class="sxs-lookup"><span data-stu-id="a892a-131">An array of all the custom attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-132">型 GetType またはアセンブリを使用してプロパティの親の型を反映し、型からリフレクションプロパティオブジェクトを取得して、PropertyInfo を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a892a-132">Reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetCustomAttributes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a892a-133">この方法はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a892a-133">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="propertyBuilder.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="a892a-134">型により識別されるカスタム属性の配列。</span><span class="sxs-lookup"><span data-stu-id="a892a-134">An array of custom attributes identified by type.</span></span></param>
        <param name="inherit"><span data-ttu-id="a892a-135">このプロパティの継承チェーンを検索して、カスタム属性を見つける場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="a892a-135">If <see langword="true" />, walks up this property's inheritance chain to find the custom attributes.</span></span></param>
        <summary><span data-ttu-id="a892a-136"><see cref="T:System.Type" /> によって識別されるカスタム属性の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="a892a-136">Returns an array of custom attributes identified by <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="a892a-137">リフレクションされたメンバーに定義されているカスタム属性の配列。このメンバーに定義されている属性がない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a892a-137">An array of custom attributes defined on this reflected member, or <see langword="null" /> if no attributes are defined on this member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-138">型 GetType またはアセンブリを使用してプロパティの親の型を反映し、型からリフレクションプロパティオブジェクトを取得して、PropertyInfo を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a892a-138">Reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetCustomAttributes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a892a-139">この方法はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a892a-139">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetGetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetGetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetGetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetGetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetGetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="propertyBuilder.GetGetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="a892a-140">非パブリックな get アクセサーを返すかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a892a-140">Indicates whether non-public get accessors should be returned.</span></span> <span data-ttu-id="a892a-141">非パブリック メソッドが含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a892a-141"><see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a892a-142">このプロパティのパブリックおよび非パブリックな get アクセサーを返します。</span><span class="sxs-lookup"><span data-stu-id="a892a-142">Returns the public and non-public get accessor for this property.</span></span></summary>
        <returns><span data-ttu-id="a892a-143"><see langword="MethodInfo" /> が <paramref name="nonPublic" /> の場合は、このプロパティの get アクセサーを表す <see langword="true" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-143">A <see langword="MethodInfo" /> object representing the get accessor for this property, if <paramref name="nonPublic" /> is <see langword="true" />.</span></span> <span data-ttu-id="a892a-144"><see langword="null" /> が <paramref name="nonPublic" /> で get アクセサーが非パブリックの場合、または <see langword="false" /> が <paramref name="nonPublic" /> でも get アクセサーがない場合は、<see langword="true" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="a892a-144">Returns <see langword="null" /> if <paramref name="nonPublic" /> is <see langword="false" /> and the get accessor is non-public, or if <paramref name="nonPublic" /> is <see langword="true" /> but no get accessors exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-145">プロパティの getter を取得するには、型 GetType またはアセンブリを使用してプロパティの親型を反映し、型からリフレクションプロパティオブジェクトを取得して、PropertyInfo を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a892a-145">To get the getter of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetGetMethod.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexParameters">
      <MemberSignature Language="C#" Value="public override System.Reflection.ParameterInfo[] GetIndexParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ParameterInfo[] GetIndexParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetIndexParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetIndexParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetIndexParameters();" />
      <MemberSignature Language="F#" Value="override this.GetIndexParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="propertyBuilder.GetIndexParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a892a-146">プロパティのすべてのインデックス パラメーターの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="a892a-146">Returns an array of all the index parameters for the property.</span></span></summary>
        <returns><span data-ttu-id="a892a-147">インデックスのパラメーターを格納している <see langword="ParameterInfo" /> 型の配列。</span><span class="sxs-lookup"><span data-stu-id="a892a-147">An array of type <see langword="ParameterInfo" /> containing the parameters for the indexes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-148">プロパティのインデックスパラメーターを取得するには、型 GetType またはアセンブリを使用してプロパティの親型を反映し、型からリフレクションプロパティオブジェクトを取得して、PropertyInfo を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a892a-148">To get the index parameters of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetIndexParameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a892a-149">この方法はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a892a-149">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetSetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetSetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetSetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetSetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetSetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="propertyBuilder.GetSetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="a892a-150">パブリックでないアクセサーの場合に、アクセサーを返すかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a892a-150">Indicates whether the accessor should be returned if it is non-public.</span></span> <span data-ttu-id="a892a-151">非パブリック メソッドが含まれる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a892a-151"><see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a892a-152">このプロパティの set アクセサーを返します。</span><span class="sxs-lookup"><span data-stu-id="a892a-152">Returns the set accessor for this property.</span></span></summary>
        <returns><span data-ttu-id="a892a-153">次の表に示すように、プロパティの <see langword="Set" /> メソッド、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="a892a-153">The property's <see langword="Set" /> method, or <see langword="null" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="a892a-154">値</span><span class="sxs-lookup"><span data-stu-id="a892a-154">Value</span></span> 
 </term><description> <span data-ttu-id="a892a-155">条件</span><span class="sxs-lookup"><span data-stu-id="a892a-155">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="a892a-156">このプロパティの Set メソッドを表す <see cref="T:System.Reflection.MethodInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-156">A <see cref="T:System.Reflection.MethodInfo" /> object representing the Set method for this property.</span></span>  
  
 </term><description> <span data-ttu-id="a892a-157">set アクセサーがパブリック。</span><span class="sxs-lookup"><span data-stu-id="a892a-157">The set accessor is public.</span></span>  
  
 <span data-ttu-id="a892a-158"><paramref name="nonPublic" /> は true で、パブリックでないメソッドを返すことができません。</span><span class="sxs-lookup"><span data-stu-id="a892a-158"><paramref name="nonPublic" /> is true and non-public methods can be returned.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="a892a-159">null</span><span class="sxs-lookup"><span data-stu-id="a892a-159">null</span></span> 
 </term><description><span data-ttu-id="a892a-160"><paramref name="nonPublic" /> は true で、プロパティは読み取り専用。</span><span class="sxs-lookup"><span data-stu-id="a892a-160"><paramref name="nonPublic" /> is true, but the property is read-only.</span></span>  
  
 <span data-ttu-id="a892a-161"><paramref name="nonPublic" /> が false で set アクセサーが非パブリック。</span><span class="sxs-lookup"><span data-stu-id="a892a-161"><paramref name="nonPublic" /> is false and the set accessor is non-public.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-162">プロパティの setter を取得するには、型 GetType またはアセンブリを使用してプロパティの親型を反映し、型からリフレクションプロパティオブジェクトを取得して、PropertyInfo を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a892a-162">To get the setter of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetSetMethod.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a892a-163">取得関数を呼び出してプロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-163">Gets the value of the property by calling the getter.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object obj, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object obj, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (obj As Object, index As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="override this.GetValue : obj * obj[] -&gt; obj" Usage="propertyBuilder.GetValue (obj, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a892a-164">プロパティ値が返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-164">The object whose property value will be returned.</span></span></param>
        <param name="index"><span data-ttu-id="a892a-165">インデックス付きプロパティのインデックス値 (省略可能)。</span><span class="sxs-lookup"><span data-stu-id="a892a-165">Optional index values for indexed properties.</span></span> <span data-ttu-id="a892a-166">インデックス付きでないプロパティの場合は、この値を <see langword="null" /> にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-166">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <summary><span data-ttu-id="a892a-167">プロパティの取得側メソッドを呼び出して、インデックス付きプロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-167">Gets the value of the indexed property by calling the property's getter method.</span></span></summary>
        <returns><span data-ttu-id="a892a-168">指定したインデックス付きプロパティの値。</span><span class="sxs-lookup"><span data-stu-id="a892a-168">The value of the specified indexed property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-169">プロパティの値を取得するには、型 GetType またはアセンブリを使用してプロパティの親の型を反映し、型から `Reflection` property オブジェクトを取得し、`PropertyInfo.GetValue`を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a892a-169">To get the value of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the `Reflection` property object from the type, and call `PropertyInfo.GetValue`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a892a-170">この方法はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a892a-170">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (obj As Object, invokeAttr As BindingFlags, binder As Binder, index As Object(), culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.GetValue : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="propertyBuilder.GetValue (obj, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="index" Type="System.Object[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a892a-171">プロパティ値が返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-171">The object whose property value will be returned.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="a892a-172">呼び出し属性。</span><span class="sxs-lookup"><span data-stu-id="a892a-172">The invocation attribute.</span></span> <span data-ttu-id="a892a-173"><see langword="BindingFlags" /> のビット フラグ <see langword="InvokeMethod" />、<see langword="CreateInstance" />、<see langword="Static" />、<see langword="GetField" />、<see langword="SetField" />、<see langword="GetProperty" />、または <see langword="SetProperty" /> にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-173">This must be a bit flag from <see langword="BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span></span> <span data-ttu-id="a892a-174">適切な呼び出し属性を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-174">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="a892a-175">静的メンバーを呼び出す場合は、<see langword="Static" /> の <see langword="BindingFlags" /> フラグを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-175">If a static member is to be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span></span></param>
        <param name="binder"><span data-ttu-id="a892a-176">バインディング、引数型の強制変換、メンバーの呼び出し、および、リフレクションを使用した <see langword="MemberInfo" /> オブジェクトの取得を有効にするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-176">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span></span> <span data-ttu-id="a892a-177"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="a892a-177">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="index"><span data-ttu-id="a892a-178">インデックス付きプロパティのインデックス値 (省略可能)。</span><span class="sxs-lookup"><span data-stu-id="a892a-178">Optional index values for indexed properties.</span></span> <span data-ttu-id="a892a-179">インデックス付きでないプロパティの場合は、この値を <see langword="null" /> にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-179">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <param name="culture"><span data-ttu-id="a892a-180">リソースのローカライズ対象のカルチャを表す <see langword="CultureInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-180">The <see langword="CultureInfo" /> object that represents the culture for which the resource is to be localized.</span></span> <span data-ttu-id="a892a-181">リソースがこのカルチャ用にローカライズされていない場合は、一致する対象を検索するために <see langword="CultureInfo.Parent" /> メソッドが連続して呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a892a-181">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span></span> <span data-ttu-id="a892a-182">この値が <see langword="null" /> の場合は、<see langword="CultureInfo" /> プロパティから <see langword="CultureInfo.CurrentUICulture" /> が取得されます。</span><span class="sxs-lookup"><span data-stu-id="a892a-182">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="a892a-183">指定したバインディング、インデックス、および <see langword="CultureInfo" /> のプロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-183">Gets the value of a property having the specified binding, index, and <see langword="CultureInfo" />.</span></span></summary>
        <returns><span data-ttu-id="a892a-184"><paramref name="obj" /> のプロパティ値。</span><span class="sxs-lookup"><span data-stu-id="a892a-184">The property value for <paramref name="obj" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-185">プロパティの値を取得するには、型 GetType またはアセンブリを使用してプロパティの親型を反映し、型からリフレクションプロパティオブジェクトを取得して、PropertyInfo を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a892a-185">To get the value of a property, reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.GetValue.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a892a-186">この方法はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a892a-186">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="propertyBuilder.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="a892a-187">カスタム属性が適用される <see langword="Type" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-187">The <see langword="Type" /> object to which the custom attributes are applied.</span></span></param>
        <param name="inherit"><span data-ttu-id="a892a-188">このプロパティの継承チェーンを検索して、カスタム属性を見つけるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="a892a-188">Specifies whether to walk up this property's inheritance chain to find the custom attributes.</span></span></param>
        <summary><span data-ttu-id="a892a-189">このプロパティに <paramref name="attributeType" /> のインスタンスが 1 つ以上定義されているかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="a892a-189">Indicates whether one or more instance of <paramref name="attributeType" /> is defined on this property.</span></span></summary>
        <returns><span data-ttu-id="a892a-190">このプロパティに <see langword="true" /> のインスタンスが 1 つ以上定義されている場合は <paramref name="attributeType" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a892a-190"><see langword="true" /> if one or more instance of <paramref name="attributeType" /> is defined on this property; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-191">型 GetType またはアセンブリを使用してプロパティの親の型を反映し、型からリフレクションプロパティオブジェクトを取得して、PropertyInfo を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a892a-191">Reflect on the property's parent type using Type.GetType or Assembly.GetType, retrieve the Reflection property object from the type, and call PropertyInfo.IsDefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a892a-192">この方法はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a892a-192">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Module : System.Reflection.Module" Usage="System.Reflection.Emit.PropertyBuilder.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a892a-193">現在のプロパティを宣言している型が定義されているモジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-193">Gets the module in which the type that declares the current property is being defined.</span></span></summary>
        <value><span data-ttu-id="a892a-194">現在のプロパティを宣言している型が定義されている <see cref="T:System.Reflection.Module" />。</span><span class="sxs-lookup"><span data-stu-id="a892a-194">The <see cref="T:System.Reflection.Module" /> in which the type that declares the current property is defined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-195">このプロパティは、ユーザーの便宜を示すために用意されています。</span><span class="sxs-lookup"><span data-stu-id="a892a-195">This property is provided as a convenience for the user.</span></span> <span data-ttu-id="a892a-196">これは、<xref:System.Reflection.Emit.PropertyBuilder.DeclaringType%2A> プロパティを使用して、プロパティが宣言されている型を取得し、結果の <xref:System.Type> オブジェクトの <xref:System.Type.Module%2A> プロパティを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="a892a-196">It is equivalent to using the <xref:System.Reflection.Emit.PropertyBuilder.DeclaringType%2A> property to get the type in which the property is declared, and then calling the <xref:System.Type.Module%2A> property of the resulting <xref:System.Type> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.Emit.PropertyBuilder.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a892a-197">このメンバーの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-197">Gets the name of this member.</span></span></summary>
        <value><span data-ttu-id="a892a-198">このメンバーの名前を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="a892a-198">A <see cref="T:System.String" /> containing the name of this member.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.PropertyToken PropertyToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.Emit.PropertyToken PropertyToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.PropertyToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyToken As PropertyToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Emit::PropertyToken PropertyToken { System::Reflection::Emit::PropertyToken get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyToken : System.Reflection.Emit.PropertyToken" Usage="System.Reflection.Emit.PropertyBuilder.PropertyToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.PropertyToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a892a-199">このプロパティのトークンを取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-199">Retrieves the token for this property.</span></span></summary>
        <value><span data-ttu-id="a892a-200">読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="a892a-200">Read-only.</span></span> <span data-ttu-id="a892a-201">このプロパティのトークンを取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-201">Retrieves the token for this property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public override Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Reflection.Emit.PropertyBuilder.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a892a-202">このプロパティのフィールドの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-202">Gets the type of the field of this property.</span></span></summary>
        <value><span data-ttu-id="a892a-203">このプロパティの型。</span><span class="sxs-lookup"><span data-stu-id="a892a-203">The type of this property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.PropertyBuilder.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Reflection.Emit.PropertyBuilder.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a892a-204"><see langword="MemberInfo" /> のこのインスタンスを取得するために使用したクラス オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-204">Gets the class object that was used to obtain this instance of <see langword="MemberInfo" />.</span></span></summary>
        <value><span data-ttu-id="a892a-205">この <see langword="Type" /> オブジェクトを取得するために使用した <see langword="MemberInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-205">The <see langword="Type" /> object through which this <see langword="MemberInfo" /> object was obtained.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConstant">
      <MemberSignature Language="C#" Value="public void SetConstant (object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetConstant(object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetConstant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetConstant (defaultValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetConstant(System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="member this.SetConstant : obj -&gt; unit" Usage="propertyBuilder.SetConstant defaultValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="defaultValue"><span data-ttu-id="a892a-206">このプロパティの既定値。</span><span class="sxs-lookup"><span data-stu-id="a892a-206">The default value of this property.</span></span></param>
        <summary><span data-ttu-id="a892a-207">このプロパティの既定値を設定します。</span><span class="sxs-lookup"><span data-stu-id="a892a-207">Sets the default value of this property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-208">`defaultValue` は、`Boolean`、`SByte`、`Int16`、`Int32`、`Int64`、`Byte`、`UInt16`、`UInt32`、`UInt64`、`Single`、`Double`、`DateTime`の各種類に制限されています。`Char``String``Enum`</span><span class="sxs-lookup"><span data-stu-id="a892a-208">`defaultValue` is restricted to the following types: `Boolean`, `SByte`, `Int16`, `Int32`, `Int64`, `Byte`, `UInt16`, `UInt32`, `UInt64`, `Single`, `Double`, `DateTime`, `Char`, `String`, and `Enum`.</span></span> <span data-ttu-id="a892a-209">プロパティの型が参照型の場合、CLS 準拠では `defaultValue` を `null`する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-209">If the property type is a reference type, CLS compliance requires `defaultValue` to be `null`.</span></span> <span data-ttu-id="a892a-210">ただし、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、参照型に値を割り当てることができる限り、`defaultValue` は参照型に対して null 以外にすることができます。</span><span class="sxs-lookup"><span data-stu-id="a892a-210">However, starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], `defaultValue` can be non-null for reference types as long as the value can be assigned to that reference type.</span></span> <span data-ttu-id="a892a-211">たとえば、`Int32` 値は <xref:System.Object>型のプロパティに割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="a892a-211">For example, an `Int32` value can be assigned to a property of type <xref:System.Object>.</span></span> <span data-ttu-id="a892a-212">これは CLS に準拠していませんが、相互運用のシナリオで役に立つ場合があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-212">This is not CLS-compliant, but it can be useful in interop scenarios.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a892a-213"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> が、外側の型に対して呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="a892a-213"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a892a-214">プロパティが、サポートされている型のいずれでもありません。</span><span class="sxs-lookup"><span data-stu-id="a892a-214">The property is not one of the supported types.</span></span>  
  
<span data-ttu-id="a892a-215">または</span><span class="sxs-lookup"><span data-stu-id="a892a-215">-or-</span></span> 
<span data-ttu-id="a892a-216"><paramref name="defaultValue" /> の型がプロパティの型と一致しません。</span><span class="sxs-lookup"><span data-stu-id="a892a-216">The type of <paramref name="defaultValue" /> does not match the type of the property.</span></span>  
  
<span data-ttu-id="a892a-217">または</span><span class="sxs-lookup"><span data-stu-id="a892a-217">-or-</span></span> 
<span data-ttu-id="a892a-218">プロパティが <see cref="T:System.Object" /> 型または他の参照型であり、<paramref name="defaultValue" /> が <see langword="null" /> ではなく、値を参照型に割り当てることができません。</span><span class="sxs-lookup"><span data-stu-id="a892a-218">The property is of type <see cref="T:System.Object" /> or other reference type, <paramref name="defaultValue" /> is not <see langword="null" />, and the value cannot be assigned to the reference type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a892a-219">カスタム属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="a892a-219">Sets a custom attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.Emit.CustomAttributeBuilder -&gt; unit" Usage="propertyBuilder.SetCustomAttribute customBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder"><span data-ttu-id="a892a-220">カスタム属性を定義するヘルパー クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="a892a-220">An instance of a helper class to define the custom attribute.</span></span></param>
        <summary><span data-ttu-id="a892a-221">カスタム属性ビルダーを使用して、カスタム属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="a892a-221">Set a custom attribute using a custom attribute builder.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a892a-222"><paramref name="customBuilder" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a892a-222"><paramref name="customBuilder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a892a-223"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> が、外側の型に対して呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="a892a-223">if <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.ConstructorInfo * byte[] -&gt; unit" Usage="propertyBuilder.SetCustomAttribute (con, binaryAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="a892a-224">カスタム属性のコンストラクター。</span><span class="sxs-lookup"><span data-stu-id="a892a-224">The constructor for the custom attribute.</span></span></param>
        <param name="binaryAttribute"><span data-ttu-id="a892a-225">属性を表すバイト blob。</span><span class="sxs-lookup"><span data-stu-id="a892a-225">A byte blob representing the attributes.</span></span></param>
        <summary><span data-ttu-id="a892a-226">指定されたカスタム属性の blob を使用して、カスタム属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="a892a-226">Set a custom attribute using a specified custom attribute blob.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-227">`binaryAttribute`の書式を設定する方法の詳細については、ECMA Partition II のドキュメントのメタデータの仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a892a-227">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="a892a-228">パーティション II のドキュメントは、MSDN ([ecma C#および共通言語基盤の標準](https://go.microsoft.com/fwlink/?linkid=65555)の WEB ページ) および ecma の WEB サイト ([標準 Ecma-335 共通言語基盤](https://go.microsoft.com/fwlink/?linkid=65552)のドキュメント) からオンラインで入手できます。</span><span class="sxs-lookup"><span data-stu-id="a892a-228">The Partition II documentation is available online on MSDN ([ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?linkid=65555) Web page) and on the ECMA Web site ([Standard ECMA-335 Common Language Infrastructure](https://go.microsoft.com/fwlink/?linkid=65552) document).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a892a-229"><paramref name="con" /> または <paramref name="binaryAttribute" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a892a-229"><paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a892a-230"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> が、外側の型に対して呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="a892a-230"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetGetMethod">
      <MemberSignature Language="C#" Value="public void SetGetMethod (System.Reflection.Emit.MethodBuilder mdBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetGetMethod(class System.Reflection.Emit.MethodBuilder mdBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetGetMethod(System.Reflection.Emit.MethodBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetGetMethod (mdBuilder As MethodBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetGetMethod(System::Reflection::Emit::MethodBuilder ^ mdBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetGetMethod : System.Reflection.Emit.MethodBuilder -&gt; unit" Usage="propertyBuilder.SetGetMethod mdBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
      </Parameters>
      <Docs>
        <param name="mdBuilder"><span data-ttu-id="a892a-231">プロパティ値を取得するメソッドを表す <see langword="MethodBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-231">A <see langword="MethodBuilder" /> object that represents the method that gets the property value.</span></span></param>
        <summary><span data-ttu-id="a892a-232">プロパティ値を取得するメソッドを設定します。</span><span class="sxs-lookup"><span data-stu-id="a892a-232">Sets the method that gets the property value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a892a-233">次のコードサンプルは、`SetGetMethod`を使用して `PropertyBuilder` で作成された `get` プロパティに動的メソッドをアタッチする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a892a-233">The following code sample demonstrates how to attach a dynamic method to a `get` property created with `PropertyBuilder` using `SetGetMethod`.</span></span>  
  
 [!code-cpp[PropertyBuilder_SetGetMethod_4#1](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CPP/propertybuilder_setgetmethod_4.cpp#1)]
 [!code-csharp[PropertyBuilder_SetGetMethod_4#1](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CS/propertybuilder_setgetmethod_4.cs#1)]
 [!code-vb[PropertyBuilder_SetGetMethod_4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/VB/propertybuilder_setgetmethod_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a892a-234"><paramref name="mdBuilder" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a892a-234"><paramref name="mdBuilder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a892a-235"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> が、外側の型に対して呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="a892a-235"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetSetMethod">
      <MemberSignature Language="C#" Value="public void SetSetMethod (System.Reflection.Emit.MethodBuilder mdBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSetMethod(class System.Reflection.Emit.MethodBuilder mdBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetSetMethod(System.Reflection.Emit.MethodBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSetMethod (mdBuilder As MethodBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSetMethod(System::Reflection::Emit::MethodBuilder ^ mdBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetSetMethod : System.Reflection.Emit.MethodBuilder -&gt; unit" Usage="propertyBuilder.SetSetMethod mdBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
      </Parameters>
      <Docs>
        <param name="mdBuilder"><span data-ttu-id="a892a-236">プロパティ値を設定するメソッドを表す <see langword="MethodBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-236">A <see langword="MethodBuilder" /> object that represents the method that sets the property value.</span></span></param>
        <summary><span data-ttu-id="a892a-237">プロパティ値を設定するメソッドを設定します。</span><span class="sxs-lookup"><span data-stu-id="a892a-237">Sets the method that sets the property value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a892a-238">次のコードサンプルは、`SetSetMethod`を使用して `PropertyBuilder` で作成された `set` プロパティに動的メソッドをアタッチする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a892a-238">The following code sample demonstrates how to attach a dynamic method to a `set` property created with `PropertyBuilder` using `SetSetMethod`.</span></span>  
  
 [!code-cpp[PropertyBuilder_SetGetMethod_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CPP/propertybuilder_setgetmethod_4.cpp#2)]
 [!code-csharp[PropertyBuilder_SetGetMethod_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/CS/propertybuilder_setgetmethod_4.cs#2)]
 [!code-vb[PropertyBuilder_SetGetMethod_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyBuilder_SetGetMethod_4/VB/propertybuilder_setgetmethod_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a892a-239"><paramref name="mdBuilder" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a892a-239"><paramref name="mdBuilder" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a892a-240"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> が、外側の型に対して呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="a892a-240"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has been called on the enclosing type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a892a-241">指定したオブジェクトのプロパティ値に、指定した値を設定します。</span><span class="sxs-lookup"><span data-stu-id="a892a-241">Sets the property value for the given object to the given value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object obj, object value, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object obj, object value, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetValue (obj As Object, value As Object, index As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetValue(System::Object ^ obj, System::Object ^ value, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="override this.SetValue : obj * obj * obj[] -&gt; unit" Usage="propertyBuilder.SetValue (obj, value, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="index" Type="System.Object[]" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a892a-242">プロパティ値が設定されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-242">The object whose property value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="a892a-243">このプロパティの新しい値。</span><span class="sxs-lookup"><span data-stu-id="a892a-243">The new value for this property.</span></span></param>
        <param name="index"><span data-ttu-id="a892a-244">インデックス付きプロパティのインデックス値 (省略可能)。</span><span class="sxs-lookup"><span data-stu-id="a892a-244">Optional index values for indexed properties.</span></span> <span data-ttu-id="a892a-245">インデックス付きでないプロパティの場合は、この値を <see langword="null" /> にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-245">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <summary><span data-ttu-id="a892a-246">プロパティの値を設定します。インデックス付きプロパティの場合は、オプションでインデックス値を設定できます。</span><span class="sxs-lookup"><span data-stu-id="a892a-246">Sets the value of the property with optional index values for index properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-247">プロパティの値を設定するには <xref:System.Type.GetType%2A?displayProperty=nameWithType> または <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>を使用してプロパティの親の型を反映し、<xref:System.Reflection.PropertyInfo> オブジェクトを型から取得し、<xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=nameWithType>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a892a-247">To set the value of a property, reflect on the property's parent type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>, retrieve the <xref:System.Reflection.PropertyInfo> object from the type, and call <xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a892a-248">この方法はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a892a-248">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public override void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetValue (obj As Object, value As Object, invokeAttr As BindingFlags, binder As Binder, index As Object(), culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.SetValue : obj * obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; unit" Usage="propertyBuilder.SetValue (obj, value, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="index" Type="System.Object[]" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a892a-249">プロパティ値が返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-249">The object whose property value will be returned.</span></span></param>
        <param name="value"><span data-ttu-id="a892a-250">このプロパティの新しい値。</span><span class="sxs-lookup"><span data-stu-id="a892a-250">The new value for this property.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="a892a-251">呼び出し属性。</span><span class="sxs-lookup"><span data-stu-id="a892a-251">The invocation attribute.</span></span> <span data-ttu-id="a892a-252"><see langword="BindingFlags" /> のビット フラグ <see langword="InvokeMethod" />、<see langword="CreateInstance" />、<see langword="Static" />、<see langword="GetField" />、<see langword="SetField" />、<see langword="GetProperty" />、または <see langword="SetProperty" /> にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-252">This must be a bit flag from <see langword="BindingFlags" /> : <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span></span> <span data-ttu-id="a892a-253">適切な呼び出し属性を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-253">A suitable invocation attribute must be specified.</span></span> <span data-ttu-id="a892a-254">静的メンバーを呼び出す場合は、<see langword="Static" /> の <see langword="BindingFlags" /> フラグを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-254">If a static member is to be invoked, the <see langword="Static" /> flag of <see langword="BindingFlags" /> must be set.</span></span></param>
        <param name="binder"><span data-ttu-id="a892a-255">バインディング、引数型の強制変換、メンバーの呼び出し、および、リフレクションを使用した <see langword="MemberInfo" /> オブジェクトの取得を有効にするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-255">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span></span> <span data-ttu-id="a892a-256"><paramref name="binder" /> が <see langword="null" /> の場合は、既定のバインダーが使用されます。</span><span class="sxs-lookup"><span data-stu-id="a892a-256">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="index"><span data-ttu-id="a892a-257">インデックス付きプロパティのインデックス値 (省略可能)。</span><span class="sxs-lookup"><span data-stu-id="a892a-257">Optional index values for indexed properties.</span></span> <span data-ttu-id="a892a-258">インデックス付きでないプロパティの場合は、この値を <see langword="null" /> にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-258">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <param name="culture"><span data-ttu-id="a892a-259">リソースのローカライズ対象のカルチャを表す <see langword="CultureInfo" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a892a-259">The <see langword="CultureInfo" /> object that represents the culture for which the resource is to be localized.</span></span> <span data-ttu-id="a892a-260">リソースがこのカルチャ用にローカライズされていない場合は、一致する対象を検索するために <see langword="CultureInfo.Parent" /> メソッドが連続して呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a892a-260">Note that if the resource is not localized for this culture, the <see langword="CultureInfo.Parent" /> method will be called successively in search of a match.</span></span> <span data-ttu-id="a892a-261">この値が <see langword="null" /> の場合は、<see langword="CultureInfo" /> プロパティから <see langword="CultureInfo.CurrentUICulture" /> が取得されます。</span><span class="sxs-lookup"><span data-stu-id="a892a-261">If this value is <see langword="null" />, the <see langword="CultureInfo" /> is obtained from the <see langword="CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="a892a-262">指定したオブジェクトのプロパティ値に、指定した値を設定します。</span><span class="sxs-lookup"><span data-stu-id="a892a-262">Sets the property value for the given object to the given value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-263">プロパティの値を設定するには <xref:System.Type.GetType%2A?displayProperty=nameWithType> または <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>を使用してプロパティの親の型を反映し、<xref:System.Reflection.PropertyInfo> オブジェクトを型から取得し、<xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=nameWithType>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a892a-263">To set the value of a property, reflect on the property's parent type using <xref:System.Type.GetType%2A?displayProperty=nameWithType> or <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>, retrieve the <xref:System.Reflection.PropertyInfo> object from the type, and call <xref:System.Reflection.PropertyInfo.SetValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a892a-264">この方法はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="a892a-264">This method is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _PropertyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _PropertyBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_PropertyBuilder::GetIDsOfNames;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="propertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="a892a-265">将来利用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="a892a-265">Reserved for future use.</span></span> <span data-ttu-id="a892a-266">IID_NULL にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-266">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="a892a-267">マッピング対象として渡される名前の配列。</span><span class="sxs-lookup"><span data-stu-id="a892a-267">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="a892a-268">マッピングされる名前のカウント。</span><span class="sxs-lookup"><span data-stu-id="a892a-268">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="a892a-269">名前を解釈するロケール コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="a892a-269">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="a892a-270">名前に対応する ID を受け取る、呼び出し元が割り当てた配列。</span><span class="sxs-lookup"><span data-stu-id="a892a-270">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="a892a-271">一連の名前を対応する一連のディスパッチ識別子に割り当てます。</span><span class="sxs-lookup"><span data-stu-id="a892a-271">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-272">このメソッドは、アンマネージコードからマネージクラスにアクセスするためのものであり、マネージコードからは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="a892a-272">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a892a-273">`IDispatch::GetIDsOfNames`の詳細については、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a892a-273">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a892a-274">このメソッドは COM <c>IDispatch</c> インターフェイスを使用して遅延バインディングで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a892a-274">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _PropertyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _PropertyBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_PropertyBuilder::GetTypeInfo;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="propertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="a892a-275">返される型情報。</span><span class="sxs-lookup"><span data-stu-id="a892a-275">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="a892a-276">型情報のロケール ID。</span><span class="sxs-lookup"><span data-stu-id="a892a-276">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="a892a-277">要求された型情報オブジェクトへのポインターを取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-277">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="a892a-278">オブジェクトの型情報を取得します。この型情報を使用して、インターフェイスの型情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="a892a-278">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-279">このメソッドは、アンマネージコードからマネージクラスにアクセスするためのものであり、マネージコードからは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="a892a-279">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a892a-280">`IDispatch::GetTypeInfo`の詳細については、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a892a-280">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a892a-281">このメソッドは COM <c>IDispatch</c> インターフェイスを使用して遅延バインディングで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a892a-281">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _PropertyBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _PropertyBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_PropertyBuilder::GetTypeInfoCount;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount : uint32 -&gt; unit&#xA;override this.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount : uint32 -&gt; unit" Usage="propertyBuilder.System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="a892a-282">オブジェクトにより提供される型タイプ情報インターフェイスの数を受け取る場所を指定します。</span><span class="sxs-lookup"><span data-stu-id="a892a-282">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="a892a-283">オブジェクトが提供する型情報インターフェイスの数 (0 または 1) を取得します。</span><span class="sxs-lookup"><span data-stu-id="a892a-283">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-284">このメソッドは、アンマネージコードからマネージクラスにアクセスするためのものであり、マネージコードからは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="a892a-284">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a892a-285">`IDispatch::GetTypeInfoCount`の詳細については、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a892a-285">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a892a-286">このメソッドは COM <c>IDispatch</c> インターフェイスを使用して遅延バインディングで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a892a-286">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _PropertyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.PropertyBuilder.System#Runtime#InteropServices#_PropertyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _PropertyBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_PropertyBuilder::Invoke;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._PropertyBuilder.Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._PropertyBuilder.Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="propertyBuilder.System.Runtime.InteropServices._PropertyBuilder.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="a892a-287">メンバーを識別します。</span><span class="sxs-lookup"><span data-stu-id="a892a-287">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="a892a-288">将来利用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="a892a-288">Reserved for future use.</span></span> <span data-ttu-id="a892a-289">IID_NULL にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="a892a-289">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="a892a-290">引数を解釈する対象のロケール コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="a892a-290">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="a892a-291">呼び出しのコンテキストを記述するフラグ。</span><span class="sxs-lookup"><span data-stu-id="a892a-291">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="a892a-292">引数の配列、名前付き引数の DISPID の配列、配列内の要素数のカウントを格納している構造体へのポインター。</span><span class="sxs-lookup"><span data-stu-id="a892a-292">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="a892a-293">結果が格納される場所へのポインター。</span><span class="sxs-lookup"><span data-stu-id="a892a-293">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="a892a-294">例外情報を格納する構造体へのポインター。</span><span class="sxs-lookup"><span data-stu-id="a892a-294">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="a892a-295">エラーが存在する最初の引数のインデックス。</span><span class="sxs-lookup"><span data-stu-id="a892a-295">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="a892a-296">オブジェクトによって公開されたプロパティおよびメソッドへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="a892a-296">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a892a-297">このメソッドは、アンマネージコードからマネージクラスにアクセスするためのものであり、マネージコードからは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="a892a-297">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="a892a-298">`IDispatch::Invoke`の詳細については、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="a892a-298">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="a892a-299">このメソッドは COM <c>IDispatch</c> インターフェイスを使用して遅延バインディングで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="a892a-299">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
