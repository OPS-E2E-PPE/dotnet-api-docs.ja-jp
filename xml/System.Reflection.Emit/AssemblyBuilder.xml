<Type Name="AssemblyBuilder" FullName="System.Reflection.Emit.AssemblyBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="084bcee4b5ff14d7fcb3507248eb20ae0ce1e27c" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82493889" /></Metadata><TypeSignature Language="C#" Value="public sealed class AssemblyBuilder : System.Reflection.Assembly" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssemblyBuilder extends System.Reflection.Assembly" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyBuilder&#xA;Inherits Assembly" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder sealed : System::Reflection::Assembly" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class&#xA;    inherit Assembly" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1;xamarinios-10.8" />
  <TypeSignature Language="C#" Value="public sealed class AssemblyBuilder : System.Reflection.Assembly, System.Runtime.InteropServices._AssemblyBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssemblyBuilder extends System.Reflection.Assembly implements class System.Runtime.InteropServices._AssemblyBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyBuilder&#xA;Inherits Assembly&#xA;Implements _AssemblyBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder sealed : System::Reflection::Assembly, System::Runtime::InteropServices::_AssemblyBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type AssemblyBuilder = class&#xA;    inherit Assembly&#xA;    interface _AssemblyBuilder" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AssemblyBuilder extends System.Reflection.Assembly implements class System.Runtime.InteropServices._AssemblyBuilder" FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public class AssemblyBuilder : System.Reflection.Assembly" FrameworkAlternate="xamarinios-10.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AssemblyBuilder extends System.Reflection.Assembly" FrameworkAlternate="xamarinios-10.8" />
  <TypeSignature Language="VB.NET" Value="Public Class AssemblyBuilder&#xA;Inherits Assembly" FrameworkAlternate="xamarinios-10.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder : System::Reflection::Assembly" FrameworkAlternate="xamarinios-10.8" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.Assembly</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._AssemblyBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cc237-101">動的アセンブリを定義し、表します。</span><span class="sxs-lookup"><span data-stu-id="cc237-101">Defines and represents a dynamic assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-102">動的アセンブリは、リフレクション出力 Api を使用して作成されるアセンブリです。</span><span class="sxs-lookup"><span data-stu-id="cc237-102">A dynamic assembly is an assembly that is created using the Reflection Emit APIs.</span></span> <span data-ttu-id="cc237-103"><xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> メソッドを使用して動的アセンブリを保存すると、アセンブリ内の動的モジュールが保存されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-103">The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method.</span></span> <span data-ttu-id="cc237-104">実行可能ファイルを生成するには、アセンブリのエントリポイントであるメソッドを識別するために、<xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-104">To generate an executable, the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method must be called to identify the method that is the entry point to the assembly.</span></span> <span data-ttu-id="cc237-105">アセンブリは、<xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> メソッドがコンソールアプリケーションまたは Windows ベースのアプリケーションの生成を要求しない限り、既定で Dll として保存されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-105">Assemblies are saved as DLLs by default, unless the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method requests the generation of a console application or a Windows-based application.</span></span>  
  
 <span data-ttu-id="cc237-106">動的アセンブリに複数の動的モジュールが含まれている場合、アセンブリのマニフェストファイル名は、<xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> メソッドの最初の引数として指定されているモジュールの名前と一致している必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-106">If a dynamic assembly contains more than one dynamic module, the assembly's manifest file name should match the module's name that is specified as the first argument to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> method.</span></span>  
  
 <span data-ttu-id="cc237-107">`GetModules` や `GetLoadedModules`など、基本 <xref:System.Reflection.Assembly> クラスのメソッドの中には、<xref:System.Reflection.Emit.AssemblyBuilder> オブジェクトから呼び出されたときに正しく機能しないものがあります。</span><span class="sxs-lookup"><span data-stu-id="cc237-107">Some methods on the base <xref:System.Reflection.Assembly> class, such as `GetModules` and `GetLoadedModules`, will not work correctly when called from <xref:System.Reflection.Emit.AssemblyBuilder> objects.</span></span> <span data-ttu-id="cc237-108">定義済みの動的アセンブリを読み込み、読み込まれたアセンブリに対してメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="cc237-108">You can load the defined dynamic assembly and call the methods on the loaded assembly.</span></span> <span data-ttu-id="cc237-109">たとえば、返されたモジュールの一覧にリソースモジュールが含まれていることを確認するには、読み込まれた <xref:System.Reflection.Assembly> オブジェクトに対して `GetModules` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cc237-109">For example, to ensure that resource modules are included in the returned module list, call `GetModules` on the loaded <xref:System.Reflection.Assembly> object.</span></span>  
  
 <span data-ttu-id="cc237-110"><xref:System.Reflection.AssemblyName.KeyPair%2A> を使用した動的アセンブリの署名は、アセンブリがディスクに保存されるまで有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-110">The signing of a dynamic assembly using <xref:System.Reflection.AssemblyName.KeyPair%2A> is not effective until the assembly is saved to disk.</span></span> <span data-ttu-id="cc237-111">したがって、厳密な名前は、一時的な動的アセンブリでは機能しません。</span><span class="sxs-lookup"><span data-stu-id="cc237-111">So, strong names will not work with transient dynamic assemblies.</span></span>  
  
 <span data-ttu-id="cc237-112"><xref:System.Reflection.Emit.AssemblyBuilder> オブジェクトを取得するには、<xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-112">To get an <xref:System.Reflection.Emit.AssemblyBuilder> object, use the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> method.</span></span>  
  
## <a name="reflection-emit-dynamic-assembly-scenarios"></a><span data-ttu-id="cc237-113">リフレクション出力による動的アセンブリのシナリオ</span><span class="sxs-lookup"><span data-stu-id="cc237-113">Reflection emit dynamic assembly scenarios</span></span>  
 <span data-ttu-id="cc237-114"><xref:System.Reflection.Emit.AssemblyBuilder> クラスを使用して動的アセンブリを作成する場合は、次の点を考慮する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-114">The following are some things to consider when using the <xref:System.Reflection.Emit.AssemblyBuilder> class to create dynamic assemblies.</span></span>  
  
### <a name="dynamic-modules"></a><span data-ttu-id="cc237-115">動的モジュール</span><span class="sxs-lookup"><span data-stu-id="cc237-115">Dynamic modules</span></span>  
 <span data-ttu-id="cc237-116">リフレクション出力は、動的アセンブリで定義された動的モジュールの作成をサポートします。</span><span class="sxs-lookup"><span data-stu-id="cc237-116">Reflection emit supports the creation of dynamic modules defined in dynamic assemblies.</span></span> <span data-ttu-id="cc237-117">動的アセンブリで作成される動的モジュールは、一時的なものでも、永続化することもできます。</span><span class="sxs-lookup"><span data-stu-id="cc237-117">A dynamic module created in a dynamic assembly can be transient or persistable.</span></span>  
  
### <a name="restrictions-on-type-references"></a><span data-ttu-id="cc237-118">型参照に関する制限事項</span><span class="sxs-lookup"><span data-stu-id="cc237-118">Restrictions on type references</span></span>  
 <span data-ttu-id="cc237-119">アセンブリは、別のアセンブリで定義されている型を参照できます。</span><span class="sxs-lookup"><span data-stu-id="cc237-119">Assemblies can reference types defined in another assembly.</span></span> <span data-ttu-id="cc237-120">一時的な動的アセンブリは、別の一時動的アセンブリ、永続化動的アセンブリ、または静的アセンブリで定義されている型を安全に参照できます。</span><span class="sxs-lookup"><span data-stu-id="cc237-120">A transient dynamic assembly can safely reference types defined in another transient dynamic assembly, a persistable dynamic assembly, or a static assembly.</span></span> <span data-ttu-id="cc237-121">ただし、共通言語ランタイムでは、永続動的モジュールが、transient 動的モジュールで定義されている型を参照することはできません。</span><span class="sxs-lookup"><span data-stu-id="cc237-121">However, the common language runtime does not allow a persistable dynamic module to reference a type defined in a transient dynamic module.</span></span> <span data-ttu-id="cc237-122">これは、永続化された動的モジュールがディスクに保存された後に読み込まれると、ランタイムは、transient 動的モジュールで定義されている型への参照を解決できないためです。</span><span class="sxs-lookup"><span data-stu-id="cc237-122">This is because when the persisted dynamic module is loaded after being saved to disk, the runtime cannot resolve the references to types defined in the transient dynamic module.</span></span>  
  
### <a name="restrictions-on-emitting-to-remote-application-domains"></a><span data-ttu-id="cc237-123">リモートアプリケーションドメインへの出力に関する制限事項</span><span class="sxs-lookup"><span data-stu-id="cc237-123">Restrictions on emitting to remote application domains</span></span>  
 <span data-ttu-id="cc237-124">一部のシナリオでは、動的アセンブリを作成し、リモートアプリケーションドメインで実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-124">Some scenarios require a dynamic assembly to be created and executed in a remote application domain.</span></span> <span data-ttu-id="cc237-125">リフレクション出力では、動的アセンブリをリモートアプリケーションドメインに直接出力することはできません。</span><span class="sxs-lookup"><span data-stu-id="cc237-125">Reflection emit does not allow a dynamic assembly to be emitted directly to a remote application domain.</span></span> <span data-ttu-id="cc237-126">解決策は、現在のアプリケーションドメインに動的アセンブリを出力し、出力された動的アセンブリをディスクに保存してから、動的アセンブリをリモートアプリケーションドメインに読み込むことです。</span><span class="sxs-lookup"><span data-stu-id="cc237-126">The solution is to emit the dynamic assembly in the current application domain, save the emitted dynamic assembly to disk, and then load the dynamic assembly into the remote application domain.</span></span>  
  
### <a name="dynamic-assembly-access-modes"></a><span data-ttu-id="cc237-127">動的アセンブリアクセスモード</span><span class="sxs-lookup"><span data-stu-id="cc237-127">Dynamic assembly access modes</span></span>  
 <span data-ttu-id="cc237-128">動的アセンブリは、次のアクセスモードのいずれかを使用して作成できます。</span><span class="sxs-lookup"><span data-stu-id="cc237-128">Dynamic assemblies can be created using one of the following access modes:</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.Run?displayProperty=nameWithType>  
  
     <span data-ttu-id="cc237-129"><xref:System.Reflection.Emit.AssemblyBuilder> オブジェクトによって表される動的アセンブリは一時的です。</span><span class="sxs-lookup"><span data-stu-id="cc237-129">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is transient.</span></span> <span data-ttu-id="cc237-130">動的アセンブリは、出力されたコードの実行にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="cc237-130">The dynamic assembly can only be used to execute the emitted code.</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save?displayProperty=nameWithType>  
  
     <span data-ttu-id="cc237-131"><xref:System.Reflection.Emit.AssemblyBuilder> オブジェクトによって表される動的アセンブリは永続化できますが、保存された移植可能な実行可能 (PE) ファイルがディスクから読み込まれるまでは実行できません。</span><span class="sxs-lookup"><span data-stu-id="cc237-131">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable but cannot be executed until the saved portable executable (PE) file has been loaded from disk.</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType>  
  
     <span data-ttu-id="cc237-132"><xref:System.Reflection.Emit.AssemblyBuilder> オブジェクトによって表される動的アセンブリは永続化できますが、アセンブリがディスクに保存される前または後に実行することもできます。</span><span class="sxs-lookup"><span data-stu-id="cc237-132">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable, but can also be executed before and/or after the assembly is saved to disk.</span></span>  
  
 <span data-ttu-id="cc237-133">動的アセンブリが定義され、後で変更できない場合に、<xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=nameWithType> メソッドの呼び出しに適切な <xref:System.Reflection.Emit.AssemblyBuilderAccess> 値を指定することで、アクセスモードを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-133">The access mode must be specified by providing the appropriate <xref:System.Reflection.Emit.AssemblyBuilderAccess> value in the call to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=nameWithType> method when the dynamic assembly is defined and cannot be changed later.</span></span> <span data-ttu-id="cc237-134">ランタイムは、動的アセンブリのアクセスモードを使用して、アセンブリの内部表現を最適化します。</span><span class="sxs-lookup"><span data-stu-id="cc237-134">The runtime uses the access mode of a dynamic assembly to optimize the assembly's internal representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-135">次のコード例は、1つのモジュールで動的アセンブリを定義する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="cc237-135">The following code example shows how to define a dynamic assembly with one module.</span></span> <span data-ttu-id="cc237-136">この例のアセンブリのモジュールには、プライベートフィールドを持つ `MyDynamicType`、プライベートフィールドを取得および設定するプロパティ、プライベートフィールドを初期化するコンストラクター、およびユーザーが指定した数値をプライベートフィールドの値で乗算し、結果を返すメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="cc237-136">The module in the example assembly contains one type, `MyDynamicType`, which has a private field, a property that gets and sets the private field, constructors that initialize the private field, and a method that multiplies a user-supplied number by the private field value and returns the result.</span></span>  
  
 <span data-ttu-id="cc237-137"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> は、アセンブリの作成時に指定します。</span><span class="sxs-lookup"><span data-stu-id="cc237-137"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> is specified when the assembly is created.</span></span> <span data-ttu-id="cc237-138">アセンブリコードはすぐに使用されます。アセンブリは、 [ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を使用して検査したり、別のプログラムで使用したりできるように、ディスクにも保存されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-138">The assembly code is used immediately, and the assembly is also saved to disk so that it can be examined with [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) or used in another program.</span></span>  
  
 [!code-cpp[AssemblyBuilderClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilderClass/cpp/24895.cpp#1)]
 [!code-csharp[AssemblyBuilderClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilderClass/cs/24895.cs#1)]
 [!code-vb[AssemblyBuilderClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilderClass/vb/24895.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.AppDomain.DefineDynamicAssembly" />
    <related type="Article" href="https://msdn.microsoft.com/library/8e8e2631-62fd-40e7-a8ee-0039b06749bc"><span data-ttu-id="cc237-139">動的メソッドおよびアセンブリの出力</span><span class="sxs-lookup"><span data-stu-id="cc237-139">Emitting Dynamic Methods and Assemblies</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyBuilder ();" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.#ctor" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="xamarinios-10.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyBuilder();" FrameworkAlternate="xamarinios-10.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddResourceFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc237-140">このアセンブリに既存のリソース ファイルを追加します。</span><span class="sxs-lookup"><span data-stu-id="cc237-140">Adds an existing resource file to this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddResourceFile">
      <MemberSignature Language="C#" Value="public void AddResourceFile (string name, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceFile(string name, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceFile (name As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceFile(System::String ^ name, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AddResourceFile : string * string -&gt; unit" Usage="assemblyBuilder.AddResourceFile (name, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-141">リソースの論理名。</span><span class="sxs-lookup"><span data-stu-id="cc237-141">The logical name of the resource.</span></span></param>
        <param name="fileName"><span data-ttu-id="cc237-142">論理名を割り当てる対象の物理ファイル名 (.resources ファイル)。</span><span class="sxs-lookup"><span data-stu-id="cc237-142">The physical file name (.resources file) to which the logical name is mapped.</span></span> <span data-ttu-id="cc237-143">これには、パスを含めないようにします。このファイルは、追加先のアセンブリと同じディレクトリに配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-143">This should not include a path; the file must be in the same directory as the assembly to which it is added.</span></span></param>
        <summary><span data-ttu-id="cc237-144">このアセンブリに既存のリソース ファイルを追加します。</span><span class="sxs-lookup"><span data-stu-id="cc237-144">Adds an existing resource file to this assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-145">`fileName` は、他の永続モジュール、スタンドアロンマネージリソース、またはスタンドアロンマニフェストファイルと同じにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="cc237-145">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="cc237-146">ファイル内のマネージリソースは、パブリックであると見なされます。</span><span class="sxs-lookup"><span data-stu-id="cc237-146">The managed resources in the file are assumed to be public.</span></span>  
  
 <span data-ttu-id="cc237-147">指定されたリソースファイルは、アセンブリが保存されるディレクトリに存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-147">The specified resource file must be in the directory where the assembly will be saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-148">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-148">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-149">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-149">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-150">次のコードサンプルは、`AddResourceFile`を使用して、動的に作成されたアセンブリにリソースファイルをアタッチする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="cc237-150">The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-151"><paramref name="name" /> は以前に定義されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-151"><paramref name="name" /> has been previously defined.</span></span>  
  
<span data-ttu-id="cc237-152">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-152">-or-</span></span> 
<span data-ttu-id="cc237-153">アセンブリには、<paramref name="fileName" /> という名前の別のファイルがあります。</span><span class="sxs-lookup"><span data-stu-id="cc237-153">There is another file in the assembly named <paramref name="fileName" />.</span></span>  
  
<span data-ttu-id="cc237-154">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-154">-or-</span></span> 
<span data-ttu-id="cc237-155"><paramref name="name" /> の長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="cc237-155">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="cc237-156">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-156">-or-</span></span> 
<span data-ttu-id="cc237-157"><paramref name="fileName" /> の長さが 0 か、または <paramref name="fileName" /> にパスが含まれる場合。</span><span class="sxs-lookup"><span data-stu-id="cc237-157">The length of <paramref name="fileName" /> is zero, or if <paramref name="fileName" /> includes a path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-158"><paramref name="name" /> または <paramref name="fileName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cc237-158"><paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="cc237-159">ファイル <paramref name="fileName" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="cc237-159">The file <paramref name="fileName" /> is not found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-160">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-160">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddResourceFile">
      <MemberSignature Language="C#" Value="public void AddResourceFile (string name, string fileName, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceFile(string name, string fileName, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceFile (name As String, fileName As String, attribute As ResourceAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceFile(System::String ^ name, System::String ^ fileName, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.AddResourceFile : string * string * System.Reflection.ResourceAttributes -&gt; unit" Usage="assemblyBuilder.AddResourceFile (name, fileName, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-161">リソースの論理名。</span><span class="sxs-lookup"><span data-stu-id="cc237-161">The logical name of the resource.</span></span></param>
        <param name="fileName"><span data-ttu-id="cc237-162">論理名を割り当てる対象の物理ファイル名 (.resources ファイル)。</span><span class="sxs-lookup"><span data-stu-id="cc237-162">The physical file name (.resources file) to which the logical name is mapped.</span></span> <span data-ttu-id="cc237-163">これにパスが含まれていてはなりません。ファイルは、追加先アセンブリと同じディレクトリの中になければなりません。</span><span class="sxs-lookup"><span data-stu-id="cc237-163">This should not include a path; the file must be in the same directory as the assembly to which it is added.</span></span></param>
        <param name="attribute"><span data-ttu-id="cc237-164">リソースの属性。</span><span class="sxs-lookup"><span data-stu-id="cc237-164">The resource attributes.</span></span></param>
        <summary><span data-ttu-id="cc237-165">このアセンブリに既存のリソース ファイルを追加します。</span><span class="sxs-lookup"><span data-stu-id="cc237-165">Adds an existing resource file to this assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-166">`fileName` は、他の永続モジュール、スタンドアロンマネージリソース、またはスタンドアロンマニフェストファイルと同じにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="cc237-166">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="cc237-167">属性には、マネージド リソースを指定できます。</span><span class="sxs-lookup"><span data-stu-id="cc237-167">Attributes can be specified for the managed resource.</span></span>  
  
 <span data-ttu-id="cc237-168">指定されたリソースファイルは、アセンブリが保存されるディレクトリに存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-168">The specified resource file must be in the directory where the assembly will be saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-169">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-169">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-170">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-170">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-171">次のコードサンプルは、`AddResourceFile`を使用して、動的に作成されたアセンブリにリソースファイルをアタッチする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="cc237-171">The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-172"><paramref name="name" /> は以前に定義されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-172"><paramref name="name" /> has been previously defined.</span></span>  
  
<span data-ttu-id="cc237-173">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-173">-or-</span></span> 
<span data-ttu-id="cc237-174">アセンブリには、<paramref name="fileName" /> という名前の別のファイルがあります。</span><span class="sxs-lookup"><span data-stu-id="cc237-174">There is another file in the assembly named <paramref name="fileName" />.</span></span>  
  
<span data-ttu-id="cc237-175">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-175">-or-</span></span> 
<span data-ttu-id="cc237-176"><paramref name="name" /> の長さが 0、または <paramref name="fileName" /> の長さが 0 の場合。</span><span class="sxs-lookup"><span data-stu-id="cc237-176">The length of <paramref name="name" /> is zero or if the length of <paramref name="fileName" /> is zero.</span></span>  
  
<span data-ttu-id="cc237-177">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-177">-or-</span></span> 
 <span data-ttu-id="cc237-178"><paramref name="fileName" /> にパスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="cc237-178"><paramref name="fileName" /> includes a path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-179"><paramref name="name" /> または <paramref name="fileName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cc237-179"><paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="cc237-180">ファイル <paramref name="fileName" /> が見つからない場合。</span><span class="sxs-lookup"><span data-stu-id="cc237-180">If the file <paramref name="fileName" /> is not found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-181">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-181">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public override string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeBase : string" Usage="System.Reflection.Emit.AssemblyBuilder.CodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-182"><see cref="T:System.Reflection.AssemblyName" /> オブジェクトの中など、初めに指定されたアセンブリの場所を取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-182">Gets the location of the assembly, as specified originally (such as in an <see cref="T:System.Reflection.AssemblyName" /> object).</span></span></summary>
        <value><span data-ttu-id="cc237-183">初めに指定されたとおりのアセンブリの場所。</span><span class="sxs-lookup"><span data-stu-id="cc237-183">The location of the assembly, as specified originally.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-184">読み込まれたマニフェストを含むファイルへの絶対パスを取得するには、<xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-184">To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-185">このメソッドは現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="cc237-185">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-186">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-186">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefinedTypes">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; DefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; DefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.DefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ DefinedTypes { System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefinedTypes : seq&lt;System.Reflection.TypeInfo&gt;" Usage="System.Reflection.Emit.AssemblyBuilder.DefinedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc237-187">動的アセンブリを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-187">Defines a dynamic assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access);" />
      <MemberSignature Language="F#" Value="static member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly (name, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-188">アセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-188">The name of the assembly.</span></span></param>
        <param name="access"><span data-ttu-id="cc237-189">アセンブリのアクセス権。</span><span class="sxs-lookup"><span data-stu-id="cc237-189">The access rights of the assembly.</span></span></param>
        <summary><span data-ttu-id="cc237-190">指定した名前とアクセス権を持つ動的アセンブリを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-190">Defines a dynamic assembly that has the specified name and access rights.</span></span></summary>
        <returns><span data-ttu-id="cc237-191">新しいアセンブリを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc237-191">An object that represents the new assembly.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, assemblyAttributes As IEnumerable(Of CustomAttributeBuilder)) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ assemblyAttributes);" />
      <MemberSignature Language="F#" Value="static member DefineDynamicAssembly : System.Reflection.AssemblyName * System.Reflection.Emit.AssemblyBuilderAccess * seq&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; -&gt; System.Reflection.Emit.AssemblyBuilder" Usage="System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly (name, access, assemblyAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" Index="1" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt;" Index="2" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-192">アセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-192">The name of the assembly.</span></span></param>
        <param name="access"><span data-ttu-id="cc237-193">アセンブリのアクセス権。</span><span class="sxs-lookup"><span data-stu-id="cc237-193">The access rights of the assembly.</span></span></param>
        <param name="assemblyAttributes"><span data-ttu-id="cc237-194">アセンブリの属性が格納されているコレクション。</span><span class="sxs-lookup"><span data-stu-id="cc237-194">A collection that contains the attributes of the assembly.</span></span></param>
        <summary><span data-ttu-id="cc237-195">指定した名前、アクセス権、および属性を持つ新しいアセンブリを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-195">Defines a new assembly that has the specified name, access rights, and attributes.</span></span></summary>
        <returns><span data-ttu-id="cc237-196">新しいアセンブリを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc237-196">An object that represents the new assembly.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicModule">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc237-197">このアセンブリに動的モジュールを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-197">Defines a dynamic module in this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicModule : string -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.DefineDynamicModule name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-198">動的アセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-198">The name of the dynamic module.</span></span></param>
        <summary><span data-ttu-id="cc237-199">このアセンブリに名前付き遷移動的モジュールを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-199">Defines a named transient dynamic module in this assembly.</span></span></summary>
        <returns><span data-ttu-id="cc237-200">定義された動的モジュールを表す <see cref="T:System.Reflection.Emit.ModuleBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-200">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> representing the defined dynamic module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-201">アセンブリに同じ名前の複数の動的モジュールを定義すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="cc237-201">It is an error to define multiple dynamic modules with the same name in an assembly.</span></span>  
  
 <span data-ttu-id="cc237-202">定義された動的モジュールは一時的です。</span><span class="sxs-lookup"><span data-stu-id="cc237-202">The defined dynamic module is transient.</span></span> <span data-ttu-id="cc237-203">親の動的アセンブリが <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>で作成された場合でも、動的モジュールは保存されません。</span><span class="sxs-lookup"><span data-stu-id="cc237-203">The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-204">動的モジュールのデバッグ時に最適化されないようにするには、<xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>を呼び出す前に、<xref:System.Diagnostics.DebuggableAttribute> 属性を動的アセンブリに適用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-204">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="cc237-205"><xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> フラグを使用して <xref:System.Diagnostics.DebuggableAttribute> のインスタンスを作成し、<xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> メソッドを使用して適用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-205">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="cc237-206">動的アセンブリに属性を適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-206">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="cc237-207">モジュールに適用しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-207">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-208">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-208">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-209">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-209">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-210">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="cc237-210">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="cc237-211">次のコード例は、`DefineDynamicModule`を使用して一時的な動的モジュールを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="cc237-211">The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-212"><paramref name="name" /> が空白文字から始まっています。</span><span class="sxs-lookup"><span data-stu-id="cc237-212"><paramref name="name" /> begins with white space.</span></span>  
  
<span data-ttu-id="cc237-213">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-213">-or-</span></span> 
<span data-ttu-id="cc237-214"><paramref name="name" /> の長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="cc237-214">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="cc237-215">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-215">-or-</span></span> 
<span data-ttu-id="cc237-216"><paramref name="name" /> の長さがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="cc237-216">The length of <paramref name="name" /> is greater than the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-217"><paramref name="name" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-217"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-218">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-218">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="cc237-219">既定のシンボル ライターのアセンブリを読み込めません。</span><span class="sxs-lookup"><span data-stu-id="cc237-219">The assembly for default symbol writer cannot be loaded.</span></span>  
  
 <span data-ttu-id="cc237-220">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-220">-or-</span></span>  
  
 <span data-ttu-id="cc237-221">既定のシンボル ライターのインターフェイスを実装する型が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="cc237-221">The type that implements the default symbol writer interface cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, bool emitSymbolInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, bool emitSymbolInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, emitSymbolInfo As Boolean) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, bool emitSymbolInfo);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicModule : string * bool -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.DefineDynamicModule (name, emitSymbolInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="emitSymbolInfo" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-222">動的アセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-222">The name of the dynamic module.</span></span></param>
        <param name="emitSymbolInfo"><span data-ttu-id="cc237-223">シンボル情報を生成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-223"><see langword="true" /> if symbol information is to be emitted; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="cc237-224">このアセンブリに名前付き遷移動的モジュールを定義し、シンボル情報を作成するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="cc237-224">Defines a named transient dynamic module in this assembly and specifies whether symbol information should be emitted.</span></span></summary>
        <returns><span data-ttu-id="cc237-225">定義された動的モジュールを表す <see cref="T:System.Reflection.Emit.ModuleBuilder" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-225">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> representing the defined dynamic module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-226">アセンブリに同じ名前の複数の動的モジュールを定義すると、エラーになります。</span><span class="sxs-lookup"><span data-stu-id="cc237-226">It is an error to define multiple dynamic modules with the same name in an assembly.</span></span>  
  
 <span data-ttu-id="cc237-227">親の動的アセンブリが <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>で作成された場合でも、動的モジュールは保存されません。</span><span class="sxs-lookup"><span data-stu-id="cc237-227">The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-228">動的モジュールのデバッグ時に最適化されないようにするには、<xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>を呼び出す前に、<xref:System.Diagnostics.DebuggableAttribute> 属性を動的アセンブリに適用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-228">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="cc237-229"><xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> フラグを使用して <xref:System.Diagnostics.DebuggableAttribute> のインスタンスを作成し、<xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> メソッドを使用して適用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-229">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="cc237-230">動的アセンブリに属性を適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-230">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="cc237-231">モジュールに適用しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-231">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-232">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-232">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-233">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-233">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-234">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="cc237-234">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="cc237-235">次のコード例では、シンボル情報を抑制する `DefineDynamicModule`を使用して、一時的な動的モジュールを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cc237-235">The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`, suppressing symbol information.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#2)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#2)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-236"><paramref name="name" /> が空白文字から始まっています。</span><span class="sxs-lookup"><span data-stu-id="cc237-236"><paramref name="name" /> begins with white space.</span></span>  
  
<span data-ttu-id="cc237-237">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-237">-or-</span></span> 
<span data-ttu-id="cc237-238"><paramref name="name" /> の長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="cc237-238">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="cc237-239">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-239">-or-</span></span> 
<span data-ttu-id="cc237-240"><paramref name="name" /> の長さがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="cc237-240">The length of <paramref name="name" /> is greater than the system-defined maximum length.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-241"><paramref name="name" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-241"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="cc237-242">既定のシンボル ライターのアセンブリを読み込めません。</span><span class="sxs-lookup"><span data-stu-id="cc237-242">The assembly for default symbol writer cannot be loaded.</span></span>  
  
 <span data-ttu-id="cc237-243">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-243">-or-</span></span>  
  
 <span data-ttu-id="cc237-244">既定のシンボル ライター インターフェイスを実装する型が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="cc237-244">The type that implements the default symbol writer interface cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-245">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-245">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, fileName As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicModule : string * string -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.DefineDynamicModule (name, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-246">動的アセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-246">The name of the dynamic module.</span></span></param>
        <param name="fileName"><span data-ttu-id="cc237-247">動的モジュールを保存するファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-247">The name of the file to which the dynamic module should be saved.</span></span></param>
        <summary><span data-ttu-id="cc237-248">指定したファイルに保存される指定した名前の持続可能動的モジュールを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-248">Defines a persistable dynamic module with the given name that will be saved to the specified file.</span></span> <span data-ttu-id="cc237-249">シンボル情報は作成されません。</span><span class="sxs-lookup"><span data-stu-id="cc237-249">No symbol information is emitted.</span></span></summary>
        <returns><span data-ttu-id="cc237-250">定義された動的モジュールを表す <see cref="T:System.Reflection.Emit.ModuleBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc237-250">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> object representing the defined dynamic module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-251">永続動的モジュールを定義するには、このアセンブリを <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> または <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> 属性を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-251">To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.</span></span>  
  
 <span data-ttu-id="cc237-252">モジュールにアセンブリマニフェストを含める場合、`name` はアセンブリの名前と同じである必要があります (つまり、動的アセンブリの作成に使用された <xref:System.Reflection.AssemblyName> の <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> プロパティ)。また、`fileName` は、アセンブリを保存するときに指定したファイル名と同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-252">If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.</span></span>  
  
 <span data-ttu-id="cc237-253">モジュールが1つだけのアセンブリでは、そのモジュールにアセンブリマニフェストが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-253">In an assembly with only one module, that module should contain the assembly manifest.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-254">動的モジュールのデバッグ時に最適化されないようにするには、<xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>を呼び出す前に、<xref:System.Diagnostics.DebuggableAttribute> 属性を動的アセンブリに適用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-254">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="cc237-255"><xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> フラグを使用して <xref:System.Diagnostics.DebuggableAttribute> のインスタンスを作成し、<xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> メソッドを使用して適用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-255">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="cc237-256">動的アセンブリに属性を適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-256">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="cc237-257">モジュールに適用しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-257">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-258">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-258">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-259">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-259">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-260">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="cc237-260">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="cc237-261">次のコード例は、`DefineDynamicModule`を使用して永続的な動的モジュールを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="cc237-261">The code example below demonstrates how to create a persistent dynamic module using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#3)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#3)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-262"><paramref name="name" /> または <paramref name="fileName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cc237-262"><paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-263"><paramref name="name" /> または <paramref name="fileName" /> の長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="cc237-263">The length of <paramref name="name" /> or <paramref name="fileName" /> is zero.</span></span>  
  
<span data-ttu-id="cc237-264">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-264">-or-</span></span> 
<span data-ttu-id="cc237-265"><paramref name="name" /> の長さがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="cc237-265">The length of <paramref name="name" /> is greater than the system-defined maximum length.</span></span>  
  
<span data-ttu-id="cc237-266">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-266">-or-</span></span> 
 <span data-ttu-id="cc237-267"><paramref name="fileName" /> にパス指定 (ディレクトリ コンポーネントなど) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="cc237-267"><paramref name="fileName" /> contains a path specification (a directory component, for example).</span></span>  
  
<span data-ttu-id="cc237-268">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-268">-or-</span></span> 
<span data-ttu-id="cc237-269">このアセンブリに属する別のファイルの名前と衝突します。</span><span class="sxs-lookup"><span data-stu-id="cc237-269">There is a conflict with the name of another file that belongs to this assembly.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc237-270">このアセンブリは既に保存されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-270">This assembly has been previously saved.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-271">このアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> 属性の動的アセンブリで呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-271">This assembly was called on a dynamic assembly with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> attribute.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-272">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-272">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="cc237-273">既定のシンボル ライターのアセンブリを読み込めません。</span><span class="sxs-lookup"><span data-stu-id="cc237-273">The assembly for default symbol writer cannot be loaded.</span></span>  
  
 <span data-ttu-id="cc237-274">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-274">-or-</span></span>  
  
 <span data-ttu-id="cc237-275">既定のシンボル ライターのインターフェイスを実装する型が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="cc237-275">The type that implements the default symbol writer interface cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName, bool emitSymbolInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, string fileName, bool emitSymbolInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, fileName As String, emitSymbolInfo As Boolean) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, System::String ^ fileName, bool emitSymbolInfo);" />
      <MemberSignature Language="F#" Value="member this.DefineDynamicModule : string * string * bool -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.DefineDynamicModule (name, fileName, emitSymbolInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="emitSymbolInfo" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-276">動的アセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-276">The name of the dynamic module.</span></span></param>
        <param name="fileName"><span data-ttu-id="cc237-277">動的モジュールの保存先となるファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-277">The name of the file to which the dynamic module should be saved.</span></span></param>
        <param name="emitSymbolInfo"><span data-ttu-id="cc237-278"><see langword="true" /> の場合は、既定のシンボル ライターを使用してシンボリック情報が書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cc237-278">If <see langword="true" />, symbolic information is written using the default symbol writer.</span></span></param>
        <summary><span data-ttu-id="cc237-279">モジュール名、モジュールの保存先ファイルの名前、既定のシンボル ライターを使用してシンボル情報を出力するかどうかを指定して、持続可能動的モジュールを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-279">Defines a persistable dynamic module, specifying the module name, the name of the file to which the module will be saved, and whether symbol information should be emitted using the default symbol writer.</span></span></summary>
        <returns><span data-ttu-id="cc237-280">定義された動的モジュールを表す <see cref="T:System.Reflection.Emit.ModuleBuilder" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc237-280">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> object representing the defined dynamic module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-281">永続動的モジュールを定義するには、このアセンブリを <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> または <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> 属性を使用して作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-281">To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.</span></span>  
  
 <span data-ttu-id="cc237-282">モジュールにアセンブリマニフェストを含める場合、`name` はアセンブリの名前と同じである必要があります (つまり、動的アセンブリの作成に使用された <xref:System.Reflection.AssemblyName> の <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> プロパティ)。また、`fileName` は、アセンブリを保存するときに指定したファイル名と同じである必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-282">If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.</span></span>  
  
 <span data-ttu-id="cc237-283">モジュールが1つだけのアセンブリでは、そのモジュールにアセンブリマニフェストが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-283">In an assembly with only one module, that module should contain the assembly manifest.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-284">動的モジュールのデバッグ時に最適化されないようにするには、<xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>を呼び出す前に、<xref:System.Diagnostics.DebuggableAttribute> 属性を動的アセンブリに適用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-284">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="cc237-285"><xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> フラグを使用して <xref:System.Diagnostics.DebuggableAttribute> のインスタンスを作成し、<xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> メソッドを使用して適用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-285">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="cc237-286">動的アセンブリに属性を適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-286">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="cc237-287">モジュールに適用しても効果はありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-287">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-288">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-288">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-289">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-289">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-290">[Visual Basic、 C#]</span><span class="sxs-lookup"><span data-stu-id="cc237-290">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="cc237-291">次のコード例では、`DefineDynamicModule`を使用して、シンボルの出力を持つ永続的な動的モジュールを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cc237-291">The code example below demonstrates how to create a persistent dynamic module with symbol emission using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#4)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#4)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-292"><paramref name="name" /> または <paramref name="fileName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cc237-292"><paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-293"><paramref name="name" /> または <paramref name="fileName" /> の長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="cc237-293">The length of <paramref name="name" /> or <paramref name="fileName" /> is zero.</span></span>  
  
<span data-ttu-id="cc237-294">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-294">-or-</span></span> 
<span data-ttu-id="cc237-295"><paramref name="name" /> の長さがシステム定義の最大長を超えています。</span><span class="sxs-lookup"><span data-stu-id="cc237-295">The length of <paramref name="name" /> is greater than the system-defined maximum length.</span></span>  
  
<span data-ttu-id="cc237-296">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-296">-or-</span></span> 
 <span data-ttu-id="cc237-297"><paramref name="fileName" /> にパス指定 (ディレクトリ コンポーネントなど) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="cc237-297"><paramref name="fileName" /> contains a path specification (a directory component, for example).</span></span>  
  
<span data-ttu-id="cc237-298">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-298">-or-</span></span> 
<span data-ttu-id="cc237-299">このアセンブリに属する別のファイルの名前と衝突します。</span><span class="sxs-lookup"><span data-stu-id="cc237-299">There is a conflict with the name of another file that belongs to this assembly.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc237-300">このアセンブリは既に保存されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-300">This assembly has been previously saved.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-301">このアセンブリは、<see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> 属性の動的アセンブリで呼び出されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-301">This assembly was called on a dynamic assembly with the <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> attribute.</span></span></exception>
        <exception cref="T:System.ExecutionEngineException"><span data-ttu-id="cc237-302">既定のシンボル ライターのアセンブリを読み込むことができません。</span><span class="sxs-lookup"><span data-stu-id="cc237-302">The assembly for default symbol writer cannot be loaded.</span></span>  
  
 <span data-ttu-id="cc237-303">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-303">-or-</span></span>  
  
 <span data-ttu-id="cc237-304">既定のシンボル ライター インターフェイスを実装する型が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="cc237-304">The type that implements the default symbol writer interface cannot be found.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-305">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-305">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc237-306">このアセンブリのスタンドアロン マネージド リソースを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-306">Defines a standalone managed resource for this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, fileName As String) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string * string -&gt; System.Resources.IResourceWriter" Usage="assemblyBuilder.DefineResource (name, description, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-307">リソースの論理名。</span><span class="sxs-lookup"><span data-stu-id="cc237-307">The logical name of the resource.</span></span></param>
        <param name="description"><span data-ttu-id="cc237-308">文章によるリソースの説明。</span><span class="sxs-lookup"><span data-stu-id="cc237-308">A textual description of the resource.</span></span></param>
        <param name="fileName"><span data-ttu-id="cc237-309">論理名のマップ先物理ファイル名 (.resources ファイル)。</span><span class="sxs-lookup"><span data-stu-id="cc237-309">The physical file name (.resources file) to which the logical name is mapped.</span></span> <span data-ttu-id="cc237-310">これにはパスを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="cc237-310">This should not include a path.</span></span></param>
        <summary><span data-ttu-id="cc237-311">既定のパブリック リソース属性を使用して、このアセンブリのスタンドアロン マネージド リソースを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-311">Defines a standalone managed resource for this assembly with the default public resource attribute.</span></span></summary>
        <returns><span data-ttu-id="cc237-312">指定されたリソースの <see cref="T:System.Resources.ResourceWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc237-312">A <see cref="T:System.Resources.ResourceWriter" /> object for the specified resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-313"><xref:System.Resources.ResourceWriter.AddResource%2A>を呼び出すことによって、返された <xref:System.Resources.ResourceWriter> と共に細かいグレインリソースを追加できます。</span><span class="sxs-lookup"><span data-stu-id="cc237-313">Fine grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.</span></span>  
  
 <span data-ttu-id="cc237-314">`fileName` は、他の永続モジュール、スタンドアロンのマネージリソース、またはスタンドアロンのマニフェストファイルのものと同じにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="cc237-314">`fileName` should not be the same as that of any other persistable module, stand-alone managed resource, or the stand-alone manifest file.</span></span>  
  
 <span data-ttu-id="cc237-315">ランタイムは、動的アセンブリが保存されるときに <xref:System.Resources.ResourceWriter.Close%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cc237-315">The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-316">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-316">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-317">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-317">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-318">次の例では、<xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> メソッドを使用してリソースライターを取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-318">The following example uses the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> method to get a resource writer.</span></span> <span data-ttu-id="cc237-319">この例では、リソースライターを使用して、3つのリソース文字列を追加します。</span><span class="sxs-lookup"><span data-stu-id="cc237-319">The example uses the resource writer to add three resource strings.</span></span>  
  
 [!code-cpp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CPP/assemblybuilder_defineresource.cpp#1)]
 [!code-csharp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CS/assemblybuilder_defineresource.cs#1)]
 [!code-vb[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/VB/assemblybuilder_defineresource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-320"><paramref name="name" /> は以前に定義されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-320"><paramref name="name" /> has been previously defined.</span></span>  
  
<span data-ttu-id="cc237-321">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-321">-or-</span></span> 
<span data-ttu-id="cc237-322">アセンブリには、<paramref name="fileName" /> という名前の別のファイルがあります。</span><span class="sxs-lookup"><span data-stu-id="cc237-322">There is another file in the assembly named <paramref name="fileName" />.</span></span>  
  
<span data-ttu-id="cc237-323">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-323">-or-</span></span> 
<span data-ttu-id="cc237-324"><paramref name="name" /> の長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="cc237-324">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="cc237-325">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-325">-or-</span></span> 
<span data-ttu-id="cc237-326"><paramref name="fileName" /> の長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="cc237-326">The length of <paramref name="fileName" /> is zero.</span></span>  
  
<span data-ttu-id="cc237-327">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-327">-or-</span></span> 
 <span data-ttu-id="cc237-328"><paramref name="fileName" /> にパスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="cc237-328"><paramref name="fileName" /> includes a path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-329"><paramref name="name" /> または <paramref name="fileName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cc237-329"><paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-330">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-330">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, string fileName, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, fileName As String, attribute As ResourceAttributes) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::String ^ fileName, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string * string * System.Reflection.ResourceAttributes -&gt; System.Resources.IResourceWriter" Usage="assemblyBuilder.DefineResource (name, description, fileName, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="description" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileName" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-331">リソースの論理名。</span><span class="sxs-lookup"><span data-stu-id="cc237-331">The logical name of the resource.</span></span></param>
        <param name="description"><span data-ttu-id="cc237-332">文章によるリソースの説明。</span><span class="sxs-lookup"><span data-stu-id="cc237-332">A textual description of the resource.</span></span></param>
        <param name="fileName"><span data-ttu-id="cc237-333">論理名のマップ先物理ファイル名 (.resources ファイル)。</span><span class="sxs-lookup"><span data-stu-id="cc237-333">The physical file name (.resources file) to which the logical name is mapped.</span></span> <span data-ttu-id="cc237-334">パスを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="cc237-334">This should not include a path.</span></span></param>
        <param name="attribute"><span data-ttu-id="cc237-335">リソースの属性。</span><span class="sxs-lookup"><span data-stu-id="cc237-335">The resource attributes.</span></span></param>
        <summary><span data-ttu-id="cc237-336">このアセンブリのスタンドアロン マネージド リソースを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-336">Defines a standalone managed resource for this assembly.</span></span> <span data-ttu-id="cc237-337">属性には、マネージド リソースを指定できます。</span><span class="sxs-lookup"><span data-stu-id="cc237-337">Attributes can be specified for the managed resource.</span></span></summary>
        <returns><span data-ttu-id="cc237-338">指定されたリソースの <see cref="T:System.Resources.ResourceWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc237-338">A <see cref="T:System.Resources.ResourceWriter" /> object for the specified resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-339"><xref:System.Resources.ResourceWriter.AddResource%2A>を呼び出すことにより、返された <xref:System.Resources.ResourceWriter> で粒度の細かいリソースを追加できます。</span><span class="sxs-lookup"><span data-stu-id="cc237-339">Fine-grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.</span></span>  
  
 <span data-ttu-id="cc237-340">`fileName` は、他の永続モジュール、スタンドアロンマネージリソース、またはスタンドアロンマニフェストファイルと同じにすることはできません。</span><span class="sxs-lookup"><span data-stu-id="cc237-340">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="cc237-341">ランタイムは、動的アセンブリが保存されるときに <xref:System.Resources.ResourceWriter.Close%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cc237-341">The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-342">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-342">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-343">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-343">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-344"><paramref name="name" /> は既に定義済みか、<paramref name="fileName" /> という名前のアセンブリに別のファイルが存在する場合。</span><span class="sxs-lookup"><span data-stu-id="cc237-344"><paramref name="name" /> has been previously defined or if there is another file in the assembly named <paramref name="fileName" />.</span></span>  
  
<span data-ttu-id="cc237-345">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-345">-or-</span></span> 
<span data-ttu-id="cc237-346"><paramref name="name" /> の長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="cc237-346">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="cc237-347">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-347">-or-</span></span> 
<span data-ttu-id="cc237-348"><paramref name="fileName" /> の長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="cc237-348">The length of <paramref name="fileName" /> is zero.</span></span>  
  
<span data-ttu-id="cc237-349">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-349">-or-</span></span> 
 <span data-ttu-id="cc237-350"><paramref name="fileName" /> にパスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="cc237-350"><paramref name="fileName" /> includes a path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-351"><paramref name="name" /> または <paramref name="fileName" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cc237-351"><paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-352">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-352">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineUnmanagedResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc237-353">このアセンブリのアンマネージ リソースを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-353">Defines an unmanaged resource for this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (byte[] resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(unsigned int8[] resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resource As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(cli::array &lt;System::Byte&gt; ^ resource);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : byte[] -&gt; unit" Usage="assemblyBuilder.DefineUnmanagedResource resource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resource"><span data-ttu-id="cc237-354">アンマネージ リソースを表すバイトの非透過 BLOB。</span><span class="sxs-lookup"><span data-stu-id="cc237-354">The opaque blob of bytes representing the unmanaged resource.</span></span></param>
        <summary><span data-ttu-id="cc237-355">このアセンブリのアンマネージ リソースをバイトの非透過 BLOB として定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-355">Defines an unmanaged resource for this assembly as an opaque blob of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-356">アセンブリは、1つのアンマネージリソースのみに関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="cc237-356">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="cc237-357">これは、いずれかのメソッドが呼び出された後に <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> または <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> を呼び出すと、ArgumentException がスローされることを意味します。</span><span class="sxs-lookup"><span data-stu-id="cc237-357">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException being throw.</span></span> <span data-ttu-id="cc237-358">複数のアンマネージリソースを Microsoft ResMerge ユーティリティなどのツールとマージする必要があります (共通言語ランタイムでは提供されません)。</span><span class="sxs-lookup"><span data-stu-id="cc237-358">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-359">次のコードサンプルでは、`DefineUnmanagedResource`を使用して、アンマネージリソースを表すバイト配列を作成し、動的アセンブリにアタッチします。</span><span class="sxs-lookup"><span data-stu-id="cc237-359">The following code sample creates and attaches an array of bytes representing an unmanaged resource to a dynamic assembly, using `DefineUnmanagedResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CPP/assemblybuilder_defineunmanagedresource2.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CS/assemblybuilder_defineunmanagedresource2.cs#1)]
 [!code-vb[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/VB/assemblybuilder_defineunmanagedresource2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-360">アンマネージ リソースは、以前に定義されました。</span><span class="sxs-lookup"><span data-stu-id="cc237-360">An unmanaged resource was previously defined.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-361"><paramref name="resource" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-361"><paramref name="resource" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-362">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-362">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (string resourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(string resourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resourceFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(System::String ^ resourceFileName);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : string -&gt; unit" Usage="assemblyBuilder.DefineUnmanagedResource resourceFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resourceFileName"><span data-ttu-id="cc237-363">リソース ファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-363">The name of the resource file.</span></span></param>
        <summary><span data-ttu-id="cc237-364">リソース ファイルの名前が指定されたこのアセンブリのアンマネージ リソース ファイルを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-364">Defines an unmanaged resource file for this assembly given the name of the resource file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-365">アセンブリは、1つのアンマネージリソースのみに関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="cc237-365">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="cc237-366">これは、いずれかのメソッドが呼び出された後に <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> または <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> を呼び出すと、ArgumentException がスローされることを意味します。</span><span class="sxs-lookup"><span data-stu-id="cc237-366">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="cc237-367">複数のアンマネージリソースを Microsoft ResMerge ユーティリティなどのツールとマージする必要があります (共通言語ランタイムでは提供されません)。</span><span class="sxs-lookup"><span data-stu-id="cc237-367">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-368">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-368">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-369">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-369">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-370">次の例では、外部リソースファイルを渡して `DefineUnmanagedResource`の呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="cc237-370">The example below demonstrates a call to `DefineUnmanagedResource`, passing an external resource file.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CPP/assemblybuilder_defineunmanagedresource.cpp#3)]
 [!code-csharp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CS/assemblybuilder_defineunmanagedresource.cs#3)]
 [!code-vb[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/VB/assemblybuilder_defineunmanagedresource.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-371">アンマネージ リソースは、以前に定義されました。</span><span class="sxs-lookup"><span data-stu-id="cc237-371">An unmanaged resource was previously defined.</span></span>  
  
<span data-ttu-id="cc237-372">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-372">-or-</span></span> 
<span data-ttu-id="cc237-373">ファイル <paramref name="resourceFileName" /> が読み取り可能ではありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-373">The file <paramref name="resourceFileName" /> is not readable.</span></span>  
  
<span data-ttu-id="cc237-374">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-374">-or-</span></span> 
 <span data-ttu-id="cc237-375"><paramref name="resourceFileName" /> が空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="cc237-375"><paramref name="resourceFileName" /> is the empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-376"><paramref name="resourceFileName" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-376"><paramref name="resourceFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="cc237-377"><paramref name="resourceFileName" /> が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="cc237-377"><paramref name="resourceFileName" /> is not found.</span></span>  
  
<span data-ttu-id="cc237-378">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-378">-or-</span></span> 
 <span data-ttu-id="cc237-379"><paramref name="resourceFileName" /> はディレクトリです。</span><span class="sxs-lookup"><span data-stu-id="cc237-379"><paramref name="resourceFileName" /> is a directory.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-380">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-380">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineVersionInfoResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc237-381">このアセンブリのアンマネージ バージョン情報リソースを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-381">Defines an unmanaged version information resource for this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineVersionInfoResource">
      <MemberSignature Language="C#" Value="public void DefineVersionInfoResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineVersionInfoResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineVersionInfoResource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineVersionInfoResource();" />
      <MemberSignature Language="F#" Value="member this.DefineVersionInfoResource : unit -&gt; unit" Usage="assemblyBuilder.DefineVersionInfoResource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc237-382">アセンブリの AssemblyName オブジェクトと、アセンブリのカスタム属性に指定された情報を使用して、アンマネージ バージョンの情報リソースを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-382">Defines an unmanaged version information resource using the information specified in the assembly's AssemblyName object and the assembly's custom attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-383">アセンブリは、1つのアンマネージリソースのみに関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="cc237-383">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="cc237-384">これは、いずれかのメソッドが呼び出された後に <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> または <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> を呼び出すと、ArgumentException がスローされることを意味します。</span><span class="sxs-lookup"><span data-stu-id="cc237-384">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="cc237-385">複数のアンマネージリソースを Microsoft ResMerge ユーティリティなどのツールにマージする必要があります (共通言語ランタイム SDK では提供されません)。</span><span class="sxs-lookup"><span data-stu-id="cc237-385">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime SDK).</span></span>  
  
 <span data-ttu-id="cc237-386">空の引数文字列は、1つのスペースとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cc237-386">Empty argument strings get written as a single space.</span></span> <span data-ttu-id="cc237-387">引数文字列では、null 文字の代わりにスペースが使用されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-387">Spaces are substituted for null characters in the argument strings.</span></span>  
  
 <span data-ttu-id="cc237-388">この情報は、この動的アセンブリを定義するために使用される `AssemblyName` オブジェクトから推論されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-388">The information is inferred from the `AssemblyName` object used to define this dynamic assembly.</span></span> <span data-ttu-id="cc237-389">このアセンブリのカスタム属性は、`AssemblyName` オブジェクトで指定された情報をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="cc237-389">This assembly's custom attributes override information specified in the `AssemblyName` object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-390">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-390">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-391">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-391">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-392">次の例は、`DefineVersionInfoResource`の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="cc237-392">The example below illustrates the usage of `DefineVersionInfoResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]
 [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-393">アンマネージ バージョン情報リソースが既に定義されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-393">An unmanaged version information resource was previously defined.</span></span>  
  
 <span data-ttu-id="cc237-394">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-394">-or-</span></span>  
  
 <span data-ttu-id="cc237-395">アンマネージ バージョン情報が大きすぎて、永続化できません。</span><span class="sxs-lookup"><span data-stu-id="cc237-395">The unmanaged version information is too large to persist.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-396">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-396">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineVersionInfoResource">
      <MemberSignature Language="C#" Value="public void DefineVersionInfoResource (string product, string productVersion, string company, string copyright, string trademark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineVersionInfoResource(string product, string productVersion, string company, string copyright, string trademark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineVersionInfoResource (product As String, productVersion As String, company As String, copyright As String, trademark As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineVersionInfoResource(System::String ^ product, System::String ^ productVersion, System::String ^ company, System::String ^ copyright, System::String ^ trademark);" />
      <MemberSignature Language="F#" Value="member this.DefineVersionInfoResource : string * string * string * string * string -&gt; unit" Usage="assemblyBuilder.DefineVersionInfoResource (product, productVersion, company, copyright, trademark)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="product" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="productVersion" Type="System.String" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="company" Type="System.String" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="copyright" Type="System.String" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="trademark" Type="System.String" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="product"><span data-ttu-id="cc237-397">このアセンブリが配布される製品の名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-397">The name of the product with which this assembly is distributed.</span></span></param>
        <param name="productVersion"><span data-ttu-id="cc237-398">このアセンブリと共に配布する製品のバージョン。</span><span class="sxs-lookup"><span data-stu-id="cc237-398">The version of the product with which this assembly is distributed.</span></span></param>
        <param name="company"><span data-ttu-id="cc237-399">このアセンブリを作成した会社名。</span><span class="sxs-lookup"><span data-stu-id="cc237-399">The name of the company that produced this assembly.</span></span></param>
        <param name="copyright"><span data-ttu-id="cc237-400">このアセンブリに適用されるすべての著作権表記、商標、および登録商標を記述します。</span><span class="sxs-lookup"><span data-stu-id="cc237-400">Describes all copyright notices, trademarks, and registered trademarks that apply to this assembly.</span></span> <span data-ttu-id="cc237-401">これには著作権表記の全文、著作権や商標などを示す記号、著作権取得日、商標番号などが含まれます。</span><span class="sxs-lookup"><span data-stu-id="cc237-401">This should include the full text of all notices, legal symbols, copyright dates, trademark numbers, and so on.</span></span> <span data-ttu-id="cc237-402">英語では、この文字列は "Copyright Microsoft Corp. 1990-2001" という書式になります。1990-2001".</span><span class="sxs-lookup"><span data-stu-id="cc237-402">In English, this string should be in the format "Copyright Microsoft Corp. 1990-2001".</span></span></param>
        <param name="trademark"><span data-ttu-id="cc237-403">このアセンブリに適用されるすべての商標および登録商標を記述します。</span><span class="sxs-lookup"><span data-stu-id="cc237-403">Describes all trademarks and registered trademarks that apply to this assembly.</span></span> <span data-ttu-id="cc237-404">これには著作権表記の全文、著作権や商標などを示す記号、商標番号などが含まれます。</span><span class="sxs-lookup"><span data-stu-id="cc237-404">This should include the full text of all notices, legal symbols, trademark numbers, and so on.</span></span> <span data-ttu-id="cc237-405">英語では、この文字列は "Windows is a trademark of Microsoft Corporation" という書式になります。</span><span class="sxs-lookup"><span data-stu-id="cc237-405">In English, this string should be in the format "Windows is a trademark of Microsoft Corporation".</span></span></param>
        <summary><span data-ttu-id="cc237-406">指定された仕様で、このアセンブリのアンマネージ バージョン情報リソースを定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-406">Defines an unmanaged version information resource for this assembly with the given specifications.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-407">アセンブリは、1つのアンマネージリソースのみに関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="cc237-407">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="cc237-408">これは、いずれかのメソッドが呼び出された後に <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> または <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> を呼び出すと、ArgumentException がスローされることを意味します。</span><span class="sxs-lookup"><span data-stu-id="cc237-408">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="cc237-409">複数のアンマネージリソースを Microsoft `ResMerge` ユーティリティなどのツールにマージする必要があります (共通言語ランタイム SDK では提供されません)。</span><span class="sxs-lookup"><span data-stu-id="cc237-409">Multiple unmanaged resources need to be merged with a tool such as the Microsoft `ResMerge` utility (not supplied with the common language runtime SDK).</span></span>  
  
 <span data-ttu-id="cc237-410">空の引数文字列は、1つのスペースとして書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="cc237-410">Empty argument strings get written as a single space.</span></span> <span data-ttu-id="cc237-411">引数文字列では、null 文字の代わりにスペースが使用されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-411">Spaces are substituted for null characters in the argument strings.</span></span>  
  
 <span data-ttu-id="cc237-412">バージョンリソースの構造には、ファイルのバージョン、言語、および配布を識別するデータが含まれます。</span><span class="sxs-lookup"><span data-stu-id="cc237-412">The structure of the version resource includes data that identifies the version, language, and distribution of the file.</span></span> <span data-ttu-id="cc237-413">インストールプログラムでは、ファイルインストールライブラリ (VER) の関数を使用します。DLL) を呼び出して、ファイルからバージョン情報リソースを取得し、リソースからバージョン情報ブロックを抽出します。</span><span class="sxs-lookup"><span data-stu-id="cc237-413">Installation programs use the functions in the file installation library (VER.DLL) to retrieve the version information resource from a file and to extract the version information blocks from the resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-414">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-414">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-415">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-415">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-416">次の例は、`DefineVersionInfoResource`の使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="cc237-416">The example below illustrates the usage of `DefineVersionInfoResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]
 [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-417">アンマネージ バージョン情報リソースが既に定義されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-417">An unmanaged version information resource was previously defined.</span></span>  
  
 <span data-ttu-id="cc237-418">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-418">-or-</span></span>  
  
 <span data-ttu-id="cc237-419">アンマネージ バージョン情報が大きすぎて、永続化できません。</span><span class="sxs-lookup"><span data-stu-id="cc237-419">The unmanaged version information is too large to persist.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-420">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-420">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryPoint : System.Reflection.MethodInfo" Usage="System.Reflection.Emit.AssemblyBuilder.EntryPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-421">このアセンブリのエントリ ポイントを返します。</span><span class="sxs-lookup"><span data-stu-id="cc237-421">Returns the entry point of this assembly.</span></span></summary>
        <value><span data-ttu-id="cc237-422">このアセンブリのエントリ ポイント。</span><span class="sxs-lookup"><span data-stu-id="cc237-422">The entry point of this assembly.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-423">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-423">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="assemblyBuilder.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="cc237-424">対象のインスタンスと比較する対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-424">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="cc237-425">対象のインスタンスが、指定したオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="cc237-425">Returns a value that indicates whether this instance is equal to the specified object.</span></span></summary>
        <returns><span data-ttu-id="cc237-426"><see langword="true" /> がこのインスタンスの型および値に等しい場合は <paramref name="obj" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-426"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Evidence : System.Security.Policy.Evidence" Usage="System.Reflection.Emit.AssemblyBuilder.Evidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-427">このアセンブリの証拠を取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-427">Gets the evidence for this assembly.</span></span></summary>
        <value><span data-ttu-id="cc237-428">このアセンブリの証拠。</span><span class="sxs-lookup"><span data-stu-id="cc237-428">The evidence for this assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Reflection.Emit.AssemblyBuilder.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-429">現在の動的アセンブリの表示名を取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-429">Gets the display name of the current dynamic assembly.</span></span></summary>
        <value><span data-ttu-id="cc237-430">動的アセンブリの表示名。</span><span class="sxs-lookup"><span data-stu-id="cc237-430">The display name of the dynamic assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-431">アセンブリの表示名の形式の説明については、「<xref:System.Reflection.AssemblyName>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cc237-431">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc237-432">現在の <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> に適用されたカスタム属性を返します。</span><span class="sxs-lookup"><span data-stu-id="cc237-432">Returns custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" /></span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="assemblyBuilder.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="cc237-433">この型のオブジェクトでは、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-433">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="cc237-434">現在の <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> に適用されたカスタム属性をすべて返します。</span><span class="sxs-lookup"><span data-stu-id="cc237-434">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="cc237-435">カスタム属性を含む配列。属性がない場合、配列は空です。</span><span class="sxs-lookup"><span data-stu-id="cc237-435">An array that contains the custom attributes; the array is empty if there are no attributes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="assemblyBuilder.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="cc237-436">属性の派生元となる基本型。</span><span class="sxs-lookup"><span data-stu-id="cc237-436">The base type from which attributes derive.</span></span></param>
        <param name="inherit"><span data-ttu-id="cc237-437">この型のオブジェクトでは、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-437">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="cc237-438">現在の <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> に適用されており、指定された属性の型から派生するすべてのカスタム属性を返します。</span><span class="sxs-lookup"><span data-stu-id="cc237-438">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />, and that derive from a specified attribute type.</span></span></summary>
        <returns><span data-ttu-id="cc237-439"><paramref name="attributeType" /> の任意のレベルから派生したカスタム属性を含む配列。そのような属性がない場合、配列は空です。</span><span class="sxs-lookup"><span data-stu-id="cc237-439">An array that contains the custom attributes that are derived at any level from <paramref name="attributeType" />; the array is empty if there are no such attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-440"><paramref name="attributeType" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-440"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-441"><paramref name="attributeType" />は、ランタイムによって提供された <see cref="T:System.Type" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-441"><paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span></span> <span data-ttu-id="cc237-442">たとえば、<paramref name="attributeType" /> は <see cref="T:System.Reflection.Emit.TypeBuilder" /> オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="cc237-442">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="assemblyBuilder.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc237-443">現在の <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> に適用されている属性に関する情報を含む <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="cc237-443">Returns <see cref="T:System.Reflection.CustomAttributeData" /> objects that contain information about the attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="cc237-444">現在のモジュールに適用されている属性に関するデータを表す <see cref="T:System.Reflection.CustomAttributeData" /> オブジェクトのジェネリック リスト。</span><span class="sxs-lookup"><span data-stu-id="cc237-444">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-445">このメソッドは、リフレクションのみのコンテキストでコードのカスタム属性を確認するために使用します。ただし、カスタム属性自体がリフレクションのみのコンテキストに読み込まれているコードで定義されている場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-445">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="cc237-446"><xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> や <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> などのメソッドは、属性のインスタンスを作成するため、このような場合には使用できません。</span><span class="sxs-lookup"><span data-stu-id="cc237-446">Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="cc237-447">リフレクションのみのコンテキストでコードを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="cc237-447">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="cc237-448">詳細とコード例については、<xref:System.Reflection.CustomAttributeData> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cc237-448">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder GetDynamicModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder GetDynamicModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDynamicModule (name As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ GetDynamicModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetDynamicModule : string -&gt; System.Reflection.Emit.ModuleBuilder" Usage="assemblyBuilder.GetDynamicModule name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-449">要求された動的モジュールの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-449">The name of the requested dynamic module.</span></span></param>
        <summary><span data-ttu-id="cc237-450">指定した名前の動的モジュールを返します。</span><span class="sxs-lookup"><span data-stu-id="cc237-450">Returns the dynamic module with the specified name.</span></span></summary>
        <returns><span data-ttu-id="cc237-451">要求された動的モジュールを表す ModuleBuilder オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cc237-451">A ModuleBuilder object representing the requested dynamic module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-452"><paramref name="name" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-452"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-453"><paramref name="name" /> の長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="cc237-453">The length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-454">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-454">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberSignature Language="F#" Value="override this.GetExportedTypes : unit -&gt; Type[]" Usage="assemblyBuilder.GetExportedTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc237-455">このアセンブリで定義されているエクスポートされた型を取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-455">Gets the exported types defined in this assembly.</span></span></summary>
        <returns><span data-ttu-id="cc237-456">このアセンブリで定義されているエクスポートされた型を格納している <see cref="T:System.Type" /> の配列。</span><span class="sxs-lookup"><span data-stu-id="cc237-456">An array of <see cref="T:System.Type" /> containing the exported types defined in this assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-457">このメソッドは実装されていません。</span><span class="sxs-lookup"><span data-stu-id="cc237-457">This method is not implemented.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-458">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-458">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public override System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetFile : string -&gt; System.IO.FileStream" Usage="assemblyBuilder.GetFile name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-459">指定されたファイルの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-459">The name of the specified file.</span></span></param>
        <summary><span data-ttu-id="cc237-460">このアセンブリのマニフェストのファイル テーブル内の指定されたファイルの <see cref="T:System.IO.FileStream" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-460">Gets a <see cref="T:System.IO.FileStream" /> for the specified file in the file table of the manifest of this assembly.</span></span></summary>
        <returns><span data-ttu-id="cc237-461">指定されたファイルの <see cref="T:System.IO.FileStream" />。ファイルが見つからない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-461">A <see cref="T:System.IO.FileStream" /> for the specified file, or <see langword="null" />, if the file is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-462">`name` には、ファイルへのパスを含めないでください。</span><span class="sxs-lookup"><span data-stu-id="cc237-462">`name` should not include the path to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-463">このメソッドは現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="cc237-463">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-464">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-464">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public override System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="override this.GetFiles : bool -&gt; System.IO.FileStream[]" Usage="assemblyBuilder.GetFiles getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="cc237-465">リソース モジュールを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-465"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="cc237-466">リソース モジュールを含めるかどうかを指定して、アセンブリ マニフェストのファイル テーブルのファイルを取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-466">Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span></span></summary>
        <returns><span data-ttu-id="cc237-467"><see cref="T:System.IO.FileStream" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="cc237-467">An array of <see cref="T:System.IO.FileStream" /> objects.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-468">このメソッドは現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="cc237-468">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-469">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-469">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="assemblyBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc237-470">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="cc237-470">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="cc237-471">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="cc237-471">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="override this.GetLoadedModules : bool -&gt; System.Reflection.Module[]" Usage="assemblyBuilder.GetLoadedModules getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="cc237-472">リソース モジュールを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-472"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="cc237-473">このアセンブリの一部である読み込み済みのモジュールをすべて返します。オプションでリソース モジュールも返します。</span><span class="sxs-lookup"><span data-stu-id="cc237-473">Returns all the loaded modules that are part of this assembly, and optionally includes resource modules.</span></span></summary>
        <returns><span data-ttu-id="cc237-474">このアセンブリの一部である読み込み済みのモジュール。</span><span class="sxs-lookup"><span data-stu-id="cc237-474">The loaded modules that are part of this assembly.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public override System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="override this.GetManifestResourceInfo : string -&gt; System.Reflection.ManifestResourceInfo" Usage="assemblyBuilder.GetManifestResourceInfo resourceName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="cc237-475">リソースの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-475">The name of the resource.</span></span></param>
        <summary><span data-ttu-id="cc237-476">指定されたリソースが永続化された方法に関する情報を返します。</span><span class="sxs-lookup"><span data-stu-id="cc237-476">Returns information about how the given resource has been persisted.</span></span></summary>
        <returns><span data-ttu-id="cc237-477">リソースのトポロジに関する情報が設定された <see cref="T:System.Reflection.ManifestResourceInfo" />。リソースが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-477"><see cref="T:System.Reflection.ManifestResourceInfo" /> populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-478">このメソッドは現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="cc237-478">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-479">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-479">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public override string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberSignature Language="F#" Value="override this.GetManifestResourceNames : unit -&gt; string[]" Usage="assemblyBuilder.GetManifestResourceNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc237-480">このアセンブリから指定されたマニフェスト リソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="cc237-480">Loads the specified manifest resource from this assembly.</span></span></summary>
        <returns><span data-ttu-id="cc237-481">すべてのリソースの名前を格納している文字列型の配列。<see langword="String" /></span><span class="sxs-lookup"><span data-stu-id="cc237-481">An array of type <see langword="String" /> containing the names of all the resources.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-482">このメソッドは、動的アセンブリではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="cc237-482">This method is not supported on a dynamic assembly.</span></span> <span data-ttu-id="cc237-483">マニフェスト リソース名を取得するには、 <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />を使用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-483">To get the manifest resource names, use <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-484">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-484">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc237-485">このアセンブリから、指定されたマニフェスト リソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="cc237-485">Loads the specified manifest resource from this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetManifestResourceStream : string -&gt; System.IO.Stream" Usage="assemblyBuilder.GetManifestResourceStream name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.1;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-486">要求されているマニフェスト リソースの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-486">The name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="cc237-487">このアセンブリから、指定されたマニフェスト リソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="cc237-487">Loads the specified manifest resource from this assembly.</span></span></summary>
        <returns><span data-ttu-id="cc237-488">このマニフェスト リソースを表す <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-488">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-489">このメソッドは現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="cc237-489">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-490">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-490">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceStream (type As Type, name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetManifestResourceStream : Type * string -&gt; System.IO.Stream" Usage="assemblyBuilder.GetManifestResourceStream (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="cc237-491">マニフェスト リソース名のスコープを指定するために名前空間を使用する型。</span><span class="sxs-lookup"><span data-stu-id="cc237-491">The type whose namespace is used to scope the manifest resource name.</span></span></param>
        <param name="name"><span data-ttu-id="cc237-492">要求されているマニフェスト リソースの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-492">The name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="cc237-493">このアセンブリから、指定された型の名前空間によってスコープが指定されている、指定されたマニフェスト リソースを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="cc237-493">Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span></span></summary>
        <returns><span data-ttu-id="cc237-494">このマニフェスト リソースを表す <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-494">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-495">返される <xref:System.IO.Stream> は、ファイルポインターがリソースの先頭に設定されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-495">The returned <xref:System.IO.Stream> has its file pointer set to the beginning of the resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-496">`type` の完全名が "MyNameSpace" で `name` が "Dot" の場合、`GetManifestResourceStream` は MyNameSpace という名前のリソースを検索します。</span><span class="sxs-lookup"><span data-stu-id="cc237-496">If the full name of `type` is "MyNameSpace.MyClasses" and `name` is "Dot", `GetManifestResourceStream` will search for a resource named MyNameSpace.Dot.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-497">このメソッドは現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="cc237-497">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-498">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-498">The caller does not have the required permission.</span></span></exception>
        <related type="Article" href="~/docs/standard/assembly/manifest.md"><span data-ttu-id="cc237-499">アセンブリ マニフェスト</span><span class="sxs-lookup"><span data-stu-id="cc237-499">Assembly Manifest</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetModule : string -&gt; System.Reflection.Module" Usage="assemblyBuilder.GetModule name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-500">要求するモジュールの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-500">The name of the requested module.</span></span></param>
        <summary><span data-ttu-id="cc237-501">このアセンブリから指定されたモジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-501">Gets the specified module in this assembly.</span></span></summary>
        <returns><span data-ttu-id="cc237-502">要求されたモジュール。モジュールが見つからない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-502">The module being requested, or <see langword="null" /> if the module is not found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberSignature Language="F#" Value="override this.GetModules : bool -&gt; System.Reflection.Module[]" Usage="assemblyBuilder.GetModules getResourceModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="getResourceModules"><span data-ttu-id="cc237-503">リソース モジュールを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-503"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="cc237-504">このアセンブリの一部であるモジュールをすべて取得します。オプションでリソース モジュールも取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-504">Gets all the modules that are part of this assembly, and optionally includes resource modules.</span></span></summary>
        <returns><span data-ttu-id="cc237-505">このアセンブリの一部であるモジュール。</span><span class="sxs-lookup"><span data-stu-id="cc237-505">The modules that are part of this assembly.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberSignature Language="F#" Value="override this.GetName : bool -&gt; System.Reflection.AssemblyName" Usage="assemblyBuilder.GetName copiedName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="copiedName"><span data-ttu-id="cc237-506">シャドウ コピーの後でコード ベースをアセンブリの場所に設定する場合は <see langword="true" />。コード ベースを元の場所に設定する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-506"><see langword="true" /> to set the code base to the location of the assembly after it is shadow-copied; <see langword="false" /> to set the code base to the original location.</span></span></param>
        <summary><span data-ttu-id="cc237-507">現在の動的アセンブリが作成された時に指定した <see cref="T:System.Reflection.AssemblyName" /> を取得し、指定されたとおりにコード ベースを設定します。</span><span class="sxs-lookup"><span data-stu-id="cc237-507">Gets the <see cref="T:System.Reflection.AssemblyName" /> that was specified when the current dynamic assembly was created, and sets the code base as specified.</span></span></summary>
        <returns><span data-ttu-id="cc237-508">動的アセンブリの名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-508">The name of the dynamic assembly.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public override System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberSignature Language="F#" Value="override this.GetReferencedAssemblies : unit -&gt; System.Reflection.AssemblyName[]" Usage="assemblyBuilder.GetReferencedAssemblies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cc237-509">この <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> で参照されるアセンブリの <see cref="T:System.Reflection.AssemblyName" /> オブジェクトの不完全なリストを取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-509">Gets an incomplete list of <see cref="T:System.Reflection.AssemblyName" /> objects for the assemblies that are referenced by this <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="cc237-510">参照アセンブリのアセンブリ名の配列。</span><span class="sxs-lookup"><span data-stu-id="cc237-510">An array of assembly names for the referenced assemblies.</span></span> <span data-ttu-id="cc237-511">この配列は完全な一覧ではありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-511">This array is not a complete list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-512">このメソッドは、参照されたアセンブリの完全な一覧を返しません。</span><span class="sxs-lookup"><span data-stu-id="cc237-512">This method does not return a complete list of referenced assemblies.</span></span> <span data-ttu-id="cc237-513">たとえば、カスタム属性を <xref:System.Reflection.Emit.AssemblyBuilder>に適用する場合、属性が定義されているアセンブリは、このメソッドによって返されるリストに含まれます。</span><span class="sxs-lookup"><span data-stu-id="cc237-513">For example, if you apply a custom attribute to the <xref:System.Reflection.Emit.AssemblyBuilder>, the assembly in which the attribute was defined is included in the list returned by this method.</span></span> <span data-ttu-id="cc237-514">ただし、<xref:System.Type> オブジェクトを使用してメソッドパラメーターの型を指定する場合、その型は含まれません。</span><span class="sxs-lookup"><span data-stu-id="cc237-514">However, if you use a <xref:System.Type> object to specify the type of a method parameter, that type is not included.</span></span>  
  
 <span data-ttu-id="cc237-515">参照アセンブリの完全な一覧を取得するには、アセンブリを保存し、別のアプリケーションドメインに読み込んで、<xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cc237-515">To get a complete list of referenced assemblies, save the assembly, load it into another application domain, and call the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc237-516">指定されたサテライト アセンブリを取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-516">Gets a specified satellite assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="override this.GetSatelliteAssembly : System.Globalization.CultureInfo -&gt; System.Reflection.Assembly" Usage="assemblyBuilder.GetSatelliteAssembly culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="cc237-517">指定されたカルチャ。</span><span class="sxs-lookup"><span data-stu-id="cc237-517">The specified culture.</span></span></param>
        <summary><span data-ttu-id="cc237-518">指定されたカルチャ設定のサテライト アセンブリを取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-518">Gets the satellite assembly for the specified culture.</span></span></summary>
        <returns><span data-ttu-id="cc237-519">指定されたサテライト アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="cc237-519">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-520">サテライトアセンブリにはローカライズされたリソースが含まれています。メインアプリケーションアセンブリには、ローカライズできない実行可能コードと、既定のカルチャまたはニュートラルカルチャとして機能する単一カルチャ用のリソースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="cc237-520">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="cc237-521">現在のアセンブリバージョンを使用するには、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cc237-521">Call this method to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-522"><paramref name="culture" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-522"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="cc237-523">アセンブリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="cc237-523">The assembly cannot be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="cc237-524">ファイル名が一致するサテライト アセンブリが見つかりましたが、<see langword="CultureInfo" /> は指定されているファイル名とは一致しませんでした。</span><span class="sxs-lookup"><span data-stu-id="cc237-524">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> did not match the one specified.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="cc237-525">サテライト アセンブリは、有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-525">The satellite assembly is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSatelliteAssembly (culture As CultureInfo, version As Version) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberSignature Language="F#" Value="override this.GetSatelliteAssembly : System.Globalization.CultureInfo * Version -&gt; System.Reflection.Assembly" Usage="assemblyBuilder.GetSatelliteAssembly (culture, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="version" Type="System.Version" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="cc237-526">指定されたカルチャ。</span><span class="sxs-lookup"><span data-stu-id="cc237-526">The specified culture.</span></span></param>
        <param name="version"><span data-ttu-id="cc237-527">サテライト アセンブリのバージョン。</span><span class="sxs-lookup"><span data-stu-id="cc237-527">The version of the satellite assembly.</span></span></param>
        <summary><span data-ttu-id="cc237-528">指定されたバージョンの、指定されたカルチャ設定のサテライト アセンブリを取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-528">Gets the specified version of the satellite assembly for the specified culture.</span></span></summary>
        <returns><span data-ttu-id="cc237-529">指定されたサテライト アセンブリ。</span><span class="sxs-lookup"><span data-stu-id="cc237-529">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-530">サテライトアセンブリにはローカライズされたリソースが含まれています。メインアプリケーションアセンブリには、ローカライズできない実行可能コードと、既定のカルチャまたはニュートラルカルチャとして機能する単一カルチャ用のリソースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="cc237-530">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="cc237-531"><xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> オーバーロードを呼び出して、現在のアセンブリバージョンを使用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-531">Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-532"><paramref name="culture" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-532"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="cc237-533">ファイル名が一致するサテライト アセンブリが見つかりましたが、<see langword="CultureInfo" /> またはバージョンが指定されているファイルとは一致しませんでした。</span><span class="sxs-lookup"><span data-stu-id="cc237-533">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> or the version did not match the one specified.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="cc237-534">アセンブリが見つかりません。</span><span class="sxs-lookup"><span data-stu-id="cc237-534">The assembly cannot be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="cc237-535">サテライト アセンブリは、有効なアセンブリではありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-535">The satellite assembly is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool * bool -&gt; Type" Usage="assemblyBuilder.GetType (name, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="throwOnError" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cc237-536">検索する型の名前。</span><span class="sxs-lookup"><span data-stu-id="cc237-536">The name of the type to search for.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="cc237-537">型が見つからなかったときに例外をスローする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-537"><see langword="true" /> to throw an exception if the type is not found; otherwise, <see langword="false" />.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="cc237-538">検索中に型名の大文字と小文字の違いを無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-538"><see langword="true" /> to ignore the case of the type name when searching; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="cc237-539">現在の <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> で定義および作成された型から、指定された型を取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-539">Gets the specified type from the types that have been defined and created in the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="cc237-540">指定された型。型が見つからない場合、またはまだ作成されていない場合は、<see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cc237-540">The specified type, or <see langword="null" /> if the type is not found or has not been created yet.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-541"><xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> メソッドを呼び出すことによって作成されるまで、型が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="cc237-541">A type cannot be found until it has been created by calling the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public override bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GlobalAssemblyCache { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalAssemblyCache : bool" Usage="System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-542">アセンブリがグローバル アセンブリ キャッシュから読み込まれたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-542">Gets a value that indicates whether the assembly was loaded from the global assembly cache.</span></span></summary>
        <value><span data-ttu-id="cc237-543">常に <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-543">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-544"><xref:System.Reflection.Emit.AssemblyBuilder> オブジェクトは常に動的アセンブリを表しているため、グローバルアセンブリキャッシュから読み込まれることはありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-544"><xref:System.Reflection.Emit.AssemblyBuilder> objects always represent dynamic assemblies, and therefore are never loaded from the global assembly cache.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public override long HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HostContext As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long HostContext { long get(); };" />
      <MemberSignature Language="F#" Value="member this.HostContext : int64" Usage="System.Reflection.Emit.AssemblyBuilder.HostContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-545">動的アセンブリが作成されるホスト コンテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-545">Gets the host context where the dynamic assembly is being created.</span></span></summary>
        <value><span data-ttu-id="cc237-546">動的アセンブリが作成されるホスト コンテキストを示す値。</span><span class="sxs-lookup"><span data-stu-id="cc237-546">A value that indicates the host context where the dynamic assembly is being created.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRuntimeVersion">
      <MemberSignature Language="C#" Value="public override string ImageRuntimeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageRuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ImageRuntimeVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageRuntimeVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRuntimeVersion : string" Usage="System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-547">マニフェストを格納しているファイルに保存される共通言語ランタイムのバージョンを取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-547">Gets the version of the common language runtime that will be saved in the file containing the manifest.</span></span></summary>
        <value><span data-ttu-id="cc237-548">共通言語ランタイムのバージョンを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="cc237-548">A string representing the common language runtime version.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-549">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-549">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="assemblyBuilder.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="cc237-550">テストする属性の種類。</span><span class="sxs-lookup"><span data-stu-id="cc237-550">The type of attribute to test for.</span></span></param>
        <param name="inherit"><span data-ttu-id="cc237-551">この型のオブジェクトでは、この引数は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-551">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="cc237-552">指定された属性型の 1 つ以上のインスタンスがこのメンバーに適用されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="cc237-552">Returns a value that indicates whether one or more instances of the specified attribute type is applied to this member.</span></span></summary>
        <returns><span data-ttu-id="cc237-553"><paramref name="attributeType" /> の 1 つまたは複数のインスタンスがこの動的アセンブリに適用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-553"><see langword="true" /> if one or more instances of <paramref name="attributeType" /> is applied to this dynamic assembly; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public override bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDynamic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDynamic : bool" Usage="System.Reflection.Emit.AssemblyBuilder.IsDynamic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-554">現在のアセンブリが動的アセンブリであることを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-554">Gets a value that indicates that the current assembly is a dynamic assembly.</span></span></summary>
        <value><span data-ttu-id="cc237-555">常に <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-555">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-556"><xref:System.Reflection.Emit.AssemblyBuilder> オブジェクトは、常に動的アセンブリを表します。</span><span class="sxs-lookup"><span data-stu-id="cc237-556">An <xref:System.Reflection.Emit.AssemblyBuilder> object always represents a dynamic assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public override string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Location : string" Usage="System.Reflection.Emit.AssemblyBuilder.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-557">シャドウ コピーされたファイルではない場合は、マニフェストを格納している読み込み済みファイルの位置をコードベース形式で取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-557">Gets the location, in codebase format, of the loaded file that contains the manifest if it is not shadow-copied.</span></span></summary>
        <value><span data-ttu-id="cc237-558">マニフェストを格納している読み込み済みファイルの場所。</span><span class="sxs-lookup"><span data-stu-id="cc237-558">The location of the loaded file that contains the manifest.</span></span> <span data-ttu-id="cc237-559">読み込み済みファイルがシャドウ コピーされている場合、場所はシャドウ コピーされる前のファイルの位置です。<see langword="Location" /></span><span class="sxs-lookup"><span data-stu-id="cc237-559">If the loaded file has been shadow-copied, the <see langword="Location" /> is that of the file before being shadow-copied.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-560">このメソッドは現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="cc237-560">This method is not currently supported.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-561">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-561">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ManifestModule">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module ManifestModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module ManifestModule" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ManifestModule" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ManifestModule As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ ManifestModule { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ManifestModule : System.Reflection.Module" Usage="System.Reflection.Emit.AssemblyBuilder.ManifestModule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-562">アセンブリのマニフェストを格納している現在の <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> のモジュールを取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-562">Gets the module in the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> that contains the assembly manifest.</span></span></summary>
        <value><span data-ttu-id="cc237-563">マニフェスト モジュール。</span><span class="sxs-lookup"><span data-stu-id="cc237-563">The manifest module.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt; Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Modules As IEnumerable(Of Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ Modules { System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Modules : seq&lt;System.Reflection.Module&gt;" Usage="System.Reflection.Emit.AssemblyBuilder.Modules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public override System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PermissionSet : System.Security.PermissionSet" Usage="System.Reflection.Emit.AssemblyBuilder.PermissionSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-564">現在の動的アセンブリの許可セットを取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-564">Gets the grant set of the current dynamic assembly.</span></span></summary>
        <value><span data-ttu-id="cc237-565">現在の動的アセンブリの許可セット。</span><span class="sxs-lookup"><span data-stu-id="cc237-565">The grant set of the current dynamic assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-566"><xref:System.Security.PermissionSet> オブジェクトには、パスなどの機密情報を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="cc237-566"><xref:System.Security.PermissionSet> objects can contain sensitive information such as paths.</span></span> <span data-ttu-id="cc237-567">そのため、これらのオブジェクトにアクセスするには完全な信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="cc237-567">Therefore, full trust is required to access these objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnly">
      <MemberSignature Language="C#" Value="public override bool ReflectionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReflectionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ReflectionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectionOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReflectionOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectionOnly : bool" Usage="System.Reflection.Emit.AssemblyBuilder.ReflectionOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-568">動的アセンブリがリフレクションのみのコンテキストにあるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-568">Gets a value indicating whether the dynamic assembly is in the reflection-only context.</span></span></summary>
        <value><span data-ttu-id="cc237-569">動的アセンブリがリフレクションのみのコンテキストにある場合は、<see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="cc237-569"><see langword="true" /> if the dynamic assembly is in the reflection-only context; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-570">リフレクションのみのコンテキストで動的アセンブリを出力するには、<xref:System.Reflection.Emit.AssemblyBuilder>を作成するときに <xref:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly?displayProperty=nameWithType> を指定します。</span><span class="sxs-lookup"><span data-stu-id="cc237-570">To emit a dynamic assembly in the reflection-only context, specify <xref:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly?displayProperty=nameWithType> when you create the <xref:System.Reflection.Emit.AssemblyBuilder>.</span></span> <span data-ttu-id="cc237-571">動的アセンブリがリフレクションのみのコンテキストで生成される場合、そのコードを実行することはできません。</span><span class="sxs-lookup"><span data-stu-id="cc237-571">If a dynamic assembly is emitted in the reflection-only context, its code cannot be executed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-572">動的アセンブリをディスクに保存した後、<xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType> メソッドを使用して、完成したアセンブリをリフレクションのみのコンテキストに読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="cc237-572">After you have saved a dynamic assembly to disk, you can use the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType> method to load the completed assembly into the reflection-only context.</span></span> <span data-ttu-id="cc237-573">ただし、アセンブリを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="cc237-573">However, the assembly can no longer be modified.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly" />
        <altmember cref="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)" />
        <related type="Article" href="~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md"><span data-ttu-id="cc237-574">方法 : リフレクションのみのコンテキストにアセンブリを読み込む</span><span class="sxs-lookup"><span data-stu-id="cc237-574">How to: Load Assemblies into the Reflection-Only Context</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc237-575">この動的アセンブリをディスクに保存します。</span><span class="sxs-lookup"><span data-stu-id="cc237-575">Saves this dynamic assembly to disk.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string assemblyFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string assemblyFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (assemblyFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ assemblyFileName);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="assemblyBuilder.Save assemblyFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFileName"><span data-ttu-id="cc237-576">アセンブリのファイル名。</span><span class="sxs-lookup"><span data-stu-id="cc237-576">The file name of the assembly.</span></span></param>
        <summary><span data-ttu-id="cc237-577">ディスクにこの動的アセンブリを保存します。</span><span class="sxs-lookup"><span data-stu-id="cc237-577">Saves this dynamic assembly to disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-578">このメソッドは、この動的アセンブリで定義されている非遷移的動的モジュールをすべて保存します。</span><span class="sxs-lookup"><span data-stu-id="cc237-578">This method saves all non-transient dynamic modules defined in this dynamic assembly.</span></span> <span data-ttu-id="cc237-579">一時的な動的モジュールは保存されません。</span><span class="sxs-lookup"><span data-stu-id="cc237-579">Transient dynamic modules are not saved.</span></span> <span data-ttu-id="cc237-580">アセンブリファイル名は、モジュールの1つの名前と同じにすることができます。</span><span class="sxs-lookup"><span data-stu-id="cc237-580">The assembly file name can be the same as the name of one of the modules.</span></span> <span data-ttu-id="cc237-581">その場合、アセンブリマニフェストはそのモジュール内に格納されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-581">If so, the assembly manifest is stored within that module.</span></span> <span data-ttu-id="cc237-582">`assemblyFileName` は、アセンブリ内に含まれるすべてのモジュールの名前とは異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-582">`assemblyFileName` can be different from the names of all of the modules contained within the assembly.</span></span> <span data-ttu-id="cc237-583">その場合、アセンブリファイルにはアセンブリマニフェストだけが格納されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-583">If so, the assembly file contains only the assembly manifest.</span></span>  
  
 <span data-ttu-id="cc237-584"><xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>を使用して取得された <xref:System.Resources.ResourceWriter> ごとに、このメソッドは .resources ファイルを書き込み、<xref:System.Resources.ResourceWriter.Close%2A> を呼び出してストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="cc237-584">For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.</span></span>  
  
 <span data-ttu-id="cc237-585">`assemblyFileName` は、ドライブまたはディレクトリコンポーネントのない単純なファイル名である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-585">The `assemblyFileName` needs to be a simple file name without a drive or directory component.</span></span> <span data-ttu-id="cc237-586">特定のディレクトリにアセンブリを作成するには、ターゲットディレクトリの引数を受け取る <xref:System.AppDomain.DefineDynamicAssembly%2A> メソッドのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-586">To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.</span></span>  
  
 <span data-ttu-id="cc237-587">.NET Framework バージョン2.0 では、<xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> メソッドのこのオーバーロードは、`portableExecutableKind` パラメーターの <xref:System.Reflection.PortableExecutableKinds.ILOnly> を使用して <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> メソッドオーバーロードを呼び出し、<xref:System.Reflection.ImageFileMachine.I386> パラメーターに対して `imageFileMachine` することと同じです。</span><span class="sxs-lookup"><span data-stu-id="cc237-587">In the .NET Framework version 2.0, this overload of the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method is equivalent to calling the <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> method overload with <xref:System.Reflection.PortableExecutableKinds.ILOnly> for the `portableExecutableKind` parameter and <xref:System.Reflection.ImageFileMachine.I386> for the `imageFileMachine` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-588">次のコードサンプルでは、動的アセンブリを作成し、`Save`を使用してローカルディスクに永続化します。</span><span class="sxs-lookup"><span data-stu-id="cc237-588">The following code sample creates a dynamic assembly and then persists it to a local disk using `Save`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-589"><paramref name="assemblyFileName" /> の長さは 0 です。</span><span class="sxs-lookup"><span data-stu-id="cc237-589">The length of <paramref name="assemblyFileName" /> is 0.</span></span>  
  
<span data-ttu-id="cc237-590">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-590">-or-</span></span> 
<span data-ttu-id="cc237-591">アセンブリに同じ名前で複数のモジュール リソース ファイルがあります。</span><span class="sxs-lookup"><span data-stu-id="cc237-591">There are two or more modules resource files in the assembly with the same name.</span></span>  
  
<span data-ttu-id="cc237-592">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-592">-or-</span></span> 
<span data-ttu-id="cc237-593">アセンブリの保存先ディレクトリが無効です。</span><span class="sxs-lookup"><span data-stu-id="cc237-593">The target directory of the assembly is invalid.</span></span>  
  
<span data-ttu-id="cc237-594">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-594">-or-</span></span> 
 <span data-ttu-id="cc237-595"><paramref name="assemblyFileName" /> が単純なファイル名 (たとえば、ディレクトリまたはドライブのコンポーネントを持つ) でないか、複数のアンマネージ リソース (バージョン情報のリソースを含む) がこのアセンブリで定義されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-595"><paramref name="assemblyFileName" /> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resource, was defined in this assembly.</span></span>  
  
<span data-ttu-id="cc237-596">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-596">-or-</span></span> 
<span data-ttu-id="cc237-597"><see cref="T:System.Reflection.AssemblyCultureAttribute" /> の <see langword="CultureInfo" /> 文字列が有効な文字列ではなく、かつ、このメソッドを呼び出す前に <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> が呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="cc237-597">The <see langword="CultureInfo" /> string in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> is not a valid string and <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> was called prior to calling this method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-598"><paramref name="assemblyFileName" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-598"><paramref name="assemblyFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc237-599">このアセンブリは既に保存されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-599">This assembly has been saved before.</span></span>  
  
<span data-ttu-id="cc237-600">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-600">-or-</span></span> 
<span data-ttu-id="cc237-601">このアセンブリのアクセスは <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /> です</span><span class="sxs-lookup"><span data-stu-id="cc237-601">This assembly has access <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cc237-602">保存中に出力エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="cc237-602">An output error occurs during the save.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-603">ディスクに書き込まれるアセンブリのモジュール内のいずれの型についても <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> が呼び出されませんでした。</span><span class="sxs-lookup"><span data-stu-id="cc237-603"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called for any of the types in the modules of the assembly to be written to disk.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string assemblyFileName, System.Reflection.PortableExecutableKinds portableExecutableKind, System.Reflection.ImageFileMachine imageFileMachine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string assemblyFileName, valuetype System.Reflection.PortableExecutableKinds portableExecutableKind, valuetype System.Reflection.ImageFileMachine imageFileMachine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (assemblyFileName As String, portableExecutableKind As PortableExecutableKinds, imageFileMachine As ImageFileMachine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ assemblyFileName, System::Reflection::PortableExecutableKinds portableExecutableKind, System::Reflection::ImageFileMachine imageFileMachine);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Reflection.PortableExecutableKinds * System.Reflection.ImageFileMachine -&gt; unit" Usage="assemblyBuilder.Save (assemblyFileName, portableExecutableKind, imageFileMachine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFileName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="portableExecutableKind" Type="System.Reflection.PortableExecutableKinds" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="imageFileMachine" Type="System.Reflection.ImageFileMachine" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="assemblyFileName"><span data-ttu-id="cc237-604">アセンブリのファイル名。</span><span class="sxs-lookup"><span data-stu-id="cc237-604">The file name of the assembly.</span></span></param>
        <param name="portableExecutableKind"><span data-ttu-id="cc237-605">コードの性質を指定する <see cref="T:System.Reflection.PortableExecutableKinds" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="cc237-605">A bitwise combination of the <see cref="T:System.Reflection.PortableExecutableKinds" /> values that specifies the nature of the code.</span></span></param>
        <param name="imageFileMachine"><span data-ttu-id="cc237-606">ターゲット プラットフォームを指定する <see cref="T:System.Reflection.ImageFileMachine" /> の値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="cc237-606">One of the <see cref="T:System.Reflection.ImageFileMachine" /> values that specifies the target platform.</span></span></param>
        <summary><span data-ttu-id="cc237-607">ディスクにこの動的アセンブリを保存します。その際、アセンブリの実行可能ファイルのコードの性質とターゲット プラットフォームを指定します。</span><span class="sxs-lookup"><span data-stu-id="cc237-607">Saves this dynamic assembly to disk, specifying the nature of code in the assembly's executables and the target platform.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-608">`imageFileMachine` と `portableExecutableKind` に互換性がない場合、`imageFileMachine` は `portableExecutableKind`よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-608">If `imageFileMachine` and `portableExecutableKind` are incompatible, `imageFileMachine` takes precedence over `portableExecutableKind`.</span></span> <span data-ttu-id="cc237-609">例外をスローすることはありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-609">No exception is thrown.</span></span> <span data-ttu-id="cc237-610">たとえば、<xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType>で <xref:System.Reflection.ImageFileMachine.I386?displayProperty=nameWithType> を指定した場合、<xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType> は無視されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-610">For example, if you specify <xref:System.Reflection.ImageFileMachine.I386?displayProperty=nameWithType> with <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType>, <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType> is ignored.</span></span>  
  
 <span data-ttu-id="cc237-611">このメソッドは、この動的アセンブリで定義されている非遷移的動的モジュールをすべて保存します。</span><span class="sxs-lookup"><span data-stu-id="cc237-611">This method saves all non-transient dynamic modules defined in this dynamic assembly.</span></span> <span data-ttu-id="cc237-612">一時的な動的モジュールは保存されません。</span><span class="sxs-lookup"><span data-stu-id="cc237-612">Transient dynamic modules are not saved.</span></span> <span data-ttu-id="cc237-613">アセンブリファイル名は、モジュールの1つの名前と同じにすることができます。</span><span class="sxs-lookup"><span data-stu-id="cc237-613">The assembly file name can be the same as the name of one of the module.</span></span> <span data-ttu-id="cc237-614">その場合、アセンブリマニフェストはそのモジュール内に格納されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-614">If so, the assembly manifest is stored within that module.</span></span> <span data-ttu-id="cc237-615">`assemblyFileName` は、アセンブリ内に含まれるすべてのモジュールの名前とは異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-615">`assemblyFileName` can be different from the names of all of the modules contained within the assembly.</span></span> <span data-ttu-id="cc237-616">その場合、アセンブリファイルにはアセンブリマニフェストだけが格納されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-616">If so, the assembly file contains only the assembly manifest.</span></span>  
  
 <span data-ttu-id="cc237-617"><xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>を使用して取得された <xref:System.Resources.ResourceWriter> ごとに、このメソッドは .resources ファイルを書き込み、<xref:System.Resources.ResourceWriter.Close%2A> を呼び出してストリームを閉じます。</span><span class="sxs-lookup"><span data-stu-id="cc237-617">For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.</span></span>  
  
 <span data-ttu-id="cc237-618">`assemblyFileName` は、ドライブまたはディレクトリコンポーネントのない単純なファイル名である必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-618">The `assemblyFileName` needs to be a simple file name without a drive or directory component.</span></span> <span data-ttu-id="cc237-619">特定のディレクトリにアセンブリを作成するには、ターゲットディレクトリの引数を受け取る <xref:System.AppDomain.DefineDynamicAssembly%2A> メソッドのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-619">To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-620"><paramref name="assemblyFileName" /> の長さは 0 です。</span><span class="sxs-lookup"><span data-stu-id="cc237-620">The length of <paramref name="assemblyFileName" /> is 0.</span></span>  
  
<span data-ttu-id="cc237-621">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-621">-or-</span></span> 
<span data-ttu-id="cc237-622">アセンブリに同じ名前で複数のモジュール リソース ファイルがあります。</span><span class="sxs-lookup"><span data-stu-id="cc237-622">There are two or more modules resource files in the assembly with the same name.</span></span>  
  
<span data-ttu-id="cc237-623">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-623">-or-</span></span> 
<span data-ttu-id="cc237-624">アセンブリの保存先ディレクトリが無効です。</span><span class="sxs-lookup"><span data-stu-id="cc237-624">The target directory of the assembly is invalid.</span></span>  
  
<span data-ttu-id="cc237-625">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-625">-or-</span></span> 
 <span data-ttu-id="cc237-626"><paramref name="assemblyFileName" /> が単純なファイル名 (たとえば、ディレクトリまたはドライブのコンポーネントを持つ) でないか、複数のアンマネージ リソース (バージョン情報のリソースを含む) がこのアセンブリで定義されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-626"><paramref name="assemblyFileName" /> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resources, was defined in this assembly.</span></span>  
  
<span data-ttu-id="cc237-627">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-627">-or-</span></span> 
<span data-ttu-id="cc237-628"><see cref="T:System.Reflection.AssemblyCultureAttribute" /> の <see langword="CultureInfo" /> 文字列が有効な文字列ではなく、かつ、このメソッドを呼び出す前に <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> が呼び出されました。</span><span class="sxs-lookup"><span data-stu-id="cc237-628">The <see langword="CultureInfo" /> string in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> is not a valid string and <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> was called prior to calling this method.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-629"><paramref name="assemblyFileName" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-629"><paramref name="assemblyFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc237-630">このアセンブリは既に保存されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-630">This assembly has been saved before.</span></span>  
  
<span data-ttu-id="cc237-631">- または -</span><span class="sxs-lookup"><span data-stu-id="cc237-631">-or-</span></span> 
<span data-ttu-id="cc237-632">このアセンブリのアクセスは <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /> です</span><span class="sxs-lookup"><span data-stu-id="cc237-632">This assembly has access <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="cc237-633">保存中に出力エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="cc237-633">An output error occurs during the save.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="cc237-634">ディスクに書き込まれるアセンブリのモジュール内のいずれの型についても <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> が呼び出されませんでした。</span><span class="sxs-lookup"><span data-stu-id="cc237-634"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called for any of the types in the modules of the assembly to be written to disk.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SecurityRuleSet">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityRuleSet SecurityRuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet SecurityRuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityRuleSet As SecurityRuleSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::SecurityRuleSet SecurityRuleSet { System::Security::SecurityRuleSet get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRuleSet : System.Security.SecurityRuleSet" Usage="System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="cc237-635">共通言語ランタイム (CLR: Common Language Runtime) によってこのアセンブリに適用されるセキュリティ規則のセットを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-635">Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.</span></span></summary>
        <value><span data-ttu-id="cc237-636">CLR によってこの動的アセンブリに適用されるセキュリティ規則のセット。</span><span class="sxs-lookup"><span data-stu-id="cc237-636">The security rule set that the CLR enforces for this dynamic assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-637">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] は、生成する動的アセンブリに対して常にレベル2の透過性 (<xref:System.Security.SecurityRuleSet.Level2?displayProperty=nameWithType>) を適用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-637">The [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] always enforces level 2 transparency (<xref:System.Security.SecurityRuleSet.Level2?displayProperty=nameWithType>) for the dynamic assemblies it generates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc237-638">このアセンブリにカスタム属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="cc237-638">Sets a custom attribute on this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.Emit.CustomAttributeBuilder -&gt; unit" Usage="assemblyBuilder.SetCustomAttribute customBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder"><span data-ttu-id="cc237-639">カスタム属性を定義するヘルパー クラスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="cc237-639">An instance of a helper class to define the custom attribute.</span></span></param>
        <summary><span data-ttu-id="cc237-640">カスタム属性ビルダーを使用して、このアセンブリのカスタム属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="cc237-640">Set a custom attribute on this assembly using a custom attribute builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cc237-641"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> を使用して宣言セキュリティ属性を設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="cc237-641"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes.</span></span> <span data-ttu-id="cc237-642">必須、オプション、および拒否された権限を必要とする <xref:System.AppDomain.DefineDynamicAssembly%2A> のオーバーロードのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-642">Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-643">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-643">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-644">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-644">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-645">次のコードサンプルは、<xref:System.Reflection.Emit.CustomAttributeBuilder>を使用して <xref:System.Reflection.Emit.AssemblyBuilder>内の `SetCustomAttribute` を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="cc237-645">The following code sample illustrates the use of `SetCustomAttribute` within <xref:System.Reflection.Emit.AssemblyBuilder>, using a <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span></span>  
  
 [!code-cpp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CPP/assemblybuilder_setcustomattribute1.cpp#1)]
 [!code-csharp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CS/assemblybuilder_setcustomattribute1.cs#1)]
 [!code-vb[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/VB/assemblybuilder_setcustomattribute1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-646"><paramref name="con" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-646"><paramref name="con" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-647">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-647">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.ConstructorInfo * byte[] -&gt; unit" Usage="assemblyBuilder.SetCustomAttribute (con, binaryAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="cc237-648">カスタム属性のコンストラクター。</span><span class="sxs-lookup"><span data-stu-id="cc237-648">The constructor for the custom attribute.</span></span></param>
        <param name="binaryAttribute"><span data-ttu-id="cc237-649">属性を表すバイト blob。</span><span class="sxs-lookup"><span data-stu-id="cc237-649">A byte blob representing the attributes.</span></span></param>
        <summary><span data-ttu-id="cc237-650">指定されたカスタム属性 blob を使用して、このアセンブリのカスタム属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="cc237-650">Set a custom attribute on this assembly using a specified custom attribute blob.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-651">`binaryAttribute`の書式を設定する方法の詳細については、ECMA Partition II のドキュメントのメタデータの仕様を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cc237-651">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="cc237-652">ドキュメントはオンラインで入手できます。MSDN の「[ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212)」 (ECMA の C# および共通言語基盤の標準規格) と、ECMA のインターナショナル Web サイトにある「[Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cc237-652">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 <span data-ttu-id="cc237-653">`RuntimeConstructorInfo` は、システムによって生成される特殊な型です。</span><span class="sxs-lookup"><span data-stu-id="cc237-653">`RuntimeConstructorInfo` is a special type generated by the system.</span></span> <span data-ttu-id="cc237-654">これは <xref:System.Reflection.ConstructorInfo> クラスから派生し、リフレクションを通じて取得する <xref:System.Reflection.ConstructorInfo> オブジェクトは、実際には `RuntimeConstructorInfo`のインスタンスです。</span><span class="sxs-lookup"><span data-stu-id="cc237-654">It derives from the <xref:System.Reflection.ConstructorInfo> class, and any <xref:System.Reflection.ConstructorInfo> object you obtain through reflection is actually an instance of `RuntimeConstructorInfo`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-655"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> を使用して宣言セキュリティ属性を設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="cc237-655"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes.</span></span> <span data-ttu-id="cc237-656">必須、オプション、および拒否された権限を必要とする <xref:System.AppDomain.DefineDynamicAssembly%2A> のオーバーロードのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="cc237-656">Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cc237-657">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-657">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-658">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-658">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cc237-659">次のコードサンプルは、動的に生成されたアセンブリにカスタム属性をアタッチするために `SetCustomAttribute` を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="cc237-659">The following code sample illustrates the use of `SetCustomAttribute` to attach a custom attribute to a dynamically generated assembly.</span></span>  
  
 [!code-cpp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CPP/assemblybuilder_setcustomattribute2.cpp#1)]
 [!code-csharp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CS/assemblybuilder_setcustomattribute2.cs#1)]
 [!code-vb[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/VB/assemblybuilder_setcustomattribute2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-660"><paramref name="con" /> または <paramref name="binaryAttribute" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="cc237-660"><paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-661">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-661">The caller does not have the required permission.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="cc237-662"><paramref name="con" /> は <see langword="RuntimeConstructorInfo" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-662"><paramref name="con" /> is not a <see langword="RuntimeConstructorInfo" /> object.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetEntryPoint">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="cc237-663">この動的アセンブリのエントリ ポイントを設定します。</span><span class="sxs-lookup"><span data-stu-id="cc237-663">Sets the entry point for this dynamic assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetEntryPoint">
      <MemberSignature Language="C#" Value="public void SetEntryPoint (System.Reflection.MethodInfo entryMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEntryPoint(class System.Reflection.MethodInfo entryMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEntryPoint (entryMethod As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEntryPoint(System::Reflection::MethodInfo ^ entryMethod);" />
      <MemberSignature Language="F#" Value="member this.SetEntryPoint : System.Reflection.MethodInfo -&gt; unit" Usage="assemblyBuilder.SetEntryPoint entryMethod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="entryMethod"><span data-ttu-id="cc237-664">この動的アセンブリのエントリ ポイントを表すメソッドへの参照。</span><span class="sxs-lookup"><span data-stu-id="cc237-664">A reference to the method that represents the entry point for this dynamic assembly.</span></span></param>
        <summary><span data-ttu-id="cc237-665">コンソール アプリケーションを構築するという前提で、この動的アセンブリのエントリ ポイントを設定します。</span><span class="sxs-lookup"><span data-stu-id="cc237-665">Sets the entry point for this dynamic assembly, assuming that a console application is being built.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-666"><paramref name="entryMethod" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-666"><paramref name="entryMethod" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc237-667"><paramref name="entryMethod" /> は、このアセンブリ内に含まれません。</span><span class="sxs-lookup"><span data-stu-id="cc237-667"><paramref name="entryMethod" /> is not contained within this assembly.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-668">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-668">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetEntryPoint">
      <MemberSignature Language="C#" Value="public void SetEntryPoint (System.Reflection.MethodInfo entryMethod, System.Reflection.Emit.PEFileKinds fileKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEntryPoint(class System.Reflection.MethodInfo entryMethod, valuetype System.Reflection.Emit.PEFileKinds fileKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEntryPoint (entryMethod As MethodInfo, fileKind As PEFileKinds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEntryPoint(System::Reflection::MethodInfo ^ entryMethod, System::Reflection::Emit::PEFileKinds fileKind);" />
      <MemberSignature Language="F#" Value="member this.SetEntryPoint : System.Reflection.MethodInfo * System.Reflection.Emit.PEFileKinds -&gt; unit" Usage="assemblyBuilder.SetEntryPoint (entryMethod, fileKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="fileKind" Type="System.Reflection.Emit.PEFileKinds" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="entryMethod"><span data-ttu-id="cc237-669">この動的アセンブリのエントリ ポイントを表すメソッドへの参照。</span><span class="sxs-lookup"><span data-stu-id="cc237-669">A reference to the method that represents the entry point for this dynamic assembly.</span></span></param>
        <param name="fileKind"><span data-ttu-id="cc237-670">構築するアセンブリ実行可能ファイルの型。</span><span class="sxs-lookup"><span data-stu-id="cc237-670">The type of the assembly executable being built.</span></span></param>
        <summary><span data-ttu-id="cc237-671">このアセンブリのエントリ ポイントを設定し、ビルド中の移植可能な実行可能 (PE ファイル) の型を定義します。</span><span class="sxs-lookup"><span data-stu-id="cc237-671">Sets the entry point for this assembly and defines the type of the portable executable (PE file) being built.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="cc237-672">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]以降では、このメンバーは <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> フラグで <xref:System.Security.Permissions.ReflectionPermission> する必要がなくなりました。</span><span class="sxs-lookup"><span data-stu-id="cc237-672">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="cc237-673">(「[リフレクション出力のセキュリティの問題」を](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md)参照してください)。この機能を使用するには、アプリケーションで [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] 以降を対象にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-673">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="cc237-674"><paramref name="entryMethod" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="cc237-674"><paramref name="entryMethod" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="cc237-675"><paramref name="entryMethod" /> は、このアセンブリ内に含まれません。</span><span class="sxs-lookup"><span data-stu-id="cc237-675"><paramref name="entryMethod" /> is not contained within this assembly.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="cc237-676">呼び出し元に、必要なアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="cc237-676">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AssemblyBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_AssemblyBuilder::GetIDsOfNames;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="assemblyBuilder.System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="cc237-677">将来使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-677">Reserved for future use.</span></span> <span data-ttu-id="cc237-678">IID_NULL にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-678">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="cc237-679">マッピング対象として渡される名前の配列。</span><span class="sxs-lookup"><span data-stu-id="cc237-679">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="cc237-680">マッピングされる名前のカウント。</span><span class="sxs-lookup"><span data-stu-id="cc237-680">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="cc237-681">名前を解釈するロケール コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="cc237-681">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="cc237-682">名前に対応する ID を受け取る、呼び出し元が割り当てた配列。</span><span class="sxs-lookup"><span data-stu-id="cc237-682">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="cc237-683">一連の名前を対応する一連のディスパッチ識別子に割り当てます。</span><span class="sxs-lookup"><span data-stu-id="cc237-683">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-684">このメソッドは、アンマネージコードからマネージクラスにアクセスするためのものであり、マネージコードからは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="cc237-684">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="cc237-685">`IDispatch::GetIDsOfNames`の詳細については、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cc237-685">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cc237-686">このメソッドは COM <c>IDispatch</c> インターフェイスを使用して遅延バインディングで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-686">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AssemblyBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_AssemblyBuilder::GetTypeInfo;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="assemblyBuilder.System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="cc237-687">返される型情報。</span><span class="sxs-lookup"><span data-stu-id="cc237-687">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="cc237-688">型情報のロケール ID。</span><span class="sxs-lookup"><span data-stu-id="cc237-688">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="cc237-689">要求された型情報オブジェクトへのポインターを取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-689">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="cc237-690">オブジェクトの型情報を取得します。この型情報を使用して、インターフェイスの型情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="cc237-690">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-691">このメソッドは、アンマネージコードからマネージクラスにアクセスするためのものであり、マネージコードからは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="cc237-691">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="cc237-692">`IDispatch::GetTypeInfo`の詳細については、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cc237-692">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cc237-693">このメソッドは COM <c>IDispatch</c> インターフェイスを使用して遅延バインディングで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-693">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AssemblyBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_AssemblyBuilder::GetTypeInfoCount;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount : uint32 -&gt; unit&#xA;override this.System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount : uint32 -&gt; unit" Usage="assemblyBuilder.System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="cc237-694">オブジェクトにより提供される型タイプ情報インターフェイスの数を受け取る場所を指定します。</span><span class="sxs-lookup"><span data-stu-id="cc237-694">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="cc237-695">オブジェクトが提供する型情報インターフェイスの数 (0 または 1) を取得します。</span><span class="sxs-lookup"><span data-stu-id="cc237-695">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-696">このメソッドは、アンマネージコードからマネージクラスにアクセスするためのものであり、マネージコードからは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="cc237-696">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="cc237-697">`IDispatch::GetTypeInfoCount`の詳細については、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cc237-697">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cc237-698">このメソッドは COM <c>IDispatch</c> インターフェイスを使用して遅延バインディングで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-698">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AssemblyBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_AssemblyBuilder::Invoke;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._AssemblyBuilder.Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._AssemblyBuilder.Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="assemblyBuilder.System.Runtime.InteropServices._AssemblyBuilder.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="cc237-699">メンバーを識別します。</span><span class="sxs-lookup"><span data-stu-id="cc237-699">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="cc237-700">将来使用するために予約されています。</span><span class="sxs-lookup"><span data-stu-id="cc237-700">Reserved for future use.</span></span> <span data-ttu-id="cc237-701">IID_NULL にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="cc237-701">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="cc237-702">引数を解釈する対象のロケール コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="cc237-702">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="cc237-703">呼び出しのコンテキストを記述するフラグ。</span><span class="sxs-lookup"><span data-stu-id="cc237-703">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="cc237-704">引数の配列、名前付き引数の DISPID の配列、配列内の要素数のカウントを格納している構造体へのポインター。</span><span class="sxs-lookup"><span data-stu-id="cc237-704">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="cc237-705">結果が格納される場所へのポインター。</span><span class="sxs-lookup"><span data-stu-id="cc237-705">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="cc237-706">例外情報を格納する構造体へのポインター。</span><span class="sxs-lookup"><span data-stu-id="cc237-706">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="cc237-707">エラーが存在する最初の引数のインデックス。</span><span class="sxs-lookup"><span data-stu-id="cc237-707">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="cc237-708">オブジェクトによって公開されたプロパティおよびメソッドへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="cc237-708">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cc237-709">このメソッドは、アンマネージコードからマネージクラスにアクセスするためのものであり、マネージコードからは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="cc237-709">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="cc237-710">`IDispatch::Invoke`の詳細については、MSDN ライブラリを参照してください。</span><span class="sxs-lookup"><span data-stu-id="cc237-710">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="cc237-711">このメソッドは COM <c>IDispatch</c> インターフェイスを使用して遅延バインディングで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cc237-711">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
