<Type Name="IPolicyImportExtension" FullName="System.ServiceModel.Description.IPolicyImportExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="21c1955720f84c83ad644148e7bc9cddad175775" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83960870" /></Metadata><TypeSignature Language="C#" Value="public interface IPolicyImportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPolicyImportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IPolicyImportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPolicyImportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPolicyImportExtension" />
  <TypeSignature Language="F#" Value="type IPolicyImportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>バインディングに関するカスタム ポリシー アサーションをインポートするオブジェクトのメソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 特定のエンドポイントによって公開されている WSDL 情報でエンドポイントの機能または要件に関するカスタム ポリシー アサーションを検索するには、<xref:System.ServiceModel.Description.IPolicyImportExtension> インターフェイスを実装します。 通常、ポリシー インポーターは特定のアサーションを検索し、そのアサーションの要件をサポートするバインド要素を挿入または構成したり、そのアサーションの要件をサポートするコントラクトを変更したりします。  
  
 対応する <xref:System.ServiceModel.Description.IPolicyExportExtension> とは異なり、<xref:System.ServiceModel.Description.IPolicyImportExtension> は、<xref:System.ServiceModel.Channels.BindingElement> オブジェクトによる実装を必要としません。「使用例」で示されているクライアント構成セクションを使用するか、またはプログラムで <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> コンストラクターに追加することによって読み込むことができます。  
  
 Windows Communication Foundation (WCF) は、<xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> メソッド、<xref:System.ServiceModel.Description.MetadataImporter>、および <xref:System.ServiceModel.Description.PolicyConversionContext>に2つのオブジェクトを渡します。 通常、<xref:System.ServiceModel.Description.PolicyConversionContext> オブジェクトには既に各バインディング スコープのポリシー アサーションが含まれています。  
  
 <xref:System.ServiceModel.Description.IPolicyImportExtension> 実装は、次の手順を実行します。  
  
1.  機能させるカスタム ポリシー アサーションを検索します。このためには、スコープに応じて、<xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>、<xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>、<xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> のいずれかのメソッドを呼び出します。  
  
2.  アサーション コレクションからポリシー アサーションを削除します。 <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> メソッドは、一度にアサーションを検索し、返し、削除します。  
  
3.  バインディング スタックまたはコントラクトを変更します。このためには、必要なカスタム <xref:System.ServiceModel.Channels.BindingElement> を <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> プロパティに追加するか、<xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType> プロパティを変更します。  
  
 手順 2. は重要です。 すべてのポリシーインポーターが呼び出された後、WCF は、残っているポリシーアサーションの存在を確認します。 存在する場合、WCF はポリシーのインポートが失敗したと見なし、関連付けられているバインドをインポートしません。  
  
> [!IMPORTANT]
>  悪意のあるメタデータ提供者が、ポリシー インポーターを悪用する目的で、不正な XML をメタデータの一部として送信しようとする可能性があります。 カスタム ポリシー インポーターは、渡される可能性のあるすべての形式の XML に対して強固にすることをお勧めします。  
  
 <xref:System.ServiceModel.Description.MetadataImporter> のカスタム実装は、それら独自の <xref:System.ServiceModel.Description.PolicyConversionContext> オブジェクトを実装してカスタム メタデータ形式に結び付けられているポリシー アサーションを抽出する必要があります。  
  
 ポリシー アサーションではないカスタム WSDL 要素をエクスポートおよびインポートする場合については、<xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType> および <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> を参照してください。  
  
> [!NOTE]
>  構成ファイルと `/svcutilConfig:<configFile>` オプションで同じ構成要素を使用することにより、 [ServiceModel メタデータユーティリティツール (svcutil.exe)](/dotnet/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe)でカスタムポリシーインポーターおよびエクスポーターを使用できます。  
  
   
  
## Examples  
 <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> メソッドを使用してアサーションを一度に検索し、返し、削除する方法を次のコード例に示します。  
  
 [!code-csharp[CustomPolicySample#1](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyimporter.cs#1)]
 [!code-vb[CustomPolicySample#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyimporter.vb#1)]  
  
 <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType> が呼び出されたときにカスタム ポリシー インポーターを読み込むクライアント アプリケーション構成ファイルを次のコード例に示します。  
  
 [!code-xml[CustomPolicySample#7](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.exe.config#7)]   
  
 <xref:System.ServiceModel.Description.MetadataResolver> を使用して、メタデータをダウンロードし説明オブジェクトに解決する方法を次のコード例に示します。  
  
 [!code-csharp[CustomPolicySample#10](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.cs#10)]
 [!code-vb[CustomPolicySample#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/client.vb#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ImportPolicy">
      <MemberSignature Language="C#" Value="public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportPolicy(class System.ServiceModel.Description.MetadataImporter importer, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportPolicy (importer As MetadataImporter, context As PolicyConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportPolicy(System::ServiceModel::Description::MetadataImporter ^ importer, System::ServiceModel::Description::PolicyConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ImportPolicy : System.ServiceModel.Description.MetadataImporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="iPolicyImportExtension.ImportPolicy (importer, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.ServiceModel.Description.MetadataImporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="importer">使用されている <see cref="T:System.ServiceModel.Description.MetadataImporter" /> オブジェクト。</param>
        <param name="context">インポートできるポリシー アサーション、および実装するバインディング要素を追加できるバインディング要素のコレクションを含む <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />。</param>
        <summary>カスタム ポリシー アサーションをインポートして実装するバインド要素を追加できるメソッドを定義します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ポリシー アサーションを取得して、インポートされた、そのアサーションをサポートするコントラクトまたはバインディングに対してなんらかの変更を実行するには、`ImportPolicy` メソッドを実装します。 通常、ポリシー インポーターは、インポートされるバインディングにバインド要素を構成または挿入することにより、カスタム ポリシー アサーションの検索に応答します。  
  
 Windows Communication Foundation (WCF) は、<xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> メソッド、<xref:System.ServiceModel.Description.MetadataImporter>、および <xref:System.ServiceModel.Description.PolicyConversionContext>に2つのオブジェクトを渡します。 通常、<xref:System.ServiceModel.Description.PolicyConversionContext> オブジェクトには既に各バインディング スコープのポリシー アサーションが含まれています。  
  
 <xref:System.ServiceModel.Description.IPolicyImportExtension> 実装は、次の手順を実行します。  
  
1.  機能させるカスタム ポリシー アサーションを検索します。このためには、スコープに応じて、<xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>、<xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>、<xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> のいずれかのメソッドを呼び出します。  
  
2.  アサーション コレクションからポリシー アサーションを削除します。 <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> メソッドは、一度にアサーションを検索し、返し、削除します。  
  
3.  バインディング スタックまたはコントラクトを変更します。このためには、必要なカスタム <xref:System.ServiceModel.Channels.BindingElement> を <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> プロパティに追加するか、<xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType> プロパティを変更します。  
  
 手順 2. は重要です。 すべてのポリシーインポーターが呼び出された後、WCF は、残っているポリシーアサーションの存在を確認します。 存在する場合、WCF はポリシーのインポートが失敗したと見なし、関連付けられているバインドをインポートしません。  
  
   
  
## Examples  
 <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> メソッドを使用してアサーションを一度に検索し、返し、削除する方法を次のコード例に示します。  
  
 [!code-csharp[CustomPolicySample#1](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyimporter.cs#1)]
 [!code-vb[CustomPolicySample#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyimporter.vb#1)]  
  
 <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType> が呼び出されたときにカスタム ポリシー インポーターを読み込むクライアント アプリケーション構成ファイルを次のコード例に示します。  
  
 [!code-xml[CustomPolicySample#7](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.exe.config#7)]   
  
 <xref:System.ServiceModel.Description.MetadataResolver> を使用して、メタデータをダウンロードし説明オブジェクトに解決する方法を次のコード例に示します。  
  
 [!code-csharp[CustomPolicySample#10](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.cs#10)]
 [!code-vb[CustomPolicySample#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/client.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
