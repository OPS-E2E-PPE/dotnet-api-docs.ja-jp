<Type Name="DynamicField" FullName="System.Web.DynamicData.DynamicField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4da0ed5b5597a1a47fbb241213d23305c45faf56" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77100883" /></Metadata><TypeSignature Language="C#" Value="public class DynamicField : System.Web.UI.WebControls.DataControlField, System.Web.DynamicData.IFieldFormattingOptions, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicField extends System.Web.UI.WebControls.DataControlField implements class System.Web.DynamicData.IFieldFormattingOptions, class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicField" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicField&#xA;Inherits DataControlField&#xA;Implements IAttributeAccessor, IFieldFormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicField : System::Web::UI::WebControls::DataControlField, System::Web::DynamicData::IFieldFormattingOptions, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type DynamicField = class&#xA;    inherit DataControlField&#xA;    interface IAttributeAccessor&#xA;    interface IFieldFormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.DynamicData.Design.DynamicFieldDesigner, System.Web.DynamicData.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d2553-101">ASP.NET Dynamic Data 機能を使用するデータ バインド コントロールに表示されるデータ フィールドを表します。</span><span class="sxs-lookup"><span data-stu-id="d2553-101">Represents a data field that is displayed in a data-bound control that uses ASP.NET Dynamic Data features.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-102">このトピックの内容:</span><span class="sxs-lookup"><span data-stu-id="d2553-102">In this topic:</span></span>

-   [<span data-ttu-id="d2553-103">はじめに</span><span class="sxs-lookup"><span data-stu-id="d2553-103">Introduction</span></span>](#introduction)

-   [<span data-ttu-id="d2553-104">宣言型の構文</span><span class="sxs-lookup"><span data-stu-id="d2553-104">Declarative Syntax</span></span>](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a><span data-ttu-id="d2553-105">はじめに</span><span class="sxs-lookup"><span data-stu-id="d2553-105">Introduction</span></span>
 <span data-ttu-id="d2553-106"><xref:System.Web.DynamicData.DynamicField> クラスは、<xref:System.Web.UI.WebControls.GridView> や <xref:System.Web.UI.WebControls.DetailsView> コントロールなどのデータバインドコントロールによって使用され、カスタムページの ASP.NET 動的データ機能を使用するフィールド値を表示します。</span><span class="sxs-lookup"><span data-stu-id="d2553-106">The <xref:System.Web.DynamicData.DynamicField> class is used by data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls, to display a field value that uses ASP.NET Dynamic Data features in custom pages.</span></span>

 <span data-ttu-id="d2553-107"><xref:System.Web.DynamicData.DynamicField> クラスは、<xref:System.Web.UI.WebControls.BoundField> クラスの機能に似た機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="d2553-107">The <xref:System.Web.DynamicData.DynamicField> class provides functionality that resembles that of the <xref:System.Web.UI.WebControls.BoundField> class.</span></span> <span data-ttu-id="d2553-108">ただし、<xref:System.Web.DynamicData.DynamicField> オブジェクトは動的データアプリケーションで使用されるため、次の動的データの機能を利用できます。</span><span class="sxs-lookup"><span data-stu-id="d2553-108">However, because a <xref:System.Web.DynamicData.DynamicField> object is used in Dynamic Data applications, you can take advantage of the following Dynamic Data features:</span></span>

-   <span data-ttu-id="d2553-109">データ型に基づいてフィールドテンプレートを使用して、フィールドの適切なコントロールを自動的に表示します。</span><span class="sxs-lookup"><span data-stu-id="d2553-109">Automatically rendering the proper control for a field by using field templates, based on the data type.</span></span> <span data-ttu-id="d2553-110">フィールドテンプレートは、アプリケーション全体に対してグローバルに変更できます。</span><span class="sxs-lookup"><span data-stu-id="d2553-110">The field templates can be globally modified for the entire application.</span></span>

-   <span data-ttu-id="d2553-111">データベーススキーマに基づいて組み込みのデータ検証を提供します。</span><span class="sxs-lookup"><span data-stu-id="d2553-111">Providing built-in data validation based on the database schema.</span></span> <span data-ttu-id="d2553-112">データモデルをカスタマイズして、検証の種類を追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2553-112">You can also add validation types by customizing the data model.</span></span>

-   <span data-ttu-id="d2553-113">データモデルの属性を使用するか、<xref:System.Web.DynamicData.DynamicField.UIHint%2A> プロパティを使用して、個々のフィールドのデータ表示をカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="d2553-113">Customizing data rendering for individual fields by using attributes in the data model or by using the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property.</span></span>

 <span data-ttu-id="d2553-114"><xref:System.Web.DynamicData.DynamicField> オブジェクトは、`DynamicControl` コントロールを使用して各フィールドを表示します。</span><span class="sxs-lookup"><span data-stu-id="d2553-114">The <xref:System.Web.DynamicData.DynamicField> object renders each field by using a `DynamicControl` control.</span></span> <span data-ttu-id="d2553-115"><xref:System.Web.DynamicData.DynamicField> オブジェクトに表示するデータフィールドを指定するには、<xref:System.Web.DynamicData.DynamicField.DataField%2A> プロパティをフィールド名に設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-115">To specify the data field to display in a <xref:System.Web.DynamicData.DynamicField> object, set the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property to the field name.</span></span> <span data-ttu-id="d2553-116">カスタム書式指定文字列をフィールド値に適用するには、<xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-116">You can apply a custom formatting string to the field value by setting the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property.</span></span> <span data-ttu-id="d2553-117">既定では、書式設定文字列は、データバインドコントロールが読み取り専用モードの場合にのみ、フィールド値に適用されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-117">By default the formatting string is applied to field values only when the data-bound control is in read-only mode.</span></span> <span data-ttu-id="d2553-118">データバインドコントロールが編集モードのときに表示される値に書式設定文字列を適用するには、<xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-118">To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.</span></span> <span data-ttu-id="d2553-119">フィールド値が `null`場合は、<xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> プロパティを設定することによって、カスタムキャプションを表示できます。</span><span class="sxs-lookup"><span data-stu-id="d2553-119">If a field value is `null`, you can display a custom caption by setting the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property.</span></span> <span data-ttu-id="d2553-120">また、<xref:System.Web.DynamicData.DynamicField> オブジェクトは、<xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> プロパティを `true`に設定することによって、空の文字列 ("") フィールド値を null 値に自動的に変換することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2553-120">The <xref:System.Web.DynamicData.DynamicField> object can also automatically convert empty string ("") field values to null values by setting the <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> property to `true`.</span></span>

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a><span data-ttu-id="d2553-121">宣言型の構文</span><span class="sxs-lookup"><span data-stu-id="d2553-121">Declarative Syntax</span></span>

```
<asp:DynamicField
    AccessibleHeaderText="string"
    ApplyFormatInEditMode="true|false"
    ControlStyle-BackColor="color name|#dddddd"
    ControlStyle-BorderColor="color name|#dddddd"
    ControlStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|
       Ridge|Inset|Outset"
    ControlStyle-BorderWidth="size"
    ControlStyle-CssClass="string"
    ControlStyle-Font-Bold="true|false"
    ControlStyle-Font-Italic="true|false"
    ControlStyle-Font-Names="string"
    ControlStyle-Font-Overline="true|false"
    ControlStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
       Large|X-Large|XX-Large"
    ControlStyle-Font-Strikeout="true|false"
    ControlStyle-Font-Underline="true|false"
    ControlStyle-ForeColor="color name|#dddddd"
    ControlStyle-Height="size"
    ControlStyle-Width="size"
    ConvertEmptyStringToNull="true|false"
    DataField="string"
    DataFormatString="string"
    FooterStyle-BackColor="color name|#dddddd"
    FooterStyle-BorderColor="color name|#dddddd"
    FooterStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|
       Ridge|Inset|Outset"
    FooterStyle-BorderWidth="size"
    FooterStyle-CssClass="string"
    FooterStyle-Font-Bold="true|false"
    FooterStyle-Font-Italic="true|false"
    FooterStyle-Font-Names="string"
    FooterStyle-Font-Overline="true|false"
    FooterStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
       Large|X-Large|XX-Large"
    FooterStyle-Font-Strikeout="true|false"
    FooterStyle-Font-Underline="true|false"
    FooterStyle-ForeColor="color name|#dddddd"
    FooterStyle-Height="size"
    FooterStyle-Width="size"
    FooterStyle-HorizontalAlign="Center|Justify|Left|NotSet|Right"
    FooterStyle-VerticalAlign="Bottom|Middle|NotSet|Top"
    FooterStyle-Wrap="true|false"
    HeaderImageUrl="uri"
    HeaderStyle-BackColor="color name|#dddddd"
    HeaderStyle-BorderColor="color name|#dddddd"
    HeaderStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|
       Ridge|Inset|Outset"
    HeaderStyle-BorderWidth="size"
    HeaderStyle-CssClass="string"
    HeaderStyle-Font-Bold="true|false"
    HeaderStyle-Font-Italic="true|false"
    HeaderStyle-Font-Names="string"
    HeaderStyle-Font-Overline="true|false"
    HeaderStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
       Large|X-Large|XX-Large"
    HeaderStyle-Font-Strikeout="true|false"
    HeaderStyle-Font-Underline="true|false"
    HeaderStyle-ForeColor="color name|#dddddd"
    HeaderStyle-Height="size"
    HeaderStyle-Width="size"
    HeaderStyle-HorizontalAlign="Center|Justify|Left|NotSet|Right"
    HeaderStyle-VerticalAlign="Bottom|Middle|NotSet|Top"
    HeaderStyle-Wrap="true|false"
    HeaderText="string"
    InsertVisible="true|false"
    ItemStyle-BackColor="color name|#dddddd"
    ItemStyle-BorderColor="color name|#dddddd"
    ItemStyle-BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|
       Ridge|Inset|Outset"
    ItemStyle-BorderWidth="size"
    ItemStyle-CssClass="string"
    ItemStyle-Font-Bold="true|false"
    ItemStyle-Font-Italic="true|false"
    ItemStyle-Font-Names="string"
    ItemStyle-Font-Overline="true|false"
    ItemStyle-Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
       Large|X-Large|XX-Large"
    ItemStyle-Font-Strikeout="true|false"
    ItemStyle-Font-Underline="true|false"
    ItemStyle-ForeColor="color name|#dddddd"
    ItemStyle-Height="size"
    ItemStyle-Width="size"
    ItemStyle-HorizontalAlign="Center|Justify|Left|NotSet|Right"
    ItemStyle-VerticalAlign="Bottom|Middle|NotSet|Top"
    ItemStyle-Wrap="true|false"
    NullDisplayText="string"
    ReadOnly="true|false"
    ShowHeader="true|false"
    SortExpression="string"
    UIHint="string"
    ValidationGroup="string"
    Visible="true|false"
    />
<asp:DynamicField />
```



## Examples
 <span data-ttu-id="d2553-122">この機能の実行時のコード例については、「 [run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2553-122">See a run-time code example of this feature: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicField).</span></span>

 <span data-ttu-id="d2553-123">次の例では、<xref:System.Web.UI.WebControls.GridView> コントロールの <xref:System.Web.DynamicData.DynamicField> オブジェクトを使用して、データベーステーブルの値を表示および編集する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d2553-123">The following example demonstrates how to use the <xref:System.Web.DynamicData.DynamicField> object in a <xref:System.Web.UI.WebControls.GridView> control to display and edit values from a database table.</span></span>

 [!code-aspx-csharp[System.Web.DynamicData.DynamicField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicField/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicField/VB/Default.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.DynamicData.DynamicControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512"><span data-ttu-id="d2553-124">ASP.NET 動的データの概要</span><span class="sxs-lookup"><span data-stu-id="d2553-124">ASP.NET Dynamic Data Overview</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=286117"><span data-ttu-id="d2553-125">モデルバインドと Web フォーム</span><span class="sxs-lookup"><span data-stu-id="d2553-125">Model Binding and Web Forms</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2553-126"><see cref="T:System.Web.DynamicData.DynamicField" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d2553-126">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicField" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-127">このコンストラクターを使用して、<xref:System.Web.DynamicData.DynamicField> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d2553-127">Use this constructor to initialize a new instance of the <xref:System.Web.DynamicData.DynamicField> class.</span></span> <span data-ttu-id="d2553-128">このコンストラクターは、動的に作成されたデータバインドコントロールにフィールドを追加する場合によく使用されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-128">This constructor is commonly used when adding fields to a dynamically created data-bound control.</span></span>

 <span data-ttu-id="d2553-129">データバインドコントロールに <xref:System.Web.DynamicData.DynamicField> オブジェクトを動的に追加するには、新しい <xref:System.Web.DynamicData.DynamicField> オブジェクトを作成し、そのプロパティを設定して、データバインドコントロールのフィールドコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="d2553-129">To dynamically add a <xref:System.Web.DynamicData.DynamicField> object to a data-bound control, create a new <xref:System.Web.DynamicData.DynamicField> object, set its properties, and then add it to the data-bound control's field collection.</span></span> <span data-ttu-id="d2553-130">たとえば、<xref:System.Web.UI.WebControls.GridView> コントロールを使用している場合は、<xref:System.Web.DynamicData.DynamicField> オブジェクトを <xref:System.Web.UI.WebControls.GridView.Columns%2A> コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="d2553-130">For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.DynamicData.DynamicField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.</span></span>

> [!NOTE]
>  <span data-ttu-id="d2553-131">フィールドはデータバインドコントロールに動的に追加できますが、フィールドを静的に宣言し、必要に応じて表示または非表示にすることを強くお勧めします。</span><span class="sxs-lookup"><span data-stu-id="d2553-131">Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate.</span></span> <span data-ttu-id="d2553-132">すべてのフィールドを静的に宣言すると、親データバインドコントロールのビューステートのサイズが縮小されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-132">Statically declaring all of your fields reduces the size of the view state for the parent data-bound control.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.DynamicData.DynamicField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-133">データ フィールドが編集モードである場合に、<see cref="P:System.Web.DynamicData.DynamicField.DataFormatString" /> プロパティで指定した書式指定文字列をフィールド値に適用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-133">Gets or sets a value that indicates whether the formatted string that is specified by the <see cref="P:System.Web.DynamicData.DynamicField.DataFormatString" /> property is applied to field value when the data field is in edit mode.</span></span></summary>
        <value><span data-ttu-id="d2553-134"><see langword="true" /> が編集モードで書式を適用する場合は <see cref="T:System.Web.DynamicData.DynamicField" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2553-134"><see langword="true" /> if the <see cref="T:System.Web.DynamicData.DynamicField" /> applies formatting in edit mode; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d2553-135">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="d2553-135">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-136">データバインドコントロール (<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.GridView>など) には、ユーザーがレコードの読み取り、編集、または挿入を行うための表示モードが異なります。</span><span class="sxs-lookup"><span data-stu-id="d2553-136">Data-bound controls (such as <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.GridView>) have different display modes that allow the user to read, edit, or insert records.</span></span> <span data-ttu-id="d2553-137">既定では、<xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> プロパティによって指定された書式設定文字列は、データバインドコントロールが読み取り専用モードの場合にのみ、フィールド値に適用されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-137">By default, the formatting string specified by the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode.</span></span> <span data-ttu-id="d2553-138">データバインドコントロールが編集モードのときに表示される値に書式設定文字列を適用するには、<xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-138">To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.</span></span>

> [!NOTE]
>  <span data-ttu-id="d2553-139"><xref:System.Web.DynamicData.DynamicField> オブジェクトは、データソースでフィールドが更新されたときに、書式設定を自動的に削除しません。</span><span class="sxs-lookup"><span data-stu-id="d2553-139">A <xref:System.Web.DynamicData.DynamicField> object does not automatically remove the formatting when the field is updated in the data source.</span></span> <span data-ttu-id="d2553-140">格納されている値の一部として書式設定が不要な場合は、プログラムによって書式設定を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2553-140">If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="protected System.Web.DynamicData.MetaColumn Column { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.Column" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Column : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.DynamicField.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-141">この <see cref="T:System.Web.DynamicData.MetaColumn" /> オブジェクトが関連付けられている <see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2553-141">Gets the <see cref="T:System.Web.DynamicData.MetaColumn" /> object that this <see cref="T:System.Web.DynamicData.DynamicField" /> object is associated with.</span></span></summary>
        <value><span data-ttu-id="d2553-142">メタ列。</span><span class="sxs-lookup"><span data-stu-id="d2553-142">The meta column.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConfigureDynamicControl">
      <MemberSignature Language="C#" Value="protected virtual void ConfigureDynamicControl (System.Web.DynamicData.DynamicControl control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ConfigureDynamicControl(class System.Web.DynamicData.DynamicControl control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.ConfigureDynamicControl(System.Web.DynamicData.DynamicControl)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ConfigureDynamicControl (control As DynamicControl)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ConfigureDynamicControl(System::Web::DynamicData::DynamicControl ^ control);" />
      <MemberSignature Language="F#" Value="abstract member ConfigureDynamicControl : System.Web.DynamicData.DynamicControl -&gt; unit&#xA;override this.ConfigureDynamicControl : System.Web.DynamicData.DynamicControl -&gt; unit" Usage="dynamicField.ConfigureDynamicControl control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.DynamicData.DynamicControl" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="d2553-143">変更するコントロール。</span><span class="sxs-lookup"><span data-stu-id="d2553-143">The control to modify.</span></span></param>
        <summary><span data-ttu-id="d2553-144"><see cref="T:System.Web.DynamicData.DynamicControl" /> メソッドによって作成された <see cref="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" /> オブジェクトを変更する機構を提供します。</span><span class="sxs-lookup"><span data-stu-id="d2553-144">Provides a mechanism to modify a <see cref="T:System.Web.DynamicData.DynamicControl" /> object that was created by the <see cref="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-145">データ ソースのデータ フィールドを更新するときに、空の文字列値 ("") を null 値に自動的に変換するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-145">Gets or sets a value that indicates whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</span></span></summary>
        <value><span data-ttu-id="d2553-146">空の文字列値を null 値に自動的に変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2553-146"><see langword="true" /> to automatically convert empty string values to null values; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d2553-147">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="d2553-147">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-148">場合によっては、レコードを更新または挿入するときに、ユーザーがフィールド値に空の文字列を入力することがあります。</span><span class="sxs-lookup"><span data-stu-id="d2553-148">Sometimes the user might enter an empty string for a field value when updating or inserting records.</span></span> <span data-ttu-id="d2553-149">データソースのデータフィールドを更新するときに、空の文字列値を null に自動的に変換するかどうかを指定するには、<xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="d2553-149">Use the <xref:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull%2A> property to specify whether an empty string value is automatically converted to null when the data field is updated in the data source.</span></span>

 <span data-ttu-id="d2553-150">既定では、<xref:System.Web.DynamicData.DynamicField> オブジェクトは null 値を空の文字列として表示します。</span><span class="sxs-lookup"><span data-stu-id="d2553-150">By default, a <xref:System.Web.DynamicData.DynamicField> object displays null values as empty strings.</span></span> <span data-ttu-id="d2553-151">別の値を表示するには、<xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-151">To display a different value, set the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property.</span></span>

> [!NOTE]
>  <span data-ttu-id="d2553-152"><xref:System.Web.DynamicData.DynamicField> オブジェクトの親コントロールにバインドされているデータソースコントロールの <xref:System.Web.UI.WebControls.Parameter> オブジェクトも <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>という名前のプロパティを持っています。</span><span class="sxs-lookup"><span data-stu-id="d2553-152">The <xref:System.Web.UI.WebControls.Parameter> object of the data source control that the parent control of <xref:System.Web.DynamicData.DynamicField> object is bound to also has a property named <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d2553-153">このプロパティは、同じ関数を実行します。</span><span class="sxs-lookup"><span data-stu-id="d2553-153">This property performs the same function.</span></span> <span data-ttu-id="d2553-154">両方のプロパティが適切に設定されていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="d2553-154">Make sure that both properties are set appropriately.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.NullDisplayText" />
        <altmember cref="T:System.Web.UI.WebControls.Parameter" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="dynamicField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField"><span data-ttu-id="d2553-155">現在の <see cref="T:System.Web.UI.WebControls.DataControlField" /> のプロパティをコピーする <see cref="T:System.Web.DynamicData.DynamicField" />。</span><span class="sxs-lookup"><span data-stu-id="d2553-155">The <see cref="T:System.Web.UI.WebControls.DataControlField" /> to copy the properties of the current <see cref="T:System.Web.DynamicData.DynamicField" /> to.</span></span></param>
        <summary><span data-ttu-id="d2553-156"><see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトの現在のプロパティを、指定された <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトにコピーします。</span><span class="sxs-lookup"><span data-stu-id="d2553-156">Copies the properties of the current <see cref="T:System.Web.DynamicData.DynamicField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-157"><xref:System.Web.DynamicData.DynamicField.CopyProperties%2A> メソッドは、ヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="d2553-157">The <xref:System.Web.DynamicData.DynamicField.CopyProperties%2A> method is a helper method.</span></span> <span data-ttu-id="d2553-158">このメソッドは、現在の <xref:System.Web.DynamicData.DynamicField> オブジェクトのプロパティを `newField` パラメーターで渡される <xref:System.Web.DynamicData.DynamicField> オブジェクトにコピーするために、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> メソッドによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-158">It is used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to copy the properties of the current <xref:System.Web.DynamicData.DynamicField> object to the <xref:System.Web.DynamicData.DynamicField> object that is passed in the `newField` parameter.</span></span>

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2553-159"><see cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> メソッドをオーバーライドして、派生クラスで作成された新しいプロパティをコピーします。</span><span class="sxs-lookup"><span data-stu-id="d2553-159">Override the <see cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> method to copy the new properties that were created in the derived class.</span></span> <span data-ttu-id="d2553-160"><see cref="T:System.Web.DynamicData.DynamicField" /> クラスのプロパティもコピーされるように、基本クラスの <see cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d2553-160">Call the base class's <see cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> method so that the properties of the <see cref="T:System.Web.DynamicData.DynamicField" /> class are also copied.</span></span></para></block>
        <altmember cref="M:System.Web.DynamicData.DynamicField.CreateField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
      </Docs>
    </Member>
    <Member MemberName="CreateDynamicControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.DynamicControl CreateDynamicControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.DynamicControl CreateDynamicControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.CreateDynamicControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDynamicControl () As DynamicControl" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::DynamicControl ^ CreateDynamicControl();" />
      <MemberSignature Language="F#" Value="abstract member CreateDynamicControl : unit -&gt; System.Web.DynamicData.DynamicControl&#xA;override this.CreateDynamicControl : unit -&gt; System.Web.DynamicData.DynamicControl" Usage="dynamicField.CreateDynamicControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.DynamicControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2553-161"><see cref="T:System.Web.DynamicData.DynamicField" /> から派生するクラスに対して <see cref="T:System.Web.DynamicData.DynamicControl" /> オブジェクトの作成方法をオーバーライドする機構を提供します。</span><span class="sxs-lookup"><span data-stu-id="d2553-161">Provides a mechanism for classes that derive from <see cref="T:System.Web.DynamicData.DynamicField" /> to override how a <see cref="T:System.Web.DynamicData.DynamicControl" /> object is created.</span></span></summary>
        <returns><span data-ttu-id="d2553-162">新しいダイナミック コントロール。</span><span class="sxs-lookup"><span data-stu-id="d2553-162">A new dynamic control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="dynamicField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d2553-163"><see cref="T:System.Web.DynamicData.DynamicField" /> クラスの新しいインスタンスを作成して返します。</span><span class="sxs-lookup"><span data-stu-id="d2553-163">Creates and returns a new instance of the <see cref="T:System.Web.DynamicData.DynamicField" /> class.</span></span></summary>
        <returns><span data-ttu-id="d2553-164"><see cref="T:System.Web.DynamicData.DynamicField" /> クラスの新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="d2553-164">A new instance of the <see cref="T:System.Web.DynamicData.DynamicField" /> class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-165"><xref:System.Web.DynamicData.DynamicField.CreateField%2A> メソッドは、ヘルパーメソッドです。</span><span class="sxs-lookup"><span data-stu-id="d2553-165">The <xref:System.Web.DynamicData.DynamicField.CreateField%2A> method is a helper method.</span></span> <span data-ttu-id="d2553-166">これは、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> メソッドによって、空の <xref:System.Web.DynamicData.DynamicField> オブジェクトを作成するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-166">It is used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> method to create an empty <xref:System.Web.DynamicData.DynamicField> object.</span></span>

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d2553-167"><see cref="M:System.Web.DynamicData.DynamicField.CreateField" /> メソッドをオーバーライドして、派生クラスの新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="d2553-167">Override the <see cref="M:System.Web.DynamicData.DynamicField.CreateField" /> method to return a new instance of the derived class.</span></span> <span data-ttu-id="d2553-168">基底クラスの <see cref="M:System.Web.DynamicData.DynamicField.CreateField" /> メソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="d2553-168">Do not call the <see cref="M:System.Web.DynamicData.DynamicField.CreateField" /> method of the base class.</span></span></para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.DynamicData.DynamicField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.DynamicData.DynamicField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-169"><see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトのバインド先のデータ フィールドの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-169">Gets or sets the name of the data field to bind the <see cref="T:System.Web.DynamicData.DynamicField" /> object to.</span></span></summary>
        <value><span data-ttu-id="d2553-170"><see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトのバインド先のデータ フィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="d2553-170">The name of the data field that the <see cref="T:System.Web.DynamicData.DynamicField" /> object is bound to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-171"><xref:System.Web.DynamicData.DynamicField.DataField%2A> プロパティを使用して、<xref:System.Web.DynamicData.DynamicField> オブジェクトにバインドするデータフィールドを指定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-171">Use the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property to specify the data field to bind to the <xref:System.Web.DynamicData.DynamicField> object.</span></span> <span data-ttu-id="d2553-172">データフィールドは、列名、または外部キー列のリレーションシップ名にすることができます。</span><span class="sxs-lookup"><span data-stu-id="d2553-172">The data field can be the column name or, for foreign key columns, the relationship name.</span></span>

 <span data-ttu-id="d2553-173">既定では、フィールドのデータ型に関連付けられているフィールドテンプレートを使用して、<xref:System.Web.DynamicData.DynamicField> オブジェクトによって指定されたデータフィールドが表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-173">By default, the specified data field is displayed by the <xref:System.Web.DynamicData.DynamicField> object using the field template that is associated with the field data type.</span></span> <span data-ttu-id="d2553-174">[データ] フィールドに表示されるフィールドテンプレートを変更するには、[<xref:System.Web.DynamicData.DynamicField.UIHint%2A>] プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-174">You can change the field template that is rendered for the data field by setting the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property.</span></span> <span data-ttu-id="d2553-175">また、<xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> プロパティを設定して、表示されるテキストの書式を設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2553-175">You can also format the displayed text by setting the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property.</span></span> <span data-ttu-id="d2553-176">フィールド値が `null`場合は、既定で空の文字列 ("") が値に対して表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-176">If a field value is `null`, an empty string ("") is displayed for the value by default.</span></span> <span data-ttu-id="d2553-177">代替キャプションを指定するには、<xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-177">To specify an alternate caption, set the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property.</span></span>

 <span data-ttu-id="d2553-178">**メモ**データフィールドの表示と動作をグローバルに変更する場合は、<xref:System.Web.DynamicData.DynamicField> オブジェクトの特定のインスタンスで属性を設定するのではなく、データモデルに属性を適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2553-178">**Note** If you want to change the display and behavior of a data field globally, you must apply attributes to your data model instead of setting this in a particular instance of the <xref:System.Web.DynamicData.DynamicField> object.</span></span> <span data-ttu-id="d2553-179">詳細については、「 [ASP.NET 動的データ](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2553-179">For more information, see [ASP.NET Dynamic Data](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>

 <span data-ttu-id="d2553-180"><xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> メソッドは、<xref:System.Web.DynamicData.DynamicField.DataField%2A> プロパティが設定されている場合に、状態変更イベントを発生させるために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-180">The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property is set.</span></span>

 <span data-ttu-id="d2553-181"><xref:System.Web.DynamicData.DynamicField.DataField%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-181">The value of the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property is stored in view state.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.NullDisplayText" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.UIHint" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.DynamicData.DynamicField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-182">データ フィールドの値の表示形式を指定する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-182">Gets or sets the string that specifies the display format for the value of the data field.</span></span></summary>
        <value><span data-ttu-id="d2553-183">データ フィールドの値の表示形式を指定する書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="d2553-183">A formatting string that specifies the display format for the value of the data field.</span></span> <span data-ttu-id="d2553-184">既定値は空の文字列 ("") です。この値は、値に適用される特定の書式が設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="d2553-184">The default is an empty string (""), which indicates that no special formatting is applied to the value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-185"><xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> プロパティを使用して、<xref:System.Web.DynamicData.DynamicField> オブジェクトに表示される値のカスタム表示形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-185">Use the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property to specify a custom display format for the values displayed in the <xref:System.Web.DynamicData.DynamicField> object.</span></span> <span data-ttu-id="d2553-186"><xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> プロパティが設定されていない場合、フィールド値は特殊な書式設定なしで表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-186">If the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property is not set, the field value is displayed without any special formatting.</span></span>

 <span data-ttu-id="d2553-187">既定では、書式設定文字列は、<xref:System.Web.DynamicData.DynamicField> オブジェクトを含むデータバインドコントロールが読み取り専用モードの場合にのみ、フィールド値に適用されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-187">By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.DynamicData.DynamicField> object is in read-only mode.</span></span> <span data-ttu-id="d2553-188">編集モード中に書式設定文字列をフィールド値に適用するには、<xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-188">To apply the formatting string to the field value while in edit mode, set the <xref:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode%2A> property to `true`.</span></span>

 <span data-ttu-id="d2553-189"><xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> プロパティを使用して指定する表示形式は、<xref:System.Web.DynamicData.DynamicField> クラスのこのインスタンスに固有です。</span><span class="sxs-lookup"><span data-stu-id="d2553-189">The display format that you specify using the <xref:System.Web.DynamicData.DynamicField.DataFormatString%2A> property is specific to this instance of the <xref:System.Web.DynamicData.DynamicField> class.</span></span> <span data-ttu-id="d2553-190">データモデルに <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> を適用し、コンストラクターで <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> 名前付きパラメーターを設定することによって、アプリケーション全体でデータフィールドの表示形式を変更することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2553-190">You can also change the display format for a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> to your data model and setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> named parameter in the constructor.</span></span> <span data-ttu-id="d2553-191">詳細については、「 [ASP.NET 動的データ](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2553-191">For more information, see [ASP.NET Dynamic Data](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.ApplyFormatInEditMode" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="d2553-192">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="d2553-192">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="dynamicField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="d2553-193">セル値を保持するディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="d2553-193">The dictionary that will hold the cell values.</span></span></param>
        <param name="cell"><span data-ttu-id="d2553-194"><see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトのテキストまたはコントロールを格納するセル。</span><span class="sxs-lookup"><span data-stu-id="d2553-194">The cell that contains the text or controls of the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</span></span></param>
        <param name="rowState"><span data-ttu-id="d2553-195">行の状態を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="d2553-195">One of the enumeration values that specifies the row state.</span></span></param>
        <param name="includeReadOnly"><span data-ttu-id="d2553-196"><see langword="true" /> に読み込み専用のフィールドの値を含める場合は <paramref name="dictionary" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2553-196"><see langword="true" /> to include the values of read-only fields in <paramref name="dictionary" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d2553-197">現在のテーブル セルからデータ フィールドの値を抽出し、指定したディクショナリに追加します。</span><span class="sxs-lookup"><span data-stu-id="d2553-197">Extracts the value of the data field from the current table cell and adds the value to the specified dictionary.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttribute (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string -&gt; string&#xA;override this.GetAttribute : string -&gt; string" Usage="dynamicField.GetAttribute key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d2553-198">取得する属性のキー。</span><span class="sxs-lookup"><span data-stu-id="d2553-198">The key of the attribute to get.</span></span></param>
        <summary><span data-ttu-id="d2553-199">指定した属性値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d2553-199">Retrieves the specified attribute value.</span></span></summary>
        <returns><span data-ttu-id="d2553-200">属性の値。</span><span class="sxs-lookup"><span data-stu-id="d2553-200">The value of the attribute.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)" />
        <altmember cref="T:System.Web.UI.IAttributeAccessor" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.DynamicData.DynamicField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-201"><see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトを含むデータ バインド コントロールのヘッダーに表示されるテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-201">Gets or sets the text that is displayed in the header of the data-bound control that contains the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</span></span></summary>
        <value><span data-ttu-id="d2553-202"><see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトを含むデータ バインド コントロールのヘッダーに表示されるテキスト。</span><span class="sxs-lookup"><span data-stu-id="d2553-202">The text that is displayed in the header of the data-bound control that contains the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-203"><xref:System.Web.DynamicData.DynamicField.HeaderText%2A> プロパティを使用して、わかりやすい名前を持つデータバインドコントロール内のフィールドを識別します。</span><span class="sxs-lookup"><span data-stu-id="d2553-203">Use the <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> property to identify a field in a data-bound control with a friendly name.</span></span> <span data-ttu-id="d2553-204"><xref:System.Web.DynamicData.DynamicField.HeaderText%2A> プロパティの最も一般的な用途は、<xref:System.Web.UI.WebControls.GridView> または <xref:System.Web.UI.WebControls.DetailsView> コントロールのデータフィールドに意味のある列名を提供することです。</span><span class="sxs-lookup"><span data-stu-id="d2553-204">The most common application of the <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> property is to provide meaningful column names to data fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>

 <span data-ttu-id="d2553-205">既定では、<xref:System.Web.DynamicData.DynamicField.HeaderText%2A> プロパティは、<xref:System.ComponentModel.DisplayNameAttribute> 属性を使用して、データフィールドに設定されている表示名を使用します。</span><span class="sxs-lookup"><span data-stu-id="d2553-205">By default, the <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> property uses the display name set for the data field by using the <xref:System.ComponentModel.DisplayNameAttribute> attribute.</span></span> <span data-ttu-id="d2553-206">表示名が設定されていない場合、<xref:System.Web.DynamicData.DynamicField.HeaderText%2A> プロパティは <xref:System.Web.DynamicData.DynamicField.DataField%2A> プロパティの値を使用します。</span><span class="sxs-lookup"><span data-stu-id="d2553-206">If the display name is not set, the <xref:System.Web.DynamicData.DynamicField.HeaderText%2A> property uses the value of the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2553-207"><see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトは、<see cref="T:System.Web.DynamicData.IDynamicDataSource" /> インターフェイスを実装するデータ ソース コントロールにバインドされていないデータ バインド コントロール内にあります。</span><span class="sxs-lookup"><span data-stu-id="d2553-207">The <see cref="T:System.Web.DynamicData.DynamicField" /> object is inside a data-bound control that is not bound to a data source control that implements the <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> interface.</span></span></exception>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.DisplayName" />
        <altmember cref="T:System.ComponentModel.DisplayNameAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.DynamicData.DynamicField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-208">データ フィールド値を <see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトに表示する前に HTML エンコードするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-208">Gets or sets a value that indicates whether data field values are HTML-encoded before they are displayed in a <see cref="T:System.Web.DynamicData.DynamicField" /> object.</span></span></summary>
        <value><span data-ttu-id="d2553-209">フィールド値を表示する前に HTML エンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2553-209"><see langword="true" /> if field values are HTML-encoded before they are displayed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="d2553-210">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="d2553-210">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-211"><xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A> プロパティを使用して、フィールド値を表示する前にそれぞれの文字列形式に HTML エンコードするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-211">Use the <xref:System.Web.DynamicData.DynamicField.HtmlEncode%2A> property to specify whether field values are HTML-encoded to their respective string representations before they are displayed.</span></span>

> [!NOTE]
>  <span data-ttu-id="d2553-212">HTML エンコードフィールド値は、クロスサイトスクリプティング攻撃や悪意のあるコンテンツが表示されないようにするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="d2553-212">HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed.</span></span> <span data-ttu-id="d2553-213">このプロパティは、可能な場合は常に有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2553-213">This property should be enabled whenever possible.</span></span> <span data-ttu-id="d2553-214">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2553-214">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)"><span data-ttu-id="d2553-215">スクリプト攻略の概要</span><span class="sxs-lookup"><span data-stu-id="d2553-215">Script Exploits Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="dynamicField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell"><span data-ttu-id="d2553-216"><see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトのテキストまたはコントロールを格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d2553-216">The object that contains the text or controls of the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</span></span></param>
        <param name="cellType"><span data-ttu-id="d2553-217"><paramref name="cell" /> オブジェクトの機能を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="d2553-217">One of the enumeration values that specifies the function of the <paramref name="cell" /> object.</span></span></param>
        <param name="rowState"><span data-ttu-id="d2553-218">行の状態を指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="d2553-218">One of the enumeration values that specifies the row state.</span></span></param>
        <param name="rowIndex"><span data-ttu-id="d2553-219"><paramref name="cell" /> オブジェクトを含む行のインデックス。</span><span class="sxs-lookup"><span data-stu-id="d2553-219">The index of the row that the <paramref name="cell" /> object is contained in.</span></span></param>
        <summary><span data-ttu-id="d2553-220">テキストまたはコントロールを指定したセルに追加します。</span><span class="sxs-lookup"><span data-stu-id="d2553-220">Adds text or controls to the specified cell.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.DynamicData.DynamicField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-221">フィールド値が <see langword="null" /> の場合にデータ フィールドに表示されるキャプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-221">Gets or sets the caption that is displayed for a data field when the field value is <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="d2553-222">フィールド値が <see langword="null" /> の場合にデータ フィールドに表示されるキャプション。</span><span class="sxs-lookup"><span data-stu-id="d2553-222">The caption that is displayed for a data field when the field value is <see langword="null" />.</span></span> <span data-ttu-id="d2553-223">既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="d2553-223">The default is an empty string (""), which indicates that this property is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-224">フィールド値は、データソースに null として格納されることがあります。</span><span class="sxs-lookup"><span data-stu-id="d2553-224">Sometimes a field value is stored as null in the data source.</span></span> <span data-ttu-id="d2553-225"><xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> プロパティを設定することによって、null 値を持つデータフィールドに表示するカスタムキャプションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="d2553-225">You can specify a custom caption to display for data fields that have a null value by setting the <xref:System.Web.DynamicData.DynamicField.NullDisplayText%2A> property.</span></span> <span data-ttu-id="d2553-226">このプロパティが設定されていない場合、null フィールド値は空の文字列 ("") として表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-226">If this property is not set, null field values are displayed as empty strings ("").</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.DynamicData.DynamicField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-227">動的フィールドの読み取り専用状態を取得します。</span><span class="sxs-lookup"><span data-stu-id="d2553-227">Gets the read-only state of the dynamic field.</span></span></summary>
        <value><span data-ttu-id="d2553-228">動的フィールドの読み取り専用状態。</span><span class="sxs-lookup"><span data-stu-id="d2553-228">The read-only state of the dynamic field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-229"><xref:System.Web.DynamicData.DynamicField.ReadOnly%2A> プロパティが `true`の場合、<xref:System.Web.DynamicData.DynamicField> コントロールは読み取り専用のテンプレートを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="d2553-229">If the <xref:System.Web.DynamicData.DynamicField.ReadOnly%2A> property is `true`, the <xref:System.Web.DynamicData.DynamicField> control loads a read-only template.</span></span> <span data-ttu-id="d2553-230">このプロパティでは、ビューステートが有効になっている必要があります。</span><span class="sxs-lookup"><span data-stu-id="d2553-230">This property requires that view state be enabled.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicField.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAttribute(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetAttribute : string * string -&gt; unit&#xA;override this.SetAttribute : string * string -&gt; unit" Usage="dynamicField.SetAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="d2553-231">設定する属性の名前。</span><span class="sxs-lookup"><span data-stu-id="d2553-231">The name of the attribute to be set.</span></span></param>
        <param name="value"><span data-ttu-id="d2553-232">属性値。</span><span class="sxs-lookup"><span data-stu-id="d2553-232">The attribute value.</span></span></param>
        <summary><span data-ttu-id="d2553-233"><see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトに関連付けられた属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-233">Sets an attribute that is associated with the <see cref="T:System.Web.DynamicData.DynamicField" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.DynamicData.DynamicField.GetAttribute(System.String)" />
        <altmember cref="T:System.Web.UI.IAttributeAccessor" />
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public override string SortExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SortExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortExpression : string with get, set" Usage="System.Web.DynamicData.DynamicField.SortExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-234">データ フィールドを使用してデータ ソースを並べ替えるときに使用される並べ替え式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-234">Gets or sets the sort expression that is used when the data field is used to sort the data source by.</span></span></summary>
        <value><span data-ttu-id="d2553-235">データ フィールドを使用してデータ ソースを並べ替えるときに使用される並べ替え式。</span><span class="sxs-lookup"><span data-stu-id="d2553-235">The sort expression that is used when the data field is used to sort the data source by.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-236"><xref:System.Web.DynamicData.DynamicField.SortExpression%2A> プロパティは、<xref:System.Web.DynamicData.DynamicField.DataField%2A> プロパティを設定することによって、<xref:System.Web.DynamicData.DynamicField> オブジェクトに関連付けられている column オブジェクトの <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=nameWithType> プロパティの値を使用しようとします。</span><span class="sxs-lookup"><span data-stu-id="d2553-236">The <xref:System.Web.DynamicData.DynamicField.SortExpression%2A> property tries to use the value of the <xref:System.Web.DynamicData.MetaColumn.SortExpression%2A?displayProperty=nameWithType> property of the column object that is associated with the <xref:System.Web.DynamicData.DynamicField> object by setting the <xref:System.Web.DynamicData.DynamicField.DataField%2A> property.</span></span>

 <span data-ttu-id="d2553-237"><xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> メソッドは、<xref:System.Web.DynamicData.DynamicField.SortExpression%2A> プロパティが設定されている場合に、状態変更イベントを発生させるために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-237">The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the <xref:System.Web.DynamicData.DynamicField.SortExpression%2A> property is set.</span></span>

 <span data-ttu-id="d2553-238"><xref:System.Web.DynamicData.DynamicField.SortExpression%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-238">The value of the <xref:System.Web.DynamicData.DynamicField.SortExpression%2A> property is stored in view state.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="d2553-239"><see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトは、<see cref="T:System.Web.DynamicData.IDynamicDataSource" /> インターフェイスを実装するデータ ソース コントロールにバインドされていないデータ バインド コントロール内にあります。</span><span class="sxs-lookup"><span data-stu-id="d2553-239">The <see cref="T:System.Web.DynamicData.DynamicField" /> object is inside a data-bound control that is not bound to a data source control that implements the <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> interface.</span></span></exception>
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UIHint : string with get, set" Usage="System.Web.DynamicData.DynamicField.UIHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-240">データ フィールドを表示するときに使用するフィールド テンプレートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-240">Gets or sets the field template to use for displaying the data field.</span></span></summary>
        <value><span data-ttu-id="d2553-241">データ フィールドを表示するときに使用するフィールド テンプレートの名前。</span><span class="sxs-lookup"><span data-stu-id="d2553-241">The name of the field template to use for displaying the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d2553-242">データフィールドの UI を表示するために使用するフィールドテンプレートを指定するには、<xref:System.Web.DynamicData.DynamicField.UIHint%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="d2553-242">Use the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property to specify the field template to use to display the UI for a data field.</span></span> <span data-ttu-id="d2553-243">既定では、フィールドテンプレートはユーザーコントロールであり、その名前には、編集操作と挿入操作に使用されるフィールドテンプレートを識別するためのサフィックスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d2553-243">Field templates by default are user controls and their names contain a suffix to identify field templates that are used for edit operations and insert operations.</span></span> <span data-ttu-id="d2553-244">サフィックスはそれぞれ _edit、_insert ます。</span><span class="sxs-lookup"><span data-stu-id="d2553-244">The suffixes are _edit and _insert, respectively.</span></span> <span data-ttu-id="d2553-245"><xref:System.Web.DynamicData.DynamicField.UIHint%2A> プロパティに値を設定する場合は、サフィックスなしで名前を設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-245">When you set a value to the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property, you set the name without the suffixes.</span></span> <span data-ttu-id="d2553-246">動的データによって、データフィールドの現在のモードが識別され、適切なフィールドテンプレートが表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-246">Dynamic Data will identify the current mode of the data field and will render the correct field template.</span></span>

 <span data-ttu-id="d2553-247"><xref:System.Web.DynamicData.DynamicField.UIHint%2A> プロパティが設定されていない場合は、既定で動的データによってフィールドの種類に基づいてフィールドテンプレートが表示されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-247">If the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property is not set, Dynamic Data by default will render the field template based on the field type.</span></span> <span data-ttu-id="d2553-248">詳細については、「 [ASP.NET 動的データスキャフォールディング](https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2553-248">For more information, see [ASP.NET Dynamic Data Scaffolding](https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12).</span></span>

 <span data-ttu-id="d2553-249"><xref:System.Web.DynamicData.DynamicField.UIHint%2A> プロパティを使用して指定するフィールドテンプレートは、<xref:System.Web.DynamicData.DynamicField> クラスのこのインスタンスに固有です。</span><span class="sxs-lookup"><span data-stu-id="d2553-249">The field template that you specify using the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property is specific to this instance of the <xref:System.Web.DynamicData.DynamicField> class.</span></span> <span data-ttu-id="d2553-250">データモデルに <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> を適用することで、アプリケーション全体でデータフィールドによって使用されるフィールドテンプレートを変更することもできます。</span><span class="sxs-lookup"><span data-stu-id="d2553-250">You can also change the field template used by a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> to your data model.</span></span> <span data-ttu-id="d2553-251"><xref:System.Web.DynamicData.DynamicField.UIHint%2A> プロパティを設定すると、データモデルに適用されるメタデータが上書きされます。</span><span class="sxs-lookup"><span data-stu-id="d2553-251">Setting the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property overrides the metadata applied to the data model.</span></span> <span data-ttu-id="d2553-252">メタデータ属性の詳細については、「 [ASP.NET 動的データ](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d2553-252">For more information about metadata attributes, see [ASP.NET Dynamic Data](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>

 <span data-ttu-id="d2553-253"><xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> メソッドは、<xref:System.Web.DynamicData.DynamicField.UIHint%2A> プロパティが設定されている場合に、状態変更イベントを発生させるために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-253">The <xref:System.Web.UI.WebControls.DataControlField.OnFieldChanged%2A> method is called to raise a state change event when the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property is set.</span></span>

 <span data-ttu-id="d2553-254"><xref:System.Web.DynamicData.DynamicField.UIHint%2A> プロパティの値は、ビューステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="d2553-254">The value of the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property is stored in view state.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.DynamicField.DataField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.OnFieldChanged" />
        <related type="Article" href="https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512"><span data-ttu-id="d2553-255">ASP.NET 動的データの概要</span><span class="sxs-lookup"><span data-stu-id="d2553-255">ASP.NET Dynamic Data Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.DynamicData.DynamicField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-256">コントロールでクライアントの入力を検証するかどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="d2553-256">Gets or sets a value that specifies whether the control validates client input.</span></span></summary>
        <value><span data-ttu-id="d2553-257">コントロールがクライアント入力を検証する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d2553-257"><see langword="true" /> if the control validates client input; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicField.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.DynamicData.DynamicField.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d2553-258">この <see cref="P:System.Web.DynamicData.DynamicControl.ValidationGroup" /> オブジェクトが関連付けられている <see cref="T:System.Web.DynamicData.DynamicField" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="d2553-258">Gets the <see cref="P:System.Web.DynamicData.DynamicControl.ValidationGroup" /> object that this <see cref="T:System.Web.DynamicData.DynamicField" /> object is associated with.</span></span></summary>
        <value><span data-ttu-id="d2553-259">この検証コントロールが属する検証グループの名前。</span><span class="sxs-lookup"><span data-stu-id="d2553-259">The name of the validation group to which this validation control belongs.</span></span> <span data-ttu-id="d2553-260">既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="d2553-260">The default is an empty string (""), which indicates that this property is not set.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
