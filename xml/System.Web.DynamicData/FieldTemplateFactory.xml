<Type Name="FieldTemplateFactory" FullName="System.Web.DynamicData.FieldTemplateFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81a82755d54d24ae4b0f55856c4de13019729d9f" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73380274" /></Metadata><TypeSignature Language="C#" Value="public class FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FieldTemplateFactory extends System.Object implements class System.Web.DynamicData.IFieldTemplateFactory" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.FieldTemplateFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class FieldTemplateFactory&#xA;Implements IFieldTemplateFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class FieldTemplateFactory : System::Web::DynamicData::IFieldTemplateFactory" />
  <TypeSignature Language="F#" Value="type FieldTemplateFactory = class&#xA;    interface IFieldTemplateFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldTemplateFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="000e7-101">フィールド テンプレートを作成します。</span><span class="sxs-lookup"><span data-stu-id="000e7-101">Creates a field template.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="000e7-102">既定では、このクラスは <xref:System.Web.DynamicData.IFieldTemplateFactory> インターフェイスを実装し、<xref:System.Web.UI.UserControl> クラスを使用してフィールドテンプレートを作成します。</span><span class="sxs-lookup"><span data-stu-id="000e7-102">By default, this class implements the <xref:System.Web.DynamicData.IFieldTemplateFactory> interface, and uses the <xref:System.Web.UI.UserControl> class to create field templates.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.FieldTemplateUserControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12"><span data-ttu-id="000e7-103">ASP.NET 動的データスキャフォールディング</span><span class="sxs-lookup"><span data-stu-id="000e7-103">ASP.NET Dynamic Data Scaffolding</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FieldTemplateFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FieldTemplateFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="000e7-104"><see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> クラスのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="000e7-104">Initializes an instance of the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string BuildVirtualPath (string templateName, System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string BuildVirtualPath(string templateName, class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.BuildVirtualPath(System.String,System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildVirtualPath (templateName As String, column As MetaColumn, mode As DataBoundControlMode) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ BuildVirtualPath(System::String ^ templateName, System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="abstract member BuildVirtualPath : string * System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; string&#xA;override this.BuildVirtualPath : string * System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; string" Usage="fieldTemplateFactory.BuildVirtualPath (templateName, column, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templateName" Type="System.String" />
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="templateName"><span data-ttu-id="000e7-105">使用するテンプレートの名前。</span><span class="sxs-lookup"><span data-stu-id="000e7-105">The name of the template to use.</span></span></param>
        <param name="column"><span data-ttu-id="000e7-106">フィールド テンプレートが適用されるデータ列を指定します。</span><span class="sxs-lookup"><span data-stu-id="000e7-106">Specifies the data column which the field template applies to.</span></span></param>
        <param name="mode"><span data-ttu-id="000e7-107">フィールド テンプレートの表示モードを指定します。</span><span class="sxs-lookup"><span data-stu-id="000e7-107">Specifies the display mode of the field template.</span></span></param>
        <summary><span data-ttu-id="000e7-108">フィールド テンプレートの名前とモードに基づいて、フィールド テンプレートの仮想パスを作成します。</span><span class="sxs-lookup"><span data-stu-id="000e7-108">Builds the virtual path to a field template based on the field template name and the mode.</span></span></summary>
        <returns><span data-ttu-id="000e7-109">フィールド テンプレートの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="000e7-109">The virtual path to the field template.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="000e7-110">既定では、このメソッドは、テンプレート名を使用してフィールドテンプレートへの仮想パスを構築し、モードを追加して、.ascx 拡張子を追加します。</span><span class="sxs-lookup"><span data-stu-id="000e7-110">By default, this method builds the virtual path to a field template by using the template name, appending the mode and then adding a .ascx extension.</span></span> <span data-ttu-id="000e7-111">たとえば、`templateName` が MyFieldTemplate で `mode` が Edit の場合、テンプレートフォルダーの仮想パスで指定されたフォルダー内の仮想パスは MyFieldTemplate_Edit になります。</span><span class="sxs-lookup"><span data-stu-id="000e7-111">For example, if `templateName` is MyFieldTemplate and `mode` is Edit, then the virtual path will be MyFieldTemplate_Edit.ascx, in the folder specified by the Template folder virtual path.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="000e7-112"><paramref name="templateName" /> が null です。</span><span class="sxs-lookup"><span data-stu-id="000e7-112"><paramref name="templateName" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFieldTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.DynamicData.IFieldTemplate CreateFieldTemplate(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateFieldTemplate (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As IFieldTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::DynamicData::IFieldTemplate ^ CreateFieldTemplate(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate&#xA;override this.CreateFieldTemplate : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; System.Web.DynamicData.IFieldTemplate" Usage="fieldTemplateFactory.CreateFieldTemplate (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="000e7-113">フィールド テンプレートが適用されるデータ列を指定します。</span><span class="sxs-lookup"><span data-stu-id="000e7-113">Specifies the data column which the field template applies to.</span></span></param>
        <param name="mode"><span data-ttu-id="000e7-114">フィールド テンプレートの表示モードを指定します。</span><span class="sxs-lookup"><span data-stu-id="000e7-114">Specifies the display mode of the field template.</span></span></param>
        <param name="uiHint"><span data-ttu-id="000e7-115">使用するフィールド テンプレートを指定します。</span><span class="sxs-lookup"><span data-stu-id="000e7-115">Specifies the field template to use.</span></span></param>
        <summary><span data-ttu-id="000e7-116"><see cref="T:System.Web.DynamicData.MetaColumn" /> クラス、<see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> クラスおよび <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> プロパティを使用して、フィールド テンプレートのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="000e7-116">Creates an instance of a field template using the <see cref="T:System.Web.DynamicData.MetaColumn" /> class, the <see cref="T:System.Web.UI.WebControls.DataBoundControlMode" /> class and <see cref="P:System.Web.DynamicData.MetaColumn.UIHint" /> property.</span></span></summary>
        <returns><span data-ttu-id="000e7-117"><see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> クラスが実装するインターフェイスのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="000e7-117">An instance of the interface that the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> class implements.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldTemplateVirtualPath">
      <MemberSignature Language="C#" Value="public virtual string GetFieldTemplateVirtualPath (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFieldTemplateVirtualPath(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.GetFieldTemplateVirtualPath(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFieldTemplateVirtualPath (column As MetaColumn, mode As DataBoundControlMode, uiHint As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFieldTemplateVirtualPath(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode, System::String ^ uiHint);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldTemplateVirtualPath : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; string&#xA;override this.GetFieldTemplateVirtualPath : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode * string -&gt; string" Usage="fieldTemplateFactory.GetFieldTemplateVirtualPath (column, mode, uiHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
        <Parameter Name="uiHint" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="000e7-118">フィールド テンプレートが適用されるデータ列を指定します。</span><span class="sxs-lookup"><span data-stu-id="000e7-118">Specifies the data column which the field template applies to.</span></span></param>
        <param name="mode"><span data-ttu-id="000e7-119">フィールド テンプレートの表示モード (読み取り専用、編集、または挿入) を指定します。</span><span class="sxs-lookup"><span data-stu-id="000e7-119">Specifies the display mode of the field template-Read Only, Edit, or Insert.</span></span></param>
        <param name="uiHint"><span data-ttu-id="000e7-120">使用するフィールド テンプレートを指定します。</span><span class="sxs-lookup"><span data-stu-id="000e7-120">Specifies the field template to use.</span></span> <span data-ttu-id="000e7-121">このパラメーターは、フィールド テンプレートの検索に影響します。</span><span class="sxs-lookup"><span data-stu-id="000e7-121">This parameter affects the field template look up.</span></span></param>
        <summary><span data-ttu-id="000e7-122">フィールド テンプレートの仮想パスを調べます。</span><span class="sxs-lookup"><span data-stu-id="000e7-122">Determines the virtual path of a field template.</span></span></summary>
        <returns><span data-ttu-id="000e7-123">フィールド テンプレートの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="000e7-123">The virtual path of the field template.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="000e7-124">動的データフィールドテンプレートは DynamicData/FieldTemplates/フォルダーに作成されますが、フィールドテンプレート用の新しいフォルダーを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="000e7-124">Dynamic Data field templates are created in the DynamicData/FieldTemplates/ folder but you can create a new folder for your field templates.</span></span> <span data-ttu-id="000e7-125">このメソッドは、指定されたパラメーターを使用して、フィールドテンプレートを含むフォルダーの仮想パスを決定します。</span><span class="sxs-lookup"><span data-stu-id="000e7-125">This method determines the virtual path for the folder that contains the field template using the specified parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (System.Web.DynamicData.MetaModel model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class System.Web.DynamicData.MetaModel model) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (model As MetaModel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::Web::DynamicData::MetaModel ^ model);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : System.Web.DynamicData.MetaModel -&gt; unit&#xA;override this.Initialize : System.Web.DynamicData.MetaModel -&gt; unit" Usage="fieldTemplateFactory.Initialize model" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="System.Web.DynamicData.MetaModel" />
      </Parameters>
      <Docs>
        <param name="model"><span data-ttu-id="000e7-126"><see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> に関連付けるデータ モデルを指定します。</span><span class="sxs-lookup"><span data-stu-id="000e7-126">Specifies the data model to associate with the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</span></span></param>
        <summary><span data-ttu-id="000e7-127"><see cref="T:System.Web.DynamicData.MetaModel" /> を <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> に関連付けます。</span><span class="sxs-lookup"><span data-stu-id="000e7-127">Associates a <see cref="T:System.Web.DynamicData.MetaModel" /> with a <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.FieldTemplateFactory.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.FieldTemplateFactory.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="000e7-128"><see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> クラスに関連付けられた <see cref="T:System.Web.DynamicData.MetaModel" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="000e7-128">Gets or sets the <see cref="T:System.Web.DynamicData.MetaModel" /> that is associated with the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> class.</span></span></summary>
        <value><span data-ttu-id="000e7-129"><see cref="T:System.Web.DynamicData.FieldTemplateFactory" /> に関連付けられたモデル。</span><span class="sxs-lookup"><span data-stu-id="000e7-129">The model that is associated with the <see cref="T:System.Web.DynamicData.FieldTemplateFactory" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="000e7-130"><xref:System.Web.DynamicData.MetaModel> クラスは、データベースオブジェクトとドメインオブジェクトの間のマッピングを表す抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="000e7-130">The <xref:System.Web.DynamicData.MetaModel> class is an abstract class that represents the mapping between a database and domain objects.</span></span> <span data-ttu-id="000e7-131">動的データには、モデルを表す一連のクラス (データモデル) が用意されています。</span><span class="sxs-lookup"><span data-stu-id="000e7-131">Dynamic Data provides a set of classes (the data model) that represent the model.</span></span> <span data-ttu-id="000e7-132">クラスは、オブジェクトリレーショナルデザイナー (O/R デザイナー) を使用して生成されます。</span><span class="sxs-lookup"><span data-stu-id="000e7-132">The classes are generated through the Object Relational Designer (O/R Designer).</span></span> <span data-ttu-id="000e7-133">LINQ to SQL クラステンプレートを使用して、これらのクラスを生成できます。</span><span class="sxs-lookup"><span data-stu-id="000e7-133">You can use the LINQ to SQL Classes template to generate these classes.</span></span> <span data-ttu-id="000e7-134">このプロパティは、<xref:System.Web.DynamicData.FieldTemplateFactory> クラスに関連付けられたデータモデルを取得および設定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="000e7-134">This property is used to get and set the data model associated with the <xref:System.Web.DynamicData.FieldTemplateFactory> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreprocessMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataBoundControlMode PreprocessMode (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.UI.WebControls.DataBoundControlMode PreprocessMode(class System.Web.DynamicData.MetaColumn column, valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.FieldTemplateFactory.PreprocessMode(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PreprocessMode (column As MetaColumn, mode As DataBoundControlMode) As DataBoundControlMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::DataBoundControlMode PreprocessMode(System::Web::DynamicData::MetaColumn ^ column, System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="abstract member PreprocessMode : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.UI.WebControls.DataBoundControlMode&#xA;override this.PreprocessMode : System.Web.DynamicData.MetaColumn * System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.UI.WebControls.DataBoundControlMode" Usage="fieldTemplateFactory.PreprocessMode (column, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" />
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="column"><span data-ttu-id="000e7-135">フィールド テンプレートを必要とする列。</span><span class="sxs-lookup"><span data-stu-id="000e7-135">The column for which the field template is needed.</span></span></param>
        <param name="mode"><span data-ttu-id="000e7-136">変更後のモード (読み取り専用、編集、または挿入)。</span><span class="sxs-lookup"><span data-stu-id="000e7-136">The mode (Read Only, Edit, or Insert) to change to.</span></span></param>
        <summary><span data-ttu-id="000e7-137">データ列のモードを変更します。</span><span class="sxs-lookup"><span data-stu-id="000e7-137">Changes the mode of the data column.</span></span></summary>
        <returns><span data-ttu-id="000e7-138">列のレンダリングのモード。</span><span class="sxs-lookup"><span data-stu-id="000e7-138">The mode that a column renders.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="000e7-139">動的データは、読み取り専用、挿入、または編集モードでデータをレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="000e7-139">Dynamic Data renders data in Read Only, Insert, or Edits modes.</span></span> <span data-ttu-id="000e7-140">このメソッドは、列に表示されるモードを制御します。</span><span class="sxs-lookup"><span data-stu-id="000e7-140">This method controls which mode is rendered in the column.</span></span> <span data-ttu-id="000e7-141">たとえば、編集モード要求は、列が主キー列である場合、読み取り専用に変更されます。</span><span class="sxs-lookup"><span data-stu-id="000e7-141">For example, an Edit mode request changes to Read Only if the column is a primary key column.</span></span> <span data-ttu-id="000e7-142">自動的に生成された列と主キーの一部である外部キーは編集できません。</span><span class="sxs-lookup"><span data-stu-id="000e7-142">Columns that are automatically generated and foreign keys that are part of the primary key cannot be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TemplateFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string TemplateFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TemplateFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property TemplateFolderVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TemplateFolderVirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TemplateFolderVirtualPath : string with get, set" Usage="System.Web.DynamicData.FieldTemplateFactory.TemplateFolderVirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="000e7-143">フィールド テンプレートを作成するフォルダーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="000e7-143">Gets or sets the folder in which to create a field template.</span></span></summary>
        <value><span data-ttu-id="000e7-144">フィールド テンプレートを格納しているフォルダーのパス。</span><span class="sxs-lookup"><span data-stu-id="000e7-144">The path to the folder that contains the field templates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="000e7-145">フィールドテンプレートが作成される既定のフォルダーは、/DynamicData/FieldTemplates/. です。</span><span class="sxs-lookup"><span data-stu-id="000e7-145">The default folder where field templates are created is the /DynamicData/FieldTemplates/.</span></span> <span data-ttu-id="000e7-146">このフォルダーには、作成する既定のフィールドテンプレートとカスタムフィールドテンプレートが含まれています。</span><span class="sxs-lookup"><span data-stu-id="000e7-146">This folder contains the default field templates and custom field templates that you create.</span></span> <span data-ttu-id="000e7-147">フィールドテンプレート用に別のフォルダーを作成して指定した場合、動的データによって、指定したフォルダーにフィールドテンプレートが作成されます。</span><span class="sxs-lookup"><span data-stu-id="000e7-147">If you create and specify a different folder for the field templates, Dynamic Data will create the field templates in the folder you specify.</span></span> <span data-ttu-id="000e7-148">フィールドテンプレートの詳細については、「 [ASP.NET 動的データスキャフォールディング](https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="000e7-148">For more information about field templates, see [ASP.NET Dynamic Data Scaffolding](https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
