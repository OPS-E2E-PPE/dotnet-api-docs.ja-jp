<Type Name="DynamicControl" FullName="System.Web.DynamicData.DynamicControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c93e6938e52eeeb77b1c00de1016cb04b84427e5" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77220542" /></Metadata><TypeSignature Language="C#" Value="public class DynamicControl : System.Web.UI.Control, System.Web.DynamicData.IFieldFormattingOptions, System.Web.DynamicData.IFieldTemplateHost, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicControl extends System.Web.UI.Control implements class System.Web.DynamicData.IFieldFormattingOptions, class System.Web.DynamicData.IFieldTemplateHost, class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.DynamicControl" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicControl&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IFieldFormattingOptions, IFieldTemplateHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicControl : System::Web::UI::Control, System::Web::DynamicData::IFieldFormattingOptions, System::Web::DynamicData::IFieldTemplateHost, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type DynamicControl = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor&#xA;    interface IFieldTemplateHost&#xA;    interface IFieldFormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldTemplateHost</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicControl), "DynamicControl.bmp")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicControl), "DynamicControl.ico")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="53ad1-101">ASP.NET Dynamic Data 機能を使用して、テンプレート宣言されたデータ バインド コントロール内のフィールドに対して定義されたコンテンツを表示します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-101">Displays the content that is defined for the field in templated data-bound controls, using ASP.NET Dynamic Data features.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-102">このトピックの内容:</span><span class="sxs-lookup"><span data-stu-id="53ad1-102">In this topic:</span></span>

-   [<span data-ttu-id="53ad1-103">はじめに</span><span class="sxs-lookup"><span data-stu-id="53ad1-103">Introduction</span></span>](#introduction)

-   [<span data-ttu-id="53ad1-104">宣言型の構文</span><span class="sxs-lookup"><span data-stu-id="53ad1-104">Declarative Syntax</span></span>](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a><span data-ttu-id="53ad1-105">はじめに</span><span class="sxs-lookup"><span data-stu-id="53ad1-105">Introduction</span></span>
 <span data-ttu-id="53ad1-106"><xref:System.Web.DynamicData.DynamicControl> コントロールは、<xref:System.Web.UI.WebControls.FormView> や <xref:System.Web.UI.WebControls.ListView>などの、テンプレート化されたデータバインドコントロールによって、カスタムページの ASP.NET 動的データ機能を使用するデータフィールドを表示するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-106">The <xref:System.Web.DynamicData.DynamicControl> control is used by templated data-bound controls, such as <xref:System.Web.UI.WebControls.FormView> or <xref:System.Web.UI.WebControls.ListView>, to display a data field that uses ASP.NET Dynamic Data features in a custom page.</span></span> <span data-ttu-id="53ad1-107">また、<xref:System.Web.UI.WebControls.GridView> または <xref:System.Web.UI.WebControls.DetailsView> コントロールの <xref:System.Web.UI.WebControls.TemplateField> フィールドで <xref:System.Web.DynamicData.DynamicControl> コントロールを使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-107">You can also use a <xref:System.Web.DynamicData.DynamicControl> control in a <xref:System.Web.UI.WebControls.TemplateField> field of a <xref:System.Web.UI.WebControls.GridView> or a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>

 <span data-ttu-id="53ad1-108"><xref:System.Web.DynamicData.DynamicControl> コントロールは、<xref:System.Web.DynamicData.DynamicField> フィールドと同様の機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-108">The <xref:System.Web.DynamicData.DynamicControl> control provides functionality that is similar to that of the <xref:System.Web.DynamicData.DynamicField> field.</span></span> <span data-ttu-id="53ad1-109">ただし、<xref:System.Web.DynamicData.DynamicControl> コントロールはテンプレート内でのみ使用されるため、データの表示方法をより柔軟に制御できます。これは、フィールドの周囲に他の HTML 要素を追加できるためです。</span><span class="sxs-lookup"><span data-stu-id="53ad1-109">However, because the <xref:System.Web.DynamicData.DynamicControl> control is only used inside templates, it gives you more flexibility in controlling how the data is displayed since you can add other HTML elements around the field.</span></span> <span data-ttu-id="53ad1-110"><xref:System.Web.DynamicData.DynamicControl> コントロールを使用する場合は、次の動的データの機能を利用できます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-110">When you use a <xref:System.Web.DynamicData.DynamicControl> control, you can take advantage of the following Dynamic Data features:</span></span>

-   <span data-ttu-id="53ad1-111">データ型に基づいてフィールドテンプレートを使用して、フィールドの適切なコントロールを自動的に表示します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-111">Automatically rendering the proper control for a field by using field templates, based on the data type.</span></span> <span data-ttu-id="53ad1-112">フィールドテンプレートは、アプリケーション全体に対してグローバルに変更できます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-112">The field templates can be globally modified for the entire application.</span></span>

-   <span data-ttu-id="53ad1-113">データベーススキーマに基づいて組み込みのデータ検証を提供します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-113">Providing built-in data validation based on the database schema.</span></span> <span data-ttu-id="53ad1-114">データモデルをカスタマイズして、検証の種類を追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-114">You can also add validation types by customizing the data model.</span></span>

-   <span data-ttu-id="53ad1-115">データモデルの属性を使用するか、<xref:System.Web.DynamicData.DynamicField.UIHint%2A> プロパティを使用して、個々のフィールドのデータ表示をカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="53ad1-115">Customizing data rendering for individual fields by using attributes in the data model or by using the <xref:System.Web.DynamicData.DynamicField.UIHint%2A> property.</span></span>

 <span data-ttu-id="53ad1-116"><xref:System.Web.DynamicData.DynamicControl> コントロールに表示するフィールドを指定するには、<xref:System.Web.DynamicData.DynamicControl.DataField%2A> プロパティをフィールド名に設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-116">To specify the field to display in a <xref:System.Web.DynamicData.DynamicControl> control, set the <xref:System.Web.DynamicData.DynamicControl.DataField%2A> property to the field name.</span></span> <span data-ttu-id="53ad1-117">カスタム書式指定文字列をフィールド値に適用するには、<xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-117">You can apply a custom formatting string to the field value by setting the <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> property.</span></span> <span data-ttu-id="53ad1-118">既定では、書式設定文字列は、データバインドコントロールが読み取り専用モードの場合にのみ、フィールド値に適用されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-118">By default, the formatting string is applied to field values only when the data-bound control is in read-only mode.</span></span> <span data-ttu-id="53ad1-119">データバインドコントロールが編集モードのときに表示される値に書式設定文字列を適用するには、<xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-119">To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> property to `true`.</span></span> <span data-ttu-id="53ad1-120">フィールド値が `null`場合は、<xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> プロパティを設定することによって、カスタムキャプションを表示できます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-120">If a field value is `null`, you can display a custom caption by setting the <xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> property.</span></span> <span data-ttu-id="53ad1-121">また、<xref:System.Web.DynamicData.DynamicControl> コントロールは、<xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A> プロパティを `true`に設定することによって、空の文字列 ("") フィールド値を null 値に自動的に変換することもできます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-121">The <xref:System.Web.DynamicData.DynamicControl> control can also automatically convert empty string ("") field values to null values by setting the <xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A> property to `true`.</span></span>

 <span data-ttu-id="53ad1-122"><xref:System.Web.DynamicData.DynamicControl> コントロールは、さまざまな表示モードをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="53ad1-122">The <xref:System.Web.DynamicData.DynamicControl> control supports different display modes.</span></span> <span data-ttu-id="53ad1-123"><xref:System.Web.DynamicData.DynamicControl> コントロールを表示するモードを指定するには、<xref:System.Web.DynamicData.DynamicControl.Mode%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-123">To specify the mode in which to display the <xref:System.Web.DynamicData.DynamicControl> control, set the <xref:System.Web.DynamicData.DynamicControl.Mode%2A> property.</span></span> <span data-ttu-id="53ad1-124">次の表は、それぞれのモードを示しています。</span><span class="sxs-lookup"><span data-stu-id="53ad1-124">The following table shows the different modes.</span></span>

 <span data-ttu-id="53ad1-125">表示モードの <xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly> ます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-125"><xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly> for display mode.</span></span> <span data-ttu-id="53ad1-126">これにより、ユーザーはレコードまたはデータフィールドの値を変更できなくなります。</span><span class="sxs-lookup"><span data-stu-id="53ad1-126">This prevents the user from modifying the values of a record or a data field.</span></span> <span data-ttu-id="53ad1-127">任意のテンプレートで使用できます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-127">It can be used in any of the templates.</span></span>

 <span data-ttu-id="53ad1-128">編集モードの <xref:System.Web.UI.WebControls.DataBoundControlMode.Edit> ます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-128"><xref:System.Web.UI.WebControls.DataBoundControlMode.Edit> for edit mode.</span></span> <span data-ttu-id="53ad1-129">これにより、ユーザーは既存のレコードの値を更新できます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-129">This enables users to update the values of an existing record.</span></span> <span data-ttu-id="53ad1-130">これは、編集テンプレート (通常は `EditItemTemplate`という名前) で使用されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-130">It is used in the edit template (typically named `EditItemTemplate`).</span></span>

 <span data-ttu-id="53ad1-131">挿入モードの <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>。</span><span class="sxs-lookup"><span data-stu-id="53ad1-131"><xref:System.Web.UI.WebControls.DataBoundControlMode.Insert> for insert mode.</span></span> <span data-ttu-id="53ad1-132">これにより、ユーザーは新しいレコードの値を入力できます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-132">This enables users to enter values for a new record.</span></span> <span data-ttu-id="53ad1-133">これは、挿入テンプレート (通常は `InsertItemTemplate`という名前) で使用されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-133">It is used in the insert template (typically named `InsertItemTemplate`).</span></span>

 <span data-ttu-id="53ad1-134">データバインドコントロールの <xref:System.Web.DynamicData.DynamicControl> コントロールを非表示にするには、<xref:System.Web.UI.Control.Visible%2A> プロパティを `false`に設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-134">You can hide a <xref:System.Web.DynamicData.DynamicControl> control in a data-bound control by setting the <xref:System.Web.UI.Control.Visible%2A> property to `false`.</span></span>

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a><span data-ttu-id="53ad1-135">宣言型の構文</span><span class="sxs-lookup"><span data-stu-id="53ad1-135">Declarative Syntax</span></span>

```
<asp:DynamicControl
    ApplyFormatInEditMode="True|False"
    ConvertEmptyStringToNull="True|False"
    CssClass="string"
    DataField="string"
    DataFormatString="string"
    EnableViewState="True|False"
    HtmlEncode="True|False"
    ID="string"
    Mode="Edit|Insert|ReadOnly"
    NullDisplayText="string"
    OnDataBinding="DataBinding event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    runat="server"
    UIHint="string"
    ValidationGroup="string"
    Visible="True|False"
>
</asp:DynamicControl>
```



## Examples
 <span data-ttu-id="53ad1-136">この機能の実行時のコード例については、「 [run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="53ad1-136">See a run-time code example of this feature: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl).</span></span>

 <span data-ttu-id="53ad1-137">次の例では、<xref:System.Web.UI.WebControls.ListView> コントロールの <xref:System.Web.DynamicData.DynamicControl> コントロールを使用して、データベーステーブルの値を表示、挿入、削除、および編集する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-137">The following example demonstrates how to use the <xref:System.Web.DynamicData.DynamicControl> control in a <xref:System.Web.UI.WebControls.ListView> control to display, insert, delete and edit values from a database table.</span></span> <span data-ttu-id="53ad1-138">挿入操作を機能させるために、`rowguid` 列および `ModifiedDate` 列の <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> プロパティは `true`に設定されることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="53ad1-138">It is important to notice that in order to make the insert operation to work, the <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> property of the `rowguid` and `ModifiedDate` columns are set to `true`.</span></span>

 [!code-aspx-csharp[System.Web.DynamicData.DynamicControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl/VB/Default.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
    <altmember cref="T:System.Web.DynamicData.DynamicField" />
    <related type="Article" href="https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512"><span data-ttu-id="53ad1-139">ASP.NET 動的データの概要</span><span class="sxs-lookup"><span data-stu-id="53ad1-139">ASP.NET Dynamic Data Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12"><span data-ttu-id="53ad1-140">ASP.NET 動的データスキャフォールディング</span><span class="sxs-lookup"><span data-stu-id="53ad1-140">ASP.NET Dynamic Data Scaffolding</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="53ad1-141"><see cref="T:System.Web.DynamicData.DynamicControl" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-141">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicControl" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="53ad1-142"><see cref="T:System.Web.DynamicData.DynamicControl" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-142">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicControl" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicControl (System.Web.UI.WebControls.DataBoundControlMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.WebControls.DataBoundControlMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mode As DataBoundControlMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicControl(System::Web::UI::WebControls::DataBoundControlMode mode);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.DynamicControl : System.Web.UI.WebControls.DataBoundControlMode -&gt; System.Web.DynamicData.DynamicControl" Usage="new System.Web.DynamicData.DynamicControl mode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="53ad1-143">コントロールのモードを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="53ad1-143">One of the enumeration values that specifies the mode of the control.</span></span></param>
        <summary><span data-ttu-id="53ad1-144">指定したモードで、<see cref="T:System.Web.DynamicData.DynamicControl" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-144">Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicControl" /> class with the specified mode.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-145">フィールドが編集モードである場合に、<see cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" /> プロパティで指定した書式指定文字列をフィールド値に適用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-145">Gets or sets a value that indicates whether the formatting string specified by the <see cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" /> property is applied to field values when the field is in edit mode.</span></span></summary>
        <value><span data-ttu-id="53ad1-146">書式指定文字列が適用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="53ad1-146"><see langword="true" /> if the formatting string is applied; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="53ad1-147">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="53ad1-147">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-148"><xref:System.Web.DynamicData.DynamicControl> コントロールには、ユーザーがフィールドの読み取り、編集、または挿入を行うことができるさまざまな表示モードがあります。</span><span class="sxs-lookup"><span data-stu-id="53ad1-148">The <xref:System.Web.DynamicData.DynamicControl> control has different display modes that allow the user to read, edit, or insert a field.</span></span> <span data-ttu-id="53ad1-149">既定では、<xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> プロパティによって指定された書式設定文字列は、<xref:System.Web.DynamicData.DynamicControl> コントロールが読み取り専用モードの場合にのみ、フィールド値に適用されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-149">By default, the formatting string specified by the <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> property is applied to a field value only when the <xref:System.Web.DynamicData.DynamicControl> control is in read-only mode.</span></span> <span data-ttu-id="53ad1-150">データバインドコントロールが編集モードのときに表示される値に書式設定文字列を適用するには、<xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-150">To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> property to `true`.</span></span>

> [!NOTE]
>  <span data-ttu-id="53ad1-151"><xref:System.Web.DynamicData.DynamicControl> コントロールは、データソースでフィールドが更新されたときに、書式設定を自動的に削除しません。</span><span class="sxs-lookup"><span data-stu-id="53ad1-151">The <xref:System.Web.DynamicData.DynamicControl> control does not automatically remove the formatting when the field is updated in the data source.</span></span> <span data-ttu-id="53ad1-152">格納されている値の一部として書式設定が不要な場合は、プログラムによって書式設定を削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="53ad1-152">If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.Mode" />
      </Docs>
    </Member>
    <Member MemberName="Column">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn Column { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn Column" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.Column" />
      <MemberSignature Language="VB.NET" Value="Public Property Column As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaColumn ^ Column { System::Web::DynamicData::MetaColumn ^ get(); void set(System::Web::DynamicData::MetaColumn ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Column : System.Web.DynamicData.MetaColumn with get, set" Usage="System.Web.DynamicData.DynamicControl.Column" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-153">コントロールに関連付ける列オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-153">Gets or sets the column object that is associated with the control.</span></span></summary>
        <value><span data-ttu-id="53ad1-154">コントロールに関連付けられている列オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53ad1-154">The column object that is associated with the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-155"><xref:System.Web.DynamicData.DynamicControl.Column%2A> プロパティを使用して、特定の列に関するメタデータ情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-155">You can use the <xref:System.Web.DynamicData.DynamicControl.Column%2A> property to obtain metadata information about a specific column.</span></span> <span data-ttu-id="53ad1-156"><xref:System.Web.DynamicData.DynamicControl.Column%2A> プロパティは、<xref:System.Web.DynamicData.DynamicControl.DataField%2A> プロパティに指定されたフィールド名に基づいて、<xref:System.Web.DynamicData.DynamicControl> コントロールによって自動的に設定されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-156">The <xref:System.Web.DynamicData.DynamicControl.Column%2A> property is automatically set by the <xref:System.Web.DynamicData.DynamicControl> control based on the field name provided for the <xref:System.Web.DynamicData.DynamicControl.DataField%2A> property.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataField" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.Table" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-157">データ ソースのデータ フィールドを更新するときに、空の文字列値 ("") を null 値に自動的に変換するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-157">Gets or sets a value that indicates whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</span></span></summary>
        <value><span data-ttu-id="53ad1-158">空の文字列値を null 値に自動的に変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="53ad1-158"><see langword="true" /> if empty string values are automatically converted to null values; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="53ad1-159">既定では、 <see langword="false" />です。</span><span class="sxs-lookup"><span data-stu-id="53ad1-159">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-160">データソースコントロールの <xref:System.Web.UI.WebControls.Parameter> オブジェクトには、<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>という名前のプロパティもあります。</span><span class="sxs-lookup"><span data-stu-id="53ad1-160">The <xref:System.Web.UI.WebControls.Parameter> object of the data source control also has a property named <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="53ad1-161">このプロパティは、同じ関数を実行します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-161">This property performs the same function.</span></span> <span data-ttu-id="53ad1-162">両方のプロパティが適切に設定されていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-162">Make sure that both properties are set appropriately.</span></span>

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms366709(v=vs.100)"><span data-ttu-id="53ad1-163">データソースコントロールを使用した Null データベース値の処理</span><span class="sxs-lookup"><span data-stu-id="53ad1-163">Handling Null Database Values Using Data Source Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public virtual string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CssClass : string with get, set" Usage="System.Web.DynamicData.DynamicControl.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-164"><see cref="T:System.Web.DynamicData.DynamicControl" /> コントロールのコンテンツの表示スタイルを指定するカスケード スタイル シート (CSS: Cascading Style Sheet) クラスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-164">Gets or sets the Cascading Style Sheet (CSS) class that specifies the display styles for the <see cref="T:System.Web.DynamicData.DynamicControl" /> control content.</span></span></summary>
        <value><span data-ttu-id="53ad1-165">CSS クラスの名前。</span><span class="sxs-lookup"><span data-stu-id="53ad1-165">The name of the CSS class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.DynamicData.DynamicControl.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-166"><see cref="T:System.Web.DynamicData.DynamicControl" /> コントロールがバインドされるデータ フィールドの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-166">Gets or sets the name of the data field that the <see cref="T:System.Web.DynamicData.DynamicControl" /> control is bound to.</span></span></summary>
        <value><span data-ttu-id="53ad1-167"><see cref="T:System.Web.DynamicData.DynamicControl" /> コントロールがバインドされるデータ フィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="53ad1-167">The name of the data field to bind the <see cref="T:System.Web.DynamicData.DynamicControl" /> control to.</span></span> <span data-ttu-id="53ad1-168">既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-168">The default is an empty string (""), which indicates that this property is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-169"><xref:System.Web.DynamicData.DynamicControl> コントロールにバインドするデータフィールドを指定するには、<xref:System.Web.DynamicData.DynamicControl.DataField%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-169">Use the <xref:System.Web.DynamicData.DynamicControl.DataField%2A> property to specify the data field to bind to the <xref:System.Web.DynamicData.DynamicControl> control.</span></span> <span data-ttu-id="53ad1-170">データフィールドは、列名、または外部キー列のリレーションシップ名にすることができます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-170">The data field can be the column name or, for foreign key columns, the relationship name.</span></span>

 <span data-ttu-id="53ad1-171">既定では、指定されたデータフィールドは、フィールドのデータ型に関連付けられているフィールドテンプレートを使用して、<xref:System.Web.DynamicData.DynamicControl> コントロールによって表示されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-171">By default, the specified data field is displayed by the <xref:System.Web.DynamicData.DynamicControl> control using the field template that is associated with the field data type.</span></span> <span data-ttu-id="53ad1-172">[データ] フィールドに表示されるフィールドテンプレートを変更するには、[<xref:System.Web.DynamicData.DynamicControl.UIHint%2A>] プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-172">You can change the field template that is rendered for the data field by setting the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property.</span></span> <span data-ttu-id="53ad1-173">また、<xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> プロパティを設定して、表示されるテキストの書式を設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-173">You can also format the displayed text by setting the <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> property.</span></span>

 <span data-ttu-id="53ad1-174">**メモ**データフィールドの表示と動作をグローバルに変更する場合は、<xref:System.Web.DynamicData.DynamicControl> コントロールの特定のインスタンスで属性を設定するのではなく、データモデルに属性を適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="53ad1-174">**Note** If you want to change the display and behavior of a data field globally, you must apply attributes to your data model instead of setting this in a particular instance of the <xref:System.Web.DynamicData.DynamicControl> control.</span></span> <span data-ttu-id="53ad1-175">詳細については、「 [ASP.NET 動的データ](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="53ad1-175">For more information, see [ASP.NET Dynamic Data](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>



## Examples
 <span data-ttu-id="53ad1-176">次の例では、<xref:System.Web.DynamicData.DynamicControl.DataField%2A> プロパティを使用して、<xref:System.Web.DynamicData.DynamicControl> コントロールに表示するフィールドを指定する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-176">The following example demonstrates how to use the <xref:System.Web.DynamicData.DynamicControl.DataField%2A> property to specify which field to display in a <xref:System.Web.DynamicData.DynamicControl> control.</span></span>

 [!code-aspx-csharp[System.Web.DynamicData.DynamicControl.DataField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.DataField/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicControl.DataField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.DataField/VB/Default.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.NullDisplayText" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.UIHint" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.DynamicData.DynamicControl.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-177">フィールドの値の表示形式を指定する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-177">Gets or sets a string that specifies the display format for the value of the field.</span></span></summary>
        <value><span data-ttu-id="53ad1-178">フィールドの値の表示形式を指定する書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="53ad1-178">A formatting string that specifies the display format for the value of the field.</span></span> <span data-ttu-id="53ad1-179">既定値は空の文字列 ("") です。この値は、フィールド値に適用される特定の書式が設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-179">The default is an empty string (""), which indicates that no special formatting is applied to the field value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-180"><xref:System.Web.DynamicData.DynamicControl> コントロールに表示される値のカスタム表示形式を指定するには、<xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-180">Use the <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> property to specify a custom display format for the values displayed in the <xref:System.Web.DynamicData.DynamicControl> control.</span></span> <span data-ttu-id="53ad1-181"><xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> プロパティが設定されていない場合、フィールド値は特殊な書式設定なしで表示されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-181">If the <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> property is not set, the field value is displayed without any special formatting.</span></span>

 <span data-ttu-id="53ad1-182">既定では、書式設定文字列は、<xref:System.Web.DynamicData.DynamicControl.Mode%2A> プロパティが <xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly>に設定されている場合にのみ、フィールド値に適用されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-182">By default, the formatting string is applied to the field value only when the <xref:System.Web.DynamicData.DynamicControl.Mode%2A> property is set to <xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly>.</span></span> <span data-ttu-id="53ad1-183">編集モード中に書式設定文字列をフィールド値に適用するには、<xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-183">To apply the formatting string to the field value while in edit mode, set the <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> property to `true`.</span></span>

 <span data-ttu-id="53ad1-184"><xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> プロパティを使用して指定する表示形式は、<xref:System.Web.DynamicData.DynamicControl> コントロールのこのインスタンスに固有です。</span><span class="sxs-lookup"><span data-stu-id="53ad1-184">The display format that you specify using the <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> property is specific to this instance of the <xref:System.Web.DynamicData.DynamicControl> control.</span></span> <span data-ttu-id="53ad1-185">データモデルに <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> を適用し、コンストラクターで <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> 名前付きパラメーターを設定することによって、アプリケーション全体でデータフィールドの表示形式を変更することもできます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-185">You can also change the display format for a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> to your data model and setting the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> named parameter in the constructor.</span></span> <span data-ttu-id="53ad1-186">詳細については、「 [ASP.NET 動的データ](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="53ad1-186">For more information, see [ASP.NET Dynamic Data](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataField" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="53ad1-187">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="53ad1-187">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FieldTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control FieldTemplate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control FieldTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.FieldTemplate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FieldTemplate As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ FieldTemplate { System::Web::UI::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldTemplate : System.Web.UI.Control" Usage="System.Web.DynamicData.DynamicControl.FieldTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-188"><see cref="T:System.Web.DynamicData.DynamicControl" /> コントロールに対して作成されたフィールド テンプレートを取得します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-188">Gets the field template that is created for the <see cref="T:System.Web.DynamicData.DynamicControl" /> control.</span></span></summary>
        <value><span data-ttu-id="53ad1-189"><see cref="T:System.Web.DynamicData.DynamicControl" /> コントロールに対して作成されたフィールド テンプレート。</span><span class="sxs-lookup"><span data-stu-id="53ad1-189">The field template that is created for the <see cref="T:System.Web.DynamicData.DynamicControl" /> control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttribute (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAttribute(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member GetAttribute : string -&gt; string&#xA;override this.GetAttribute : string -&gt; string" Usage="dynamicControl.GetAttribute key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="53ad1-190">属性の名前。</span><span class="sxs-lookup"><span data-stu-id="53ad1-190">The name of the attribute.</span></span></param>
        <summary><span data-ttu-id="53ad1-191">指定したキーを使用して属性値を取得します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-191">Retrieves the attribute value by using the specified key.</span></span></summary>
        <returns><span data-ttu-id="53ad1-192">属性の値。</span><span class="sxs-lookup"><span data-stu-id="53ad1-192">The value of the attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-193">Attributes コレクションが `null`場合、このメソッドは空の文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-193">If the attributes collection is `null`, this method returns an empty string.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.DynamicData.DynamicControl.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-194">コントロールのデータを表示する前に HTML エンコードするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-194">Gets or sets a value that indicates whether the data for the control is HTML-encoded before rendering.</span></span></summary>
        <value><span data-ttu-id="53ad1-195">コントロールのデータを表示する前に HTML エンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="53ad1-195"><see langword="true" /> if the data for the control is HTML-encoded before rendering; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="53ad1-196">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="53ad1-196">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-197"><xref:System.Web.DynamicData.DynamicControl.HtmlEncode%2A> プロパティを使用して、フィールド値を表示する前にそれぞれの文字列形式に HTML エンコードするかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-197">Use the <xref:System.Web.DynamicData.DynamicControl.HtmlEncode%2A> property to specify whether field values are HTML-encoded to their respective string representations before they are displayed.</span></span>

> [!NOTE]
>  <span data-ttu-id="53ad1-198">HTML エンコードフィールド値は、クロスサイトスクリプティング攻撃や悪意のあるコンテンツが表示されないようにするために役立ちます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-198">HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed.</span></span> <span data-ttu-id="53ad1-199">このプロパティは、可能な場合は常に有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="53ad1-199">This property should be enabled whenever possible.</span></span> <span data-ttu-id="53ad1-200">詳細については、「[スクリプトによる攻略の概要](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="53ad1-200">For more information, see [Script Exploits Overview](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataBoundControlMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As DataBoundControlMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::DataBoundControlMode Mode { System::Web::UI::WebControls::DataBoundControlMode get(); void set(System::Web::UI::WebControls::DataBoundControlMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Web.UI.WebControls.DataBoundControlMode with get, set" Usage="System.Web.DynamicData.DynamicControl.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-201">レンダリング モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-201">Gets or sets the rendering mode.</span></span></summary>
        <value><span data-ttu-id="53ad1-202">コントロールのレンダリング モードを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="53ad1-202">One of the enumeration values that specifies the rendering mode for the control.</span></span> <span data-ttu-id="53ad1-203">既定では、 <see cref="F:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly" />です。</span><span class="sxs-lookup"><span data-stu-id="53ad1-203">The default is <see cref="F:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-204"><xref:System.Web.DynamicData.DynamicControl.Mode%2A> プロパティを使用して、<xref:System.Web.DynamicData.DynamicControl> コントロールを表示するために使用する表示モードを指定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-204">Use the <xref:System.Web.DynamicData.DynamicControl.Mode%2A> property to specify which rendering mode to use to display the <xref:System.Web.DynamicData.DynamicControl> control.</span></span> <span data-ttu-id="53ad1-205">次の表は、それぞれのモードを示しています。</span><span class="sxs-lookup"><span data-stu-id="53ad1-205">The following table shows the different modes.</span></span>

|<span data-ttu-id="53ad1-206">モード</span><span class="sxs-lookup"><span data-stu-id="53ad1-206">Mode</span></span>|<span data-ttu-id="53ad1-207">説明</span><span class="sxs-lookup"><span data-stu-id="53ad1-207">Description</span></span>|
|----------|-----------------|
|<xref:System.Web.UI.WebControls.DataBoundControlMode.ReadOnly>|<span data-ttu-id="53ad1-208">表示モードの場合。</span><span class="sxs-lookup"><span data-stu-id="53ad1-208">for display mode.</span></span> <span data-ttu-id="53ad1-209">これにより、ユーザーはレコードまたはデータフィールドの値を変更できなくなります。</span><span class="sxs-lookup"><span data-stu-id="53ad1-209">This prevents the user from modifying the values of a record or a data field.</span></span> <span data-ttu-id="53ad1-210">任意のテンプレートで使用できます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-210">It can be used in any of the templates.</span></span> <span data-ttu-id="53ad1-211">これが既定値です。</span><span class="sxs-lookup"><span data-stu-id="53ad1-211">This is the default value.</span></span>|
|<xref:System.Web.UI.WebControls.DataBoundControlMode.Edit>|<span data-ttu-id="53ad1-212">編集モードの場合。</span><span class="sxs-lookup"><span data-stu-id="53ad1-212">for edit mode.</span></span> <span data-ttu-id="53ad1-213">これにより、ユーザーは既存のレコードの値を更新できます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-213">This enables users to update the values of an existing record.</span></span> <span data-ttu-id="53ad1-214">これは `EditItemTemplate` テンプレートで使用されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-214">It is used in the `EditItemTemplate` template.</span></span>|
|<xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>|<span data-ttu-id="53ad1-215">挿入モードの場合。</span><span class="sxs-lookup"><span data-stu-id="53ad1-215">for insert mode.</span></span> <span data-ttu-id="53ad1-216">これにより、ユーザーは新しいレコードの値を入力できます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-216">This enables users to enter values for a new record.</span></span> <span data-ttu-id="53ad1-217">これは `InsertItemTemplate` テンプレートで使用されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-217">It is used in the `InsertItemTemplate` template.</span></span>|

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.DynamicData.DynamicControl.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-218">フィールド値が <see langword="null" /> の場合にデータ フィールドに表示されるキャプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-218">Gets or sets the caption that is displayed for a data field when the field value is <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="53ad1-219">フィールド値が <see langword="null" /> の場合にデータ フィールドに表示されるキャプション。</span><span class="sxs-lookup"><span data-stu-id="53ad1-219">The caption that is displayed for a data field when the field value is <see langword="null" />.</span></span> <span data-ttu-id="53ad1-220">既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-220">The default is an empty string (""), which indicates that this property is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-221">フィールド値は、データソースに null として格納されることがあります。</span><span class="sxs-lookup"><span data-stu-id="53ad1-221">Sometimes a field value is stored as null in the data source.</span></span> <span data-ttu-id="53ad1-222"><xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> プロパティを設定することによって、null 値を持つフィールドに表示するカスタムキャプションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-222">You can specify a custom caption to display for fields that have a null value by setting the <xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> property.</span></span> <span data-ttu-id="53ad1-223">このプロパティが設定されていない場合、null フィールド値は空の文字列 ("") として表示されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-223">If this property is not set, null field values are displayed as empty strings ("").</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataField" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataFormatString" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="dynamicControl.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="53ad1-224">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="53ad1-224">The event data.</span></span></param>
        <summary><span data-ttu-id="53ad1-225"><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-225">Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-226">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-226">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="53ad1-227">詳細については、[処理とイベントの発生](~/docs/standard/events/index.md) を参照してください。</span><span class="sxs-lookup"><span data-stu-id="53ad1-227">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>

 <span data-ttu-id="53ad1-228"><xref:System.Web.DynamicData.DynamicControl.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-228">The <xref:System.Web.DynamicData.DynamicControl.OnInit%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="53ad1-229">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="53ad1-229">This is the preferred technique for handling the event in a derived class.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="53ad1-230"><see cref="P:System.Web.DynamicData.DynamicControl.DataField" /> プロパティが設定されていません。</span><span class="sxs-lookup"><span data-stu-id="53ad1-230">The <see cref="P:System.Web.DynamicData.DynamicControl.DataField" /> property is not set.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="53ad1-231">派生クラスで <see cref="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取るように、基本クラスの <see cref="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="53ad1-231">When overriding <see cref="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" /> in a derived class, be sure to call the base class' <see cref="M:System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dynamicControl.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="53ad1-232">クライアントのブラウザーに <see cref="T:System.Web.DynamicData.DynamicControl" /> コントロールのコンテンツを表示するために使用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53ad1-232">The object that is used to render the <see cref="T:System.Web.DynamicData.DynamicControl" /> control content on the client's browser.</span></span></param>
        <summary><span data-ttu-id="53ad1-233">指定した <see cref="T:System.Web.DynamicData.DynamicControl" /> オブジェクトを使用して、<see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールのコンテンツをクライアントのブラウザーに表示します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-233">Renders the <see cref="T:System.Web.DynamicData.DynamicControl" /> control content to the client's browser by using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-234"><xref:System.Web.DynamicData.DynamicControl.Render%2A> メソッドは、主にコントロールの開発者が <xref:System.Web.DynamicData.DynamicControl> コントロールを拡張するために使用します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-234">The <xref:System.Web.DynamicData.DynamicControl.Render%2A> method is primarily used by control developers to extend the <xref:System.Web.DynamicData.DynamicControl> control.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAttribute(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetAttribute : string * string -&gt; unit&#xA;override this.SetAttribute : string * string -&gt; unit" Usage="dynamicControl.SetAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="53ad1-235">設定する属性名です。</span><span class="sxs-lookup"><span data-stu-id="53ad1-235">The name of the attribute to set.</span></span></param>
        <param name="value"><span data-ttu-id="53ad1-236">属性に代入する値。</span><span class="sxs-lookup"><span data-stu-id="53ad1-236">The value to assign to the attribute.</span></span></param>
        <summary><span data-ttu-id="53ad1-237">指定した属性を、指定した値に設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-237">Sets the specified attribute to the specified value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IFieldTemplateHost.FormattingOptions">
      <MemberSignature Language="C#" Value="System.Web.DynamicData.IFieldFormattingOptions System.Web.DynamicData.IFieldTemplateHost.FormattingOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.IFieldFormattingOptions System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property FormattingOptions As IFieldFormattingOptions Implements IFieldTemplateHost.FormattingOptions" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::DynamicData::IFieldFormattingOptions ^ System::Web::DynamicData::IFieldTemplateHost::FormattingOptions { System::Web::DynamicData::IFieldFormattingOptions ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldFormattingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-238">このメンバーの詳細については、「<see cref="P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="53ad1-238">For a description of this member, see <see cref="P:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions" />.</span></span></summary>
        <value><span data-ttu-id="53ad1-239">フィールド テンプレートに適用される書式指定オプション。</span><span class="sxs-lookup"><span data-stu-id="53ad1-239">The formatting options to be applied to the field template.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.Table" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Table As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaTable ^ Table { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.DynamicControl.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-240">コントロールに関連付けられているテーブル オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-240">Gets the table object that is associated with the control.</span></span></summary>
        <value><span data-ttu-id="53ad1-241">コントロールに関連付けられているテーブル オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="53ad1-241">The table object that is associated with the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-242"><xref:System.Web.DynamicData.DynamicControl> コントロールを含むデータバインドコントロールに関連付けられているテーブルに関するメタデータ情報にアクセスするには、<xref:System.Web.DynamicData.DynamicControl.Table%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-242">Use the <xref:System.Web.DynamicData.DynamicControl.Table%2A> property to access metadata information about the table that is associated with the data-bound control that contains the <xref:System.Web.DynamicData.DynamicControl> control.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="53ad1-243"><see cref="T:System.Web.DynamicData.DynamicControl" /> コントロールは、<see cref="T:System.Web.DynamicData.IDynamicDataSource" /> インターフェイスを実装するデータ ソース コントロールにバインドされていないデータ バインド コントロール内にあります。</span><span class="sxs-lookup"><span data-stu-id="53ad1-243">The <see cref="T:System.Web.DynamicData.DynamicControl" /> control is inside a data-bound control that is not bound to a data source control that implements the <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> interface.</span></span></exception>
        <altmember cref="P:System.Web.DynamicData.DynamicControl.Column" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UIHint : string with get, set" Usage="System.Web.DynamicData.DynamicControl.UIHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-244">データ フィールドの表示に使用するフィールド テンプレートの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-244">Gets or sets the name of the field template that is used to render the data field.</span></span></summary>
        <value><span data-ttu-id="53ad1-245">データ フィールドの表示に使用するフィールド テンプレートの名前。</span><span class="sxs-lookup"><span data-stu-id="53ad1-245">The name of the field template that is used to render the data field.</span></span> <span data-ttu-id="53ad1-246">既定値は空の文字列 ("") です。これは、データ フィールドの型、またはデータ モデルに適用されるメタデータ情報に基づいて、フィールド テンプレートが表示されることを示します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-246">The default is an empty string (""), which indicates that the field template will be rendered based on the data field type or on metadata information applied to the data model.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-247">データフィールドの UI を表示するために使用するフィールドテンプレートを指定するには、<xref:System.Web.DynamicData.DynamicControl.UIHint%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-247">Use the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property to specify the field template to use to display the UI for a data field.</span></span> <span data-ttu-id="53ad1-248">既定では、フィールドテンプレートはユーザーコントロールであり、その名前には、編集操作と挿入操作に使用されるフィールドテンプレートを識別するためのサフィックスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="53ad1-248">Field templates by default are user controls and their names contain a suffix to identify field templates that are used for edit operations and insert operations.</span></span> <span data-ttu-id="53ad1-249">サフィックスはそれぞれ _edit、_insert ます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-249">The suffixes are _edit and _insert, respectively.</span></span> <span data-ttu-id="53ad1-250"><xref:System.Web.DynamicData.DynamicControl.UIHint%2A> プロパティに値を設定する場合は、サフィックスなしで名前を設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-250">When you set a value to the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property, you set the name without the suffixes.</span></span> <span data-ttu-id="53ad1-251">動的データは、<xref:System.Web.DynamicData.DynamicControl.Mode%2A> プロパティ値を評価することによって正しいモードを識別し、正しいフィールドテンプレートを表示します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-251">Dynamic Data will identify the correct mode by evaluating the <xref:System.Web.DynamicData.DynamicControl.Mode%2A> property value and will render the correct field template.</span></span>

 <span data-ttu-id="53ad1-252"><xref:System.Web.DynamicData.DynamicControl.UIHint%2A> プロパティが設定されていない場合は、既定で動的データによってフィールドの種類に基づいてフィールドテンプレートが表示されます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-252">If the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property is not set, by default Dynamic Data will render the field template based on the field type.</span></span> <span data-ttu-id="53ad1-253">詳細については、「 [ASP.NET 動的データスキャフォールディング](https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="53ad1-253">For more information, see [ASP.NET Dynamic Data Scaffolding](https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12).</span></span>

 <span data-ttu-id="53ad1-254"><xref:System.Web.DynamicData.DynamicControl.UIHint%2A> プロパティを使用して指定するフィールドテンプレートは、<xref:System.Web.DynamicData.DynamicControl> コントロールのこのインスタンスに固有です。</span><span class="sxs-lookup"><span data-stu-id="53ad1-254">The field template that you specify using the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property is specific to this instance of the <xref:System.Web.DynamicData.DynamicControl> control.</span></span> <span data-ttu-id="53ad1-255">データモデルに <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> を適用することで、アプリケーション全体でデータフィールドによって使用されるフィールドテンプレートを変更することもできます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-255">You can also change the field template used by a data field across the entire application by applying the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> to your data model.</span></span> <span data-ttu-id="53ad1-256"><xref:System.Web.DynamicData.DynamicControl.UIHint%2A> プロパティを設定すると、データモデルに適用されるメタデータが上書きされます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-256">Setting the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property overrides the metadata applied to the data model.</span></span> <span data-ttu-id="53ad1-257">メタデータ属性の詳細については、「 [ASP.NET 動的データ](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="53ad1-257">For more information about metadata attributes, see [ASP.NET Dynamic Data](https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512).</span></span>



## Examples
 <span data-ttu-id="53ad1-258">この機能の実行時のコード例については、「 [run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl.UIHint)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="53ad1-258">See a run-time code example of this feature: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl.UIHint).</span></span>

 <span data-ttu-id="53ad1-259">次の例は、別のフィールドテンプレートを使用してコンテンツを表示するデータフィールドを指定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="53ad1-259">The following example shows how you can specify a data field to use a different field template to render its contents.</span></span> <span data-ttu-id="53ad1-260">2番目の例は、<xref:System.Web.DynamicData.DynamicControl.UIHint%2A> プロパティによって指定されたカスタムフィールドテンプレートを示しています。</span><span class="sxs-lookup"><span data-stu-id="53ad1-260">The second example shows the custom field template specified by the <xref:System.Web.DynamicData.DynamicControl.UIHint%2A> property.</span></span>

 [!code-aspx-csharp[System.Web.DynamicData.DynamicControl.UIHint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.UIHint/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicControl.UIHint#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.UIHint/VB/Default.aspx#1)]

 [!code-aspx-csharp[System.Web.DynamicData.DynamicControl.UIHint#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.UIHint/CS/Email.ascx#2)]
 [!code-aspx-vb[System.Web.DynamicData.DynamicControl.UIHint#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.DynamicControl.UIHint/VB/Email.ascx#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.DynamicControl.DataField" />
        <related type="Article" href="https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512"><span data-ttu-id="53ad1-261">ASP.NET 動的データモデルの概要</span><span class="sxs-lookup"><span data-stu-id="53ad1-261">ASP.NET Dynamic Data Model Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.DynamicControl.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.DynamicData.DynamicControl.ValidationGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="53ad1-262">コントロールの検証グループ名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-262">Gets or sets the validation group name for the control.</span></span></summary>
        <value><span data-ttu-id="53ad1-263">コントロールの検証グループ名。</span><span class="sxs-lookup"><span data-stu-id="53ad1-263">The validation group name for the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="53ad1-264">検証グループを使用すると、ページ上の検証コントロールを特定のカテゴリに割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-264">Validation groups allow you to assign validation controls on a page to a specific category.</span></span> <span data-ttu-id="53ad1-265">各検証グループは、ページ上の他の検証グループとは別に検証できます。</span><span class="sxs-lookup"><span data-stu-id="53ad1-265">Each validation group can be validated independently from other validation groups on the page.</span></span> <span data-ttu-id="53ad1-266"><xref:System.Web.DynamicData.DynamicControl.ValidationGroup%2A> プロパティを使用して、ページがサーバーにポストバックされるときに <xref:System.Web.DynamicData.DynamicControl> コントロールによって検証される検証グループの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="53ad1-266">Use the <xref:System.Web.DynamicData.DynamicControl.ValidationGroup%2A> property to specify the name of the validation group for which the <xref:System.Web.DynamicData.DynamicControl> control causes validation when the page posts back to the server.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
