<Type Name="WorkflowView" FullName="System.Workflow.ComponentModel.Design.WorkflowView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="64a1c40e9e740629a6e3702f7ae0edea7cd2be23" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83900866" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowView : System.Windows.Forms.UserControl, IServiceProvider, System.Windows.Forms.IMessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowView extends System.Windows.Forms.UserControl implements class System.IServiceProvider, class System.Windows.Forms.IMessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.WorkflowView" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowView&#xA;Inherits UserControl&#xA;Implements IMessageFilter, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowView : System::Windows::Forms::UserControl, IServiceProvider, System::Windows::Forms::IMessageFilter" />
  <TypeSignature Language="F#" Value="type WorkflowView = class&#xA;    inherit UserControl&#xA;    interface IServiceProvider&#xA;    interface IMessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.UserControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IMessageFilter</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Design.ActivityDesignerTheme(typeof(System.Workflow.ComponentModel.Design.AmbientTheme), Xml="&lt;AmbientTheme xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" ApplyTo="System.Workflow.ComponentModel.Design.WorkflowView" ShowConfigErrors="True" DrawShadow="False" DrawGrayscale="False" DropIndicatorColor="0xFF006400" SelectionForeColor="0xFF0000FF" SelectionPatternColor="0xFF606060" ForeColor="0xFF808080" BackColor="0xFFFFFFFF" ShowGrid="False" GridColor="0xFFC0C0C0" TextQuality="Aliased" DrawRounded="True" ShowDesignerBorder="True" /&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="61f34-101">プロセス フローのビジュアル表示を描画するデザイン サーフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="61f34-101">Provides a design surface, which renders a visual representation of process flow.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="61f34-102"><xref:System.Workflow.ComponentModel.Design.WorkflowView> は、ワークフロー マークアップで記述されたプロセス フローのビジュアル表示を描画するデザイン サーフェイスです。</span><span class="sxs-lookup"><span data-stu-id="61f34-102"><xref:System.Workflow.ComponentModel.Design.WorkflowView> is the design surface which renders a visual representation of process flow described in workflow markup.</span></span> <span data-ttu-id="61f34-103"><xref:System.Workflow.ComponentModel.Design.WorkflowView> には各種のユーザー インターフェイス機能が組み込まれています。アクティビティ デザイナーはこれを使って画面を描画し、Windows が生成するさまざまなイベントに応答します。</span><span class="sxs-lookup"><span data-stu-id="61f34-103"><xref:System.Workflow.ComponentModel.Design.WorkflowView> offers a rich set of user interface functionality needed by the activity designers for rendering and for responding to various Windows-generated events.</span></span> <span data-ttu-id="61f34-104">さらに <xref:System.Workflow.ComponentModel.Design.WorkflowView> には、いくつかのアクティビティについてこれを実行するための機能が組み込まれており、すべてのデザイナーが共通に利用できます。</span><span class="sxs-lookup"><span data-stu-id="61f34-104">Also, the <xref:System.Workflow.ComponentModel.Design.WorkflowView> offers a set of common functions which can be used by all designers to perform certain activities.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-105">次のコード例は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> メソッドを使用して <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> クラスのインスタンスを取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="61f34-105">The following code example demonstrates how you can obtain an instance of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> class using the <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> method.</span></span> <span data-ttu-id="61f34-106">その後、このコードは <xref:System.Workflow.ComponentModel.Design.WorkflowView>、<xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> などのいくつかの <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> プロパティを設定し、<xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="61f34-106">The code then sets several <xref:System.Workflow.ComponentModel.Design.WorkflowView> properties, including <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> and <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>, and calls the <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> method.</span></span>  
  
 <span data-ttu-id="61f34-107">このコード例は、WorkflowDesignerControl.cs ファイルから抜粋したワークフロー追跡プロファイル デザイナーの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="61f34-107">This code example is part of the Workflow Tracking Profile Designer SDK Sample from the WorkflowDesignerControl.cs file.</span></span> <span data-ttu-id="61f34-108">詳細については、「[ワークフロー追跡プロファイルデザイナー](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-108">For more information, see [Workflow Tracking Profile Designer](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#126](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#126)]
 [!code-vb[wf_samples#126](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#126)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)"><span data-ttu-id="61f34-109">ワークフロー追跡プロファイルデザイナー</span><span class="sxs-lookup"><span data-stu-id="61f34-109">Workflow Tracking Profile Designer</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="61f34-110"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="61f34-110">Initializes an instance of a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61f34-111"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="61f34-111">Initializes an instance of a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowView (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowView(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.Design.WorkflowView : IServiceProvider -&gt; System.Workflow.ComponentModel.Design.WorkflowView" Usage="new System.Workflow.ComponentModel.Design.WorkflowView serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="61f34-112"><see cref="T:System.IServiceProvider" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61f34-112">An object that implements the <see cref="T:System.IServiceProvider" /> interface.</span></span></param>
        <summary><span data-ttu-id="61f34-113">指定されたサービス プロバイダーで <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> クラスのインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="61f34-113">Initializes an instance of a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> with the specified service provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61f34-114"><xref:System.Workflow.ComponentModel.Design.WorkflowView> オブジェクトを作成する方法の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-114">The following example shows how to create a <xref:System.Workflow.ComponentModel.Design.WorkflowView> object.</span></span> <span data-ttu-id="61f34-115">この例では、<xref:System.ComponentModel.Design.DesignSurface> オブジェクトを作成し、`BeginLoad` を引数として渡して <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="61f34-115">In this example, a new <xref:System.ComponentModel.Design.DesignSurface> object is created and the `BeginLoad` method is called passing a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> object as the parameter.</span></span> <span data-ttu-id="61f34-116"><xref:System.Workflow.Activities.SequentialWorkflowActivity> の作成後、先に作成した <xref:System.Workflow.ComponentModel.Design.WorkflowView> を引数としてコンストラクターに渡して、<xref:System.ComponentModel.Design.DesignSurface> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="61f34-116">After creating a new <xref:System.Workflow.Activities.SequentialWorkflowActivity>, a <xref:System.Workflow.ComponentModel.Design.WorkflowView> object is created using the <xref:System.ComponentModel.Design.DesignSurface> created earlier as a parameter to the constructor.</span></span>  
  
 <span data-ttu-id="61f34-117">このコード例は、WorkflowViewWrapper.cs ファイルから抜粋した Outlook ワークフロー ウィザードの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="61f34-117">This code example is part of the Outlook Workflow Wizard SDK Sample from the WorkflowViewWrapper.cs file.</span></span> <span data-ttu-id="61f34-118">詳細については、「 [Outlook Workflow Wizard Sample](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-118">For more information, see [Outlook Workflow Wizard Sample](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).</span></span>  
  
 [!code-csharp[wf_samples#97](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#97)]
 [!code-vb[wf_samples#97](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#97)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)"><span data-ttu-id="61f34-119">ワークフロー モニター</span><span class="sxs-lookup"><span data-stu-id="61f34-119">Workflow Monitor</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddDesignerMessageFilter">
      <MemberSignature Language="C#" Value="public void AddDesignerMessageFilter (System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter designerMessageFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDesignerMessageFilter(class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter designerMessageFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.AddDesignerMessageFilter(System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDesignerMessageFilter (designerMessageFilter As WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDesignerMessageFilter(System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^ designerMessageFilter);" />
      <MemberSignature Language="F#" Value="member this.AddDesignerMessageFilter : System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter -&gt; unit" Usage="workflowView.AddDesignerMessageFilter designerMessageFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerMessageFilter" Type="System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />
      </Parameters>
      <Docs>
        <param name="designerMessageFilter"><span data-ttu-id="61f34-120"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> に追加する <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-120">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> to add to the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></param>
        <summary><span data-ttu-id="61f34-121"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> を <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="61f34-121">Adds a <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> to the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-122"><xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> からのメッセージを処理するコンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="61f34-122">A <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> is a component that handles messages from the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 <span data-ttu-id="61f34-123">`Strategy` は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> デザイン パターンに基づき、メッセージを <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> に渡して処理させます。</span><span class="sxs-lookup"><span data-stu-id="61f34-123">Using the `Strategy` design pattern, the <xref:System.Workflow.ComponentModel.Design.WorkflowView> will pass messages to the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> to be handled.</span></span>  
  
 <span data-ttu-id="61f34-124">マウス イベント、キーボード イベント、描画/レイアウト イベントを、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> に関連付けられた <xref:System.Workflow.ComponentModel.Design.WorkflowView> に渡します。</span><span class="sxs-lookup"><span data-stu-id="61f34-124">Mouse events, keyboard events, paint and layout events are passed on to a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> associated with the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-125">次の例では、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> を作成し、<xref:System.Workflow.ComponentModel.Design.WorkflowView> オブジェクトをワークフロー デザイン サーフェイスに関連付けています。</span><span class="sxs-lookup"><span data-stu-id="61f34-125">In the following example, a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerLoader> is created and a <xref:System.Workflow.ComponentModel.Design.WorkflowView> object is associated with the workflow design surface.</span></span> <span data-ttu-id="61f34-126">メッセージの通知を取得するために、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> を作成し、これを <xref:System.Workflow.ComponentModel.Design.WorkflowView> オブジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="61f34-126">In order to retrieve notifications of messages, a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> is created and added to the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object.</span></span>  
  
 <span data-ttu-id="61f34-127">このコード例は、WorkflowViewWrapper.cs ファイルから抜粋した Outlook ワークフロー ウィザードの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="61f34-127">This code example is part of the Outlook Workflow Wizard SDK Sample from the WorkflowViewWrapper.cs file.</span></span> <span data-ttu-id="61f34-128">詳細については、「 [Outlook Workflow Wizard Sample](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-128">For more information, see [Outlook Workflow Wizard Sample](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).</span></span>  
  
 [!code-csharp[wf_Samples#102](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#102)]
 [!code-vb[wf_Samples#102](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#102)]  
  
 <span data-ttu-id="61f34-129">前のコードで作成した `MessageFilter` オブジェクトは、<xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> クラスから派生したものです。</span><span class="sxs-lookup"><span data-stu-id="61f34-129">The `MessageFilter` object created in the previous code is derived from the <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> class.</span></span>  <span data-ttu-id="61f34-130">このクラスのメソッドをオーバーライドすることにより、<xref:System.Workflow.ComponentModel.Design.WorkflowView> オブジェクト上でユーザー インターフェイス イベントが発生するたびに、メッセージ フィルターに通知が届くようにします。</span><span class="sxs-lookup"><span data-stu-id="61f34-130">By overriding the methods of this class, the message filter is notified whenever a user interface event occurs on the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object.</span></span>  
  
 [!code-csharp[wf_samples#104](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#104)]
 [!code-vb[wf_samples#104](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#104)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientPointToLogical">
      <MemberSignature Language="C#" Value="public System.Drawing.Point ClientPointToLogical (System.Drawing.Point clientPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point ClientPointToLogical(valuetype System.Drawing.Point clientPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientPointToLogical(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function ClientPointToLogical (clientPoint As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point ClientPointToLogical(System::Drawing::Point clientPoint);" />
      <MemberSignature Language="F#" Value="member this.ClientPointToLogical : System.Drawing.Point -&gt; System.Drawing.Point" Usage="workflowView.ClientPointToLogical clientPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="clientPoint"><span data-ttu-id="61f34-131">クライアント座標から論理座標に変換する <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-131">The <see cref="T:System.Drawing.Point" /> to convert from client coordinates to logical coordinates.</span></span></param>
        <summary><span data-ttu-id="61f34-132"><see cref="T:System.Drawing.Point" /> をクライアント座標から論理座標に変換します。</span><span class="sxs-lookup"><span data-stu-id="61f34-132">Converts a <see cref="T:System.Drawing.Point" /> from client coordinates to logical coordinates.</span></span></summary>
        <returns><span data-ttu-id="61f34-133">クライアント座標から論理座標に変換された <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-133">The <see cref="T:System.Drawing.Point" /> converted from client coordinates to logical coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-134"><xref:System.Workflow.ComponentModel.Design.WorkflowView> は、2 つの座標空間、つまり論理座標とクライアント座標を使用します。</span><span class="sxs-lookup"><span data-stu-id="61f34-134"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="61f34-135">クライアント座標は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> の左上隅を起点とした相対座標です。</span><span class="sxs-lookup"><span data-stu-id="61f34-135">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="61f34-136">左上隅の座標は (0,0) です。x 座標と y 座標は、それぞれ表示可能領域の右方向と下方向に進むにつれて数値が大きくなります。</span><span class="sxs-lookup"><span data-stu-id="61f34-136">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="61f34-137">クライアント座標系は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> のズーム レベルとスクロール バーの位置の影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="61f34-137">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
-   <span data-ttu-id="61f34-138">論理座標系では、オブジェクトは常に (0,0) にマッピングされます。</span><span class="sxs-lookup"><span data-stu-id="61f34-138">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="61f34-139">横方向と縦方向の位置は、ズームやスクロール バーの位置の影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="61f34-139">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientRectangleToLogical">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ClientRectangleToLogical (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle ClientRectangleToLogical(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientRectangleToLogical(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function ClientRectangleToLogical (rectangle As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle ClientRectangleToLogical(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.ClientRectangleToLogical : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="workflowView.ClientRectangleToLogical rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle"><span data-ttu-id="61f34-140">クライアント座標から論理座標に変換する <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-140">The <see cref="T:System.Drawing.Rectangle" /> to convert from client to logical coordinates.</span></span></param>
        <summary><span data-ttu-id="61f34-141"><see cref="T:System.Drawing.Rectangle" /> をクライアント座標から論理座標に変換します。</span><span class="sxs-lookup"><span data-stu-id="61f34-141">Converts a <see cref="T:System.Drawing.Rectangle" /> from client coordinates to logical coordinates.</span></span></summary>
        <returns><span data-ttu-id="61f34-142">クライアント座標から論理座標に変換された <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-142">The <see cref="T:System.Drawing.Rectangle" /> converted from client coordinates to logical coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-143"><xref:System.Workflow.ComponentModel.Design.WorkflowView> は、2 つの座標空間、つまり論理座標とクライアント座標を使用します。</span><span class="sxs-lookup"><span data-stu-id="61f34-143"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="61f34-144">クライアント座標は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> の左上隅を起点とした相対座標です。</span><span class="sxs-lookup"><span data-stu-id="61f34-144">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="61f34-145">左上隅の座標は (0,0) です。x 座標と y 座標は、それぞれ表示可能領域の右方向と下方向に進むにつれて数値が大きくなります。</span><span class="sxs-lookup"><span data-stu-id="61f34-145">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="61f34-146">クライアント座標系は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> のズーム レベルとスクロール バーの位置の影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="61f34-146">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="61f34-147">論理座標系では、オブジェクトは常に (0,0) にマッピングされます。</span><span class="sxs-lookup"><span data-stu-id="61f34-147">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="61f34-148">横方向と縦方向の位置は、ズームやスクロール バーの位置の影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="61f34-148">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientSizeToLogical">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSizeToLogical (System.Drawing.Size clientSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size ClientSizeToLogical(valuetype System.Drawing.Size clientSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ClientSizeToLogical(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Function ClientSizeToLogical (clientSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size ClientSizeToLogical(System::Drawing::Size clientSize);" />
      <MemberSignature Language="F#" Value="member this.ClientSizeToLogical : System.Drawing.Size -&gt; System.Drawing.Size" Usage="workflowView.ClientSizeToLogical clientSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="clientSize"><span data-ttu-id="61f34-149">クライアント座標から論理座標に変換する <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-149">The <see cref="T:System.Drawing.Size" /> to convert from client to logical coordinates.</span></span></param>
        <summary><span data-ttu-id="61f34-150"><see cref="T:System.Drawing.Size" /> をクライアント座標から論理座標に変換します。</span><span class="sxs-lookup"><span data-stu-id="61f34-150">Converts a <see cref="T:System.Drawing.Size" /> from client to logical coordinates.</span></span></summary>
        <returns><span data-ttu-id="61f34-151">クライアント座標から論理座標に変換された <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-151">The <see cref="T:System.Drawing.Size" /> converted from client coordinates to logical coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-152"><xref:System.Workflow.ComponentModel.Design.WorkflowView> は、2 つの座標空間、つまり論理座標とクライアント座標を使用します。</span><span class="sxs-lookup"><span data-stu-id="61f34-152"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="61f34-153">クライアント座標は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> の左上隅を起点とした相対座標です。</span><span class="sxs-lookup"><span data-stu-id="61f34-153">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="61f34-154">左上隅の座標は (0,0) です。x 座標と y 座標は、それぞれ表示可能領域の右方向と下方向に進むにつれて数値が大きくなります。</span><span class="sxs-lookup"><span data-stu-id="61f34-154">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="61f34-155">クライアント座標系は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> のズーム レベルとスクロール バーの位置の影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="61f34-155">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="61f34-156">論理座標系では、オブジェクトは常に (0,0) にマッピングされます。</span><span class="sxs-lookup"><span data-stu-id="61f34-156">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="61f34-157">横方向と縦方向の位置は、ズームやスクロール バーの位置の影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="61f34-157">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="workflowView.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61f34-158"><see cref="T:System.Windows.Forms.AccessibleObject" /> の新しい <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="61f34-158">Creates a new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <returns><span data-ttu-id="61f34-159"><see cref="T:System.Windows.Forms.AccessibleObject" /> の新しい <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-159">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-160">明示的に <xref:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance%2A> メソッドを呼び出さない場合は、<xref:System.Windows.Forms.AccessibleObject> プロパティが参照されると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-160">If you do not explicitly call the <xref:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.AccessibleObject> property is referenced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61f34-161"><xref:System.Windows.Forms.AccessibleObject> を作成するには、.NET Framework と一緒にインストールされる `Accessibility` アセンブリへの参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="61f34-161">To create a <xref:System.Windows.Forms.AccessibleObject>, you must add a reference to the `Accessibility` assembly installed with the .NET Framework.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="61f34-162">派生クラスで <see cref="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" /> をオーバーライドする場合は、基本クラスの <see cref="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" /> メソッドを呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="61f34-162">When overriding <see cref="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" /> in a derived class, you should not call the base class <see cref="M:System.Workflow.ComponentModel.Design.WorkflowView.CreateAccessibilityInstance" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="workflowView.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="61f34-163">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-163"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="61f34-164"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="61f34-164">Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-165">disposing パラメーターが `true` に設定されている場合、このメソッドは、この <xref:System.Workflow.ComponentModel.Design.WorkflowView> オブジェクトが参照しているすべてのマネージド オブジェクトが保持しているリソースをすべて解放します。</span><span class="sxs-lookup"><span data-stu-id="61f34-165">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Workflow.ComponentModel.Design.WorkflowView> references.</span></span> <span data-ttu-id="61f34-166">このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="61f34-166">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 <span data-ttu-id="61f34-167">`Dispose` と `Finalize`の詳細については、「[アンマネージリソースのクリーンアップ](/dotnet/standard/garbage-collection/unmanaged)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-167">For more information about `Dispose` and `Finalize`, see [Cleaning Up Unmanaged Resources](/dotnet/standard/garbage-collection/unmanaged) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="61f34-168">
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="61f34-168">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="61f34-169"><see langword="Dispose(Boolean)" /> をオーバーライドする場合は、以前に <see langword="Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="61f34-169">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="61f34-170"><see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](/dotnet/standard/garbage-collection/implementing-dispose)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-170">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](/dotnet/standard/garbage-collection/implementing-dispose).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EnableFitToScreen">
      <MemberSignature Language="C#" Value="public bool EnableFitToScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFitToScreen" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFitToScreen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFitToScreen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableFitToScreen : bool with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-171">デザイン サーフェイス上のボタンを押したとき、ワークフロー デザイン サーフェイスのズーム レベルを変更して、ワークフロー全体が <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> に表示されるようにします。</span><span class="sxs-lookup"><span data-stu-id="61f34-171">Enables the button on the design surface that, when clicked, changes the zoom level of the workflow design surface so that the entire workflow is displayed in the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="61f34-172">動的ボタンが有効であれば <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-172"><see langword="true" /> if the dynamic button is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61f34-173">スクリーン ボタンに合わせてズーム レベルを変更する例を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-173">The following example shows how to enable the fit to screen button.</span></span> <span data-ttu-id="61f34-174">このメソッドは、まずデザイナーの <xref:System.ComponentModel.Design.IDesignerHost> インターフェイスを取得し、次に <xref:System.Workflow.ComponentModel.Design.WorkflowView> オブジェクトを検索しています。そのため、<xref:System.IServiceProvider.GetService%2A> メソッドを呼び出してから、<xref:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen%2A> プロパティを変更しています。</span><span class="sxs-lookup"><span data-stu-id="61f34-174">The method first obtains the <xref:System.ComponentModel.Design.IDesignerHost> interface for the designer and then retrieves the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object by using the <xref:System.IServiceProvider.GetService%2A> method before modifying the <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen%2A> property.</span></span>  
  
 [!code-csharp[wf_samples#50](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#50)]
 [!code-vb[wf_samples#50](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#50)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureVisible">
      <MemberSignature Language="C#" Value="public void EnsureVisible (object selectableObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnsureVisible(object selectableObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnsureVisible (selectableObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnsureVisible(System::Object ^ selectableObject);" />
      <MemberSignature Language="F#" Value="member this.EnsureVisible : obj -&gt; unit" Usage="workflowView.EnsureVisible selectableObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectableObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="selectableObject"><span data-ttu-id="61f34-175">表示するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61f34-175">The object to make visible.</span></span></param>
        <summary><span data-ttu-id="61f34-176">渡された <see cref="T:System.Object" /> が確実に表示されるよう、必要に応じて親オブジェクトを展開し、<see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> をスクロールします。</span><span class="sxs-lookup"><span data-stu-id="61f34-176">Ensures that the <see cref="T:System.Object" /> passed is visible, expanding parent objects and scrolling the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> as necessary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-177">操作対象のオブジェクトがワークフロー内にあって、ユーザー インターフェイス キューを必要とする場合、<xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> を使います。<xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> は、必要に応じて親オブジェクトを展開し、<xref:System.Workflow.ComponentModel.Design.WorkflowView> をスクロールして、このオブジェクトがデザイナー上に表示されるようにします。</span><span class="sxs-lookup"><span data-stu-id="61f34-177">Use <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> when you are working with an object in the workflow that requires user interface cues. <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> will expand parent objects and scroll the <xref:System.Workflow.ComponentModel.Design.WorkflowView> as necessary to make the object visible on the designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-178">次の例では、<xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> オブジェクトの <xref:System.Workflow.ComponentModel.Design.WorkflowView> メソッドを使って、<xref:System.ComponentModel.Design.ISelectionService> インターフェイスを取得しています。</span><span class="sxs-lookup"><span data-stu-id="61f34-178">The following example uses the <xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> method of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object to return an <xref:System.ComponentModel.Design.ISelectionService> interface.</span></span> <span data-ttu-id="61f34-179">サービスが存在すれば <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> が呼び出されます。このとき、現在選択状態のアクティビティが、`PrimarySelection` オブジェクトの <xref:System.ComponentModel.Design.ISelectionService> プロパティを使って渡されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-179">If the service exists, <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> is called passing the currently selected activity using the `PrimarySelection` property of the <xref:System.ComponentModel.Design.ISelectionService> object.</span></span>  
  
 [!code-csharp[wf_samples#64](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#64)]
 [!code-vb[wf_samples#64](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61f34-180"><paramref name="selectableObject" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="61f34-180"><paramref name="selectableObject" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FitToScreenSize">
      <MemberSignature Language="C#" Value="public void FitToScreenSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FitToScreenSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub FitToScreenSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FitToScreenSize();" />
      <MemberSignature Language="F#" Value="member this.FitToScreenSize : unit -&gt; unit" Usage="workflowView.FitToScreenSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61f34-181">ワークフロー デザイン サーフェイスのズーム レベルを変更して、ワークフロー全体が <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 内に表示されるようにします。</span><span class="sxs-lookup"><span data-stu-id="61f34-181">Changes the zoom level of the workflow design surface so that the entire workflow is displayed in the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-182">実際のズーム レベルは、ワークフロー デザイナーの設定にも依存します。</span><span class="sxs-lookup"><span data-stu-id="61f34-182">The actual zoom level is dependent upon the settings of the user's workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-183">スクリーン ボタンに合わせてズーム レベルを変更する例を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-183">The following example shows how to enable the fit to screen button.</span></span> <span data-ttu-id="61f34-184">このメソッドは、まずデザイナーの <xref:System.ComponentModel.Design.IDesignerHost> インターフェイスを取得し、次に <xref:System.Workflow.ComponentModel.Design.WorkflowView> オブジェクトを検索しています。そのため、<xref:System.IServiceProvider.GetService%2A> メソッドを呼び出してから、<xref:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen%2A> プロパティを変更しています。</span><span class="sxs-lookup"><span data-stu-id="61f34-184">The method first obtains the <xref:System.ComponentModel.Design.IDesignerHost> interface for the designer and then retrieves the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object by using the <xref:System.IServiceProvider.GetService%2A> method before modifying the <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnableFitToScreen%2A> property.</span></span> <span data-ttu-id="61f34-185">最後に <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> メソッドを呼び出して、ワークフロー全体を、<xref:System.Workflow.ComponentModel.Design.WorkflowView> の表示領域内に描画します。</span><span class="sxs-lookup"><span data-stu-id="61f34-185">Finally, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> method is called to display the entire workflow within the bounds of the displayable area of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 [!code-csharp[wf_samples#50](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#50)]
 [!code-vb[wf_samples#50](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#50)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)"><span data-ttu-id="61f34-186">ワークフロー追跡プロファイルデザイナー</span><span class="sxs-lookup"><span data-stu-id="61f34-186">Workflow Tracking Profile Designer</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FitToWorkflowSize">
      <MemberSignature Language="C#" Value="public void FitToWorkflowSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FitToWorkflowSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize" />
      <MemberSignature Language="VB.NET" Value="Public Sub FitToWorkflowSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FitToWorkflowSize();" />
      <MemberSignature Language="F#" Value="member this.FitToWorkflowSize : unit -&gt; unit" Usage="workflowView.FitToWorkflowSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61f34-187">ズーム レベルを 100% に変更して、ワークフローを本来の大きさで <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> に表示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-187">Changes the zoom level to one hundred percent to display the full size of the workflow in the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61f34-188">次の例では、<xref:System.Workflow.ComponentModel.Design.WorkflowView> オブジェクトのプロパティを所定の値で初期化しています。</span><span class="sxs-lookup"><span data-stu-id="61f34-188">The following example initializes the properties of a <xref:System.Workflow.ComponentModel.Design.WorkflowView> object be setting several properties.</span></span> <span data-ttu-id="61f34-189"><xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> を実行すると、<xref:System.Workflow.ComponentModel.Design.WorkflowView> オブジェクトが、ワークフローの本来の大きさで、<xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A> 内に表示されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-189">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> causes the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object to display the full size of the workflow within the <xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A>.</span></span>  
  
 [!code-csharp[wf_samples#65](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#65)]
 [!code-vb[wf_samples#65](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#65)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="protected override object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="override this.GetService : Type -&gt; obj" Usage="workflowView.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="61f34-190">取得するサービスの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-190">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="61f34-191">指定した型のサービス オブジェクトがある場合は、そのオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="61f34-191">Gets the service object of the specified type, if it is available.</span></span></summary>
        <returns><span data-ttu-id="61f34-192"><paramref name="serviceType" /> が <see langword="typeof(" /><see cref="T:System.ComponentModel.Design.CommandID" /><see langword=")" /> であれば、<see langword="GetService" /> の戻り値は所定の <see cref="T:System.ComponentModel.Design.CommandID" /> になります。そうでない場合、<see langword="GetService" /> の戻り値は、要求したサービスを実装する <see cref="T:System.Object" />、当該サービスを解決できなければ null 参照 (Visual Basic の場合は <see langword="Nothing" />) となります。</span><span class="sxs-lookup"><span data-stu-id="61f34-192">If the <paramref name="serviceType" /> is <see langword="typeof(" /><see cref="T:System.ComponentModel.Design.CommandID" /><see langword=")" /> then <see langword="GetService" /> returns a specific <see cref="T:System.ComponentModel.Design.CommandID" />; otherwise, <see langword="GetService" /> returns a <see cref="T:System.Object" /> implementing the requested service, or a null reference (<see langword="Nothing" /> in Visual Basic) if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-193">`GetService` は、要求したサービスを実装している <xref:System.Object>、サービスを解決できない場合は null 参照 (Visual Basic では `Nothing`) を返します。</span><span class="sxs-lookup"><span data-stu-id="61f34-193">`GetService` returns a <xref:System.Object> implementing the requested service, or a null reference (`Nothing`) if the service cannot be resolved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-194">次の例では、<xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> オブジェクトの <xref:System.Workflow.ComponentModel.Design.WorkflowView> メソッドを使って、<xref:System.ComponentModel.Design.ISelectionService> インターフェイスを取得しています。</span><span class="sxs-lookup"><span data-stu-id="61f34-194">The following example uses the <xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> method of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object to return an <xref:System.ComponentModel.Design.ISelectionService> interface.</span></span> <span data-ttu-id="61f34-195">サービスが存在すれば <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> が呼び出されます。このとき、現在選択状態のアクティビティが、`PrimarySelection` オブジェクトの <xref:System.ComponentModel.Design.ISelectionService> プロパティを使って渡されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-195">If the service exists, <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> is called passing the currently selected activity using the `PrimarySelection` property of the <xref:System.ComponentModel.Design.ISelectionService> object.</span></span>  
  
 [!code-csharp[wf_samples#64](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#64)]
 [!code-vb[wf_samples#64](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#64)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HScrollBar">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.HScrollBar HScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.HScrollBar HScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HScrollBar As HScrollBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::HScrollBar ^ HScrollBar { System::Windows::Forms::HScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HScrollBar : System.Windows.Forms.HScrollBar" Usage="System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-196"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> の水平スクロール バーを取得します。</span><span class="sxs-lookup"><span data-stu-id="61f34-196">Gets the horizontal scrollbar for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="61f34-197">水平スクロール バーの設定と表示の調整に使用できる <see cref="T:System.Windows.Forms.ScrollBar" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-197">A <see cref="T:System.Windows.Forms.ScrollBar" /> you can use to adjust the settings and visibility of the horizontal scrollbar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61f34-198"><xref:System.Workflow.ComponentModel.Design.WorkflowView> クラスのインスタンスを取得する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-198">The following code example demonstrates how you can obtain an instance of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> class.</span></span>  <span data-ttu-id="61f34-199">その後、このコードは <xref:System.Workflow.ComponentModel.Design.WorkflowView>、<xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> などのいくつかの <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> プロパティを設定し、<xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="61f34-199">The code then sets several <xref:System.Workflow.ComponentModel.Design.WorkflowView> properties, including <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> and <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>, and calls the <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> method.</span></span>  
  
 [!code-csharp[Wf_samples#65](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#65)]
 [!code-vb[Wf_samples#65](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#65)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)"><span data-ttu-id="61f34-200">ワークフロー追跡プロファイルデザイナー</span><span class="sxs-lookup"><span data-stu-id="61f34-200">Workflow Tracking Profile Designer</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Idle">
      <MemberSignature Language="C#" Value="public event EventHandler Idle;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Idle" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Design.WorkflowView.Idle" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Idle As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Idle;" />
      <MemberSignature Language="F#" Value="member this.Idle : EventHandler " Usage="member this.Idle : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-201"><see langword="WorkflowView" /> の処理が終了し、アイドル状態に入るときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-201">Occurs when the <see langword="WorkflowView" /> finishes processing and is about to enter the idle state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-202">スレッドがアイドル状態になる前に実行する必要があるタスクは、このイベントに結び付けます。</span><span class="sxs-lookup"><span data-stu-id="61f34-202">If you have tasks to perform before the thread becomes idle, attach them to this event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateClientRectangle">
      <MemberSignature Language="C#" Value="public void InvalidateClientRectangle (System.Drawing.Rectangle clientRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateClientRectangle(valuetype System.Drawing.Rectangle clientRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateClientRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateClientRectangle (clientRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateClientRectangle(System::Drawing::Rectangle clientRectangle);" />
      <MemberSignature Language="F#" Value="member this.InvalidateClientRectangle : System.Drawing.Rectangle -&gt; unit" Usage="workflowView.InvalidateClientRectangle clientRectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="clientRectangle"><span data-ttu-id="61f34-203">クライアント座標で表した <see cref="T:System.Drawing.Rectangle" /> 領域を無効にして、強制的に再描画されるようにします。</span><span class="sxs-lookup"><span data-stu-id="61f34-203">The <see cref="T:System.Drawing.Rectangle" />, in client coordinates, to invalidate and cause to be repainted.</span></span></param>
        <summary><span data-ttu-id="61f34-204">指定された <see cref="T:System.Drawing.Rectangle" /> を無効にして、強制的に再描画されるようにします。</span><span class="sxs-lookup"><span data-stu-id="61f34-204">Invalidates the specified <see cref="T:System.Drawing.Rectangle" /> and causes it to be repainted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-205"><xref:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateClientRectangle%2A> を実行すると、<xref:System.Drawing.Rectangle> (クライアント座標) で表された範囲が、再描画 (画面の更新) を要する領域として追加されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-205">Use <xref:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateClientRectangle%2A> to cause a <xref:System.Drawing.Rectangle>, in client coordinates, to be added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateLogicalRectangle">
      <MemberSignature Language="C#" Value="public void InvalidateLogicalRectangle (System.Drawing.Rectangle logicalRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateLogicalRectangle(valuetype System.Drawing.Rectangle logicalRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateLogicalRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateLogicalRectangle (logicalRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateLogicalRectangle(System::Drawing::Rectangle logicalRectangle);" />
      <MemberSignature Language="F#" Value="member this.InvalidateLogicalRectangle : System.Drawing.Rectangle -&gt; unit" Usage="workflowView.InvalidateLogicalRectangle logicalRectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="logicalRectangle"><span data-ttu-id="61f34-206">論理座標で表した <see cref="T:System.Drawing.Rectangle" /> 領域を無効にして、強制的に再描画されるようにします。</span><span class="sxs-lookup"><span data-stu-id="61f34-206">The <see cref="T:System.Drawing.Rectangle" />, in logical coordinates, to invalidate and cause to be repainted.</span></span></param>
        <summary><span data-ttu-id="61f34-207">指定された <see cref="T:System.Drawing.Rectangle" /> を無効にして、強制的に再描画されるようにします。</span><span class="sxs-lookup"><span data-stu-id="61f34-207">Invalidates the specified <see cref="T:System.Drawing.Rectangle" /> and causes it to be repainted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-208"><xref:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateLogicalRectangle%2A> を実行すると、<xref:System.Drawing.Rectangle> (論理座標) で表された範囲が、再描画 (画面の更新) を要する領域として追加されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-208">Use <xref:System.Workflow.ComponentModel.Design.WorkflowView.InvalidateLogicalRectangle%2A> to cause a <xref:System.Drawing.Rectangle>, in logical coordinates, to be added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="public void LoadViewState (System.IO.Stream viewState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadViewState(class System.IO.Stream viewState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadViewState (viewState As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadViewState(System::IO::Stream ^ viewState);" />
      <MemberSignature Language="F#" Value="member this.LoadViewState : System.IO.Stream -&gt; unit" Usage="workflowView.LoadViewState viewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewState" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="viewState"><span data-ttu-id="61f34-209">ビューステートを復元するときに使用する <see cref="T:System.IO.BinaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-209">A <see cref="T:System.IO.BinaryReader" /> used to restore the view state.</span></span></param>
        <summary><span data-ttu-id="61f34-210">バイナリ ストリームからビューステート情報を復元します。</span><span class="sxs-lookup"><span data-stu-id="61f34-210">Restores view-state information from a binary stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-211"><xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> は、以前 <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> メソッドで保存しておいたビューステート情報を復元します。</span><span class="sxs-lookup"><span data-stu-id="61f34-211"><xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> restores view-state information previously saved by calling the <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> method.</span></span>  
  
 <span data-ttu-id="61f34-212">カスタム デザイナーがビューの状態を復元する方法をカスタマイズする必要がある場合は、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="61f34-212">Override this method when you need to customize how a custom designer restores its view-state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-213">次の例は、`FileMode.Open` フラグを使用して <xref:System.IO.FileStream> オブジェクトを作成し、それを <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> メソッドに渡すことによって、<xref:System.Workflow.ComponentModel.Design.WorkflowView> オブジェクトのビューステートを読み込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="61f34-213">The following example demonstrates how to load the view state for a <xref:System.Workflow.ComponentModel.Design.WorkflowView> object by creating a <xref:System.IO.FileStream> object with the `FileMode.Open` flag and passing it to the <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> method.</span></span> <span data-ttu-id="61f34-214">このビューステート ファイルは、<xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> メソッドで作成されたものです。</span><span class="sxs-lookup"><span data-stu-id="61f34-214">The view state file was created using the <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> method.</span></span>  
  
 [!code-csharp[wf_samples#60](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#60)]
 [!code-vb[wf_samples#60](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#60)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalPointToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Point LogicalPointToClient (System.Drawing.Point logicalPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point LogicalPointToClient(valuetype System.Drawing.Point logicalPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalPointToClient(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalPointToClient (logicalPoint As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point LogicalPointToClient(System::Drawing::Point logicalPoint);" />
      <MemberSignature Language="F#" Value="member this.LogicalPointToClient : System.Drawing.Point -&gt; System.Drawing.Point" Usage="workflowView.LogicalPointToClient logicalPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="logicalPoint"><span data-ttu-id="61f34-215">クライアント座標に変換する <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-215">The <see cref="T:System.Drawing.Point" /> to convert to client coordinates.</span></span></param>
        <summary><span data-ttu-id="61f34-216"><see cref="T:System.Drawing.Point" /> を論理座標からクライアント座標に変換します。</span><span class="sxs-lookup"><span data-stu-id="61f34-216">Converts a <see cref="T:System.Drawing.Point" /> from logical to client coordinates.</span></span></summary>
        <returns><span data-ttu-id="61f34-217">論理座標からクライアント座標に変換された <see cref="T:System.Drawing.Point" /></span><span class="sxs-lookup"><span data-stu-id="61f34-217">The <see cref="T:System.Drawing.Point" /> converted from logical to client coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-218"><xref:System.Workflow.ComponentModel.Design.WorkflowView> は、2 つの座標空間、つまり論理座標とクライアント座標を使用します。</span><span class="sxs-lookup"><span data-stu-id="61f34-218"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="61f34-219">クライアント座標は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> の左上隅を起点とした相対座標です。</span><span class="sxs-lookup"><span data-stu-id="61f34-219">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="61f34-220">左上隅の座標は (0,0) です。x 座標と y 座標は、それぞれ表示可能領域の右方向と下方向に進むにつれて数値が大きくなります。</span><span class="sxs-lookup"><span data-stu-id="61f34-220">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="61f34-221">クライアント座標系は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> のズーム レベルとスクロール バーの位置の影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="61f34-221">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="61f34-222">論理座標系では、オブジェクトは常に (0,0) にマッピングされます。</span><span class="sxs-lookup"><span data-stu-id="61f34-222">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="61f34-223">横方向と縦方向の位置は、ズームやスクロール バーの位置の影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="61f34-223">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalPointToScreen">
      <MemberSignature Language="C#" Value="public System.Drawing.Point LogicalPointToScreen (System.Drawing.Point logicalPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point LogicalPointToScreen(valuetype System.Drawing.Point logicalPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalPointToScreen(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalPointToScreen (logicalPoint As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point LogicalPointToScreen(System::Drawing::Point logicalPoint);" />
      <MemberSignature Language="F#" Value="member this.LogicalPointToScreen : System.Drawing.Point -&gt; System.Drawing.Point" Usage="workflowView.LogicalPointToScreen logicalPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="logicalPoint"><span data-ttu-id="61f34-224">画面座標に変換する <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-224">The <see cref="T:System.Drawing.Point" /> to convert to screen coordinates.</span></span></param>
        <summary><span data-ttu-id="61f34-225"><see cref="T:System.Drawing.Point" /> を論理座標から画面座標に変換します。</span><span class="sxs-lookup"><span data-stu-id="61f34-225">Converts a <see cref="T:System.Drawing.Point" /> from logical to screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="61f34-226">論理座標から画面座標に変換された <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-226">A <see cref="T:System.Drawing.Point" /> converted from logical to screen coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-227"><xref:System.Workflow.ComponentModel.Design.WorkflowView> は、2 つの座標空間、つまり論理座標とクライアント座標を使用します。</span><span class="sxs-lookup"><span data-stu-id="61f34-227"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="61f34-228">クライアント座標は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> の左上隅を起点とした相対座標です。</span><span class="sxs-lookup"><span data-stu-id="61f34-228">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="61f34-229">左上隅の座標は (0,0) です。x 座標と y 座標は、それぞれ表示可能領域の右方向と下方向に進むにつれて数値が大きくなります。</span><span class="sxs-lookup"><span data-stu-id="61f34-229">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="61f34-230">クライアント座標系は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> のズーム レベルとスクロール バーの位置の影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="61f34-230">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="61f34-231">論理座標系では、オブジェクトは常に (0,0) にマッピングされます。</span><span class="sxs-lookup"><span data-stu-id="61f34-231">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="61f34-232">横方向と縦方向の位置は、ズームやスクロール バーの位置の影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="61f34-232">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalRectangleToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle LogicalRectangleToClient (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle LogicalRectangleToClient(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalRectangleToClient(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalRectangleToClient (rectangle As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle LogicalRectangleToClient(System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="member this.LogicalRectangleToClient : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="workflowView.LogicalRectangleToClient rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle"><span data-ttu-id="61f34-233">クライアント座標に変換する <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-233">The <see cref="T:System.Drawing.Rectangle" /> to convert to client coordinates.</span></span></param>
        <summary><span data-ttu-id="61f34-234"><see cref="T:System.Drawing.Rectangle" /> を論理座標からクライアント座標に変換します。</span><span class="sxs-lookup"><span data-stu-id="61f34-234">Converts a <see cref="T:System.Drawing.Rectangle" /> from logical to client coordinates.</span></span></summary>
        <returns><span data-ttu-id="61f34-235">論理座標からクライアント座標に変換された <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-235">A <see cref="T:System.Drawing.Rectangle" /> converted from logical to client coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-236"><xref:System.Workflow.ComponentModel.Design.WorkflowView> は、2 つの座標空間、つまり論理座標とクライアント座標を使用します。</span><span class="sxs-lookup"><span data-stu-id="61f34-236"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="61f34-237">クライアント座標は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> の左上隅を起点とした相対座標です。</span><span class="sxs-lookup"><span data-stu-id="61f34-237">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="61f34-238">左上隅の座標は (0,0) です。x 座標と y 座標は、それぞれ表示可能領域の右方向と下方向に進むにつれて数値が大きくなります。</span><span class="sxs-lookup"><span data-stu-id="61f34-238">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="61f34-239">クライアント座標系は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> のズーム レベルとスクロール バーの位置の影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="61f34-239">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="61f34-240">論理座標系では、オブジェクトは常に (0,0) にマッピングされます。</span><span class="sxs-lookup"><span data-stu-id="61f34-240">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="61f34-241">横方向と縦方向の位置は、ズームやスクロール バーの位置の影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="61f34-241">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalSizeToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Size LogicalSizeToClient (System.Drawing.Size logicalSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size LogicalSizeToClient(valuetype System.Drawing.Size logicalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.LogicalSizeToClient(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalSizeToClient (logicalSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size LogicalSizeToClient(System::Drawing::Size logicalSize);" />
      <MemberSignature Language="F#" Value="member this.LogicalSizeToClient : System.Drawing.Size -&gt; System.Drawing.Size" Usage="workflowView.LogicalSizeToClient logicalSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="logicalSize"><span data-ttu-id="61f34-242">クライアント座標に変換する <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-242">The <see cref="T:System.Drawing.Size" /> to convert to client coordinates.</span></span></param>
        <summary><span data-ttu-id="61f34-243"><see cref="T:System.Drawing.Size" /> を論理座標からクライアント座標に変換します。</span><span class="sxs-lookup"><span data-stu-id="61f34-243">Converts a <see cref="T:System.Drawing.Size" /> from logical to client coordinates.</span></span></summary>
        <returns><span data-ttu-id="61f34-244">論理座標からクライアント座標に変換された <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-244">A <see cref="T:System.Drawing.Size" /> converted from logical to client coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-245"><xref:System.Workflow.ComponentModel.Design.WorkflowView> は、2 つの座標空間、つまり論理座標とクライアント座標を使用します。</span><span class="sxs-lookup"><span data-stu-id="61f34-245"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
-   <span data-ttu-id="61f34-246">クライアント座標は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> の左上隅を起点とした相対座標です。</span><span class="sxs-lookup"><span data-stu-id="61f34-246">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="61f34-247">左上隅の座標は (0,0) です。x 座標と y 座標は、それぞれ表示可能領域の右方向と下方向に進むにつれて数値が大きくなります。</span><span class="sxs-lookup"><span data-stu-id="61f34-247">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="61f34-248">クライアント座標系は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> のズーム レベルとスクロール バーの位置の影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="61f34-248">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="61f34-249">論理座標系では、オブジェクトは常に (0,0) にマッピングされます。</span><span class="sxs-lookup"><span data-stu-id="61f34-249">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="61f34-250">横方向と縦方向の位置は、ズームやスクロール バーの位置の影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="61f34-250">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnControlAdded">
      <MemberSignature Language="C#" Value="protected override void OnControlAdded (System.Windows.Forms.ControlEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnControlAdded(class System.Windows.Forms.ControlEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnControlAdded (e As ControlEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnControlAdded(System::Windows::Forms::ControlEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnControlAdded : System.Windows.Forms.ControlEventArgs -&gt; unit" Usage="workflowView.OnControlAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ControlEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-251">イベント データを格納している <see cref="T:System.Windows.Forms.ControlEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-251">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="61f34-252">コントロールが <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> に追加されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-252">Occurs when a control is added to the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-253"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnControlAdded%2A> は、子コントロールが <xref:System.Workflow.ComponentModel.Design.WorkflowView> に追加されたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-253"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnControlAdded%2A> is called when a child control is added to the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="61f34-254">追加できる子コントロールは、<xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> または <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> に限ります。</span><span class="sxs-lookup"><span data-stu-id="61f34-254">The only child controls allowed are <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> and <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> controls.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="61f34-255">追加されたコントロールが <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" /> でも <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" /> でもない場合。</span><span class="sxs-lookup"><span data-stu-id="61f34-255">If the control added is not a <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar" /> or <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected override void OnDragDrop (System.Windows.Forms.DragEventArgs dragEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs dragEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragDrop (dragEventArgs As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragDrop(System::Windows::Forms::DragEventArgs ^ dragEventArgs);" />
      <MemberSignature Language="F#" Value="override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="workflowView.OnDragDrop dragEventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEventArgs" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEventArgs"><span data-ttu-id="61f34-256">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-256">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="61f34-257">ドラッグされていた項目が <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> にドロップされると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-257">Occurs when a dragged item is dropped onto the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-258"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragDrop%2A> は、ドラッグ操作中、<xref:System.Workflow.ComponentModel.Design.WorkflowView> 上でマウス ボタンを離したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-258"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragDrop%2A> occurs when the user releases the mouse button over the <xref:System.Workflow.ComponentModel.Design.WorkflowView> during a drag operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.Forms.DragEventArgs dragEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs dragEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (dragEventArgs As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::Forms::DragEventArgs ^ dragEventArgs);" />
      <MemberSignature Language="F#" Value="override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="workflowView.OnDragEnter dragEventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEventArgs" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEventArgs"><span data-ttu-id="61f34-259">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-259">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="61f34-260">オブジェクトが <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> の境界を越えて入って来たときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-260">Occurs when an item is dragged into the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-261"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter%2A> は、ドラッグ操作中、マウス カーソルが <xref:System.Workflow.ComponentModel.Design.WorkflowView> 内に入ってきたときに 1 回だけ発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-261"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter%2A> occurs when the user first drags the mouse cursor over the <xref:System.Workflow.ComponentModel.Design.WorkflowView> during a drag operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragLeave : EventArgs -&gt; unit" Usage="workflowView.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-262">イベントに対してデータを提供する <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-262">A <see cref="T:System.EventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="61f34-263">ドラッグ操作中、マウス カーソルが <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> の外に出たときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-263">Occurs when the cursor leaves the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> during a drag operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-264"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> は、ドラッグ操作中、マウス カーソルが <xref:System.Workflow.ComponentModel.Design.WorkflowView> の外に出たときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-264"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> occurs when the user drags the mouse cursor out of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> during a drag operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.Forms.DragEventArgs dragEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs dragEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (dragEventArgs As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::Forms::DragEventArgs ^ dragEventArgs);" />
      <MemberSignature Language="F#" Value="override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="workflowView.OnDragOver dragEventArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dragEventArgs" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="dragEventArgs"><span data-ttu-id="61f34-265">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.DragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-265">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="61f34-266">ドラッグ アンド ドロップの操作中、マウス ポインターが <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> の境界内にあると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-266">Occurs when a drag-drop operation is in progress and the pointer is within the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-267"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> は、マウス カーソルが <xref:System.Workflow.ComponentModel.Design.WorkflowView> の境界内で移動すると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-267"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> occurs when the mouse cursor moves within bounds of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected override void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs gfbevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs gfbevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGiveFeedback (gfbevent As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ gfbevent);" />
      <MemberSignature Language="F#" Value="override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="workflowView.OnGiveFeedback gfbevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gfbevent" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="gfbevent"><span data-ttu-id="61f34-268">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-268">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="61f34-269">ドラッグ操作中に発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-269">Occurs during a drag operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-270"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> は、ドラッグ操作が始まると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-270"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> occurs when a drag operation is started.</span></span> <span data-ttu-id="61f34-271"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> は、ドラッグ対象に応じてマウス ポインターの外観を変え、何をドラッグしているのか目で見て確認できるようにするために使います。</span><span class="sxs-lookup"><span data-stu-id="61f34-271"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> allows the source of a drag operation to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="workflowView.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-272">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.KeyEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-272">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="61f34-273"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> にフォーカスがあるときにキーが押されると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-273">Occurs when a key is pressed while the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-274"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyDown%2A> は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> にフォーカスがあるときにキーが押されると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-274"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyDown%2A> occurs when a key is pressed while the <xref:System.Workflow.ComponentModel.Design.WorkflowView> has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="workflowView.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-275">イベントに関するデータを提供する <see cref="T:System.Windows.Forms.KeyEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-275">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that provides data about the event.</span></span></param>
        <summary><span data-ttu-id="61f34-276"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> にフォーカスがあるときにキーが放されると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-276">Occurs when a key is released while the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-277"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyUp%2A> は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> にフォーカスがあるときにキーが放されると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-277"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnKeyUp%2A> occurs when a key is released while the <xref:System.Workflow.ComponentModel.Design.WorkflowView> has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="workflowView.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent"><span data-ttu-id="61f34-278">イベントに対してデータを提供する <see cref="T:System.Windows.Forms.LayoutEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-278">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that provides data for the event.</span></span></param>
        <summary><span data-ttu-id="61f34-279"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> が子コントロールの位置を変更する必要があるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-279">Occurs when the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> should reposition child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-280"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnLayout%2A> は、子コントロールが追加または削除されるとき、<xref:System.Workflow.ComponentModel.Design.WorkflowView> の境界が変更されるとき、および <xref:System.Workflow.ComponentModel.Design.WorkflowView> のレイアウトに影響を与える可能性があるその他の変化が発生するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-280"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnLayout%2A> occurs when child controls are added or removed, when the bounds of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> changes, and when other changes occur that can affect the layout of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected override void OnMouseCaptureChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseCaptureChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseCaptureChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseCaptureChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseCaptureChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseCaptureChanged : EventArgs -&gt; unit" Usage="workflowView.OnMouseCaptureChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-281">イベントに関するデータを提供する <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-281">A <see cref="T:System.EventArgs" /> that provides data about the event.</span></span></param>
        <summary><span data-ttu-id="61f34-282">マウスをドラッグして選択された項目が変わったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-282">Occurs when the items selected by dragging the mouse changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-283"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseCaptureChanged%2A> は、マウス操作により選択されている項目に、変化が生じたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-283"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseCaptureChanged%2A> occurs when the user makes a selection with the mouse that differs from any existing selection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected override void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-284">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-284">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="61f34-285"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> をダブルクリックしたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-285">Occurs when the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> is double-clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-286">オペレーティング システムのマウス設定に応じて、ダブルクリックが決定されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-286">The double-click is determined by the mouse settings of the operating system.</span></span> <span data-ttu-id="61f34-287">ユーザーは、2 回のクリックではなくダブルクリックと見なされるマウス ボタンのクリック間隔を設定できます。</span><span class="sxs-lookup"><span data-stu-id="61f34-287">The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-288">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-288">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="61f34-289"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 上にマウス ポインターを置いてマウス ボタンを押したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-289">Occurs when the mouse pointer is over the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> and a mouse button is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-290">マウス イベントは次の順序で発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-290">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="61f34-291">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-291">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="61f34-292">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-292">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="61f34-293">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>/ <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> または <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-293">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>/ <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="61f34-294">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-294">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="61f34-295">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-295">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="61f34-296">`OnMouseEnter` は、マウス ポインターが <xref:System.Workflow.ComponentModel.Design.WorkflowView> に入ったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-296">`OnMouseEnter` occurs when the mouse pointer enters the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 <span data-ttu-id="61f34-297">`OnMouseDown` は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> 上にマウス ポインターを置いてマウス ボタンを押したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-297">`OnMouseDown` occurs when the mouse pointer is over the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and a mouse button is pressed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="workflowView.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-298">イベントに関する情報を格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-298">An <see cref="T:System.EventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="61f34-299">マウス ポインターが <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> に入ると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-299">Occurs when the mouse pointer enters the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-300">マウス イベントは次の順序で発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-300">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="61f34-301">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-301">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="61f34-302">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-302">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="61f34-303">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> または <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-303">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="61f34-304">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-304">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="61f34-305">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-305">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="61f34-306"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A> は、マウス ポインターが <xref:System.Workflow.ComponentModel.Design.WorkflowView> に入ったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-306"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A> occurs when the mouse pointer enters the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected override void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseHover : EventArgs -&gt; unit" Usage="workflowView.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-307">イベントに関する情報を格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-307">A <see cref="T:System.EventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="61f34-308">マウス ポインターが <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> の上に置かれたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-308">Occurs when the mouse hovers over the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-309">マウス イベントは次の順序で発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-309">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="61f34-310">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-310">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="61f34-311">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-311">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="61f34-312">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> または <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-312">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="61f34-313">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-313">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="61f34-314">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-314">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="61f34-315"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> は、マウス ポインターが <xref:System.Workflow.ComponentModel.Design.WorkflowView> の上に置かれたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-315"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> occurs when the mouse pointer hovers over the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="workflowView.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-316">イベントに関する情報を格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-316">A <see cref="T:System.EventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="61f34-317">マウス ポインターが <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> から出ると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-317">Occurs when the mouse pointer leaves the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-318">マウス イベントは次の順序で発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-318">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="61f34-319">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-319">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="61f34-320">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-320">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="61f34-321">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> または <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-321">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="61f34-322">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-322">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="61f34-323">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-323">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="61f34-324"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A> は、マウス ポインターが <xref:System.Workflow.ComponentModel.Design.WorkflowView> から離れると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-324"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A> occurs when the mouse pointer leaves the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-325">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-325">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="61f34-326">マウス ポインターが <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 上で移動すると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-326">Occurs when the mouse moves over the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-327">マウス イベントは次の順序で発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-327">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="61f34-328">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-328">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="61f34-329">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-329">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="61f34-330">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> または <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-330">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="61f34-331">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-331">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="61f34-332">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-332">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="61f34-333"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A> は、マウス ポインターが <xref:System.Workflow.ComponentModel.Design.WorkflowView> 上を移動すると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-333"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A> occurs when the mouse pointer moves over the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-334">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-334">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="61f34-335"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 上にマウス ポインターがある状態でマウス ボタンが放されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-335">Occurs when a mouse button is released over the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-336">マウス イベントは次の順序で発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-336">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="61f34-337">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-337">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="61f34-338">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-338">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="61f34-339">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> または <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-339">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="61f34-340">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-340">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="61f34-341">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-341">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="61f34-342"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A> は、マウス ポインターが <xref:System.Workflow.ComponentModel.Design.WorkflowView> 上にあり、ユーザーがマウス ボタンを離したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-342"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A> occurs when the mouse pointer is over the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and a button is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="workflowView.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-343">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.MouseEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-343">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="61f34-344"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> にフォーカスがあるときにマウス ホイールが動くと発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-344">Occurs when the mouse wheel moves when the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-345">マウス イベントは次の順序で発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-345">Mouse events occur in the following order:</span></span>  
  
 <span data-ttu-id="61f34-346">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-346">1.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseEnter%2A></span></span>  
  
 <span data-ttu-id="61f34-347">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-347">2.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseMove%2A></span></span>  
  
 <span data-ttu-id="61f34-348">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> または <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-348">3.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseHover%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseDown%2A> or <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A></span></span>  
  
 <span data-ttu-id="61f34-349">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-349">4.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseUp%2A></span></span>  
  
 <span data-ttu-id="61f34-350">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span><span class="sxs-lookup"><span data-stu-id="61f34-350">5.<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseLeave%2A></span></span>  
  
 <span data-ttu-id="61f34-351"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A> は、マウス ホイールが <xref:System.Workflow.ComponentModel.Design.WorkflowView> 上を移動すると発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-351"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnMouseWheel%2A> occurs when the mouse wheel is moved over the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="workflowView.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="61f34-352">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.PaintEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-352">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="61f34-353"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> が再描画されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-353">Occurs when the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> is redrawn.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-354"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnPaint%2A> は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> が再描画されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-354"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnPaint%2A> occurs when the <xref:System.Workflow.ComponentModel.Design.WorkflowView> is redrawn.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected override void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs qcdevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs qcdevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryContinueDrag (qcdevent As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryContinueDrag(System::Windows::Forms::QueryContinueDragEventArgs ^ qcdevent);" />
      <MemberSignature Language="F#" Value="override this.OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="workflowView.OnQueryContinueDrag qcdevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qcdevent" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="qcdevent"><span data-ttu-id="61f34-355">イベントに関する情報を格納している <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-355">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains information about the event.</span></span></param>
        <summary><span data-ttu-id="61f34-356">ドラッグ アンド ドロップ操作中に発生し、ドラッグ ソースがドラッグ アンド ドロップ オプションをキャンセルする必要があるかどうかを決定できるようにします。</span><span class="sxs-lookup"><span data-stu-id="61f34-356">Occurs during a drag operation and allows the drag source to determine whether the drag option should be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-357"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> イベントは、ドラッグ操作中、キーボードまたはマウス ボタンの状態に変更があったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-357">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> event is raised when there is a change in the keyboard or mouse button state during a drag operation.</span></span> <span data-ttu-id="61f34-358"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> イベントにより、ドラッグ ソースはドラッグ操作をキャンセルする必要があるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="61f34-358">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> event allows the drag source to determine whether the drag operation should be canceled.</span></span>  
  
 <span data-ttu-id="61f34-359">ドラッグ操作に関連するイベントは、当該コントロール上にドロップしてよい場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-359">Events related to drag operations are raised when the control is a valid drop target.</span></span> <span data-ttu-id="61f34-360"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> イベントが発生する場合、ドラッグ効果を表す値が渡されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-360">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> event is raised with the drag effect specified.</span></span> <span data-ttu-id="61f34-361">ドラッグ効果の一覧については、<xref:System.Windows.Forms.DragDropEffects> 列挙体を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-361">For a list of drag effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="61f34-362">マウス カーソルの位置、キーボードの状態、およびマウス ボタンの状態の変更が監視されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-362">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="61f34-363">ユーザーがウィンドウの外に移動した場合、<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> イベントが生成されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-363">If the user moves out of a window, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> event is raised.</span></span>  
  
-   <span data-ttu-id="61f34-364">マウスが別のコントロールに移動した場合は、そのコントロールの <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter%2A> が生成されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-364">If the mouse enters another control, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragEnter%2A> for that control is raised.</span></span>  
  
-   <span data-ttu-id="61f34-365">マウスが移動しても同じコントロール内の場合は、<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> イベントが生成されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-365">If the mouse moves but stays within the same control, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> event is raised.</span></span>  
  
 <span data-ttu-id="61f34-366">キーボードまたはマウス ボタンの状態に変更があった場合、<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> イベントが生成され、このイベントの `Action` の <xref:System.Windows.Forms.QueryContinueDragEventArgs> プロパティの値に応じて、ドラッグを継続するか、データをドロップするか、操作をキャンセルするかが判断されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-366">If there is a change in the keyboard or mouse button state, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the `Action` property of the event <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
 <span data-ttu-id="61f34-367">値が `DragAction.Continue` の場合、操作を継続するための <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> イベントが発生し、適切な視覚的フィードバックを設定できるように新しい効果が指定された <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-367">If the value is `DragAction.Continue`, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> event is raised to continue the operation and the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="61f34-368">有効なドロップ効果の一覧については、<xref:System.Windows.Forms.DragDropEffects> 列挙体を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-368">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="61f34-369"><xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> イベントおよび <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> イベントはペアになっています。したがって、マウスがドロップ ターゲットをまたがって移動した場合、マウスの位置に関する最新のフィードバックがユーザーに提示されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-369">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragOver%2A> and <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnGiveFeedback%2A> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse position.</span></span>  
  
 <span data-ttu-id="61f34-370">値が `DragAction.Drop` の場合は、ドロップ効果の値がソースに返されます。ソース アプリケーションでは、ソース データに対して適切な操作を実行できます。たとえば、移動操作だった場合は、データの切り取りなどを実行できます。</span><span class="sxs-lookup"><span data-stu-id="61f34-370">If the value is `DragAction.Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
 <span data-ttu-id="61f34-371">値が `DragAction.Cancel` の場合、<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-371">If the value is `DragAction.Cancel`, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnDragLeave%2A> event is raised.</span></span>  
  
 <span data-ttu-id="61f34-372">既定では、Esc キーが押された場合、<xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> イベントは `Action` を `DragAction.Cancel` に設定します。また、マウスの左右または中央のボタンが押された場合は `Action` を `DragAction.Drop` に設定します。</span><span class="sxs-lookup"><span data-stu-id="61f34-372">By default, the <xref:System.Workflow.ComponentModel.Design.WorkflowView.OnQueryContinueDrag%2A> event sets `Action` to `DragAction.Cancel` if the ESC key was pressed and sets `Action` to `DragAction.Drop` if the left, middle, or right mouse button is pressed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRootDesignerChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRootDesignerChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRootDesignerChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnRootDesignerChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRootDesignerChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRootDesignerChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnRootDesignerChanged : unit -&gt; unit&#xA;override this.OnRootDesignerChanged : unit -&gt; unit" Usage="workflowView.OnRootDesignerChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61f34-373">デザイン サーフェイスの新しいルート デザイナーとして、別のデザイナーが設定されたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-373">Called when a different designer is set as the new root designer of the design surface.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnZoomChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnZoomChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnZoomChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.OnZoomChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnZoomChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnZoomChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnZoomChanged : unit -&gt; unit&#xA;override this.OnZoomChanged : unit -&gt; unit" Usage="workflowView.OnZoomChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61f34-374">ズーム レベルが変わったときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-374">Called when the zoom level is changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="public void PerformLayout (bool immediateUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLayout(bool immediateUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.PerformLayout(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformLayout (immediateUpdate As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformLayout(bool immediateUpdate);" />
      <MemberSignature Language="F#" Value="override this.PerformLayout : bool -&gt; unit" Usage="workflowView.PerformLayout immediateUpdate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="immediateUpdate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="immediateUpdate"><span data-ttu-id="61f34-375"><see langword="true" /> ならば直ちにレイアウトが更新されます。そうでない場合は <see langword="false" /> を指定します。</span><span class="sxs-lookup"><span data-stu-id="61f34-375"><see langword="true" /> to cause the layout to update immediately; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="61f34-376"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> がレイアウト ロジックをすべての子コントロールに適用するように強制します。</span><span class="sxs-lookup"><span data-stu-id="61f34-376">Forces the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> to apply layout logic to all its child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-377"><xref:System.Workflow.ComponentModel.Design.WorkflowView.PerformLayout%2A> は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> 内のすべての子コントロールを更新し、必要に応じてそれらのコントロールをサイズ変更したり移動したりします。</span><span class="sxs-lookup"><span data-stu-id="61f34-377"><xref:System.Workflow.ComponentModel.Design.WorkflowView.PerformLayout%2A> updates all child controls in the <xref:System.Workflow.ComponentModel.Design.WorkflowView>, resizing and moving them as necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintDocument">
      <MemberSignature Language="C#" Value="public System.Drawing.Printing.PrintDocument PrintDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Printing.PrintDocument PrintDocument" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrintDocument As PrintDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Printing::PrintDocument ^ PrintDocument { System::Drawing::Printing::PrintDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrintDocument : System.Drawing.Printing.PrintDocument" Usage="System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Printing.PrintDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-378"><see cref="T:System.Drawing.Printing.PrintDocument" /> に関連付けられている <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="61f34-378">Gets the <see cref="T:System.Drawing.Printing.PrintDocument" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="61f34-379">プリンターに出力を送信する <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="61f34-379">A <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument" /> object that sends output to a printer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-380"><xref:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument%2A> オブジェクトを使って印刷方法を表すプロパティを設定し、`Print` メソッドを呼び出して印刷を開始します。</span><span class="sxs-lookup"><span data-stu-id="61f34-380">Use the <xref:System.Workflow.ComponentModel.Design.WorkflowView.PrintDocument%2A> object to set the properties that describe how to print, and call the `Print` method to start the printing process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-381"><xref:System.Drawing.Printing.PrintDocument> オブジェクトを検索し、<xref:System.Windows.Forms.PrintDialog> を表示し、ここで選択された <xref:System.Drawing.Printing.PrinterSettings> に基づいてドキュメントを印刷する例を示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-381">The following example demonstrates how to retrieve the <xref:System.Drawing.Printing.PrintDocument> object, display a <xref:System.Windows.Forms.PrintDialog> and associate the <xref:System.Drawing.Printing.PrinterSettings> that were selected by a user before printing the document.</span></span>  
  
 [!code-csharp[Wf_samples#56](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#56)]
 [!code-vb[Wf_samples#56](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#56)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintPreviewMode">
      <MemberSignature Language="C#" Value="public bool PrintPreviewMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintPreviewMode" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.PrintPreviewMode" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintPreviewMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PrintPreviewMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PrintPreviewMode : bool with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.PrintPreviewMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-382"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> が印刷プレビュー モードかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61f34-382">Gets or sets the print preview mode of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="61f34-383">印刷プレビュー モードがアクティブであれば <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-383"><see langword="true" /> if print preview mode is active; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="61f34-384">現在のワークフローを印刷プレビュー モードで表示するよう、WorkflowView オブジェクトを変更する例を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-384">The following example shows how to change the WorkflowView object so that it displays the current workflow in print preview mode.</span></span>  
  
 [!code-csharp[wf_samples#57](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#57)]
 [!code-vb[wf_samples#57](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#57)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDesignerMessageFilter">
      <MemberSignature Language="C#" Value="public void RemoveDesignerMessageFilter (System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter designerMessageFilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveDesignerMessageFilter(class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter designerMessageFilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.RemoveDesignerMessageFilter(System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveDesignerMessageFilter (designerMessageFilter As WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveDesignerMessageFilter(System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^ designerMessageFilter);" />
      <MemberSignature Language="F#" Value="member this.RemoveDesignerMessageFilter : System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter -&gt; unit" Usage="workflowView.RemoveDesignerMessageFilter designerMessageFilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerMessageFilter" Type="System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />
      </Parameters>
      <Docs>
        <param name="designerMessageFilter"><span data-ttu-id="61f34-385"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> から削除する <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-385">The <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> to remove from the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></param>
        <summary><span data-ttu-id="61f34-386">関連する <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" /> を削除します。</span><span class="sxs-lookup"><span data-stu-id="61f34-386">Removes an associated <see cref="T:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-387"><xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> は、ドラッグなどのデザイナー イベントに応答するために使います。</span><span class="sxs-lookup"><span data-stu-id="61f34-387">Use a <xref:System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter> to respond to designer events, such as drag events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootDesigner">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.ActivityDesigner RootDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesigner RootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.RootDesigner" />
      <MemberSignature Language="VB.NET" Value="Public Property RootDesigner As ActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::ActivityDesigner ^ RootDesigner { System::Workflow::ComponentModel::Design::ActivityDesigner ^ get(); void set(System::Workflow::ComponentModel::Design::ActivityDesigner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootDesigner : System.Workflow.ComponentModel.Design.ActivityDesigner with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.RootDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-388"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> のルート デザイナーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61f34-388">Gets or sets the root designer for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="61f34-389"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> に関連付けられている <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-389">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-390">ワークフローのルート デザイナーとは、そのデザイン サーフェイスに関連付けられたデザイナーのことです。</span><span class="sxs-lookup"><span data-stu-id="61f34-390">The root designer of the workflow is the designer associated with the design surface of the workflow.</span></span> <span data-ttu-id="61f34-391">子デザイナーがすべて含まれるほか、ワークフローでこれ以降発生するアクティビティもすべてこのルート デザイナーに属します。</span><span class="sxs-lookup"><span data-stu-id="61f34-391">It contains all child designers, and subsequently all activities in the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-392">WorkflowView オブジェクトの RootDesigner を取得する例を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-392">The following example shows how to retrieve the RootDesigner of a WorkflowView object.</span></span> <span data-ttu-id="61f34-393">workflowPanel フィールドには GetWorkflowView という名前のメソッドがあり、これを使ってアクティブな WorkflowView インスタンスを取得できます。</span><span class="sxs-lookup"><span data-stu-id="61f34-393">The workflowPanel field contains a method named GetWorkflowView that returns the active WorkflowView instance.</span></span> <span data-ttu-id="61f34-394">RootDesigner を SequentialWorkflowRootDesigner にキャストすると、アクションはすべて、このオブジェクトに対して働くようになります。</span><span class="sxs-lookup"><span data-stu-id="61f34-394">The RootDesigner is then cast to a SequentialWorkflowRootDesigner before any action is taken on it.</span></span>  
  
 <span data-ttu-id="61f34-395">このコード例は、DesignerShell.cs ファイルから抜粋した Basic DesignerHosting の SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="61f34-395">This code example is part of the Basic DesignerHosting SDK Sample from the DesignerShell.cs file.</span></span> <span data-ttu-id="61f34-396">詳細については、「[基本的なデザイナーホスティングのサンプル](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741708(v=vs.90))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-396">For more information, see [Basic Designer Hosting Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741708(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#236](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#236)]
 [!code-vb[wf_samples#236](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#236)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootDesignerChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RootDesignerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RootDesignerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Design.WorkflowView.RootDesignerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RootDesignerChanged As EventHandler " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RootDesignerChanged;" />
      <MemberSignature Language="F#" Value="member this.RootDesignerChanged : EventHandler " Usage="member this.RootDesignerChanged : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event RootDesignerChanged As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-397">ルート デザイナーが変わったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-397">Raised when the root designer is changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="public void SaveViewState (System.IO.Stream viewState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveViewState(class System.IO.Stream viewState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveViewState (viewState As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveViewState(System::IO::Stream ^ viewState);" />
      <MemberSignature Language="F#" Value="member this.SaveViewState : System.IO.Stream -&gt; unit" Usage="workflowView.SaveViewState viewState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewState" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="viewState"><span data-ttu-id="61f34-398">ビューステートを保存するために使用する <see cref="T:System.IO.BinaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-398">A <see cref="T:System.IO.BinaryReader" /> used to store the view state.</span></span></param>
        <summary><span data-ttu-id="61f34-399">ビューステートをバイナリ ストリームに保存します。</span><span class="sxs-lookup"><span data-stu-id="61f34-399">Saves the view-state to a binary stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-400">ビューステートとは、ビューのプロパティおよび子コントロールの値を累積したものです。</span><span class="sxs-lookup"><span data-stu-id="61f34-400">View state is the accumulation of the values of the properties and child controls of a view.</span></span> <span data-ttu-id="61f34-401">プロパティ値をストリームとして保存しておけば、いつでも <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> メソッドで復元することができます。</span><span class="sxs-lookup"><span data-stu-id="61f34-401">Property values are persisted to the stream after saving and can be restored using the <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-402"><xref:System.Workflow.ComponentModel.Design.WorkflowView> オブジェクトのビューステートを保存する例を以下に示します。<xref:System.IO.FileStream> フラグを指定して `FileMode.Create` オブジェクトを作成し、これを <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> メソッドに渡しています。</span><span class="sxs-lookup"><span data-stu-id="61f34-402">The following example demonstrates saving the view state for a <xref:System.Workflow.ComponentModel.Design.WorkflowView> object by creating a <xref:System.IO.FileStream> object using the `FileMode.Create` flag and passing it to the <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveViewState%2A> method.</span></span> <span data-ttu-id="61f34-403">後でこのビューステートを読み込む方法については、<xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A> を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-403">To load this view state at a later time, see <xref:System.Workflow.ComponentModel.Design.WorkflowView.LoadViewState%2A>.</span></span>  
  
 [!code-csharp[wf_samples#59](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#59)]
 [!code-vb[wf_samples#59](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#59)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveWorkflowImage">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="61f34-404"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> の画像を指定された形式で保存します。</span><span class="sxs-lookup"><span data-stu-id="61f34-404">Saves an image of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> based on the specified image format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveWorkflowImage">
      <MemberSignature Language="C#" Value="public void SaveWorkflowImage (System.IO.Stream stream, System.Drawing.Imaging.ImageFormat imageFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveWorkflowImage(class System.IO.Stream stream, class System.Drawing.Imaging.ImageFormat imageFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage(System.IO.Stream,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkflowImage (stream As Stream, imageFormat As ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveWorkflowImage(System::IO::Stream ^ stream, System::Drawing::Imaging::ImageFormat ^ imageFormat);" />
      <MemberSignature Language="F#" Value="member this.SaveWorkflowImage : System.IO.Stream * System.Drawing.Imaging.ImageFormat -&gt; unit" Usage="workflowView.SaveWorkflowImage (stream, imageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="imageFormat" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="61f34-405">ワークフロー ビューを画像として保存するための <see cref="T:System.IO.Stream" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-405">The <see cref="T:System.IO.Stream" /> to save the workflow view image to.</span></span></param>
        <param name="imageFormat"><span data-ttu-id="61f34-406">ワークフロー ビューのイメージの保存に使用する <see cref="T:System.Drawing.Imaging.ImageFormat" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-406">The <see cref="T:System.Drawing.Imaging.ImageFormat" /> to use to save the workflow view image.</span></span></param>
        <summary><span data-ttu-id="61f34-407"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> の画像を、指定されたストリームに、指定された形式で保存します。</span><span class="sxs-lookup"><span data-stu-id="61f34-407">Saves an image of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> to the specified stream using the specified image format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-408">ワークフロー ビューのイメージはビットマップとして作成されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-408">The workflow view image is created as a bitmap.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-409">現在開いているワークフローを、画像として <xref:System.IO.Stream> に保存する例を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-409">The following example shows how to save the currently loaded workflow image using a <xref:System.IO.Stream>.</span></span> <span data-ttu-id="61f34-410">この例では、<xref:System.Windows.Forms.SaveFileDialog> を作成して、保存先ファイル名をユーザーにたずねています。</span><span class="sxs-lookup"><span data-stu-id="61f34-410">In this example, a <xref:System.Windows.Forms.SaveFileDialog> is created to prompt the user for the filename of the image to save.</span></span> <span data-ttu-id="61f34-411">次に、指定されたファイル名の <xref:System.IO.FileStream> オブジェクトを作成し、これを <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="61f34-411">A <xref:System.IO.FileStream> object is then created using the filename and then passed to the <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage%2A> method.</span></span>  
  
 [!code-csharp[wf_samples#63](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#63)]
 [!code-vb[wf_samples#63](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#63)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61f34-412"><paramref name="stream" /> または <paramref name="imageFormat" /> に null 参照 (Visual Basic の場合は <see langword="Nothing" />) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="61f34-412"><paramref name="stream" /> or <paramref name="imageFormat" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowImage">
      <MemberSignature Language="C#" Value="public void SaveWorkflowImage (string imageFile, System.Drawing.Imaging.ImageFormat imageFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveWorkflowImage(string imageFile, class System.Drawing.Imaging.ImageFormat imageFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage(System.String,System.Drawing.Imaging.ImageFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkflowImage (imageFile As String, imageFormat As ImageFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveWorkflowImage(System::String ^ imageFile, System::Drawing::Imaging::ImageFormat ^ imageFormat);" />
      <MemberSignature Language="F#" Value="member this.SaveWorkflowImage : string * System.Drawing.Imaging.ImageFormat -&gt; unit" Usage="workflowView.SaveWorkflowImage (imageFile, imageFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFile" Type="System.String" />
        <Parameter Name="imageFormat" Type="System.Drawing.Imaging.ImageFormat" />
      </Parameters>
      <Docs>
        <param name="imageFile"><span data-ttu-id="61f34-413">ワークフロー ビュー画像を保存するファイルのパス。</span><span class="sxs-lookup"><span data-stu-id="61f34-413">The path to the file in which to store the workflow view image.</span></span></param>
        <param name="imageFormat"><span data-ttu-id="61f34-414">ワークフロー ビューのイメージの保存に使用する <see cref="T:System.Drawing.Imaging.ImageFormat" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-414">The <see cref="T:System.Drawing.Imaging.ImageFormat" /> to use to save the workflow view image.</span></span></param>
        <summary><span data-ttu-id="61f34-415"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> を指定された形式の画像ファイルとして保存します。</span><span class="sxs-lookup"><span data-stu-id="61f34-415">Saves an image of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> to the specified file using the specified image format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-416">ワークフロー ビューのイメージはビットマップとして作成されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-416">The workflow view image is created as a bitmap.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-417">現在開いているワークフローを、画像として <xref:System.String> に保存する例を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-417">The following example shows how to save the currently loaded workflow image using a <xref:System.String>.</span></span> <span data-ttu-id="61f34-418">この例では、<xref:System.Windows.Forms.SaveFileDialog> を作成して、保存先ファイル名をユーザーにたずねています。</span><span class="sxs-lookup"><span data-stu-id="61f34-418">In this example, a <xref:System.Windows.Forms.SaveFileDialog> is created to prompt the user for the filename of the image to save.</span></span> <span data-ttu-id="61f34-419">このファイル名と `ImageFormat.Bmp` フラグを、<xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage%2A> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="61f34-419">The filename and the `ImageFormat.Bmp` flag are then passed to the <xref:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImage%2A> method.</span></span>  
  
 [!code-csharp[wf_samples#62](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#62)]
 [!code-vb[wf_samples#62](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61f34-420"><paramref name="imageFile" /> または <paramref name="imageFormat" /> に null 参照 (Visual Basic の場合は <see langword="Nothing" />) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="61f34-420"><paramref name="imageFile" /> or <paramref name="imageFormat" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowImageToClipboard">
      <MemberSignature Language="C#" Value="public void SaveWorkflowImageToClipboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveWorkflowImageToClipboard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.SaveWorkflowImageToClipboard" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveWorkflowImageToClipboard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveWorkflowImageToClipboard();" />
      <MemberSignature Language="F#" Value="member this.SaveWorkflowImageToClipboard : unit -&gt; unit" Usage="workflowView.SaveWorkflowImageToClipboard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="61f34-421">クリップボードに WorkflowView の画像を保存します。</span><span class="sxs-lookup"><span data-stu-id="61f34-421">Saves an image of the WorkflowView to the clipboard.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenPointToLogical">
      <MemberSignature Language="C#" Value="public System.Drawing.Point ScreenPointToLogical (System.Drawing.Point screenPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point ScreenPointToLogical(valuetype System.Drawing.Point screenPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ScreenPointToLogical(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function ScreenPointToLogical (screenPoint As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point ScreenPointToLogical(System::Drawing::Point screenPoint);" />
      <MemberSignature Language="F#" Value="member this.ScreenPointToLogical : System.Drawing.Point -&gt; System.Drawing.Point" Usage="workflowView.ScreenPointToLogical screenPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenPoint" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="screenPoint"><span data-ttu-id="61f34-422">画面座標から論理座標に変換する <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-422">The <see cref="T:System.Drawing.Point" /> to convert from screen coordinates to logical coordinates.</span></span></param>
        <summary><span data-ttu-id="61f34-423"><see cref="T:System.Drawing.Point" /> を画面座標から論理座標に変換します。</span><span class="sxs-lookup"><span data-stu-id="61f34-423">Converts a <see cref="T:System.Drawing.Point" /> from screen coordinates to logical coordinates.</span></span></summary>
        <returns><span data-ttu-id="61f34-424">画面座標から論理座標に変換された <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-424">The <see cref="T:System.Drawing.Point" /> converted from screen coordinates to logical coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-425"><xref:System.Workflow.ComponentModel.Design.WorkflowView> は、2 つの座標空間、つまり論理座標とクライアント座標を使用します。</span><span class="sxs-lookup"><span data-stu-id="61f34-425"><xref:System.Workflow.ComponentModel.Design.WorkflowView> uses two coordinate spaces: logical and client:</span></span>  
  
 <span data-ttu-id="61f34-426">クライアント座標は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> の左上隅を起点とした相対座標です。</span><span class="sxs-lookup"><span data-stu-id="61f34-426">Client coordinates are relative to the upper-left corner of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="61f34-427">左上隅の座標は (0,0) です。x 座標と y 座標は、それぞれ表示可能領域の右方向と下方向に進むにつれて数値が大きくなります。</span><span class="sxs-lookup"><span data-stu-id="61f34-427">The upper-left corner is 0,0; x and y coordinates increase vertically and horizontally in the viewable area.</span></span> <span data-ttu-id="61f34-428">クライアント座標系は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> のズーム レベルとスクロール バーの位置の影響を受けます。</span><span class="sxs-lookup"><span data-stu-id="61f34-428">The client coordinate system is affected by the zoom level of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> and by the scrollbar position.</span></span>  
  
 <span data-ttu-id="61f34-429">論理座標系では、オブジェクトは常に (0,0) にマッピングされます。</span><span class="sxs-lookup"><span data-stu-id="61f34-429">In the logical coordinate system every object is always mapped to 0,0.</span></span> <span data-ttu-id="61f34-430">横方向と縦方向の位置は、ズームやスクロール バーの位置の影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="61f34-430">The position vertically and horizontally is not affected by zoom or scrollbar position.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollPosition">
      <MemberSignature Language="C#" Value="public System.Drawing.Point ScrollPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point ScrollPosition" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollPosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point ScrollPosition { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.ScrollPosition : System.Drawing.Point with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-431"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> 上のスクロール バーの位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61f34-431">Gets or sets the position of the scrollbar on the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="61f34-432">画面座標で表したスクロール バーの位置。</span><span class="sxs-lookup"><span data-stu-id="61f34-432">A point describing the location of the scrollbar in screen coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-433"><xref:System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition%2A> で取得または設定できるのは、デザイン サーフェイス上のスクロール バーの位置です。</span><span class="sxs-lookup"><span data-stu-id="61f34-433">Use the <xref:System.Workflow.ComponentModel.Design.WorkflowView.ScrollPosition%2A> to get or adjust the location of the scrollbar in the design surface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-434">ScrollPosition プロパティの値を設定する例を以下に示します。これは <xref:System.Windows.Forms.Panel> コントロールの OnMouseMove メソッドを実装したものです。</span><span class="sxs-lookup"><span data-stu-id="61f34-434">The following example demonstrates setting the ScrollPosition property inside an implementation of a <xref:System.Windows.Forms.Panel> control's OnMouseMove method.</span></span>  <span data-ttu-id="61f34-435">これは Outlook ワークフロー ウィザード SDK サンプルから抜粋したものです。</span><span class="sxs-lookup"><span data-stu-id="61f34-435">This example is from the Outlook Workflow Wizard SDK sample.</span></span>  <span data-ttu-id="61f34-436">詳細については、「 [Outlook Workflow Wizard Sample](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-436">For more information, see [Outlook Workflow Wizard Sample](https://msdn.microsoft.com/library/7b2ba92b-8456-43f3-87fc-184ffdec4408).</span></span>  
  
 [!code-csharp[wf_samples#105](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#105)]
 [!code-vb[wf_samples#105](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#105)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowDepth">
      <MemberSignature Language="C#" Value="public int ShadowDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowDepth" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowDepth : int with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-437"><see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" /> の <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61f34-437">Gets or sets the <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth" /> for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="61f34-438">ピクセル単位でのシャドウ深度。</span><span class="sxs-lookup"><span data-stu-id="61f34-438">The shadow depth in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-439"><xref:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth%2A> は、ワークフロー デザイン サーフェイス上に影付きでテキストを表示する場合に、その影の深さを取得または設定するために使います。</span><span class="sxs-lookup"><span data-stu-id="61f34-439">Use the <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth%2A> to get or adjust the shadow depth of text shown on the workflow design surface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-440">次のコード例は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> メソッドを使用して <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> クラスのインスタンスを取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="61f34-440">The following code example demonstrates how you can obtain an instance of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> class using the <xref:System.ComponentModel.Design.IRootDesigner.GetView%2A> method.</span></span> <span data-ttu-id="61f34-441">インスタンスの取得後に <xref:System.Workflow.ComponentModel.Design.WorkflowView>、<xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A>、<xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> などのいくつかの <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth%2A> プロパティを設定し、<xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="61f34-441">The code then sets several <xref:System.Workflow.ComponentModel.Design.WorkflowView> properties, including <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> and <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>, <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShadowDepth%2A>, and calls the <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToScreenSize%2A> method.</span></span>  
  
 [!code-csharp[Wf_samples#48](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#48)]
 [!code-vb[Wf_samples#48](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#48)]  
  
 <span data-ttu-id="61f34-442">上記のコードでは、現在開かれているワークフローを削除して、新しいワークフローを読み込めるようにするために、`UnloadWorkflow` メソッドを使っています。これは次のように実装されています。</span><span class="sxs-lookup"><span data-stu-id="61f34-442">The `UnloadWorkflow` method that is called in the code above removes a currently loaded workflow in order to prepare for the loading of a new workflow and is implemented as follows:</span></span>  
  
 [!code-csharp[Wf_samples#49](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#49)]
 [!code-vb[Wf_samples#49](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#49)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowInfoTip">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="61f34-443"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> の**ヒント**を表示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-443">Displays the **InfoTip** for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-444"><xref:System.Workflow.ComponentModel.Design.WorkflowView> の**ヒント**を表示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-444">Displays the **InfoTip** for the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="public void ShowInfoTip (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowInfoTip(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowInfoTip (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowInfoTip(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ShowInfoTip : string -&gt; unit" Usage="workflowView.ShowInfoTip text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="61f34-445">**ヒント**に表示するテキスト。</span><span class="sxs-lookup"><span data-stu-id="61f34-445">The text to display on the **InfoTip**.</span></span></param>
        <summary><span data-ttu-id="61f34-446"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> の**ヒント**として、指定されたテキストを表示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-446">Shows the **InfoTip** for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> with the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-447"><xref:System.Workflow.ComponentModel.Design.WorkflowView> の**ヒント**として、指定されたテキストを表示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-447">Shows the **InfoTip** for the <xref:System.Workflow.ComponentModel.Design.WorkflowView> with the specified text.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61f34-448"><paramref name="infoTipText" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="61f34-448"><paramref name="infoTipText" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShowInfoTip">
      <MemberSignature Language="C#" Value="public void ShowInfoTip (string title, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowInfoTip(string title, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInfoTip(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowInfoTip (title As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowInfoTip(System::String ^ title, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ShowInfoTip : string * string -&gt; unit" Usage="workflowView.ShowInfoTip (title, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title"><span data-ttu-id="61f34-449">**ヒント**に表示するタイトル。</span><span class="sxs-lookup"><span data-stu-id="61f34-449">The title of the **InfoTip** to display.</span></span></param>
        <param name="text"><span data-ttu-id="61f34-450">**ヒント**に表示するテキスト。</span><span class="sxs-lookup"><span data-stu-id="61f34-450">The text of the **InfoTip** to display.</span></span></param>
        <summary><span data-ttu-id="61f34-451"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> の**ヒント**として、指定されたタイトルとテキストを表示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-451">Shows the **InfoTip** for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> with the specified title and text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-452"><xref:System.Workflow.ComponentModel.Design.WorkflowView> の**ヒント**として、指定されたタイトルとテキストを表示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-452">Shows the **InfoTip** for the <xref:System.Workflow.ComponentModel.Design.WorkflowView> with the specified title and text.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="61f34-453"><paramref name="title" /> が null 参照 (Visual Basic の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="61f34-453"><paramref name="title" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span>  
  
<span data-ttu-id="61f34-454">- または -</span><span class="sxs-lookup"><span data-stu-id="61f34-454">-or-</span></span> 
 <span data-ttu-id="61f34-455"><paramref name="infoTipText" /> が null 参照 (<see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="61f34-455"><paramref name="infoTipText" /> is a null reference (<see langword="Nothing" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ShowInPlaceToolTip">
      <MemberSignature Language="C#" Value="public void ShowInPlaceToolTip (string toolTipText, System.Drawing.Rectangle toolTipRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ShowInPlaceToolTip(string toolTipText, valuetype System.Drawing.Rectangle toolTipRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.ShowInPlaceToolTip(System.String,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowInPlaceToolTip (toolTipText As String, toolTipRectangle As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowInPlaceToolTip(System::String ^ toolTipText, System::Drawing::Rectangle toolTipRectangle);" />
      <MemberSignature Language="F#" Value="member this.ShowInPlaceToolTip : string * System.Drawing.Rectangle -&gt; unit" Usage="workflowView.ShowInPlaceToolTip (toolTipText, toolTipRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolTipText" Type="System.String" />
        <Parameter Name="toolTipRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="toolTipText"><span data-ttu-id="61f34-456">表示するテキスト。</span><span class="sxs-lookup"><span data-stu-id="61f34-456">The text to display.</span></span></param>
        <param name="toolTipRectangle"><span data-ttu-id="61f34-457">画面上の <see cref="T:System.Drawing.Rectangle" /> の表示位置を表す <see langword="ToolTip" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-457">The <see cref="T:System.Drawing.Rectangle" /> specifying the location on the screen to place the <see langword="ToolTip" />.</span></span></param>
        <summary><span data-ttu-id="61f34-458">指定した位置に <see langword="ToolTip" /> を表示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-458">Shows a <see langword="ToolTip" /> at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-459">`ToolTips` とは、マウス ポインターをオブジェクト上に置いたときに表示されるテキストです。ユーザーにとって役に立つ情報を表示するために使います。</span><span class="sxs-lookup"><span data-stu-id="61f34-459">`ToolTips` are helpful notes to the user that display useful information about an object underneath the pointer.</span></span>  
  
 <span data-ttu-id="61f34-460"><xref:System.Workflow.ComponentModel.Design.WorkflowView.ShowInPlaceToolTip%2A> は、`ToolTip` として、指定されたタイトルとテキストを表示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-460">Use <xref:System.Workflow.ComponentModel.Design.WorkflowView.ShowInPlaceToolTip%2A> to display a `ToolTip` with the specified text and a desired location.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberSignature Language="F#" Value="abstract member System.IServiceProvider.GetService : Type -&gt; obj&#xA;override this.System.IServiceProvider.GetService : Type -&gt; obj" Usage="workflowView.System.IServiceProvider.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="61f34-461">取得するサービスの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-461">The <see cref="T:System.Type" /> of the service to retrieve.</span></span></param>
        <summary><span data-ttu-id="61f34-462">指定された型のサービスを取得します (そのサービスを利用できる場合)。</span><span class="sxs-lookup"><span data-stu-id="61f34-462">Gets the service of the specified type, if it is available.</span></span></summary>
        <returns><span data-ttu-id="61f34-463">要求されたサービスを実装する <see cref="T:System.Object" />。ただしサービスを解決できない場合は null 参照 (Visual Basic では <see langword="Nothing" />) を返します。</span><span class="sxs-lookup"><span data-stu-id="61f34-463">An <see cref="T:System.Object" /> implementing the requested service, or a null reference (<see langword="Nothing" /> in Visual Basic) if the service cannot be resolved.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-464">`serviceType` が `CommandID` であれば、このメソッドは `CommandID` をそのまま返します。</span><span class="sxs-lookup"><span data-stu-id="61f34-464">If the `serviceType` is `CommandID` this method will return a specific `CommandID`.</span></span> <span data-ttu-id="61f34-465">`Type` がそれ以外の場合には、`GetService` は要求したサービスを実装するオブジェクトを返します。サービスを解決できない場合は、null 参照 (`Nothing`) を返します。</span><span class="sxs-lookup"><span data-stu-id="61f34-465">For any other `Type`, `GetService` will return an Object that implements the requested service, or a null reference (`Nothing`) if the service cannot be resolved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-466">次の例では、<xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> オブジェクトの <xref:System.Workflow.ComponentModel.Design.WorkflowView> メソッドを使って、<xref:System.ComponentModel.Design.ISelectionService> インターフェイスを取得しています。</span><span class="sxs-lookup"><span data-stu-id="61f34-466">The following example uses the <xref:System.Workflow.ComponentModel.Design.WorkflowView.GetService%2A> method of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object to return an <xref:System.ComponentModel.Design.ISelectionService> interface.</span></span> <span data-ttu-id="61f34-467">サービスが存在すれば <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> が呼び出されます。このとき、現在選択状態のアクティビティが、`PrimarySelection` オブジェクトの <xref:System.ComponentModel.Design.ISelectionService> プロパティを使って渡されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-467">If the service exists, <xref:System.Workflow.ComponentModel.Design.WorkflowView.EnsureVisible%2A> is called passing the currently selected activity using the `PrimarySelection` property of the <xref:System.ComponentModel.Design.ISelectionService> object.</span></span>  
  
 [!code-csharp[wf_samples#64](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#64)]
 [!code-vb[wf_samples#64](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#64)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IMessageFilter.PreFilterMessage">
      <MemberSignature Language="C#" Value="bool IMessageFilter.PreFilterMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Forms.IMessageFilter.PreFilterMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.System#Windows#Forms#IMessageFilter#PreFilterMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Function PreFilterMessage (ByRef m As Message) As Boolean Implements IMessageFilter.PreFilterMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Forms.IMessageFilter.PreFilterMessage(System::Windows::Forms::Message % m) = System::Windows::Forms::IMessageFilter::PreFilterMessage;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Forms.IMessageFilter.PreFilterMessage : Message -&gt; bool&#xA;override this.System.Windows.Forms.IMessageFilter.PreFilterMessage : Message -&gt; bool" Usage="workflowView.System.Windows.Forms.IMessageFilter.PreFilterMessage m" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IMessageFilter.PreFilterMessage(System.Windows.Forms.Message@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="61f34-468">ディスパッチされるメッセージ。</span><span class="sxs-lookup"><span data-stu-id="61f34-468">The message to be dispatched.</span></span> <span data-ttu-id="61f34-469">このメッセージは変更できません。</span><span class="sxs-lookup"><span data-stu-id="61f34-469">You cannot modify this message.</span></span></param>
        <summary><span data-ttu-id="61f34-470">メッセージがディスパッチされる前に、フィルターで排除します。</span><span class="sxs-lookup"><span data-stu-id="61f34-470">Filters out a message before it is dispatched.</span></span></summary>
        <returns><span data-ttu-id="61f34-471"><see langword="true" /> の場合、メッセージはフィルターで排除され、ディスパッチされません。<see langword="false" /> の場合、メッセージは次のフィルターまたはコントロールに継続されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-471"><see langword="true" /> to filter the message and stop it from being dispatched; <see langword="false" /> to allow the message to continue to the next filter or control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewPortRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ViewPortRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ViewPortRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewPortRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ViewPortRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewPortRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-472"><see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" /> の、現在の <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="61f34-472">Gets the current <see cref="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle" /> for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="61f34-473">画面上の可視領域を表す <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-473">A <see cref="T:System.Drawing.Rectangle" /> that describes the area on the screen that is visible.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-474"><xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A> にはワークフローの可視領域が設定されています。</span><span class="sxs-lookup"><span data-stu-id="61f34-474">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A> contains the visible area of the workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-475"><xref:System.Workflow.ComponentModel.Design.WorkflowView> オブジェクトの Paint イベントに応じて、<xref:System.Workflow.ComponentModel.Design.WorkflowView> 上に直接画像を描画するメソッドの例を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-475">The following example shows a method of handling the Paint event of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> object to draw an image directly on the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="61f34-476"><xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A> プロパティは、画像が実際に描画された、デザイン サーフェイス上の可視領域を返します。</span><span class="sxs-lookup"><span data-stu-id="61f34-476">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortRectangle%2A> property returns the viewable area on the design surface to correctly constrain the image being drawn.</span></span>  
  
 [!code-csharp[wf_samples#58](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#58)]
 [!code-vb[wf_samples#58](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#58)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewPortSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ViewPortSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ViewPortSize" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.ViewPortSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewPortSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ViewPortSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewPortSize : System.Drawing.Size" Usage="System.Workflow.ComponentModel.Design.WorkflowView.ViewPortSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-477"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> の可視領域のサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="61f34-477">Gets the size of the visible area for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="61f34-478"><see langword="Size" /> の可視領域を表す <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-478">A <see langword="Size" /> that describes the visible area of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-479"><xref:System.Workflow.ComponentModel.Design.WorkflowView> の可視領域のサイズを取得します。</span><span class="sxs-lookup"><span data-stu-id="61f34-479">Gets the size of the visible area of the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VScrollBar">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.VScrollBar VScrollBar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.VScrollBar VScrollBar" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VScrollBar As VScrollBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::VScrollBar ^ VScrollBar { System::Windows::Forms::VScrollBar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VScrollBar : System.Windows.Forms.VScrollBar" Usage="System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.VScrollBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-480"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> に関連付けられた垂直スクロール バーを取得します。</span><span class="sxs-lookup"><span data-stu-id="61f34-480">Gets the vertical scrollbar associated with the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="61f34-481">水平スクロール バーの設定と表示の調整に使用できる <see cref="T:System.Windows.Forms.ScrollBar" />。</span><span class="sxs-lookup"><span data-stu-id="61f34-481">A <see cref="T:System.Windows.Forms.ScrollBar" /> you can use to adjust the settings and visibility of the horizontal scrollbar.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-482"><xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> を使うと、<xref:System.Workflow.ComponentModel.Design.WorkflowView> 上の垂直スクロール バーを取得し、その値に応じてユーザー インターフェイスを調整できます。</span><span class="sxs-lookup"><span data-stu-id="61f34-482">Use <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> to get the vertical scrollbar on the <xref:System.Workflow.ComponentModel.Design.WorkflowView>, which you can use to make user interface adjustments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-483"><xref:System.Workflow.ComponentModel.Design.WorkflowView> クラスのインスタンスを取得する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-483">The following code example demonstrates how you can obtain an instance of the <xref:System.Workflow.ComponentModel.Design.WorkflowView> class.</span></span>  <span data-ttu-id="61f34-484">その後、このコードは <xref:System.Workflow.ComponentModel.Design.WorkflowView>、<xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> などのいくつかの <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A> プロパティを設定し、<xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="61f34-484">The code then sets several <xref:System.Workflow.ComponentModel.Design.WorkflowView> properties, including <xref:System.Workflow.ComponentModel.Design.WorkflowView.HScrollBar%2A> and <xref:System.Workflow.ComponentModel.Design.WorkflowView.VScrollBar%2A>, and calls the <xref:System.Workflow.ComponentModel.Design.WorkflowView.FitToWorkflowSize%2A> method.</span></span>  
  
 [!code-csharp[Wf_samples#65](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#65)]
 [!code-vb[Wf_samples#65](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#65)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms742004(v=vs.90)"><span data-ttu-id="61f34-485">ワークフロー追跡プロファイルデザイナー</span><span class="sxs-lookup"><span data-stu-id="61f34-485">Workflow Tracking Profile Designer</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.WorkflowView.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc : Message -&gt; unit" Usage="workflowView.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="61f34-486">処理する Windows メッセージ。</span><span class="sxs-lookup"><span data-stu-id="61f34-486">The Windows Message to process.</span></span></param>
        <summary><span data-ttu-id="61f34-487">Windows メッセージを処理します。</span><span class="sxs-lookup"><span data-stu-id="61f34-487">Processes Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-488">メッセージはすべて <xref:System.Workflow.ComponentModel.Design.WorkflowView.WndProc%2A> メソッドに送信されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-488">All messages are sent to the <xref:System.Workflow.ComponentModel.Design.WorkflowView.WndProc%2A> method.</span></span>  
  
 <span data-ttu-id="61f34-489"><xref:System.Workflow.ComponentModel.Design.WorkflowView.WndProc%2A> メソッドは、Windows `WindowProc` 関数に正確に対応しています。</span><span class="sxs-lookup"><span data-stu-id="61f34-489">The <xref:System.Workflow.ComponentModel.Design.WorkflowView.WndProc%2A> method corresponds exactly to the Windows `WindowProc` function.</span></span> <span data-ttu-id="61f34-490">Windows メッセージの処理の詳細については、MSDN Library 内にある Windows プラットフォーム SDK リファレンスの `WindowProc` 関数のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-490">For more information about processing Windows messages, see the `WindowProc` function documentation in the Windows Platform SDK reference located in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="61f34-491">派生クラスでは、自分自身では扱わないメッセージを処理するために、基本クラスの <see langword="WndProc" /> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="61f34-491">Derived classes should call the base class <see langword="WndProc" /> method to process any messages not handled.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Zoom">
      <MemberSignature Language="C#" Value="public int Zoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Zoom" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.WorkflowView.Zoom" />
      <MemberSignature Language="VB.NET" Value="Public Property Zoom As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Zoom { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Zoom : int with get, set" Usage="System.Workflow.ComponentModel.Design.WorkflowView.Zoom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-492"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> のズーム レベルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="61f34-492">Gets or sets the zoom level of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></summary>
        <value><span data-ttu-id="61f34-493"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> のズーム レベル。</span><span class="sxs-lookup"><span data-stu-id="61f34-493">The zoom level of the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-494">ズーム機能を使うと、<xref:System.Workflow.ComponentModel.Design.WorkflowView> 内のコンポーネントのサイズを拡大または縮小できます。</span><span class="sxs-lookup"><span data-stu-id="61f34-494">Use the zoom feature to enlarge or reduce the size of the components inside the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span> <span data-ttu-id="61f34-495"><xref:System.Workflow.ComponentModel.Design.AmbientTheme> は、<xref:System.Workflow.ComponentModel.Design.WorkflowView> のズーム レベルの最小値、最大値を設定するために使います。</span><span class="sxs-lookup"><span data-stu-id="61f34-495">The <xref:System.Workflow.ComponentModel.Design.AmbientTheme> sets the minimum and maximum zoom levels for the <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-496"><xref:System.Workflow.ComponentModel.Design.WorkflowView.Zoom%2A> の <xref:System.Workflow.ComponentModel.Design.WorkflowView> プロパティを設定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-496">The following example shows how to set the <xref:System.Workflow.ComponentModel.Design.WorkflowView.Zoom%2A> property of a <xref:System.Workflow.ComponentModel.Design.WorkflowView>.</span></span>  
  
 <span data-ttu-id="61f34-497">次のコード例は、MainForm.cs ファイルに含まれているワークフロー モニターの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="61f34-497">This code example is part of the Workflow Monitor SDK Sample from the MainForm.cs file.</span></span> <span data-ttu-id="61f34-498">詳細については、「[ワークフローモニターのサンプル](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-498">For more information, see [Workflow Monitor Sample](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#138](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#138)]
 [!code-vb[wf_samples#138](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#138)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="61f34-499">ズーム レベルが <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> の最小値を下回ったとき、</span><span class="sxs-lookup"><span data-stu-id="61f34-499">If the zoom level is less than the minimum zoom level of the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /></span></span>  
  
<span data-ttu-id="61f34-500">- または -</span><span class="sxs-lookup"><span data-stu-id="61f34-500">-or-</span></span> 
<span data-ttu-id="61f34-501">ズーム レベルが <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" /> の最大値を上回ったとき。</span><span class="sxs-lookup"><span data-stu-id="61f34-501">if the zoom level exceeds the maximum zoom level of the <see cref="T:System.Workflow.ComponentModel.Design.AmbientTheme" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ZoomChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ZoomChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ZoomChanged" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Design.WorkflowView.ZoomChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ZoomChanged As EventHandler " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ZoomChanged;" />
      <MemberSignature Language="F#" Value="member this.ZoomChanged : EventHandler " Usage="member this.ZoomChanged : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event ZoomChanged As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="61f34-502"><see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> のズーム設定が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="61f34-502">Occurs when the zoom setting for the <see cref="T:System.Workflow.ComponentModel.Design.WorkflowView" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="61f34-503">ワークフロー ビューのイメージはビットマップとして作成されます。</span><span class="sxs-lookup"><span data-stu-id="61f34-503">The workflow view image is created as a bitmap.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="61f34-504">ハンドラーを <xref:System.Workflow.ComponentModel.Design.WorkflowView.ZoomChanged> イベントに割り当てる例を以下に示します。</span><span class="sxs-lookup"><span data-stu-id="61f34-504">The following code example demonstrates how you can assign a handler to the <xref:System.Workflow.ComponentModel.Design.WorkflowView.ZoomChanged> event.</span></span>  
  
 <span data-ttu-id="61f34-505">このコード例は、ViewHost.cs ファイルから抜粋したワークフロー モニターの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="61f34-505">This code example is part of the Workflow Monitor SDK Sample from the ViewHost.cs file.</span></span> <span data-ttu-id="61f34-506">詳細については、「 [Workflow Monitor](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="61f34-506">For more information, see [Workflow Monitor](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).</span></span>  
  
 [!code-csharp[wf_samples#136](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#136)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)"><span data-ttu-id="61f34-507">ワークフロー モニター</span><span class="sxs-lookup"><span data-stu-id="61f34-507">Workflow Monitor</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
