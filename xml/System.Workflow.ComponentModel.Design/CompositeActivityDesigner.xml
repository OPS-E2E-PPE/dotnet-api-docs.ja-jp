<Type Name="CompositeActivityDesigner" FullName="System.Workflow.ComponentModel.Design.CompositeActivityDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a4e9f98392b097b006c147b4a8f543fce4f3f2d7" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83883748" /></Metadata><TypeSignature Language="C#" Value="public abstract class CompositeActivityDesigner : System.Workflow.ComponentModel.Design.ActivityDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CompositeActivityDesigner extends System.Workflow.ComponentModel.Design.ActivityDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CompositeActivityDesigner&#xA;Inherits ActivityDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeActivityDesigner abstract : System::Workflow::ComponentModel::Design::ActivityDesigner" />
  <TypeSignature Language="F#" Value="type CompositeActivityDesigner = class&#xA;    inherit ActivityDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Design.ActivityDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Design.CompositeActivityDesignerLayoutSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Design.ActivityDesignerTheme(typeof(System.Workflow.ComponentModel.Design.CompositeDesignerTheme))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="28caf-101">複合アクティビティを視覚的にデザインできるデザイナーを提供します。</span><span class="sxs-lookup"><span data-stu-id="28caf-101">Provides a designer that enables you to visually design composite activities.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="28caf-102">複合アクティビティを視覚的にデザインする場合、レイアウトをカスタマイズする場合、および <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> の描画を管理する場合は、<xref:System.Workflow.ComponentModel.CompositeActivity> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-102">Use the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> to visually design composite activities, to customize the layout, and to manage the drawing of the <xref:System.Workflow.ComponentModel.CompositeActivity>.</span></span>  
  
 <span data-ttu-id="28caf-103">また、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> を使用することにより、含まれているアクティビティ デザイナーに関するイベントを管理できます。</span><span class="sxs-lookup"><span data-stu-id="28caf-103">The <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> also enables you to manage events for the contained activity designers.</span></span> <span data-ttu-id="28caf-104">含まれているアクティビティ デザイナーの位置、サイズ、レイアウトをカスタマイズおよび管理することも可能です。</span><span class="sxs-lookup"><span data-stu-id="28caf-104">It also enables you to customize and manage the position, size, and layout of contained activity designers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CompositeActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CompositeActivityDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28caf-105">派生クラスとして実装された場合、<see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="28caf-105">When implemented in a derived class, initializes an instance of the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-106">ユーザー補助アプリケーションが、障碍を持つユーザー用にアプリケーションの外観を調整するのに使用する、<see cref="T:System.Windows.Forms.AccessibleObject" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-106">Gets a <see cref="T:System.Windows.Forms.AccessibleObject" /> that accessibility applications use to adjust the application look and feel for people with disabilities.</span></span></summary>
        <value><span data-ttu-id="28caf-107">コントロールに関連付けられた <see cref="T:System.Windows.Forms.AccessibleObject" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-107">The <see cref="T:System.Windows.Forms.AccessibleObject" /> associated with the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-108">コントロールに現在割り当てられている <xref:System.Windows.Forms.AccessibleObject> がない場合は、コントロールの新しいインスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="28caf-108">If no <xref:System.Windows.Forms.AccessibleObject> is currently assigned to the control, a new instance of one is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28caf-109"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject%2A> プロパティを取得または設定するには、.NET Framework と一緒にインストールされているユーザー補助アセンブリへの参照を追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="28caf-109">To get or set the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject%2A> property, you must add a reference to the Accessibility assembly installed with the .NET Framework.</span></span>  
  
 <span data-ttu-id="28caf-110">ユーザー補助オブジェクトの詳細については、MSDN ライブラリの「Active Accessibility」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="28caf-110">For more information about accessible objects, see the Active Accessibility section of the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExpandCollapse">
      <MemberSignature Language="C#" Value="public virtual bool CanExpandCollapse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanExpandCollapse { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanExpandCollapse : bool" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-111"><see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> を折りたためるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-111">Gets a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> can be collapsed.</span></span></summary>
        <value><span data-ttu-id="28caf-112">指定した複合アクティビティ デザイナーを折りたためる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-112"><see langword="true" /> if the specified composite activity designer can be collapsed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-113">複合デザイナーによっては、内部に複数のデザイナーを持ちます。</span><span class="sxs-lookup"><span data-stu-id="28caf-113">Some composite designers will have multiple designers within.</span></span> <span data-ttu-id="28caf-114">こうしたデザイナーは、展開または折りたたみを実装することにより、画面上のスペースを節約できます。</span><span class="sxs-lookup"><span data-stu-id="28caf-114">These designers can implement expanding or collapsing to save room on the screen.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsertActivities">
      <MemberSignature Language="C#" Value="public virtual bool CanInsertActivities (System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToInsert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInsertActivities(class System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToInsert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanInsertActivities (insertLocation As HitTestInfo, activitiesToInsert As ReadOnlyCollection(Of Activity)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanInsertActivities(System::Workflow::ComponentModel::Design::HitTestInfo ^ insertLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToInsert);" />
      <MemberSignature Language="F#" Value="abstract member CanInsertActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool&#xA;override this.CanInsertActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool" Usage="compositeActivityDesigner.CanInsertActivities (insertLocation, activitiesToInsert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToInsert" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="insertLocation"><span data-ttu-id="28caf-115">アクティビティを挿入する場所。</span><span class="sxs-lookup"><span data-stu-id="28caf-115">The location to insert the activities.</span></span></param>
        <param name="activitiesToInsert"><span data-ttu-id="28caf-116">挿入する <see cref="T:System.Workflow.ComponentModel.Activity" /> の読み取り専用配列。</span><span class="sxs-lookup"><span data-stu-id="28caf-116">A read-only array of <see cref="T:System.Workflow.ComponentModel.Activity" /> to insert.</span></span></param>
        <summary><span data-ttu-id="28caf-117">デザイナーに関連付けられた複合アクティビティにアクティビティを挿入できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="28caf-117">Returns a value that indicates whether activities can be inserted into the composite activity associated with the designer.</span></span></summary>
        <returns><span data-ttu-id="28caf-118">デザイナーに関連付けられた複合アクティビティにアクティビティを挿入できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-118"><see langword="true" /> if activities can be inserted into the composite activity associated with the designer; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-119">アクティビティのリストを複合アクティビティに挿入できるかどうかを判断するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-119">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> to determine if a list of activities can be inserted into a composite activity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28caf-120">子アクティビティの挿入を許可しないことによって <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> をロックする方法の例を、次に示します。</span><span class="sxs-lookup"><span data-stu-id="28caf-120">The following example shows how to lock a <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> by not allowing the insertion of child activities.</span></span>  
  
 [!code-csharp[WF_Samples#25](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#25)]
 [!code-vb[WF_Samples#25](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanMoveActivities">
      <MemberSignature Language="C#" Value="public virtual bool CanMoveActivities (System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToMove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanMoveActivities(class System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToMove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanMoveActivities (moveLocation As HitTestInfo, activitiesToMove As ReadOnlyCollection(Of Activity)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanMoveActivities(System::Workflow::ComponentModel::Design::HitTestInfo ^ moveLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToMove);" />
      <MemberSignature Language="F#" Value="abstract member CanMoveActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool&#xA;override this.CanMoveActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool" Usage="compositeActivityDesigner.CanMoveActivities (moveLocation, activitiesToMove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moveLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToMove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="moveLocation"><span data-ttu-id="28caf-121">アクティビティの移動元の場所。</span><span class="sxs-lookup"><span data-stu-id="28caf-121">The location from which to move the activities.</span></span></param>
        <param name="activitiesToMove"><span data-ttu-id="28caf-122">移動するアクティビティの読み取り専用配列。</span><span class="sxs-lookup"><span data-stu-id="28caf-122">The read-only array of activities to move.</span></span></param>
        <summary><span data-ttu-id="28caf-123">デザイナーに関連付けられた複合アクティビティから複合アクティビティに含まれるアクティビティを移動できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="28caf-123">Returns a value that indicates whether activities contained within the composite activity can be moved out of the composite activity associated with the designer.</span></span></summary>
        <returns><span data-ttu-id="28caf-124">アクティビティを複合アクティビティから移動できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-124"><see langword="true" /> if the activities can be moved from the composite activity; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-125">アクティビティのリストを複合アクティビティから移動できるかどうかを判断するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-125">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities%2A> to determine if a list of activities can be moved from within a composite activity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28caf-126"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities%2A> メソッドをオーバーライドして <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> 内の子アクティビティの移動を可能にする方法の例を、次に示します。</span><span class="sxs-lookup"><span data-stu-id="28caf-126">The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities%2A> method to allow the moving of child activities within the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
 [!code-csharp[WF_Samples#26](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#26)]
 [!code-vb[WF_Samples#26](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemoveActivities">
      <MemberSignature Language="C#" Value="public virtual bool CanRemoveActivities (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRemoveActivities(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRemoveActivities (activitiesToRemove As ReadOnlyCollection(Of Activity)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRemoveActivities(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToRemove);" />
      <MemberSignature Language="F#" Value="abstract member CanRemoveActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool&#xA;override this.CanRemoveActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool" Usage="compositeActivityDesigner.CanRemoveActivities activitiesToRemove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activitiesToRemove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="activitiesToRemove"><span data-ttu-id="28caf-127">デザイナーに関連付けられた複合アクティビティから削除するアクティビティの読み取り専用配列。</span><span class="sxs-lookup"><span data-stu-id="28caf-127">A read-only array of activities to remove from the composite activity associated with the designer.</span></span></param>
        <summary><span data-ttu-id="28caf-128">デザイナーに関連付けられた複合アクティビティからアクティビティを削除できるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="28caf-128">Returns a value that indicates if activities can be removed from the composite activity associated with the designer.</span></span></summary>
        <returns><span data-ttu-id="28caf-129">アクティビティを複合アクティビティから削除できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-129"><see langword="true" /> if the activities can be removed from the composite activity; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-130">含まれているアクティビティのリストを複合アクティビティから削除できるかどうかを判断するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-130">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities%2A> to determine if a list of contained activities can be removed from the composite activity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28caf-131"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities%2A> メソッドをオーバーライドして <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> 内の子アクティビティの移動を可能にする方法の例を、次に示します。</span><span class="sxs-lookup"><span data-stu-id="28caf-131">The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities%2A> method to allow the moving of child activities within the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
 [!code-csharp[WF_Samples#27](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#27)]
 [!code-vb[WF_Samples#27](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainedDesigners">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesigner&gt; ContainedDesigners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ActivityDesigner&gt; ContainedDesigners" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContainedDesigners As ReadOnlyCollection(Of ActivityDesigner)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ActivityDesigner ^&gt; ^ ContainedDesigners { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ActivityDesigner ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainedDesigners : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesigner&gt;" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesigner&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-132"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> に含まれる <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> の配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-132">Gets the array of <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> contained within the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></summary>
        <value><span data-ttu-id="28caf-133"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> の読み取り専用コレクション。</span><span class="sxs-lookup"><span data-stu-id="28caf-133">The read-only collection of <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-134"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners%2A> に含まれるデザイナーの読み取り専用コレクションを取得するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> アクセサーを使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-134">Use the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners%2A> accessor to retrieve a read-only collection of the designers contained within the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeActivitiesFromDataObject">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Activity[] DeserializeActivitiesFromDataObject (IServiceProvider serviceProvider, System.Windows.Forms.IDataObject dataObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Activity[] DeserializeActivitiesFromDataObject(class System.IServiceProvider serviceProvider, class System.Windows.Forms.IDataObject dataObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.DeserializeActivitiesFromDataObject(System.IServiceProvider,System.Windows.Forms.IDataObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeserializeActivitiesFromDataObject (serviceProvider As IServiceProvider, dataObj As IDataObject) As Activity()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Workflow::ComponentModel::Activity ^&gt; ^ DeserializeActivitiesFromDataObject(IServiceProvider ^ serviceProvider, System::Windows::Forms::IDataObject ^ dataObj);" />
      <MemberSignature Language="F#" Value="static member DeserializeActivitiesFromDataObject : IServiceProvider * System.Windows.Forms.IDataObject -&gt; System.Workflow.ComponentModel.Activity[]" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.DeserializeActivitiesFromDataObject (serviceProvider, dataObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="dataObj" Type="System.Windows.Forms.IDataObject" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="28caf-135">コンポーネント シリアル化サービス。</span><span class="sxs-lookup"><span data-stu-id="28caf-135">Component serialization service.</span></span></param>
        <param name="dataObj"><span data-ttu-id="28caf-136">逆シリアル化するアクティビティを格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="28caf-136">Object that contains activities to deserialize.</span></span></param>
        <summary><span data-ttu-id="28caf-137">ドラッグ アンド ドロップ操作中に受け取ったまたはクリップボードから受け取った <see cref="T:System.Windows.Forms.IDataObject" /> から、項目を逆シリアル化します。</span><span class="sxs-lookup"><span data-stu-id="28caf-137">Deserializes items from an <see cref="T:System.Windows.Forms.IDataObject" /> received during a drag-and-drop operation or from the clipboard.</span></span></summary>
        <returns><span data-ttu-id="28caf-138"><see cref="T:System.Windows.Forms.IDataObject" /> から逆シリアル化されたアクティビティの配列。</span><span class="sxs-lookup"><span data-stu-id="28caf-138">An array of activities deserialized from an <see cref="T:System.Windows.Forms.IDataObject" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="compositeActivityDesigner.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="28caf-139">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-139"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="28caf-140"><see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> で使用されたアンマネージド リソースを解放し、必要に応じてマネージド リソースも解放します。</span><span class="sxs-lookup"><span data-stu-id="28caf-140">Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureVisibleContainedDesigner">
      <MemberSignature Language="C#" Value="public virtual void EnsureVisibleContainedDesigner (System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureVisibleContainedDesigner(class System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnsureVisibleContainedDesigner (containedDesigner As ActivityDesigner)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnsureVisibleContainedDesigner(System::Workflow::ComponentModel::Design::ActivityDesigner ^ containedDesigner);" />
      <MemberSignature Language="F#" Value="abstract member EnsureVisibleContainedDesigner : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; unit&#xA;override this.EnsureVisibleContainedDesigner : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; unit" Usage="compositeActivityDesigner.EnsureVisibleContainedDesigner containedDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containedDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="containedDesigner"><span data-ttu-id="28caf-141">表示する対象の、含まれているデザイナー。</span><span class="sxs-lookup"><span data-stu-id="28caf-141">The contained designer to make visible.</span></span></param>
        <summary><span data-ttu-id="28caf-142">含まれているデザイナーが表示されていることを検証します。</span><span class="sxs-lookup"><span data-stu-id="28caf-142">Verifies that the contained designer is visible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-143">含まれているデザイナーを表示するようにするには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-143">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner%2A> to make sure the contained designer is visible.</span></span> <span data-ttu-id="28caf-144">カスタム デザイナーでは、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner%2A> を使用することにより、折りたたまれた複合デザイナー内のデザイナーを表示できます。</span><span class="sxs-lookup"><span data-stu-id="28caf-144">In a custom designer you can use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner%2A> to make visible a designer located within a collapsed composite designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandButtonRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle ExpandButtonRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ExpandButtonRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ExpandButtonRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle ExpandButtonRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpandButtonRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-145">展開または折りたたみボタンが入っている <see cref="T:System.Drawing.Rectangle" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-145">Gets the <see cref="T:System.Drawing.Rectangle" /> that contains the expand or collapse button.</span></span></summary>
        <value><span data-ttu-id="28caf-146">展開または折りたたみボタンを囲む <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-146">A <see cref="T:System.Drawing.Rectangle" /> that encloses the expand or collapse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-147"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> の展開ボタンを囲む画面上の領域を示す <xref:System.Drawing.Rectangle> を返すには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-147">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle%2A> to return a <xref:System.Drawing.Rectangle> that describes the area of the screen that encloses the expand button on a <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span> <span data-ttu-id="28caf-148">これは、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> の展開要求または折りたたみ要求に反応するためのマウス イベントの検出に役立ちます。</span><span class="sxs-lookup"><span data-stu-id="28caf-148">This is useful for detecting mouse events to react to your requests to expand or collapse a <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expanded">
      <MemberSignature Language="C#" Value="public virtual bool Expanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expanded" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Expanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Expanded { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Expanded : bool with get, set" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-149"><see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> が展開されているかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="28caf-149">Gets or sets a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> is expanded.</span></span></summary>
        <value><span data-ttu-id="28caf-150"><see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> が展開されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-150"><see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> is expanded; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-151"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnMouseDown%2A> 上の展開または折りたたみボタンをユーザーがクリックしたときに適切なアクションを判断するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle%2A> を、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> および <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> と組み合わせて使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-151">In combination with <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnMouseDown%2A> and <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle%2A>, use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> to determine the proper action when a user clicks the expand or collapse button on the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28caf-152">引数としてメソッドに渡される `Boolean` 値に基づいて <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> プロパティを設定する方法を、次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="28caf-152">The following code example demonstrates how you can set the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> property based on a `Boolean` value passed as an argument to a method.</span></span>  
  
 <span data-ttu-id="28caf-153">このコード例は、ViewHost.cs ファイルから抜粋したワークフロー モニターの SDK サンプルの一部です。</span><span class="sxs-lookup"><span data-stu-id="28caf-153">This code example is part of the Workflow Monitor SDK sample from the ViewHost.cs file.</span></span> <span data-ttu-id="28caf-154">詳細については、「 [Workflow Monitor](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="28caf-154">For more information, see [Workflow Monitor](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#135](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#135)]
 [!code-vb[WF_Samples#135](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#135)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)"><span data-ttu-id="28caf-155">ワークフロー モニター</span><span class="sxs-lookup"><span data-stu-id="28caf-155">Workflow Monitor</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FirstSelectableObject">
      <MemberSignature Language="C#" Value="public virtual object FirstSelectableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FirstSelectableObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FirstSelectableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ FirstSelectableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstSelectableObject : obj" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-156"><see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> のナビゲーション順で最初の選択可能オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-156">Gets the first selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></summary>
        <value><span data-ttu-id="28caf-157">デザイナーに含まれる最初の選択可能オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="28caf-157">The first selectable object contained within the designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-158">派生クラスでオーバーライドされた場合、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject%2A> に含まれる最初の選択可能オブジェクトを返すには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-158">When overridden in a derived class, use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject%2A> to return the first selectable object contained within the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntersectingDesigners">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Design.ActivityDesigner[] GetIntersectingDesigners (System.Workflow.ComponentModel.Design.ActivityDesigner topLevelDesigner, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Design.ActivityDesigner[] GetIntersectingDesigners(class System.Workflow.ComponentModel.Design.ActivityDesigner topLevelDesigner, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetIntersectingDesigners(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIntersectingDesigners (topLevelDesigner As ActivityDesigner, rectangle As Rectangle) As ActivityDesigner()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Workflow::ComponentModel::Design::ActivityDesigner ^&gt; ^ GetIntersectingDesigners(System::Workflow::ComponentModel::Design::ActivityDesigner ^ topLevelDesigner, System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="static member GetIntersectingDesigners : System.Workflow.ComponentModel.Design.ActivityDesigner * System.Drawing.Rectangle -&gt; System.Workflow.ComponentModel.Design.ActivityDesigner[]" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetIntersectingDesigners (topLevelDesigner, rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesigner[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topLevelDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="topLevelDesigner"><span data-ttu-id="28caf-159">分析対象のトップレベル デザイナー。</span><span class="sxs-lookup"><span data-stu-id="28caf-159">The top-level designer to analyze.</span></span></param>
        <param name="rectangle"><span data-ttu-id="28caf-160">トップレベル デザイナーの範囲内の分析対象領域。</span><span class="sxs-lookup"><span data-stu-id="28caf-160">Area within the top-level designer to analyze.</span></span></param>
        <summary><span data-ttu-id="28caf-161">指定したルート アクティビティに属するデザイナーのうち、指定した領域と交差するデザイナーを取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-161">Retrieves designers belonging to the specified root activity that intersect a specified area.</span></span></summary>
        <returns><span data-ttu-id="28caf-162">指定した四角形の一部と交差する <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="28caf-162">An array of <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> objects that intersect a portion of the Rectangle specified.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextSelectableObject">
      <MemberSignature Language="C#" Value="public virtual object GetNextSelectableObject (object current, System.Workflow.ComponentModel.Design.DesignerNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetNextSelectableObject(object current, valuetype System.Workflow.ComponentModel.Design.DesignerNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNextSelectableObject (current As Object, direction As DesignerNavigationDirection) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetNextSelectableObject(System::Object ^ current, System::Workflow::ComponentModel::Design::DesignerNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member GetNextSelectableObject : obj * System.Workflow.ComponentModel.Design.DesignerNavigationDirection -&gt; obj&#xA;override this.GetNextSelectableObject : obj * System.Workflow.ComponentModel.Design.DesignerNavigationDirection -&gt; obj" Usage="compositeActivityDesigner.GetNextSelectableObject (current, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Object" />
        <Parameter Name="direction" Type="System.Workflow.ComponentModel.Design.DesignerNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="28caf-163">ナビゲーション順の現在のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="28caf-163">The current object in the navigation order.</span></span></param>
        <param name="direction"><span data-ttu-id="28caf-164">移動方向。</span><span class="sxs-lookup"><span data-stu-id="28caf-164">The direction to navigate.</span></span> <span data-ttu-id="28caf-165">0 = 次、1 = 前、2 = 左、3 = 右。</span><span class="sxs-lookup"><span data-stu-id="28caf-165">0 = next; 1 = previous; 2 = left; 3 = right.</span></span></param>
        <summary><span data-ttu-id="28caf-166">ナビゲーション順で次のオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-166">Gets the object which is next in the order of navigation.</span></span></summary>
        <returns><span data-ttu-id="28caf-167">ナビゲーション順で次のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="28caf-167">The object that is next in the order of navigation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-168"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetNextSelectableObject%2A> により、現在選択されているものから、指定した方向の次の選択可能オブジェクトに、選択が移動します。</span><span class="sxs-lookup"><span data-stu-id="28caf-168"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetNextSelectableObject%2A> causes the selection to move from the current selection to the next selectable object in the direction specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Glyphs">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Glyphs" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property Glyphs As ActivityDesignerGlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ Glyphs { System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Glyphs : System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Glyphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-169">複合アクティビティ デザイナーを装飾するグリフのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-169">Gets a collection of glyphs with which to adorn the composite activity designer.</span></span></summary>
        <value><span data-ttu-id="28caf-170">デザイナーに表示するグリフを格納している <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-170">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> that contains the glyphs to display on the designer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public override System.Workflow.ComponentModel.Design.HitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Workflow.ComponentModel.Design.HitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HitTest (point As Point) As HitTestInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Workflow::ComponentModel::Design::HitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="override this.HitTest : System.Drawing.Point -&gt; System.Workflow.ComponentModel.Design.HitTestInfo" Usage="compositeActivityDesigner.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="28caf-171">単一の x および y 座標を表す <see cref="T:System.Drawing.Point" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-171">A <see cref="T:System.Drawing.Point" /> that represents a single x and y coordinate.</span></span></param>
        <summary><span data-ttu-id="28caf-172">画面上の指定したポイントにある <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> に関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-172">Gets information about the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> at a specified point on the screen.</span></span></summary>
        <returns><span data-ttu-id="28caf-173">指定した位置の <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> に関する情報を格納している <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-173">A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that contains information about the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> at a specified point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-174"><xref:System.Workflow.ComponentModel.Design.HitTestInfo> は、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest%2A> コントロール内のどの部分がクリックされたかを判断するために、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> コントロールの <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> メソッドと共に使用されます。</span><span class="sxs-lookup"><span data-stu-id="28caf-174">The <xref:System.Workflow.ComponentModel.Design.HitTestInfo>, together with the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest%2A> method of the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> control is used to determine which part of a <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> controls you have clicked.</span></span> <span data-ttu-id="28caf-175"><xref:System.Workflow.ComponentModel.Design.HitTestInfo> には、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> でマウスがクリックされた位置の論理座標が格納されています。</span><span class="sxs-lookup"><span data-stu-id="28caf-175">The <xref:System.Workflow.ComponentModel.Design.HitTestInfo> contains logical coordinates of the point on the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> where the mouse was clicked.</span></span>  
  
 <span data-ttu-id="28caf-176"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest%2A> メソッドは、x 座標と y 座標が格納された <xref:System.Drawing.Point> を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="28caf-176">The <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest%2A> method receives a <xref:System.Drawing.Point> that contains an x and y coordinate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRectangle">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle ImageRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ImageRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ImageRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle ImageRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-177">デザイナーに関連付けられたイメージを囲む境界の論理座標値を取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-177">Gets the value for the enclosing bounds of the image associated with the designer in logical coordinates.</span></span></summary>
        <value><span data-ttu-id="28caf-178"><see cref="T:System.Drawing.Image" /> 用に表示される <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> を囲む四角形。</span><span class="sxs-lookup"><span data-stu-id="28caf-178">A rectangle that encloses the <see cref="T:System.Drawing.Image" /> displayed for the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-179">デザイナーに関連付けられているイメージを囲む四角形の座標を取得するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-179">Use the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> to retrieve the coordinates for the rectangle that encloses the image associated with the designer.</span></span> <span data-ttu-id="28caf-180">これらの座標は、コネクタの描画やグラフィックスのオーバーレイに使用できます。</span><span class="sxs-lookup"><span data-stu-id="28caf-180">You can use these coordinates for drawing connectors or overlaying graphics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28caf-181"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> プロパティをオーバーライドする方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="28caf-181">The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> property.</span></span> <span data-ttu-id="28caf-182">この例では、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> は、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> の Bounds を使用して計算されます。</span><span class="sxs-lookup"><span data-stu-id="28caf-182">In this example, the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> is calculated using the Bounds of the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
 [!code-csharp[WF_Samples#74](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#74)]
 [!code-vb[WF_Samples#74](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#74)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Initialize (activity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="compositeActivityDesigner.Initialize activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="28caf-183">デザイナーの初期化に使用する <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-183">The <see cref="T:System.Workflow.ComponentModel.Activity" /> with which the designer should be initialized.</span></span></param>
        <summary><span data-ttu-id="28caf-184">関連付けられた <see cref="T:System.Workflow.ComponentModel.Activity" /> を使用してデザイナーを初期化します。</span><span class="sxs-lookup"><span data-stu-id="28caf-184">Initializes the designer with the associated <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-185"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Initialize%2A> は、指定した <xref:System.Workflow.ComponentModel.Activity> と共にデザイナーを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="28caf-185"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Initialize%2A> loads the designer with the specified <xref:System.Workflow.ComponentModel.Activity>.</span></span> <span data-ttu-id="28caf-186">デザイナーはアクティビティ サービスを読み込み、アクティビティに関連付けられた動詞を更新し、デザイナーの既定のテキストとイメージを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="28caf-186">The designer loads the activity service, updates the verbs associated with the activity, and assigns the default text and image to the designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertActivities">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28caf-187">デザイナーにアクティビティを挿入します。</span><span class="sxs-lookup"><span data-stu-id="28caf-187">Inserts activities into the designer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertActivities">
      <MemberSignature Language="C#" Value="public virtual void InsertActivities (System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToInsert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertActivities(class System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToInsert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertActivities (insertLocation As HitTestInfo, activitiesToInsert As ReadOnlyCollection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertActivities(System::Workflow::ComponentModel::Design::HitTestInfo ^ insertLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToInsert);" />
      <MemberSignature Language="F#" Value="abstract member InsertActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit&#xA;override this.InsertActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit" Usage="compositeActivityDesigner.InsertActivities (insertLocation, activitiesToInsert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToInsert" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="insertLocation"><span data-ttu-id="28caf-188">アクティビティを挿入するデザイナー内の位置。</span><span class="sxs-lookup"><span data-stu-id="28caf-188">The location in the designer to insert the activities.</span></span></param>
        <param name="activitiesToInsert"><span data-ttu-id="28caf-189">挿入するアクティビティのリスト。</span><span class="sxs-lookup"><span data-stu-id="28caf-189">The list of activities to insert.</span></span></param>
        <summary><span data-ttu-id="28caf-190">指定したアクティビティをデザイナー内の指定した位置に挿入します。</span><span class="sxs-lookup"><span data-stu-id="28caf-190">Inserts the specified activities in the designer at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-191">指定した位置にアクティビティのリストを挿入するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-191">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> to insert a list of activities into the location specified.</span></span>  
  
 <span data-ttu-id="28caf-192"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> を呼び出す前に、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> を使用して、指定したアクティビティを挿入できることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="28caf-192">Prior to calling <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A>, use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> to make sure that the specified activities can be inserted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertActivities">
      <MemberSignature Language="C#" Value="public static void InsertActivities (System.Workflow.ComponentModel.Design.CompositeActivityDesigner compositeActivityDesigner, System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToInsert, string undoTransactionDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InsertActivities(class System.Workflow.ComponentModel.Design.CompositeActivityDesigner compositeActivityDesigner, class System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToInsert, string undoTransactionDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.CompositeActivityDesigner,System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InsertActivities (compositeActivityDesigner As CompositeActivityDesigner, insertLocation As HitTestInfo, activitiesToInsert As ReadOnlyCollection(Of Activity), undoTransactionDescription As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InsertActivities(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ compositeActivityDesigner, System::Workflow::ComponentModel::Design::HitTestInfo ^ insertLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToInsert, System::String ^ undoTransactionDescription);" />
      <MemberSignature Language="F#" Value="static member InsertActivities : System.Workflow.ComponentModel.Design.CompositeActivityDesigner * System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; * string -&gt; unit" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities (compositeActivityDesigner, insertLocation, activitiesToInsert, undoTransactionDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositeActivityDesigner" Type="System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
        <Parameter Name="insertLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToInsert" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
        <Parameter Name="undoTransactionDescription" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compositeActivityDesigner"><span data-ttu-id="28caf-193">アクティビティが挿入されるデザイナー。</span><span class="sxs-lookup"><span data-stu-id="28caf-193">The designer into which the activities will be inserted.</span></span></param>
        <param name="insertLocation"><span data-ttu-id="28caf-194">アクティビティが挿入されるデザイナー内の位置。</span><span class="sxs-lookup"><span data-stu-id="28caf-194">The location in the designer at which the activities will be inserted.</span></span></param>
        <param name="activitiesToInsert"><span data-ttu-id="28caf-195">挿入するアクティビティのリスト。</span><span class="sxs-lookup"><span data-stu-id="28caf-195">The list of activities to insert.</span></span></param>
        <param name="undoTransactionDescription"><span data-ttu-id="28caf-196">挿入によって作成されるデザイナー トランザクションの説明。</span><span class="sxs-lookup"><span data-stu-id="28caf-196">Description for the designer transaction created by the insertion.</span></span></param>
        <summary><span data-ttu-id="28caf-197">トランザクションを使用して、デザイナー内の指定した位置にアクティビティを挿入します。</span><span class="sxs-lookup"><span data-stu-id="28caf-197">Inserts activities into the designer at the specified location using a transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-198">複合アクティビティにアクティビティのリストを挿入するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-198">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> to insert a list of activities into the composite activity.</span></span>  
  
 <span data-ttu-id="28caf-199"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> を呼び出す前に、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> を使用して、指定したアクティビティのリストを挿入できることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="28caf-199">Prior to calling <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A>, use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> to make sure the specified list of activities can be inserted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28caf-200"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> クラスからのデザイナー ベースの新しい分岐の追加の例を、次に示します。</span><span class="sxs-lookup"><span data-stu-id="28caf-200">The following example demonstrates the addition of a new branch using a designer based off of the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> class.</span></span>  <span data-ttu-id="28caf-201"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> が true を返した場合、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> メソッドを使用して新しい分岐が作成されます。</span><span class="sxs-lookup"><span data-stu-id="28caf-201">If <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> returns true, a new branch is created using the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> method.</span></span>  
  
 [!code-csharp[WF_Samples#28](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#28)]
 [!code-vb[WF_Samples#28](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContainedDesignerVisible">
      <MemberSignature Language="C#" Value="public virtual bool IsContainedDesignerVisible (System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsContainedDesignerVisible(class System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsContainedDesignerVisible(System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsContainedDesignerVisible (containedDesigner As ActivityDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsContainedDesignerVisible(System::Workflow::ComponentModel::Design::ActivityDesigner ^ containedDesigner);" />
      <MemberSignature Language="F#" Value="abstract member IsContainedDesignerVisible : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; bool&#xA;override this.IsContainedDesignerVisible : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; bool" Usage="compositeActivityDesigner.IsContainedDesignerVisible containedDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containedDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="containedDesigner"><span data-ttu-id="28caf-202">表示されているかどうかをテストする CompositeActivityDesigner に含まれるデザイナー。</span><span class="sxs-lookup"><span data-stu-id="28caf-202">The designer contained within the CompositeActivityDesigner to test for visibility.</span></span></param>
        <summary><span data-ttu-id="28caf-203">含まれているデザイナーが表示されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-203">Gets a value that indicates if the contained designer is visible.</span></span></summary>
        <returns><span data-ttu-id="28caf-204">含まれているデザイナーが表示されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-204"><see langword="true" /> if the contained designer is visible; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-205">指定したデザイナーが表示されているかどうかを判断するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsContainedDesignerVisible%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-205">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsContainedDesignerVisible%2A> to determine if the specified designer is visible.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditable">
      <MemberSignature Language="C#" Value="public bool IsEditable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditable" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditable : bool" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-206">デザイナーを編集できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-206">Gets a value that indicates whether the designer can be edited.</span></span></summary>
        <value><span data-ttu-id="28caf-207">デザイナーを編集できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-207"><see langword="true" /> if the designer can be edited; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-208">カスタム アクティビティによっては、デザイン環境でプロパティや他の設定を変更できないことがあります。</span><span class="sxs-lookup"><span data-stu-id="28caf-208">Some custom activities might not allow you to modify properties or other settings in the design environment.</span></span> <span data-ttu-id="28caf-209">デザイン時にデザイナーを編集できるかどうかは、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable%2A> プロパティで判断します。</span><span class="sxs-lookup"><span data-stu-id="28caf-209">The <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable%2A> property should determine whether the designer allows edits at design time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastSelectableObject">
      <MemberSignature Language="C#" Value="public virtual object LastSelectableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object LastSelectableObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LastSelectableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ LastSelectableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSelectableObject : obj" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-210"><see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> に含まれる最後の選択可能オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-210">Gets the last selectable object contained within the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></summary>
        <value><span data-ttu-id="28caf-211"><see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> に含まれる最後の選択可能オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="28caf-211">The last selectable object contained within the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-212">派生クラスでオーバーライドされた場合、デザイナーに含まれる最後の選択可能オブジェクトを返すには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-212">When overridden in a derived class, use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject%2A> to return the last selectable object contained within the designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : System.IO.BinaryReader -&gt; unit" Usage="compositeActivityDesigner.LoadViewState reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="28caf-213">ビューステートの読み込み元の <see cref="T:System.IO.BinaryReader" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-213">The <see cref="T:System.IO.BinaryReader" /> from which to load the view state.</span></span></param>
        <summary><span data-ttu-id="28caf-214">バイナリ ストリームからビューステートを復元します。</span><span class="sxs-lookup"><span data-stu-id="28caf-214">Restores the view state from a binary stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-215">以前に <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState%2A> を使用して保存した状態にデザイナーを復元するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-215">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState%2A> to restore the designer to a state previously saved using <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public override System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-216">デザイナーの論理座標上の位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="28caf-216">Gets or sets the location of the designer in logical coordinates.</span></span></summary>
        <value><span data-ttu-id="28caf-217">デザイナーの論理座標での位置。</span><span class="sxs-lookup"><span data-stu-id="28caf-217">The location of the designer in logical coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-218">デザイン時または実行時にデザイナーを配置するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-218">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location%2A> to position the designer at design or run time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveActivities">
      <MemberSignature Language="C#" Value="public virtual void MoveActivities (System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToMove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveActivities(class System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToMove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MoveActivities (moveLocation As HitTestInfo, activitiesToMove As ReadOnlyCollection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveActivities(System::Workflow::ComponentModel::Design::HitTestInfo ^ moveLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToMove);" />
      <MemberSignature Language="F#" Value="abstract member MoveActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit&#xA;override this.MoveActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit" Usage="compositeActivityDesigner.MoveActivities (moveLocation, activitiesToMove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moveLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToMove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="moveLocation"><span data-ttu-id="28caf-219">アクティビティの移動先の場所を示す <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-219">A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> describing the location to which to move the activities.</span></span></param>
        <param name="activitiesToMove"><span data-ttu-id="28caf-220">移動するアクティビティのリスト。</span><span class="sxs-lookup"><span data-stu-id="28caf-220">The list of activities to move.</span></span></param>
        <summary><span data-ttu-id="28caf-221">あるデザイナーから別のデザイナーにアクティビティを移動します。</span><span class="sxs-lookup"><span data-stu-id="28caf-221">Moves activities from one designer to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-222">ある複合アクティビティから別の複合アクティビティにアクティビティのリストを移動するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveActivities%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-222">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveActivities%2A> to move a list of activities from one composite activity to another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveDesigners">
      <MemberSignature Language="C#" Value="public static void MoveDesigners (System.Workflow.ComponentModel.Design.ActivityDesigner activityDesigner, bool moveBack);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveDesigners(class System.Workflow.ComponentModel.Design.ActivityDesigner activityDesigner, bool moveBack) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MoveDesigners (activityDesigner As ActivityDesigner, moveBack As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveDesigners(System::Workflow::ComponentModel::Design::ActivityDesigner ^ activityDesigner, bool moveBack);" />
      <MemberSignature Language="F#" Value="static member MoveDesigners : System.Workflow.ComponentModel.Design.ActivityDesigner * bool -&gt; unit" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners (activityDesigner, moveBack)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="moveBack" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="activityDesigner"><span data-ttu-id="28caf-223">移動するアクティビティ デザイナー。</span><span class="sxs-lookup"><span data-stu-id="28caf-223">The activity designer to move.</span></span></param>
        <param name="moveBack"><span data-ttu-id="28caf-224">デザイナーを後方に移動する場合は <see langword="true" />。前方に移動する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-224"><see langword="true" /> to move the designer backwards; <see langword="false" /> to move the designer forward.</span></span></param>
        <summary><span data-ttu-id="28caf-225">デザイナーを複合アクティビティ内の前方または後方のインデックスに移動します。</span><span class="sxs-lookup"><span data-stu-id="28caf-225">Moves a designer forward or backwards in index within the composite activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-226">複合アクティビティに含まれているアクティビティを、含まれているアクティビティの前方または後方のインデックスに移動するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-226">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners%2A> to move an activity contained within the composite activity forward or backwards in the index of contained activities.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContainedActivitiesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContainedActivitiesChanged (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContainedActivitiesChanged(class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContainedActivitiesChanged (listChangeArgs As ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContainedActivitiesChanged(System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^ listChangeArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnContainedActivitiesChanged : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit&#xA;override this.OnContainedActivitiesChanged : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnContainedActivitiesChanged listChangeArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listChangeArgs" Type="System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="listChangeArgs"><span data-ttu-id="28caf-227">変更に関する情報が格納されている <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-227">An <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> containing information about the change.</span></span></param>
        <summary><span data-ttu-id="28caf-228">デザイナーに含まれているアクティビティが複数変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="28caf-228">Occurs when more than one activities contained within the designers have changed.</span></span> <span data-ttu-id="28caf-229">これは、たとえば、新しい子アクティビティが追加されるときや既存の子アクティビティが削除されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="28caf-229">This occurs, for example, when a new child activity is added or an existing child activity is removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-230">複合アクティビティ内のアクティビティへの変更に対応するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanged%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-230">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanged%2A> to respond to changes to activities inside the composite activity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28caf-231"><paramref name="listChangeArgs" /> に null 参照 (Visual Basic の場合は <see langword="Nothing" />) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="28caf-231"><paramref name="listChangeArgs" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnContainedActivitiesChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnContainedActivitiesChanging (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContainedActivitiesChanging(class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContainedActivitiesChanging (listChangeArgs As ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContainedActivitiesChanging(System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^ listChangeArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnContainedActivitiesChanging : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit&#xA;override this.OnContainedActivitiesChanging : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnContainedActivitiesChanging listChangeArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listChangeArgs" Type="System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="listChangeArgs"><span data-ttu-id="28caf-232">変更に関する情報を格納している <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-232">An <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> that contains information about the change.</span></span></param>
        <summary><span data-ttu-id="28caf-233">デザイナーに含まれているアクティビティまたはアクティビティのグループが変更されているときに発生します。</span><span class="sxs-lookup"><span data-stu-id="28caf-233">Occurs when an activity or a group of activities contained within the designer are changing.</span></span> <span data-ttu-id="28caf-234">これは、たとえば、新しい子アクティビティが追加されるときや既存の子アクティビティが削除されるときに発生します。</span><span class="sxs-lookup"><span data-stu-id="28caf-234">This occurs, for example, when a new child activity is added or an existing child activity is removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-235">複合アクティビティに含まれているアクティビティで発生している変更に対応するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanging%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-235">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanging%2A> to respond to changes that are occurring to the activities contained within the composite activity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28caf-236"><paramref name="listChangeArgs" /> に null 参照 (Visual Basic の場合は <see langword="Nothing" />) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="28caf-236"><paramref name="listChangeArgs" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnContainedActivityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContainedActivityChanged (System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContainedActivityChanged(class System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContainedActivityChanged (e As ActivityChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContainedActivityChanged(System::Workflow::ComponentModel::Design::ActivityChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContainedActivityChanged : System.Workflow.ComponentModel.Design.ActivityChangedEventArgs -&gt; unit&#xA;override this.OnContainedActivityChanged : System.Workflow.ComponentModel.Design.ActivityChangedEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnContainedActivityChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28caf-237">変更に関する情報を格納している <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-237">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" /> that contains information about the change.</span></span></param>
        <summary><span data-ttu-id="28caf-238">デザイナーに含まれているアクティビティが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="28caf-238">Occurs when an activity contained within the designer has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-239">複合アクティビティに含まれているアクティビティでの変更に対応するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivityChanged%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-239">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivityChanged%2A> to respond to changes in the activities contained within the composite activity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28caf-240"><paramref name="e" /> に null 参照 (Visual Basic の場合は <see langword="Nothing" />) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="28caf-240"><paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28caf-241">イベント データを含んでいる <see cref="T:System.Windows.Forms.KeyEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="28caf-241">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28caf-242">デザイナーにフォーカスがあるときにキーが押されると、呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="28caf-242">Called when a key is pressed with the designer in focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutPosition">
      <MemberSignature Language="C#" Value="protected override void OnLayoutPosition (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayoutPosition(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayoutPosition (e As ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayoutPosition(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayoutPosition : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnLayoutPosition e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28caf-243">イベント データを格納している <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="28caf-243">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28caf-244">子アクティビティを再配置するために、<see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> に含まれているビジュアル キューまたはデザイナーをレイアウトおよび配置するタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="28caf-244">Performs layout and positioning tasks for the contained visual cues or designers on the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> to reposition its child activities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-245"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutPosition%2A> は、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> に含まれるすべての子アクティビティ デザイナーのレイアウト タスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="28caf-245"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutPosition%2A> performs layout tasks for all of the child activity designers that the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> contains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28caf-246"><paramref name="e" /> に null 参照 (Visual Basic の場合は <see langword="Nothing" />) が含まれています。</span><span class="sxs-lookup"><span data-stu-id="28caf-246"><paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size OnLayoutSize (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size OnLayoutSize(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnLayoutSize (e As ActivityDesignerLayoutEventArgs) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Size OnLayoutSize(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayoutSize : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; System.Drawing.Size" Usage="compositeActivityDesigner.OnLayoutSize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28caf-247">イベント データを格納している <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> 。</span><span class="sxs-lookup"><span data-stu-id="28caf-247">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28caf-248">現在の状態 (折りたたまれた状態または展開された状態) と子アクティビティのリストに基づいてアクティビティに必要なサイズを計算するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="28caf-248">Called to calculate the size needed for an activity based on its current state (collapsed or expanded) and its list of child activities.</span></span></summary>
        <returns><span data-ttu-id="28caf-249"><see cref="T:System.Drawing.Size" /> の新しいサイズ設定を格納している <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-249">The <see cref="T:System.Drawing.Size" /> that contains the new size settings for the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-250"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutSize%2A> は、複合アクティビティ デザイナーに含まれる各アクティビティ デザイナーのサイズ変更タスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="28caf-250"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutSize%2A> performs resizing tasks for each activity designer that the composite activity designer contains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28caf-251">イベント データを含んでいる <see cref="T:System.Windows.Forms.MouseEventArgs" /> です。</span><span class="sxs-lookup"><span data-stu-id="28caf-251">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28caf-252">マウス ポインターがデザイナーの境界内にあるときにマウスがクリックされると呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="28caf-252">Called when the mouse is clicked when the pointer is in designer bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-253">ドラッグ アンド ドロップ操作関連のイベントがどのように、いつ発生するかについて次に示します。</span><span class="sxs-lookup"><span data-stu-id="28caf-253">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="28caf-254">デザイナーが有効なドロップ ターゲットの場合、ドラッグ アンド ドロップの効果が指定された <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="28caf-254">If the designer is a valid drop target, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="28caf-255">ドラッグ アンド ドロップ効果の一覧については、<xref:System.Windows.Forms.DragDropEffects> 列挙体を参照してください。</span><span class="sxs-lookup"><span data-stu-id="28caf-255">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
-   <span data-ttu-id="28caf-256">マウス ポインターの位置、キーボードの状態、およびマウス ボタンの状態の変更が監視されます。</span><span class="sxs-lookup"><span data-stu-id="28caf-256">Changes in the pointer position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="28caf-257">マウスをデザイナー境界の外側に移動した場合は、<xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="28caf-257">If the user moves out of the designer bounds, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> event is raised.</span></span>  
  
-   <span data-ttu-id="28caf-258">マウスを別のデザイナーに移動した場合は、そのデザイナーの <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="28caf-258">If the mouse enters another designer, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> for that designer is raised.</span></span>  
  
-   <span data-ttu-id="28caf-259">マウスを同じデザイナー内で移動した場合は、<xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="28caf-259">If the mouse moves but stays within the same designer, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> event is raised.</span></span>  
  
-   <span data-ttu-id="28caf-260">キーボードまたはマウスの状態に変更があった場合、<xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> イベントが生成され、このイベントの `Action` の <xref:System.Windows.Forms.QueryContinueDragEventArgs> プロパティの値に応じて、ドラッグを継続するか、データをドロップするか、操作をキャンセルするかが判断されます。</span><span class="sxs-lookup"><span data-stu-id="28caf-260">If there is a change in the keyboard or mouse state, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the `Action` property of the event <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
 <span data-ttu-id="28caf-261">値が `DragAction.Continue` の場合、操作を継続するための <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> イベントが発生し、適切な視覚的フィードバックを設定できるように新しい効果が指定された <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="28caf-261">If the value is `DragAction.Continue`, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> event is raised to continue the operation and the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="28caf-262">有効なドロップ効果の一覧については、<xref:System.Windows.Forms.DragDropEffects> 列挙体を参照してください。</span><span class="sxs-lookup"><span data-stu-id="28caf-262">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28caf-263"><xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> イベントと <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> イベントはペアになっています。したがって、マウスがドロップ ターゲット上で移動すると、マウスの位置に関する最新のフィードバックがユーザーに提示されます。</span><span class="sxs-lookup"><span data-stu-id="28caf-263">The <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> and <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> events are paired so that as the mouse moves across the drop target, the user is supplied with the most up-to-date feedback about the mouse position.</span></span>  
  
 <span data-ttu-id="28caf-264">値が `DragAction.Drop` の場合は、ドロップ効果の値がソースに返されます。ソース アプリケーションでは、ソース データに対して適切な操作を実行できます。たとえば、移動操作だった場合は、データの切り取りなどを実行できます。</span><span class="sxs-lookup"><span data-stu-id="28caf-264">If the value is `DragAction.Drop`, the drop effect value is returned to the source, so that the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
 <span data-ttu-id="28caf-265">値が `DragAction.Cancel` の場合、<xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="28caf-265">If the value is `DragAction.Cancel`, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> event is raised.</span></span>  
  
 <span data-ttu-id="28caf-266">イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](/dotnet/standard/events/)します。</span><span class="sxs-lookup"><span data-stu-id="28caf-266">For more information about how to handle events, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Workflow::ComponentModel::Design::ActivityDesignerPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28caf-267">描画データを格納している <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-267">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the drawing data.</span></span></param>
        <summary><span data-ttu-id="28caf-268">デザイン時に複合アクティビティの視覚的表現を描画します。</span><span class="sxs-lookup"><span data-stu-id="28caf-268">Draws the visual representation of a composite activity at design time.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnThemeChange">
      <MemberSignature Language="C#" Value="protected override void OnThemeChange (System.Workflow.ComponentModel.Design.ActivityDesignerTheme designerTheme);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnThemeChange(class System.Workflow.ComponentModel.Design.ActivityDesignerTheme designerTheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnThemeChange (designerTheme As ActivityDesignerTheme)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnThemeChange(System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ designerTheme);" />
      <MemberSignature Language="F#" Value="override this.OnThemeChange : System.Workflow.ComponentModel.Design.ActivityDesignerTheme -&gt; unit" Usage="compositeActivityDesigner.OnThemeChange designerTheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerTheme" Type="System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />
      </Parameters>
      <Docs>
        <param name="designerTheme"><span data-ttu-id="28caf-269">イベント データを含んでいる <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> です。</span><span class="sxs-lookup"><span data-stu-id="28caf-269">A <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="28caf-270">関連付けられたテーマが変更されたことをデザイナーに通知します。</span><span class="sxs-lookup"><span data-stu-id="28caf-270">Notifies the designer that the associated theme has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-271"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnThemeChange%2A> は、デザイナーに関連付けられたテーマが変更されると発生します。</span><span class="sxs-lookup"><span data-stu-id="28caf-271"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnThemeChange%2A> occurs any time the theme associated with the designer changes.</span></span> <span data-ttu-id="28caf-272">テーマが変更されると、多くの場合はデザイナーの外観を変更する必要があります。</span><span class="sxs-lookup"><span data-stu-id="28caf-272">When the theme changes it is likely that the designer look and feel needs to change.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaintContainedDesigners">
      <MemberSignature Language="C#" Value="protected void PaintContainedDesigners (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PaintContainedDesigners(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.PaintContainedDesigners(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PaintContainedDesigners (e As ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PaintContainedDesigners(System::Workflow::ComponentModel::Design::ActivityDesignerPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.PaintContainedDesigners : System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs -&gt; unit" Usage="compositeActivityDesigner.PaintContainedDesigners e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="28caf-273">描画に使用する <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-273"><see cref="T:System.EventArgs" /> to be used for painting.</span></span></param>
        <summary><span data-ttu-id="28caf-274">グラフィックス オブジェクト上のクリップ領域を調整し、含まれているすべてのデザイナーについて <see cref="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" /> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="28caf-274">Adjusts the clip region on the graphics object and calls <see cref="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" /> on all contained designers.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveActivities">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28caf-275">複合アクティビティ デザイナーからすべてのアクティビティを削除します。</span><span class="sxs-lookup"><span data-stu-id="28caf-275">Removes all activities from the composite activity designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-276">複合アクティビティからアクティビティを削除するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-276">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities%2A> to remove activities from the composite activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveActivities">
      <MemberSignature Language="C#" Value="public virtual void RemoveActivities (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveActivities(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveActivities (activitiesToRemove As ReadOnlyCollection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveActivities(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToRemove);" />
      <MemberSignature Language="F#" Value="abstract member RemoveActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit&#xA;override this.RemoveActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit" Usage="compositeActivityDesigner.RemoveActivities activitiesToRemove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activitiesToRemove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="activitiesToRemove"><span data-ttu-id="28caf-277">デザイナーから削除するアクティビティのリスト。</span><span class="sxs-lookup"><span data-stu-id="28caf-277">A list of activities to remove from the designer.</span></span></param>
        <summary><span data-ttu-id="28caf-278">複合アクティビティ デザイナーからアクティビティのリストを削除します。</span><span class="sxs-lookup"><span data-stu-id="28caf-278">Removes a list of activities from the composite activity designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-279">複合アクティビティからアクティビティのリストを削除します。</span><span class="sxs-lookup"><span data-stu-id="28caf-279">Removes the list of activities from the composite activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActivities">
      <MemberSignature Language="C#" Value="public static void RemoveActivities (IServiceProvider serviceProvider, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToRemove, string transactionDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveActivities(class System.IServiceProvider serviceProvider, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToRemove, string transactionDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities(System.IServiceProvider,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveActivities (serviceProvider As IServiceProvider, activitiesToRemove As ReadOnlyCollection(Of Activity), transactionDescription As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveActivities(IServiceProvider ^ serviceProvider, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToRemove, System::String ^ transactionDescription);" />
      <MemberSignature Language="F#" Value="static member RemoveActivities : IServiceProvider * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; * string -&gt; unit" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities (serviceProvider, activitiesToRemove, transactionDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="activitiesToRemove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
        <Parameter Name="transactionDescription" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="28caf-280">デザイナーに関連付けられたサービス プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="28caf-280">The service provider associated with the designer.</span></span></param>
        <param name="activitiesToRemove"><span data-ttu-id="28caf-281">削除するアクティビティのリスト。</span><span class="sxs-lookup"><span data-stu-id="28caf-281">The list of activities to remove.</span></span></param>
        <param name="transactionDescription"><span data-ttu-id="28caf-282">作成されるトランザクションの説明。</span><span class="sxs-lookup"><span data-stu-id="28caf-282">The description of the transaction created.</span></span></param>
        <summary><span data-ttu-id="28caf-283">トランザクションを使用してデザイナーからアクティビティのリストを削除します。</span><span class="sxs-lookup"><span data-stu-id="28caf-283">Removes the list of activities from the designer using a transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-284">指定したトランザクション内の複合アクティビティから、指定したアクティビティのリストを削除するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-284">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities%2A> to remove the specified list of activities from the composite activity within the specified transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override void SaveViewState (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SaveViewState(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SaveViewState (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SaveViewState(System::IO::BinaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : System.IO.BinaryWriter -&gt; unit" Usage="compositeActivityDesigner.SaveViewState writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="28caf-285">ビューステートが格納される <see cref="T:System.IO.BinaryWriter" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-285">The <see cref="T:System.IO.BinaryWriter" /> into which the view state is stored.</span></span></param>
        <summary><span data-ttu-id="28caf-286">ビューステートをバイナリ ストリームに保存します。</span><span class="sxs-lookup"><span data-stu-id="28caf-286">Saves the view state to a binary stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-287">複合アクティビティの状態をストリームに保存するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-287">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState%2A> to save the state of a composite activity to a stream.</span></span> <span data-ttu-id="28caf-288">ビューステートを復元するには、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-288">To restore the view state use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeActivitiesToDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject SerializeActivitiesToDataObject (IServiceProvider serviceProvider, System.Workflow.ComponentModel.Activity[] activities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject SerializeActivitiesToDataObject(class System.IServiceProvider serviceProvider, class System.Workflow.ComponentModel.Activity[] activities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SerializeActivitiesToDataObject(System.IServiceProvider,System.Workflow.ComponentModel.Activity[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SerializeActivitiesToDataObject (serviceProvider As IServiceProvider, activities As Activity()) As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ SerializeActivitiesToDataObject(IServiceProvider ^ serviceProvider, cli::array &lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activities);" />
      <MemberSignature Language="F#" Value="static member SerializeActivitiesToDataObject : IServiceProvider * System.Workflow.ComponentModel.Activity[] -&gt; System.Windows.Forms.IDataObject" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SerializeActivitiesToDataObject (serviceProvider, activities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="activities" Type="System.Workflow.ComponentModel.Activity[]" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="28caf-289">コンポーネント シリアル化サービス。</span><span class="sxs-lookup"><span data-stu-id="28caf-289">Component serialization service.</span></span></param>
        <param name="activities"><span data-ttu-id="28caf-290">シリアル化するアクティビティの配列。</span><span class="sxs-lookup"><span data-stu-id="28caf-290">Array of activities to serialize.</span></span></param>
        <summary><span data-ttu-id="28caf-291">アクティビティの配列を、クリップボードに配置したりドラッグ アンド ドロップ操作の初期化時に使用したりできる <see cref="T:System.Windows.Forms.IDataObject" /> にシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="28caf-291">Serializes an array of activities to an <see cref="T:System.Windows.Forms.IDataObject" /> that can be placed into the clipboard or used when initializing a drag and drop operation.</span></span></summary>
        <returns><span data-ttu-id="28caf-292">シリアル化されたアクティビティが格納されている <see cref="T:System.Windows.Forms.IDataObject" />。</span><span class="sxs-lookup"><span data-stu-id="28caf-292"><see cref="T:System.Windows.Forms.IDataObject" /> that contains serialized activities.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRectangle">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle TextRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle TextRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TextRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle TextRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.TextRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-293">説明用の四角形の論理座標値を取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-293">Gets the value of the description rectangle in logical coordinates.</span></span></summary>
        <value><span data-ttu-id="28caf-294">説明用の四角形の論理座標値。</span><span class="sxs-lookup"><span data-stu-id="28caf-294">The value of the description rectangle in logical coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-295">テキスト記述が表示されるデザイナー上の場所を確認するのに使用します。</span><span class="sxs-lookup"><span data-stu-id="28caf-295">Use to determine the location on the designer where the text description will be displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28caf-296"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle%2A> プロパティをオーバーライドする方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="28caf-296">The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle%2A> property.</span></span> <span data-ttu-id="28caf-297">この例では、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle%2A> は、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> の Bounds と、<xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> の位置およびサイズを使用して計算されます。</span><span class="sxs-lookup"><span data-stu-id="28caf-297">In this example, the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle%2A> is calculated using the Bounds of the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> as well as the location and size of the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A>.</span></span>  
  
 [!code-csharp[WF_Samples#75](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#75)]
 [!code-vb[WF_Samples#75](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleHeight">
      <MemberSignature Language="C#" Value="protected virtual int TitleHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TitleHeight" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TitleHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int TitleHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TitleHeight : int" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28caf-298">デザイナーのタイトル領域の高さを取得します。</span><span class="sxs-lookup"><span data-stu-id="28caf-298">Gets the height of the title area of the designer.</span></span></summary>
        <value><span data-ttu-id="28caf-299">デザイナーのタイトル領域の高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="28caf-299">The height in pixels of the title area of the designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28caf-300"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight%2A> は、デザイナーのタイトル領域の高さを示します。</span><span class="sxs-lookup"><span data-stu-id="28caf-300">The <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight%2A> describes the height of the title area of the designer.</span></span> <span data-ttu-id="28caf-301">ここには通常、見出し、アイコン、および展開または折りたたみボタンを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="28caf-301">Typically this can contain the heading, icon, and expand or collapse button.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
