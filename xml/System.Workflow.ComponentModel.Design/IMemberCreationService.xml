<Type Name="IMemberCreationService" FullName="System.Workflow.ComponentModel.Design.IMemberCreationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c7064d734a9ef2c01d74998510a2fae2f33dc33" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78842853" /></Metadata><TypeSignature Language="C#" Value="public interface IMemberCreationService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IMemberCreationService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.IMemberCreationService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IMemberCreationService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IMemberCreationService" />
  <TypeSignature Language="F#" Value="type IMemberCreationService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c3ba1-101">デザイン時に型のコード要素を動的に作成、更新、および削除するメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-101">Defines methods to dynamically create, update and remove code elements for a type at design time.</span></span> <span data-ttu-id="c3ba1-102">デザイン時にコードを表示するためのメソッドも用意されています。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-102">Methods are also provided that allow you to display code at design time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateEvent">
      <MemberSignature Language="C#" Value="public void CreateEvent (string className, string eventName, Type eventType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateEvent(string className, string eventName, class System.Type eventType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateEvent(System.String,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateEvent (className As String, eventName As String, eventType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateEvent(System::String ^ className, System::String ^ eventName, Type ^ eventType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty);" />
      <MemberSignature Language="F#" Value="abstract member CreateEvent : string * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool -&gt; unit" Usage="iMemberCreationService.CreateEvent (className, eventName, eventType, attributes, emitDependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c3ba1-103">イベントが追加されるクラスの名前を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-103">A string that contains the class name to add the event to.</span></span></param>
        <param name="eventName"><span data-ttu-id="c3ba1-104">イベントの名前を定義する文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-104">A string that defines the name of the event.</span></span></param>
        <param name="eventType"><span data-ttu-id="c3ba1-105">イベントに割り当てられる <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-105">The <see cref="T:System.Type" /> assigned to the event.</span></span></param>
        <param name="attributes"><span data-ttu-id="c3ba1-106">イベントに割り当てるすべての属性の情報が格納された <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-106">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the event.</span></span></param>
        <param name="emitDependencyProperty"><span data-ttu-id="c3ba1-107">イベントに関連付けられた依存関係プロパティを出力する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-107"><see langword="true" /> to emit any dependency properties associated with the event; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c3ba1-108">指定したイベント名、イベントの種類、および属性を使用して、指定したクラスのイベントを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-108">Creates an event on the specified class by using the specified event name, event type and attributes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="public void CreateField (string className, string fieldName, Type fieldType, Type[] genericParameterTypes, System.CodeDom.MemberAttributes attributes, System.CodeDom.CodeSnippetExpression initializationExpression, bool overwriteExisting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateField(string className, string fieldName, class System.Type fieldType, class System.Type[] genericParameterTypes, valuetype System.CodeDom.MemberAttributes attributes, class System.CodeDom.CodeSnippetExpression initializationExpression, bool overwriteExisting) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateField(System.String,System.String,System.Type,System.Type[],System.CodeDom.MemberAttributes,System.CodeDom.CodeSnippetExpression,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateField (className As String, fieldName As String, fieldType As Type, genericParameterTypes As Type(), attributes As MemberAttributes, initializationExpression As CodeSnippetExpression, overwriteExisting As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateField(System::String ^ className, System::String ^ fieldName, Type ^ fieldType, cli::array &lt;Type ^&gt; ^ genericParameterTypes, System::CodeDom::MemberAttributes attributes, System::CodeDom::CodeSnippetExpression ^ initializationExpression, bool overwriteExisting);" />
      <MemberSignature Language="F#" Value="abstract member CreateField : string * string * Type * Type[] * System.CodeDom.MemberAttributes * System.CodeDom.CodeSnippetExpression * bool -&gt; unit" Usage="iMemberCreationService.CreateField (className, fieldName, fieldType, genericParameterTypes, attributes, initializationExpression, overwriteExisting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="fieldName" Type="System.String" />
        <Parameter Name="fieldType" Type="System.Type" />
        <Parameter Name="genericParameterTypes" Type="System.Type[]" />
        <Parameter Name="attributes" Type="System.CodeDom.MemberAttributes" />
        <Parameter Name="initializationExpression" Type="System.CodeDom.CodeSnippetExpression" />
        <Parameter Name="overwriteExisting" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c3ba1-109">フィールドを追加するクラスの名前を定義する文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-109">A string that defines the name of the class to add the field.</span></span></param>
        <param name="fieldName"><span data-ttu-id="c3ba1-110">フィールドの名前を定義する文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-110">A string that defines the name of the field.</span></span></param>
        <param name="fieldType"><span data-ttu-id="c3ba1-111">新しいフィールドの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-111">The <see cref="T:System.Type" /> of the new field.</span></span></param>
        <param name="genericParameterTypes"><span data-ttu-id="c3ba1-112">フィールドに関連付けられるパラメーターの <see cref="T:System.Type" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-112">A <see cref="T:System.Type" /> array of any parameters associated with the field.</span></span></param>
        <param name="attributes"><span data-ttu-id="c3ba1-113">フィールドのメンバー属性識別子を定義する <see cref="T:System.CodeDom.MemberAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-113">A <see cref="T:System.CodeDom.MemberAttributes" /> that defines the member attribute identifier for the field.</span></span></param>
        <param name="initializationExpression"><span data-ttu-id="c3ba1-114">フィールドのリテラル式が格納された <see cref="T:System.CodeDom.CodeSnippetExpression" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-114">A <see cref="T:System.CodeDom.CodeSnippetExpression" /> that contains the literal expression of the field.</span></span></param>
        <param name="overwriteExisting"><span data-ttu-id="c3ba1-115">新しいフィールドを作成するときに <see langword="true" /> の既存のフィールドを削除する場合は <paramref name="className" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-115"><see langword="true" /> to delete any existing fields on <paramref name="className" /> when creating the new field; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c3ba1-116">指定したフィールド名、フィールド型、パラメーター型、属性、およびリテラルの初期化式を使用して、指定したクラスにフィールドを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-116">Creates a field on the specified class by using the specified field name, field type, parameter types, attributes and literal initialization expression.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="public void CreateProperty (string className, string propertyName, Type propertyType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty, bool isAttached, Type ownerType, bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateProperty(string className, string propertyName, class System.Type propertyType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty, bool isAttached, class System.Type ownerType, bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.CreateProperty(System.String,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean,System.Boolean,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateProperty (className As String, propertyName As String, propertyType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean, isMetaProperty As Boolean, isAttached As Boolean, ownerType As Type, isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateProperty(System::String ^ className, System::String ^ propertyName, Type ^ propertyType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty, bool isMetaProperty, bool isAttached, Type ^ ownerType, bool isReadOnly);" />
      <MemberSignature Language="F#" Value="abstract member CreateProperty : string * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool * bool * bool * Type * bool -&gt; unit" Usage="iMemberCreationService.CreateProperty (className, propertyName, propertyType, attributes, emitDependencyProperty, isMetaProperty, isAttached, ownerType, isReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
        <Parameter Name="isMetaProperty" Type="System.Boolean" />
        <Parameter Name="isAttached" Type="System.Boolean" />
        <Parameter Name="ownerType" Type="System.Type" />
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c3ba1-117">フィールドを追加するクラスの名前を定義する文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-117">A string that defines the name of the class to add the field.</span></span></param>
        <param name="propertyName"><span data-ttu-id="c3ba1-118">フィールドの名前を定義する文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-118">A string that defines the name of the field.</span></span></param>
        <param name="propertyType"><span data-ttu-id="c3ba1-119">新しいプロパティの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-119">The <see cref="T:System.Type" /> of the new property.</span></span></param>
        <param name="attributes"><span data-ttu-id="c3ba1-120">プロパティに割り当てるすべての属性の情報が格納された <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-120">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the property.</span></span></param>
        <param name="emitDependencyProperty"><span data-ttu-id="c3ba1-121">プロパティに関連付けられた依存関係プロパティを出力する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-121"><see langword="true" /> to emit any dependency properties associated with the property; otherwise, <see langword="false" />.</span></span></param>
        <param name="isMetaProperty"><span data-ttu-id="c3ba1-122">プロパティをメタ プロパティとして作成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-122"><see langword="true" /> to create the property as a meta property; otherwise, <see langword="false" />.</span></span></param>
        <param name="isAttached"><span data-ttu-id="c3ba1-123">出力される依存関係プロパティの <see langword="true" /> プロパティを <see cref="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached" /> に設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-123"><see langword="true" /> to indicate that the emitted dependency property has its <see cref="P:System.Workflow.ComponentModel.DependencyProperty.IsAttached" /> property set to <see langword="true" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="ownerType"><span data-ttu-id="c3ba1-124">依存プロパティを宣言する <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-124">The <see cref="T:System.Type" /> that is declaring the dependency property.</span></span></param>
        <param name="isReadOnly"><span data-ttu-id="c3ba1-125">プロパティを読み取り専用プロパティとして作成する場合は <see langword="true" />。読み書き可能プロパティとして作成する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-125"><see langword="true" /> to create the property as a read-only property; <see langword="false" /> to create the property as a read-write property.</span></span></param>
        <summary><span data-ttu-id="c3ba1-126">指定したプロパティ名、プロパティ型、および属性を使用して、指定したクラスのプロパティを作成します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-126">Creates a property on the specified class by using the specified property name, property type and attributes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEvent">
      <MemberSignature Language="C#" Value="public void RemoveEvent (string className, string eventName, Type eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveEvent(string className, string eventName, class System.Type eventType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.RemoveEvent(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveEvent (className As String, eventName As String, eventType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveEvent(System::String ^ className, System::String ^ eventName, Type ^ eventType);" />
      <MemberSignature Language="F#" Value="abstract member RemoveEvent : string * string * Type -&gt; unit" Usage="iMemberCreationService.RemoveEvent (className, eventName, eventType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="eventType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c3ba1-127">イベントが削除されるクラスの名前が格納されている文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-127">A string that contains the name of the class from which to remove the event.</span></span></param>
        <param name="eventName"><span data-ttu-id="c3ba1-128">削除するイベントの名前が格納されている文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-128">A string that contains the name of the event to remove.</span></span></param>
        <param name="eventType"><span data-ttu-id="c3ba1-129">削除するイベントに関連付けられた <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-129">The <see cref="T:System.Type" /> associated with the event to remove.</span></span></param>
        <summary><span data-ttu-id="c3ba1-130">指定したクラスから指定したイベントを削除します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-130">Removes the specified event from the specified class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public void RemoveProperty (string className, string propertyName, Type propertyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveProperty(string className, string propertyName, class System.Type propertyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.RemoveProperty(System.String,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveProperty (className As String, propertyName As String, propertyType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveProperty(System::String ^ className, System::String ^ propertyName, Type ^ propertyType);" />
      <MemberSignature Language="F#" Value="abstract member RemoveProperty : string * string * Type -&gt; unit" Usage="iMemberCreationService.RemoveProperty (className, propertyName, propertyType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c3ba1-131">プロパティが削除されるクラスの名前が格納されている文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-131">A string that contains the name of the class from which to remove the property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="c3ba1-132">削除するプロパティの名前が格納されている文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-132">A string that contains the name of the property to remove.</span></span></param>
        <param name="propertyType"><span data-ttu-id="c3ba1-133">削除するプロパティの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-133">The <see cref="T:System.Type" /> of the property to remove.</span></span></param>
        <summary><span data-ttu-id="c3ba1-134">指定したクラスから指定したプロパティを削除します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-134">Removes the specified property from the specified class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ShowCode">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c3ba1-135">ワークフロー デザイン サーフェイスに新しいメンバーのコードを表示します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-135">Displays code for the new member on a workflow design surface.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public void ShowCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.ShowCode" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowCode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowCode();" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : unit -&gt; unit" Usage="iMemberCreationService.ShowCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c3ba1-136">ワークフロー デザイン サーフェイスに新しいメンバーのコードを表示します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-136">Displays code for the new member on a workflow design surface.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCode">
      <MemberSignature Language="C#" Value="public void ShowCode (System.Workflow.ComponentModel.Activity activity, string methodName, Type delegateType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowCode(class System.Workflow.ComponentModel.Activity activity, string methodName, class System.Type delegateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.ShowCode(System.Workflow.ComponentModel.Activity,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ShowCode (activity As Activity, methodName As String, delegateType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ShowCode(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ methodName, Type ^ delegateType);" />
      <MemberSignature Language="F#" Value="abstract member ShowCode : System.Workflow.ComponentModel.Activity * string * Type -&gt; unit" Usage="iMemberCreationService.ShowCode (activity, methodName, delegateType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="delegateType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="c3ba1-137">表示するコードに関連付けられた <see cref="T:System.Workflow.ComponentModel.Activity" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-137">The <see cref="T:System.Workflow.ComponentModel.Activity" /> associated with the code to display.</span></span></param>
        <param name="methodName"><span data-ttu-id="c3ba1-138">表示するメソッドの名前。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-138">The name of the method to display.</span></span></param>
        <param name="delegateType"><span data-ttu-id="c3ba1-139">表示するメソッドに関連付けられたデリゲートの <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-139">The <see cref="T:System.Type" /> of the delegate associated with the method to display.</span></span></param>
        <summary><span data-ttu-id="c3ba1-140">指定した <see cref="T:System.Workflow.ComponentModel.Activity" />、メソッド、およびデリゲートの型を使用して、ワークフロー デザイン サーフェイスに新しいメンバーのコードを表示します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-140">Displays code for the new member on a workflow design surface by using the specified <see cref="T:System.Workflow.ComponentModel.Activity" />, the specified method and the specified delegate type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateBaseType">
      <MemberSignature Language="C#" Value="public void UpdateBaseType (string className, Type baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateBaseType(string className, class System.Type baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateBaseType(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateBaseType (className As String, baseType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateBaseType(System::String ^ className, Type ^ baseType);" />
      <MemberSignature Language="F#" Value="abstract member UpdateBaseType : string * Type -&gt; unit" Usage="iMemberCreationService.UpdateBaseType (className, baseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="baseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c3ba1-141">新しい基本型を設定して更新するクラスの名前を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-141">A string that contains the name of the class to update with a new base type.</span></span></param>
        <param name="baseType"><span data-ttu-id="c3ba1-142">クラスの新しい基本型となる <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-142">The <see cref="T:System.Type" /> to be the new base type for the class.</span></span></param>
        <summary><span data-ttu-id="c3ba1-143">指定したクラスに関連付ける基本型を更新します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-143">Updates the base type to associate with the specified class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateEvent">
      <MemberSignature Language="C#" Value="public void UpdateEvent (string className, string oldEventName, Type oldEventType, string newEventName, Type newEventType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateEvent(string className, string oldEventName, class System.Type oldEventType, string newEventName, class System.Type newEventType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateEvent(System.String,System.String,System.Type,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateEvent (className As String, oldEventName As String, oldEventType As Type, newEventName As String, newEventType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean, isMetaProperty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateEvent(System::String ^ className, System::String ^ oldEventName, Type ^ oldEventType, System::String ^ newEventName, Type ^ newEventType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="F#" Value="abstract member UpdateEvent : string * string * Type * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool * bool -&gt; unit" Usage="iMemberCreationService.UpdateEvent (className, oldEventName, oldEventType, newEventName, newEventType, attributes, emitDependencyProperty, isMetaProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="oldEventName" Type="System.String" />
        <Parameter Name="oldEventType" Type="System.Type" />
        <Parameter Name="newEventName" Type="System.String" />
        <Parameter Name="newEventType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
        <Parameter Name="isMetaProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c3ba1-144">更新するイベントが含まれるクラスの名前が格納された文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-144">A string that contains the name of the class that contains the event to update.</span></span></param>
        <param name="oldEventName"><span data-ttu-id="c3ba1-145">既存のイベントの名前を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-145">A string that contains the name of the existing event.</span></span></param>
        <param name="oldEventType"><span data-ttu-id="c3ba1-146">既存のイベントに関連付けられている <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-146">The <see cref="T:System.Type" /> associated with the existing event.</span></span></param>
        <param name="newEventName"><span data-ttu-id="c3ba1-147">更新されるイベントの新しい名前を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-147">A string that contains the new name of the updated event.</span></span></param>
        <param name="newEventType"><span data-ttu-id="c3ba1-148">更新されるイベントに関連付けられる <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-148">The <see cref="T:System.Type" /> to associate with the updated event.</span></span></param>
        <param name="attributes"><span data-ttu-id="c3ba1-149">更新されるイベントに割り当てるすべての属性の情報が格納された <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-149">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the updated event.</span></span></param>
        <param name="emitDependencyProperty"><span data-ttu-id="c3ba1-150">依存関係プロパティを出力するようにイベントを更新する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-150"><see langword="true" /> to update the event to emit a dependency property; otherwise, <see langword="false" />.</span></span></param>
        <param name="isMetaProperty"><span data-ttu-id="c3ba1-151">イベントをメタ プロパティとして設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-151"><see langword="true" /> to set the event as a meta property; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c3ba1-152">指定したクラスの既存のイベントに新しい名前と種類を設定します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-152">Sets a new name and type to an existing event on the specified class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateProperty">
      <MemberSignature Language="C#" Value="public void UpdateProperty (string className, string oldPropertyName, Type oldPropertyType, string newPropertyName, Type newPropertyType, System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateProperty(string className, string oldPropertyName, class System.Type oldPropertyType, string newPropertyName, class System.Type newPropertyType, class System.Workflow.ComponentModel.Compiler.AttributeInfo[] attributes, bool emitDependencyProperty, bool isMetaProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateProperty(System.String,System.String,System.Type,System.String,System.Type,System.Workflow.ComponentModel.Compiler.AttributeInfo[],System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateProperty (className As String, oldPropertyName As String, oldPropertyType As Type, newPropertyName As String, newPropertyType As Type, attributes As AttributeInfo(), emitDependencyProperty As Boolean, isMetaProperty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateProperty(System::String ^ className, System::String ^ oldPropertyName, Type ^ oldPropertyType, System::String ^ newPropertyName, Type ^ newPropertyType, cli::array &lt;System::Workflow::ComponentModel::Compiler::AttributeInfo ^&gt; ^ attributes, bool emitDependencyProperty, bool isMetaProperty);" />
      <MemberSignature Language="F#" Value="abstract member UpdateProperty : string * string * Type * string * Type * System.Workflow.ComponentModel.Compiler.AttributeInfo[] * bool * bool -&gt; unit" Usage="iMemberCreationService.UpdateProperty (className, oldPropertyName, oldPropertyType, newPropertyName, newPropertyType, attributes, emitDependencyProperty, isMetaProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="oldPropertyName" Type="System.String" />
        <Parameter Name="oldPropertyType" Type="System.Type" />
        <Parameter Name="newPropertyName" Type="System.String" />
        <Parameter Name="newPropertyType" Type="System.Type" />
        <Parameter Name="attributes" Type="System.Workflow.ComponentModel.Compiler.AttributeInfo[]" />
        <Parameter Name="emitDependencyProperty" Type="System.Boolean" />
        <Parameter Name="isMetaProperty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c3ba1-153">更新するプロパティがあるクラスの名前が格納されている文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-153">A string that contains the name of the class on which the property to update resides.</span></span></param>
        <param name="oldPropertyName"><span data-ttu-id="c3ba1-154">プロパティの既存の名前を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-154">A string that contains the existing name of the property.</span></span></param>
        <param name="oldPropertyType"><span data-ttu-id="c3ba1-155">既存のプロパティに関連付けられている <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-155">The <see cref="T:System.Type" /> associated with the existing property.</span></span></param>
        <param name="newPropertyName"><span data-ttu-id="c3ba1-156">プロパティの新しい名前を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-156">A string that contains the new name of the property.</span></span></param>
        <param name="newPropertyType"><span data-ttu-id="c3ba1-157">更新後のバージョンのプロパティに関連付ける <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-157">The <see cref="T:System.Type" /> to associate with the updated version of the property.</span></span></param>
        <param name="attributes"><span data-ttu-id="c3ba1-158">更新されるプロパティに割り当てるすべての属性の情報が格納された <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-158">An <see cref="T:System.Workflow.ComponentModel.Compiler.AttributeInfo" /> array that contains information on all attributes to assign to the updated property.</span></span></param>
        <param name="emitDependencyProperty"><span data-ttu-id="c3ba1-159">依存関係プロパティを出力するようにプロパティを更新する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-159"><see langword="true" /> to update the property emit a dependency property; otherwise, <see langword="false" />.</span></span></param>
        <param name="isMetaProperty"><span data-ttu-id="c3ba1-160">プロパティをメタ プロパティとして設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-160"><see langword="true" /> to set the property as a meta property; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c3ba1-161">指定したクラスのプロパティに新しい名前と型を設定します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-161">Sets a new name and type to a property on the specified class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateTypeName">
      <MemberSignature Language="C#" Value="public void UpdateTypeName (string oldClassName, string newClassName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTypeName(string oldClassName, string newClassName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IMemberCreationService.UpdateTypeName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateTypeName (oldClassName As String, newClassName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateTypeName(System::String ^ oldClassName, System::String ^ newClassName);" />
      <MemberSignature Language="F#" Value="abstract member UpdateTypeName : string * string -&gt; unit" Usage="iMemberCreationService.UpdateTypeName (oldClassName, newClassName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldClassName" Type="System.String" />
        <Parameter Name="newClassName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldClassName"><span data-ttu-id="c3ba1-162">クラスの既存の名前を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-162">A string that contains the existing name of the class.</span></span></param>
        <param name="newClassName"><span data-ttu-id="c3ba1-163">クラスに割り当てる新しい名前を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-163">A string that contains the new name to assign to the class.</span></span></param>
        <summary><span data-ttu-id="c3ba1-164">指定したクラスの名前を更新します。</span><span class="sxs-lookup"><span data-stu-id="c3ba1-164">Updates the name of the specified class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
