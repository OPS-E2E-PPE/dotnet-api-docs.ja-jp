<Type Name="InPlaceHostingManager" FullName="System.Deployment.Application.InPlaceHostingManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="158ecab8cbe5976621c64653370e09906b73f4d7" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73341006" /></Metadata><TypeSignature Language="C#" Value="public class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InPlaceHostingManager extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.InPlaceHostingManager" />
  <TypeSignature Language="VB.NET" Value="Public Class InPlaceHostingManager&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class InPlaceHostingManager : IDisposable" />
  <TypeSignature Language="F#" Value="type InPlaceHostingManager = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>コンピューターに ClickOnce 配置をインストールするか、既存の配置を更新します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.InPlaceHostingManager> を使用すると、プログラムによって [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションをインストールするプログラムを作成できます。 たとえば、このクラスは、管理されたシステム管理ソフトウェア (SMS) 環境で使用することも、ローカルコンピューターにインストール前またはインストール後の操作を実行する複雑なインストールが必要な場合に使用することもできます。 通常は、このクラスのメンバーを特定の順序で使用します。  
  
1.  <xref:System.Deployment.Application.InPlaceHostingManager> の新しいインスタンスを作成します。  
  
2.  <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A>を使用して、配置マニフェストをダウンロードします。  
  
3.  <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>を使用して、適切なアクセス許可でアプリケーションを実行できることを確認します。  
  
4.  <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>を使用して、アプリケーションをダウンロードしてインストールします。  
  
-   これらのパラメーターのいずれかを順序どおりに呼び出すと、例外がスローされます。  
  
 <xref:System.Deployment.Application.InPlaceHostingManager> は [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションをインストールできますが、実行することはできません。 <xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A>など、このクラスの一部のメソッドは、Web ブラウザー内で実行される Windows Presentation Foundation ベースのアプリケーションをダウンロードするときに使用するために予約されています。  
  
 <xref:System.Deployment.Application.InPlaceHostingManager> を使用してアプリケーションをダウンロードしてインストールするには、インストールを計画している [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションに署名するための証明書が、信頼された発行元としてクライアントコンピューターに既にインストールされていることを確認する必要があります。 信頼できる発行元の詳細については、「[信頼されたアプリケーションの配置の概要](https://msdn.microsoft.com/library/b24a1702-8fbe-45b1-87a0-9618a0708f1d)」を参照してください。  
  
> [!NOTE]
>  現在、Visual Studio を使用してコードをデバッグするときに <xref:System.Deployment.Application.InPlaceHostingManager> が正しく機能しないようにする製品の制限があります。 F5 キーを使用して Visual Studio でアプリケーションをデバッグする場合、サンプルでは <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>を呼び出すと、不可解な例外がスローされます。 Visual Studio を使用してデバッグするには、デバッグを行わずにアプリケーションを起動し、デバッガーをアタッチします。 または、WinDbg などの別のデバッガーを使用することもできます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Deployment.Application.InPlaceHostingManager> を使用して、クライアントコンピューターにプログラムによって [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションをインストールする方法を示しています。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#1)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Deployment.Application.InPlaceHostingManager" /> の新しいインスタンスを作成し、指定したアプリケーションをダウンロードおよびインストールします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest);" />
      <MemberSignature Language="F#" Value="new System.Deployment.Application.InPlaceHostingManager : Uri -&gt; System.Deployment.Application.InPlaceHostingManager" Usage="new System.Deployment.Application.InPlaceHostingManager deploymentManifest" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションの配置マニフェストへの URI (Uniform Resource Identifier) (<see cref="T:System.Uri" />)。</param>
        <summary><see cref="T:System.Deployment.Application.InPlaceHostingManager" /> の新しいインスタンスを作成し、ブラウザーでホストされる指定したアプリケーションをダウンロードおよびインストールします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、Web ブラウザーでホストされている Windows Presentation Foundation ベースのアプリケーションをダウンロードする場合に使用します。 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]を使用して配置された Windows フォームベースのアプリケーションをダウンロードするには、`launchInHostProcess` パラメーターを `false`に設定した <xref:System.Deployment.Application.InPlaceHostingManager.%23ctor%2A> コンストラクターを使用します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.Deployment.Application.InPlaceHostingManager" /> は、Windows XP 以降のバージョンの Windows オペレーティング システムでのみ使用できます。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="deploymentManifest" /> 引数に <see langword="null" /> を渡すことはできません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="deploymentManifest" /> が [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ではサポートされていない URI スキームを使用しています。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InPlaceHostingManager (Uri deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri deploymentManifest, bool launchInHostProcess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (deploymentManifest As Uri, launchInHostProcess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InPlaceHostingManager(Uri ^ deploymentManifest, bool launchInHostProcess);" />
      <MemberSignature Language="F#" Value="new System.Deployment.Application.InPlaceHostingManager : Uri * bool -&gt; System.Deployment.Application.InPlaceHostingManager" Usage="new System.Deployment.Application.InPlaceHostingManager (deploymentManifest, launchInHostProcess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="deploymentManifest" Type="System.Uri" />
        <Parameter Name="launchInHostProcess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deploymentManifest">インストールするアプリケーションの配置マニフェストへの URI (Uniform Resource Identifier)。</param>
        <param name="launchInHostProcess">このアプリケーションを Web ブラウザーなどのホストで実行するかどうか。 スタンドアロン アプリケーションの場合、この値を <see langword="false" /> に設定します。</param>
        <summary><see cref="T:System.Deployment.Application.InPlaceHostingManager" /> の新しいインスタンスを作成し、スタンドアロンの Windows フォーム ベースのアプリケーションまたは Web ブラウザーでホストされるアプリケーションのいずれかにできる、指定したアプリケーションをダウンロードおよびインストールします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例は、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]を使用してデプロイされた Windows フォームベースのアプリケーションをダウンロードできるようにする <xref:System.Deployment.Application.InPlaceHostingManager> のインスタンスを作成する方法を示しています。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><see cref="T:System.Deployment.Application.InPlaceHostingManager" /> は、Windows XP 以降のバージョンの Windows オペレーティング システムでのみ使用できます。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="deploymentManifest" /> 引数に <see langword="null" /> を渡すことはできません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="deploymentManifest" /> が [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ではサポートされていない URI スキームを使用しています。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="AssertApplicationRequirements">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>ClickOnce アプリケーションが、ローカル コンピューターで動作するための適切なアクセス許可とプラットフォームの依存関係を備えているかどうかを判断します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements();" />
      <MemberSignature Language="F#" Value="member this.AssertApplicationRequirements : unit -&gt; unit" Usage="inPlaceHostingManager.AssertApplicationRequirements " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションが、ローカル コンピューターで動作するための適切なアクセス許可とプラットフォームの依存関係を備えているかどうかを判断します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> が正常に返された後、<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> を呼び出す必要があります。 <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>を呼び出していない場合は、<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A> を呼び出さないでください。エラーが発生することなく戻ります。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>を使用する方法を示します。これは、成功した <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> イベントハンドラーの本体で呼び出されます。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> メソッドの前にこのメソッドが呼び出された場合に発生します。</exception>
      </Docs>
    </Member>
    <Member MemberName="AssertApplicationRequirements">
      <MemberSignature Language="C#" Value="public void AssertApplicationRequirements (bool grantApplicationTrust);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssertApplicationRequirements(bool grantApplicationTrust) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssertApplicationRequirements (grantApplicationTrust As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssertApplicationRequirements(bool grantApplicationTrust);" />
      <MemberSignature Language="F#" Value="member this.AssertApplicationRequirements : bool -&gt; unit" Usage="inPlaceHostingManager.AssertApplicationRequirements grantApplicationTrust" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grantApplicationTrust" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="grantApplicationTrust"><see langword="true" /> の場合、アプリケーションはアクセス許可を要求されたレベルに昇格させようとします。</param>
        <summary>[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションが、ローカル コンピューターで動作するための適切なアクセス許可とプラットフォームの依存関係を備えているかどうかを判断します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `grantApplicationTrust` が `true`場合、<xref:System.Deployment.Application.InPlaceHostingManager> によって、必要に応じて、アプリケーションに昇格されたアクセス許可が付与されます。 これは、<xref:System.Deployment.Application.InPlaceHostingManager> がアクセス許可を付与できる場合にのみ可能です。 たとえば、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションが大きなパッケージの一部としてインストールされていて、インストーラーに完全な信頼が付与されている場合、<xref:System.Deployment.Application.InPlaceHostingManager> は、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションに完全信頼を付与することができます。 `grantApplicationTrust` が `false`場合、アプリケーションにアクセス許可は付与されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelAsync();" />
      <MemberSignature Language="F#" Value="member this.CancelAsync : unit -&gt; unit" Usage="inPlaceHostingManager.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>非同期のダウンロード操作をキャンセルします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="inPlaceHostingManager.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Deployment.Application.InPlaceHostingManager" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A> を使い終わったら <xref:System.Deployment.Application.InPlaceHostingManager> を呼び出します。 <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>メソッドによって、<xref:System.Deployment.Application.InPlaceHostingManager> は使用不可の状態になります。 <xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>呼び出し後は、<xref:System.Deployment.Application.InPlaceHostingManager>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Deployment.Application.InPlaceHostingManager> へのすべての参照を解放する必要があります。 詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。  
  
> [!NOTE]
>  <xref:System.Deployment.Application.InPlaceHostingManager>への最後の参照を解放する前に、必ず<xref:System.Deployment.Application.InPlaceHostingManager.Dispose%2A>を呼び出してください。 そうしないと、ガベージ コレクターが <xref:System.Deployment.Application.InPlaceHostingManager> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationAsync">
      <MemberSignature Language="C#" Value="public void DownloadApplicationAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadApplicationAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadApplicationAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadApplicationAsync();" />
      <MemberSignature Language="F#" Value="member this.DownloadApplicationAsync : unit -&gt; unit" Usage="inPlaceHostingManager.DownloadApplicationAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アプリケーションの更新プログラムをバックグラウンドでダウンロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>を呼び出した後に、このメソッドを呼び出す必要があります。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>の使用方法を示しています。これは、正常な <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> イベントハンドラーの終了時に呼び出されます。  
  
 次のコード例では、`iphm`という名前の <xref:System.Deployment.Application.InPlaceHostingManager> のインスタンスを既に定義して作成していることを前提としています。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> メソッドと <see cref="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" /> メソッドの前にこのメソッドが呼び出された場合に発生します。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadApplicationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; DownloadApplicationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadApplicationCompleted As EventHandler(Of DownloadApplicationCompletedEventArgs) " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadApplicationCompletedEventArgs ^&gt; ^ DownloadApplicationCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadApplicationCompleted : EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; " Usage="member this.DownloadApplicationCompleted : System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadApplicationCompleted As EventHandler(Of DownloadApplicationCompletedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadApplicationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションがローカル コンピューターへのダウンロードを終了すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows フォームベースのアプリケーションをインストールする場合は、アプリケーション自体を起動するようにユーザーに指示する必要があります。<xref:System.Deployment.Application.InPlaceHostingManager.Execute%2A> 方法を使用して、Windows フォームベースのアプリケーションをプログラムによって起動することはできません。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted> イベントのハンドラーを示しています。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#7)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadProgressChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.DownloadProgressChangedEventArgs&gt; DownloadProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadProgressChanged As EventHandler(Of DownloadProgressChangedEventArgs) " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::DownloadProgressChangedEventArgs ^&gt; ^ DownloadProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadProgressChanged : EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; " Usage="member this.DownloadProgressChanged : System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event DownloadProgressChanged As EventHandler(Of DownloadProgressChangedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.DownloadProgressChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションまたはマニフェストのダウンロードのステータスに変更があった場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンソールアプリケーションでは、イベントはスレッドプールからのスレッドに割り当てられます。 そのため、進行状況の更新イベントが順序どおりに表示されない場合があります。その後のイベントでは、前のイベントと比較して減少しています。 Windows フォームベースのアプリケーションでは、このような動作は表示されません。 Windows フォームのイベントは、ユーザーインターフェイス (UI) スレッドのメッセージキューから順番に処理されるためです。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Windows.Forms.StatusStrip>内に含まれている <xref:System.Windows.Forms.ToolStripProgressBar> を更新する方法を示しています。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#6)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.ObjectHandle Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Runtime.Remoting.ObjectHandle Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute () As ObjectHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::Remoting::ObjectHandle ^ Execute();" />
      <MemberSignature Language="F#" Value="member this.Execute : unit -&gt; System.Runtime.Remoting.ObjectHandle" Usage="inPlaceHostingManager.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.ObjectHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションが Web ブラウザー内で実行される Windows Presentation Foundation ベースのアプリケーションである場合にのみ、そのアプリケーションを起動します。</summary>
        <returns>起動されたアプリケーションに対応する <see cref="T:System.Runtime.Remoting.ObjectHandle" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、Web ブラウザーでホストできる Windows Presentation Foundation ベースのアプリケーションに対してのみ有効です (つまり、配置マニフェストによって `hostInBrowser` XML 要素が定義されます)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestAsync">
      <MemberSignature Language="C#" Value="public void GetManifestAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetManifestAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetManifestAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetManifestAsync();" />
      <MemberSignature Language="F#" Value="member this.GetManifestAsync : unit -&gt; unit" Usage="inPlaceHostingManager.GetManifestAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションの配置マニフェストをバックグラウンドでダウンロードし、その操作が完了するかエラーが発生したときにイベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントが完了したときの通知を受信するには、<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> イベントのイベントハンドラーを作成します。 このイベントが呼び出され、<xref:System.Deployment.Application.GetManifestCompletedEventArgs>によってエラーが示されない場合は、次に <xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A> を呼び出して、アプリケーションがローカルコンピューターで実行するためのアクセス許可を持っていることを確認する必要があります。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> メソッドを呼び出す方法を示しています。 <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> イベントコールバックのハンドラーは、マニフェストのダウンロードが正常に完了したかどうかを確認し、存在する場合は、アプリケーションに関する追加情報をユーザーに要求します。 ユーザーがインストールを続行することに同意した場合、ハンドラーは <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>を呼び出します。  
  
 次のコード例では、`iphm`という名前の <xref:System.Deployment.Application.InPlaceHostingManager> のインスタンスを既に定義して作成していることを前提としています。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Deployment.Application.GetManifestCompletedEventArgs&gt; GetManifestCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GetManifestCompleted As EventHandler(Of GetManifestCompletedEventArgs) " FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Deployment::Application::GetManifestCompletedEventArgs ^&gt; ^ GetManifestCompleted;" />
      <MemberSignature Language="F#" Value="member this.GetManifestCompleted : EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; " Usage="member this.GetManifestCompleted : System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event GetManifestCompleted As EventHandler(Of GetManifestCompletedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Deployment.Application.GetManifestCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>配置マニフェストがローカル コンピューターにダウンロードされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Deployment.Application.GetManifestCompletedEventArgs> の <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティを使用して、<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> が正常に完了したか、エラーが返されたかを確認します。 <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> が null の場合、<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> は正常に完了し、<xref:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements%2A>を呼び出すことができます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync%2A> メソッドを呼び出す方法を示しています。 <xref:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted> イベントコールバックのハンドラーは、マニフェストのダウンロードが正常に完了したかどうかを確認し、存在する場合は、アプリケーションに関する追加情報をユーザーに要求します。 ユーザーがインストールを続行することに同意した場合、ハンドラーは <xref:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync%2A>を呼び出します。  
  
 次のコード例では、`iphm`という名前の <xref:System.Deployment.Application.InPlaceHostingManager> のインスタンスを既に定義して作成していることを前提としています。  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#2)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#2)]  
  
 [!code-csharp[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/CS/Form1.cs#3)]
 [!code-vb[System.Deployment.Application.InPlaceHostingManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Deployment.Application.InPlaceHostingManager/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomAddIn">
      <MemberSignature Language="C#" Value="public static void UninstallCustomAddIn (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomAddIn(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomAddIn (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomAddIn(System::String ^ subscriptionId);" />
      <MemberSignature Language="F#" Value="static member UninstallCustomAddIn : string -&gt; unit" Usage="System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn subscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">削除するアドインを示すサブスクリプション ID を含む文字列。</param>
        <summary>インストール済みの、アプリケーションのユーザー定義のコンポーネントを削除します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="subscriptionId" /> は、有効なサブスクリプション ID ではないか、名前、公開キー トークン、プロセッサのアーキテクチャ、およびバージョン番号を含んでいません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="subscriptionId" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="UninstallCustomUXApplication">
      <MemberSignature Language="C#" Value="public static void UninstallCustomUXApplication (string subscriptionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UninstallCustomUXApplication(string subscriptionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UninstallCustomUXApplication (subscriptionId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UninstallCustomUXApplication(System::String ^ subscriptionId);" />
      <MemberSignature Language="F#" Value="static member UninstallCustomUXApplication : string -&gt; unit" Usage="System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication subscriptionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subscriptionId">削除する [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを示すサブスクリプション ID を含む文字列。</param>
        <summary>&lt;customUX&gt; 要素を含む [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 [&lt;entryPoint&gt; 要素](/visualstudio/deployment/entrypoint-element-clickonce-application)の `<customUX>` 要素を使用する、以前にインストールされた [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションをアンインストールします。  
  
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションの [プログラムの追加と削除] エントリを作成しないカスタムインストーラーでは、インストール時に <xref:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity%2A> プロパティにあるサブスクリプション識別子を格納する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
