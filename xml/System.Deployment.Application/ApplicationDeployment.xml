<Type Name="ApplicationDeployment" FullName="System.Deployment.Application.ApplicationDeployment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f3a73e8335b2851dda93d1dbbbe26ffa6d72274e" /><Meta Name="ms.sourcegitcommit" Value="f9576bf8c61e3d46834aeeff50f858359f2a99ba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/09/2020" /><Meta Name="ms.locfileid" Value="77099167" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationDeployment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationDeployment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.ApplicationDeployment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationDeployment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationDeployment sealed" />
  <TypeSignature Language="F#" Value="type ApplicationDeployment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ea184-101">プログラムによる現在の配置の更新と、必要に応じたファイルのダウンロード処理をサポートします。</span><span class="sxs-lookup"><span data-stu-id="ea184-101">Supports updates of the current deployment programmatically, and handles on-demand downloading of files.</span></span> <span data-ttu-id="ea184-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="ea184-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-103">更新プログラムを確認し、配置マニフェストの `subscription` 要素を通じてそれらを自動的にインストールするように [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを構成できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-103">You can configure your [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application to check for updates and install them automatically through the `subscription` element of the deployment manifest.</span></span> <span data-ttu-id="ea184-104">ただし、一部のアプリケーションでは、更新プログラムをより細かく制御する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-104">Some applications, however, need finer control over their updates.</span></span> <span data-ttu-id="ea184-105">必要な更新プログラムをプログラムでインストールし、必要に応じてオプションの更新プログラムをインストールするようにユーザーに求めることができます。</span><span class="sxs-lookup"><span data-stu-id="ea184-105">You may want to install required updates programmatically, and prompt users to install optional updates at their convenience.</span></span> <span data-ttu-id="ea184-106">デプロイマニフェストでサブスクリプションの更新をオフにすることで、アプリケーションの更新ポリシーを完全に制御できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-106">By turning off subscription updates in the deployment manifest, you can take complete control of your application's update policies.</span></span> <span data-ttu-id="ea184-107">または、自動サブスクリプションを <xref:System.Deployment.Application.ApplicationDeployment>と組み合わせて使用することもできます。これにより、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] はアプリケーションを定期的に更新できますが、リリース後すぐに重要な更新プログラムをダウンロードするには <xref:System.Deployment.Application.ApplicationDeployment> を使用します。</span><span class="sxs-lookup"><span data-stu-id="ea184-107">Alternatively, you can use automatic subscription in conjunction with <xref:System.Deployment.Application.ApplicationDeployment>, which enables [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] to update the application periodically, but uses <xref:System.Deployment.Application.ApplicationDeployment> to download critical updates shortly after they are released.</span></span>

 <span data-ttu-id="ea184-108"><xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> または <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> のいずれかの方法を使用して、配置に使用可能な更新プログラムがあるかどうかをテストできます。後者のメソッドは、正常に完了したときに <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="ea184-108">You can test whether your deployment has an available update by using either the <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> or the <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> method; the latter method raises the <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> event on successful completion.</span></span> <span data-ttu-id="ea184-109"><xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> は、更新プログラムに関する重要な情報 (バージョン番号、現在のユーザーに必要な更新かどうかなど) を返します。</span><span class="sxs-lookup"><span data-stu-id="ea184-109"><xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> returns important information about the update, such as its version number and whether it is a required update for current users.</span></span> <span data-ttu-id="ea184-110">更新プログラムが利用可能な場合は、<xref:System.Deployment.Application.ApplicationDeployment.Update%2A> または <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>を使用してインストールできます。後者の方法では、更新プログラムのインストールが完了した後に、<xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ea184-110">If an update is available, you can install it by using <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> or <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; the latter method raises the <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> event after installation of the update is complete.</span></span> <span data-ttu-id="ea184-111">大きな更新プログラムの場合は、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> イベントと <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> イベントを使用して進行状況の通知を受け取り、<xref:System.ComponentModel.ProgressChangedEventArgs> の情報を使用して、ダウンロードの状態をユーザーに通知することができます。</span><span class="sxs-lookup"><span data-stu-id="ea184-111">For large updates, you can receive progress notifications through the <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> and <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> events, and use the information in <xref:System.ComponentModel.ProgressChangedEventArgs> to notify the user of the download status.</span></span>

 <span data-ttu-id="ea184-112"><xref:System.Deployment.Application.ApplicationDeployment> を使用して、必要に応じて大きなファイルやアセンブリをダウンロードすることもできます。</span><span class="sxs-lookup"><span data-stu-id="ea184-112">You can also use <xref:System.Deployment.Application.ApplicationDeployment> to download large files and assemblies on demand.</span></span> <span data-ttu-id="ea184-113">これらのファイルは、インストール時にダウンロードされないように、配置のアプリケーションマニフェスト内で "省略可能" としてマークされている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-113">These files must be marked as "optional" within the deployment's application manifest so that they are not downloaded during installation.</span></span> <span data-ttu-id="ea184-114"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> または <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 方法を使用して、アプリケーションの実行中の任意の時点でファイルをダウンロードできます。</span><span class="sxs-lookup"><span data-stu-id="ea184-114">You can download the files at any point during the application's duration by using the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> or the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> method.</span></span> <span data-ttu-id="ea184-115"><xref:System.AppDomain> クラスの <xref:System.AppDomain.AssemblyResolve> イベントのイベントハンドラーを指定することにより、アセンブリをメモリに読み込む前にダウンロードできます。</span><span class="sxs-lookup"><span data-stu-id="ea184-115">You can download assemblies before they are loaded into memory by supplying an event handler for the <xref:System.AppDomain.AssemblyResolve> event on the <xref:System.AppDomain> class.</span></span> <span data-ttu-id="ea184-116">詳細については、「[チュートリアル : デザイナーを使用し、ClickOnce 配置 API で必要に応じてアセンブリをダウンロードする](/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api-using-the-designer)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-116">For more information, see [Walkthrough: Downloading Assemblies on Demand with the ClickOnce Deployment API Using the Designer](/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api-using-the-designer).</span></span>

> [!NOTE]
>  <span data-ttu-id="ea184-117">アプリケーションの実行中に [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを更新した場合、ユーザーは <xref:System.Windows.Forms.Application>の <xref:System.Windows.Forms.Application.Restart%2A> メソッドを呼び出すまで更新を表示しません。これにより、アプリケーションの現在実行中のインスタンスが閉じられ、すぐに再起動します。</span><span class="sxs-lookup"><span data-stu-id="ea184-117">If you update a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application while the application is running, the user will not see the updates until you call the <xref:System.Windows.Forms.Application.Restart%2A> method of the <xref:System.Windows.Forms.Application>, which will close the current running instance of the application and immediately restart it.</span></span>

 <span data-ttu-id="ea184-118"><xref:System.Deployment.Application.ApplicationDeployment> にはパブリックコンストラクターがありません。[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーション内のクラスのインスタンスを取得するには、<xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ea184-118"><xref:System.Deployment.Application.ApplicationDeployment> has no public constructor; you obtain instances of the class within a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application through the <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> property.</span></span> <span data-ttu-id="ea184-119">現在のアプリケーションが [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションであることを確認するには、<xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ea184-119">You use the <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> property to verify that the current application is a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application.</span></span>

 <span data-ttu-id="ea184-120"><xref:System.Deployment.Application.ApplicationDeployment> は、クラスイベントとして完了コールバックを公開する新しい[イベントベースの非同期パターンの概要](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md)を使用して、更新を確認し、更新されたファイルを非同期的にダウンロードすることをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="ea184-120"><xref:System.Deployment.Application.ApplicationDeployment> supports checking for updates and downloading updated files asynchronously by using the new [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), which exposes completion callbacks as class events.</span></span> <span data-ttu-id="ea184-121"><xref:System.Deployment.Application.ApplicationDeployment> はスレッドを開始して管理し、正しい UI スレッドでアプリケーションを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ea184-121"><xref:System.Deployment.Application.ApplicationDeployment> starts and manages the threads for you, and calls your application back on the correct UI thread.</span></span> <span data-ttu-id="ea184-122">このクラスを使用すると、更新プログラムのインストール中にユーザーが作業を続行できるように、アプリケーションをロックせずに更新できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-122">Through this class, you can update without locking up the application, so that the user can continue working while the update installs.</span></span> <span data-ttu-id="ea184-123">更新の実行中にユーザーがすべての作業を停止する必要がある場合は、代わりに同期メソッドを使用することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-123">If the user must stop all work while an update takes place, consider using the synchronous methods instead.</span></span>

> [!NOTE]
>  <span data-ttu-id="ea184-124">非同期更新を実行するには、アプリケーションが <xref:System.Deployment.Application> と <xref:System.ComponentModel> の両方の名前空間をインポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-124">Performing asynchronous updates requires that your application import both the <xref:System.Deployment.Application> and <xref:System.ComponentModel> namespaces.</span></span>



## Examples
 <span data-ttu-id="ea184-125">次のコード例では、アプリケーションの読み込み時に新しい更新プログラムが利用可能かどうかを判断します。必要な更新プログラムが利用可能な場合、このコード例では更新プログラムを非同期にインストールします。</span><span class="sxs-lookup"><span data-stu-id="ea184-125">The following code example determines at application load time whether a new update is available; if a required update is available, the code example installs the update asynchronously.</span></span> <span data-ttu-id="ea184-126">このコードは、`downloadStatus`という名前の <xref:System.Windows.Forms.TextBox> を含むフォームに追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-126">This code should be added to a form that contains a <xref:System.Windows.Forms.TextBox> named `downloadStatus`.</span></span>

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
    </remarks>
    <related type="Article" href="/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api-using-the-designer"><span data-ttu-id="ea184-127">チュートリアル: デザイナーを使用して ClickOnce 配置 API で必要に応じてアセンブリをダウンロードする</span><span class="sxs-lookup"><span data-stu-id="ea184-127">Walkthrough: Downloading Assemblies On Demand with the ClickOnce Deployment API Using the Designer</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="ActivationUri">
      <MemberSignature Language="C#" Value="public Uri ActivationUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ActivationUri" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ActivationUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivationUri : Uri" Usage="System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-128">アプリケーションの配置マニフェストを起動するために使用する URL を取得します。</span><span class="sxs-lookup"><span data-stu-id="ea184-128">Gets the URL used to launch the deployment manifest of the application.</span></span></summary>
        <value><span data-ttu-id="ea184-129">配置マニフェストの<c>Trusturlparameters</c>プロパティが <see langword="false" />場合、またはユーザーが配置を開くために UNC を指定した場合、またはローカルに開いている場合は、長さ0の文字列。</span><span class="sxs-lookup"><span data-stu-id="ea184-129">A zero-length string if the <c>TrustUrlParameters</c> property in the deployment manifest is <see langword="false" />, or if the user has supplied a UNC to open the deployment or has opened it locally.</span></span> <span data-ttu-id="ea184-130">それ以外の場合は、すべてのパラメーターを含む、アプリケーションの起動に使用する完全な URL。</span><span class="sxs-lookup"><span data-stu-id="ea184-130">Otherwise, the return value is the full URL used to launch the application, including any parameters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-131">このプロパティは、完全に信頼されたアプリケーションと部分的に信頼されたアプリケーションの両方で動作します。</span><span class="sxs-lookup"><span data-stu-id="ea184-131">This property will work in both fully trusted and partially trusted applications.</span></span>



## Examples
 <span data-ttu-id="ea184-132">次のコードは、<xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A>を使用して URL パラメーターを取得する方法と、<xref:System.Web.HttpUtility> クラスを使用してクエリ文字列を安全に解析する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ea184-132">The following code shows how to retrieve the URL parameters by using <xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A>, and how to use the <xref:System.Web.HttpUtility> class to parse the query string safely.</span></span> <span data-ttu-id="ea184-133">同じクエリ文字列変数の複数回の出現が、返された <xref:System.Collections.Specialized.NameValueCollection>の1つのエントリに統合されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-133">Multiple occurrences of the same query string variable are consolidated in one entry of the returned <xref:System.Collections.Specialized.NameValueCollection>.</span></span>

 [!code-csharp[ClickOnceQueryString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceQueryString/CS/Form1.cs#1)]
 [!code-vb[ClickOnceQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceQueryString/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForDetailedUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ea184-134"><see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> と同じ操作を実行しますが、利用可能な更新プログラムの拡張情報を返します。</span><span class="sxs-lookup"><span data-stu-id="ea184-134">Performs the same operation as <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, but returns extended information about the available update.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate () As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : unit -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea184-135"><see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> と同じ操作を実行しますが、利用可能な更新プログラムの拡張情報を返します。</span><span class="sxs-lookup"><span data-stu-id="ea184-135">Performs the same operation as <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, but returns extended information about the available update.</span></span></summary>
        <returns><span data-ttu-id="ea184-136">利用可能な更新プログラムの <see cref="T:System.Deployment.Application.UpdateCheckInfo" />。</span><span class="sxs-lookup"><span data-stu-id="ea184-136">An <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> for the available update.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-137"><xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> メソッドを使用すると、同期呼び出し元は、<xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> クラスを使用して、非同期呼び出し元が取得するのと同じ拡張情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-137">The <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> method lets synchronous callers get the same extended information that asynchronous callers get using the <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> class.</span></span>



## Examples
 <span data-ttu-id="ea184-138">次のコード例では、<xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> を使用して、最新の更新プログラムに関する情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="ea184-138">The following code example uses <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> to retrieve the information about the latest update.</span></span> <span data-ttu-id="ea184-139">更新プログラムが存在する場合は、必要な更新プログラムである場合にのみ、更新プログラムが自動的にインストールされます。それ以外の場合は、ユーザーに表示されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-139">If an update exists, it installs it automatically only if it is a required update; otherwise, it prompts the user.</span></span>

 [!code-cpp[ClickOnceAPI#7](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#7)]
 [!code-csharp[ClickOnceAPI#7](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#7)]
 [!code-vb[ClickOnceAPI#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#7)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ea184-140">現在のアプリケーションは、更新プログラムをサポートするように構成されていないか、別の更新プログラムのチェック操作が既に実行中です。</span><span class="sxs-lookup"><span data-stu-id="ea184-140">The current application is either not configured to support updates, or there is another update check operation already in progress.</span></span></exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException"><span data-ttu-id="ea184-141">配置マニフェストをダウンロードできません。</span><span class="sxs-lookup"><span data-stu-id="ea184-141">The deployment manifest cannot be downloaded.</span></span> <span data-ttu-id="ea184-142">この例外は、<see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> イベントの <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> プロパティで確認できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-142">This exception will appear in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</span></span></exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException"><span data-ttu-id="ea184-143">配置マニフェストが破損しています。</span><span class="sxs-lookup"><span data-stu-id="ea184-143">The deployment manifest is corrupted.</span></span> <span data-ttu-id="ea184-144">このアプリケーションをユーザーに配置する前に、アプリケーションのマニフェストを再作成してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-144">Regenerate the application's manifest before you attempt to deploy this application to users.</span></span> <span data-ttu-id="ea184-145">この例外は、<see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> イベントの <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> プロパティで確認できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-145">This exception will appear in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</span></span></exception>
        <permission cref="T:System.Security.PermissionSet"><span data-ttu-id="ea184-146">ローカルコンピューターへのフルアクセス。</span><span class="sxs-lookup"><span data-stu-id="ea184-146">For full access to the local computer.</span></span> <span data-ttu-id="ea184-147"><see cref="T:System.Security.Permissions.PermissionState" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="ea184-147">Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate (persistUpdateCheckResult As Boolean) As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : bool -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult"><span data-ttu-id="ea184-148"><see langword="false" /> の場合、更新は通知なしに適用され、ダイアログ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ea184-148">If <see langword="false" />, the update will be applied silently and no dialog box will be displayed.</span></span></param>
        <summary><span data-ttu-id="ea184-149"><see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> と同じ操作を実行しますが、利用可能な更新プログラムの拡張情報を返します。</span><span class="sxs-lookup"><span data-stu-id="ea184-149">Performs the same operation as <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, but returns extended information about the available update.</span></span></summary>
        <returns><span data-ttu-id="ea184-150">利用可能な更新プログラムの <see cref="T:System.Deployment.Application.UpdateCheckInfo" />。</span><span class="sxs-lookup"><span data-stu-id="ea184-150">An <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> for the available update.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ea184-151"><see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> をチェックし、新しい更新プログラムを利用できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="ea184-151">Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> to determine whether a new update is available.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : unit -&gt; bool" Usage="applicationDeployment.CheckForUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea184-152"><see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> をチェックし、新しい更新プログラムを利用できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="ea184-152">Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> to determine whether a new update is available.</span></span></summary>
        <returns><span data-ttu-id="ea184-153">新しい更新プログラムを利用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ea184-153"><see langword="true" /> if a new update is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-154"><xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> メソッドは、現在インストールされている展開のバージョンと、<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>で見つかった配置マニフェストに指定されているバージョンを比較します。</span><span class="sxs-lookup"><span data-stu-id="ea184-154">The <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> method compares the version of the currently installed deployment with the version specified in the deployment manifest found at <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>.</span></span> <span data-ttu-id="ea184-155">サーバー上のバージョンがインストールされているバージョンと異なる場合は `true`が返されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-155">If the version on the server is different from the installed version, it returns `true`.</span></span>

 <span data-ttu-id="ea184-156">このメソッドは、チェックが完了するまでブロックします。</span><span class="sxs-lookup"><span data-stu-id="ea184-156">This method will block until the check has completed.</span></span> <span data-ttu-id="ea184-157">更新プログラムを非同期でチェックするには、代わりに <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ea184-157">To check for an update asynchronously, use the <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> method instead.</span></span>

> [!NOTE]
>  <span data-ttu-id="ea184-158">更新プログラムが使用可能であることが検出され、ユーザーがインストールを選択しなかった場合は、次にアプリケーションを実行したときに更新プログラムが使用可能であることをユーザーに確認するメッセージが表示され <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ます。</span><span class="sxs-lookup"><span data-stu-id="ea184-158">If <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> discovers that an update is available, and the user chooses not to install it, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] will prompt the user that an update is available the next time the application is run.</span></span> <span data-ttu-id="ea184-159">このメッセージを表示しないようにする方法はありません。</span><span class="sxs-lookup"><span data-stu-id="ea184-159">There is no way to disable this prompting.</span></span> <span data-ttu-id="ea184-160">(アプリケーションが必要な更新プログラムである場合は、プロンプトを表示せずにインストール [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ます)。</span><span class="sxs-lookup"><span data-stu-id="ea184-160">(If the application is a required update, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] will install it without prompting.)</span></span>



## Examples
 <span data-ttu-id="ea184-161">次のコード例では、アプリケーションの更新プログラムを確認します。使用可能な場合は、同期的にインストールされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-161">The following code example checks for an application update; if one is available, it installs it synchronously.</span></span>

 [!code-cpp[ClickOnceAPI#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#5)]
 [!code-csharp[ClickOnceAPI#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#5)]
 [!code-vb[ClickOnceAPI#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#5)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ea184-162">更新プログラムが既に実行中であるときに [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] メソッドを呼び出すと、<see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> は即座にこの例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ea184-162">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] throws this exception immediately if you call the <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> method while an update is already in progress.</span></span></exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException"><span data-ttu-id="ea184-163">配置マニフェストをダウンロードできません。</span><span class="sxs-lookup"><span data-stu-id="ea184-163">The deployment manifest cannot be downloaded.</span></span></exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException"><span data-ttu-id="ea184-164">配置マニフェストが破損しています。</span><span class="sxs-lookup"><span data-stu-id="ea184-164">The deployment manifest is corrupted.</span></span> <span data-ttu-id="ea184-165">この問題を解決するには、アプリケーションを再配置する必要があると思われます。</span><span class="sxs-lookup"><span data-stu-id="ea184-165">You will likely need to redeploy the application to fix this problem.</span></span></exception>
        <permission cref="T:System.Security.PermissionSet"><span data-ttu-id="ea184-166">ローカルコンピューターへのフルアクセス。</span><span class="sxs-lookup"><span data-stu-id="ea184-166">For full access to the local computer.</span></span> <span data-ttu-id="ea184-167"><see cref="T:System.Security.Permissions.PermissionState" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="ea184-167">Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate (persistUpdateCheckResult As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : bool -&gt; bool" Usage="applicationDeployment.CheckForUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult"><span data-ttu-id="ea184-168"><see langword="false" /> の場合、更新は通知なしに適用され、ダイアログ ボックスは表示されません。</span><span class="sxs-lookup"><span data-stu-id="ea184-168">If <see langword="false" />, the update will be applied silently and no dialog box will be displayed.</span></span></param>
        <summary><span data-ttu-id="ea184-169"><see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> をチェックし、新しい更新プログラムを利用できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="ea184-169">Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> to determine whether a new update is available.</span></span></summary>
        <returns><span data-ttu-id="ea184-170">新しい更新プログラムを利用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ea184-170"><see langword="true" /> if a new update is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsync">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsync : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea184-171"><see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> を非同期でチェックし、新しい更新プログラムを利用できるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="ea184-171">Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> asynchronously to determine whether a new update is available.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-172"><xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> はすぐに戻り、更新されたアプリケーションをダウンロードするための別のスレッドを開始します。</span><span class="sxs-lookup"><span data-stu-id="ea184-172"><xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> returns immediately and starts a separate thread for downloading the updated application.</span></span> <span data-ttu-id="ea184-173">メソッドが完了するか取り消されると、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="ea184-173">When the method completes or is canceled, it raises the <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> event.</span></span> <span data-ttu-id="ea184-174">このイベントハンドラーの <xref:System.ComponentModel.AsyncCompletedEventArgs> を使用すると、操作が取り消されたかどうか、または更新中に例外が発生したかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-174">You can use <xref:System.ComponentModel.AsyncCompletedEventArgs> in this event handler to determine whether the operation was canceled, or if an exception was raised during update.</span></span>

 <span data-ttu-id="ea184-175"><xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>を呼び出すことにより、非同期更新を取り消すことができます。</span><span class="sxs-lookup"><span data-stu-id="ea184-175">You can cancel an asynchronous update by calling <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>.</span></span>

> [!NOTE]
>  <span data-ttu-id="ea184-176">更新プログラムが使用可能であることが検出され、ユーザーがインストールを選択しなかった場合は、次にアプリケーションを実行したときに更新プログラムが使用可能であることをユーザーに確認するメッセージが表示され <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ます。</span><span class="sxs-lookup"><span data-stu-id="ea184-176">If <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> discovers that an update is available, and the user chooses not to install it, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] will prompt the user that an update is available the next time the application is run.</span></span> <span data-ttu-id="ea184-177">このメッセージを表示しないようにする方法はありません。</span><span class="sxs-lookup"><span data-stu-id="ea184-177">There is no way to disable this prompting.</span></span> <span data-ttu-id="ea184-178">(アプリケーションが必要な更新プログラムである場合は、プロンプトを表示せずにインストール [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ます)。</span><span class="sxs-lookup"><span data-stu-id="ea184-178">(If the application is a required update, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] will install it without prompting.)</span></span>



## Examples
 <span data-ttu-id="ea184-179">次の例では、更新プログラムが非同期であるかどうかを確認し、更新プログラムが存在する場合はインストールします。</span><span class="sxs-lookup"><span data-stu-id="ea184-179">The following example checks for an update asynchronously, and installs the update if one exists.</span></span>

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ea184-180">更新プログラムが既に実行中であるときに [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] メソッドを呼び出すと、<see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> は即座にこの例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ea184-180">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] throws this exception immediately if you call the <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> method while an update is already in progress.</span></span></exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException"><span data-ttu-id="ea184-181">配置マニフェストをダウンロードできません。</span><span class="sxs-lookup"><span data-stu-id="ea184-181">The deployment manifest cannot be downloaded.</span></span> <span data-ttu-id="ea184-182">この例外は、<see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> イベントの <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> プロパティで確認できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-182">This exception appears in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</span></span></exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException"><span data-ttu-id="ea184-183">配置マニフェストが破損しています。</span><span class="sxs-lookup"><span data-stu-id="ea184-183">The deployment manifest is corrupted.</span></span> <span data-ttu-id="ea184-184">この問題を解決するには、アプリケーションを再配置する必要があると思われます。</span><span class="sxs-lookup"><span data-stu-id="ea184-184">You will likely need to redeploy the application to fix this problem.</span></span> <span data-ttu-id="ea184-185">この例外は、<see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> イベントの <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> プロパティで確認できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-185">This exception appears in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</span></span></exception>
        <permission cref="T:System.Security.PermissionSet"><span data-ttu-id="ea184-186">ローカルコンピューターへのフルアクセス。</span><span class="sxs-lookup"><span data-stu-id="ea184-186">For full access to the local computer.</span></span> <span data-ttu-id="ea184-187"><see cref="T:System.Security.Permissions.PermissionState" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="ea184-187">Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea184-188">非同期の更新プログラムのチェックをキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="ea184-188">Cancels the asynchronous update check.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-189">このメソッドを使用して、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> メソッドで開始された更新チェックをキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="ea184-189">Use this method to cancel an update check initiated with the <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> method.</span></span>

 <span data-ttu-id="ea184-190">このメソッドでは、サブスクリプションの一部として開始された更新など、既に進行中のバックグラウンド更新がキャンセルされることはありません。</span><span class="sxs-lookup"><span data-stu-id="ea184-190">This method will not cancel any background update that may already be in progress, such as an update started as part of a subscription.</span></span> <span data-ttu-id="ea184-191">サブスクリプションの詳細については、「 [ClickOnce の更新方法の選択](/visualstudio/deployment/choosing-a-clickonce-update-strategy)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-191">For more information about subscriptions, see [Choosing a ClickOnce Update Strategy](/visualstudio/deployment/choosing-a-clickonce-update-strategy).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateCompleted As CheckForUpdateCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::CheckForUpdateCompletedEventHandler ^ CheckForUpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " Usage="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.CheckForUpdateCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-192"><see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> の完了時に発生します。</span><span class="sxs-lookup"><span data-stu-id="ea184-192">Occurs when <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-193"><xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> クラスを使用すると、更新プログラムのバージョン、更新プログラムのサイズ、利用可能な更新プログラムが必要かオプションかがわかります。</span><span class="sxs-lookup"><span data-stu-id="ea184-193">The <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> class will tell you, among other things, the version of the update, how large the update is, and whether the available update is required or optional.</span></span>



## Examples
 <span data-ttu-id="ea184-194">次のコード例では、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> を使用して、使用可能なアプリケーションの更新プログラムをインストールするようにユーザーに要求するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="ea184-194">The following code example uses <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> to decide whether to ask the user to install the available application update.</span></span> <span data-ttu-id="ea184-195">更新プログラムが必須のアップグレードである場合、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> イベントハンドラーはユーザーにプロンプトを表示しません。</span><span class="sxs-lookup"><span data-stu-id="ea184-195">If the update is a mandatory upgrade, the <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> event handler does not prompt the user.</span></span> <span data-ttu-id="ea184-196">この例では、<xref:System.Windows.Forms.StatusStrip> コントロールを含む Windows フォームアプリケーションを配置し、このコントロールに `downloadStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> コントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-196">The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.</span></span>

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ CheckForUpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-197"><see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> の呼び出しで進行状況の更新を使用できる場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="ea184-197">Occurs when a progress update is available on a <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-198"><xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>、アプリケーションの配置マニフェストのダウンロードステータスをレポートします。</span><span class="sxs-lookup"><span data-stu-id="ea184-198"><xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> reports on the download status of the application's deployment manifest.</span></span> <span data-ttu-id="ea184-199">これは、低速のネットワーク接続を介してデプロイをダウンロードするユーザーにとって重要な情報です。</span><span class="sxs-lookup"><span data-stu-id="ea184-199">This can be important information for users who are downloading the deployment over slow network connections.</span></span>



## Examples
 <span data-ttu-id="ea184-200">次のコード例では、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> イベントを使用して、ダウンロードする配置マニフェストの残りの部分をユーザーに通知します。</span><span class="sxs-lookup"><span data-stu-id="ea184-200">The following code example uses the <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> event to inform the user how much of the deployment manifest is left to download.</span></span> <span data-ttu-id="ea184-201">この例では、<xref:System.Windows.Forms.StatusStrip> コントロールを含む Windows フォームアプリケーションを配置し、このコントロールに `downloadStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> コントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-201">The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.</span></span>

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDeployment">
      <MemberSignature Language="C#" Value="public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Deployment.Application.ApplicationDeployment CurrentDeployment" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDeployment As ApplicationDeployment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Deployment::Application::ApplicationDeployment ^ CurrentDeployment { System::Deployment::Application::ApplicationDeployment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDeployment : System.Deployment.Application.ApplicationDeployment" Usage="System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.ApplicationDeployment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-202">この配置の現在の <see cref="T:System.Deployment.Application.ApplicationDeployment" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ea184-202">Returns the current <see cref="T:System.Deployment.Application.ApplicationDeployment" /> for this deployment.</span></span></summary>
        <value><span data-ttu-id="ea184-203">現在の配置。</span><span class="sxs-lookup"><span data-stu-id="ea184-203">The current deployment.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-204">アプリケーションで <xref:System.Deployment.Application.ApplicationDeployment> のインスタンスを直接作成することはできません。<xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> プロパティを使用して、有効なインスタンスを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-204">You cannot create instances of <xref:System.Deployment.Application.ApplicationDeployment> directly in your application; you must retrieve a valid instance through the <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> property.</span></span>

 <span data-ttu-id="ea184-205"><xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> の静的プロパティは、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]を使用して配置されたアプリケーション内からのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="ea184-205">The <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> static property is valid only from within an application that was deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)].</span></span> <span data-ttu-id="ea184-206">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 以外のアプリケーションからこのプロパティを呼び出そうとすると、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-206">Attempts to call this property from non-[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] applications will throw an exception.</span></span> <span data-ttu-id="ea184-207">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]を使用して配置される可能性があるアプリケーションを開発している場合は、<xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> プロパティを使用して、現在のプログラムが [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションであるかどうかをテストします。</span><span class="sxs-lookup"><span data-stu-id="ea184-207">If you are developing an application that may or may not be deployed using [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)], use the <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> property to test whether the current program is a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application.</span></span>



## Examples
 <span data-ttu-id="ea184-208">次のコード例では、<xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> を取得し、アプリケーションが過去3日間に更新されたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="ea184-208">The following code example retrieves <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> and checks to determine whether the application has been updated in the past three days.</span></span>

 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException"><span data-ttu-id="ea184-209">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 以外のアプリケーションからこの静的プロパティを呼び出そうとしました。</span><span class="sxs-lookup"><span data-stu-id="ea184-209">You attempted to call this static property from a non-[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application.</span></span></exception>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentVersion">
      <MemberSignature Language="C#" Value="public Version CurrentVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version CurrentVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ CurrentVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-210">アプリケーションの現在実行中のインスタンスの配置のバージョンを取得します。</span><span class="sxs-lookup"><span data-stu-id="ea184-210">Gets the version of the deployment for the current running instance of the application.</span></span></summary>
        <value><span data-ttu-id="ea184-211">現在の配置のバージョン。</span><span class="sxs-lookup"><span data-stu-id="ea184-211">The current deployment version.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-212">新しい更新プログラムがインストールされていても <xref:System.Windows.Forms.Application.Restart%2A>をまだ呼び出していない場合、<xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> は <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> とは異なります。</span><span class="sxs-lookup"><span data-stu-id="ea184-212"><xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> will differ from <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> if a new update has been installed but you have not yet called <xref:System.Windows.Forms.Application.Restart%2A>.</span></span> <span data-ttu-id="ea184-213">自動更新を実行するように配置マニフェストが構成されている場合は、これら2つの値を比較して、アプリケーションを再起動する必要があるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-213">If the deployment manifest is configured to perform automatic updates, you can compare these two values to determine if you should restart the application.</span></span>



## Examples
 <span data-ttu-id="ea184-214">次のコード例では、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] によってアプリケーションが更新されたかどうかを判断するメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="ea184-214">The following code example defines a method that determines whether [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] has updated the application.</span></span>

 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]

 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet"><span data-ttu-id="ea184-215">ローカルコンピューターへのフルアクセス。</span><span class="sxs-lookup"><span data-stu-id="ea184-215">For full access to the local computer.</span></span> <span data-ttu-id="ea184-216"><see cref="T:System.Security.Permissions.PermissionState" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="ea184-216">Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></permission>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      </Docs>
    </Member>
    <Member MemberName="DataDirectory">
      <MemberSignature Language="C#" Value="public string DataDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataDirectory : string" Usage="System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-217">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] データ ディレクトリへのパスを取得します。</span><span class="sxs-lookup"><span data-stu-id="ea184-217">Gets the path to the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] data directory.</span></span></summary>
        <value><span data-ttu-id="ea184-218">ローカル ディスク上のアプリケーションのデータ ディレクトリへのパスを含む文字列。</span><span class="sxs-lookup"><span data-stu-id="ea184-218">A string containing the path to the application's data directory on the local disk.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroup">
      <MemberSignature Language="C#" Value="public void DownloadFileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroup (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroup : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName"><span data-ttu-id="ea184-219">ダウンロードするファイルの名前付きグループ。</span><span class="sxs-lookup"><span data-stu-id="ea184-219">The named group of files to download.</span></span> <span data-ttu-id="ea184-220">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで "optional" としてマークされたすべてのファイルには、グループ名が必要です。</span><span class="sxs-lookup"><span data-stu-id="ea184-220">All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</span></span></param>
        <summary><span data-ttu-id="ea184-221">一連のオプション ファイルを必要に応じてダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="ea184-221">Downloads a set of optional files on demand.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-222">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションでは、アプリケーションマニフェストで "optional" とマークされたファイルは、初期化または更新中にダウンロードされません。</span><span class="sxs-lookup"><span data-stu-id="ea184-222">In a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application, the files marked "optional" in the application manifest are not downloaded during initialization or update.</span></span> <span data-ttu-id="ea184-223"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> メソッドを使用すると、必要に応じて名前付きグループに属するすべてのファイルをダウンロードし、ユーザーが必要とするまでネットワークリソースとディスク領域を消費しないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="ea184-223">You can use the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> method to download all of the files belonging to a named group on demand, so that they do not consume network resources and disk space until you are sure the user requires them.</span></span> <span data-ttu-id="ea184-224">たとえば、特定のユーザーがアプリケーションに含まれるデータ分析パッケージを日常的に使用する必要があり、他のユーザーがそれを呼び出すことがない場合があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-224">For example, certain users may need to use a data analysis package included in your application on a daily basis, while other users may never invoke it.</span></span>

 <span data-ttu-id="ea184-225"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>でダウンロードしたアセンブリを使用するには、<xref:System.AppDomain.CurrentDomain%2A>の <xref:System.AppDomain.AssemblyResolve> イベントにイベントリスナーをアタッチします。</span><span class="sxs-lookup"><span data-stu-id="ea184-225">To use an assembly you have downloaded with <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>, you attach an event listener to the <xref:System.AppDomain.AssemblyResolve> event on the <xref:System.AppDomain.CurrentDomain%2A>.</span></span> <span data-ttu-id="ea184-226">例については、「」を参照してください。「[チュートリアル: デザイナーを使用して ClickOnce 配置 API で必要に応じてアセンブリをダウンロード](/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api-using-the-designer)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-226">For an example, see =[Walkthrough: Downloading Assemblies on Demand with the ClickOnce Deployment API Using the Designer](/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api-using-the-designer).</span></span>

 <span data-ttu-id="ea184-227">すべてのファイルは [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションキャッシュにダウンロードされるため、アプリケーションの現在のバージョンに分離されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-227">All files are downloaded to the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application cache and are therefore isolated to the current version of the application.</span></span> <span data-ttu-id="ea184-228">たとえば、アプリケーションがファイルグループをダウンロードした後、ユーザーが新しいバージョンのアプリケーションをインストールした後で、アプリケーションの以前のバージョンに戻すとします。</span><span class="sxs-lookup"><span data-stu-id="ea184-228">Let's say that after an application downloads a file group, the user installs a new version of the application, but later reverts to the previous version of the application.</span></span> <span data-ttu-id="ea184-229">この場合、以前のバージョンには、最初にダウンロードしたファイルのコピーが残ります。</span><span class="sxs-lookup"><span data-stu-id="ea184-229">In this case, the previous version will still have the copies of the files it originally downloaded.</span></span> <span data-ttu-id="ea184-230">データファイルへのアクセスの詳細については、「 [ClickOnce アプリケーションにおけるローカルデータおよびリモートデータへのアクセス](/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-230">For more information about accessing data files, see [Accessing Local and Remote Data in ClickOnce Applications](/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications).</span></span>

 <span data-ttu-id="ea184-231"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> は、部分的に信頼されたアプリケーション、つまり、制限されたアクセス許可で実行されているすべての [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで動作します。</span><span class="sxs-lookup"><span data-stu-id="ea184-231"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> works in partially trusted applications, that is, in any [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application running with restricted permission.</span></span> <span data-ttu-id="ea184-232">ただし、アセンブリを動的に読み込む場合は、アプリケーションに完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="ea184-232">However, if you attempt to load assemblies dynamically, your application will require full trust.</span></span>

 <span data-ttu-id="ea184-233">データファイルのオンデマンドダウンロードは現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ea184-233">On-demand downloading of data files is currently not supported.</span></span>

 <span data-ttu-id="ea184-234"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> メソッドが返されるまで、アプリケーションはユーザー入力に応答しません。</span><span class="sxs-lookup"><span data-stu-id="ea184-234">Your application will not be responsive to user input until the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> method returns.</span></span> <span data-ttu-id="ea184-235">ユーザーのワークフローを中断せずにファイルをダウンロードする必要がある場合は、代わりに <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ea184-235">If you need to download files without interrupting the user's workflow, use the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> method instead.</span></span>

 <span data-ttu-id="ea184-236">ファイル名だけで1つのファイルをダウンロードすることはできません。</span><span class="sxs-lookup"><span data-stu-id="ea184-236">You cannot download a single file by its file name alone.</span></span> <span data-ttu-id="ea184-237">1つのファイルをダウンロードするには、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 展開でグループ名を割り当て、この方法を使用してグループをダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="ea184-237">To download a single file, assign it a group name in your [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment and download the group using this method.</span></span>



## Examples
 <span data-ttu-id="ea184-238">次のコード例は、<xref:System.AppDomain.AssemblyResolve> イベントをリッスンすることによって、必要に応じてアセンブリを読み込む方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ea184-238">The following code example demonstrates how to load an assembly on demand by listening for the <xref:System.AppDomain.AssemblyResolve> event.</span></span>

 [!code-csharp[ClickOnceOnDemandCmdLine#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceOnDemandCmdLine/CS/Form1.cs#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea184-239"><paramref name="groupName" /> パラメーターが null であるか、長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="ea184-239">The <paramref name="groupName" /> parameter is null or zero-length.</span></span></exception>
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
        <related type="Article" href="/visualstudio/deployment/walkthrough-downloading-satellite-assemblies-on-demand-with-the-clickonce-deployment-api"><span data-ttu-id="ea184-240">チュートリアル : ClickOnce 配置 API を使用して必要に応じてサテライト アセンブリをダウンロードする</span><span class="sxs-lookup"><span data-stu-id="ea184-240">Walkthrough: Downloading Satellite Assemblies on Demand with the ClickOnce Deployment API</span></span></related>
        <related type="Article" href="/visualstudio/deployment/clickonce-application-manifest"><span data-ttu-id="ea184-241">ClickOnce Application Manifest</span><span class="sxs-lookup"><span data-stu-id="ea184-241">ClickOnce Application Manifest</span></span></related>
        <related type="Article" href="/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications"><span data-ttu-id="ea184-242">ClickOnce アプリケーションにおけるローカル データおよびリモート データへのアクセス</span><span class="sxs-lookup"><span data-stu-id="ea184-242">Accessing Local and Remote Data in ClickOnce Applications</span></span></related>
        <related type="Article" href="/visualstudio/deployment/how-to-include-a-data-file-in-a-clickonce-application"><span data-ttu-id="ea184-243">方法 : ClickOnce アプリケーションにデータ ファイルを含める</span><span class="sxs-lookup"><span data-stu-id="ea184-243">How to: Include a Data File in a ClickOnce Application</span></span></related>
        <related type="Article" href="/visualstudio/deployment/clickonce-cache-overview"><span data-ttu-id="ea184-244">ClickOnce キャッシュのアーキテクチャ</span><span class="sxs-lookup"><span data-stu-id="ea184-244">Architecture of the ClickOnce Cache</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileGroupAsync">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ea184-245">一連のオプション ファイルを、必要に応じてバックグラウンドでダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="ea184-245">Downloads, on demand, a set of optional files in the background.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName"><span data-ttu-id="ea184-246">ダウンロードするファイルの名前付きグループ。</span><span class="sxs-lookup"><span data-stu-id="ea184-246">The named group of files to download.</span></span> <span data-ttu-id="ea184-247">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで "optional" としてマークされたすべてのファイルには、グループ名が必要です。</span><span class="sxs-lookup"><span data-stu-id="ea184-247">All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</span></span></param>
        <summary><span data-ttu-id="ea184-248">一連のオプション ファイルを、必要に応じてバックグラウンドでダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="ea184-248">Downloads, on demand, a set of optional files in the background.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-249">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションでは、アプリケーションマニフェストで "optional" とマークされたファイルは、初期化または更新中にダウンロードされません。</span><span class="sxs-lookup"><span data-stu-id="ea184-249">In a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application, the files marked "optional" in the application manifest are not downloaded during initialization or update.</span></span> <span data-ttu-id="ea184-250"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッドを使用すると、必要に応じて名前付きグループに属するすべてのファイルをダウンロードし、ユーザーが必要とするまでネットワークリソースとディスク領域を消費しないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="ea184-250">You can use the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> method to download all of the files belonging to a named group on demand, so that they do not consume network resources and disk space until you are sure the user requires them.</span></span> <span data-ttu-id="ea184-251">この方法は、静的ファイルだけでなく、アプリケーションが必要とする可能性のあるアセンブリにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-251">This approach works not only for static files, but also for assemblies that an application may or may not require.</span></span> <span data-ttu-id="ea184-252">たとえば、特定のユーザーがアプリケーションに含まれるデータ分析パッケージを日常的に使用する必要があり、他のユーザーがそれを呼び出すことがない場合があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-252">For example, certain users may need to use a data analysis package included in your application on a daily basis, while other users may never invoke it.</span></span>

 <span data-ttu-id="ea184-253">必要に応じてアセンブリをダウンロードするには、<xref:System.AppDomain.CurrentDomain%2A>の <xref:System.AppDomain.AssemblyResolve> イベントにイベントリスナーをアタッチします。</span><span class="sxs-lookup"><span data-stu-id="ea184-253">To download assemblies on demand, attach an event listener to the <xref:System.AppDomain.AssemblyResolve> event on the <xref:System.AppDomain.CurrentDomain%2A>.</span></span> <span data-ttu-id="ea184-254">例については、「[チュートリアル: ClickOnce 配置 API を使用して必要に応じてアセンブリをダウンロード](/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-254">For an example, see [Walkthrough: Downloading Assemblies on Demand with the ClickOnce Deployment API](/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api).</span></span>

 <span data-ttu-id="ea184-255">すべてのアセンブリが [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションキャッシュにダウンロードされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-255">All assemblies are downloaded to the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application cache.</span></span>

 <span data-ttu-id="ea184-256">すべての静的ファイルは [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションのデータディレクトリにダウンロードされるため、アプリケーションの現在のバージョンに分離されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-256">All static files are downloaded to the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application's data directory and are therefore isolated to the current version of the application.</span></span> <span data-ttu-id="ea184-257">たとえば、アプリケーションがファイルグループをダウンロードした後、ユーザーが新しいバージョンのアプリケーションをインストールした後で、アプリケーションの以前のバージョンに戻すとします。</span><span class="sxs-lookup"><span data-stu-id="ea184-257">Let's say that after an application downloads a file group, the user installs a new version of the application, but later reverts to the previous version of the application.</span></span> <span data-ttu-id="ea184-258">この場合、以前のバージョンには、最初にダウンロードしたファイルのコピーが残ります。</span><span class="sxs-lookup"><span data-stu-id="ea184-258">In this case, the previous version will still have the copies of the files it originally downloaded.</span></span> <span data-ttu-id="ea184-259">静的ファイルへのアクセスの詳細については、「 [ClickOnce アプリケーションでのローカルデータおよびリモートデータへのアクセス](/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-259">For more information about accessing static files, see [Accessing Local and Remote Data in ClickOnce Applications](/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications).</span></span>

 <span data-ttu-id="ea184-260"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>を使用すると、複数のファイルグループを同時にダウンロードできます。</span><span class="sxs-lookup"><span data-stu-id="ea184-260">You can download multiple file groups simultaneously using <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>.</span></span> <span data-ttu-id="ea184-261">これらを区別するには、<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> クラスの <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> プロパティを使用します。これは <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> イベントに渡されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-261">You can distinguish among them by using the <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> property of the <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> class, which is passed to the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> event.</span></span> <span data-ttu-id="ea184-262">より複雑な状態を渡す必要がある場合は、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> を使用して `state` オブジェクトを渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="ea184-262">If you need to pass more complex state, you can use <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> to pass in a `state` object.</span></span>

 <span data-ttu-id="ea184-263"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> は、部分的に信頼されたアプリケーション、つまり、制限されたアクセス許可で実行されているすべての [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで動作します。</span><span class="sxs-lookup"><span data-stu-id="ea184-263"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> works in partially trusted applications, that is, in any [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application running with restricted permission.</span></span> <span data-ttu-id="ea184-264">ただし、アセンブリを動的に読み込む場合は、アプリケーションが完全な信頼を必要とします。</span><span class="sxs-lookup"><span data-stu-id="ea184-264">However, if you are attempting to load assemblies dynamically, your application will require full trust.</span></span>

 <span data-ttu-id="ea184-265">データファイルのオンデマンドダウンロードは現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ea184-265">On-demand downloading of data files is currently not supported.</span></span>

 <span data-ttu-id="ea184-266">ファイル名だけで1つのファイルをダウンロードすることはできません。</span><span class="sxs-lookup"><span data-stu-id="ea184-266">You cannot download a single file by its file name alone.</span></span> <span data-ttu-id="ea184-267">1つのファイルをダウンロードするには、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 展開でグループ名を割り当て、この方法を使用してグループをダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="ea184-267">To download a single file, assign it a group name in your [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment and download the group using this method.</span></span>

 <span data-ttu-id="ea184-268">非同期ダウンロードをキャンセルするには、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ea184-268">To cancel an asynchronous download, call the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea184-269"><paramref name="groupName" /> パラメーターが null であるか、長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="ea184-269">The <paramref name="groupName" /> parameter is null or zero-length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ea184-270">一度に <paramref name="groupName" /> の複数のダウンロードを開始することはできません。</span><span class="sxs-lookup"><span data-stu-id="ea184-270">You cannot initiate more than one download of <paramref name="groupName" /> at a time.</span></span></exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <related type="Article" href="/visualstudio/deployment/walkthrough-downloading-satellite-assemblies-on-demand-with-the-clickonce-deployment-api"><span data-ttu-id="ea184-271">チュートリアル : ClickOnce 配置 API を使用して必要に応じてサテライト アセンブリをダウンロードする</span><span class="sxs-lookup"><span data-stu-id="ea184-271">Walkthrough: Downloading Satellite Assemblies on Demand with the ClickOnce Deployment API</span></span></related>
        <related type="Article" href="/visualstudio/deployment/clickonce-application-manifest"><span data-ttu-id="ea184-272">ClickOnce Application Manifest</span><span class="sxs-lookup"><span data-stu-id="ea184-272">ClickOnce Application Manifest</span></span></related>
        <related type="Article" href="/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications"><span data-ttu-id="ea184-273">ClickOnce アプリケーションにおけるローカル データおよびリモート データへのアクセス</span><span class="sxs-lookup"><span data-stu-id="ea184-273">Accessing Local and Remote Data in ClickOnce Applications</span></span></related>
        <related type="Article" href="/visualstudio/deployment/how-to-include-a-data-file-in-a-clickonce-application"><span data-ttu-id="ea184-274">方法 : ClickOnce アプリケーションにデータ ファイルを含める</span><span class="sxs-lookup"><span data-stu-id="ea184-274">How to: Include a Data File in a ClickOnce Application</span></span></related>
        <related type="Article" href="/visualstudio/deployment/clickonce-cache-overview"><span data-ttu-id="ea184-275">ClickOnce キャッシュのアーキテクチャ</span><span class="sxs-lookup"><span data-stu-id="ea184-275">Architecture of the ClickOnce Cache</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string * obj -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync (groupName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="groupName"><span data-ttu-id="ea184-276">ダウンロードするファイルの名前付きグループ。</span><span class="sxs-lookup"><span data-stu-id="ea184-276">The named group of files to download.</span></span> <span data-ttu-id="ea184-277">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで "optional" としてマークされたすべてのファイルには、グループ名が必要です。</span><span class="sxs-lookup"><span data-stu-id="ea184-277">All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</span></span></param>
        <param name="userState"><span data-ttu-id="ea184-278">非同期操作のステータス情報を格納している任意のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ea184-278">An arbitrary object containing state information for the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="ea184-279">一連のオプション ファイルを、必要に応じてバックグラウンドでダウンロードし、アプリケーションの状態の一部をイベント コールバックに渡します。</span><span class="sxs-lookup"><span data-stu-id="ea184-279">Downloads, on demand, a set of optional files in the background, and passes a piece of application state to the event callbacks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-280">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションでは、アプリケーションマニフェストで "optional" とマークされたファイルは、初期化または更新中にダウンロードされません。</span><span class="sxs-lookup"><span data-stu-id="ea184-280">In a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application, the files marked "optional" in the application manifest are not downloaded during initialization or update.</span></span> <span data-ttu-id="ea184-281"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッドを使用すると、必要に応じて名前付きグループに属するすべてのファイルをダウンロードし、ユーザーが必要とするまでネットワークリソースとディスク領域を消費しないようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="ea184-281">You can use the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> method to download all of the files belonging to a named group on demand, so that they do not consume network resources and disk space until you are sure the user requires them.</span></span> <span data-ttu-id="ea184-282">この方法は、静的ファイルだけでなく、アプリケーションが必要とする可能性のあるアセンブリにも使用できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-282">This approach works not only for static files, but also for assemblies that an application may or may not require.</span></span> <span data-ttu-id="ea184-283">たとえば、特定のユーザーがアプリケーションに含まれるデータ分析パッケージを日常的に使用する必要があり、他のユーザーがそれを呼び出すことがない場合があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-283">For example, certain users may need to use a data analysis package included in your application on a daily basis, while other users may never invoke it.</span></span> <span data-ttu-id="ea184-284">必要に応じてアセンブリをダウンロードするには、<xref:System.AppDomain.CurrentDomain%2A>の <xref:System.AppDomain.AssemblyResolve> イベントにイベントリスナーをアタッチします。</span><span class="sxs-lookup"><span data-stu-id="ea184-284">To download assemblies on demand, attach an event listener to the <xref:System.AppDomain.AssemblyResolve> event on the <xref:System.AppDomain.CurrentDomain%2A>.</span></span>

 <span data-ttu-id="ea184-285"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 方法を使用して、複数のファイルグループを同時にダウンロードできます。</span><span class="sxs-lookup"><span data-stu-id="ea184-285">You can download multiple file groups simultaneously by using the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> method.</span></span> <span data-ttu-id="ea184-286">これらを区別するには、<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> クラスの <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> プロパティを使用します。これは <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> イベントに渡されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-286">You can distinguish among them by using the <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> property of the <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> class, which is passed to the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> event.</span></span> <span data-ttu-id="ea184-287">より複雑な状態を渡す必要がある場合は、を使用します。</span><span class="sxs-lookup"><span data-stu-id="ea184-287">If you need to pass a more complex state, you can use</span></span>

 <span data-ttu-id="ea184-288">`state` オブジェクトを渡す <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>。</span><span class="sxs-lookup"><span data-stu-id="ea184-288"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> to pass in a `state` object.</span></span>

 <span data-ttu-id="ea184-289">すべての静的ファイルは [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションのデータディレクトリにダウンロードされるため、アプリケーションの現在のバージョンに分離されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-289">All static files are downloaded to the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application's data directory and are therefore isolated to the current version of the application.</span></span> <span data-ttu-id="ea184-290">静的ファイルへのアクセスの詳細については、「 [ClickOnce アプリケーションでのローカルデータおよびリモートデータへのアクセス](/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-290">For more information about accessing static files, see [Accessing Local and Remote Data in ClickOnce Applications](/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications).</span></span> <span data-ttu-id="ea184-291">。</span><span class="sxs-lookup"><span data-stu-id="ea184-291">.</span></span> <span data-ttu-id="ea184-292">たとえば、アプリケーションがファイルグループをダウンロードした後、ユーザーが新しいバージョンのアプリケーションをインストールしたが、それ以降のユーザーが以前のバージョンのアプリケーションに戻すとします。</span><span class="sxs-lookup"><span data-stu-id="ea184-292">Let's say that after an application downloads a file group, the user installs a new version of the application, but later  user reverts to the previous version of the application.</span></span> <span data-ttu-id="ea184-293">この場合、以前のバージョンには、最初にダウンロードしたファイルのコピーが残ります。</span><span class="sxs-lookup"><span data-stu-id="ea184-293">In this case, the previous version will still have the copies of the files it originally downloaded.</span></span>

 <span data-ttu-id="ea184-294"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> は、部分的に信頼されたアプリケーション、つまり、制限されたアクセス許可で実行されているすべての [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで動作します。</span><span class="sxs-lookup"><span data-stu-id="ea184-294"><xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> works in partially trusted applications, that is, in any [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application running with restricted permission.</span></span> <span data-ttu-id="ea184-295">ただし、アセンブリを動的に読み込む場合は、アプリケーションが完全な信頼を必要とします。</span><span class="sxs-lookup"><span data-stu-id="ea184-295">However, if you are attempting to load assemblies dynamically, your application will require full trust.</span></span>

 <span data-ttu-id="ea184-296">データファイルのオンデマンドダウンロードは現在サポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ea184-296">On-demand downloading of data files is currently not supported.</span></span>

 <span data-ttu-id="ea184-297">非同期ダウンロードをキャンセルするには、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ea184-297">To cancel an asynchronous download, call the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea184-298"><paramref name="groupName" /> パラメーターが null であるか、長さが 0 です。</span><span class="sxs-lookup"><span data-stu-id="ea184-298">The <paramref name="groupName" /> parameter is null or zero-length.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ea184-299">一度に <paramref name="groupName" /> の複数のダウンロードを開始することはできません。</span><span class="sxs-lookup"><span data-stu-id="ea184-299">You cannot initiate more than one download of <paramref name="groupName" /> at a time.</span></span></exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <related type="Article" href="/visualstudio/deployment/walkthrough-downloading-satellite-assemblies-on-demand-with-the-clickonce-deployment-api"><span data-ttu-id="ea184-300">チュートリアル : ClickOnce 配置 API を使用して必要に応じてサテライト アセンブリをダウンロードする</span><span class="sxs-lookup"><span data-stu-id="ea184-300">Walkthrough: Downloading Satellite Assemblies on Demand with the ClickOnce Deployment API</span></span></related>
        <related type="Article" href="/visualstudio/deployment/clickonce-application-manifest"><span data-ttu-id="ea184-301">ClickOnce Application Manifest</span><span class="sxs-lookup"><span data-stu-id="ea184-301">ClickOnce Application Manifest</span></span></related>
        <related type="Article" href="/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications"><span data-ttu-id="ea184-302">ClickOnce アプリケーションにおけるローカル データおよびリモート データへのアクセス</span><span class="sxs-lookup"><span data-stu-id="ea184-302">Accessing Local and Remote Data in ClickOnce Applications</span></span></related>
        <related type="Article" href="/visualstudio/deployment/how-to-include-a-data-file-in-a-clickonce-application"><span data-ttu-id="ea184-303">方法 : ClickOnce アプリケーションにデータ ファイルを含める</span><span class="sxs-lookup"><span data-stu-id="ea184-303">How to: Include a Data File in a ClickOnce Application</span></span></related>
        <related type="Article" href="/visualstudio/deployment/clickonce-cache-overview"><span data-ttu-id="ea184-304">ClickOnce キャッシュのアーキテクチャ</span><span class="sxs-lookup"><span data-stu-id="ea184-304">Architecture of the ClickOnce Cache</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsyncCancel">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsyncCancel (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsyncCancel(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsyncCancel (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsyncCancel(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsyncCancel : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsyncCancel groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName"><span data-ttu-id="ea184-305">ダウンロードするファイルの名前付きグループ。</span><span class="sxs-lookup"><span data-stu-id="ea184-305">The named group of files to download.</span></span> <span data-ttu-id="ea184-306">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで "optional" としてマークされたすべてのファイルには、グループ名が必要です。</span><span class="sxs-lookup"><span data-stu-id="ea184-306">All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</span></span></param>
        <summary><span data-ttu-id="ea184-307">ファイルの非同期ダウンロードをキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="ea184-307">Cancels an asynchronous file download.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ea184-308"><paramref name="groupName" /> として <see langword="null" /> を使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="ea184-308"><paramref name="groupName" /> cannot be <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupCompleted As DownloadFileGroupCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DownloadFileGroupCompletedEventHandler ^ DownloadFileGroupCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " Usage="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DownloadFileGroupCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-309">ファイルのダウンロードが完了すると、メイン アプリケーション スレッドで発生します。</span><span class="sxs-lookup"><span data-stu-id="ea184-309">Occurs on the main application thread when a file download is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-310">メインアプリケーションスレッドで <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted> イベントが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-310">The <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted> event is called on the main application thread.</span></span> <span data-ttu-id="ea184-311">アプリケーションの Windows フォームコントロールをこのコールバック内で直接呼び出すには、スレッドセーフである必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-311">It is thread safe to call your application's Windows Forms controls directly within this callback.</span></span>

 <span data-ttu-id="ea184-312">このコールバックに提供された <xref:System.ComponentModel.AsyncCompletedEventArgs> の <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="ea184-312">Check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of the <xref:System.ComponentModel.AsyncCompletedEventArgs> supplied to this callback.</span></span> <span data-ttu-id="ea184-313">このプロパティが `null`場合、ダウンロードは正常に完了しました。`null`されていない場合、インストールは成功しませんでした。また、インストールエラーの詳細については、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-313">If this property is `null`, the download was successful; if it is not `null`, the installation did not succeed, and you can find more information about the installation failure through the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property.</span></span>



## Examples
 <span data-ttu-id="ea184-314">次のコード例では、ヘルプファイルのグループをバックグラウンドでダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="ea184-314">The following code example downloads a group of Help files in the background.</span></span> <span data-ttu-id="ea184-315">この例では、<xref:System.Windows.Forms.StatusStrip> コントロールを含む Windows フォームアプリケーションを配置し、このコントロールに `downloadStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> コントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-315">The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.</span></span>

 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-316"><see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" /> の呼び出しによって開始されたファイルのダウンロード操作で、ステータス情報を使用できる場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="ea184-316">Occurs when status information is available on a file download operation initiated by a call to <see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-317">メインアプリケーションスレッドで <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> イベントが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-317">The <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> event is called on the main application thread.</span></span> <span data-ttu-id="ea184-318">アプリケーションの Windows フォームコントロールをこのコールバック内で直接呼び出すには、スレッドセーフである必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-318">It is thread safe to call your application's Windows Forms controls directly within this callback.</span></span>

 <span data-ttu-id="ea184-319"><xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> に提供されている情報を使用して、進行状況に関する情報をユーザーに伝えます。</span><span class="sxs-lookup"><span data-stu-id="ea184-319">Use the information supplied in <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> to communicate progress information to your users.</span></span>



## Examples
 <span data-ttu-id="ea184-320">次のコード例では、ヘルプファイルのグループをバックグラウンドでダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="ea184-320">The following code example downloads a group of Help files in the background.</span></span> <span data-ttu-id="ea184-321">この例では、<xref:System.Windows.Forms.StatusStrip> コントロールを含む Windows フォームアプリケーションを配置し、このコントロールに `downloadStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> コントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-321">The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.</span></span>

 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileGroupDownloaded">
      <MemberSignature Language="C#" Value="public bool IsFileGroupDownloaded (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFileGroupDownloaded(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFileGroupDownloaded (groupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFileGroupDownloaded(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.IsFileGroupDownloaded : string -&gt; bool" Usage="applicationDeployment.IsFileGroupDownloaded groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName"><span data-ttu-id="ea184-322">ダウンロードするファイルの名前付きグループ。</span><span class="sxs-lookup"><span data-stu-id="ea184-322">The named group of files to download.</span></span> <span data-ttu-id="ea184-323">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで "optional" としてマークされたすべてのファイルには、グループ名が必要です。</span><span class="sxs-lookup"><span data-stu-id="ea184-323">All files marked "optional" in a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application require a group name.</span></span></param>
        <summary><span data-ttu-id="ea184-324">クライアント コンピューターに、名前付きファイル グループが既にダウンロードされているかどうかをチェックします。</span><span class="sxs-lookup"><span data-stu-id="ea184-324">Checks whether the named file group has already been downloaded to the client computer.</span></span></summary>
        <returns><span data-ttu-id="ea184-325">このアプリケーションの現在のバージョンに対して、ファイル グループが既にダウンロードされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ea184-325"><see langword="true" /> if the file group has already been downloaded for the current version of this application; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ea184-326">アプリケーションの新しいバージョンがインストールされており、その新しいバージョンでファイル グループ内のファイルに対して追加、削除、または変更が行われていない場合、<see cref="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" /> は <see langword="true" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ea184-326">If a new version of the application has been installed, and the new version has not added, removed, or altered files in the file group, <see cref="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" /> returns <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-327"><xref:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded%2A> は、部分的に信頼されたアプリケーションで、セキュリティ要求なしで動作します。</span><span class="sxs-lookup"><span data-stu-id="ea184-327"><xref:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded%2A> works in a partially trusted application without any security demands.</span></span>

 <span data-ttu-id="ea184-328">アプリケーションを更新すると、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] は、以前のバージョンのすべてのオンデマンドデータファイルを新しいバージョンのデータディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="ea184-328">When you update an application, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] copies any on-demand data files from the previous version into the new version's data directory.</span></span> <span data-ttu-id="ea184-329">これらのファイルの新しいバージョンをダウンロードする場合は、古いバージョンから残しておく必要のあるデータをすべて削除し、新しいバージョンに移行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-329">If you download a new version of these files, you should remove any data you want to keep from the old version and move it into the new version.</span></span>



## Examples
 <span data-ttu-id="ea184-330">次のコード例では、`HelpFiles` グループ内のすべてのファイルをディスクにダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="ea184-330">The following code example downloads all of the files in the `HelpFiles` group to disk.</span></span>

 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException"><span data-ttu-id="ea184-331"><paramref name="groupName" /> は、アプリケーション マニフェストに定義されているファイル グループではありません。</span><span class="sxs-lookup"><span data-stu-id="ea184-331"><paramref name="groupName" /> is not a file group defined in the application manifest.</span></span></exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstRun">
      <MemberSignature Language="C#" Value="public bool IsFirstRun { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstRun" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstRun As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstRun { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstRun : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-332">クライアント コンピューターでこのアプリケーションを実行したのは今回が初めてかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ea184-332">Gets a value indicating whether this is the first time this application has run on the client computer.</span></span></summary>
        <value><span data-ttu-id="ea184-333">クライアント コンピューターで、アプリケーションのこのバージョンをこれまで一度も実行していない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ea184-333"><see langword="true" /> if this version of the application has never run on the client computer before; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-334">アプリケーションを初めて実行するときに1回限りの初期化操作を実行する必要があるかどうかを判断するには、<xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="ea184-334">Use <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> to determine whether you need to perform any one-time initialization operations the first time your application runs.</span></span>

 <span data-ttu-id="ea184-335">`true` の <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> 設定は、アプリケーションのこのインスタンスが、ユーザーインターフェイスをユーザーに表示する最初のインスタンスであることを示しているとは限りません。</span><span class="sxs-lookup"><span data-stu-id="ea184-335">Do not assume that a <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> setting of `true` indicates that this instance of an application is the first one to show its user interface to the user.</span></span> <span data-ttu-id="ea184-336">システムがプロセスをスケジュールする方法によっては、アプリケーションの1つのインスタンスの <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> プロパティが `true`に設定されている場合がありますが、画面に表示される最初のインスタンスを別のインスタンスにすることができます。</span><span class="sxs-lookup"><span data-stu-id="ea184-336">Due to the way the system schedules processes, one instance of the application may have its <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> property set to `true`, but another instance may be the first to render on the screen.</span></span> <span data-ttu-id="ea184-337">このプロパティの値は、ユーザーが1つのバージョンから次のバージョンにアップグレードするたびにリセットされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-337">The value of this property is reset whenever the user upgrades from one version to the next.</span></span> <span data-ttu-id="ea184-338">アプリケーションのいずれかのバージョンが初めて実行されたときにのみ操作を実行する場合は、追加のテストを実行する必要があります。たとえば、最初に作成したファイルの有無を確認したり、**アプリケーション設定**を使用してフラグを格納したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="ea184-338">If you want to perform an operation only the very first time any version of the application is run, you will need to perform an additional test, such as checking for the existence of a file you created the first time, or storing a flag using **Application Settings**.</span></span>



## Examples
 <span data-ttu-id="ea184-339">次のコード例では、<xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> を使用して、ファイルグループ `HelpFiles`の更新を確認するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="ea184-339">The following code example uses <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> to decide whether to check for an update to the file group `HelpFiles`.</span></span> <span data-ttu-id="ea184-340">1つ以上のファイルが更新されている場合は、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> を呼び出して新しいバージョンを取得します。</span><span class="sxs-lookup"><span data-stu-id="ea184-340">If one or more of the files have been updated, it calls <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> to obtain the new versions.</span></span>

 [!code-csharp[ClickOnceAPI#9](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#9)]
 [!code-vb[ClickOnceAPI#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#9)]

 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet"><span data-ttu-id="ea184-341">ローカルコンピューターへのフルアクセス。</span><span class="sxs-lookup"><span data-stu-id="ea184-341">For full access to the local computer.</span></span> <span data-ttu-id="ea184-342"><see cref="T:System.Security.Permissions.PermissionState" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="ea184-342">Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsNetworkDeployed">
      <MemberSignature Language="C#" Value="public static bool IsNetworkDeployed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsNetworkDeployed" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsNetworkDeployed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsNetworkDeployed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNetworkDeployed : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-343">現在のアプリケーションが [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ea184-343">Gets a value indicating whether the current application is a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application.</span></span></summary>
        <value><span data-ttu-id="ea184-344">このアプリケーションが <see langword="true" /> アプリケーションの場合は [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ea184-344"><see langword="true" /> if this is a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-345">アプリケーションを [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 配置の内部と外部の両方で実行する場合は (たとえば、アプリケーションを配置する前にローカルコンピューターでデバッグする必要がある場合)、<xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> プロパティにアクセスする前に <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> をテストします。</span><span class="sxs-lookup"><span data-stu-id="ea184-345">If you want your application to run both inside and outside of a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment (for example, if you need to debug your application on the local computer before deploying it), test <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> before accessing the <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> property.</span></span>

 <span data-ttu-id="ea184-346">アプリケーションがインストールされているか、オンラインでホストされているか、Web サイト、ファイル共有、または CD-ROM からインストールされているかどうかに関係なく、<xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> は `true` を返します。</span><span class="sxs-lookup"><span data-stu-id="ea184-346"><xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> will return `true` regardless of whether the application is installed or hosted online, and regardless of whether it was installed from a Web site, file share, or CD-ROM.</span></span>



## Examples
 <span data-ttu-id="ea184-347">次のコード例では、最初に <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> を使用して <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> を取得し、参照が `null`ていないことを確認します。</span><span class="sxs-lookup"><span data-stu-id="ea184-347">The following code example retrieves <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> by using <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> first to ensure that the reference is not `null`.</span></span>

 [!code-cpp[ClickOnceAPI#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#2)]
 [!code-csharp[ClickOnceAPI#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#2)]

 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet"><span data-ttu-id="ea184-348">ローカルコンピューターへのフルアクセス。</span><span class="sxs-lookup"><span data-stu-id="ea184-348">For full access to the local computer.</span></span> <span data-ttu-id="ea184-349"><see cref="T:System.Security.Permissions.PermissionState" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="ea184-349">Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="TimeOfLastUpdateCheck">
      <MemberSignature Language="C#" Value="public DateTime TimeOfLastUpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfLastUpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfLastUpdateCheck As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfLastUpdateCheck { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfLastUpdateCheck : DateTime" Usage="System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-350">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] がアプリケーションの更新プログラムを最後にチェックした日時と時刻を取得します。</span><span class="sxs-lookup"><span data-stu-id="ea184-350">Gets the date and the time [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] last checked for an application update.</span></span></summary>
        <value><span data-ttu-id="ea184-351">最終更新チェックの <see cref="T:System.DateTime" />。</span><span class="sxs-lookup"><span data-stu-id="ea184-351">The <see cref="T:System.DateTime" /> of the last update check.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-352">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションは、サブスクリプションの更新用に構成できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-352">A [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application can be configured for subscription updates.</span></span> <span data-ttu-id="ea184-353">このシナリオでは、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 配置マニフェストで定義されている間隔でアプリケーションの配置場所を自動的にポーリングし、利用可能な更新プログラムがあるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ea184-353">In this scenario, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] polls an application's deployment location automatically at intervals defined in the deployment manifest, and determines whether there is an update available.</span></span> <span data-ttu-id="ea184-354"><xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> は、サブスクリプションによって開始されたか、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>、<xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>、<xref:System.Deployment.Application.ApplicationDeployment.Update%2A>、または <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> メソッドを使用して明示的にチェックされたかに関係なく、最後の更新チェックの時刻を返します。</span><span class="sxs-lookup"><span data-stu-id="ea184-354"><xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> returns the time of the last update check regardless of whether it was initiated by a subscription or by an explicit check using the <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>, or <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> method.</span></span>

 <span data-ttu-id="ea184-355">アプリケーションのインストール後に更新プログラムの確認が実行されていない場合、<xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> によってインストール時間が返されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-355">If no update check has been performed since the application was installed, <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> returns the installation time.</span></span>



## Examples
 <span data-ttu-id="ea184-356">次のコード例では、過去3日間に [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションの使用可能な更新プログラムがチェックされているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="ea184-356">The following code example checks whether a [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application has been checked for available updates in the past three days.</span></span>

 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]

 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet"><span data-ttu-id="ea184-357">ローカルコンピューターへのフルアクセス。</span><span class="sxs-lookup"><span data-stu-id="ea184-357">For full access to the local computer.</span></span> <span data-ttu-id="ea184-358"><see cref="T:System.Security.Permissions.PermissionState" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="ea184-358">Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></permission>
        <related type="Article" href="/visualstudio/deployment/choosing-a-clickonce-update-strategy"><span data-ttu-id="ea184-359">ClickOnce の更新方法の選択</span><span class="sxs-lookup"><span data-stu-id="ea184-359">Choosing a ClickOnce Update Strategy</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public bool Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; bool" Usage="applicationDeployment.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea184-360">このアプリケーションの最新バージョンの同期ダウンロードとインストールを開始します。</span><span class="sxs-lookup"><span data-stu-id="ea184-360">Starts a synchronous download and installation of the latest version of this application.</span></span></summary>
        <returns><span data-ttu-id="ea184-361">アプリケーションが更新されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ea184-361"><see langword="true" /> if an application has been updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-362"><xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>によって指定された場所にアプリケーションの新しいバージョンを発行し、アプリケーションの配置マニフェストのバージョン番号が、ユーザーのコンピューターに現在インストールされているアプリケーションのバージョン番号よりも大きい場合、アプリケーションは更新されたと見なされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-362">An application is considered updated when you publish a new version of the application to the location specified by <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, and the version number in the application's deployment manifest is greater than the version number of the application currently installed on the user's computer.</span></span>

 <span data-ttu-id="ea184-363">更新プログラムがクライアントコンピューターにダウンロードされ、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] キャッシュにインストールされるまで、<xref:System.Deployment.Application.ApplicationDeployment.Update%2A> の呼び出しはブロックされます。この間、アプリケーションはユーザーに応答しません。</span><span class="sxs-lookup"><span data-stu-id="ea184-363">The <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> call will block until the update has been downloaded to the client computer and installed into the [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] cache; during this time, the application will not be responsive to the user.</span></span> <span data-ttu-id="ea184-364">アプリケーションの応答性を維持したり、ダウンロード中に進行状況レポートを表示したりする場合は、代わりに <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ea184-364">If you want to maintain application responsiveness or display a progress report during download, use the <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> method instead.</span></span>

 <span data-ttu-id="ea184-365"><xref:System.Deployment.Application.ApplicationDeployment.Update%2A> は、アプリケーションマニフェストで "optional" とマークされていないすべてのファイルをダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="ea184-365"><xref:System.Deployment.Application.ApplicationDeployment.Update%2A> downloads all of the files that are not marked as "optional" in the application manifest.</span></span> <span data-ttu-id="ea184-366">必要に応じてオプションファイルをダウンロードするには、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> または <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="ea184-366">You can download optional files on demand by using the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> or the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> method.</span></span>

 <span data-ttu-id="ea184-367"><xref:System.Deployment.Application.ApplicationDeployment.Update%2A> メソッドを呼び出すと、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] が既にアプリケーションを更新している可能性があります。この場合、このメソッドを呼び出すと <xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-367">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] may already be updating the application automatically when you call the <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> method; if that happens, calls to this method will throw an <xref:System.InvalidOperationException>.</span></span>

 <span data-ttu-id="ea184-368">配置内の1つ以上のファイルを更新しても、アプリケーションマニフェストを更新していない場合は、<xref:System.Deployment.Application.InvalidDeploymentException>が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-368">If you have updated one or more files in your deployment, but you have not refreshed your application manifest, you will receive an <xref:System.Deployment.Application.InvalidDeploymentException>.</span></span> <span data-ttu-id="ea184-369">ほとんどの場合、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを再デプロイすると、この問題が解決されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-369">Most of the time, redeploying your [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] application solves this problem.</span></span> <span data-ttu-id="ea184-370">また、配置マニフェストまたはアプリケーションマニフェストの公開キーの署名が無効であるか、見つからない場合にも、この例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="ea184-370">You will also receive this exception if a public-key signature on a deployment manifest or application manifest is invalid or missing.</span></span>

 <span data-ttu-id="ea184-371">更新プログラムによって、以前のバージョンのアプリケーションよりも高いレベルの信頼がローカルコンピューターに要求される場合があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-371">An update may request a higher level of trust on the local computer than the previous version of the application.</span></span> <span data-ttu-id="ea184-372">アプリケーションが信頼されたアプリケーションの配置を使用する場合、共通言語ランタイム (CLR) 信頼マネージャーは、配置マニフェストを調べて、有効な信頼ライセンスが含まれているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ea184-372">If the application uses Trusted Application Deployment, the common language runtime (CLR) trust manager examines the deployment manifest to determine whether it contains a valid trust license.</span></span> <span data-ttu-id="ea184-373">配置マニフェストに有効な信頼ライセンスが含まれていない場合、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] によってインストールが停止され、<xref:System.Deployment.Application.TrustNotGrantedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-373">If the deployment manifest does not contain a valid trust license, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] stops the installation and throws a <xref:System.Deployment.Application.TrustNotGrantedException>.</span></span> <span data-ttu-id="ea184-374"><xref:System.Deployment.Application.ApplicationDeployment.Update%2A> メソッドは、アプリケーションの実行権限を付与するかどうかをユーザーに確認するプロンプトを表示しません。</span><span class="sxs-lookup"><span data-stu-id="ea184-374">The <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> method will never display a prompt asking the user whether they want to grant the application permission to run.</span></span>



## Examples
 <span data-ttu-id="ea184-375">次のコード例では、アプリケーションの更新プログラムを確認します。更新プログラムが利用可能な場合は、同期的にインストールされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-375">The following code example checks for an application update; if an update is available, it installs it synchronously.</span></span>

 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException"><span data-ttu-id="ea184-376">ローカル コンピューターは、アプリケーションが実行するために要求したアクセス許可レベルを付与しませんでした。</span><span class="sxs-lookup"><span data-stu-id="ea184-376">The local computer did not grant the application the permission level it requested to execute.</span></span></exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException"><span data-ttu-id="ea184-377">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] の配置が破損しています。</span><span class="sxs-lookup"><span data-stu-id="ea184-377">Your [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment is corrupted.</span></span> <span data-ttu-id="ea184-378">問題の診断および解決方法に関するヒントについては、「[ClickOnce 配置のトラブルシューティング](/visualstudio/deployment/troubleshooting-clickonce-deployments)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-378">For tips on how to diagnose and correct the problem, see [Troubleshooting ClickOnce Deployments](/visualstudio/deployment/troubleshooting-clickonce-deployments).</span></span></exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException"><span data-ttu-id="ea184-379">新しい配置をネットワーク上の場所からダウンロードできませんでした。</span><span class="sxs-lookup"><span data-stu-id="ea184-379">The new deployment could not be downloaded from its location on the network.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ea184-380">アプリケーションは現在更新されています。</span><span class="sxs-lookup"><span data-stu-id="ea184-380">The application is currently being updated.</span></span></exception>
        <permission cref="T:System.Security.PermissionSet"><span data-ttu-id="ea184-381">ローカルコンピューターへのフルアクセス。</span><span class="sxs-lookup"><span data-stu-id="ea184-381">For full access to the local computer.</span></span> <span data-ttu-id="ea184-382"><see cref="T:System.Security.Permissions.PermissionState" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="ea184-382">Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></permission>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <related type="Article" href="/visualstudio/deployment/choosing-a-clickonce-update-strategy"><span data-ttu-id="ea184-383">ClickOnce の更新方法の選択</span><span class="sxs-lookup"><span data-stu-id="ea184-383">Choosing a ClickOnce Update Strategy</span></span></related>
        <related type="Article" href="/visualstudio/deployment/securing-clickonce-applications"><span data-ttu-id="ea184-384">ClickOnce 配置とセキュリティ</span><span class="sxs-lookup"><span data-stu-id="ea184-384">ClickOnce Deployment and Security</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public void UpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsync : unit -&gt; unit" Usage="applicationDeployment.UpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea184-385">このアプリケーションの最新バージョンの非同期ダウンロードとインストールを開始します。</span><span class="sxs-lookup"><span data-stu-id="ea184-385">Starts an asynchronous download and installation of the latest version of this application.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-386"><xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>によって指定された場所にアプリケーションの新しいバージョンを発行し、アプリケーションの配置マニフェストのバージョン番号が、ユーザーのコンピューターに現在インストールされているアプリケーションのバージョン番号よりも大きい場合、アプリケーションは更新されたと見なされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-386">An application is considered updated when you publish a new version of the application to the location specified by <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, and the version number in the application's deployment manifest is greater than the version number of the application currently installed on the user's computer.</span></span>

 <span data-ttu-id="ea184-387">更新プログラムのダウンロード中に、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] によってメインアプリケーションスレッドで <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> イベントハンドラーが発生し、ダウンロードの状態が通知されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-387">While downloading the update, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] will raise the <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> event handler on the main application thread to inform you of the status of the download.</span></span> <span data-ttu-id="ea184-388">非同期更新が完了するか例外が発生すると、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] はメインアプリケーションスレッドで <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="ea184-388">When the asynchronous update finishes or encounters an exception, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] will raise the <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> event on the main application thread.</span></span> <span data-ttu-id="ea184-389">このイベントに指定された <xref:System.ComponentModel.AsyncCompletedEventArgs> を調べて、更新が成功したかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="ea184-389">Examine the <xref:System.ComponentModel.AsyncCompletedEventArgs> supplied to this event to determine whether the update succeeded.</span></span>

 <span data-ttu-id="ea184-390"><xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> が例外をスローした場合、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] は <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> を呼び出し、<xref:System.ComponentModel.AsyncCompletedEventArgs> の <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティをスローされた例外に設定します。</span><span class="sxs-lookup"><span data-stu-id="ea184-390">If <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> throws an exception, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] calls <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> and sets the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of <xref:System.ComponentModel.AsyncCompletedEventArgs> to the exception that was thrown.</span></span>

 <span data-ttu-id="ea184-391"><xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> は、アプリケーションマニフェストで "optional" とマークされていない展開内のすべてのファイルをダウンロードします。</span><span class="sxs-lookup"><span data-stu-id="ea184-391"><xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> will download all files in a deployment not marked as "optional" in the application manifest.</span></span> <span data-ttu-id="ea184-392">必要に応じてオプションファイルをダウンロードするには、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> または <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 方法を使用します。</span><span class="sxs-lookup"><span data-stu-id="ea184-392">You can download optional files on demand by using the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> or the <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> method.</span></span>

 <span data-ttu-id="ea184-393"><xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> メソッドを呼び出すと、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] が既にアプリケーションを更新している可能性があります。この場合、このメソッドを呼び出すと <xref:System.InvalidOperationException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-393">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] may already be updating the application automatically when you call the <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> method; if that happens, calls to this method will throw an <xref:System.InvalidOperationException>.</span></span>

 <span data-ttu-id="ea184-394">配置内の1つ以上のファイルを更新しても、アプリケーションマニフェストを更新していない場合は、<xref:System.Deployment.Application.InvalidDeploymentException>が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-394">If you have updated one or more files in your deployment, but you have not refreshed your application manifest, you will receive an <xref:System.Deployment.Application.InvalidDeploymentException>.</span></span> <span data-ttu-id="ea184-395">ほとんどの場合、アプリケーションマニフェストを再構築すると、この問題が解決されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-395">Most of the time, rebuilding your application manifest solves this problem.</span></span> <span data-ttu-id="ea184-396">また、配置マニフェストまたはアプリケーションマニフェストの公開キーの署名が無効であるか、見つからない場合にも、この例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="ea184-396">You will also receive this exception if a public-key signature on a deployment manifest or application manifest is invalid or missing.</span></span>

 <span data-ttu-id="ea184-397">更新プログラムによって、以前のバージョンのアプリケーションよりも高いレベルの信頼がローカルコンピューターに要求される場合があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-397">An update may request a higher level of trust on the local computer than the previous version of the application.</span></span> <span data-ttu-id="ea184-398">アプリケーションが信頼されたアプリケーションの配置を使用する場合、共通言語ランタイム (CLR) 信頼マネージャーは、配置マニフェストを調べて、有効な信頼ライセンスが含まれているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ea184-398">If the application uses Trusted Application Deployment, the common language runtime (CLR) trust manager examines the deployment manifest to determine whether it contains a valid trust license.</span></span> <span data-ttu-id="ea184-399">配置マニフェストに有効な信頼ライセンスが含まれていない場合、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] によってインストールが停止され、<xref:System.Deployment.Application.TrustNotGrantedException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-399">If the deployment manifest does not contain a valid trust license, [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] stops the installation and throws a <xref:System.Deployment.Application.TrustNotGrantedException>.</span></span> <span data-ttu-id="ea184-400"><xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> では、アプリケーションに実行のアクセス許可を付与するかどうかを確認するプロンプトが表示されません。</span><span class="sxs-lookup"><span data-stu-id="ea184-400"><xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> will never display a prompt asking the user if they want to grant the application permission to run.</span></span>



## Examples
 <span data-ttu-id="ea184-401">次のコード例では、アプリケーションの読み込み時に新しい更新プログラムを利用できるかどうかを判断します。必要な更新プログラムが利用可能な場合は、更新プログラムが非同期にインストールされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-401">The following code example determines whether a new update is available at application load time; if a required update is available, it installs the update asynchronously.</span></span> <span data-ttu-id="ea184-402">この例では、<xref:System.Windows.Forms.StatusStrip> コントロールを含む Windows フォームアプリケーションを配置し、このコントロールに `downloadStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> コントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-402">The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.</span></span>

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException"><span data-ttu-id="ea184-403">ローカル コンピューターは、このアプリケーションが実行するために要求したアクセス許可レベルを付与しませんでした。</span><span class="sxs-lookup"><span data-stu-id="ea184-403">The local computer did not grant this application the permission level it requested to execute.</span></span></exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException"><span data-ttu-id="ea184-404">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] の配置が破損しています。</span><span class="sxs-lookup"><span data-stu-id="ea184-404">Your [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] deployment is corrupted.</span></span> <span data-ttu-id="ea184-405">問題の診断および解決方法に関するヒントについては、「[ClickOnce 配置のトラブルシューティング](/visualstudio/deployment/troubleshooting-clickonce-deployments)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-405">For tips on how to diagnose and correct the problem, see [Troubleshooting ClickOnce Deployments](/visualstudio/deployment/troubleshooting-clickonce-deployments).</span></span></exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException"><span data-ttu-id="ea184-406">新しい配置をネットワーク上の場所からダウンロードできませんでした。</span><span class="sxs-lookup"><span data-stu-id="ea184-406">The new deployment could not be downloaded from its location on the network.</span></span></exception>
        <permission cref="T:System.Security.PermissionSet"><span data-ttu-id="ea184-407">ローカルコンピューターへのフルアクセス。</span><span class="sxs-lookup"><span data-stu-id="ea184-407">For full access to the local computer.</span></span> <span data-ttu-id="ea184-408"><see cref="T:System.Security.Permissions.PermissionState" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="ea184-408">Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></permission>
        <altmember cref="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
        <related type="Article" href="/visualstudio/deployment/choosing-a-clickonce-update-strategy"><span data-ttu-id="ea184-409">ClickOnce の更新方法の選択</span><span class="sxs-lookup"><span data-stu-id="ea184-409">Choosing a ClickOnce Update Strategy</span></span></related>
        <related type="Article" href="/visualstudio/deployment/securing-clickonce-applications"><span data-ttu-id="ea184-410">ClickOnce 配置とセキュリティ</span><span class="sxs-lookup"><span data-stu-id="ea184-410">ClickOnce Deployment and Security</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void UpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.UpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ea184-411"><see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> によって開始された非同期更新をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="ea184-411">Cancels an asynchronous update initiated by <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-412"><xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A> は <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>の呼び出しによって開始された更新のみをキャンセルします。サブスクリプションの一部として開始された更新をキャンセルすることはありません。</span><span class="sxs-lookup"><span data-stu-id="ea184-412"><xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A> only cancels an update initiated by a call to <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; it does not cancel an update started as part of a subscription.</span></span>

 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet"><span data-ttu-id="ea184-413">ローカルコンピューターへのフルアクセス。</span><span class="sxs-lookup"><span data-stu-id="ea184-413">For full access to the local computer.</span></span> <span data-ttu-id="ea184-414"><see cref="T:System.Security.Permissions.PermissionState" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="ea184-414">Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></permission>
        <related type="Article" href="/visualstudio/deployment/choosing-a-clickonce-update-strategy"><span data-ttu-id="ea184-415">ClickOnce の更新方法の選択</span><span class="sxs-lookup"><span data-stu-id="ea184-415">Choosing a ClickOnce Update Strategy</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ UpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-416">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] の呼び出しの結果として、<see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> がアプリケーションのアップグレードを完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="ea184-416">Occurs when [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] has finished upgrading the application as the result of a call to <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-417">メインアプリケーションスレッドで <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> イベントが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-417">The <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> event is called on the main application thread.</span></span> <span data-ttu-id="ea184-418">例外をトリガーすることなく、アプリケーションの Windows フォームコントロールをこのコールバック内で直接呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ea184-418">You may call your application's Windows Forms controls directly within this callback without triggering an exception.</span></span>

 <span data-ttu-id="ea184-419">このコールバックに提供された <xref:System.ComponentModel.AsyncCompletedEventArgs> の <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="ea184-419">Check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property of the <xref:System.ComponentModel.AsyncCompletedEventArgs> supplied to this callback.</span></span> <span data-ttu-id="ea184-420">このプロパティが `null`の場合、インストールは正常に完了しました。`null`ない場合、インストールは成功しませんでした。このインストールエラーの詳細については、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ea184-420">If this property is `null`, the installation was successful; if it is not `null`, the installation did not succeed, and you can find more information about this installation failure through the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property.</span></span> <span data-ttu-id="ea184-421">更新プログラムがダウンロードされたら、<xref:System.Windows.Forms.Application> で <xref:System.Windows.Forms.Application.Restart%2A> メソッドを呼び出して、新しいバージョンのアプリケーションを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-421">Once the update has been downloaded, you will need to call the <xref:System.Windows.Forms.Application.Restart%2A> method on the <xref:System.Windows.Forms.Application> to use the newer version of the application.</span></span>

 <span data-ttu-id="ea184-422"><xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>の呼び出しによって更新プログラムのインストールが取り消された場合は、<xref:System.ComponentModel.AsyncCompletedEventArgs> クラスの <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> プロパティが `true`されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-422">If the installation of the update was canceled by a call to <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>, the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property of the <xref:System.ComponentModel.AsyncCompletedEventArgs> class will be `true`.</span></span>

 <span data-ttu-id="ea184-423">このイベントハンドラーを使用するには、アプリケーションで <xref:System.Deployment.Application> と <xref:System.ComponentModel> の両方の名前空間をインポートする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-423">To use this event handler, your application must import both the <xref:System.Deployment.Application> and <xref:System.ComponentModel> namespaces.</span></span>



## Examples
 <span data-ttu-id="ea184-424">次のコード例では、アプリケーションの読み込み時に新しい更新プログラムが利用可能かどうかを判断します。必要な更新プログラムが利用可能な場合は、更新プログラムが非同期にインストールされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-424">The following code example determines at application load time whether a new update is available; if a required update is available, it installs the update asynchronously.</span></span> <span data-ttu-id="ea184-425">この例では、<xref:System.Windows.Forms.StatusStrip> コントロールを含む Windows フォームアプリケーションを配置し、このコントロールに `downloadStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> コントロールが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-425">The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.</span></span>

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedApplicationFullName">
      <MemberSignature Language="C#" Value="public string UpdatedApplicationFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdatedApplicationFullName" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedApplicationFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdatedApplicationFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedApplicationFullName : string" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-426">アプリケーションの更新後に、アプリケーションの完全名を取得します。</span><span class="sxs-lookup"><span data-stu-id="ea184-426">Gets the full name of the application after it has been updated.</span></span></summary>
        <value><span data-ttu-id="ea184-427">アプリケーションの完全名を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="ea184-427">A <see cref="T:System.String" /> that contains the full name of the application.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedVersion">
      <MemberSignature Language="C#" Value="public Version UpdatedVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version UpdatedVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ UpdatedVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-428">最近ダウンロードされた更新プログラムのバージョンを取得します。</span><span class="sxs-lookup"><span data-stu-id="ea184-428">Gets the version of the update that was recently downloaded.</span></span></summary>
        <value><span data-ttu-id="ea184-429">更新プログラムのバージョンを示す <see cref="T:System.Version" />。</span><span class="sxs-lookup"><span data-stu-id="ea184-429">The <see cref="T:System.Version" /> describing the version of the update.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-430"><xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> は <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> とは異なります。新しい更新プログラムがインストールされていても、<xref:System.Windows.Forms.Application>で <xref:System.Windows.Forms.Application.Restart%2A> をまだ呼び出していない場合です。</span><span class="sxs-lookup"><span data-stu-id="ea184-430"><xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> differs from <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> if a new update has been installed but you have not yet called <xref:System.Windows.Forms.Application.Restart%2A> on the <xref:System.Windows.Forms.Application>.</span></span> <span data-ttu-id="ea184-431">アプリケーションの配置マニフェストが自動更新を実行するように構成されている場合は、これら2つの値を比較して、アプリケーションを再起動する必要があるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-431">If the application's deployment manifest is configured to perform automatic updates, you can compare these two values to determine whether you should restart the application.</span></span>

 <span data-ttu-id="ea184-432">アプリケーションが更新されていない場合、<xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> は <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>と同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="ea184-432">If the application has not been updated, <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> returns the same value as <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>.</span></span>



## Examples
 <span data-ttu-id="ea184-433">次のコード例では、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] によってアプリケーションが更新されたかどうかを判断するメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="ea184-433">The following code example defines a method that determines whether [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] has updated the application.</span></span>

 [!code-cpp[ClickOnceAPI#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#4)]
 [!code-csharp[ClickOnceAPI#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#4)]
 [!code-vb[ClickOnceAPI#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#4)]

 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet"><span data-ttu-id="ea184-434">ローカルコンピューターへのフルアクセス。</span><span class="sxs-lookup"><span data-stu-id="ea184-434">For full access to the local computer.</span></span> <span data-ttu-id="ea184-435">関連付けられた列挙型: <see cref="T:System.Security.Permissions.PermissionState" /></span><span class="sxs-lookup"><span data-stu-id="ea184-435">Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocation">
      <MemberSignature Language="C#" Value="public Uri UpdateLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UpdateLocation" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UpdateLocation { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateLocation : Uri" Usage="System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-436">このアプリケーションの更新元である Web サイトまたはファイル共有を取得します。</span><span class="sxs-lookup"><span data-stu-id="ea184-436">Gets the Web site or file share from which this application updates itself.</span></span></summary>
        <value><span data-ttu-id="ea184-437">HTTP、HTTPS、またはファイルの URL として表される更新プログラムのパス。または Windows ネットワーク ファイル パス (UNC) として表される更新のパス。</span><span class="sxs-lookup"><span data-stu-id="ea184-437">The update path, expressed as an HTTP, HTTPS, or file URL; or as a Windows network file path (UNC).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-438">アプリケーションの配置が更新リダイレクトを使用するように構成されている場合、最初にアプリケーションをダウンロードするときに使用した Web サイトとは <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> 異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="ea184-438"><xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> may be different from the Web site used to download the application initially if the application's deployment is configured to use update redirection.</span></span>

 <span data-ttu-id="ea184-439">この値は、アプリケーションの配置マニフェストでのみ変更できます。</span><span class="sxs-lookup"><span data-stu-id="ea184-439">This value can be changed only in the application's deployment manifest.</span></span>

 ]]></format>
        </remarks>
        <permission cref="T:System.Security.PermissionSet"><span data-ttu-id="ea184-440">ローカルコンピューターへのフルアクセス。</span><span class="sxs-lookup"><span data-stu-id="ea184-440">For full access to the local computer.</span></span> <span data-ttu-id="ea184-441"><see cref="T:System.Security.Permissions.PermissionState" /> (関連する列挙体)</span><span class="sxs-lookup"><span data-stu-id="ea184-441">Associated enumeration: <see cref="T:System.Security.Permissions.PermissionState" />.</span></span></permission>
        <related type="Article" href="/visualstudio/deployment/how-to-specify-an-alternate-location-for-deployment-updates"><span data-ttu-id="ea184-442">方法 : 配置の更新用に別の場所を指定する</span><span class="sxs-lookup"><span data-stu-id="ea184-442">How to: Specify an Alternate Location for Deployment Updates</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ UpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ea184-443">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] メソッドの呼び出しによって開始された更新操作について、<see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> に新しいステータス情報がある場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="ea184-443">Occurs when [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] has new status information for an update operation initiated by calling the <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="ea184-444">メインアプリケーションスレッドで <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> イベントが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ea184-444">The <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> event is called on the main application thread.</span></span> <span data-ttu-id="ea184-445">例外をトリガーすることなく、アプリケーションの Windows フォームコントロールをこのコールバック内で直接呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ea184-445">You may call your application's Windows Forms controls directly within this callback without triggering an exception.</span></span>



## Examples
 <span data-ttu-id="ea184-446">次のコード例では、アプリケーションの読み込み時に新しい更新プログラムが利用可能かどうかを判断します。必要な更新プログラムが利用可能な場合は、更新プログラムが非同期にインストールされます。</span><span class="sxs-lookup"><span data-stu-id="ea184-446">The following code example determines at application load time whether a new update is available; if a required update is available, it installs the update asynchronously.</span></span>

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
