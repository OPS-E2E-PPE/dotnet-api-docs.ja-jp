<Type Name="ApplicationDeployment" FullName="System.Deployment.Application.ApplicationDeployment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="01b063a5c9411662370ac4081a828f0297f393cc" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83959633" /></Metadata><TypeSignature Language="C#" Value="public sealed class ApplicationDeployment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ApplicationDeployment extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Deployment.Application.ApplicationDeployment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ApplicationDeployment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationDeployment sealed" />
  <TypeSignature Language="F#" Value="type ApplicationDeployment = class" />
  <AssemblyInfo>
    <AssemblyName>System.Deployment</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>プログラムによる現在の配置の更新と、必要に応じたファイルのダウンロード処理をサポートします。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 更新プログラムを確認し、配置マニフェストの `subscription` 要素を通じてそれらを自動的にインストールするように [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを構成できます。 ただし、一部のアプリケーションでは、更新プログラムをより細かく制御する必要があります。 必要な更新プログラムをプログラムでインストールし、必要に応じてオプションの更新プログラムをインストールするようにユーザーに求めることができます。 デプロイマニフェストでサブスクリプションの更新をオフにすることで、アプリケーションの更新ポリシーを完全に制御できます。 または、自動サブスクリプションを <xref:System.Deployment.Application.ApplicationDeployment>と組み合わせて使用することもできます。これにより、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] はアプリケーションを定期的に更新できますが、リリース後すぐに重要な更新プログラムをダウンロードするには <xref:System.Deployment.Application.ApplicationDeployment> を使用します。

 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> または <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> のいずれかの方法を使用して、配置に使用可能な更新プログラムがあるかどうかをテストできます。後者のメソッドは、正常に完了したときに <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> イベントを発生させます。 <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> は、更新プログラムに関する重要な情報 (バージョン番号、現在のユーザーに必要な更新かどうかなど) を返します。 更新プログラムが利用可能な場合は、<xref:System.Deployment.Application.ApplicationDeployment.Update%2A> または <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>を使用してインストールできます。後者の方法では、更新プログラムのインストールが完了した後に、<xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> イベントが発生します。 大きな更新プログラムの場合は、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> イベントと <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> イベントを使用して進行状況の通知を受け取り、<xref:System.ComponentModel.ProgressChangedEventArgs> の情報を使用して、ダウンロードの状態をユーザーに通知することができます。

 <xref:System.Deployment.Application.ApplicationDeployment> を使用して、必要に応じて大きなファイルやアセンブリをダウンロードすることもできます。 これらのファイルは、インストール時にダウンロードされないように、配置のアプリケーションマニフェスト内で "省略可能" としてマークされている必要があります。 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> または <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 方法を使用して、アプリケーションの実行中の任意の時点でファイルをダウンロードできます。 <xref:System.AppDomain> クラスの <xref:System.AppDomain.AssemblyResolve> イベントのイベントハンドラーを指定することにより、アセンブリをメモリに読み込む前にダウンロードできます。 詳細については、「[チュートリアル : デザイナーを使用し、ClickOnce 配置 API で必要に応じてアセンブリをダウンロードする](/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api-using-the-designer)」を参照してください。

> [!NOTE]
>  アプリケーションの実行中に [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを更新した場合、ユーザーは <xref:System.Windows.Forms.Application>の <xref:System.Windows.Forms.Application.Restart%2A> メソッドを呼び出すまで更新を表示しません。これにより、アプリケーションの現在実行中のインスタンスが閉じられ、すぐに再起動します。

 <xref:System.Deployment.Application.ApplicationDeployment> にはパブリックコンストラクターがありません。[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーション内のクラスのインスタンスを取得するには、<xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> プロパティを使用します。 現在のアプリケーションが [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションであることを確認するには、<xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> プロパティを使用します。

 <xref:System.Deployment.Application.ApplicationDeployment> は、クラスイベントとして完了コールバックを公開する新しい[イベントベースの非同期パターンの概要](/dotnet/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview)を使用して、更新を確認し、更新されたファイルを非同期的にダウンロードすることをサポートしています。 <xref:System.Deployment.Application.ApplicationDeployment> はスレッドを開始して管理し、正しい UI スレッドでアプリケーションを呼び出します。 このクラスを使用すると、更新プログラムのインストール中にユーザーが作業を続行できるように、アプリケーションをロックせずに更新できます。 更新の実行中にユーザーがすべての作業を停止する必要がある場合は、代わりに同期メソッドを使用することを検討してください。

> [!NOTE]
>  非同期更新を実行するには、アプリケーションが <xref:System.Deployment.Application> と <xref:System.ComponentModel> の両方の名前空間をインポートする必要があります。



## Examples
 次のコード例では、アプリケーションの読み込み時に新しい更新プログラムが利用可能かどうかを判断します。必要な更新プログラムが利用可能な場合、このコード例では更新プログラムを非同期にインストールします。 このコードは、`downloadStatus`という名前の <xref:System.Windows.Forms.TextBox> を含むフォームに追加する必要があります。

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
    </remarks>
    <related type="Article" href="/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api-using-the-designer">チュートリアル: デザイナーを使用して ClickOnce 配置 API で必要に応じてアセンブリをダウンロードする</related>
  </Docs>
  <Members>
    <Member MemberName="ActivationUri">
      <MemberSignature Language="C#" Value="public Uri ActivationUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ActivationUri" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActivationUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ActivationUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActivationUri : Uri" Usage="System.Deployment.Application.ApplicationDeployment.ActivationUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの配置マニフェストを起動するために使用する URL を取得します。</summary>
        <value>配置マニフェストの<c>Trusturlparameters</c>プロパティが <see langword="false" />場合、またはユーザーが配置を開くために UNC を指定した場合、またはローカルに開いている場合は、長さ0の文字列。 それ以外の場合は、すべてのパラメーターを含む、アプリケーションの起動に使用する完全な URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このプロパティは、完全に信頼されたアプリケーションと部分的に信頼されたアプリケーションの両方で動作します。



## Examples
 次のコードは、<xref:System.Deployment.Application.ApplicationDeployment.ActivationUri%2A>を使用して URL パラメーターを取得する方法と、<xref:System.Web.HttpUtility> クラスを使用してクエリ文字列を安全に解析する方法を示しています。 同じクエリ文字列変数の複数回の出現が、返された <xref:System.Collections.Specialized.NameValueCollection>の1つのエントリに統合されます。

 [!code-csharp[ClickOnceQueryString#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceQueryString/CS/Form1.cs#1)]
 [!code-vb[ClickOnceQueryString#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceQueryString/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForDetailedUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> と同じ操作を実行しますが、利用可能な更新プログラムの拡張情報を返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate () As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : unit -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> と同じ操作を実行しますが、利用可能な更新プログラムの拡張情報を返します。</summary>
        <returns>利用可能な更新プログラムの <see cref="T:System.Deployment.Application.UpdateCheckInfo" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> メソッドを使用すると、同期呼び出し元は、<xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> クラスを使用して、非同期呼び出し元が取得するのと同じ拡張情報を取得できます。



## Examples
 次のコード例では、<xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> を使用して、最新の更新プログラムに関する情報を取得します。 更新プログラムが存在する場合は、必要な更新プログラムである場合にのみ、更新プログラムが自動的にインストールされます。それ以外の場合は、ユーザーに表示されます。

 [!code-cpp[ClickOnceAPI#7](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#7)]
 [!code-csharp[ClickOnceAPI#7](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#7)]
 [!code-vb[ClickOnceAPI#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#7)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">現在のアプリケーションは、更新プログラムをサポートするように構成されていないか、別の更新プログラムのチェック操作が既に実行中です。</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">配置マニフェストをダウンロードできません。 この例外は、<see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> イベントの <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> プロパティで確認できます。</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">配置マニフェストが破損しています。 このアプリケーションをユーザーに配置する前に、アプリケーションのマニフェストを再作成してください。 この例外は、<see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> イベントの <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> プロパティで確認できます。</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckForDetailedUpdate">
      <MemberSignature Language="C#" Value="public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForDetailedUpdate (persistUpdateCheckResult As Boolean) As UpdateCheckInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Deployment::Application::UpdateCheckInfo ^ CheckForDetailedUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForDetailedUpdate : bool -&gt; System.Deployment.Application.UpdateCheckInfo" Usage="applicationDeployment.CheckForDetailedUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.UpdateCheckInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult"><see langword="false" /> の場合、更新は通知なしに適用され、ダイアログ ボックスは表示されません。</param>
        <summary><see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> と同じ操作を実行しますが、利用可能な更新プログラムの拡張情報を返します。</summary>
        <returns>利用可能な更新プログラムの <see cref="T:System.Deployment.Application.UpdateCheckInfo" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckForUpdate">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> をチェックし、新しい更新プログラムを利用できるかどうかを確認します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : unit -&gt; bool" Usage="applicationDeployment.CheckForUpdate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> をチェックし、新しい更新プログラムを利用できるかどうかを確認します。</summary>
        <returns>新しい更新プログラムを利用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> メソッドは、現在インストールされている展開のバージョンと、<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>で見つかった配置マニフェストに指定されているバージョンを比較します。 サーバー上のバージョンがインストールされているバージョンと異なる場合は `true`が返されます。

 このメソッドは、チェックが完了するまでブロックします。 更新プログラムを非同期でチェックするには、代わりに <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> メソッドを使用します。

> [!NOTE]
>  更新プログラムが使用可能であることが検出され、ユーザーがインストールを選択しなかった場合は、次にアプリケーションを実行したときに更新プログラムが使用可能であることをユーザーに確認するメッセージが表示され <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ます。 このメッセージを表示しないようにする方法はありません。 (アプリケーションが必要な更新プログラムである場合は、プロンプトを表示せずにインストール [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ます)。



## Examples
 次のコード例では、アプリケーションの更新プログラムを確認します。使用可能な場合は、同期的にインストールされます。

 [!code-cpp[ClickOnceAPI#5](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#5)]
 [!code-csharp[ClickOnceAPI#5](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#5)]
 [!code-vb[ClickOnceAPI#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#5)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">更新プログラムが既に実行中であるときに <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" /> メソッドを呼び出すと、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] は即座にこの例外をスローします。</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">配置マニフェストをダウンロードできません。</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">配置マニフェストが破損しています。 この問題を解決するには、アプリケーションを再配置する必要があると思われます。</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdate">
      <MemberSignature Language="C#" Value="public bool CheckForUpdate (bool persistUpdateCheckResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckForUpdate(bool persistUpdateCheckResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckForUpdate (persistUpdateCheckResult As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckForUpdate(bool persistUpdateCheckResult);" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdate : bool -&gt; bool" Usage="applicationDeployment.CheckForUpdate persistUpdateCheckResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="persistUpdateCheckResult" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="persistUpdateCheckResult"><see langword="false" /> の場合、更新は通知なしに適用され、ダイアログ ボックスは表示されません。</param>
        <summary><see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> をチェックし、新しい更新プログラムを利用できるかどうかを確認します。</summary>
        <returns>新しい更新プログラムを利用できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsync">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsync : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> を非同期でチェックし、新しい更新プログラムを利用できるかどうかを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> はすぐに戻り、更新されたアプリケーションをダウンロードするための別のスレッドを開始します。 メソッドが完了するか取り消されると、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> イベントが発生します。 このイベントハンドラーの <xref:System.ComponentModel.AsyncCompletedEventArgs> を使用すると、操作が取り消されたかどうか、または更新中に例外が発生したかどうかを判断できます。

 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>を呼び出すことにより、非同期更新を取り消すことができます。

> [!NOTE]
>  更新プログラムが使用可能であることが検出され、ユーザーがインストールを選択しなかった場合は、次にアプリケーションを実行したときに更新プログラムが使用可能であることをユーザーに確認するメッセージが表示され <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ます。 このメッセージを表示しないようにする方法はありません。 (アプリケーションが必要な更新プログラムである場合は、プロンプトを表示せずにインストール [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] ます)。



## Examples
 次の例では、更新プログラムが非同期であるかどうかを確認し、更新プログラムが存在する場合はインストールします。

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">更新プログラムが既に実行中であるときに <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> メソッドを呼び出すと、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] は即座にこの例外をスローします。</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">配置マニフェストをダウンロードできません。 この例外は、<see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> イベントの <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> プロパティで確認できます。</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">配置マニフェストが破損しています。 この問題を解決するには、アプリケーションを再配置する必要があると思われます。 この例外は、<see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> イベントの <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> プロパティで確認できます。</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void CheckForUpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckForUpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckForUpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckForUpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.CheckForUpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>非同期の更新プログラムのチェックをキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 このメソッドを使用して、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> メソッドで開始された更新チェックをキャンセルします。

 このメソッドでは、サブスクリプションの一部として開始された更新など、既に進行中のバックグラウンド更新がキャンセルされることはありません。 サブスクリプションの詳細については、「 [ClickOnce の更新方法の選択](/visualstudio/deployment/choosing-a-clickonce-update-strategy)」を参照してください。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateCompleted As CheckForUpdateCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::CheckForUpdateCompletedEventHandler ^ CheckForUpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " Usage="member this.CheckForUpdateCompleted : System.Deployment.Application.CheckForUpdateCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.CheckForUpdateCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> の完了時に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs> クラスを使用すると、更新プログラムのバージョン、更新プログラムのサイズ、利用可能な更新プログラムが必要かオプションかがわかります。



## Examples
 次のコード例では、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> を使用して、使用可能なアプリケーションの更新プログラムをインストールするようにユーザーに要求するかどうかを決定します。 更新プログラムが必須のアップグレードである場合、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> イベントハンドラーはユーザーにプロンプトを表示しません。 この例では、<xref:System.Windows.Forms.StatusStrip> コントロールを含む Windows フォームアプリケーションを配置し、このコントロールに `downloadStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> コントロールが含まれている必要があります。

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckForUpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CheckForUpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ CheckForUpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.CheckForUpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> の呼び出しで進行状況の更新を使用できる場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>、アプリケーションの配置マニフェストのダウンロードステータスをレポートします。 これは、低速のネットワーク接続を介してデプロイをダウンロードするユーザーにとって重要な情報です。



## Examples
 次のコード例では、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged> イベントを使用して、ダウンロードする配置マニフェストの残りの部分をユーザーに通知します。 この例では、<xref:System.Windows.Forms.StatusStrip> コントロールを含む Windows フォームアプリケーションを配置し、このコントロールに `downloadStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> コントロールが含まれている必要があります。

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDeployment">
      <MemberSignature Language="C#" Value="public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Deployment.Application.ApplicationDeployment CurrentDeployment" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentDeployment As ApplicationDeployment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Deployment::Application::ApplicationDeployment ^ CurrentDeployment { System::Deployment::Application::ApplicationDeployment ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDeployment : System.Deployment.Application.ApplicationDeployment" Usage="System.Deployment.Application.ApplicationDeployment.CurrentDeployment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.ApplicationDeployment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この配置の現在の <see cref="T:System.Deployment.Application.ApplicationDeployment" /> を返します。</summary>
        <value>現在の配置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 アプリケーションで <xref:System.Deployment.Application.ApplicationDeployment> のインスタンスを直接作成することはできません。<xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> プロパティを使用して、有効なインスタンスを取得する必要があります。

 <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> の静的プロパティは、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]を使用して配置されたアプリケーション内からのみ有効です。 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 以外のアプリケーションからこのプロパティを呼び出そうとすると、例外がスローされます。 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)]を使用して配置される可能性があるアプリケーションを開発している場合は、<xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> プロパティを使用して、現在のプログラムが [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションであるかどうかをテストします。



## Examples
 次のコード例では、<xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> を取得し、アプリケーションが過去3日間に更新されたかどうかを確認します。

 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 以外のアプリケーションからこの静的プロパティを呼び出そうとしました。</exception>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentVersion">
      <MemberSignature Language="C#" Value="public Version CurrentVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version CurrentVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ CurrentVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.CurrentVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの現在実行中のインスタンスの配置のバージョンを取得します。</summary>
        <value>現在の配置のバージョン。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 新しい更新プログラムがインストールされていても <xref:System.Windows.Forms.Application.Restart%2A>をまだ呼び出していない場合、<xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> は <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> とは異なります。 自動更新を実行するように配置マニフェストが構成されている場合は、これら2つの値を比較して、アプリケーションを再起動する必要があるかどうかを判断できます。



## Examples
 次のコード例では、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] によってアプリケーションが更新されたかどうかを判断するメソッドを定義します。

 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      </Docs>
    </Member>
    <Member MemberName="DataDirectory">
      <MemberSignature Language="C#" Value="public string DataDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataDirectory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataDirectory : string" Usage="System.Deployment.Application.ApplicationDeployment.DataDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] データ ディレクトリへのパスを取得します。</summary>
        <value>ローカル ディスク上のアプリケーションのデータ ディレクトリへのパスを含む文字列。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroup">
      <MemberSignature Language="C#" Value="public void DownloadFileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroup (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroup : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">ダウンロードするファイルの名前付きグループ。 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで "optional" としてマークされたすべてのファイルには、グループ名が必要です。</param>
        <summary>一連のオプション ファイルを必要に応じてダウンロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションでは、アプリケーションマニフェストで "optional" とマークされたファイルは、初期化または更新中にダウンロードされません。 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> メソッドを使用すると、必要に応じて名前付きグループに属するすべてのファイルをダウンロードし、ユーザーが必要とするまでネットワークリソースとディスク領域を消費しないようにすることができます。 たとえば、特定のユーザーがアプリケーションに含まれるデータ分析パッケージを日常的に使用する必要があり、他のユーザーがそれを呼び出すことがない場合があります。

 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>でダウンロードしたアセンブリを使用するには、<xref:System.AppDomain.CurrentDomain%2A>の <xref:System.AppDomain.AssemblyResolve> イベントにイベントリスナーをアタッチします。 例については、「」を参照してください。「[チュートリアル: デザイナーを使用して ClickOnce 配置 API で必要に応じてアセンブリをダウンロード](/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api-using-the-designer)する」を参照してください。

 すべてのファイルは [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションキャッシュにダウンロードされるため、アプリケーションの現在のバージョンに分離されます。 たとえば、アプリケーションがファイルグループをダウンロードした後、ユーザーが新しいバージョンのアプリケーションをインストールした後で、アプリケーションの以前のバージョンに戻すとします。 この場合、以前のバージョンには、最初にダウンロードしたファイルのコピーが残ります。 データファイルへのアクセスの詳細については、「 [ClickOnce アプリケーションにおけるローカルデータおよびリモートデータへのアクセス](/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications)」を参照してください。

 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> は、部分的に信頼されたアプリケーション、つまり、制限されたアクセス許可で実行されているすべての [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで動作します。 ただし、アセンブリを動的に読み込む場合は、アプリケーションに完全信頼が必要です。

 データファイルのオンデマンドダウンロードは現在サポートされていません。

 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> メソッドが返されるまで、アプリケーションはユーザー入力に応答しません。 ユーザーのワークフローを中断せずにファイルをダウンロードする必要がある場合は、代わりに <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッドを使用します。

 ファイル名だけで1つのファイルをダウンロードすることはできません。 1つのファイルをダウンロードするには、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 展開でグループ名を割り当て、この方法を使用してグループをダウンロードします。



## Examples
 次のコード例は、<xref:System.AppDomain.AssemblyResolve> イベントをリッスンすることによって、必要に応じてアセンブリを読み込む方法を示しています。

 [!code-csharp[ClickOnceOnDemandCmdLine#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceOnDemandCmdLine/CS/Form1.cs#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="groupName" /> パラメーターが null であるか、長さが 0 です。</exception>
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
        <related type="Article" href="/visualstudio/deployment/walkthrough-downloading-satellite-assemblies-on-demand-with-the-clickonce-deployment-api">チュートリアル : ClickOnce 配置 API を使用して必要に応じてサテライト アセンブリをダウンロードする</related>
        <related type="Article" href="/visualstudio/deployment/clickonce-application-manifest">ClickOnce Application Manifest</related>
        <related type="Article" href="/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications">ClickOnce アプリケーションにおけるローカル データおよびリモート データへのアクセス</related>
        <related type="Article" href="/visualstudio/deployment/how-to-include-a-data-file-in-a-clickonce-application">方法 : ClickOnce アプリケーションにデータ ファイルを含める</related>
        <related type="Article" href="/visualstudio/deployment/clickonce-cache-overview">ClickOnce キャッシュのアーキテクチャ</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFileGroupAsync">
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>一連のオプション ファイルを、必要に応じてバックグラウンドでダウンロードします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">ダウンロードするファイルの名前付きグループ。 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで "optional" としてマークされたすべてのファイルには、グループ名が必要です。</param>
        <summary>一連のオプション ファイルを、必要に応じてバックグラウンドでダウンロードします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションでは、アプリケーションマニフェストで "optional" とマークされたファイルは、初期化または更新中にダウンロードされません。 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッドを使用すると、必要に応じて名前付きグループに属するすべてのファイルをダウンロードし、ユーザーが必要とするまでネットワークリソースとディスク領域を消費しないようにすることができます。 この方法は、静的ファイルだけでなく、アプリケーションが必要とする可能性のあるアセンブリにも使用できます。 たとえば、特定のユーザーがアプリケーションに含まれるデータ分析パッケージを日常的に使用する必要があり、他のユーザーがそれを呼び出すことがない場合があります。

 必要に応じてアセンブリをダウンロードするには、<xref:System.AppDomain.CurrentDomain%2A>の <xref:System.AppDomain.AssemblyResolve> イベントにイベントリスナーをアタッチします。 例については、「[チュートリアル: ClickOnce 配置 API を使用して必要に応じてアセンブリをダウンロード](/visualstudio/deployment/walkthrough-downloading-assemblies-on-demand-with-the-clickonce-deployment-api)する」を参照してください。

 すべてのアセンブリが [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションキャッシュにダウンロードされます。

 すべての静的ファイルは [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションのデータディレクトリにダウンロードされるため、アプリケーションの現在のバージョンに分離されます。 たとえば、アプリケーションがファイルグループをダウンロードした後、ユーザーが新しいバージョンのアプリケーションをインストールした後で、アプリケーションの以前のバージョンに戻すとします。 この場合、以前のバージョンには、最初にダウンロードしたファイルのコピーが残ります。 静的ファイルへのアクセスの詳細については、「 [ClickOnce アプリケーションでのローカルデータおよびリモートデータへのアクセス](/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications)」を参照してください。

 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>を使用すると、複数のファイルグループを同時にダウンロードできます。 これらを区別するには、<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> クラスの <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> プロパティを使用します。これは <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> イベントに渡されます。 より複雑な状態を渡す必要がある場合は、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> を使用して `state` オブジェクトを渡すことができます。

 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> は、部分的に信頼されたアプリケーション、つまり、制限されたアクセス許可で実行されているすべての [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで動作します。 ただし、アセンブリを動的に読み込む場合は、アプリケーションが完全な信頼を必要とします。

 データファイルのオンデマンドダウンロードは現在サポートされていません。

 ファイル名だけで1つのファイルをダウンロードすることはできません。 1つのファイルをダウンロードするには、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 展開でグループ名を割り当て、この方法を使用してグループをダウンロードします。

 非同期ダウンロードをキャンセルするには、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> メソッドを呼び出します。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="groupName" /> パラメーターが null であるか、長さが 0 です。</exception>
        <exception cref="T:System.InvalidOperationException">一度に <paramref name="groupName" /> の複数のダウンロードを開始することはできません。</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <related type="Article" href="/visualstudio/deployment/walkthrough-downloading-satellite-assemblies-on-demand-with-the-clickonce-deployment-api">チュートリアル : ClickOnce 配置 API を使用して必要に応じてサテライト アセンブリをダウンロードする</related>
        <related type="Article" href="/visualstudio/deployment/clickonce-application-manifest">ClickOnce Application Manifest</related>
        <related type="Article" href="/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications">ClickOnce アプリケーションにおけるローカル データおよびリモート データへのアクセス</related>
        <related type="Article" href="/visualstudio/deployment/how-to-include-a-data-file-in-a-clickonce-application">方法 : ClickOnce アプリケーションにデータ ファイルを含める</related>
        <related type="Article" href="/visualstudio/deployment/clickonce-cache-overview">ClickOnce キャッシュのアーキテクチャ</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsync">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsync (string groupName, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsync(string groupName, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsync (groupName As String, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsync(System::String ^ groupName, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsync : string * obj -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsync (groupName, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="groupName">ダウンロードするファイルの名前付きグループ。 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで "optional" としてマークされたすべてのファイルには、グループ名が必要です。</param>
        <param name="userState">非同期操作のステータス情報を格納している任意のオブジェクト。</param>
        <summary>一連のオプション ファイルを、必要に応じてバックグラウンドでダウンロードし、アプリケーションの状態の一部をイベント コールバックに渡します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションでは、アプリケーションマニフェストで "optional" とマークされたファイルは、初期化または更新中にダウンロードされません。 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> メソッドを使用すると、必要に応じて名前付きグループに属するすべてのファイルをダウンロードし、ユーザーが必要とするまでネットワークリソースとディスク領域を消費しないようにすることができます。 この方法は、静的ファイルだけでなく、アプリケーションが必要とする可能性のあるアセンブリにも使用できます。 たとえば、特定のユーザーがアプリケーションに含まれるデータ分析パッケージを日常的に使用する必要があり、他のユーザーがそれを呼び出すことがない場合があります。 必要に応じてアセンブリをダウンロードするには、<xref:System.AppDomain.CurrentDomain%2A>の <xref:System.AppDomain.AssemblyResolve> イベントにイベントリスナーをアタッチします。

 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 方法を使用して、複数のファイルグループを同時にダウンロードできます。 これらを区別するには、<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> クラスの <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> プロパティを使用します。これは <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> イベントに渡されます。 より複雑な状態を渡す必要がある場合は、を使用します。

 `state` オブジェクトを渡す <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>。

 すべての静的ファイルは [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションのデータディレクトリにダウンロードされるため、アプリケーションの現在のバージョンに分離されます。 静的ファイルへのアクセスの詳細については、「 [ClickOnce アプリケーションでのローカルデータおよびリモートデータへのアクセス](/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications)」を参照してください。 。 たとえば、アプリケーションがファイルグループをダウンロードした後、ユーザーが新しいバージョンのアプリケーションをインストールしたが、それ以降のユーザーが以前のバージョンのアプリケーションに戻すとします。 この場合、以前のバージョンには、最初にダウンロードしたファイルのコピーが残ります。

 <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> は、部分的に信頼されたアプリケーション、つまり、制限されたアクセス許可で実行されているすべての [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで動作します。 ただし、アセンブリを動的に読み込む場合は、アプリケーションが完全な信頼を必要とします。

 データファイルのオンデマンドダウンロードは現在サポートされていません。

 非同期ダウンロードをキャンセルするには、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A> メソッドを呼び出します。

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="groupName" /> パラメーターが null であるか、長さが 0 です。</exception>
        <exception cref="T:System.InvalidOperationException">一度に <paramref name="groupName" /> の複数のダウンロードを開始することはできません。</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <related type="Article" href="/visualstudio/deployment/walkthrough-downloading-satellite-assemblies-on-demand-with-the-clickonce-deployment-api">チュートリアル : ClickOnce 配置 API を使用して必要に応じてサテライト アセンブリをダウンロードする</related>
        <related type="Article" href="/visualstudio/deployment/clickonce-application-manifest">ClickOnce Application Manifest</related>
        <related type="Article" href="/visualstudio/deployment/accessing-local-and-remote-data-in-clickonce-applications">ClickOnce アプリケーションにおけるローカル データおよびリモート データへのアクセス</related>
        <related type="Article" href="/visualstudio/deployment/how-to-include-a-data-file-in-a-clickonce-application">方法 : ClickOnce アプリケーションにデータ ファイルを含める</related>
        <related type="Article" href="/visualstudio/deployment/clickonce-cache-overview">ClickOnce キャッシュのアーキテクチャ</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupAsyncCancel">
      <MemberSignature Language="C#" Value="public void DownloadFileGroupAsyncCancel (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DownloadFileGroupAsyncCancel(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFileGroupAsyncCancel (groupName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFileGroupAsyncCancel(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupAsyncCancel : string -&gt; unit" Usage="applicationDeployment.DownloadFileGroupAsyncCancel groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">ダウンロードするファイルの名前付きグループ。 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで "optional" としてマークされたすべてのファイルには、グループ名が必要です。</param>
        <summary>ファイルの非同期ダウンロードをキャンセルします。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="groupName" /> として <see langword="null" /> を使用することはできません。</exception>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupCompleted">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupCompleted As DownloadFileGroupCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DownloadFileGroupCompletedEventHandler ^ DownloadFileGroupCompleted;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " Usage="member this.DownloadFileGroupCompleted : System.Deployment.Application.DownloadFileGroupCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DownloadFileGroupCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ファイルのダウンロードが完了すると、メイン アプリケーション スレッドで発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 メインアプリケーションスレッドで <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted> イベントが呼び出されます。 アプリケーションの Windows フォームコントロールをこのコールバック内で直接呼び出すには、スレッドセーフである必要があります。

 このコールバックに提供された <xref:System.ComponentModel.AsyncCompletedEventArgs> の <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティを確認します。 このプロパティが `null`場合、ダウンロードは正常に完了しました。`null`されていない場合、インストールは成功しませんでした。また、インストールエラーの詳細については、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティを参照してください。



## Examples
 次のコード例では、ヘルプファイルのグループをバックグラウンドでダウンロードします。 この例では、<xref:System.Windows.Forms.StatusStrip> コントロールを含む Windows フォームアプリケーションを配置し、このコントロールに `downloadStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> コントロールが含まれている必要があります。

 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadFileGroupProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DownloadFileGroupProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ DownloadFileGroupProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.DownloadFileGroupProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" /> の呼び出しによって開始されたファイルのダウンロード操作で、ステータス情報を使用できる場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 メインアプリケーションスレッドで <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> イベントが呼び出されます。 アプリケーションの Windows フォームコントロールをこのコールバック内で直接呼び出すには、スレッドセーフである必要があります。

 <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> に提供されている情報を使用して、進行状況に関する情報をユーザーに伝えます。



## Examples
 次のコード例では、ヘルプファイルのグループをバックグラウンドでダウンロードします。 この例では、<xref:System.Windows.Forms.StatusStrip> コントロールを含む Windows フォームアプリケーションを配置し、このコントロールに `downloadStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> コントロールが含まれている必要があります。

 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFileGroupDownloaded">
      <MemberSignature Language="C#" Value="public bool IsFileGroupDownloaded (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsFileGroupDownloaded(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsFileGroupDownloaded (groupName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsFileGroupDownloaded(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.IsFileGroupDownloaded : string -&gt; bool" Usage="applicationDeployment.IsFileGroupDownloaded groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">ダウンロードするファイルの名前付きグループ。 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションで "optional" としてマークされたすべてのファイルには、グループ名が必要です。</param>
        <summary>クライアント コンピューターに、名前付きファイル グループが既にダウンロードされているかどうかをチェックします。</summary>
        <returns>このアプリケーションの現在のバージョンに対して、ファイル グループが既にダウンロードされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 アプリケーションの新しいバージョンがインストールされており、その新しいバージョンでファイル グループ内のファイルに対して追加、削除、または変更が行われていない場合、<see cref="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" /> は <see langword="true" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded%2A> は、部分的に信頼されたアプリケーションで、セキュリティ要求なしで動作します。

 アプリケーションを更新すると、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] は、以前のバージョンのすべてのオンデマンドデータファイルを新しいバージョンのデータディレクトリにコピーします。 これらのファイルの新しいバージョンをダウンロードする場合は、古いバージョンから残しておく必要のあるデータをすべて削除し、新しいバージョンに移行する必要があります。



## Examples
 次のコード例では、`HelpFiles` グループ内のすべてのファイルをディスクにダウンロードします。

 [!code-cpp[ClickOnceAPI#8](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#8)]
 [!code-csharp[ClickOnceAPI#8](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#8)]
 [!code-vb[ClickOnceAPI#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#8)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException"><paramref name="groupName" /> は、アプリケーション マニフェストに定義されているファイル グループではありません。</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)" />
        <altmember cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />
      </Docs>
    </Member>
    <Member MemberName="IsFirstRun">
      <MemberSignature Language="C#" Value="public bool IsFirstRun { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFirstRun" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFirstRun As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFirstRun { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFirstRun : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsFirstRun" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアント コンピューターでこのアプリケーションを実行したのは今回が初めてかどうかを示す値を取得します。</summary>
        <value>クライアント コンピューターで、アプリケーションのこのバージョンをこれまで一度も実行していない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 アプリケーションを初めて実行するときに1回限りの初期化操作を実行する必要があるかどうかを判断するには、<xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> を使用します。

 `true` の <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> 設定は、アプリケーションのこのインスタンスが、ユーザーインターフェイスをユーザーに表示する最初のインスタンスであることを示しているとは限りません。 システムがプロセスをスケジュールする方法によっては、アプリケーションの1つのインスタンスの <xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> プロパティが `true`に設定されている場合がありますが、画面に表示される最初のインスタンスを別のインスタンスにすることができます。 このプロパティの値は、ユーザーが1つのバージョンから次のバージョンにアップグレードするたびにリセットされます。 アプリケーションのいずれかのバージョンが初めて実行されたときにのみ操作を実行する場合は、追加のテストを実行する必要があります。たとえば、最初に作成したファイルの有無を確認したり、**アプリケーション設定**を使用してフラグを格納したりすることができます。



## Examples
 次のコード例では、<xref:System.Deployment.Application.ApplicationDeployment.IsFirstRun%2A> を使用して、ファイルグループ `HelpFiles`の更新を確認するかどうかを決定します。 1つ以上のファイルが更新されている場合は、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> を呼び出して新しいバージョンを取得します。

 [!code-csharp[ClickOnceAPI#9](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#9)]
 [!code-vb[ClickOnceAPI#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#9)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNetworkDeployed">
      <MemberSignature Language="C#" Value="public static bool IsNetworkDeployed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsNetworkDeployed" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsNetworkDeployed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsNetworkDeployed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNetworkDeployed : bool" Usage="System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在のアプリケーションが [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションかどうかを示す値を取得します。</summary>
        <value>このアプリケーションが [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 アプリケーションを [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 配置の内部と外部の両方で実行する場合は (たとえば、アプリケーションを配置する前にローカルコンピューターでデバッグする必要がある場合)、<xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> プロパティにアクセスする前に <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> をテストします。

 アプリケーションがインストールされているか、オンラインでホストされているか、Web サイト、ファイル共有、または CD-ROM からインストールされているかどうかに関係なく、<xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> は `true` を返します。



## Examples
 次のコード例では、最初に <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A> を使用して <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> を取得し、参照が `null`ていないことを確認します。

 [!code-cpp[ClickOnceAPI#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#2)]
 [!code-csharp[ClickOnceAPI#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#2)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeOfLastUpdateCheck">
      <MemberSignature Language="C#" Value="public DateTime TimeOfLastUpdateCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfLastUpdateCheck" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfLastUpdateCheck As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfLastUpdateCheck { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeOfLastUpdateCheck : DateTime" Usage="System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] がアプリケーションの更新プログラムを最後にチェックした日時と時刻を取得します。</summary>
        <value>最終更新チェックの <see cref="T:System.DateTime" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションは、サブスクリプションの更新用に構成できます。 このシナリオでは、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] 配置マニフェストで定義されている間隔でアプリケーションの配置場所を自動的にポーリングし、利用可能な更新プログラムがあるかどうかを判断します。 <xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> は、サブスクリプションによって開始されたか、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>、<xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>、<xref:System.Deployment.Application.ApplicationDeployment.Update%2A>、または <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> メソッドを使用して明示的にチェックされたかに関係なく、最後の更新チェックの時刻を返します。

 アプリケーションのインストール後に更新プログラムの確認が実行されていない場合、<xref:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck%2A> によってインストール時間が返されます。



## Examples
 次のコード例では、過去3日間に [!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションの使用可能な更新プログラムがチェックされているかどうかを確認します。

 [!code-cpp[ClickOnceAPI#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#3)]
 [!code-csharp[ClickOnceAPI#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#3)]
 [!code-vb[ClickOnceAPI#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#3)]

 ]]></format>
        </remarks>
        <related type="Article" href="/visualstudio/deployment/choosing-a-clickonce-update-strategy">ClickOnce の更新方法の選択</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public bool Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; bool" Usage="applicationDeployment.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このアプリケーションの最新バージョンの同期ダウンロードとインストールを開始します。</summary>
        <returns>アプリケーションが更新されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>によって指定された場所にアプリケーションの新しいバージョンを発行し、アプリケーションの配置マニフェストのバージョン番号が、ユーザーのコンピューターに現在インストールされているアプリケーションのバージョン番号よりも大きい場合、アプリケーションは更新されたと見なされます。

 更新プログラムがクライアントコンピューターにダウンロードされ、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] キャッシュにインストールされるまで、<xref:System.Deployment.Application.ApplicationDeployment.Update%2A> の呼び出しはブロックされます。この間、アプリケーションはユーザーに応答しません。 アプリケーションの応答性を維持したり、ダウンロード中に進行状況レポートを表示したりする場合は、代わりに <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> メソッドを使用します。

 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> は、アプリケーションマニフェストで "optional" とマークされていないすべてのファイルをダウンロードします。 必要に応じてオプションファイルをダウンロードするには、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> または <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 方法を使用します。

 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> メソッドを呼び出すと、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] が既にアプリケーションを更新している可能性があります。この場合、このメソッドを呼び出すと <xref:System.InvalidOperationException>がスローされます。

 配置内の1つ以上のファイルを更新しても、アプリケーションマニフェストを更新していない場合は、<xref:System.Deployment.Application.InvalidDeploymentException>が表示されます。 ほとんどの場合、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] アプリケーションを再デプロイすると、この問題が解決されます。 また、配置マニフェストまたはアプリケーションマニフェストの公開キーの署名が無効であるか、見つからない場合にも、この例外が発生します。

 更新プログラムによって、以前のバージョンのアプリケーションよりも高いレベルの信頼がローカルコンピューターに要求される場合があります。 アプリケーションが信頼されたアプリケーションの配置を使用する場合、共通言語ランタイム (CLR) 信頼マネージャーは、配置マニフェストを調べて、有効な信頼ライセンスが含まれているかどうかを判断します。 配置マニフェストに有効な信頼ライセンスが含まれていない場合、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] によってインストールが停止され、<xref:System.Deployment.Application.TrustNotGrantedException>がスローされます。 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A> メソッドは、アプリケーションの実行権限を付与するかどうかをユーザーに確認するプロンプトを表示しません。



## Examples
 次のコード例では、アプリケーションの更新プログラムを確認します。更新プログラムが利用可能な場合は、同期的にインストールされます。

 [!code-cpp[ClickOnceAPI#6](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#6)]
 [!code-csharp[ClickOnceAPI#6](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#6)]
 [!code-vb[ClickOnceAPI#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">ローカル コンピューターは、アプリケーションが実行するために要求したアクセス許可レベルを付与しませんでした。</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] の配置が破損しています。 問題の診断および解決方法に関するヒントについては、「[ClickOnce 配置のトラブルシューティング](/visualstudio/deployment/troubleshooting-clickonce-deployments)」を参照してください。</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">新しい配置をネットワーク上の場所からダウンロードできませんでした。</exception>
        <exception cref="T:System.InvalidOperationException">アプリケーションは現在更新されています。</exception>
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />
        <altmember cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />
        <related type="Article" href="/visualstudio/deployment/choosing-a-clickonce-update-strategy">ClickOnce の更新方法の選択</related>
        <related type="Article" href="/visualstudio/deployment/securing-clickonce-applications">ClickOnce 配置とセキュリティ</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsync">
      <MemberSignature Language="C#" Value="public void UpdateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsync();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsync : unit -&gt; unit" Usage="applicationDeployment.UpdateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このアプリケーションの最新バージョンの非同期ダウンロードとインストールを開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>によって指定された場所にアプリケーションの新しいバージョンを発行し、アプリケーションの配置マニフェストのバージョン番号が、ユーザーのコンピューターに現在インストールされているアプリケーションのバージョン番号よりも大きい場合、アプリケーションは更新されたと見なされます。

 更新プログラムのダウンロード中に、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] によってメインアプリケーションスレッドで <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> イベントハンドラーが発生し、ダウンロードの状態が通知されます。 非同期更新が完了するか例外が発生すると、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] はメインアプリケーションスレッドで <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> イベントを発生させます。 このイベントに指定された <xref:System.ComponentModel.AsyncCompletedEventArgs> を調べて、更新が成功したかどうかを確認します。

 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> が例外をスローした場合、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] は <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> を呼び出し、<xref:System.ComponentModel.AsyncCompletedEventArgs> の <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティをスローされた例外に設定します。

 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> は、アプリケーションマニフェストで "optional" とマークされていない展開内のすべてのファイルをダウンロードします。 必要に応じてオプションファイルをダウンロードするには、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> または <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> 方法を使用します。

 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> メソッドを呼び出すと、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] が既にアプリケーションを更新している可能性があります。この場合、このメソッドを呼び出すと <xref:System.InvalidOperationException>がスローされます。

 配置内の1つ以上のファイルを更新しても、アプリケーションマニフェストを更新していない場合は、<xref:System.Deployment.Application.InvalidDeploymentException>が表示されます。 ほとんどの場合、アプリケーションマニフェストを再構築すると、この問題が解決されます。 また、配置マニフェストまたはアプリケーションマニフェストの公開キーの署名が無効であるか、見つからない場合にも、この例外が発生します。

 更新プログラムによって、以前のバージョンのアプリケーションよりも高いレベルの信頼がローカルコンピューターに要求される場合があります。 アプリケーションが信頼されたアプリケーションの配置を使用する場合、共通言語ランタイム (CLR) 信頼マネージャーは、配置マニフェストを調べて、有効な信頼ライセンスが含まれているかどうかを判断します。 配置マニフェストに有効な信頼ライセンスが含まれていない場合、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] によってインストールが停止され、<xref:System.Deployment.Application.TrustNotGrantedException>がスローされます。 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> では、アプリケーションに実行のアクセス許可を付与するかどうかを確認するプロンプトが表示されません。



## Examples
 次のコード例では、アプリケーションの読み込み時に新しい更新プログラムを利用できるかどうかを判断します。必要な更新プログラムが利用可能な場合は、更新プログラムが非同期にインストールされます。 この例では、<xref:System.Windows.Forms.StatusStrip> コントロールを含む Windows フォームアプリケーションを配置し、このコントロールに `downloadStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> コントロールが含まれている必要があります。

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Deployment.Application.TrustNotGrantedException">ローカル コンピューターは、このアプリケーションが実行するために要求したアクセス許可レベルを付与しませんでした。</exception>
        <exception cref="T:System.Deployment.Application.InvalidDeploymentException">[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] の配置が破損しています。 問題の診断および解決方法に関するヒントについては、「[ClickOnce 配置のトラブルシューティング](/visualstudio/deployment/troubleshooting-clickonce-deployments)」を参照してください。</exception>
        <exception cref="T:System.Deployment.Application.DeploymentDownloadException">新しい配置をネットワーク上の場所からダウンロードできませんでした。</exception>
        <altmember cref="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
        <related type="Article" href="/visualstudio/deployment/choosing-a-clickonce-update-strategy">ClickOnce の更新方法の選択</related>
        <related type="Article" href="/visualstudio/deployment/securing-clickonce-applications">ClickOnce 配置とセキュリティ</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateAsyncCancel">
      <MemberSignature Language="C#" Value="public void UpdateAsyncCancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateAsyncCancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateAsyncCancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateAsyncCancel();" />
      <MemberSignature Language="F#" Value="member this.UpdateAsyncCancel : unit -&gt; unit" Usage="applicationDeployment.UpdateAsyncCancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> によって開始された非同期更新をキャンセルします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A> は <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>の呼び出しによって開始された更新のみをキャンセルします。サブスクリプションの一部として開始された更新をキャンセルすることはありません。

 ]]></format>
        </remarks>
        <related type="Article" href="/visualstudio/deployment/choosing-a-clickonce-update-strategy">ClickOnce の更新方法の選択</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCompleted">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCompleted As AsyncCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::AsyncCompletedEventHandler ^ UpdateCompleted;" />
      <MemberSignature Language="F#" Value="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " Usage="member this.UpdateCompleted : System.ComponentModel.AsyncCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> の呼び出しの結果として、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] がアプリケーションのアップグレードを完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 メインアプリケーションスレッドで <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> イベントが呼び出されます。 例外をトリガーすることなく、アプリケーションの Windows フォームコントロールをこのコールバック内で直接呼び出すことができます。

 このコールバックに提供された <xref:System.ComponentModel.AsyncCompletedEventArgs> の <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティを確認します。 このプロパティが `null`の場合、インストールは正常に完了しました。`null`ない場合、インストールは成功しませんでした。このインストールエラーの詳細については、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> プロパティを参照してください。 更新プログラムがダウンロードされたら、<xref:System.Windows.Forms.Application> で <xref:System.Windows.Forms.Application.Restart%2A> メソッドを呼び出して、新しいバージョンのアプリケーションを使用する必要があります。

 <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>の呼び出しによって更新プログラムのインストールが取り消された場合は、<xref:System.ComponentModel.AsyncCompletedEventArgs> クラスの <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> プロパティが `true`されます。

 このイベントハンドラーを使用するには、アプリケーションで <xref:System.Deployment.Application> と <xref:System.ComponentModel> の両方の名前空間をインポートする必要があります。



## Examples
 次のコード例では、アプリケーションの読み込み時に新しい更新プログラムが利用可能かどうかを判断します。必要な更新プログラムが利用可能な場合は、更新プログラムが非同期にインストールされます。 この例では、<xref:System.Windows.Forms.StatusStrip> コントロールを含む Windows フォームアプリケーションを配置し、このコントロールに `downloadStatus`という名前の <xref:System.Windows.Forms.ToolStripStatusLabel> コントロールが含まれている必要があります。

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedApplicationFullName">
      <MemberSignature Language="C#" Value="public string UpdatedApplicationFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdatedApplicationFullName" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedApplicationFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdatedApplicationFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedApplicationFullName : string" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの更新後に、アプリケーションの完全名を取得します。</summary>
        <value>アプリケーションの完全名を格納している <see cref="T:System.String" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedVersion">
      <MemberSignature Language="C#" Value="public Version UpdatedVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version UpdatedVersion" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdatedVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ UpdatedVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdatedVersion : Version" Usage="System.Deployment.Application.ApplicationDeployment.UpdatedVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>最近ダウンロードされた更新プログラムのバージョンを取得します。</summary>
        <value>更新プログラムのバージョンを示す <see cref="T:System.Version" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> は <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> とは異なります。新しい更新プログラムがインストールされていても、<xref:System.Windows.Forms.Application>で <xref:System.Windows.Forms.Application.Restart%2A> をまだ呼び出していない場合です。 アプリケーションの配置マニフェストが自動更新を実行するように構成されている場合は、これら2つの値を比較して、アプリケーションを再起動する必要があるかどうかを判断できます。

 アプリケーションが更新されていない場合、<xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> は <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>と同じ値を返します。



## Examples
 次のコード例では、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] によってアプリケーションが更新されたかどうかを判断するメソッドを定義します。

 [!code-cpp[ClickOnceAPI#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#4)]
 [!code-csharp[ClickOnceAPI#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#4)]
 [!code-vb[ClickOnceAPI#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#4)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLocation">
      <MemberSignature Language="C#" Value="public Uri UpdateLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UpdateLocation" />
      <MemberSignature Language="DocId" Value="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UpdateLocation { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateLocation : Uri" Usage="System.Deployment.Application.ApplicationDeployment.UpdateLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このアプリケーションの更新元である Web サイトまたはファイル共有を取得します。</summary>
        <value>HTTP、HTTPS、またはファイルの URL として表される更新プログラムのパス。または Windows ネットワーク ファイル パス (UNC) として表される更新のパス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 アプリケーションの配置が更新リダイレクトを使用するように構成されている場合、最初にアプリケーションをダウンロードするときに使用した Web サイトとは <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> 異なる場合があります。

 この値は、アプリケーションの配置マニフェストでのみ変更できます。

 ]]></format>
        </remarks>
        <related type="Article" href="/visualstudio/deployment/how-to-specify-an-alternate-location-for-deployment-updates">方法 : 配置の更新用に別の場所を指定する</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateProgressChanged">
      <MemberSignature Language="C#" Value="public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateProgressChanged As DeploymentProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Deployment::Application::DeploymentProgressChangedEventHandler ^ UpdateProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " Usage="member this.UpdateProgressChanged : System.Deployment.Application.DeploymentProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Deployment</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Deployment.Application.DeploymentProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> メソッドの呼び出しによって開始された更新操作について、[!INCLUDE[ndptecclick](~/includes/ndptecclick-md.md)] に新しいステータス情報がある場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 メインアプリケーションスレッドで <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> イベントが呼び出されます。 例外をトリガーすることなく、アプリケーションの Windows フォームコントロールをこのコールバック内で直接呼び出すことができます。



## Examples
 次のコード例では、アプリケーションの読み込み時に新しい更新プログラムが利用可能かどうかを判断します。必要な更新プログラムが利用可能な場合は、更新プログラムが非同期にインストールされます。

 [!code-cpp[ClickOnceAPI#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClickOnceAPI/cpp/form1.cpp#1)]
 [!code-csharp[ClickOnceAPI#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClickOnceAPI/CS/Form1.cs#1)]
 [!code-vb[ClickOnceAPI#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClickOnceAPI/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
