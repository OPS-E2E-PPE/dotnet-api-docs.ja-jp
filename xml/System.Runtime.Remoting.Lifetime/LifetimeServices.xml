<Type Name="LifetimeServices" FullName="System.Runtime.Remoting.Lifetime.LifetimeServices">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7deac05b2ef7b17c5f5683daef47a402cbb28184" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83953340" /></Metadata><TypeSignature Language="C#" Value="public sealed class LifetimeServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit LifetimeServices extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Lifetime.LifetimeServices" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LifetimeServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class LifetimeServices sealed" />
  <TypeSignature Language="F#" Value="type LifetimeServices = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LifetimeServices extends System.Object" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fe782-101">.NET リモート処理有効期間サービスを制御します。</span><span class="sxs-lookup"><span data-stu-id="fe782-101">Controls the.NET remoting lifetime services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe782-102">分散ガベージコレクションは、サーバーアプリケーションの有効期間を制御し、有効期間が切れたときにそれらを削除する役割を担います。</span><span class="sxs-lookup"><span data-stu-id="fe782-102">Distributed garbage collection is responsible for controlling the lifetimes of server applications, and for deleting them when their lifetimes have expired.</span></span> <span data-ttu-id="fe782-103">従来、分散ガベージコレクションでは、制御のために参照カウントと ping が使用されていました。</span><span class="sxs-lookup"><span data-stu-id="fe782-103">Traditionally, distributed garbage collection uses reference counts and pinging for control.</span></span> <span data-ttu-id="fe782-104">これは、オブジェクトごとに数千のクライアントがある場合に適していますが、各オブジェクトに数千のクライアントがある場合はうまく機能しません。</span><span class="sxs-lookup"><span data-stu-id="fe782-104">This works well when there are a few clients per object, but does not work well when there are thousands of clients per each object.</span></span> <span data-ttu-id="fe782-105">有効期間サービスは、従来の分散ガベージコレクターの機能を引き受けることができ、クライアントの数が増えると適切にスケールされます。</span><span class="sxs-lookup"><span data-stu-id="fe782-105">The lifetime service can assume the function of a traditional distributed garbage collector, and scales well when the number of clients increases.</span></span>  
  
 <span data-ttu-id="fe782-106">有効期間サービスは、リモートでアクティブ化される各オブジェクトにリースを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="fe782-106">The lifetime service associates a lease with each remotely activated object.</span></span> <span data-ttu-id="fe782-107">リースが期限切れになると、オブジェクトは削除されます。</span><span class="sxs-lookup"><span data-stu-id="fe782-107">When the lease expires, the object is removed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fe782-108">このクラスは、リンク確認要求を行います。</span><span class="sxs-lookup"><span data-stu-id="fe782-108">This class makes a link demand.</span></span> <span data-ttu-id="fe782-109">SecurityException は、直前の呼び出し元にインフラストラクチャアクセス許可がない場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="fe782-109">A SecurityException is thrown if the immediate caller does not have infrastructure permission.</span></span> <span data-ttu-id="fe782-110">詳細については、「[リンク確認要求](/dotnet/framework/misc/link-demands)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fe782-110">See [Link Demands](/dotnet/framework/misc/link-demands) for more information.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Runtime.Remoting.Lifetime#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Lifetime/CPP/server.cpp#2)]
 [!code-csharp[System.Runtime.Remoting.Lifetime#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Lifetime/CS/server.cs#2)]
 [!code-vb[System.Runtime.Remoting.Lifetime#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Runtime.Remoting.Lifetime/VB/server.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LifetimeServices ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Lifetime.LifetimeServices.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LifetimeServices();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Call the static methods directly on this type instead", true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Do not create instances of the LifetimeServices class.  Call the static methods directly on this type instead", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fe782-111"><see cref="T:System.Runtime.Remoting.Lifetime.LifetimeServices" /> のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="fe782-111">Creates an instance of <see cref="T:System.Runtime.Remoting.Lifetime.LifetimeServices" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaseManagerPollTime">
      <MemberSignature Language="C#" Value="public static TimeSpan LeaseManagerPollTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan LeaseManagerPollTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LeaseManagerPollTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan LeaseManagerPollTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.LeaseManagerPollTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe782-112">有効期限が切れたリースをクリーンアップするリース マネージャーの、各アクティベーション間の時間間隔を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fe782-112">Gets or sets the time interval between each activation of the lease manager to clean up expired leases.</span></span></summary>
        <value><span data-ttu-id="fe782-113">リースの期限が切れたことを確認した後で、リース マネージャーがスリープする既定の時間。</span><span class="sxs-lookup"><span data-stu-id="fe782-113">The default amount of time the lease manager sleeps after checking for expired leases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe782-114">現在のプロパティは、リースマネージャーが有効になり、期限切れのリースをクリーンアップする頻度を定義します。</span><span class="sxs-lookup"><span data-stu-id="fe782-114">The current property defines the frequency at which the lease manager becomes active to clean up expired leases.</span></span> <span data-ttu-id="fe782-115">たとえば、<xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A> が100秒に設定されている場合、クリーンアップと更新のリースリストが100秒ごとに検査されます。</span><span class="sxs-lookup"><span data-stu-id="fe782-115">For example, if <xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A> is set to 100 seconds, the lease list is inspected for cleanups and renewals every 100 seconds.</span></span>  
  
 <span data-ttu-id="fe782-116"><xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A> プロパティの既定値は10秒です。</span><span class="sxs-lookup"><span data-stu-id="fe782-116">The default value of the <xref:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseManagerPollTime%2A> property is 10 seconds.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fe782-117">コールスタックの上位にある 1 つ以上の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fe782-117">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span> <span data-ttu-id="fe782-118">この例外はプロパティの値を設定したときにだけスローされます。</span><span class="sxs-lookup"><span data-stu-id="fe782-118">This exception is thrown only when setting the property value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LeaseTime">
      <MemberSignature Language="C#" Value="public static TimeSpan LeaseTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan LeaseTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LeaseTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan LeaseTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.LeaseTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.LifetimeServices.LeaseTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe782-119"><see cref="T:System.AppDomain" /> の初期リース期間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fe782-119">Gets or sets the initial lease time span for an <see cref="T:System.AppDomain" />.</span></span></summary>
        <value><span data-ttu-id="fe782-120"><see cref="T:System.TimeSpan" /> 内にリースを保持できるオブジェクトの、リースの初期 <see cref="T:System.AppDomain" />。</span><span class="sxs-lookup"><span data-stu-id="fe782-120">The initial lease <see cref="T:System.TimeSpan" /> for objects that can have leases in the <see cref="T:System.AppDomain" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe782-121">既定のリース期間は5分です。</span><span class="sxs-lookup"><span data-stu-id="fe782-121">The default lease time span is 5 minutes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fe782-122">コールスタックの上位にある 1 つ以上の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fe782-122">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span> <span data-ttu-id="fe782-123">この例外はプロパティの値を設定したときにだけスローされます。</span><span class="sxs-lookup"><span data-stu-id="fe782-123">This exception is thrown only when setting the property value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RenewOnCallTime">
      <MemberSignature Language="C#" Value="public static TimeSpan RenewOnCallTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan RenewOnCallTime" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property RenewOnCallTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan RenewOnCallTime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.RenewOnCallTime : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.LifetimeServices.RenewOnCallTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe782-124">サーバー オブジェクトで呼び出しがあるたびに、リースを延長する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fe782-124">Gets or sets the amount of time by which the lease is extended every time a call comes in on the server object.</span></span></summary>
        <value><span data-ttu-id="fe782-125">各呼び出しの後に、現在の <see cref="T:System.TimeSpan" /> 内の有効期間リースを延長する時間間隔を示す <see cref="T:System.AppDomain" />。</span><span class="sxs-lookup"><span data-stu-id="fe782-125">The <see cref="T:System.TimeSpan" /> by which a lifetime lease in the current <see cref="T:System.AppDomain" /> is extended after each call.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe782-126">有効期間リースを延長する既定の更新時間は2分です。</span><span class="sxs-lookup"><span data-stu-id="fe782-126">The default renewal time by which a lifetime lease is extended is 2 minutes.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ILease_ILease#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ILease_ILease/CPP/ilease_client.cpp#3)]
 [!code-csharp[ILease_ILease#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ILease_ILease/CS/ilease_client.cs#3)]
 [!code-vb[ILease_ILease#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ILease_ILease/VB/ilease_client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fe782-127">コールスタックの上位にある 1 つ以上の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fe782-127">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span> <span data-ttu-id="fe782-128">この例外はプロパティの値を設定したときにだけスローされます。</span><span class="sxs-lookup"><span data-stu-id="fe782-128">This exception is thrown only when setting the property value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SponsorshipTimeout">
      <MemberSignature Language="C#" Value="public static TimeSpan SponsorshipTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan SponsorshipTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SponsorshipTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan SponsorshipTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.SponsorshipTimeout : TimeSpan with get, set" Usage="System.Runtime.Remoting.Lifetime.LifetimeServices.SponsorshipTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fe782-129">リース マネージャーが、スポンサがリースの更新時間を返すまで待機する時間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fe782-129">Gets or sets the amount of time the lease manager waits for a sponsor to return with a lease renewal time.</span></span></summary>
        <value><span data-ttu-id="fe782-130">初期スポンサシップ タイムアウト。</span><span class="sxs-lookup"><span data-stu-id="fe782-130">The initial sponsorship time-out.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe782-131">スポンサの呼び出しがタイムアウトになるまでの既定の時間は2分です。</span><span class="sxs-lookup"><span data-stu-id="fe782-131">The default time until a call to a sponsor is timed out is 2 minutes.</span></span>  
  
   
  
## Examples  
 [!code-cpp[ILease_ILease#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ILease_ILease/CPP/ilease_client.cpp#3)]
 [!code-csharp[ILease_ILease#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ILease_ILease/CS/ilease_client.cs#3)]
 [!code-vb[ILease_ILease#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ILease_ILease/VB/ilease_client.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="fe782-132">コールスタックの上位にある 1 つ以上の呼び出し元に、リモート処理の型とチャネルを構成するためのアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="fe782-132">At least one of the callers higher in the callstack does not have permission to configure remoting types and channels.</span></span> <span data-ttu-id="fe782-133">この例外はプロパティの値を設定したときにだけスローされます。</span><span class="sxs-lookup"><span data-stu-id="fe782-133">This exception is thrown only when setting the property value.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
