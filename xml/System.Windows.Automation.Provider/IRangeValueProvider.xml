<Type Name="IRangeValueProvider" FullName="System.Windows.Automation.Provider.IRangeValueProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1365a8b0b925f17dab924b287c6ca71eab475bc" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82288541" /></Metadata><TypeSignature Language="C#" Value="public interface IRangeValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRangeValueProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRangeValueProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRangeValueProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRangeValueProvider" />
  <TypeSignature Language="F#" Value="type IRangeValueProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("36dc7aef-33e6-4691-afe1-2be7274b3d33")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1adce-101">ある範囲内の値に設定できるコントロールへの、UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。</span><span class="sxs-lookup"><span data-stu-id="1adce-101">Exposes methods and properties to support UI Automation client access to controls that can be set to a value within a range.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1adce-102"><xref:System.Windows.Automation.RangeValuePattern> コントロールパターンをサポートする必要がある UI オートメーションプロバイダーに実装されます。</span><span class="sxs-lookup"><span data-stu-id="1adce-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.RangeValuePattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.RangeValuePattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="1adce-103">UI オートメーション コントロール パターンの概要</span><span class="sxs-lookup"><span data-stu-id="1adce-103">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="~/docs/framework/ui-automation/server-side-ui-automation-provider-implementation.md"><span data-ttu-id="1adce-104">サーバー側 UI オートメーションプロバイダーの実装</span><span class="sxs-lookup"><span data-stu-id="1adce-104">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="~/docs/framework/ui-automation/client-side-ui-automation-provider-implementation.md"><span data-ttu-id="1adce-105">クライアント側 UI オートメーションプロバイダーの実装</span><span class="sxs-lookup"><span data-stu-id="1adce-105">Client-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="~/docs/framework/ui-automation/support-control-patterns-in-a-ui-automation-provider.md"><span data-ttu-id="1adce-106">UI オートメーション プロバイダーでのコントロール パターンのサポート</span><span class="sxs-lookup"><span data-stu-id="1adce-106">Support Control Patterns in a UI Automation Provider</span></span></related>
    <related type="Article" href="~/docs/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern.md"><span data-ttu-id="1adce-107">UI オートメーション RangeValue コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="1adce-107">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Automation.Provider.IRangeValueProvider.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1adce-108">コントロールの値が読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1adce-108">Gets a value that specifies whether the value of a control is read-only.</span></span></summary>
        <value><span data-ttu-id="1adce-109">値が読み取り専用の場合は <see langword="true" />。変更可能な場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1adce-109"><see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1adce-110">次の例は、読み取り専用ではないコントロールに対してこのメソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1adce-110">The following example shows an implementation of this method for a control that is not read-only.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#IsReadOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#isreadonly)]
 [!code-vb[UIAIRangeValueProvider_snip#IsReadOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#isreadonly)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern.md"><span data-ttu-id="1adce-111">UI オートメーション RangeValue コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="1adce-111">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LargeChange">
      <MemberSignature Language="C#" Value="public double LargeChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LargeChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LargeChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LargeChange { double get(); };" />
      <MemberSignature Language="F#" Value="member this.LargeChange : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1adce-112">PageDown キーを使用するなど、大きな変更を行ったときに <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> プロパティに対して加算または減算する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1adce-112">Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> property when a large change is made, such as with the PAGE DOWN key.</span></span></summary>
        <value><span data-ttu-id="1adce-113">コントロールでサポートされている大きい変更値。コントロールが <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />をサポートしていない場合は null (Visual Basic では<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="1adce-113">The large-change value supported by the control or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1adce-114">次の例は、5.0 の大きな変更値を持つコントロールに対して、このメソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1adce-114">The following example shows an implementation of this method for a control that has a large change value of 5.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#LargeChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#largechange)]
 [!code-vb[UIAIRangeValueProvider_snip#LargeChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#largechange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />
        <related type="Article" href="~/docs/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern.md"><span data-ttu-id="1adce-115">UI オートメーション RangeValue コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="1adce-115">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Maximum">
      <MemberSignature Language="C#" Value="public double Maximum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Maximum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Maximum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Maximum { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Maximum : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1adce-116">コントロールでサポートされる範囲の最大値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1adce-116">Gets the maximum range value supported by the control.</span></span></summary>
        <value><span data-ttu-id="1adce-117">コントロールでサポートされている最大値またはコントロールが <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />をサポートしていない場合は null (Visual Basic で<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="1adce-117">The maximum value supported by the control or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1adce-118">最大値が255.0 のコントロールに対して、このメソッドを実装する例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="1adce-118">The following example shows an implementation of this method for a control that has a maximum value of 255.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#Maximum](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#maximum)]
 [!code-vb[UIAIRangeValueProvider_snip#Maximum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#maximum)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />
        <related type="Article" href="~/docs/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern.md"><span data-ttu-id="1adce-119">UI オートメーション RangeValue コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="1adce-119">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Minimum">
      <MemberSignature Language="C#" Value="public double Minimum { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Minimum" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minimum As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Minimum { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Minimum : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1adce-120">コントロールでサポートされる範囲の最小値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1adce-120">Gets the minimum range value supported by the control.</span></span></summary>
        <value><span data-ttu-id="1adce-121">コントロールでサポートされている最小値またはコントロールが <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />をサポートしていない場合は null (Visual Basic で<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="1adce-121">The minimum value supported by the control or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Minimum" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1adce-122">次の例は、最小値が0.0 のコントロールに対してこのメソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1adce-122">The following example shows an implementation of this method for a control that has a minimum value of 0.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#Minimum](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#minimum)]
 [!code-vb[UIAIRangeValueProvider_snip#Minimum](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#minimum)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Maximum" />
        <related type="Article" href="~/docs/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern.md"><span data-ttu-id="1adce-123">UI オートメーション RangeValue コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="1adce-123">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(double value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : double -&gt; unit" Usage="iRangeValueProvider.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1adce-124">設定する値。</span><span class="sxs-lookup"><span data-stu-id="1adce-124">The value to set.</span></span></param>
        <summary><span data-ttu-id="1adce-125">コントロールの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="1adce-125">Sets the value of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1adce-126">実際に設定される値は、コントロールの実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="1adce-126">The actual value set depends on the control implementation.</span></span> <span data-ttu-id="1adce-127">コントロールは、要求された `value` を上下に丸めることがあります。</span><span class="sxs-lookup"><span data-stu-id="1adce-127">The control may round the requested `value` up or down.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1adce-128">次の例は、カスタムコントロールに対してこのメソッドを1つ実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="1adce-128">The following example shows one possible implementation of this method for a custom control.</span></span> <span data-ttu-id="1adce-129">カスタムコントロールは、その基本色のアルファ値を使用して範囲値を表示します。</span><span class="sxs-lookup"><span data-stu-id="1adce-129">The custom control displays its range value through the alpha value of its base color.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#SetValue](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#setvalue)]
 [!code-vb[UIAIRangeValueProvider_snip#SetValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#setvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1adce-130"><paramref name="value" /> がコントロールの最小値よりも小さいか、または最大値よりも大きい場合。</span><span class="sxs-lookup"><span data-stu-id="1adce-130">When <paramref name="value" /> is less than the minimum or greater than the maximum value of the control.</span></span></exception>
        <related type="Article" href="~/docs/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern.md"><span data-ttu-id="1adce-131">UI オートメーション RangeValue コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="1adce-131">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SmallChange">
      <MemberSignature Language="C#" Value="public double SmallChange { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SmallChange" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SmallChange As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SmallChange { double get(); };" />
      <MemberSignature Language="F#" Value="member this.SmallChange : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1adce-132">方向キーを使用するなど、小規模な変更を行ったときに <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> プロパティに対して加算または減算する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1adce-132">Gets the value that is added to or subtracted from the <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" /> property when a small change is made, such as with an arrow key.</span></span></summary>
        <value><span data-ttu-id="1adce-133">コントロールが <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />をサポートしていない場合は、小さな変更値または null (Visual Basic では<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="1adce-133">The small-change value or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.SmallChange" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1adce-134">次の例では、1.0 の値が小さいコントロールに対してこのメソッドを実装しています。</span><span class="sxs-lookup"><span data-stu-id="1adce-134">The following example shows an implementation of this method for a control that has a small change value of 1.0.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#SmallChange](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#smallchange)]
 [!code-vb[UIAIRangeValueProvider_snip#SmallChange](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#smallchange)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Automation.Provider.IRangeValueProvider.LargeChange" />
        <related type="Article" href="~/docs/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern.md"><span data-ttu-id="1adce-135">UI オートメーション RangeValue コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="1adce-135">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public double Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Value { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : double" Usage="System.Windows.Automation.Provider.IRangeValueProvider.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1adce-136">コントロールの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1adce-136">Gets the value of the control.</span></span></summary>
        <value><span data-ttu-id="1adce-137">コントロールが <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />をサポートしていない場合は、コントロールの値または null (Visual Basic では<see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="1adce-137">The value of the control or null (<see langword="Nothing" /> in Visual Basic) if the control does not support <see cref="P:System.Windows.Automation.Provider.IRangeValueProvider.Value" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1adce-138">次の例は、カスタムコントロールのこのメソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="1adce-138">The following example shows an implementation of this method for a custom control.</span></span> <span data-ttu-id="1adce-139">このサンプルでは、カスタムコントロールは基本色のアルファ設定を使用して値を表示します。</span><span class="sxs-lookup"><span data-stu-id="1adce-139">For the purposes of this sample, the custom control displays the value through the alpha setting of its base color.</span></span>  
  
 [!code-csharp[UIAIRangeValueProvider_snip#Value](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/CSharp/RangeValueFragment.cs#value)]
 [!code-vb[UIAIRangeValueProvider_snip#Value](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIRangeValueProvider_snip/visualbasic/rangevaluefragment.vb#value)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Automation.Provider.IRangeValueProvider.SetValue(System.Double)" />
        <related type="Article" href="~/docs/framework/ui-automation/implementing-the-ui-automation-rangevalue-control-pattern.md"><span data-ttu-id="1adce-140">UI オートメーション RangeValue コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="1adce-140">Implementing the UI Automation RangeValue Control Pattern</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
