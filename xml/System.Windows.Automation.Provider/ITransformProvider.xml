<Type Name="ITransformProvider" FullName="System.Windows.Automation.Provider.ITransformProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf829ebb1c442d0537a484da8fc2c2d56d87a536" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82299890" /></Metadata><TypeSignature Language="C#" Value="public interface ITransformProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITransformProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITransformProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITransformProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITransformProvider" />
  <TypeSignature Language="F#" Value="type ITransformProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("6829ddc4-4f91-4ffa-b86f-bd3e2987cb4c")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0d390-101">2 次元空間内で移動、サイズ変更、または回転できるコントロールへの UI オートメーション クライアントのアクセスをサポートするメソッドとプロパティを公開します。</span><span class="sxs-lookup"><span data-stu-id="0d390-101">Exposes methods and properties to support UI Automation client access to controls that can be moved, resized, or rotated within a two-dimensional space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d390-102"><xref:System.Windows.Automation.TransformPattern> コントロールパターンをサポートする必要がある UI オートメーションプロバイダーに実装されます。</span><span class="sxs-lookup"><span data-stu-id="0d390-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TransformPattern> control pattern.</span></span>  
  
 <span data-ttu-id="0d390-103">このコントロール パターンのサポートは、デスクトップ上のオブジェクトに制限されません。</span><span class="sxs-lookup"><span data-stu-id="0d390-103">Support for this control pattern is not limited to objects on the desktop.</span></span> <span data-ttu-id="0d390-104">このコントロールパターンは、子がコンテナーの境界内で自由に移動、サイズ変更、または回転できるようにするために、コンテナーオブジェクトの子によっても実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0d390-104">This control pattern must also be implemented by the children of a container object as long as the children can be moved, resized, or rotated freely within the boundaries of the container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.TransformPattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="0d390-105">UI オートメーション コントロール パターンの概要</span><span class="sxs-lookup"><span data-stu-id="0d390-105">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="~/docs/framework/ui-automation/server-side-ui-automation-provider-implementation.md"><span data-ttu-id="0d390-106">サーバー側 UI オートメーションプロバイダーの実装</span><span class="sxs-lookup"><span data-stu-id="0d390-106">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="~/docs/framework/ui-automation/client-side-ui-automation-provider-implementation.md"><span data-ttu-id="0d390-107">クライアント側 UI オートメーションプロバイダーの実装</span><span class="sxs-lookup"><span data-stu-id="0d390-107">Client-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="~/docs/framework/ui-automation/support-control-patterns-in-a-ui-automation-provider.md"><span data-ttu-id="0d390-108">UI オートメーション プロバイダーでのコントロール パターンのサポート</span><span class="sxs-lookup"><span data-stu-id="0d390-108">Support Control Patterns in a UI Automation Provider</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="0d390-109">UI オートメーション Transform コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="0d390-109">Implementing the UI Automation Transform Control Pattern</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CanMove">
      <MemberSignature Language="C#" Value="public bool CanMove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMove : bool" Usage="System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d390-110">コントロールが移動可能かどうかを指定する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0d390-110">Gets a value that specifies whether the control can be moved.</span></span></summary>
        <value><span data-ttu-id="0d390-111">要素を移動できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d390-111"><see langword="true" /> if the element can be moved; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d390-112">次の例は、移動可能なコントロールに対してこのメソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0d390-112">The following example shows an implementation of this method for a control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanMove](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canmove)]
 [!code-vb[UIAITransformProvider_snip#CanMove](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canmove)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="0d390-113">UI オートメーション Transform コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="0d390-113">Implementing the UI Automation Transform Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanResize">
      <MemberSignature Language="C#" Value="public bool CanResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanResize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResize : bool" Usage="System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d390-114">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]要素のサイズが変更可能かどうかを指定する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0d390-114">Gets a value that specifies whether the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element can be resized.</span></span></summary>
        <value><span data-ttu-id="0d390-115">要素のサイズを変更できる場合は <see langword="true" />。変更できない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d390-115"><see langword="true" /> if the element can be resized; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d390-116">次の例は、サイズ変更が可能なコントロールに対するこのメソッドの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="0d390-116">The following example shows an implementation of this method for a control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanResize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canresize)]
 [!code-vb[UIAITransformProvider_snip#CanResize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canresize)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="0d390-117">UI オートメーション Transform コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="0d390-117">Implementing the UI Automation Transform Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanRotate">
      <MemberSignature Language="C#" Value="public bool CanRotate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRotate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRotate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRotate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRotate : bool" Usage="System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0d390-118">コントロールが回転可能かどうかを指定する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="0d390-118">Gets a value that specifies whether the control can be rotated.</span></span></summary>
        <value><span data-ttu-id="0d390-119">要素を回転できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0d390-119"><see langword="true" /> if the element can be rotated; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0d390-120">次の例は、回転できないコントロールに対してこのメソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0d390-120">The following example shows an implementation of this method for a control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanRotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canrotate)]
 [!code-vb[UIAITransformProvider_snip#CanRotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canrotate)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="0d390-121">UI オートメーション Transform コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="0d390-121">Implementing the UI Automation Transform Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Move(double x, double y);" />
      <MemberSignature Language="F#" Value="abstract member Move : double * double -&gt; unit" Usage="iTransformProvider.Move (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="0d390-122">コントロールの左側の絶対画面座標。</span><span class="sxs-lookup"><span data-stu-id="0d390-122">Absolute screen coordinates of the left side of the control.</span></span></param>
        <param name="y"><span data-ttu-id="0d390-123">コントロールの上部の絶対画面座標。</span><span class="sxs-lookup"><span data-stu-id="0d390-123">Absolute screen coordinates of the top of the control.</span></span></param>
        <summary><span data-ttu-id="0d390-124">コントロールを移動します。</span><span class="sxs-lookup"><span data-stu-id="0d390-124">Moves the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d390-125">オブジェクトを移動、サイズ変更、または回転することはできません。その結果、画面の位置がコンテナーの座標の外側になり、キーボードやマウスでアクセスできなくなります。</span><span class="sxs-lookup"><span data-stu-id="0d390-125">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="0d390-126">たとえば、最上位レベルのウィンドウが画面外に移動した場合や、子オブジェクトがコンテナーのビューポートの境界の外側に移動された場合などです。</span><span class="sxs-lookup"><span data-stu-id="0d390-126">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="0d390-127">このような場合、オブジェクトは、最上位または左の座標がコンテナーの境界内でオーバーライドされ、要求された画面座標の近くに配置されます。</span><span class="sxs-lookup"><span data-stu-id="0d390-127">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d390-128">次の例は、移動可能なカスタムコントロールに対して、このメソッドの1つの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="0d390-128">The following example shows one possible implementation of this method for a custom control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Move](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#move)]
 [!code-vb[UIAITransformProvider_snip#Move](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#move)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0d390-129"><see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> プロパティが false の場合。</span><span class="sxs-lookup"><span data-stu-id="0d390-129">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> property is false.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="0d390-130">UI オートメーション Transform コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="0d390-130">Implementing the UI Automation Transform Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public void Resize (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resize(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resize (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resize(double width, double height);" />
      <MemberSignature Language="F#" Value="abstract member Resize : double * double -&gt; unit" Usage="iTransformProvider.Resize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="0d390-131">ウィンドウの新しい幅 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="0d390-131">The new width of the window, in pixels.</span></span></param>
        <param name="height"><span data-ttu-id="0d390-132">ウィンドウの新しい高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="0d390-132">The new height of the window, in pixels.</span></span></param>
        <summary><span data-ttu-id="0d390-133">コントロールのサイズを変更します。</span><span class="sxs-lookup"><span data-stu-id="0d390-133">Resizes the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d390-134">分割ペインをサポートするコントロールで呼び出された場合、このメソッドは、他の隣接するペインのサイズ変更の副作用を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="0d390-134">When called on a control that supports split panes, this method can have the side effect of resizing other contiguous panes.</span></span>  
  
 <span data-ttu-id="0d390-135">オブジェクトを移動、サイズ変更、または回転することはできません。その結果、画面の位置がコンテナーの座標の外側になり、キーボードやマウスでアクセスできなくなります。</span><span class="sxs-lookup"><span data-stu-id="0d390-135">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="0d390-136">たとえば、最上位レベルのウィンドウが画面外に移動した場合や、子オブジェクトがコンテナーのビューポートの境界の外側に移動された場合などです。</span><span class="sxs-lookup"><span data-stu-id="0d390-136">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="0d390-137">このような場合、オブジェクトは、最上位または左の座標がコンテナーの境界内でオーバーライドされ、要求された画面座標の近くに配置されます。</span><span class="sxs-lookup"><span data-stu-id="0d390-137">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d390-138">次の例は、サイズ変更が可能なカスタムコントロールに対して、このメソッドの1つの実装を示しています。</span><span class="sxs-lookup"><span data-stu-id="0d390-138">The following example shows one possible implementation of this method for a custom control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Resize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#resize)]
 [!code-vb[UIAITransformProvider_snip#Resize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#resize)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0d390-139"><see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> プロパティが false の場合。</span><span class="sxs-lookup"><span data-stu-id="0d390-139">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> property is false.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="0d390-140">UI オートメーション Transform コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="0d390-140">Implementing the UI Automation Transform Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double degrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rotate(float64 degrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (degrees As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double degrees);" />
      <MemberSignature Language="F#" Value="abstract member Rotate : double -&gt; unit" Usage="iTransformProvider.Rotate degrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="degrees"><span data-ttu-id="0d390-141">コントロールを回転する角度の数値。</span><span class="sxs-lookup"><span data-stu-id="0d390-141">The number of degrees to rotate the control.</span></span> <span data-ttu-id="0d390-142">正の値は時計回りの回転、負の値は反時計回りの回転を表します。</span><span class="sxs-lookup"><span data-stu-id="0d390-142">A positive number rotates clockwise; a negative number rotates counterclockwise.</span></span></param>
        <summary><span data-ttu-id="0d390-143">コントロールを回転します。</span><span class="sxs-lookup"><span data-stu-id="0d390-143">Rotates the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d390-144">オブジェクトを移動、サイズ変更、または回転させることはできません。その結果、画面の位置がコンテナーの座標の外側になり、キーボードやマウスからアクセスできなくなります。</span><span class="sxs-lookup"><span data-stu-id="0d390-144">An object cannot be moved, resized or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="0d390-145">たとえば、最上位レベルのウィンドウが画面外に移動した場合や、子オブジェクトがコンテナーのビューポートの境界の外側に移動された場合などです。</span><span class="sxs-lookup"><span data-stu-id="0d390-145">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="0d390-146">このような場合、オブジェクトは、最上位または左の座標がコンテナーの境界内でオーバーライドされ、要求された画面座標の近くに配置されます。</span><span class="sxs-lookup"><span data-stu-id="0d390-146">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d390-147">次の例では、回転できないカスタムコントロールに対してこのメソッドを実装する方法の1つを示します。</span><span class="sxs-lookup"><span data-stu-id="0d390-147">The following example shows one possible implementation of this method for a custom control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Rotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#rotate)]
 [!code-vb[UIAITransformProvider_snip#Rotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#rotate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0d390-148"><see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> プロパティが false の場合。</span><span class="sxs-lookup"><span data-stu-id="0d390-148">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> property is false.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="0d390-149">UI オートメーション Transform コントロール パターンの実装</span><span class="sxs-lookup"><span data-stu-id="0d390-149">Implementing the UI Automation Transform Control Pattern</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
