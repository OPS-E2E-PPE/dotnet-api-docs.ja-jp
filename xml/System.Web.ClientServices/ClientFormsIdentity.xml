<Type Name="ClientFormsIdentity" FullName="System.Web.ClientServices.ClientFormsIdentity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84750a7a8147101dcbb659d1130688befd8bcf09" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83890760" /></Metadata><TypeSignature Language="C#" Value="public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientFormsIdentity extends System.Object implements class System.IDisposable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientFormsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientFormsIdentity&#xA;Implements IDisposable, IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientFormsIdentity : IDisposable, System::Security::Principal::IIdentity" />
  <TypeSignature Language="F#" Value="type ClientFormsIdentity = class&#xA;    interface IIdentity&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>フォーム認証を使用してクライアント アプリケーション サービスに対して認証されたユーザー ID を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クライアントアプリケーションサービス機能は、このクラスを使用して認証されたユーザーを表します。 クライアントアプリケーションサービスとフォーム認証を使用するようにアプリケーションを構成する場合は、`static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType> メソッドを呼び出すことによってユーザーを認証できます。 認証後、`static` の <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> プロパティを通じて取得した <xref:System.Security.Principal.IPrincipal> の <xref:System.Security.Principal.IPrincipal.Identity%2A> プロパティを使用して、現在の <xref:System.Web.ClientServices.ClientFormsIdentity> インスタンスへの参照を取得できます。 詳細については、「[クライアント アプリケーション サービス](/dotnet/framework/common-client-technologies/client-application-services)」を参照してください。  
  
 通常、このクラスへの直接的な依存を回避するために、<xref:System.Web.ClientServices.ClientFormsIdentity> オブジェクトに <xref:System.Security.Principal.IIdentity> 参照としてアクセスします。 ユーザーが認証されているかどうかを確認するには、id の <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> プロパティを確認します。 ただし、ユーザーは Windows に対して認証される場合がありますが、クライアントアプリケーションサービスでは認証されません。 ユーザーがクライアントアプリケーションサービスに対して認証されているかどうかを確認するには、<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> プロパティの値が "ClientForms" であることも確認する必要があります。  
  
 明示的な <xref:System.Web.ClientServices.ClientFormsIdentity> 参照を使用して、<xref:System.Security.Principal.IIdentity> インターフェイスで定義されていない <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> メソッドを呼び出す必要があります。  
  
   
  
## Examples  
 次のコード例は、アプリケーションがオフライン状態のままになったときに、このクラスを使用してユーザーを自動的に再検証する方法を示しています。 この例では、<xref:System.Windows.Forms.CheckBox.CheckedChanged> のイベントハンドラーが、チェックボックスの値と一致するようにオフラインステータスを更新します。 ユーザーがアプリケーションを online 状態に設定すると、イベントハンドラーは <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> メソッドを呼び出すことによってユーザーの再検証を試みます。 ただし、認証サーバーが使用できない場合は、イベントハンドラーによって、アプリケーションがオフライン状態に戻ります。  
  
> [!NOTE]
>  <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> メソッドは便宜的なものに過ぎません。 このメソッドには戻り値がないため、再検証が失敗したかどうかを示すことはできません。 再検証は失敗することがあります。たとえば、サーバーでユーザーの資格情報が変更された場合などです。 この場合、サービスの呼び出しが失敗した後に、明示的にユーザーを検証するコードを含めることができます。 詳細については、「[チュートリアル: クライアントアプリケーションサービスの使用](/dotnet/framework/common-client-technologies/walkthrough-using-client-application-services)」の「Web 設定へのアクセス」セクションを参照してください。  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
    <altmember cref="T:System.Security.Principal.IIdentity" />
    <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">クライアント アプリケーション サービス</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb546195(v=vs.100)">チュートリアル: クライアント アプリケーション サービスの使用</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password, class System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, class System.Net.CookieContainer authenticationCookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, password As String, provider As MembershipProvider, authenticationType As String, isAuthenticated As Boolean, authenticationCookies As CookieContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientFormsIdentity(System::String ^ name, System::String ^ password, System::Web::Security::MembershipProvider ^ provider, System::String ^ authenticationType, bool isAuthenticated, System::Net::CookieContainer ^ authenticationCookies);" />
      <MemberSignature Language="F#" Value="new System.Web.ClientServices.ClientFormsIdentity : string * string * System.Web.Security.MembershipProvider * string * bool * System.Net.CookieContainer -&gt; System.Web.ClientServices.ClientFormsIdentity" Usage="new System.Web.ClientServices.ClientFormsIdentity (name, password, provider, authenticationType, isAuthenticated, authenticationCookies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="authenticationCookies" Type="System.Net.CookieContainer" />
      </Parameters>
      <Docs>
        <param name="name">認証済みユーザーの名前。</param>
        <param name="password">認証済みユーザーのパスワード。</param>
        <param name="provider">ユーザーの認証に使用したメンバーシップ プロバイダー。</param>
        <param name="authenticationType">使用した認証の種類。</param>
        <param name="isAuthenticated">ユーザーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="authenticationCookies">認証サーバーから取得したクッキー。</param>
        <summary><see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">クライアント アプリケーション サービス</related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationCookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer AuthenticationCookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer AuthenticationCookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationCookies As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ AuthenticationCookies { System::Net::CookieContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationCookies : System.Net.CookieContainer" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>認証サーバーから取得したクッキーのコレクションを取得します。</summary>
        <value>認証サーバーから取得したクッキー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、アプリケーションコードで使用するためのものではありません。 このプロパティを使用して取得したクッキーを明確に変更することはできません。また、有効な情報が含まれていません。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">クライアント アプリケーション サービス</related>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーの認証に使用した認証の種類を取得します。</summary>
        <value>ユーザーの認証に使用した認証の種類。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、このクラスへの直接的な依存を回避するために、<xref:System.Web.ClientServices.ClientFormsIdentity> オブジェクトに <xref:System.Security.Principal.IIdentity> 参照としてアクセスします。 ユーザーが認証されているかどうかを確認するには、id の <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> プロパティを確認します。 ただし、ユーザーは Windows に対して認証される場合がありますが、クライアントアプリケーションサービスでは認証されません。 ユーザーがクライアントアプリケーションサービスに対して認証されているかどうかを確認するには、<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> プロパティの値が "ClientForms" であることも確認する必要があります。 詳細については、「<xref:System.Web.ClientServices.ClientFormsIdentity> クラスの概要」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Security.Principal.IIdentity> 参照を使用してこのプロパティを使用し、ユーザーが現在クライアントアプリケーションサービスに対して認証されているかどうかを判断する方法を示しています。 この例では、アプリケーションが既定の構成であることを前提としています。この構成では、認証 cookie の有効期限が切れると、ユーザーは再度ログインする必要がありません。 それ以外の場合は、ユーザーのログインが期限切れであることを示す <xref:System.Net.WebException> ます。 詳細については、「 [How to: Configure Client Application Services](/dotnet/framework/common-client-technologies/how-to-configure-client-application-services)」を参照してください。  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">クライアント アプリケーション サービス</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">方法: クライアント アプリケーション サービスを構成する</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> で使用されたリソースを解放します。</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">クライアント アプリケーション サービス</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="clientFormsIdentity.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> で使用されるすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ClientServices.ClientFormsIdentity> を使い終わったら、<xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>を呼び出します。 <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>メソッドによって、<xref:System.Web.ClientServices.ClientFormsIdentity> は使用不可の状態になります。 <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>呼び出し後は、<xref:System.Web.ClientServices.ClientFormsIdentity>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Web.ClientServices.ClientFormsIdentity> へのすべての参照を解放する必要があります。 詳細については、[アンマネージ リソースのクリーンアップ](/dotnet/standard/garbage-collection/unmanaged)および[Dispose メソッドの実装](/dotnet/standard/garbage-collection/implementing-dispose)を参照してください。  
  
> [!NOTE]
>  <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> への最後の参照を解放する前に、必ず <xref:System.Web.ClientServices.ClientFormsIdentity> を呼び出してください。 そうしないと、ガベージ コレクターが <xref:System.Web.ClientServices.ClientFormsIdentity> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">クライアント アプリケーション サービス</related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="clientFormsIdentity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary><see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> で使用されたアンマネージド リソースを解放し、必要に応じてマネージド リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、パブリックな `Dispose()` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。 `Dispose()` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。 <xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して `Dispose` を呼び出します。  
  
 `disposing` パラメーターが true の場合、このメソッドは、この <xref:System.Web.ClientServices.ClientFormsIdentity> が参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。 このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。 をオーバーライドする場合は <see langword="Dispose(Boolean)" /> 以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。 <see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](/dotnet/standard/garbage-collection/implementing-dispose)」を参照してください。  
  
<see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](/dotnet/standard/garbage-collection/unmanaged)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">クライアント アプリケーション サービス</related>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが認証されているかどうかを示す値を取得します。</summary>
        <value>ユーザーが認証されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、このクラスへの直接的な依存を回避するために、<xref:System.Web.ClientServices.ClientFormsIdentity> オブジェクトに <xref:System.Security.Principal.IIdentity> 参照としてアクセスします。 ユーザーが認証されているかどうかを確認するには、id の <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> プロパティを確認します。 ただし、ユーザーは Windows に対して認証される場合がありますが、クライアントアプリケーションサービスでは認証されません。 ユーザーがクライアントアプリケーションサービスに対して認証されているかどうかを確認するには、<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> プロパティの値が "ClientForms" であることも確認する必要があります。 詳細については、「<xref:System.Web.ClientServices.ClientFormsIdentity> クラスの概要」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Security.Principal.IIdentity> 参照を使用してこのプロパティを使用し、ユーザーが現在クライアントアプリケーションサービスに対して認証されているかどうかを判断する方法を示しています。 この例では、アプリケーションが既定の構成であることを前提としています。この構成では、認証 cookie の有効期限が切れると、ユーザーは再度ログインする必要がありません。 それ以外の場合は、ユーザーのログインが期限切れであることを示す <xref:System.Net.WebException> ます。 詳細については、「 [How to: Configure Client Application Services](/dotnet/framework/common-client-technologies/how-to-configure-client-application-services)」を参照してください。  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">クライアント アプリケーション サービス</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">方法: クライアント アプリケーション サービスを構成する</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーの名前を取得します。</summary>
        <value>ユーザーの名前です。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">クライアント アプリケーション サービス</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーの認証に使用したメンバーシップ プロバイダーを取得します。</summary>
        <value>ユーザーの認証に使用したメンバーシップ プロバイダー。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">クライアント アプリケーション サービス</related>
      </Docs>
    </Member>
    <Member MemberName="RevalidateUser">
      <MemberSignature Language="C#" Value="public void RevalidateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevalidateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevalidateUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevalidateUser();" />
      <MemberSignature Language="F#" Value="member this.RevalidateUser : unit -&gt; unit" Usage="clientFormsIdentity.RevalidateUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>キャッシュされた資格情報を使用してユーザーを自動的に認証します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 フォーム認証を使用して現在のユーザーを検証すると、アプリケーションが実行されている限り、<xref:System.Web.ClientServices.ClientFormsIdentity> クラスにユーザーの資格情報が格納されます。 ただし、ユーザーは認証 cookie の有効期限が切れるまで認証されます。 Cookie の有効期限が切れた後、リモートロールまたは Web 設定サービスにアクセスするには、ユーザーを再検証する必要があります。 **[サービスの詳細設定]** ダイアログボックスを使用して、「 [How To: configure Client アプリケーションサービス](/dotnet/framework/common-client-technologies/how-to-configure-client-application-services)」の説明に従って、ユーザーを自動的に再検証するようにアプリケーションを構成できます。 ただし、cookie の有効期限を受け入れるようにアプリケーションを構成した場合は、<xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> メソッドを呼び出すことによって、プログラムによってユーザーを再検証することができます。 この方法は、オフラインモードからオンラインモードに切り替える場合にも役立ちます。これは、アプリケーションがオフラインでシャットダウンされた可能性があるためです。  
  
> [!NOTE]
>  <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> メソッドは便宜的なものに過ぎません。 このメソッドには戻り値がないため、再検証が失敗したかどうかを示すことはできません。 再検証は失敗することがあります。たとえば、サーバーでユーザーの資格情報が変更された場合などです。 この場合、サービスの呼び出しが失敗した後に、明示的にユーザーを検証するコードを含めることができます。 詳細については、「[チュートリアル: クライアントアプリケーションサービスの使用](/dotnet/framework/common-client-technologies/walkthrough-using-client-application-services)」の「Web 設定へのアクセス」セクションを参照してください。  
  
   
  
## Examples  
 次のコード例は、アプリケーションがオフライン状態のままになったときに、このメソッドを使用してユーザーを自動的に再検証する方法を示しています。 この例では、<xref:System.Windows.Forms.CheckBox.CheckedChanged> のイベントハンドラーが、チェックボックスの値と一致するようにオフラインステータスを更新します。 ユーザーがアプリケーションをオンライン状態に設定すると、イベントハンドラーはユーザーの再検証を試みます。 ただし、認証サーバーが使用できない場合は、イベントハンドラーによって、アプリケーションがオフライン状態に戻ります。  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.ConnectivityStatus" />
        <altmember cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384297(v=vs.100)">クライアント アプリケーション サービス</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb384312(v=vs.100)">方法: クライアント アプリケーション サービスを構成する</related>
        <related type="Article" href="/visualstudio/ide/reference/advanced-settings-for-services-dialog-box">[サービスの詳細設定] ダイアログ ボックス</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2010/bb546195(v=vs.100)">チュートリアル: クライアント アプリケーション サービスの使用</related>
      </Docs>
    </Member>
  </Members>
</Type>
