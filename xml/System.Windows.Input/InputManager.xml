<Type Name="InputManager" FullName="System.Windows.Input.InputManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf92b69ed8e482414823636cb5a17d814ac73c3b" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82497087" /></Metadata><TypeSignature Language="C#" Value="public sealed class InputManager : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InputManager extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InputManager&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputManager sealed : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type InputManager = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="48c60-101">Windows Presentation Foundation (WPF) ですべての入力システムを管理します。</span><span class="sxs-lookup"><span data-stu-id="48c60-101">Manages all the input systems in Windows Presentation Foundation (WPF).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c60-102"><xref:System.Windows.Input.InputManager> クラスは、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]内のすべての入力システムを調整します。</span><span class="sxs-lookup"><span data-stu-id="48c60-102">The <xref:System.Windows.Input.InputManager> class is responsible for coordinating all of the input systems in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span>  
  
 <span data-ttu-id="48c60-103">フィルターは、<xref:System.Windows.Input.InputManager.PreProcessInput> または <xref:System.Windows.Input.InputManager.PostProcessInput>をリッスンする任意のコードです。</span><span class="sxs-lookup"><span data-stu-id="48c60-103">A filter is any code that listens to <xref:System.Windows.Input.InputManager.PreProcessInput> or <xref:System.Windows.Input.InputManager.PostProcessInput>.</span></span>  <span data-ttu-id="48c60-104">フィルターは入力ステージング領域を変更できます。</span><span class="sxs-lookup"><span data-stu-id="48c60-104">Filters can modify the input staging area.</span></span>  
  
 <span data-ttu-id="48c60-105">モニターとは、<xref:System.Windows.Input.InputManager.PreNotifyInput> または <xref:System.Windows.Input.InputManager.PostNotifyInput>をリッスンするコードです。</span><span class="sxs-lookup"><span data-stu-id="48c60-105">A monitor is any code that listens to <xref:System.Windows.Input.InputManager.PreNotifyInput> or <xref:System.Windows.Input.InputManager.PostNotifyInput>.</span></span>  <span data-ttu-id="48c60-106">モニターは入力ステージング領域を変更できません。</span><span class="sxs-lookup"><span data-stu-id="48c60-106">Monitors cannot modify the input staging area.</span></span>  
  
 <span data-ttu-id="48c60-107"><xref:System.Windows.Input.InputManager> は、入力のステージング領域を制御します。</span><span class="sxs-lookup"><span data-stu-id="48c60-107">The <xref:System.Windows.Input.InputManager> controls the input staging area.</span></span>  <span data-ttu-id="48c60-108">入力ステージング領域は、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] イベントへの入力を処理します。</span><span class="sxs-lookup"><span data-stu-id="48c60-108">The input staging area processes input into [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] events.</span></span>  
  
 <span data-ttu-id="48c60-109">入力は、次の段階で [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] で処理されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-109">Input is processed in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] in the follow stages:</span></span>  
  
1.  <span data-ttu-id="48c60-110">プロセス前の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-110">Pre-process stage.</span></span>  <span data-ttu-id="48c60-111">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-111">The input manager raises the <xref:System.Windows.Input.InputManager.PreProcessInput> event.</span></span>  
  
2.  <span data-ttu-id="48c60-112">事前通知段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-112">Pre-notify stage.</span></span>  <span data-ttu-id="48c60-113">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-113">The input manager raises the <xref:System.Windows.Input.InputManager.PreNotifyInput> event.</span></span>  
  
3.  <span data-ttu-id="48c60-114">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 入力イベントまたはイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-114">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input event or events are raised.</span></span>  
  
4.  <span data-ttu-id="48c60-115">通知後の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-115">Post-notify stage.</span></span>  <span data-ttu-id="48c60-116">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-116">The input manager raises the <xref:System.Windows.Input.InputManager.PostNotifyInput> event.</span></span>  
  
5.  <span data-ttu-id="48c60-117">プロセス後の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-117">Post-process stage.</span></span>  <span data-ttu-id="48c60-118">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-118">The input manager raises the <xref:System.Windows.Input.InputManager.PostProcessInput> event.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.StagingAreaInputItem" />
    <altmember cref="T:System.Windows.Input.ProcessInputEventArgs" />
    <altmember cref="T:System.Windows.Input.PreProcessInputEventArgs" />
    <altmember cref="T:System.Windows.Input.NotifyInputEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.InputManager Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.InputManager Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As InputManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::InputManager ^ Current { System::Windows::Input::InputManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Input.InputManager" Usage="System.Windows.Input.InputManager.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-119">現在のスレッドに関連付けられている <see cref="T:System.Windows.Input.InputManager" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="48c60-119">Gets the <see cref="T:System.Windows.Input.InputManager" /> associated with the current thread.</span></span></summary>
        <value><span data-ttu-id="48c60-120">入力マネージャー。</span><span class="sxs-lookup"><span data-stu-id="48c60-120">The input manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c60-121">このクラスは、インターネットゾーンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="48c60-121">This class will not be available in Internet zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnterMenuMode">
      <MemberSignature Language="C#" Value="public event EventHandler EnterMenuMode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnterMenuMode" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.EnterMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EnterMenuMode As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EnterMenuMode;" />
      <MemberSignature Language="F#" Value="member this.EnterMenuMode : EventHandler " Usage="member this.EnterMenuMode : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event EnterMenuMode As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-122"><see cref="M:System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)" /> メソッドを呼び出すことで、コントロールがメニュー モードを開始すると発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-122">Occurs when a control enters menu mode by calling the <see cref="M:System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c60-123">コンポーネントは、入力マネージャーのメニューモードに入るコントロールに応答するために、このイベントにデリゲートを登録します。</span><span class="sxs-lookup"><span data-stu-id="48c60-123">Components register delegates with this event to respond to a control entering the input manager's menu mode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestInvalidatedAsync">
      <MemberSignature Language="C#" Value="public event EventHandler HitTestInvalidatedAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HitTestInvalidatedAsync" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.HitTestInvalidatedAsync" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HitTestInvalidatedAsync As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HitTestInvalidatedAsync;" />
      <MemberSignature Language="F#" Value="member this.HitTestInvalidatedAsync : EventHandler " Usage="member this.HitTestInvalidatedAsync : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event HitTestInvalidatedAsync As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-124">ヒット テストの結果が変更された可能性のある場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-124">Occurs when the result of a hit-test may have changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputProviders">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection InputProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection InputProviders" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.InputProviders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputProviders As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ InputProviders { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputProviders : System.Collections.ICollection" Usage="System.Windows.Input.InputManager.InputProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-125"><see cref="P:System.Windows.Input.InputManager.InputProviders" /> に登録された <see cref="T:System.Windows.Input.InputManager" /> のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="48c60-125">Gets a collection of <see cref="P:System.Windows.Input.InputManager.InputProviders" /> registered with the <see cref="T:System.Windows.Input.InputManager" />.</span></span></summary>
        <value><span data-ttu-id="48c60-126">入力プロバイダーのコレクション。</span><span class="sxs-lookup"><span data-stu-id="48c60-126">The collection of input provides.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInMenuMode">
      <MemberSignature Language="C#" Value="public bool IsInMenuMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.IsInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInMenuMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInMenuMode : bool" Usage="System.Windows.Input.InputManager.IsInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-127"><see cref="T:System.Windows.Interop.ComponentDispatcher" /> がメニュー モードかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="48c60-127">Gets a value that indicates whether this <see cref="T:System.Windows.Interop.ComponentDispatcher" /> is in menu mode.</span></span></summary>
        <value><span data-ttu-id="48c60-128">この <see langword="true" /> がメニュー モードの場合は <see cref="T:System.Windows.Interop.ComponentDispatcher" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48c60-128"><see langword="true" /> if this <see cref="T:System.Windows.Interop.ComponentDispatcher" /> is in menu mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c60-129"><xref:System.Windows.Input.InputManager.IsInMenuMode%2A> プロパティは、いずれかのメニューが開いている場合に `true` を返します。メニューが開いていない場合は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="48c60-129">The <xref:System.Windows.Input.InputManager.IsInMenuMode%2A> property returns `true` if any menus are open, and it returns `false` if no menus are open.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaveMenuMode">
      <MemberSignature Language="C#" Value="public event EventHandler LeaveMenuMode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LeaveMenuMode" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.LeaveMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LeaveMenuMode As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LeaveMenuMode;" />
      <MemberSignature Language="F#" Value="member this.LeaveMenuMode : EventHandler " Usage="member this.LeaveMenuMode : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event LeaveMenuMode As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-130"><see cref="M:System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)" /> メソッドを呼び出すことで、コントロールがメニュー モードを終了すると発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-130">Occurs when a control leaves menu mode by calling the <see cref="M:System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c60-131">コンポーネントは、このイベントにデリゲートを登録して、入力マネージャーのメニューモードを離れるコントロールに応答します。</span><span class="sxs-lookup"><span data-stu-id="48c60-131">Components register delegates with this event to respond to a control leaving the input manager's menu mode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MostRecentInputDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputDevice MostRecentInputDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputDevice MostRecentInputDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.MostRecentInputDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MostRecentInputDevice As InputDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputDevice ^ MostRecentInputDevice { System::Windows::Input::InputDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MostRecentInputDevice : System.Windows.Input.InputDevice" Usage="System.Windows.Input.InputManager.MostRecentInputDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-132">最新の入力イベントに関連付けられている入力デバイスを表す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="48c60-132">Gets a value that represents the input device associated with the most recent input event.</span></span></summary>
        <value><span data-ttu-id="48c60-133">入力デバイス。</span><span class="sxs-lookup"><span data-stu-id="48c60-133">The input device.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopMenuMode">
      <MemberSignature Language="C#" Value="public void PopMenuMode (System.Windows.PresentationSource menuSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopMenuMode(class System.Windows.PresentationSource menuSite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopMenuMode (menuSite As PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PopMenuMode(System::Windows::PresentationSource ^ menuSite);" />
      <MemberSignature Language="F#" Value="member this.PopMenuMode : System.Windows.PresentationSource -&gt; unit" Usage="inputManager.PopMenuMode menuSite" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuSite" Type="System.Windows.PresentationSource" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="menuSite"><span data-ttu-id="48c60-134">終了するメニュー。</span><span class="sxs-lookup"><span data-stu-id="48c60-134">The menu to leave.</span></span></param>
        <summary><span data-ttu-id="48c60-135">メニュー モードを終了するコンポーネントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-135">Called by components to leave menu mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c60-136">コンポーネントは、このメソッドを呼び出して、入力マネージャーのメニューモードを終了します。</span><span class="sxs-lookup"><span data-stu-id="48c60-136">A component calls this method to leave the input manager's menu mode.</span></span> <span data-ttu-id="48c60-137">`menuSite` は、ウィンドウメッセージへの特権アクセスを解放します。</span><span class="sxs-lookup"><span data-stu-id="48c60-137">The `menuSite` releases privileged access to window messages.</span></span>  
  
 <span data-ttu-id="48c60-138">このメソッドを呼び出すと、開いているメニューの内部カウントがデクリメントされ、最後のメニューで閉じる場合は、<xref:System.Windows.Input.InputManager.IsInMenuMode%2A> プロパティが `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-138">Calling this method causes the internal count of open menus to decrement and sets the <xref:System.Windows.Input.InputManager.IsInMenuMode%2A> property to `false`, if this is the last menu to close.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="48c60-139"><paramref name="menuSite" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="48c60-139"><paramref name="menuSite" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PostNotifyInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.NotifyInputEventHandler PostNotifyInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.NotifyInputEventHandler PostNotifyInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.PostNotifyInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostNotifyInput As NotifyInputEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::NotifyInputEventHandler ^ PostNotifyInput;" />
      <MemberSignature Language="F#" Value="member this.PostNotifyInput : System.Windows.Input.NotifyInputEventHandler " Usage="member this.PostNotifyInput : System.Windows.Input.NotifyInputEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.NotifyInputEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-140"><see cref="E:System.Windows.Input.InputManager.PreNotifyInput" /> ハンドラーが入力の処理を終了し、対応する [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] イベントが発生した後で発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-140">Occurs after the <see cref="E:System.Windows.Input.InputManager.PreNotifyInput" /> handlers have finished processing the input and the corresponding [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] events have been raised.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c60-141">モニターとは、<xref:System.Windows.Input.InputManager.PreNotifyInput> または <xref:System.Windows.Input.InputManager.PostNotifyInput>をリッスンするコードです。</span><span class="sxs-lookup"><span data-stu-id="48c60-141">A monitor is any code that listens to <xref:System.Windows.Input.InputManager.PreNotifyInput> or <xref:System.Windows.Input.InputManager.PostNotifyInput>.</span></span>  <span data-ttu-id="48c60-142">モニターは入力ステージング領域を変更できません。</span><span class="sxs-lookup"><span data-stu-id="48c60-142">Monitors cannot modify the input staging area.</span></span>  
  
 <span data-ttu-id="48c60-143"><xref:System.Windows.Input.InputManager.PostNotifyInput> にアタッチされたハンドラーは逆の順序で呼び出されるので、ユーザーによって追加されたハンドラーがシステム内のハンドラーの前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-143">The handlers attached to <xref:System.Windows.Input.InputManager.PostNotifyInput> are invoked in reverse order so that handlers added by the users are invoked before handlers in the system.</span></span>  
  
 <span data-ttu-id="48c60-144">入力は、次の段階で [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] で処理されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-144">Input is processed in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] in the follow stages:</span></span>  
  
1.  <span data-ttu-id="48c60-145">プロセス前の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-145">Pre-process stage.</span></span>  <span data-ttu-id="48c60-146">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-146">The input manager raises the <xref:System.Windows.Input.InputManager.PreProcessInput> event.</span></span>  
  
2.  <span data-ttu-id="48c60-147">事前通知段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-147">Pre-notify stage.</span></span>  <span data-ttu-id="48c60-148">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-148">The input manager raises the <xref:System.Windows.Input.InputManager.PreNotifyInput> event.</span></span>  
  
3.  <span data-ttu-id="48c60-149">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 入力イベントまたはイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-149">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input event or events are raised.</span></span>  
  
4.  <span data-ttu-id="48c60-150">通知後の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-150">Post-notify stage.</span></span>  <span data-ttu-id="48c60-151">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-151">The input manager raises the <xref:System.Windows.Input.InputManager.PostNotifyInput> event.</span></span>  
  
5.  <span data-ttu-id="48c60-152">プロセス後の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-152">Post-process stage.</span></span>  <span data-ttu-id="48c60-153">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-153">The input manager raises the <xref:System.Windows.Input.InputManager.PostProcessInput> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NotifyInputEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PostProcessInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.ProcessInputEventHandler PostProcessInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.ProcessInputEventHandler PostProcessInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.PostProcessInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostProcessInput As ProcessInputEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::ProcessInputEventHandler ^ PostProcessInput;" />
      <MemberSignature Language="F#" Value="member this.PostProcessInput : System.Windows.Input.ProcessInputEventHandler " Usage="member this.PostProcessInput : System.Windows.Input.ProcessInputEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ProcessInputEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-154"><see cref="E:System.Windows.Input.InputManager.PreNotifyInput" /> ハンドラーが入力の処理を終了した後で発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-154">Occurs after the <see cref="E:System.Windows.Input.InputManager.PreNotifyInput" /> handlers have finished processing the input.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c60-155">フィルターは、<xref:System.Windows.Input.InputManager.PreProcessInput> または <xref:System.Windows.Input.InputManager.PostProcessInput>をリッスンする任意のコードです。</span><span class="sxs-lookup"><span data-stu-id="48c60-155">A filter is any code that listens to <xref:System.Windows.Input.InputManager.PreProcessInput> or <xref:System.Windows.Input.InputManager.PostProcessInput>.</span></span>  <span data-ttu-id="48c60-156">フィルターは入力ステージング領域を変更できます。</span><span class="sxs-lookup"><span data-stu-id="48c60-156">Filters can modify the input staging area.</span></span>  
  
 <span data-ttu-id="48c60-157"><xref:System.Windows.Input.InputManager.PostProcessInput> にアタッチされたハンドラーは逆の順序で呼び出されるので、ユーザーによって追加されたハンドラーがシステム内のハンドラーの前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-157">The handlers attached to <xref:System.Windows.Input.InputManager.PostProcessInput> are invoked in reverse order so that handlers added by the users are invoked before handlers in the system.</span></span>  
  
 <span data-ttu-id="48c60-158">入力は、次の段階で [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] で処理されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-158">Input is processed in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] in the follow stages:</span></span>  
  
1.  <span data-ttu-id="48c60-159">プロセス前の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-159">Pre-process stage.</span></span>  <span data-ttu-id="48c60-160">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-160">The input manager raises the <xref:System.Windows.Input.InputManager.PreProcessInput> event.</span></span>  
  
2.  <span data-ttu-id="48c60-161">事前通知段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-161">Pre-notify stage.</span></span>  <span data-ttu-id="48c60-162">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-162">The input manager raises the <xref:System.Windows.Input.InputManager.PreNotifyInput> event.</span></span>  
  
3.  <span data-ttu-id="48c60-163">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 入力イベントまたはイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-163">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input event or events are raised.</span></span>  
  
4.  <span data-ttu-id="48c60-164">通知後の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-164">Post-notify stage.</span></span>  <span data-ttu-id="48c60-165">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-165">The input manager raises the <xref:System.Windows.Input.InputManager.PostNotifyInput> event.</span></span>  
  
5.  <span data-ttu-id="48c60-166">プロセス後の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-166">Post-process stage.</span></span>  <span data-ttu-id="48c60-167">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-167">The input manager raises the <xref:System.Windows.Input.InputManager.PostProcessInput> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ProcessInputEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PreNotifyInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.NotifyInputEventHandler PreNotifyInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.NotifyInputEventHandler PreNotifyInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.PreNotifyInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreNotifyInput As NotifyInputEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::NotifyInputEventHandler ^ PreNotifyInput;" />
      <MemberSignature Language="F#" Value="member this.PreNotifyInput : System.Windows.Input.NotifyInputEventHandler " Usage="member this.PreNotifyInput : System.Windows.Input.NotifyInputEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.NotifyInputEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-168">入力がキャンセルされなかった場合、<see cref="E:System.Windows.Input.InputManager.PreProcessInput" /> ハンドラーが入力の処理を終了すると発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-168">Occurs when the <see cref="E:System.Windows.Input.InputManager.PreProcessInput" /> handlers have finished processing the input, if the input was not canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c60-169">モニターとは、<xref:System.Windows.Input.InputManager.PreNotifyInput> または <xref:System.Windows.Input.InputManager.PostNotifyInput>をリッスンするコードです。</span><span class="sxs-lookup"><span data-stu-id="48c60-169">A monitor is any code that listens to <xref:System.Windows.Input.InputManager.PreNotifyInput> or <xref:System.Windows.Input.InputManager.PostNotifyInput>.</span></span>  <span data-ttu-id="48c60-170">モニターは入力ステージング領域を変更できません。</span><span class="sxs-lookup"><span data-stu-id="48c60-170">Monitors cannot modify the input staging area.</span></span>  
  
 <span data-ttu-id="48c60-171"><xref:System.Windows.Input.InputManager.PreNotifyInput> にアタッチされたハンドラーは逆の順序で呼び出されるので、ユーザーによって追加されたハンドラーがシステム内のハンドラーの前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-171">The handlers attached to <xref:System.Windows.Input.InputManager.PreNotifyInput> are invoked in reverse order so that handlers added by the users are invoked before handlers in the system.</span></span>  
  
 <span data-ttu-id="48c60-172">入力は、次の段階で [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] で処理されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-172">Input is processed in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] in the follow stages:</span></span>  
  
1.  <span data-ttu-id="48c60-173">プロセス前の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-173">Pre-process stage.</span></span>  <span data-ttu-id="48c60-174">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-174">The input manager raises the <xref:System.Windows.Input.InputManager.PreProcessInput> event.</span></span>  
  
2.  <span data-ttu-id="48c60-175">事前通知段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-175">Pre-notify stage.</span></span>  <span data-ttu-id="48c60-176">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-176">The input manager raises the <xref:System.Windows.Input.InputManager.PreNotifyInput> event.</span></span>  
  
3.  <span data-ttu-id="48c60-177">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 入力イベントまたはイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-177">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input event or events are raised.</span></span>  
  
4.  <span data-ttu-id="48c60-178">通知後の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-178">Post-notify stage.</span></span>  <span data-ttu-id="48c60-179">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-179">The input manager raises the <xref:System.Windows.Input.InputManager.PostNotifyInput> event.</span></span>  
  
5.  <span data-ttu-id="48c60-180">プロセス後の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-180">Post-process stage.</span></span>  <span data-ttu-id="48c60-181">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-181">The input manager raises the <xref:System.Windows.Input.InputManager.PostProcessInput> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.NotifyInputEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PreProcessInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.PreProcessInputEventHandler PreProcessInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.PreProcessInputEventHandler PreProcessInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.PreProcessInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreProcessInput As PreProcessInputEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::PreProcessInputEventHandler ^ PreProcessInput;" />
      <MemberSignature Language="F#" Value="member this.PreProcessInput : System.Windows.Input.PreProcessInputEventHandler " Usage="member this.PreProcessInput : System.Windows.Input.PreProcessInputEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.PreProcessInputEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-182"><see cref="T:System.Windows.Input.InputManager" /> が入力項目の処理を開始すると発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-182">Occurs when the <see cref="T:System.Windows.Input.InputManager" /> starts to process the input item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c60-183">フィルターは、<xref:System.Windows.Input.InputManager.PreProcessInput> または <xref:System.Windows.Input.InputManager.PostProcessInput>をリッスンする任意のコードです。</span><span class="sxs-lookup"><span data-stu-id="48c60-183">A filter is any code that listens to <xref:System.Windows.Input.InputManager.PreProcessInput> or <xref:System.Windows.Input.InputManager.PostProcessInput>.</span></span>  <span data-ttu-id="48c60-184">フィルターは入力ステージング領域を変更できます。</span><span class="sxs-lookup"><span data-stu-id="48c60-184">Filters can modify the input staging area.</span></span>  
  
 <span data-ttu-id="48c60-185"><xref:System.Windows.Input.InputManager.PreProcessInput> にアタッチされたハンドラーは逆の順序で呼び出されるので、ユーザーによって追加されたハンドラーがシステム内のハンドラーの前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-185">The handlers attached to <xref:System.Windows.Input.InputManager.PreProcessInput> are invoked in reverse order so that handlers added by the users are invoked before handlers in the system.</span></span>  
  
 <span data-ttu-id="48c60-186"><xref:System.Windows.Input.PreProcessInputEventHandler> に渡された <xref:System.Windows.Input.PreProcessInputEventArgs> に対して <xref:System.Windows.Input.PreProcessInputEventArgs.Cancel%2A> を呼び出すと、入力の処理が取り消されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-186">Calling <xref:System.Windows.Input.PreProcessInputEventArgs.Cancel%2A> on the <xref:System.Windows.Input.PreProcessInputEventArgs> passed to the <xref:System.Windows.Input.PreProcessInputEventHandler> will cancel the processing of the input.</span></span>  
  
 <span data-ttu-id="48c60-187">入力は、次の段階で [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] で処理されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-187">Input is processed in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] in the follow stages:</span></span>  
  
1.  <span data-ttu-id="48c60-188">プロセス前の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-188">Pre-process stage.</span></span>  <span data-ttu-id="48c60-189">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-189">The input manager raises the <xref:System.Windows.Input.InputManager.PreProcessInput> event.</span></span>  
  
2.  <span data-ttu-id="48c60-190">事前通知段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-190">Pre-notify stage.</span></span>  <span data-ttu-id="48c60-191">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-191">The input manager raises the <xref:System.Windows.Input.InputManager.PreNotifyInput> event.</span></span>  
  
3.  <span data-ttu-id="48c60-192">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 入力イベントまたはイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-192">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input event or events are raised.</span></span>  
  
4.  <span data-ttu-id="48c60-193">通知後の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-193">Post-notify stage.</span></span>  <span data-ttu-id="48c60-194">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-194">The input manager raises the <xref:System.Windows.Input.InputManager.PostNotifyInput> event.</span></span>  
  
5.  <span data-ttu-id="48c60-195">プロセス後の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-195">Post-process stage.</span></span>  <span data-ttu-id="48c60-196">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-196">The input manager raises the <xref:System.Windows.Input.InputManager.PostProcessInput> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.PreProcessInputEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyboardDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.KeyboardDevice PrimaryKeyboardDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.KeyboardDevice PrimaryKeyboardDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.PrimaryKeyboardDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryKeyboardDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::KeyboardDevice ^ PrimaryKeyboardDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryKeyboardDevice : System.Windows.Input.KeyboardDevice" Usage="System.Windows.Input.InputManager.PrimaryKeyboardDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-197">プライマリ キーボード デバイスを取得します。</span><span class="sxs-lookup"><span data-stu-id="48c60-197">Gets the primary keyboard device.</span></span></summary>
        <value><span data-ttu-id="48c60-198">キーボード デバイス。</span><span class="sxs-lookup"><span data-stu-id="48c60-198">The keyboard device.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.Keyboard" />
      </Docs>
    </Member>
    <Member MemberName="PrimaryMouseDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseDevice PrimaryMouseDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.MouseDevice PrimaryMouseDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.PrimaryMouseDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryMouseDevice As MouseDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseDevice ^ PrimaryMouseDevice { System::Windows::Input::MouseDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryMouseDevice : System.Windows.Input.MouseDevice" Usage="System.Windows.Input.InputManager.PrimaryMouseDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="48c60-199">プライマリ マウス デバイスを取得します。</span><span class="sxs-lookup"><span data-stu-id="48c60-199">Gets the primary mouse device.</span></span></summary>
        <value><span data-ttu-id="48c60-200">マウス デバイス。</span><span class="sxs-lookup"><span data-stu-id="48c60-200">The mouse device.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ProcessInput">
      <MemberSignature Language="C#" Value="public bool ProcessInput (System.Windows.Input.InputEventArgs input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ProcessInput(class System.Windows.Input.InputEventArgs input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessInput (input As InputEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ProcessInput(System::Windows::Input::InputEventArgs ^ input);" />
      <MemberSignature Language="F#" Value="member this.ProcessInput : System.Windows.Input.InputEventArgs -&gt; bool" Usage="inputManager.ProcessInput input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="48c60-201">処理する入力。</span><span class="sxs-lookup"><span data-stu-id="48c60-201">The input to process.</span></span></param>
        <summary><span data-ttu-id="48c60-202">指定した入力を同期的に処理します。</span><span class="sxs-lookup"><span data-stu-id="48c60-202">Processes the specified input synchronously.</span></span></summary>
        <returns><span data-ttu-id="48c60-203">すべての入力イベントが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="48c60-203"><see langword="true" /> if all input events were handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c60-204">フィルターは、<xref:System.Windows.Input.InputManager.PreProcessInput> または <xref:System.Windows.Input.InputManager.PostProcessInput>をリッスンする任意のコードです。</span><span class="sxs-lookup"><span data-stu-id="48c60-204">A filter is any code that listens to <xref:System.Windows.Input.InputManager.PreProcessInput> or <xref:System.Windows.Input.InputManager.PostProcessInput>.</span></span>  <span data-ttu-id="48c60-205">フィルターは入力ステージング領域を変更できます。</span><span class="sxs-lookup"><span data-stu-id="48c60-205">Filters can modify the input staging area.</span></span>  
  
 <span data-ttu-id="48c60-206">モニターとは、<xref:System.Windows.Input.InputManager.PreNotifyInput> または <xref:System.Windows.Input.InputManager.PostNotifyInput>をリッスンするコードです。</span><span class="sxs-lookup"><span data-stu-id="48c60-206">A monitor is any code that listens to <xref:System.Windows.Input.InputManager.PreNotifyInput> or <xref:System.Windows.Input.InputManager.PostNotifyInput>.</span></span>  <span data-ttu-id="48c60-207">モニターは入力ステージング領域を変更できません。</span><span class="sxs-lookup"><span data-stu-id="48c60-207">Monitors cannot modify the input staging area.</span></span>  
  
 <span data-ttu-id="48c60-208">指定された入力はすべてのフィルターとモニターによって処理され、最終的に入力イベントとして適切な要素にディスパッチされます。</span><span class="sxs-lookup"><span data-stu-id="48c60-208">The specified input is processed by all the filters and monitors and is finally dispatched to the appropriate element as an input event.</span></span>  
  
 <span data-ttu-id="48c60-209">入力は、次の段階で [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] で処理されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-209">Input is processed in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] in the follow stages:</span></span>  
  
1.  <span data-ttu-id="48c60-210">プロセス前の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-210">Pre-process stage.</span></span>  <span data-ttu-id="48c60-211">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-211">The input manager raises the <xref:System.Windows.Input.InputManager.PreProcessInput> event.</span></span>  
  
2.  <span data-ttu-id="48c60-212">事前通知段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-212">Pre-notify stage.</span></span>  <span data-ttu-id="48c60-213">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-213">The input manager raises the <xref:System.Windows.Input.InputManager.PreNotifyInput> event.</span></span>  
  
3.  <span data-ttu-id="48c60-214">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 入力イベントまたはイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-214">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input event or events are raised.</span></span>  
  
4.  <span data-ttu-id="48c60-215">通知後の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-215">Post-notify stage.</span></span>  <span data-ttu-id="48c60-216">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-216">The input manager raises the <xref:System.Windows.Input.InputManager.PostNotifyInput> event.</span></span>  
  
5.  <span data-ttu-id="48c60-217">プロセス後の段階。</span><span class="sxs-lookup"><span data-stu-id="48c60-217">Post-process stage.</span></span>  <span data-ttu-id="48c60-218">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="48c60-218">The input manager raises the <xref:System.Windows.Input.InputManager.PostProcessInput> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="48c60-219"><paramref name="input" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="48c60-219"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PushMenuMode">
      <MemberSignature Language="C#" Value="public void PushMenuMode (System.Windows.PresentationSource menuSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushMenuMode(class System.Windows.PresentationSource menuSite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushMenuMode (menuSite As PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushMenuMode(System::Windows::PresentationSource ^ menuSite);" />
      <MemberSignature Language="F#" Value="member this.PushMenuMode : System.Windows.PresentationSource -&gt; unit" Usage="inputManager.PushMenuMode menuSite" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuSite" Type="System.Windows.PresentationSource" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="menuSite"><span data-ttu-id="48c60-220">開始するメニュー。</span><span class="sxs-lookup"><span data-stu-id="48c60-220">The menu to enter.</span></span></param>
        <summary><span data-ttu-id="48c60-221">メニュー モードを開始するコンポーネントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="48c60-221">Called by components to enter menu mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="48c60-222">コンポーネントは、このメソッドを呼び出して、入力マネージャーのメニューモードに入ります。</span><span class="sxs-lookup"><span data-stu-id="48c60-222">A component calls this method to enter the input manager's menu mode.</span></span> <span data-ttu-id="48c60-223">`menuSite` は、ウィンドウメッセージへの特権アクセスを取得します。</span><span class="sxs-lookup"><span data-stu-id="48c60-223">The `menuSite` gets privileged access to window messages.</span></span> <span data-ttu-id="48c60-224">このメソッドを呼び出すと、開いているメニューの内部数が増加し、<xref:System.Windows.Input.InputManager.IsInMenuMode%2A> プロパティが `true`に設定されます (これが最初に開いたメニューの場合)。</span><span class="sxs-lookup"><span data-stu-id="48c60-224">Calling this method causes the internal count of open menus to increment and sets the <xref:System.Windows.Input.InputManager.IsInMenuMode%2A> property to `true`, if this is the first menu to open.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="48c60-225"><paramref name="menuSite" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="48c60-225"><paramref name="menuSite" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
