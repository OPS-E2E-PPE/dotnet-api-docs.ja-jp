<Type Name="InputManager" FullName="System.Windows.Input.InputManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b4af5091f0779d604e2b2d7830ffd7bb56d2482" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73399807" /></Metadata><TypeSignature Language="C#" Value="public sealed class InputManager : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InputManager extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InputManager&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputManager sealed : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type InputManager = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="419b8-101">Windows Presentation Foundation (WPF) ですべての入力システムを管理します。</span><span class="sxs-lookup"><span data-stu-id="419b8-101">Manages all the input systems in Windows Presentation Foundation (WPF).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419b8-102"><xref:System.Windows.Input.InputManager> クラスは、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]内のすべての入力システムを調整します。</span><span class="sxs-lookup"><span data-stu-id="419b8-102">The <xref:System.Windows.Input.InputManager> class is responsible for coordinating all of the input systems in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span>  
  
 <span data-ttu-id="419b8-103">フィルターは、<xref:System.Windows.Input.InputManager.PreProcessInput> または <xref:System.Windows.Input.InputManager.PostProcessInput>をリッスンする任意のコードです。</span><span class="sxs-lookup"><span data-stu-id="419b8-103">A filter is any code that listens to <xref:System.Windows.Input.InputManager.PreProcessInput> or <xref:System.Windows.Input.InputManager.PostProcessInput>.</span></span>  <span data-ttu-id="419b8-104">フィルターは入力ステージング領域を変更できます。</span><span class="sxs-lookup"><span data-stu-id="419b8-104">Filters can modify the input staging area.</span></span>  
  
 <span data-ttu-id="419b8-105">モニターとは、<xref:System.Windows.Input.InputManager.PreNotifyInput> または <xref:System.Windows.Input.InputManager.PostNotifyInput>をリッスンするコードです。</span><span class="sxs-lookup"><span data-stu-id="419b8-105">A monitor is any code that listens to <xref:System.Windows.Input.InputManager.PreNotifyInput> or <xref:System.Windows.Input.InputManager.PostNotifyInput>.</span></span>  <span data-ttu-id="419b8-106">モニターは入力ステージング領域を変更できません。</span><span class="sxs-lookup"><span data-stu-id="419b8-106">Monitors cannot modify the input staging area.</span></span>  
  
 <span data-ttu-id="419b8-107"><xref:System.Windows.Input.InputManager> は、入力のステージング領域を制御します。</span><span class="sxs-lookup"><span data-stu-id="419b8-107">The <xref:System.Windows.Input.InputManager> controls the input staging area.</span></span>  <span data-ttu-id="419b8-108">入力ステージング領域は、[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] イベントへの入力を処理します。</span><span class="sxs-lookup"><span data-stu-id="419b8-108">The input staging area processes input into [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] events.</span></span>  
  
 <span data-ttu-id="419b8-109">入力は、次の段階で [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] で処理されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-109">Input is processed in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] in the follow stages:</span></span>  
  
1.  <span data-ttu-id="419b8-110">プロセス前の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-110">Pre-process stage.</span></span>  <span data-ttu-id="419b8-111">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-111">The input manager raises the <xref:System.Windows.Input.InputManager.PreProcessInput> event.</span></span>  
  
2.  <span data-ttu-id="419b8-112">事前通知段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-112">Pre-notify stage.</span></span>  <span data-ttu-id="419b8-113">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-113">The input manager raises the <xref:System.Windows.Input.InputManager.PreNotifyInput> event.</span></span>  
  
3.  <span data-ttu-id="419b8-114">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 入力イベントまたはイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-114">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input event or events are raised.</span></span>  
  
4.  <span data-ttu-id="419b8-115">通知後の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-115">Post-notify stage.</span></span>  <span data-ttu-id="419b8-116">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-116">The input manager raises the <xref:System.Windows.Input.InputManager.PostNotifyInput> event.</span></span>  
  
5.  <span data-ttu-id="419b8-117">プロセス後の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-117">Post-process stage.</span></span>  <span data-ttu-id="419b8-118">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-118">The input manager raises the <xref:System.Windows.Input.InputManager.PostProcessInput> event.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.StagingAreaInputItem" />
    <altmember cref="T:System.Windows.Input.ProcessInputEventArgs" />
    <altmember cref="T:System.Windows.Input.PreProcessInputEventArgs" />
    <altmember cref="T:System.Windows.Input.NotifyInputEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.InputManager Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.InputManager Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As InputManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::InputManager ^ Current { System::Windows::Input::InputManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Windows.Input.InputManager" Usage="System.Windows.Input.InputManager.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-119">現在のスレッドに関連付けられている <see cref="T:System.Windows.Input.InputManager" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="419b8-119">Gets the <see cref="T:System.Windows.Input.InputManager" /> associated with the current thread.</span></span></summary>
        <value><span data-ttu-id="419b8-120">入力マネージャー。</span><span class="sxs-lookup"><span data-stu-id="419b8-120">The input manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419b8-121">このクラスは、インターネットゾーンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="419b8-121">This class will not be available in Internet zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="419b8-122">現在の入力マネージャーを取得するために使用します。</span><span class="sxs-lookup"><span data-stu-id="419b8-122">for getting the current input manager.</span></span> <span data-ttu-id="419b8-123">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="419b8-123">Associated enumerations: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="EnterMenuMode">
      <MemberSignature Language="C#" Value="public event EventHandler EnterMenuMode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnterMenuMode" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.EnterMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EnterMenuMode As EventHandler " FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EnterMenuMode;" />
      <MemberSignature Language="F#" Value="member this.EnterMenuMode : EventHandler " Usage="member this.EnterMenuMode : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event EnterMenuMode As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-124"><see cref="M:System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)" /> メソッドを呼び出すことで、コントロールがメニュー モードを開始すると発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-124">Occurs when a control enters menu mode by calling the <see cref="M:System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419b8-125">コンポーネントは、入力マネージャーのメニューモードに入るコントロールに応答するために、このイベントにデリゲートを登録します。</span><span class="sxs-lookup"><span data-stu-id="419b8-125">Components register delegates with this event to respond to a control entering the input manager's menu mode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestInvalidatedAsync">
      <MemberSignature Language="C#" Value="public event EventHandler HitTestInvalidatedAsync;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HitTestInvalidatedAsync" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.HitTestInvalidatedAsync" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HitTestInvalidatedAsync As EventHandler " FrameworkAlternate="netcore-3.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HitTestInvalidatedAsync;" />
      <MemberSignature Language="F#" Value="member this.HitTestInvalidatedAsync : EventHandler " Usage="member this.HitTestInvalidatedAsync : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event HitTestInvalidatedAsync As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-126">ヒット テストの結果が変更された可能性のある場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-126">Occurs when the result of a hit-test may have changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputProviders">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection InputProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection InputProviders" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.InputProviders" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputProviders As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ InputProviders { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputProviders : System.Collections.ICollection" Usage="System.Windows.Input.InputManager.InputProviders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-127"><see cref="P:System.Windows.Input.InputManager.InputProviders" /> に登録された <see cref="T:System.Windows.Input.InputManager" /> のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="419b8-127">Gets a collection of <see cref="P:System.Windows.Input.InputManager.InputProviders" /> registered with the <see cref="T:System.Windows.Input.InputManager" />.</span></span></summary>
        <value><span data-ttu-id="419b8-128">入力プロバイダーのコレクション。</span><span class="sxs-lookup"><span data-stu-id="419b8-128">The collection of input provides.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="419b8-129">入力プロバイダーのコレクションを取得するために使用します。</span><span class="sxs-lookup"><span data-stu-id="419b8-129">for getting the collection of input providers.</span></span> <span data-ttu-id="419b8-130">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="419b8-130">Associated enumerations: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsInMenuMode">
      <MemberSignature Language="C#" Value="public bool IsInMenuMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.IsInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInMenuMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInMenuMode : bool" Usage="System.Windows.Input.InputManager.IsInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-131"><see cref="T:System.Windows.Interop.ComponentDispatcher" /> がメニュー モードかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="419b8-131">Gets a value that indicates whether this <see cref="T:System.Windows.Interop.ComponentDispatcher" /> is in menu mode.</span></span></summary>
        <value><span data-ttu-id="419b8-132">この <see cref="T:System.Windows.Interop.ComponentDispatcher" /> がメニュー モードの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="419b8-132"><see langword="true" /> if this <see cref="T:System.Windows.Interop.ComponentDispatcher" /> is in menu mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419b8-133"><xref:System.Windows.Input.InputManager.IsInMenuMode%2A> プロパティは、いずれかのメニューが開いている場合に `true` を返します。メニューが開いていない場合は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="419b8-133">The <xref:System.Windows.Input.InputManager.IsInMenuMode%2A> property returns `true` if any menus are open, and it returns `false` if no menus are open.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeaveMenuMode">
      <MemberSignature Language="C#" Value="public event EventHandler LeaveMenuMode;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LeaveMenuMode" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.LeaveMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LeaveMenuMode As EventHandler " FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LeaveMenuMode;" />
      <MemberSignature Language="F#" Value="member this.LeaveMenuMode : EventHandler " Usage="member this.LeaveMenuMode : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event LeaveMenuMode As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-134"><see cref="M:System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)" /> メソッドを呼び出すことで、コントロールがメニュー モードを終了すると発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-134">Occurs when a control leaves menu mode by calling the <see cref="M:System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419b8-135">コンポーネントは、このイベントにデリゲートを登録して、入力マネージャーのメニューモードを離れるコントロールに応答します。</span><span class="sxs-lookup"><span data-stu-id="419b8-135">Components register delegates with this event to respond to a control leaving the input manager's menu mode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MostRecentInputDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputDevice MostRecentInputDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputDevice MostRecentInputDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.MostRecentInputDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MostRecentInputDevice As InputDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputDevice ^ MostRecentInputDevice { System::Windows::Input::InputDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MostRecentInputDevice : System.Windows.Input.InputDevice" Usage="System.Windows.Input.InputManager.MostRecentInputDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-136">最新の入力イベントに関連付けられている入力デバイスを表す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="419b8-136">Gets a value that represents the input device associated with the most recent input event.</span></span></summary>
        <value><span data-ttu-id="419b8-137">入力デバイス。</span><span class="sxs-lookup"><span data-stu-id="419b8-137">The input device.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopMenuMode">
      <MemberSignature Language="C#" Value="public void PopMenuMode (System.Windows.PresentationSource menuSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PopMenuMode(class System.Windows.PresentationSource menuSite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputManager.PopMenuMode(System.Windows.PresentationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PopMenuMode (menuSite As PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PopMenuMode(System::Windows::PresentationSource ^ menuSite);" />
      <MemberSignature Language="F#" Value="member this.PopMenuMode : System.Windows.PresentationSource -&gt; unit" Usage="inputManager.PopMenuMode menuSite" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuSite" Type="System.Windows.PresentationSource" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="menuSite"><span data-ttu-id="419b8-138">終了するメニュー。</span><span class="sxs-lookup"><span data-stu-id="419b8-138">The menu to leave.</span></span></param>
        <summary><span data-ttu-id="419b8-139">メニュー モードを終了するコンポーネントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-139">Called by components to leave menu mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419b8-140">コンポーネントは、このメソッドを呼び出して、入力マネージャーのメニューモードを終了します。</span><span class="sxs-lookup"><span data-stu-id="419b8-140">A component calls this method to leave the input manager's menu mode.</span></span> <span data-ttu-id="419b8-141">`menuSite` は、ウィンドウメッセージへの特権アクセスを解放します。</span><span class="sxs-lookup"><span data-stu-id="419b8-141">The `menuSite` releases privileged access to window messages.</span></span>  
  
 <span data-ttu-id="419b8-142">このメソッドを呼び出すと、開いているメニューの内部カウントがデクリメントされ、最後のメニューで閉じる場合は、<xref:System.Windows.Input.InputManager.IsInMenuMode%2A> プロパティが `false`に設定されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-142">Calling this method causes the internal count of open menus to decrement and sets the <xref:System.Windows.Input.InputManager.IsInMenuMode%2A> property to `false`, if this is the last menu to close.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="419b8-143"><paramref name="menuSite" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="419b8-143"><paramref name="menuSite" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PostNotifyInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.NotifyInputEventHandler PostNotifyInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.NotifyInputEventHandler PostNotifyInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.PostNotifyInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostNotifyInput As NotifyInputEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::NotifyInputEventHandler ^ PostNotifyInput;" />
      <MemberSignature Language="F#" Value="member this.PostNotifyInput : System.Windows.Input.NotifyInputEventHandler " Usage="member this.PostNotifyInput : System.Windows.Input.NotifyInputEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.NotifyInputEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-144"><see cref="E:System.Windows.Input.InputManager.PreNotifyInput" /> ハンドラーが入力の処理を終了し、対応する [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] イベントが発生した後で発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-144">Occurs after the <see cref="E:System.Windows.Input.InputManager.PreNotifyInput" /> handlers have finished processing the input and the corresponding [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] events have been raised.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419b8-145">モニターとは、<xref:System.Windows.Input.InputManager.PreNotifyInput> または <xref:System.Windows.Input.InputManager.PostNotifyInput>をリッスンするコードです。</span><span class="sxs-lookup"><span data-stu-id="419b8-145">A monitor is any code that listens to <xref:System.Windows.Input.InputManager.PreNotifyInput> or <xref:System.Windows.Input.InputManager.PostNotifyInput>.</span></span>  <span data-ttu-id="419b8-146">モニターは入力ステージング領域を変更できません。</span><span class="sxs-lookup"><span data-stu-id="419b8-146">Monitors cannot modify the input staging area.</span></span>  
  
 <span data-ttu-id="419b8-147"><xref:System.Windows.Input.InputManager.PostNotifyInput> にアタッチされたハンドラーは逆の順序で呼び出されるので、ユーザーによって追加されたハンドラーがシステム内のハンドラーの前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-147">The handlers attached to <xref:System.Windows.Input.InputManager.PostNotifyInput> are invoked in reverse order so that handlers added by the users are invoked before handlers in the system.</span></span>  
  
 <span data-ttu-id="419b8-148">入力は、次の段階で [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] で処理されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-148">Input is processed in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] in the follow stages:</span></span>  
  
1.  <span data-ttu-id="419b8-149">プロセス前の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-149">Pre-process stage.</span></span>  <span data-ttu-id="419b8-150">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-150">The input manager raises the <xref:System.Windows.Input.InputManager.PreProcessInput> event.</span></span>  
  
2.  <span data-ttu-id="419b8-151">事前通知段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-151">Pre-notify stage.</span></span>  <span data-ttu-id="419b8-152">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-152">The input manager raises the <xref:System.Windows.Input.InputManager.PreNotifyInput> event.</span></span>  
  
3.  <span data-ttu-id="419b8-153">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 入力イベントまたはイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-153">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input event or events are raised.</span></span>  
  
4.  <span data-ttu-id="419b8-154">通知後の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-154">Post-notify stage.</span></span>  <span data-ttu-id="419b8-155">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-155">The input manager raises the <xref:System.Windows.Input.InputManager.PostNotifyInput> event.</span></span>  
  
5.  <span data-ttu-id="419b8-156">プロセス後の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-156">Post-process stage.</span></span>  <span data-ttu-id="419b8-157">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-157">The input manager raises the <xref:System.Windows.Input.InputManager.PostProcessInput> event.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="419b8-158">イベントハンドラーを追加または削除します。</span><span class="sxs-lookup"><span data-stu-id="419b8-158">for adding or removing an event handler.</span></span>  <span data-ttu-id="419b8-159">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="419b8-159">Associated enumerations: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Input.NotifyInputEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PostProcessInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.ProcessInputEventHandler PostProcessInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.ProcessInputEventHandler PostProcessInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.PostProcessInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PostProcessInput As ProcessInputEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::ProcessInputEventHandler ^ PostProcessInput;" />
      <MemberSignature Language="F#" Value="member this.PostProcessInput : System.Windows.Input.ProcessInputEventHandler " Usage="member this.PostProcessInput : System.Windows.Input.ProcessInputEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ProcessInputEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-160"><see cref="E:System.Windows.Input.InputManager.PreNotifyInput" /> ハンドラーが入力の処理を終了した後で発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-160">Occurs after the <see cref="E:System.Windows.Input.InputManager.PreNotifyInput" /> handlers have finished processing the input.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419b8-161">フィルターは、<xref:System.Windows.Input.InputManager.PreProcessInput> または <xref:System.Windows.Input.InputManager.PostProcessInput>をリッスンする任意のコードです。</span><span class="sxs-lookup"><span data-stu-id="419b8-161">A filter is any code that listens to <xref:System.Windows.Input.InputManager.PreProcessInput> or <xref:System.Windows.Input.InputManager.PostProcessInput>.</span></span>  <span data-ttu-id="419b8-162">フィルターは入力ステージング領域を変更できます。</span><span class="sxs-lookup"><span data-stu-id="419b8-162">Filters can modify the input staging area.</span></span>  
  
 <span data-ttu-id="419b8-163"><xref:System.Windows.Input.InputManager.PostProcessInput> にアタッチされたハンドラーは逆の順序で呼び出されるので、ユーザーによって追加されたハンドラーがシステム内のハンドラーの前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-163">The handlers attached to <xref:System.Windows.Input.InputManager.PostProcessInput> are invoked in reverse order so that handlers added by the users are invoked before handlers in the system.</span></span>  
  
 <span data-ttu-id="419b8-164">入力は、次の段階で [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] で処理されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-164">Input is processed in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] in the follow stages:</span></span>  
  
1.  <span data-ttu-id="419b8-165">プロセス前の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-165">Pre-process stage.</span></span>  <span data-ttu-id="419b8-166">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-166">The input manager raises the <xref:System.Windows.Input.InputManager.PreProcessInput> event.</span></span>  
  
2.  <span data-ttu-id="419b8-167">事前通知段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-167">Pre-notify stage.</span></span>  <span data-ttu-id="419b8-168">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-168">The input manager raises the <xref:System.Windows.Input.InputManager.PreNotifyInput> event.</span></span>  
  
3.  <span data-ttu-id="419b8-169">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 入力イベントまたはイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-169">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input event or events are raised.</span></span>  
  
4.  <span data-ttu-id="419b8-170">通知後の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-170">Post-notify stage.</span></span>  <span data-ttu-id="419b8-171">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-171">The input manager raises the <xref:System.Windows.Input.InputManager.PostNotifyInput> event.</span></span>  
  
5.  <span data-ttu-id="419b8-172">プロセス後の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-172">Post-process stage.</span></span>  <span data-ttu-id="419b8-173">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-173">The input manager raises the <xref:System.Windows.Input.InputManager.PostProcessInput> event.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="419b8-174">イベントハンドラーを追加または削除します。</span><span class="sxs-lookup"><span data-stu-id="419b8-174">for adding or removing an event handler.</span></span> <span data-ttu-id="419b8-175">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="419b8-175">Associated enumerations: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Input.ProcessInputEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PreNotifyInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.NotifyInputEventHandler PreNotifyInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.NotifyInputEventHandler PreNotifyInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.PreNotifyInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreNotifyInput As NotifyInputEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::NotifyInputEventHandler ^ PreNotifyInput;" />
      <MemberSignature Language="F#" Value="member this.PreNotifyInput : System.Windows.Input.NotifyInputEventHandler " Usage="member this.PreNotifyInput : System.Windows.Input.NotifyInputEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.NotifyInputEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-176">入力がキャンセルされなかった場合、<see cref="E:System.Windows.Input.InputManager.PreProcessInput" /> ハンドラーが入力の処理を終了すると発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-176">Occurs when the <see cref="E:System.Windows.Input.InputManager.PreProcessInput" /> handlers have finished processing the input, if the input was not canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419b8-177">モニターとは、<xref:System.Windows.Input.InputManager.PreNotifyInput> または <xref:System.Windows.Input.InputManager.PostNotifyInput>をリッスンするコードです。</span><span class="sxs-lookup"><span data-stu-id="419b8-177">A monitor is any code that listens to <xref:System.Windows.Input.InputManager.PreNotifyInput> or <xref:System.Windows.Input.InputManager.PostNotifyInput>.</span></span>  <span data-ttu-id="419b8-178">モニターは入力ステージング領域を変更できません。</span><span class="sxs-lookup"><span data-stu-id="419b8-178">Monitors cannot modify the input staging area.</span></span>  
  
 <span data-ttu-id="419b8-179"><xref:System.Windows.Input.InputManager.PreNotifyInput> にアタッチされたハンドラーは逆の順序で呼び出されるので、ユーザーによって追加されたハンドラーがシステム内のハンドラーの前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-179">The handlers attached to <xref:System.Windows.Input.InputManager.PreNotifyInput> are invoked in reverse order so that handlers added by the users are invoked before handlers in the system.</span></span>  
  
 <span data-ttu-id="419b8-180">入力は、次の段階で [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] で処理されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-180">Input is processed in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] in the follow stages:</span></span>  
  
1.  <span data-ttu-id="419b8-181">プロセス前の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-181">Pre-process stage.</span></span>  <span data-ttu-id="419b8-182">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-182">The input manager raises the <xref:System.Windows.Input.InputManager.PreProcessInput> event.</span></span>  
  
2.  <span data-ttu-id="419b8-183">事前通知段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-183">Pre-notify stage.</span></span>  <span data-ttu-id="419b8-184">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-184">The input manager raises the <xref:System.Windows.Input.InputManager.PreNotifyInput> event.</span></span>  
  
3.  <span data-ttu-id="419b8-185">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 入力イベントまたはイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-185">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input event or events are raised.</span></span>  
  
4.  <span data-ttu-id="419b8-186">通知後の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-186">Post-notify stage.</span></span>  <span data-ttu-id="419b8-187">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-187">The input manager raises the <xref:System.Windows.Input.InputManager.PostNotifyInput> event.</span></span>  
  
5.  <span data-ttu-id="419b8-188">プロセス後の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-188">Post-process stage.</span></span>  <span data-ttu-id="419b8-189">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-189">The input manager raises the <xref:System.Windows.Input.InputManager.PostProcessInput> event.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="419b8-190">イベントハンドラーを追加または削除します。</span><span class="sxs-lookup"><span data-stu-id="419b8-190">for adding or removing an event handler.</span></span> <span data-ttu-id="419b8-191">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="419b8-191">Associated enumerations: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Input.NotifyInputEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PreProcessInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.PreProcessInputEventHandler PreProcessInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.PreProcessInputEventHandler PreProcessInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.InputManager.PreProcessInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreProcessInput As PreProcessInputEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::PreProcessInputEventHandler ^ PreProcessInput;" />
      <MemberSignature Language="F#" Value="member this.PreProcessInput : System.Windows.Input.PreProcessInputEventHandler " Usage="member this.PreProcessInput : System.Windows.Input.PreProcessInputEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>add: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>remove: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.PreProcessInputEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-192"><see cref="T:System.Windows.Input.InputManager" /> が入力項目の処理を開始すると発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-192">Occurs when the <see cref="T:System.Windows.Input.InputManager" /> starts to process the input item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419b8-193">フィルターは、<xref:System.Windows.Input.InputManager.PreProcessInput> または <xref:System.Windows.Input.InputManager.PostProcessInput>をリッスンする任意のコードです。</span><span class="sxs-lookup"><span data-stu-id="419b8-193">A filter is any code that listens to <xref:System.Windows.Input.InputManager.PreProcessInput> or <xref:System.Windows.Input.InputManager.PostProcessInput>.</span></span>  <span data-ttu-id="419b8-194">フィルターは入力ステージング領域を変更できます。</span><span class="sxs-lookup"><span data-stu-id="419b8-194">Filters can modify the input staging area.</span></span>  
  
 <span data-ttu-id="419b8-195"><xref:System.Windows.Input.InputManager.PreProcessInput> にアタッチされたハンドラーは逆の順序で呼び出されるので、ユーザーによって追加されたハンドラーがシステム内のハンドラーの前に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-195">The handlers attached to <xref:System.Windows.Input.InputManager.PreProcessInput> are invoked in reverse order so that handlers added by the users are invoked before handlers in the system.</span></span>  
  
 <span data-ttu-id="419b8-196"><xref:System.Windows.Input.PreProcessInputEventHandler> に渡された <xref:System.Windows.Input.PreProcessInputEventArgs> に対して <xref:System.Windows.Input.PreProcessInputEventArgs.Cancel%2A> を呼び出すと、入力の処理が取り消されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-196">Calling <xref:System.Windows.Input.PreProcessInputEventArgs.Cancel%2A> on the <xref:System.Windows.Input.PreProcessInputEventArgs> passed to the <xref:System.Windows.Input.PreProcessInputEventHandler> will cancel the processing of the input.</span></span>  
  
 <span data-ttu-id="419b8-197">入力は、次の段階で [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] で処理されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-197">Input is processed in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] in the follow stages:</span></span>  
  
1.  <span data-ttu-id="419b8-198">プロセス前の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-198">Pre-process stage.</span></span>  <span data-ttu-id="419b8-199">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-199">The input manager raises the <xref:System.Windows.Input.InputManager.PreProcessInput> event.</span></span>  
  
2.  <span data-ttu-id="419b8-200">事前通知段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-200">Pre-notify stage.</span></span>  <span data-ttu-id="419b8-201">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-201">The input manager raises the <xref:System.Windows.Input.InputManager.PreNotifyInput> event.</span></span>  
  
3.  <span data-ttu-id="419b8-202">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 入力イベントまたはイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-202">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input event or events are raised.</span></span>  
  
4.  <span data-ttu-id="419b8-203">通知後の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-203">Post-notify stage.</span></span>  <span data-ttu-id="419b8-204">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-204">The input manager raises the <xref:System.Windows.Input.InputManager.PostNotifyInput> event.</span></span>  
  
5.  <span data-ttu-id="419b8-205">プロセス後の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-205">Post-process stage.</span></span>  <span data-ttu-id="419b8-206">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-206">The input manager raises the <xref:System.Windows.Input.InputManager.PostProcessInput> event.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="419b8-207">イベントハンドラーを追加または削除します。</span><span class="sxs-lookup"><span data-stu-id="419b8-207">for adding or removing an event handler.</span></span> <span data-ttu-id="419b8-208">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="419b8-208">Associated enumerations: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Input.PreProcessInputEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyboardDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.KeyboardDevice PrimaryKeyboardDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.KeyboardDevice PrimaryKeyboardDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.PrimaryKeyboardDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryKeyboardDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::KeyboardDevice ^ PrimaryKeyboardDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryKeyboardDevice : System.Windows.Input.KeyboardDevice" Usage="System.Windows.Input.InputManager.PrimaryKeyboardDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-209">プライマリ キーボード デバイスを取得します。</span><span class="sxs-lookup"><span data-stu-id="419b8-209">Gets the primary keyboard device.</span></span></summary>
        <value><span data-ttu-id="419b8-210">キーボード デバイス。</span><span class="sxs-lookup"><span data-stu-id="419b8-210">The keyboard device.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.Keyboard" />
      </Docs>
    </Member>
    <Member MemberName="PrimaryMouseDevice">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseDevice PrimaryMouseDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.MouseDevice PrimaryMouseDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputManager.PrimaryMouseDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryMouseDevice As MouseDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseDevice ^ PrimaryMouseDevice { System::Windows::Input::MouseDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryMouseDevice : System.Windows.Input.MouseDevice" Usage="System.Windows.Input.InputManager.PrimaryMouseDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="419b8-211">プライマリ マウス デバイスを取得します。</span><span class="sxs-lookup"><span data-stu-id="419b8-211">Gets the primary mouse device.</span></span></summary>
        <value><span data-ttu-id="419b8-212">マウス デバイス。</span><span class="sxs-lookup"><span data-stu-id="419b8-212">The mouse device.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ProcessInput">
      <MemberSignature Language="C#" Value="public bool ProcessInput (System.Windows.Input.InputEventArgs input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ProcessInput(class System.Windows.Input.InputEventArgs input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessInput (input As InputEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ProcessInput(System::Windows::Input::InputEventArgs ^ input);" />
      <MemberSignature Language="F#" Value="member this.ProcessInput : System.Windows.Input.InputEventArgs -&gt; bool" Usage="inputManager.ProcessInput input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="419b8-213">処理する入力。</span><span class="sxs-lookup"><span data-stu-id="419b8-213">The input to process.</span></span></param>
        <summary><span data-ttu-id="419b8-214">指定した入力を同期的に処理します。</span><span class="sxs-lookup"><span data-stu-id="419b8-214">Processes the specified input synchronously.</span></span></summary>
        <returns><span data-ttu-id="419b8-215">すべての入力イベントが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="419b8-215"><see langword="true" /> if all input events were handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419b8-216">フィルターは、<xref:System.Windows.Input.InputManager.PreProcessInput> または <xref:System.Windows.Input.InputManager.PostProcessInput>をリッスンする任意のコードです。</span><span class="sxs-lookup"><span data-stu-id="419b8-216">A filter is any code that listens to <xref:System.Windows.Input.InputManager.PreProcessInput> or <xref:System.Windows.Input.InputManager.PostProcessInput>.</span></span>  <span data-ttu-id="419b8-217">フィルターは入力ステージング領域を変更できます。</span><span class="sxs-lookup"><span data-stu-id="419b8-217">Filters can modify the input staging area.</span></span>  
  
 <span data-ttu-id="419b8-218">モニターとは、<xref:System.Windows.Input.InputManager.PreNotifyInput> または <xref:System.Windows.Input.InputManager.PostNotifyInput>をリッスンするコードです。</span><span class="sxs-lookup"><span data-stu-id="419b8-218">A monitor is any code that listens to <xref:System.Windows.Input.InputManager.PreNotifyInput> or <xref:System.Windows.Input.InputManager.PostNotifyInput>.</span></span>  <span data-ttu-id="419b8-219">モニターは入力ステージング領域を変更できません。</span><span class="sxs-lookup"><span data-stu-id="419b8-219">Monitors cannot modify the input staging area.</span></span>  
  
 <span data-ttu-id="419b8-220">指定された入力はすべてのフィルターとモニターによって処理され、最終的に入力イベントとして適切な要素にディスパッチされます。</span><span class="sxs-lookup"><span data-stu-id="419b8-220">The specified input is processed by all the filters and monitors and is finally dispatched to the appropriate element as an input event.</span></span>  
  
 <span data-ttu-id="419b8-221">入力は、次の段階で [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] で処理されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-221">Input is processed in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] in the follow stages:</span></span>  
  
1.  <span data-ttu-id="419b8-222">プロセス前の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-222">Pre-process stage.</span></span>  <span data-ttu-id="419b8-223">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-223">The input manager raises the <xref:System.Windows.Input.InputManager.PreProcessInput> event.</span></span>  
  
2.  <span data-ttu-id="419b8-224">事前通知段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-224">Pre-notify stage.</span></span>  <span data-ttu-id="419b8-225">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PreNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-225">The input manager raises the <xref:System.Windows.Input.InputManager.PreNotifyInput> event.</span></span>  
  
3.  <span data-ttu-id="419b8-226">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 入力イベントまたはイベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-226">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] input event or events are raised.</span></span>  
  
4.  <span data-ttu-id="419b8-227">通知後の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-227">Post-notify stage.</span></span>  <span data-ttu-id="419b8-228">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostNotifyInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-228">The input manager raises the <xref:System.Windows.Input.InputManager.PostNotifyInput> event.</span></span>  
  
5.  <span data-ttu-id="419b8-229">プロセス後の段階。</span><span class="sxs-lookup"><span data-stu-id="419b8-229">Post-process stage.</span></span>  <span data-ttu-id="419b8-230">入力マネージャーによって、<xref:System.Windows.Input.InputManager.PostProcessInput> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="419b8-230">The input manager raises the <xref:System.Windows.Input.InputManager.PostProcessInput> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="419b8-231"><paramref name="input" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="419b8-231"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="419b8-232">指定された入力を処理します。</span><span class="sxs-lookup"><span data-stu-id="419b8-232">for processing the specified input.</span></span> <span data-ttu-id="419b8-233">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="419b8-233">Associated enumerations: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PushMenuMode">
      <MemberSignature Language="C#" Value="public void PushMenuMode (System.Windows.PresentationSource menuSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushMenuMode(class System.Windows.PresentationSource menuSite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputManager.PushMenuMode(System.Windows.PresentationSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushMenuMode (menuSite As PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushMenuMode(System::Windows::PresentationSource ^ menuSite);" />
      <MemberSignature Language="F#" Value="member this.PushMenuMode : System.Windows.PresentationSource -&gt; unit" Usage="inputManager.PushMenuMode menuSite" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menuSite" Type="System.Windows.PresentationSource" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="menuSite"><span data-ttu-id="419b8-234">開始するメニュー。</span><span class="sxs-lookup"><span data-stu-id="419b8-234">The menu to enter.</span></span></param>
        <summary><span data-ttu-id="419b8-235">メニュー モードを開始するコンポーネントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="419b8-235">Called by components to enter menu mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="419b8-236">コンポーネントは、このメソッドを呼び出して、入力マネージャーのメニューモードに入ります。</span><span class="sxs-lookup"><span data-stu-id="419b8-236">A component calls this method to enter the input manager's menu mode.</span></span> <span data-ttu-id="419b8-237">`menuSite` は、ウィンドウメッセージへの特権アクセスを取得します。</span><span class="sxs-lookup"><span data-stu-id="419b8-237">The `menuSite` gets privileged access to window messages.</span></span> <span data-ttu-id="419b8-238">このメソッドを呼び出すと、開いているメニューの内部数が増加し、<xref:System.Windows.Input.InputManager.IsInMenuMode%2A> プロパティが `true`に設定されます (これが最初に開いたメニューの場合)。</span><span class="sxs-lookup"><span data-stu-id="419b8-238">Calling this method causes the internal count of open menus to increment and sets the <xref:System.Windows.Input.InputManager.IsInMenuMode%2A> property to `true`, if this is the first menu to open.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="419b8-239"><paramref name="menuSite" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="419b8-239"><paramref name="menuSite" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
