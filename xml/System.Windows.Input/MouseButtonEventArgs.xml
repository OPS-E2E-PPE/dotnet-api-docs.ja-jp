<Type Name="MouseButtonEventArgs" FullName="System.Windows.Input.MouseButtonEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="52c968c17a1bfa1c05874852456cde587a0c22a7" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78840838" /></Metadata><TypeSignature Language="C#" Value="public class MouseButtonEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseButtonEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseButtonEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseButtonEventArgs&#xA;Inherits MouseEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseButtonEventArgs : System::Windows::Input::MouseEventArgs" />
  <TypeSignature Language="F#" Value="type MouseButtonEventArgs = class&#xA;    inherit MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>マウス ボタン関連イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.MouseButtonEventArgs> は、<xref:System.Windows.Input.Mouse.MouseDown>、<xref:System.Windows.Input.Mouse.MouseUp>、<xref:System.Windows.UIElement.MouseLeftButtonDown>、<xref:System.Windows.UIElement.MouseLeftButtonUp>、<xref:System.Windows.UIElement.MouseRightButtonDown>、<xref:System.Windows.UIElement.MouseRightButtonUp>、および対応するトンネリングイベントで使用されます。  
  
 <xref:System.Windows.Input.Mouse> クラスには、マウスの状態を判断するための追加のプロパティとメソッドが用意されています。  
  
   
  
## Examples  
 次の例では、イベントを発生させたオブジェクトの色を変更するマウスボタンイベントハンドラーを作成します。  選択した色は、押されたマウスボタンによって異なります。  <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> プロパティがチェックされ、どのボタンが押されたかが判断されます。  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargschangedbutton)]
 [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargschangedbutton)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseEventArgs" />
    <altmember cref="T:System.Windows.Input.MouseEventHandler" />
    <altmember cref="T:System.Windows.Input.MouseButtonState" />
    <altmember cref="T:System.Windows.Input.MouseAction" />
    <altmember cref="T:System.Windows.Input.Mouse" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Input.MouseButtonEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, valuetype System.Windows.Input.MouseButton button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, button As MouseButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseButtonEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, System::Windows::Input::MouseButton button);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseButtonEventArgs : System.Windows.Input.MouseDevice * int * System.Windows.Input.MouseButton -&gt; System.Windows.Input.MouseButtonEventArgs" Usage="new System.Windows.Input.MouseButtonEventArgs (mouse, timestamp, button)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Input.MouseButton" />
      </Parameters>
      <Docs>
        <param name="mouse">このイベントに関連付けられた論理マウス デバイス。</param>
        <param name="timestamp">入力が発生した時刻。</param>
        <param name="button">状態が記述されているマウス ボタン。</param>
        <summary>指定した <see cref="T:System.Windows.Input.MouseButtonEventArgs" />、タイム スタンプ、および <see cref="T:System.Windows.Input.MouseDevice" /> を使用して <see cref="T:System.Windows.Input.MouseButton" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseButtonEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, System.Windows.Input.MouseButton button, System.Windows.Input.StylusDevice stylusDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, valuetype System.Windows.Input.MouseButton button, class System.Windows.Input.StylusDevice stylusDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, button As MouseButton, stylusDevice As StylusDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseButtonEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, System::Windows::Input::MouseButton button, System::Windows::Input::StylusDevice ^ stylusDevice);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.MouseButtonEventArgs : System.Windows.Input.MouseDevice * int * System.Windows.Input.MouseButton * System.Windows.Input.StylusDevice -&gt; System.Windows.Input.MouseButtonEventArgs" Usage="new System.Windows.Input.MouseButtonEventArgs (mouse, timestamp, button, stylusDevice)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="button" Type="System.Windows.Input.MouseButton" />
        <Parameter Name="stylusDevice" Type="System.Windows.Input.StylusDevice" />
      </Parameters>
      <Docs>
        <param name="mouse">このイベントに関連付けられた論理マウス デバイス。</param>
        <param name="timestamp">イベントが発生した時刻。</param>
        <param name="button">このイベントに関連付けられたボタン。</param>
        <param name="stylusDevice">このイベントに関連付けられたスタイラス デバイス。</param>
        <summary>指定した <see cref="T:System.Windows.Input.MouseButtonEventArgs" />、タイム スタンプ、<see cref="T:System.Windows.Input.MouseDevice" />、および <see cref="T:System.Windows.Input.MouseButton" /> を使用して <see cref="T:System.Windows.Input.StylusDevice" /> クラスの新しいインスタンスを初期化します。  。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ButtonState">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState ButtonState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState ButtonState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ButtonState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ButtonState As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState ButtonState { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.ButtonState : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.MouseButtonEventArgs.ButtonState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イベントに関連付けられているボタンの状態を取得します。</summary>
        <value>ボタンの状態。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Mouse> クラスには、マウスの状態を判断するための追加のプロパティとメソッドが用意されています。  
  
   
  
## Examples  
 次の例では、イベントを処理するオブジェクトの色を変更するマウスボタンイベントハンドラーを作成します。  選択される色は、マウスボタンが押されたか、または離されたかによって異なります。  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsButtonStatePressed](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargsbuttonstatepressed)]
 [!code-vb[mousesnippetsample#MouseEventArgsButtonStatePressed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargsbuttonstatepressed)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ChangedButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButton ChangedButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButton ChangedButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ChangedButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangedButton As MouseButton" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButton ChangedButton { System::Windows::Input::MouseButton get(); };" />
      <MemberSignature Language="F#" Value="member this.ChangedButton : System.Windows.Input.MouseButton" Usage="System.Windows.Input.MouseButtonEventArgs.ChangedButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButton</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>イベントに関連付けられているボタンを取得します。</summary>
        <value>押されたボタン。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.Mouse> クラスには、マウスの状態を判断するための追加のプロパティとメソッドが用意されています。  
  
   
  
## Examples  
 次の例では、マウスボタンのイベントハンドラーを作成し、押されたマウスボタンに応じてオブジェクトの色を変更します。  <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> プロパティがチェックされ、どのボタンが押されたかが判断されます。  
  
 [!code-csharp[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseeventargschangedbutton)]
 [!code-vb[mousesnippetsample#MouseEventArgsChangedButton](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseeventargschangedbutton)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="ClickCount">
      <MemberSignature Language="C#" Value="public int ClickCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClickCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseButtonEventArgs.ClickCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClickCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClickCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClickCount : int" Usage="System.Windows.Input.MouseButtonEventArgs.ClickCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ボタンがクリックされた回数を取得します。</summary>
        <value>マウス ボタンがクリックされた回数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> の使用方法の1つは、マウスのダブルクリックが発生したかどうかを判断することです。  一部のクラスでは、ダブルクリックのイベント (<xref:System.Windows.Controls.Control> クラスの <xref:System.Windows.Controls.Control.MouseDoubleClick> イベントなど) を公開しています。 ダブルクリックイベントがクラスで公開されていない場合、イベントデータの <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> プロパティを使用してダブルクリックを検出できます。  
  
   
  
## Examples  
 次の例では、1、2、またはトリプルクリックが発生したかどうかを決定する <xref:System.Windows.Input.MouseButtonEventHandler> を作成します。  <xref:System.Windows.Input.MouseButtonEventArgs.ClickCount%2A> プロパティは、クリック数を決定するために使用されます。  
  
 [!code-csharp[mousesnippetsample#MouseClickCountDoubleClick](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mouseclickcountdoubleclick)]
 [!code-vb[mousesnippetsample#MouseClickCountDoubleClick](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mouseclickcountdoubleclick)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseButtonEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="mouseButtonEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">型固有の方法で呼び出しを行うジェネリック ハンドラー。</param>
        <param name="genericTarget">ハンドラーを呼び出す対象。</param>
        <summary>型固有の方法でイベント ハンドラーを呼び出します。これにより、イベント システムの効率を高めることができます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この実装は、ジェネリックハンドラーを <xref:System.Windows.Input.MouseEventHandler> としてキャストしてから呼び出します。 この実装パターンとその理由の詳細については、「<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> および[ルーティングイベントの概要](~/docs/framework/wpf/advanced/routed-events-overview.md)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseEventArgs" />
        <altmember cref="T:System.Windows.Input.MouseEventHandler" />
        <altmember cref="T:System.Windows.Input.MouseButtonState" />
        <altmember cref="T:System.Windows.Input.MouseAction" />
        <altmember cref="T:System.Windows.Input.Mouse" />
      </Docs>
    </Member>
  </Members>
</Type>
