<Type Name="StylusPoint" FullName="System.Windows.Input.StylusPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3613e64c318164bc09e557cb606890d946de6a1e" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78831868" /></Metadata><TypeSignature Language="C#" Value="public struct StylusPoint : IEquatable&lt;System.Windows.Input.StylusPoint&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit StylusPoint extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Input.StylusPoint&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.StylusPoint" />
  <TypeSignature Language="VB.NET" Value="Public Structure StylusPoint&#xA;Implements IEquatable(Of StylusPoint)" />
  <TypeSignature Language="C++ CLI" Value="public value class StylusPoint : IEquatable&lt;System::Windows::Input::StylusPoint&gt;" />
  <TypeSignature Language="F#" Value="type StylusPoint = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Input.StylusPoint&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>デジタイザーとスタイラスから収集された単一のデータ ポイントを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.StylusPoint> は、ユーザーがデジタイザーを使用してインクを入力したときにデータを収集します。 デジタイザーによって報告される情報は製造元によって異なるため、<xref:System.Windows.Input.StylusPoint> 内のプロパティは異なる場合があります。 プロパティが <xref:System.Windows.Input.StylusPoint>に存在するかどうかを判断するには、<xref:System.Windows.Input.StylusPoint.HasProperty%2A> メソッドを呼び出します。 <xref:System.Windows.Input.StylusPoint.Description%2A> プロパティには、<xref:System.Windows.Input.StylusPoint>に含まれるプロパティを指定する <xref:System.Windows.Input.StylusPointDescription> が含まれています。 すべての <xref:System.Windows.Input.StylusPoint> オブジェクトには、(x, y) 座標を指定するプロパティ、および圧力が含まれます。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Input.StylusPointCollection>内の各 <xref:System.Windows.Input.StylusPoint> のプロパティ名と値を取得します。 この例では、`packetOutput`と呼ばれる <xref:System.Windows.Controls.TextBlock> があることを前提としています。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Windows.Input.StylusPoint" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPoint(double x, double y);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.StylusPoint : double * double -&gt; System.Windows.Input.StylusPoint" Usage="new System.Windows.Input.StylusPoint (x, y)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><see cref="T:System.Windows.Input.StylusPoint" /> の x 座標。</param>
        <param name="y"><see cref="T:System.Windows.Input.StylusPoint" /> の y 座標。</param>
        <summary>指定した (x, y) 座標を使用して、<see cref="T:System.Windows.Input.StylusPoint" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、<xref:System.Windows.Input.StylusPoint>を作成する方法を示します。  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y, float pressureFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float32 pressureFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, pressureFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPoint(double x, double y, float pressureFactor);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.StylusPoint : double * double * single -&gt; System.Windows.Input.StylusPoint" Usage="new System.Windows.Input.StylusPoint (x, y, pressureFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="pressureFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><see cref="T:System.Windows.Input.StylusPoint" /> の x 座標。</param>
        <param name="y"><see cref="T:System.Windows.Input.StylusPoint" /> の y 座標。</param>
        <param name="pressureFactor"><see cref="T:System.Windows.Input.StylusPoint" /> に加わる圧力の大きさ。</param>
        <summary>指定した (x, y) 座標と圧力を使用して、<see cref="T:System.Windows.Input.StylusPoint" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `pressureFactor` には、0 ~ 1 の範囲の値を指定する必要があります。 値0は圧力が適用されていないことを示します。値1は、最大の圧力が適用されることを示します。 値0.5 は、最大圧力の50% が適用されることを示します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Input.StylusPoint>を作成する方法を示します。  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="pressureFactor" /> が 0 より小さいか、または 1 を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StylusPoint (double x, double y, float pressureFactor, System.Windows.Input.StylusPointDescription stylusPointDescription, int[] additionalValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float32 pressureFactor, class System.Windows.Input.StylusPointDescription stylusPointDescription, int32[] additionalValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.#ctor(System.Double,System.Double,System.Single,System.Windows.Input.StylusPointDescription,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, pressureFactor As Single, stylusPointDescription As StylusPointDescription, additionalValues As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StylusPoint(double x, double y, float pressureFactor, System::Windows::Input::StylusPointDescription ^ stylusPointDescription, cli::array &lt;int&gt; ^ additionalValues);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.StylusPoint : double * double * single * System.Windows.Input.StylusPointDescription * int[] -&gt; System.Windows.Input.StylusPoint" Usage="new System.Windows.Input.StylusPoint (x, y, pressureFactor, stylusPointDescription, additionalValues)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="pressureFactor" Type="System.Single" />
        <Parameter Name="stylusPointDescription" Type="System.Windows.Input.StylusPointDescription" />
        <Parameter Name="additionalValues" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="x"><see cref="T:System.Windows.Input.StylusPoint" /> の x 座標。</param>
        <param name="y"><see cref="T:System.Windows.Input.StylusPoint" /> の y 座標。</param>
        <param name="pressureFactor"><see cref="T:System.Windows.Input.StylusPoint" /> に加わる圧力の大きさ。</param>
        <param name="stylusPointDescription"><see cref="T:System.Windows.Input.StylusPointDescription" /> に格納されている追加のプロパティを指定する <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <param name="additionalValues"><paramref name="stylusPointDescription" /> で定義されたプロパティの値を含む、32 ビット符号付き整数の配列。</param>
        <summary>指定された (x, y) 座標、<see cref="T:System.Windows.Input.StylusPoint" />、および <paramref name="pressureFactor" /> で指定された追加のパラメーターを使用して、<see cref="T:System.Windows.Input.StylusPointDescription" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、<xref:System.Windows.Input.StylusPoint>を作成する方法を示します。  
  
 [!code-csharp[PacketSpy#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#5)]
 [!code-vb[PacketSpy#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="pressureFactor" /> が 0 より小さいか、または 1 を超えています。  
  
または 
ボタン プロパティに対応する <paramref name="additionalValues" /> の値が、0 でも 1 でもありません。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="additionalValues" /> の値の数が、<paramref name="stylusPointDescription" /> のプロパティの数から 3 を引いた値と一致しません。</exception>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public System.Windows.Input.StylusPointDescription Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPointDescription Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As StylusPointDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::StylusPointDescription ^ Description { System::Windows::Input::StylusPointDescription ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : System.Windows.Input.StylusPointDescription" Usage="System.Windows.Input.StylusPoint.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPointDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Input.StylusPointDescription" /> に格納するプロパティを指定する <see cref="T:System.Windows.Input.StylusPoint" /> を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Input.StylusPointDescription" /> に格納するプロパティを指定する <see cref="T:System.Windows.Input.StylusPoint" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、<xref:System.Windows.Input.StylusPoint.Description%2A> プロパティを使用して、<xref:System.Windows.Input.StylusPointCollection>内の <xref:System.Windows.Input.StylusPoint> からプロパティ値を取得します。 この例では、`packetOutput`と呼ばれる <xref:System.Windows.Controls.TextBlock> があることを前提としています。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>2 つの <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトが等しいかどうかを比較します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="stylusPoint.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">現在の <see cref="T:System.Windows.Input.StylusPoint" /> と比較する <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>指定したオブジェクトが、<see cref="T:System.Windows.Input.StylusPoint" /> に等しいかどうかを示す値を返します。</summary>
        <returns>オブジェクトが等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、2つの <xref:System.Windows.Input.StylusPoint> オブジェクトが等しいかどうかをチェックします。 `point1` および `point2` の <xref:System.Windows.Input.StylusPoint.X%2A>、<xref:System.Windows.Input.StylusPoint.Y%2A>、および <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティは同じ値に設定されているため、"2 つの System.windows.input.styluspoint> オブジェクトは等しい" となります。 メッセージが表示されます。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#7](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#7)]
[!code-vb[PacketSpy#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Input.StylusPoint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Input.StylusPoint value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Input::StylusPoint value);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Input.StylusPoint -&gt; bool" Usage="stylusPoint.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="value">現在の <see cref="T:System.Windows.Input.StylusPoint" /> と比較する <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>指定した <see cref="T:System.Windows.Input.StylusPoint" /> が現在の <see cref="T:System.Windows.Input.StylusPoint" /> に等しいかどうかを示すブール値を返します。</summary>
        <returns><see langword="true" /> オブジェクトが等しい場合は <see cref="T:System.Windows.Input.StylusPoint" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、2つの <xref:System.Windows.Input.StylusPoint> オブジェクトが等しいかどうかをチェックします。 `point1` および `point2` の <xref:System.Windows.Input.StylusPoint.X%2A>、<xref:System.Windows.Input.StylusPoint.Y%2A>、および <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティは同じ値に設定されているため、"2 つの System.windows.input.styluspoint> オブジェクトは等しい" となります。 メッセージが表示されます。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#7](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#7)]
[!code-vb[PacketSpy#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.Equals(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (stylusPoint1 As StylusPoint, stylusPoint2 As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Input::StylusPoint stylusPoint1, System::Windows::Input::StylusPoint stylusPoint2);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Input.StylusPoint * System.Windows.Input.StylusPoint -&gt; bool" Usage="System.Windows.Input.StylusPoint.Equals (stylusPoint1, stylusPoint2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">比較対象となる最初の <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <param name="stylusPoint2">比較対象となる 2 番目の <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>指定した 2 つの <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトが等しいかどうかを示すブール値を返します。</summary>
        <returns><see langword="true" /> オブジェクトが等しい場合は <see cref="T:System.Windows.Input.StylusPoint" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、2つの <xref:System.Windows.Input.StylusPoint> オブジェクトが等しいかどうかをチェックします。 `point1` および `point2` の <xref:System.Windows.Input.StylusPoint.X%2A>、<xref:System.Windows.Input.StylusPoint.Y%2A>、および <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティは同じ値に設定されているため、"2 つの System.windows.input.styluspoint> オブジェクトは等しい" となります。 メッセージが表示されます。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#8](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#8)]
[!code-vb[PacketSpy#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="stylusPoint.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このインスタンスのハッシュ コードを返します。</summary>
        <returns>このインスタンスの 32 ビット符号付き整数のハッシュ コードです。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public int GetPropertyValue (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPropertyValue(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.GetPropertyValue(System.Windows.Input.StylusPointProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (stylusPointProperty As StylusPointProperty) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetPropertyValue(System::Windows::Input::StylusPointProperty ^ stylusPointProperty);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : System.Windows.Input.StylusPointProperty -&gt; int" Usage="stylusPoint.GetPropertyValue stylusPointProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">取得するプロパティ値を指定する <see cref="T:System.Windows.Input.StylusPointProperty" />。</param>
        <summary>指定したプロパティの値を返します。</summary>
        <returns>指定した <see cref="T:System.Windows.Input.StylusPointProperty" /> の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定したプロパティが <xref:System.Windows.Input.StylusPoint> に含まれているかどうかを確認するには、<xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A> メソッドまたは <xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A> メソッドを呼び出す前に <xref:System.Windows.Input.StylusPoint.HasProperty%2A> を呼び出します。  
  
   
  
## Examples  
 次の例では、プロパティの値を取得する前に、スタイラスポイントプロパティが存在するかどうかを確認します。 この例では、`point`と呼ばれる <xref:System.Windows.Input.StylusPoint> があることを前提としています。  
  
 [!code-csharp[PacketSpy#11](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#11)]
 [!code-vb[PacketSpy#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stylusPointProperty" /> が <see cref="P:System.Windows.Input.StylusPoint.Description" /> のプロパティの 1 つではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="HasProperty">
      <MemberSignature Language="C#" Value="public bool HasProperty (System.Windows.Input.StylusPointProperty stylusPointProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasProperty(class System.Windows.Input.StylusPointProperty stylusPointProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.HasProperty(System.Windows.Input.StylusPointProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasProperty (stylusPointProperty As StylusPointProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasProperty(System::Windows::Input::StylusPointProperty ^ stylusPointProperty);" />
      <MemberSignature Language="F#" Value="member this.HasProperty : System.Windows.Input.StylusPointProperty -&gt; bool" Usage="stylusPoint.HasProperty stylusPointProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty"><see cref="T:System.Windows.Input.StylusPointProperty" /> でのチェック対象となる <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>現在の <see cref="T:System.Windows.Input.StylusPoint" /> に指定したプロパティが含まれているかどうかを返します。</summary>
        <returns>指定した <see langword="true" /> が現在の <see cref="T:System.Windows.Input.StylusPointProperty" /> にある場合は <see cref="T:System.Windows.Input.StylusPoint" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定したプロパティが <xref:System.Windows.Input.StylusPoint> に含まれているかどうかを確認するには、<xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A> メソッドまたは <xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A> メソッドを呼び出す前に <xref:System.Windows.Input.StylusPoint.HasProperty%2A> を呼び出します。  
  
   
  
## Examples  
 次の例では、プロパティの値を取得する前に、スタイラスポイントプロパティが存在するかどうかを確認します。 この例では、`point`と呼ばれる <xref:System.Windows.Input.StylusPoint> があることを前提としています。  
  
 [!code-csharp[PacketSpy#11](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#11)]
 [!code-vb[PacketSpy#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxXY">
      <MemberSignature Language="C#" Value="public static readonly double MaxXY;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaxXY" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.StylusPoint.MaxXY" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxXY As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaxXY;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxXY : double" Usage="System.Windows.Input.StylusPoint.MaxXY" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>(x,y) 座標ペアに対して有効な最大値を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、<xref:System.Windows.Input.StylusPoint> の <xref:System.Windows.Input.StylusPoint.X%2A> プロパティが有効な値に設定されていることを確認します。  
  
 [!code-csharp[PacketSpy#14](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#14)]
 [!code-vb[PacketSpy#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinXY">
      <MemberSignature Language="C#" Value="public static readonly double MinXY;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MinXY" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.StylusPoint.MinXY" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinXY As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MinXY;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinXY : double" Usage="System.Windows.Input.StylusPoint.MinXY" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>(x,y) 座標ペアに対して有効な最小値を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、<xref:System.Windows.Input.StylusPoint> の <xref:System.Windows.Input.StylusPoint.X%2A> プロパティが有効な値に設定されていることを確認します。  
  
 [!code-csharp[PacketSpy#14](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#14)]
 [!code-vb[PacketSpy#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Equality(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (stylusPoint1 As StylusPoint, stylusPoint2 As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Input::StylusPoint stylusPoint1, System::Windows::Input::StylusPoint stylusPoint2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Input.StylusPoint * System.Windows.Input.StylusPoint -&gt; bool" Usage="stylusPoint1 = stylusPoint2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">比較対象となる最初の <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <param name="stylusPoint2">比較対象となる 2 番目の <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>指定した 2 つの <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトを比較し、それらが等しいかどうかを確認します。</summary>
        <returns><see langword="true" /> オブジェクトが等しい場合は <see cref="T:System.Windows.Input.StylusPoint" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[この演算子の同等のメソッドは <xref:System.Windows.Input.StylusPoint.Equals%28System.Windows.Input.StylusPoint%2CSystem.Windows.Input.StylusPoint%29?displayProperty=nameWithType>  
  
## Examples  
 次の例では、2つの <xref:System.Windows.Input.StylusPoint> オブジェクトが等しいかどうかをチェックします。 `point1` および `point2` の <xref:System.Windows.Input.StylusPoint.X%2A>、<xref:System.Windows.Input.StylusPoint.Y%2A>、および <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティは同じ値に設定されているため、"2 つの System.windows.input.styluspoint> オブジェクトは等しい" となります。 メッセージが表示されます。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#9](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#9)]
[!code-vb[PacketSpy#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Windows.Point (System.Windows.Input.StylusPoint stylusPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Windows.Point op_Explicit(valuetype System.Windows.Input.StylusPoint stylusPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Explicit(System.Windows.Input.StylusPoint)~System.Windows.Point" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (stylusPoint As StylusPoint) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Windows::Point(System::Windows::Input::StylusPoint stylusPoint);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Windows.Input.StylusPoint -&gt; System.Windows.Point" Usage="System.Windows.Input.StylusPoint.op_Explicit stylusPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint"><see cref="T:System.Windows.Input.StylusPoint" /> にキャストする <see cref="T:System.Windows.Point" />。</param>
        <summary>指定した <see cref="T:System.Windows.Input.StylusPoint" /> を <see cref="T:System.Windows.Point" /> にキャストします。</summary>
        <returns><see cref="T:System.Windows.Point" /> と同じ (x,y) 座標を含む <paramref name="stylusPoint" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[次の例は、<xref:System.Windows.Input.StylusPoint> を <xref:System.Windows.Point> オブジェクトにキャストして、すべてのストロークの先頭に円を描画する方法を示しています。 この例では、`inkcanvas1` という <xref:System.Windows.Controls.InkCanvas> オブジェクトがあり、<xref:System.Windows.UIElement.StylusDown> イベントが例のイベントハンドラーに接続されていることを前提としています。

           [!code-csharp[PacketSpy#13](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#13)]
           [!code-vb[PacketSpy#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#13)]  

           ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Input.StylusPoint stylusPoint1, System.Windows.Input.StylusPoint stylusPoint2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Input.StylusPoint stylusPoint1, valuetype System.Windows.Input.StylusPoint stylusPoint2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.op_Inequality(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (stylusPoint1 As StylusPoint, stylusPoint2 As StylusPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Input::StylusPoint stylusPoint1, System::Windows::Input::StylusPoint stylusPoint2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Input.StylusPoint * System.Windows.Input.StylusPoint -&gt; bool" Usage="System.Windows.Input.StylusPoint.op_Inequality (stylusPoint1, stylusPoint2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPoint1" Type="System.Windows.Input.StylusPoint" />
        <Parameter Name="stylusPoint2" Type="System.Windows.Input.StylusPoint" />
      </Parameters>
      <Docs>
        <param name="stylusPoint1">比較対象となる最初の <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <param name="stylusPoint2">比較対象となる 2 番目の <see cref="T:System.Windows.Input.StylusPoint" />。</param>
        <summary>指定した <see cref="T:System.Windows.Input.StylusPoint" /> オブジェクトが等しいかどうかを示すブール値を返します。</summary>
        <returns>指定した <see langword="true" /> オブジェクトが等しくない場合は <see cref="T:System.Windows.Input.StylusPoint" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[この演算子の同等のメソッドは、<xref:System.Windows.Input.StylusPoint.Equals%2A> を否定したものです。  
  
## Examples  
 次の例では、2つの <xref:System.Windows.Input.StylusPoint> オブジェクトの非等値をチェックする方法を示します。 `point1` および `point2` の <xref:System.Windows.Input.StylusPoint.X%2A>、<xref:System.Windows.Input.StylusPoint.Y%2A>、および <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティは同じ値に設定されているため、"2 つの System.windows.input.styluspoint> オブジェクトは等しい" となります。 メッセージが表示されます。  
  
 [!code-csharp[PacketSpy#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#6)]
 [!code-vb[PacketSpy#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#6)]  
[!code-csharp[PacketSpy#10](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#10)]
[!code-vb[PacketSpy#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PressureFactor">
      <MemberSignature Language="C#" Value="public float PressureFactor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PressureFactor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.PressureFactor" />
      <MemberSignature Language="VB.NET" Value="Public Property PressureFactor As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float PressureFactor { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.PressureFactor : single with get, set" Usage="System.Windows.Input.StylusPoint.PressureFactor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Input.StylusPoint" /> が作成されたときに、スタイラスがデジタイザーのサーフェイスに適用する圧力の量を表す 0 ～ 1 の値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Input.StylusPoint" /> が作成されるときに、スタイラスがデジタイザーのサーフェイスに適用する圧力の量を表す 0 ～ 1 の値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティの値は、0 ~ 1 の値で表されます。 値0は圧力が適用されていないことを示します。値1は、最大の圧力が適用されることを示します。 値0.5 は、最大圧力の50% が適用されることを示します。  
  
   
  
## Examples  
 次の例では、<xref:System.Windows.Input.StylusPoint.PressureFactor%2A> プロパティを使用して、`points`と呼ばれる <xref:System.Windows.Input.StylusPointCollection> 内の各 <xref:System.Windows.Input.StylusPoint> の圧力値を取得して表示します。 この例では、`packetOutput`と呼ばれる <xref:System.Windows.Controls.TextBlock> があることを前提としています。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Windows.Input.StylusPoint.PressureFactor" /> プロパティが、0 未満または 1 より大きい値に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (System.Windows.Input.StylusPointProperty stylusPointProperty, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(class System.Windows.Input.StylusPointProperty stylusPointProperty, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.SetPropertyValue(System.Windows.Input.StylusPointProperty,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPropertyValue (stylusPointProperty As StylusPointProperty, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyValue(System::Windows::Input::StylusPointProperty ^ stylusPointProperty, int value);" />
      <MemberSignature Language="F#" Value="member this.SetPropertyValue : System.Windows.Input.StylusPointProperty * int -&gt; unit" Usage="stylusPoint.SetPropertyValue (stylusPointProperty, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stylusPointProperty" Type="System.Windows.Input.StylusPointProperty" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stylusPointProperty">設定するプロパティ値を指定する <see cref="T:System.Windows.Input.StylusPointProperty" />。</param>
        <param name="value">プロパティの値。</param>
        <summary>指定したプロパティを指定した値に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定したプロパティが <xref:System.Windows.Input.StylusPoint> に含まれているかどうかを確認するには、<xref:System.Windows.Input.StylusPoint.GetPropertyValue%2A> メソッドまたは <xref:System.Windows.Input.StylusPoint.SetPropertyValue%2A> メソッドを呼び出す前に <xref:System.Windows.Input.StylusPoint.HasProperty%2A> を呼び出します。  
  
   
  
## Examples  
 次の例では、プロパティの値を設定する前に、スタイラスポイントプロパティが存在するかどうかを確認します。 この例では、`point`と呼ばれる <xref:System.Windows.Input.StylusPoint> があることを前提としています。  
  
 [!code-csharp[PacketSpy#12](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#12)]
 [!code-vb[PacketSpy#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stylusPointProperty" /> が <see cref="P:System.Windows.Input.StylusPoint.Description" /> のプロパティの 1 つではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point ToPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point ToPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.StylusPoint.ToPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function ToPoint () As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point ToPoint();" />
      <MemberSignature Language="F#" Value="member this.ToPoint : unit -&gt; System.Windows.Point" Usage="stylusPoint.ToPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Windows.Input.StylusPoint" /> を <see cref="T:System.Windows.Point" />に変換します。</summary>
        <returns><see cref="T:System.Windows.Point" /> 構造。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.X : double with get, set" Usage="System.Windows.Input.StylusPoint.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Input.StylusPoint" /> の x 座標の値を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Input.StylusPoint" /> の x 座標。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、<xref:System.Windows.Input.StylusPointCollection>内の各 <xref:System.Windows.Input.StylusPoint> の <xref:System.Windows.Input.StylusPoint.X%2A> プロパティを取得します。 この例では、`packetOutput`と呼ばれる <xref:System.Windows.Controls.TextBlock> があることを前提としています。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.StylusPoint.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Y : double with get, set" Usage="System.Windows.Input.StylusPoint.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Windows.Input.StylusPoint" /> の y 座標を取得または設定します。</summary>
        <value><see cref="T:System.Windows.Input.StylusPoint" /> の y 座標。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、<xref:System.Windows.Input.StylusPointCollection>内の各 <xref:System.Windows.Input.StylusPoint> の <xref:System.Windows.Input.StylusPoint.Y%2A> プロパティを取得します。 この例では、`packetOutput`と呼ばれる <xref:System.Windows.Controls.TextBlock> があることを前提としています。  
  
 [!code-csharp[PacketSpy#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#3)]
 [!code-vb[PacketSpy#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#3)]  
[!code-csharp[PacketSpy#4](~/samples/snippets/csharp/VS_Snippets_Wpf/PacketSpy/CSharp/Window1.xaml.cs#4)]
[!code-vb[PacketSpy#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PacketSpy/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
