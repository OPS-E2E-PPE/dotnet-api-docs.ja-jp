<Type Name="ManipulationDelta" FullName="System.Windows.Input.ManipulationDelta">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f149a7abdd46889431245360b1b4c20481e0d2d6" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82496606" /></Metadata><TypeSignature Language="C#" Value="public class ManipulationDelta" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManipulationDelta extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationDelta" />
  <TypeSignature Language="VB.NET" Value="Public Class ManipulationDelta" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationDelta" />
  <TypeSignature Language="F#" Value="type ManipulationDelta = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>操作イベントが発生するときに蓄積される変換データを格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta> クラスには、操作の位置の変更に関する情報が含まれています。  [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] は、変更を <xref:System.Windows.Input.ManipulationDelta.Translation%2A>、<xref:System.Windows.Input.ManipulationDelta.Expansion%2A>、または <xref:System.Windows.Input.ManipulationDelta.Rotation%2A>として解釈します。 <xref:System.Windows.UIElement>で <xref:System.Windows.UIElement.ManipulationDelta> イベントが発生した場合は、<xref:System.Windows.Input.ManipulationDelta> オブジェクトのプロパティを使用して、操作する必要があるオブジェクトを変換します。  <xref:System.Windows.Input.ManipulationDeltaEventArgs> クラスは、<xref:System.Windows.Input.ManipulationDelta>型の2つのプロパティ <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> および <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A>を提供します。  
  
 操作の詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」を参照してください。  操作に応答するアプリケーションの例については、「[チュートリアル: 初めてのタッチアプリケーションの作成](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)」を参照してください。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.UIElement.ManipulationDelta> イベントのイベントハンドラーを示しています。  この例では、<xref:System.Windows.Input.ManipulationDelta.Translation%2A>、<xref:System.Windows.Input.ManipulationDelta.Scale%2A>、および <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> プロパティを適用して、<xref:System.Windows.Shapes.Rectangle>の移動、サイズ変更、および回転を行います。 この例は、 [「チュートリアル: 初めてのタッチアプリケーションの作成](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)」の大規模な例の一部です。  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManipulationDelta (System.Windows.Vector translation, double rotation, System.Windows.Vector scale, System.Windows.Vector expansion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Vector translation, float64 rotation, valuetype System.Windows.Vector scale, valuetype System.Windows.Vector expansion) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDelta.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector,System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (translation As Vector, rotation As Double, scale As Vector, expansion As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManipulationDelta(System::Windows::Vector translation, double rotation, System::Windows::Vector scale, System::Windows::Vector expansion);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.ManipulationDelta : System.Windows.Vector * double * System.Windows.Vector * System.Windows.Vector -&gt; System.Windows.Input.ManipulationDelta" Usage="new System.Windows.Input.ManipulationDelta (translation, rotation, scale, expansion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="translation" Type="System.Windows.Vector" />
        <Parameter Name="rotation" Type="System.Double" />
        <Parameter Name="scale" Type="System.Windows.Vector" />
        <Parameter Name="expansion" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="translation">操作の直線的な動き ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)])。</param>
        <param name="rotation">操作の回転 (度単位)。</param>
        <param name="scale">乗数としての操作によるサイズ変更量。</param>
        <param name="expansion">操作によるサイズ変更量 ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)])。</param>
        <summary><see cref="T:System.Windows.Input.ManipulationDelta" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expansion">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Expansion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Expansion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Expansion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expansion As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Expansion { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Expansion : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Expansion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>操作によるサイズ変更量 ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]) を取得または設定します。</summary>
        <value>操作によるサイズ変更量 ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)])。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta.Scale%2A> プロパティと <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> プロパティはどちらもサイズ変更操作を報告します。  2つの違いは、値が報告される方法です。  <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> プロパティは [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]のサイズ変更操作を報告します。 <xref:System.Windows.Input.ManipulationDelta.Scale%2A> プロパティは、値を乗数として報告します。  <xref:System.Windows.Input.ManipulationDelta.Scale%2A> が0.5 の場合、操作は50% によってサイズが小さくなるように解釈されます。  <xref:System.Windows.Input.ManipulationDelta.Scale%2A> が2の場合、操作はサイズが100% 増加していると解釈されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public double Rotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Rotation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Rotation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rotation As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Rotation { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Rotation : double" Usage="System.Windows.Input.ManipulationDelta.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>操作の回転 (度単位) を取得または設定します。</summary>
        <value>操作の回転 (度単位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> プロパティは、操作が軸の周りの回転として解釈される方法を報告します。  通常、軸は、操作を開始した2つのコンタクトポイント間のポイントです。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.UIElement.ManipulationDelta> イベントのイベントハンドラーを示しています。  この例では、<xref:System.Windows.Input.ManipulationDelta.Translation%2A>、<xref:System.Windows.Input.ManipulationDelta.Scale%2A>、および <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> プロパティを適用して、<xref:System.Windows.Shapes.Rectangle>の移動、サイズ変更、および回転を行います。 この例は、 [「チュートリアル: 初めてのタッチアプリケーションの作成](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)」の大規模な例の一部です。  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Scale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Scale" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Scale" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scale As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Scale { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Scale : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>乗数としての操作によるサイズ変更量を取得または設定します。</summary>
        <value>操作によるサイズ変更量。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta.Scale%2A> プロパティと <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> プロパティはどちらもサイズ変更操作を報告します。  2つの違いは、値が報告される方法です。  <xref:System.Windows.Input.ManipulationDelta.Scale%2A> プロパティは、値を乗数として報告します。  <xref:System.Windows.Input.ManipulationDelta.Scale%2A> が0.5 の場合、操作は50% によってサイズが小さくなるように解釈されます。  <xref:System.Windows.Input.ManipulationDelta.Scale%2A> が2の場合、操作はサイズが100% 増加していると解釈されます。 <xref:System.Windows.Input.ManipulationDelta.Expansion%2A> プロパティは [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]のサイズ変更操作を報告します。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.UIElement.ManipulationDelta> イベントのイベントハンドラーを示しています。  この例では、<xref:System.Windows.Input.ManipulationDelta.Translation%2A>、<xref:System.Windows.Input.ManipulationDelta.Scale%2A>、および <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> プロパティを適用して、<xref:System.Windows.Shapes.Rectangle>の移動、サイズ変更、および回転を行います。 この例は、 [「チュートリアル: 初めてのタッチアプリケーションの作成](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)」の大規模な例の一部です。  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translation">
      <MemberSignature Language="C#" Value="public System.Windows.Vector Translation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Vector Translation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDelta.Translation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Translation As Vector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Vector Translation { System::Windows::Vector get(); };" />
      <MemberSignature Language="F#" Value="member this.Translation : System.Windows.Vector" Usage="System.Windows.Input.ManipulationDelta.Translation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Vector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>操作の直線的な動きを取得または設定します。</summary>
        <value>操作の直線的な動き ([!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)])。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ManipulationDelta.Translation%2A> プロパティは、操作が画面上で水平方向および垂直方向に移動すると解釈される方法を報告します。  
  
   
  
## Examples  
 次の例は、<xref:System.Windows.UIElement.ManipulationDelta> イベントのイベントハンドラーを示しています。  この例では、<xref:System.Windows.Input.ManipulationDelta.Translation%2A>、<xref:System.Windows.Input.ManipulationDelta.Scale%2A>、および <xref:System.Windows.Input.ManipulationDelta.Rotation%2A> プロパティを適用して、<xref:System.Windows.Shapes.Rectangle>の移動、サイズ変更、および回転を行います。 この例は、 [「チュートリアル: 初めてのタッチアプリケーションの作成](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md)」の大規模な例の一部です。  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
