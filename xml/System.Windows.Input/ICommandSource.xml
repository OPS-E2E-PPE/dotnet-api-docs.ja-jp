<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c0b746aaab742af0c3df79ff8271961c4127a73" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82497347" /></Metadata><TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <TypeSignature Language="F#" Value="type ICommandSource = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="bcdcf-101">コマンドの呼び出し方法を認識しているオブジェクトを定義します。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-101">Defines an object that knows how to invoke a command.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdcf-102">コマンドソースは、特定のオブジェクトによってコマンドが呼び出される方法を定義します。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-102">The command source defines how a command is invoked by that particular object.</span></span>  <span data-ttu-id="bcdcf-103">たとえば、<xref:System.Windows.Controls.Button> がコマンドに関連付けられている場合、<xref:System.Windows.Controls.Button> がクリックされると、コマンドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-103">For example, if a <xref:System.Windows.Controls.Button> is associated with a command, the command is invoked when the <xref:System.Windows.Controls.Button> is clicked.</span></span>  
  
 <span data-ttu-id="bcdcf-104">コマンドソースは、関連付けられているコマンドが現在のコマンドターゲットで実行できない場合、通常は自動的に無効になります。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-104">A command source will normally disable itself if the command it is associated with cannot execute on the current command target.</span></span>  <span data-ttu-id="bcdcf-105">たとえば、<xref:System.Windows.Input.ApplicationCommands.Paste%2A> コマンドに関連付けられている <xref:System.Windows.Controls.MenuItem> は、現在のコマンドターゲットで <xref:System.Windows.Input.ApplicationCommands.Paste%2A> コマンドを実行できないときにグレーで表示されます。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-105">For example, a <xref:System.Windows.Controls.MenuItem> associated with the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command will gray itself out when the <xref:System.Windows.Input.ApplicationCommands.Paste%2A> command cannot execute on the current command target.</span></span>  
  
 <span data-ttu-id="bcdcf-106">通常、コマンドソースは、コマンドの <xref:System.Windows.Input.ICommand.CanExecuteChanged> イベントをリッスンします。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-106">Normally, a command source will listen to the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event on the command.</span></span>  <span data-ttu-id="bcdcf-107">これは、コマンドターゲットで条件が変化したときに、キーボードフォーカスが失われた場合などに、コマンドソースに通知します。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-107">This informs the command source when conditions change on the command target, such as loss of keyboard focus.</span></span>  <span data-ttu-id="bcdcf-108">コマンドソースは、<xref:System.Windows.Input.ICommand.CanExecute%2A> メソッドを使用してコマンドに対してクエリを実行できます。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-108">The command source can then query the command using the <xref:System.Windows.Input.ICommand.CanExecute%2A> method.</span></span>  
  
 <span data-ttu-id="bcdcf-109"><xref:System.Windows.Input.ICommandSource> を実装する [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] のクラスには、<xref:System.Windows.Controls.Primitives.ButtonBase>、<xref:System.Windows.Controls.MenuItem>、および <xref:System.Windows.Documents.Hyperlink>があります。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-109">Some of the classes in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that implement <xref:System.Windows.Input.ICommandSource> are: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, and <xref:System.Windows.Documents.Hyperlink>.</span></span>  
  
 <span data-ttu-id="bcdcf-110">Windows Presentation Foundation のコマンドシステムでは、<xref:System.Windows.Input.ICommand> が <xref:System.Windows.Input.RoutedCommand>の場合にのみ、<xref:System.Windows.Input.ICommandSource> の <xref:System.Windows.Input.InputBinding.CommandTarget%2A> プロパティが適用されます。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-110">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="bcdcf-111"><xref:System.Windows.Input.InputBinding.CommandTarget%2A> が <xref:System.Windows.Input.ICommandSource> に設定されていて、対応するコマンドが <xref:System.Windows.Input.RoutedCommand>でない場合、コマンドターゲットは無視されます。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-111">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.ICommandSource.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcdcf-112">コマンド ソースが呼び出されたときに実行されるコマンドを取得します。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-112">Gets the command that will be executed when the command source is invoked.</span></span></summary>
        <value><span data-ttu-id="bcdcf-113">コマンド ソースが呼び出されたときに実行されるコマンド。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-113">The command that will be executed when the command source is invoked.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj" Usage="System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcdcf-114">実行時にコマンドに渡すことができるユーザー定義のデータ値を表します。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-114">Represents a user defined data value that can be passed to the command when it is executed.</span></span></summary>
        <value><span data-ttu-id="bcdcf-115">コマンド固有のデータです。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-115">The command specific data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdcf-116">通常、<xref:System.Windows.Input.ICommandSource.CommandParameter%2A> は、実行時に特定の情報をコマンドに渡すために使用されます。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-116">Normally, the <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> is used to pass specific information to the command when it is executed.</span></span>  <span data-ttu-id="bcdcf-117">データの型は、コマンドで定義されます。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-117">The type of the data is defined by the command.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement" Usage="System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bcdcf-118">コマンドが実行されているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-118">The object that the command is being executed on.</span></span></summary>
        <value><span data-ttu-id="bcdcf-119">コマンドが実行されているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-119">The object that the command is being executed on.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bcdcf-120">Windows Presentation Foundation のコマンドシステムでは、<xref:System.Windows.Input.ICommand> が <xref:System.Windows.Input.RoutedCommand>の場合にのみ、<xref:System.Windows.Input.ICommandSource> の <xref:System.Windows.Input.InputBinding.CommandTarget%2A> プロパティが適用されます。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-120">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on a <xref:System.Windows.Input.ICommandSource> is only applicable when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="bcdcf-121"><xref:System.Windows.Input.InputBinding.CommandTarget%2A> が <xref:System.Windows.Input.ICommandSource> に設定されていて、対応するコマンドが <xref:System.Windows.Input.RoutedCommand>でない場合、コマンドターゲットは無視されます。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-121">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on a <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 <span data-ttu-id="bcdcf-122"><xref:System.Windows.Input.RoutedCommand>と共に使用する場合、コマンドターゲットは、<xref:System.Windows.Input.CommandManager.Executed> イベントと <xref:System.Windows.Input.CommandManager.CanExecute> イベントが発生する対象のオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-122">When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised.</span></span> <span data-ttu-id="bcdcf-123"><xref:System.Windows.Input.ICommandSource.CommandTarget%2A> プロパティが設定されていない場合、キーボードフォーカスを持つ要素がターゲットとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="bcdcf-123">If the <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> property is not set, the element with keyboard focus will be used as the target.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>
