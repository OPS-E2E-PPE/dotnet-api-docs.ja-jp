<Type Name="Touch" FullName="System.Windows.Input.Touch">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b16fc0697f9b0758dbf93ec191a05c08d5bb4a29" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82296841" /></Metadata><TypeSignature Language="C#" Value="public static class Touch" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Touch extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Touch" />
  <TypeSignature Language="VB.NET" Value="Public Class Touch" />
  <TypeSignature Language="C++ CLI" Value="public ref class Touch abstract sealed" />
  <TypeSignature Language="F#" Value="type Touch = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="804bc-101">オペレーティング システムからのマルチタッチ入力を処理し、<see cref="E:System.Windows.Input.Touch.FrameReported" /> イベントを生成するアプリケーション レベルのサービスを提供します。</span><span class="sxs-lookup"><span data-stu-id="804bc-101">Provides an application-level service that processes multitouch input from the operating system and raises the <see cref="E:System.Windows.Input.Touch.FrameReported" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="804bc-102"><xref:System.Windows.Input.Touch.FrameReported> イベントは、Silverlight との互換性をサポートするために [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] に含まれています。</span><span class="sxs-lookup"><span data-stu-id="804bc-102">The <xref:System.Windows.Input.Touch.FrameReported> event is included in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] to support compatibility with Silverlight.</span></span> <span data-ttu-id="804bc-103">Silverlight との互換性を確保する必要がない場合は、<xref:System.Windows.UIElement.TouchDown> や <xref:System.Windows.UIElement.TouchMove>などのタッチイベントを <xref:System.Windows.UIElement>、<xref:System.Windows.UIElement3D>、または <xref:System.Windows.ContentElement>で使用します。</span><span class="sxs-lookup"><span data-stu-id="804bc-103">If you do not have to ensure compatibility with Silverlight, use the touch events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>, on <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, or <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="804bc-104"><xref:System.Windows.Input.Touch.FrameReported> イベントでは、<xref:System.Windows.UIElement.TouchDown> や <xref:System.Windows.UIElement.TouchMove>などの他の WPF 入力イベントと同じイベントモデルは使用されません。</span><span class="sxs-lookup"><span data-stu-id="804bc-104">The <xref:System.Windows.Input.Touch.FrameReported> event does not use the same event model as other WPF input events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>.</span></span> <span data-ttu-id="804bc-105"><xref:System.Windows.Input.Touch.FrameReported> イベントは、UI のオブジェクトツリーを通じてルーティングされる可能性がある要素固有のイベントとして公開される代わりに、アプリケーションレベルで処理される1つのイベントです。</span><span class="sxs-lookup"><span data-stu-id="804bc-105">Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <xref:System.Windows.Input.Touch.FrameReported> event is a single event that is handled at the application level.</span></span> <span data-ttu-id="804bc-106">したがって、イベントハンドラーの `sender` パラメーターを使用して、どの要素にタッチされるかを判断することはできません。</span><span class="sxs-lookup"><span data-stu-id="804bc-106">Therefore, you cannot use the `sender` parameter of the event handler to determine what element is touched.</span></span>  
  
 <span data-ttu-id="804bc-107">タッチイベントに関連する <xref:System.Windows.Input.TouchPoint> 値を取得するには、<xref:System.Windows.Input.TouchFrameEventArgs> を使用します。</span><span class="sxs-lookup"><span data-stu-id="804bc-107">Use the <xref:System.Windows.Input.TouchFrameEventArgs> to get the <xref:System.Windows.Input.TouchPoint> values that are relevant to the touch event.</span></span> <span data-ttu-id="804bc-108"><xref:System.Windows.Input.TouchPoint>から、タッチの <xref:System.Windows.Input.TouchPoint.Position%2A> を取得し、<xref:System.Windows.Input.TouchAction> が <xref:System.Windows.Input.TouchAction.Down>、<xref:System.Windows.Input.TouchAction.Move>、または <xref:System.Windows.Input.TouchAction.Up> アクションであるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="804bc-108">From the <xref:System.Windows.Input.TouchPoint>, you can get the <xref:System.Windows.Input.TouchPoint.Position%2A> of the touch and determine whether the <xref:System.Windows.Input.TouchAction> was a <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, or <xref:System.Windows.Input.TouchAction.Up> action.</span></span> <span data-ttu-id="804bc-109">また、<xref:System.Windows.Input.TouchPoint> を使用して <xref:System.Windows.Input.TouchDevice>を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="804bc-109">You can also use the <xref:System.Windows.Input.TouchPoint> to get the <xref:System.Windows.Input.TouchDevice>.</span></span> <span data-ttu-id="804bc-110"><xref:System.Windows.Input.TouchDevice>から、デバイス <xref:System.Windows.Input.TouchDevice.Id%2A> を確認し、タッチされた要素に関する情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="804bc-110">From the <xref:System.Windows.Input.TouchDevice>, you can determine the device <xref:System.Windows.Input.TouchDevice.Id%2A> and get information about the element that is touched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="804bc-111">次の例では、タッチスクリーン上で2本の指をドラッグして、<xref:System.Windows.Controls.Canvas> に単純なパターンを作成できます。</span><span class="sxs-lookup"><span data-stu-id="804bc-111">The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers across a touchscreen.</span></span> <span data-ttu-id="804bc-112">各タッチは、<xref:System.Windows.Input.TouchDevice>によって表されます。</span><span class="sxs-lookup"><span data-stu-id="804bc-112">Each touch is represented by a <xref:System.Windows.Input.TouchDevice>.</span></span> <span data-ttu-id="804bc-113">このパターンは、触れることによって提供されるタッチポイント間に線を描画することによって作成されます。</span><span class="sxs-lookup"><span data-stu-id="804bc-113">The pattern is created by drawing a line between the touch points provided by the touches.</span></span> <span data-ttu-id="804bc-114">この例では、Windows タッチ互換画面が必要です。</span><span class="sxs-lookup"><span data-stu-id="804bc-114">This example requires a Windows Touch-compatible screen.</span></span>  
  
 <span data-ttu-id="804bc-115">次のマークアップは、<xref:System.Windows.Controls.Grid>の中央にある <xref:System.Windows.Controls.Canvas> で構成されるユーザーインターフェイスを作成します。</span><span class="sxs-lookup"><span data-stu-id="804bc-115">The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a <xref:System.Windows.Controls.Grid>.</span></span>  
  
 [!code-xaml[TouchFrameSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml#000)]  
  
 <span data-ttu-id="804bc-116">次のコードは、<xref:System.Windows.Input.Touch.FrameReported> イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="804bc-116">The following code handles the <xref:System.Windows.Input.Touch.FrameReported> event.</span></span> <span data-ttu-id="804bc-117"><xref:System.Windows.Controls.Canvas>でタッチを押すと、<xref:System.Windows.Input.TouchDevice> が <xref:System.Windows.Controls.Canvas>にキャプチャされます。</span><span class="sxs-lookup"><span data-stu-id="804bc-117">When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="804bc-118">タッチが解除されると、<xref:System.Windows.Input.TouchDevice> が解放されます。</span><span class="sxs-lookup"><span data-stu-id="804bc-118">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="804bc-119"><xref:System.Windows.Controls.Canvas>上でタッチが移動すると、<xref:System.Windows.Input.TouchDevice.Id%2A> が確認されます。</span><span class="sxs-lookup"><span data-stu-id="804bc-119">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="804bc-120">最初のタッチから移動した場合は、その場所が記録されます。</span><span class="sxs-lookup"><span data-stu-id="804bc-120">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="804bc-121">2番目のタッチから移動した場合は、最初のタッチの位置から2番目のタッチの位置まで線が描画されます。</span><span class="sxs-lookup"><span data-stu-id="804bc-121">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 [!code-csharp[TouchFrameSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchFrameSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FrameReported">
      <MemberSignature Language="C#" Value="public static event System.Windows.Input.TouchFrameEventHandler FrameReported;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TouchFrameEventHandler FrameReported" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Touch.FrameReported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event FrameReported As TouchFrameEventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Input::TouchFrameEventHandler ^ FrameReported;" />
      <MemberSignature Language="F#" Value="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " Usage="member this.FrameReported : System.Windows.Input.TouchFrameEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Shared Event FrameReported As TouchFrameEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchFrameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="804bc-122">タッチ メッセージが送信されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="804bc-122">Occurs when a touch message is sent.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="804bc-123">フレームは、一連のマルチタッチメッセージまたはタッチポイントの1つです。</span><span class="sxs-lookup"><span data-stu-id="804bc-123">A frame is one in a series of multitouch messages or touch points.</span></span> <span data-ttu-id="804bc-124"><xref:System.Windows.Input.Touch.FrameReported> イベントを処理し、<xref:System.Windows.Input.TouchFrameEventArgs> イベントデータから <xref:System.Windows.Input.TouchPoint> の詳細にアクセスすることによって、への応答を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="804bc-124">You can respond to touches by handling the <xref:System.Windows.Input.Touch.FrameReported> event and accessing the details of the <xref:System.Windows.Input.TouchPoint> from the <xref:System.Windows.Input.TouchFrameEventArgs> event data.</span></span>  
  
 <span data-ttu-id="804bc-125"><xref:System.Windows.Input.Touch.FrameReported> イベントでは、<xref:System.Windows.UIElement.TouchDown> や <xref:System.Windows.UIElement.TouchMove>などの他の [!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] 入力イベントと同じイベントモデルは使用されません。</span><span class="sxs-lookup"><span data-stu-id="804bc-125">The <xref:System.Windows.Input.Touch.FrameReported> event does not use the same event model as other [!INCLUDE[TLA#tla_titlewinclient](~/includes/tlasharptla-titlewinclient-md.md)] input events, such as <xref:System.Windows.UIElement.TouchDown> and <xref:System.Windows.UIElement.TouchMove>.</span></span> <span data-ttu-id="804bc-126"><xref:System.Windows.Input.Touch.FrameReported> イベントは、UI のオブジェクトツリーを通じてルーティングされる可能性がある要素固有のイベントとして公開される代わりに、アプリケーションレベルで処理される1つのイベントです。</span><span class="sxs-lookup"><span data-stu-id="804bc-126">Instead of being exposed as an element-specific event that potentially routes through the object tree of a UI, the <xref:System.Windows.Input.Touch.FrameReported> event is a single event that is handled at the application level.</span></span> <span data-ttu-id="804bc-127">したがって、イベントハンドラーの `sender` パラメーターを使用して、どの要素にタッチされるかを判断することはできません。</span><span class="sxs-lookup"><span data-stu-id="804bc-127">Therefore, you cannot use the `sender` parameter of the event handler to determine what element is touched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="804bc-128">次の例では、<xref:System.Windows.Input.Touch.FrameReported> イベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="804bc-128">The following example handles the <xref:System.Windows.Input.Touch.FrameReported> event.</span></span> <span data-ttu-id="804bc-129"><xref:System.Windows.Controls.Canvas>でタッチを押すと、<xref:System.Windows.Input.TouchDevice> が <xref:System.Windows.Controls.Canvas>にキャプチャされます。</span><span class="sxs-lookup"><span data-stu-id="804bc-129">When a touch presses on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="804bc-130">タッチが解除されると、<xref:System.Windows.Input.TouchDevice> が解放されます。</span><span class="sxs-lookup"><span data-stu-id="804bc-130">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="804bc-131"><xref:System.Windows.Controls.Canvas>上でタッチが移動すると、<xref:System.Windows.Input.TouchDevice.Id%2A> が確認されます。</span><span class="sxs-lookup"><span data-stu-id="804bc-131">When a touch moves across the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="804bc-132">最初のタッチから移動した場合は、その場所が記録されます。</span><span class="sxs-lookup"><span data-stu-id="804bc-132">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="804bc-133">2番目のタッチから移動した場合は、最初のタッチの位置から2番目のタッチの位置まで線が描画されます。</span><span class="sxs-lookup"><span data-stu-id="804bc-133">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="804bc-134">この例は、<xref:System.Windows.Input.Touch> クラスの概要で使用できる大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="804bc-134">This example is part of a larger example that is available in the <xref:System.Windows.Input.Touch> class overview.</span></span>  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
