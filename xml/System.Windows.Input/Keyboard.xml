<Type Name="Keyboard" FullName="System.Windows.Input.Keyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1997f0ce8dbb8cafc8ea0f4de19dfc8fe2534af" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78831998" /></Metadata><TypeSignature Language="C#" Value="public static class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard abstract sealed" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5963f-101">キーボード デバイスを表します。</span><span class="sxs-lookup"><span data-stu-id="5963f-101">Represents the keyboard device.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-102"><xref:System.Windows.Input.Keyboard> クラスは、キーボードの状態に関する情報を提供するキーボード関連のイベント、メソッド、およびプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-102">The <xref:System.Windows.Input.Keyboard> class provides keyboard-related events, methods, and properties that provide information regarding the state of the keyboard.</span></span>  
  
 <span data-ttu-id="5963f-103"><xref:System.Windows.Input.Keyboard> が添付イベントとして定義する各イベントは、基本要素クラスによっても再公開され <xref:System.Windows.UIElement>、新しいルーティングイベントとして <xref:System.Windows.ContentElement> ます。</span><span class="sxs-lookup"><span data-stu-id="5963f-103">Each of the events that <xref:System.Windows.Input.Keyboard> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="5963f-104">一般に、<xref:System.Windows.Input.Keyboard> イベントを使用するのではなく、<xref:System.Windows.UIElement> と <xref:System.Windows.ContentElement>でアプリケーションのキーボードイベントを処理する方が便利です。</span><span class="sxs-lookup"><span data-stu-id="5963f-104">Generally, it is more convenient to handle keyboard events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Keyboard> events.</span></span> <span data-ttu-id="5963f-105">詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="5963f-106">要素がキーボード入力を受け取るには、要素にフォーカスを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5963f-106">In order for an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="5963f-107">既定では、ほとんどの <xref:System.Windows.UIElement> 派生オブジェクトにフォーカスを設定できます。</span><span class="sxs-lookup"><span data-stu-id="5963f-107">Most <xref:System.Windows.UIElement> derived objects are focusable by default.</span></span> <span data-ttu-id="5963f-108">それ以外の場合は、要素をフォーカスできるようにするには、基本要素の <xref:System.Windows.UIElement.Focusable%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="5963f-108">Otherwise, to make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="5963f-109">基本要素の詳細については、「[基本要素の概要](~/docs/framework/wpf/advanced/base-elements-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-109">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 <span data-ttu-id="5963f-110"><xref:System.Windows.Controls.StackPanel> や <xref:System.Windows.Controls.Canvas>などの <xref:System.Windows.Controls.Panel> クラスでは、<xref:System.Windows.UIElement.Focusable%2A> の既定値を `false`に設定します。</span><span class="sxs-lookup"><span data-stu-id="5963f-110"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`.</span></span> <span data-ttu-id="5963f-111">そのため、これらのオブジェクトでキーボードフォーカスを取得するには、<xref:System.Windows.UIElement.Focusable%2A> を `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5963f-111">Therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="5963f-112">キーボードフォーカスは、キーボード入力を受け取るオブジェクトを参照します。</span><span class="sxs-lookup"><span data-stu-id="5963f-112">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="5963f-113">キーボードフォーカスを持つ要素が `true`に <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> 設定されています。</span><span class="sxs-lookup"><span data-stu-id="5963f-113">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="5963f-114">キーボードフォーカスを持つ要素は、デスクトップ全体に1つだけ存在できます。</span><span class="sxs-lookup"><span data-stu-id="5963f-114">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="5963f-115">論理フォーカスとは、フォーカスがあるフォーカススコープ内のオブジェクトを指します。</span><span class="sxs-lookup"><span data-stu-id="5963f-115">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="5963f-116">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」と「[フォーカスの概要](~/docs/framework/wpf/advanced/focus-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-116">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="5963f-117"><xref:System.Windows.Input.Keyboard> クラスの静的メンバーは、呼び出し元スレッドのプライマリ <xref:System.Windows.Input.KeyboardDevice> に委任されるため、必ずしもスレッドセーフであるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="5963f-117">The static members of the <xref:System.Windows.Input.Keyboard> class delegate to the primary <xref:System.Windows.Input.KeyboardDevice> of the calling thread, so they are not necessarily thread-safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5963f-118">次の例は、<xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> メソッドを使用して、キーが切り替えられた状態かどうかを判断する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="5963f-118">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine if a key is in the toggled state.</span></span> <span data-ttu-id="5963f-119"><xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> に渡された <xref:System.Windows.Input.Key> が切り替えられると、ボタンの背景が変わります。</span><span class="sxs-lookup"><span data-stu-id="5963f-119">If the <xref:System.Windows.Input.Key> passed to <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> is toggled, the background of a button is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
    <altmember cref="T:System.Windows.Input.KeyEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="AddGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-120">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-120">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-121">追加するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-121">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="5963f-122"><see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="5963f-122">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-123">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> イベントのコードアクセスおよび [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 属性処理に対して、添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-123">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-124">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-124">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-125">追加するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-125">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="5963f-126"><see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="5963f-126">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-127">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> イベントのコードアクセスおよび [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 属性処理に対して、添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-127">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-128">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-129">追加するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-129">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="5963f-130"><see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="5963f-130">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-131">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> イベントのコードアクセスおよび [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 属性処理に対して、添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-131">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-132">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-132">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-133">追加するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-133">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="5963f-134"><see cref="E:System.Windows.Input.Keyboard.KeyUp" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="5963f-134">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-135">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> イベントのコードアクセスおよび [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 属性処理に対して、添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-135">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-136">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-136">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-137">追加するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-137">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="5963f-138"><see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="5963f-138">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-139">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> イベントのコードアクセスおよび [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 属性処理に対して、添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-139">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-140">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-141">追加するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-141">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="5963f-142"><see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="5963f-142">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-143">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> イベントのコードアクセスおよび [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 属性処理に対して、添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-143">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-144">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-144">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-145">追加するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-145">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="5963f-146"><see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="5963f-146">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-147">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> イベントのコードアクセスおよび [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 属性処理に対して、添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-147">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-148">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-148">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-149">追加するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-149">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="5963f-150"><see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="5963f-150">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-151">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> イベントのコードアクセスおよび [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 属性処理に対して、添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-151">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-152">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-153">追加するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-153">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="5963f-154"><see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="5963f-154">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-155">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> イベントのコードアクセスおよび [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 属性処理に対して、添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-155">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-156">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-156">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-157">追加するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-157">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="5963f-158"><see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="5963f-158">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-159">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> イベントのコードアクセスおよび [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 属性処理に対して、添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-159">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFocus">
      <MemberSignature Language="C#" Value="public static void ClearFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.ClearFocus" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearFocus();" />
      <MemberSignature Language="F#" Value="static member ClearFocus : unit -&gt; unit" Usage="System.Windows.Input.Keyboard.ClearFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5963f-160">フォーカスをクリアします。</span><span class="sxs-lookup"><span data-stu-id="5963f-160">Clears focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-161">フォーカスが Win32 ウィンドウ内にある場合、WPF はメニューが閉じられると、フォーカスの復元時に <xref:System.Windows.Input.Keyboard.ClearFocus%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5963f-161">If focus is within a Win32 window, WPF calls the <xref:System.Windows.Input.Keyboard.ClearFocus%2A> method on restoration of focus when a menu is closed.</span></span>  
  
 <span data-ttu-id="5963f-162">メニューモードを終了すると、ホストされている子 HWND に Win32 フォーカスが戻り、WPF フォーカスを持つ要素は存在しません。</span><span class="sxs-lookup"><span data-stu-id="5963f-162">When leaving menu mode, Win32 focus is returned to the hosted child HWND, and no element has WPF focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRestoreFocusMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultRestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RestoreFocusMode DefaultRestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRestoreFocusMode : System.Windows.Input.RestoreFocusMode with get, set" Usage="System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-163">フォーカスを復元するときの [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] の動作を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5963f-163">Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] when restoring focus.</span></span></summary>
        <value><span data-ttu-id="5963f-164">フォーカスを復元するときの [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] の動作を指定する列挙値。</span><span class="sxs-lookup"><span data-stu-id="5963f-164">An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus.</span></span> <span data-ttu-id="5963f-165">既定値は、<see cref="F:System.Windows.Input.RestoreFocusMode.Auto" /> です。</span><span class="sxs-lookup"><span data-stu-id="5963f-165">The default in <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Focus (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement Focus(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Focus (element As IInputElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ Focus(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Focus : System.Windows.IInputElement -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.Focus element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-166">キーボード フォーカスの設定対象の要素。</span><span class="sxs-lookup"><span data-stu-id="5963f-166">The element on which to set keyboard focus.</span></span></param>
        <summary><span data-ttu-id="5963f-167">指定した要素にキーボード フォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="5963f-167">Sets keyboard focus on the specified element.</span></span></summary>
        <returns><span data-ttu-id="5963f-168">キーボード フォーカスを持つ要素。</span><span class="sxs-lookup"><span data-stu-id="5963f-168">The element with keyboard focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-169">要素がキーボード入力を受け取るには、要素にフォーカスを設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5963f-169">For an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="5963f-170">要素にフォーカスを設定できるようにするには、基本要素の <xref:System.Windows.UIElement.Focusable%2A> プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="5963f-170">To make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="5963f-171">基本要素の詳細については、「[基本要素の概要](~/docs/framework/wpf/advanced/base-elements-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-171">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  <span data-ttu-id="5963f-172"><xref:System.Windows.Controls.StackPanel> や <xref:System.Windows.Controls.Canvas>などの <xref:System.Windows.Controls.Panel> クラスでは、<xref:System.Windows.UIElement.Focusable%2A> の既定値を `false`に設定します。そのため、これらのオブジェクトでキーボードフォーカスを取得するには、<xref:System.Windows.UIElement.Focusable%2A> を `true`に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5963f-172"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`; therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="5963f-173">キーボードフォーカスは、キーボード入力を受け取るオブジェクトを参照します。</span><span class="sxs-lookup"><span data-stu-id="5963f-173">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="5963f-174">キーボードフォーカスを持つ要素が `true`に <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> 設定されています。</span><span class="sxs-lookup"><span data-stu-id="5963f-174">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="5963f-175">キーボードフォーカスを持つ要素は、デスクトップ全体に1つだけ存在できます。</span><span class="sxs-lookup"><span data-stu-id="5963f-175">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="5963f-176">論理フォーカスとは、フォーカスがあるフォーカススコープ内のオブジェクトを指します。</span><span class="sxs-lookup"><span data-stu-id="5963f-176">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="5963f-177">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」と「[フォーカスの概要](~/docs/framework/wpf/advanced/focus-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-177">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="5963f-178">キーボードフォーカスを持つ要素には、要素が属するフォーカス範囲の論理フォーカスもあります。</span><span class="sxs-lookup"><span data-stu-id="5963f-178">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="5963f-179">論理フォーカスを持つ要素は、キーボードフォーカスを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="5963f-179">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5963f-180">次の例は、<xref:System.Windows.Controls.Button>にキーボードフォーカスを設定する <xref:System.Windows.FrameworkElement.Loaded> イベントハンドラーを示しています。</span><span class="sxs-lookup"><span data-stu-id="5963f-180">The following example shows a <xref:System.Windows.FrameworkElement.Loaded> event handler that sets keyboard focus on a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[focussample#FocusSampleSetFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplesetfocus)]
 [!code-vb[focussample#FocusSampleSetFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplesetfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ FocusedElement { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedElement : System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-181">キーボード フォーカスを持つ要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="5963f-181">Gets the element that has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="5963f-182">フォーカスがある要素。</span><span class="sxs-lookup"><span data-stu-id="5963f-182">The focused element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-183">キーボードフォーカスは、キーボード入力を受け取るオブジェクトを参照します。</span><span class="sxs-lookup"><span data-stu-id="5963f-183">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="5963f-184">キーボードフォーカスを持つ要素が `true`に <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> 設定されています。</span><span class="sxs-lookup"><span data-stu-id="5963f-184">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="5963f-185">キーボードフォーカスを持つ要素は、デスクトップ全体に1つだけ存在できます。</span><span class="sxs-lookup"><span data-stu-id="5963f-185">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="5963f-186">論理フォーカスとは、フォーカスがあるフォーカススコープ内のオブジェクトを指します。</span><span class="sxs-lookup"><span data-stu-id="5963f-186">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="5963f-187">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」と「[フォーカスの概要](~/docs/framework/wpf/advanced/focus-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-187">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="5963f-188">キーボードフォーカスを持つ要素には、要素が属するフォーカス範囲の論理フォーカスもあります。</span><span class="sxs-lookup"><span data-stu-id="5963f-188">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="5963f-189">論理フォーカスを持つ要素は、キーボードフォーカスを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="5963f-189">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5963f-190">次の例では、キーボードフォーカスを持つ要素を取得し、それを <xref:System.Windows.Controls.Control>にキャストします。</span><span class="sxs-lookup"><span data-stu-id="5963f-190">The following example gets the element with keyboard focus and casts it to a <xref:System.Windows.Controls.Control>.</span></span>  <span data-ttu-id="5963f-191">キーボードフォーカスを持つ要素が <xref:System.Windows.Controls.Control>の場合は、要素の背景が変更されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-191">If the element with keyboard focus is a <xref:System.Windows.Controls.Control>, the background of the element is changed.</span></span>  
  
 [!code-csharp[focussample#GetKeyboardFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#getkeyboardfocusedelement)]
 [!code-vb[focussample#GetKeyboardFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#getkeyboardfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyStates">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.KeyStates GetKeyStates(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKeyStates (key As Key) As KeyStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::KeyStates GetKeyStates(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member GetKeyStates : System.Windows.Input.Key -&gt; System.Windows.Input.KeyStates" Usage="System.Windows.Input.Keyboard.GetKeyStates key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5963f-192">指定したキー。</span><span class="sxs-lookup"><span data-stu-id="5963f-192">The specified key.</span></span></param>
        <summary><span data-ttu-id="5963f-193">指定したキーの状態のセットを取得します。</span><span class="sxs-lookup"><span data-stu-id="5963f-193">Gets the set of key states for the specified key.</span></span></summary>
        <returns><span data-ttu-id="5963f-194"><see cref="T:System.Windows.Input.KeyStates" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="5963f-194">A bitwise combination of the <see cref="T:System.Windows.Input.KeyStates" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-195"><xref:System.Windows.Input.KeyStates> は、ビットフィールドの列挙体です。そのため、1つのキーが複数の状態になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5963f-195"><xref:System.Windows.Input.KeyStates> is a bit field enumeration; therefore, it is possible for a key to be in multiple states.</span></span>  <span data-ttu-id="5963f-196">たとえば、キーが押された状態であったり、切り替えられた状態であったりする可能性があります。</span><span class="sxs-lookup"><span data-stu-id="5963f-196">For example, a key could be in the pressed state as well as in the toggled state.</span></span>  <span data-ttu-id="5963f-197">ビット比較演算を使用して、キーが含まれている正確な状態または状態を判断します。</span><span class="sxs-lookup"><span data-stu-id="5963f-197">Use bit comparison operations to determine the exact state or states the key is in.</span></span>  
  
 <span data-ttu-id="5963f-198"><xref:System.Windows.Input.Keyboard> クラスには、キー状態情報を取得するために使用できるいくつかの静的メソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="5963f-198">The <xref:System.Windows.Input.Keyboard> class provides a number of static methods which can also be used to obtain key state information.</span></span>  <span data-ttu-id="5963f-199">メソッドは、<xref:System.Windows.Input.Keyboard.IsKeyDown%2A>、<xref:System.Windows.Input.Keyboard.IsKeyUp%2A>、および <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>です。</span><span class="sxs-lookup"><span data-stu-id="5963f-199">The methods are: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, and <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5963f-200">次の例では、<xref:System.Windows.Input.Keyboard.GetKeyStates%2A> メソッドを使用して、<xref:System.Windows.Input.Key.Return> キーが <xref:System.Windows.Input.KeyStates.Down> 状態であるかどうかを判断する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5963f-200">The following example shows how to use the <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method to determine if the <xref:System.Windows.Input.Key.Return> key is in the <xref:System.Windows.Input.KeyStates.Down> state.</span></span>  <span data-ttu-id="5963f-201">ビットと演算を使用して、<xref:System.Windows.Input.Keyboard.GetKeyStates%2A> から返された <xref:System.Windows.Input.KeyStates> と <xref:System.Windows.Input.Key.Down> の状態を比較します。</span><span class="sxs-lookup"><span data-stu-id="5963f-201">A bit AND operation is used to compare the <xref:System.Windows.Input.KeyStates> returned from <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> and the <xref:System.Windows.Input.Key.Down> state.</span></span> <span data-ttu-id="5963f-202">キーが押されている場合は、<xref:System.Windows.Controls.Button> の背景が変更されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-202">If the key is down, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardgetkeystates)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardgetkeystates)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.KeyStates" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" Usage="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5963f-203">要素がキーボード フォーカスを受け取ったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="5963f-203">Occurs when an element receives keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-204">これは添付イベントです。</span><span class="sxs-lookup"><span data-stu-id="5963f-204">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="5963f-205">は、添付イベントをルーティングイベントとして実装します。</span><span class="sxs-lookup"><span data-stu-id="5963f-205">implements attached events as routed events.</span></span> <span data-ttu-id="5963f-206">添付イベントは、基本的には、イベントを定義していないオブジェクトで処理できるイベントを参照するための [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 言語の概念です。これは、イベントがルートを走査できるようにすることで [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 拡張されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-206">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="5963f-207">アタッチされたイベントには、コードで直接処理構文がありません。コードでルーティングイベントのハンドラーをアタッチするには、指定された Add \* Handler メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="5963f-207">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="5963f-208">詳細については、「[添付イベントの概要](~/docs/framework/wpf/advanced/attached-events-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-208">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="5963f-209">キーボードフォーカスは、キーボード入力を受け取るオブジェクトを参照します。</span><span class="sxs-lookup"><span data-stu-id="5963f-209">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="5963f-210">キーボードフォーカスを持つ要素が `true`に <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> 設定されています。</span><span class="sxs-lookup"><span data-stu-id="5963f-210">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="5963f-211">キーボードフォーカスを持つ要素は、デスクトップ全体に1つだけ存在できます。</span><span class="sxs-lookup"><span data-stu-id="5963f-211">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="5963f-212">論理フォーカスとは、フォーカスがあるフォーカススコープ内のオブジェクトを指します。</span><span class="sxs-lookup"><span data-stu-id="5963f-212">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="5963f-213">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」と「[フォーカスの概要](~/docs/framework/wpf/advanced/focus-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-213">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="5963f-214"><xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> イベントまたは <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> イベントが処理されると、キーボードフォーカスが変わります。</span><span class="sxs-lookup"><span data-stu-id="5963f-214">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does change.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocusEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5963f-215">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="5963f-215">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5963f-216">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5963f-216">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.GotKeyboardFocusEvent>|  
|<span data-ttu-id="5963f-217">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="5963f-217">Routing strategy</span></span>|<span data-ttu-id="5963f-218">バブリング</span><span class="sxs-lookup"><span data-stu-id="5963f-218">Bubbling</span></span>|  
|<span data-ttu-id="5963f-219">委任</span><span class="sxs-lookup"><span data-stu-id="5963f-219">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="5963f-220">対応するトンネリングイベントは <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>です。</span><span class="sxs-lookup"><span data-stu-id="5963f-220">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5963f-221">次の例では、<xref:System.Windows.Controls.TextBox> を作成し、<xref:System.Windows.UIElement.GotKeyboardFocus> イベントと <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> イベントのイベントハンドラーをアタッチします。</span><span class="sxs-lookup"><span data-stu-id="5963f-221">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="5963f-222"><xref:System.Windows.Controls.TextBox> がキーボードフォーカスを取得すると、背景色が変更され、<xref:System.Windows.Controls.TextBox> のテキストがクリアされます。</span><span class="sxs-lookup"><span data-stu-id="5963f-222">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="5963f-223"><xref:System.Windows.Controls.TextBlock> がキーボードフォーカスを失うと、背景色が変更され、サンプルで使用される変数をリセットするメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-223">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called which resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-224"><see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-224">Identifies the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-225">ルーティングイベント識別子は、ルーティングイベントが登録されたときに作成されます。結果は、ルーティングイベントを登録するクラスのフィールドとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-225">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5963f-226">これらの識別子には、識別名、所有者の種類、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5963f-226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5963f-227">多くの場合、これらの識別子をイベントシステムメソッドのパラメーターとして使用して、特定のルーティングイベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-227">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyDown">
      <MemberSignature Language="C#" Value="public static bool IsKeyDown (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyDown(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyDown (key As Key) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyDown(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyDown : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyDown key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5963f-228">指定したキー。</span><span class="sxs-lookup"><span data-stu-id="5963f-228">The specified key.</span></span></param>
        <summary><span data-ttu-id="5963f-229">指定したキーが押されたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="5963f-229">Determines whether the specified key is pressed.</span></span></summary>
        <returns><span data-ttu-id="5963f-230"><see langword="true" /> が押された状態の場合は <paramref name="key" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5963f-230"><see langword="true" /> if <paramref name="key" /> is in the down state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-231"><xref:System.Windows.Input.Keyboard.GetKeyStates%2A> メソッドを使用すると、特定のキーの状態のセットを確認できます。</span><span class="sxs-lookup"><span data-stu-id="5963f-231">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5963f-232">次の例では、<xref:System.Windows.Input.Keyboard.IsKeyDown%2A> メソッドを使用して、特定のキーの状態を確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5963f-232">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="5963f-233"><xref:System.Windows.Input.Key.Return> キーが <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-233">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method.</span></span>  <span data-ttu-id="5963f-234">メソッドが `true`を返すと、<xref:System.Windows.Controls.Button> の背景が変更されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-234">If the method returns `true`, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeydown)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeydown)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsDown" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyToggled">
      <MemberSignature Language="C#" Value="public static bool IsKeyToggled (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyToggled(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyToggled (key As Key) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyToggled(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyToggled : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyToggled key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5963f-235">指定したキー。</span><span class="sxs-lookup"><span data-stu-id="5963f-235">The specified key.</span></span></param>
        <summary><span data-ttu-id="5963f-236">指定したキーが切り替えられたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="5963f-236">Determines whether the specified key is toggled.</span></span></summary>
        <returns><span data-ttu-id="5963f-237"><see langword="true" /> が切り替わった状態の場合は <paramref name="key" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5963f-237"><see langword="true" /> if <paramref name="key" /> is in the toggled state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-238"><xref:System.Windows.Input.Keyboard.GetKeyStates%2A> メソッドを使用すると、特定のキーの状態のセットを確認できます。</span><span class="sxs-lookup"><span data-stu-id="5963f-238">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5963f-239">次の例では、<xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> メソッドを使用して、特定のキーの状態を確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5963f-239">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine the state of a specific key.</span></span> <span data-ttu-id="5963f-240"><xref:System.Windows.Input.Key.Return> キーが <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-240">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method.</span></span>  <span data-ttu-id="5963f-241">メソッドが `true`を返すと、<xref:System.Windows.Controls.Button> の背景が変更されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-241">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsToggled" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyUp">
      <MemberSignature Language="C#" Value="public static bool IsKeyUp (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyUp(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyUp (key As Key) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyUp(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyUp : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyUp key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5963f-242">チェックするキー。</span><span class="sxs-lookup"><span data-stu-id="5963f-242">The key to check.</span></span></param>
        <summary><span data-ttu-id="5963f-243">指定したキーが離されたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="5963f-243">Determines whether the specified key is released.</span></span></summary>
        <returns><span data-ttu-id="5963f-244"><see langword="true" /> が離された状態の場合は <paramref name="key" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5963f-244"><see langword="true" /> if <paramref name="key" /> is in the up state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-245"><xref:System.Windows.Input.Keyboard.GetKeyStates%2A> メソッドを使用すると、特定のキーの状態のセットを確認できます。</span><span class="sxs-lookup"><span data-stu-id="5963f-245">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5963f-246">次の例では、<xref:System.Windows.Input.Keyboard.IsKeyUp%2A> メソッドを使用して、特定のキーの状態を確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5963f-246">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="5963f-247"><xref:System.Windows.Input.Key.Return> キーが <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-247">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method.</span></span>  <span data-ttu-id="5963f-248">メソッドが `true`を返すと、<xref:System.Windows.Controls.Button> の背景が変更されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-248">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeyup)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeyup)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" Usage="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5963f-249">キーボード入力プロバイダーがフォーカスを取得するときに発生します。</span><span class="sxs-lookup"><span data-stu-id="5963f-249">Occurs when the keyboard input provider acquires focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-250">これは添付イベントです。</span><span class="sxs-lookup"><span data-stu-id="5963f-250">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="5963f-251">は、添付イベントをルーティングイベントとして実装します。</span><span class="sxs-lookup"><span data-stu-id="5963f-251">implements attached events as routed events.</span></span> <span data-ttu-id="5963f-252">添付イベントは、基本的には、イベントを定義していないオブジェクトで処理できるイベントを参照するための [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 言語の概念です。これは、イベントがルートを走査できるようにすることで [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 拡張されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-252">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="5963f-253">アタッチされたイベントには、コードで直接処理構文がありません。コードでルーティングイベントのハンドラーをアタッチするには、指定された Add \* Handler メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="5963f-253">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="5963f-254">詳細については、「[添付イベントの概要](~/docs/framework/wpf/advanced/attached-events-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-254">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5963f-255">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="5963f-255">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5963f-256">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5963f-256">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="5963f-257">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="5963f-257">Routing strategy</span></span>|<span data-ttu-id="5963f-258">バブリング</span><span class="sxs-lookup"><span data-stu-id="5963f-258">Bubbling</span></span>|  
|<span data-ttu-id="5963f-259">委任</span><span class="sxs-lookup"><span data-stu-id="5963f-259">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="5963f-260">対応するトンネリングイベントは <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>です。</span><span class="sxs-lookup"><span data-stu-id="5963f-260">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-261"><see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-261">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-262">ルーティングイベント識別子は、ルーティングイベントが登録されたときに作成されます。結果は、ルーティングイベントを登録するクラスのフィールドとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-262">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5963f-263">これらの識別子には、識別名、所有者の種類、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5963f-263">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5963f-264">多くの場合、これらの識別子をイベントシステムメソッドのパラメーターとして使用して、特定のルーティングイベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-264">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" Usage="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5963f-265">キーボードのキーが押されると発生します。</span><span class="sxs-lookup"><span data-stu-id="5963f-265">Occurs when a key on the keyboard is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-266">これは添付イベントです。</span><span class="sxs-lookup"><span data-stu-id="5963f-266">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="5963f-267">は、添付イベントをルーティングイベントとして実装します。</span><span class="sxs-lookup"><span data-stu-id="5963f-267">implements attached events as routed events.</span></span> <span data-ttu-id="5963f-268">添付イベントは、基本的には、イベントを定義していないオブジェクトで処理できるイベントを参照するための [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 言語の概念です。これは、イベントがルートを走査できるようにすることで [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 拡張されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-268">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="5963f-269">アタッチされたイベントには、コードで直接処理構文がありません。コードでルーティングイベントのハンドラーをアタッチするには、指定された Add \* Handler メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="5963f-269">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="5963f-270">詳細については、「[添付イベントの概要](~/docs/framework/wpf/advanced/attached-events-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-270">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5963f-271">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="5963f-271">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5963f-272">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5963f-272">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyDownEvent>|  
|<span data-ttu-id="5963f-273">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="5963f-273">Routing strategy</span></span>|<span data-ttu-id="5963f-274">バブリング</span><span class="sxs-lookup"><span data-stu-id="5963f-274">Bubbling</span></span>|  
|<span data-ttu-id="5963f-275">委任</span><span class="sxs-lookup"><span data-stu-id="5963f-275">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="5963f-276">対応するトンネリングイベントは <xref:System.Windows.Input.Keyboard.PreviewKeyDown>です。</span><span class="sxs-lookup"><span data-stu-id="5963f-276">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5963f-277">次の例では、<xref:System.Windows.UIElement.KeyDown> イベントのイベントハンドラーを関連付ける <xref:System.Windows.Controls.TextBox> を作成します。</span><span class="sxs-lookup"><span data-stu-id="5963f-277">The following example creates <xref:System.Windows.Controls.TextBox> that attaches an event handler for the <xref:System.Windows.UIElement.KeyDown> event.</span></span>  <span data-ttu-id="5963f-278"><xref:System.Windows.Input.Key.Return> が押されると、イベントハンドラーによって <xref:System.Windows.Controls.TextBox> 内のテキストが <xref:System.Windows.Controls.TextBlock>に表示されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-278">When the <xref:System.Windows.Input.Key.Return> is pressed, the event handler displays the text in the <xref:System.Windows.Controls.TextBox> in a <xref:System.Windows.Controls.TextBlock>.</span></span>  
  
 [!code-xml[keydown#KeyDownUI](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml#keydownui)]  
  
 [!code-csharp[keydown#KeyDownSample](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml.cs#keydownsample)]
 [!code-vb[keydown#KeyDownSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyDown/VisualBasic/Window1.xaml.vb#keydownsample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-279"><see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-279">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-280">ルーティングイベント識別子は、ルーティングイベントが登録されたときに作成されます。結果は、ルーティングイベントを登録するクラスのフィールドとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-280">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5963f-281">これらの識別子には、識別名、所有者の種類、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5963f-281">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5963f-282">多くの場合、これらの識別子をイベントシステムメソッドのパラメーターとして使用して、特定のルーティングイベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-282">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" Usage="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5963f-283">キーボードのキーを離すと発生します。</span><span class="sxs-lookup"><span data-stu-id="5963f-283">Occurs when a key on the keyboard is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-284">これは添付イベントです。</span><span class="sxs-lookup"><span data-stu-id="5963f-284">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="5963f-285">は、添付イベントをルーティングイベントとして実装します。</span><span class="sxs-lookup"><span data-stu-id="5963f-285">implements attached events as routed events.</span></span> <span data-ttu-id="5963f-286">添付イベントは、基本的には、イベントを定義していないオブジェクトで処理できるイベントを参照するための [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 言語の概念です。これは、イベントがルートを走査できるようにすることで [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 拡張されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-286">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="5963f-287">アタッチされたイベントには、コードで直接処理構文がありません。コードでルーティングイベントのハンドラーをアタッチするには、指定された Add \* Handler メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="5963f-287">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="5963f-288">詳細については、「[添付イベントの概要](~/docs/framework/wpf/advanced/attached-events-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-288">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5963f-289">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="5963f-289">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5963f-290">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5963f-290">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyUpEvent>|  
|<span data-ttu-id="5963f-291">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="5963f-291">Routing strategy</span></span>|<span data-ttu-id="5963f-292">バブリング</span><span class="sxs-lookup"><span data-stu-id="5963f-292">Bubbling</span></span>|  
|<span data-ttu-id="5963f-293">委任</span><span class="sxs-lookup"><span data-stu-id="5963f-293">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="5963f-294">対応するトンネリングイベントは <xref:System.Windows.Input.Keyboard.PreviewKeyUp>です。</span><span class="sxs-lookup"><span data-stu-id="5963f-294">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-295"><see cref="E:System.Windows.Input.Keyboard.KeyUp" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-295">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-296">ルーティングイベント識別子は、ルーティングイベントが登録されたときに作成されます。結果は、ルーティングイベントを登録するクラスのフィールドとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-296">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5963f-297">これらの識別子には、識別名、所有者の種類、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5963f-297">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5963f-298">多くの場合、これらの識別子をイベントシステムメソッドのパラメーターとして使用して、特定のルーティングイベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-298">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" Usage="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5963f-299">要素がキーボード フォーカスを失ったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="5963f-299">Occurs when an element loses keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-300">これは添付イベントです。</span><span class="sxs-lookup"><span data-stu-id="5963f-300">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="5963f-301">は、添付イベントをルーティングイベントとして実装します。</span><span class="sxs-lookup"><span data-stu-id="5963f-301">implements attached events as routed events.</span></span> <span data-ttu-id="5963f-302">添付イベントは、基本的には、イベントを定義していないオブジェクトで処理できるイベントを参照するための [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 言語の概念です。これは、イベントがルートを走査できるようにすることで [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 拡張されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-302">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="5963f-303">アタッチされたイベントには、コードで直接処理構文がありません。コードでルーティングイベントのハンドラーをアタッチするには、指定された Add \* Handler メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="5963f-303">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="5963f-304">詳細については、「[添付イベントの概要](~/docs/framework/wpf/advanced/attached-events-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-304">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="5963f-305">キーボードフォーカスは、キーボード入力を受け取るオブジェクトを参照します。</span><span class="sxs-lookup"><span data-stu-id="5963f-305">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="5963f-306">キーボードフォーカスを持つ要素が `true`に <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> 設定されています。</span><span class="sxs-lookup"><span data-stu-id="5963f-306">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="5963f-307">キーボードフォーカスを持つ要素は、デスクトップ全体に1つだけ存在できます。</span><span class="sxs-lookup"><span data-stu-id="5963f-307">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="5963f-308">論理フォーカスとは、フォーカスがあるフォーカススコープ内のオブジェクトを指します。</span><span class="sxs-lookup"><span data-stu-id="5963f-308">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="5963f-309">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」と「[フォーカスの概要](~/docs/framework/wpf/advanced/focus-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-309">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="5963f-310"><xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> イベントまたは <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> イベントが処理された場合、キーボードフォーカスは変わりません。</span><span class="sxs-lookup"><span data-stu-id="5963f-310">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5963f-311">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="5963f-311">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5963f-312">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5963f-312">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.LostKeyboardFocusEvent>|  
|<span data-ttu-id="5963f-313">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="5963f-313">Routing strategy</span></span>|<span data-ttu-id="5963f-314">バブリング</span><span class="sxs-lookup"><span data-stu-id="5963f-314">Bubbling</span></span>|  
|<span data-ttu-id="5963f-315">委任</span><span class="sxs-lookup"><span data-stu-id="5963f-315">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="5963f-316">対応するトンネリングイベントは <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>です。</span><span class="sxs-lookup"><span data-stu-id="5963f-316">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5963f-317">次の例では、<xref:System.Windows.Controls.TextBox> を作成し、<xref:System.Windows.UIElement.GotKeyboardFocus> イベントと <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> イベントのイベントハンドラーをアタッチします。</span><span class="sxs-lookup"><span data-stu-id="5963f-317">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="5963f-318"><xref:System.Windows.Controls.TextBox> がキーボードフォーカスを取得すると、背景色が変更され、<xref:System.Windows.Controls.TextBox> のテキストがクリアされます。</span><span class="sxs-lookup"><span data-stu-id="5963f-318">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="5963f-319"><xref:System.Windows.Controls.TextBlock> がキーボードフォーカスを失うと、背景色が変更され、サンプルで使用される変数をリセットするメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-319">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called that resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-320"><see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-320">Identifies the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-321">ルーティングイベント識別子は、ルーティングイベントが登録されたときに作成されます。結果は、ルーティングイベントを登録するクラスのフィールドとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-321">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5963f-322">これらの識別子には、識別名、所有者の種類、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5963f-322">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5963f-323">多くの場合、これらの識別子をイベントシステムメソッドのパラメーターとして使用して、特定のルーティングイベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-323">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys" Usage="System.Windows.Input.Keyboard.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-324">現在押されている <see cref="T:System.Windows.Input.ModifierKeys" /> のセットを取得します。</span><span class="sxs-lookup"><span data-stu-id="5963f-324">Gets the set of <see cref="T:System.Windows.Input.ModifierKeys" /> that are currently pressed.</span></span></summary>
        <value><span data-ttu-id="5963f-325"><see cref="T:System.Windows.Input.ModifierKeys" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="5963f-325">A bitwise combination of the <see cref="T:System.Windows.Input.ModifierKeys" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-326"><xref:System.Windows.Input.ModifierKeys> はビットフィールドの列挙型であるため、複数の修飾子キーを同時に押すことができます。</span><span class="sxs-lookup"><span data-stu-id="5963f-326"><xref:System.Windows.Input.ModifierKeys> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time.</span></span>  <span data-ttu-id="5963f-327">ビット演算を使用して、押された修飾キーの正確なセットを判別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-327">Use bit operations to determine the exact set of modifier keys pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5963f-328">次の例では、ビットと比較を使用して、<xref:System.Windows.Input.ModifierKeys.Control> の修飾子キーが押されているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="5963f-328">The following example uses a bit AND comparison to determine if the <xref:System.Windows.Input.ModifierKeys.Control> modifier key is pressed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyboardmodifiersbitoperation)]
 [!code-vb[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyboardmodifiersbitoperation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" Usage="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5963f-329">要素がキーボード フォーカスを取得中の場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="5963f-329">Occurs when an element is in the process of acquiring keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-330">これは添付イベントです。</span><span class="sxs-lookup"><span data-stu-id="5963f-330">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="5963f-331">は、添付イベントをルーティングイベントとして実装します。</span><span class="sxs-lookup"><span data-stu-id="5963f-331">implements attached events as routed events.</span></span> <span data-ttu-id="5963f-332">添付イベントは、基本的には、イベントを定義していないオブジェクトで処理できるイベントを参照するための [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 言語の概念です。これは、イベントがルートを走査できるようにすることで [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 拡張されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-332">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="5963f-333">アタッチされたイベントには、コードで直接処理構文がありません。コードでルーティングイベントのハンドラーをアタッチするには、指定された Add \* Handler メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="5963f-333">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="5963f-334">詳細については、「[添付イベントの概要](~/docs/framework/wpf/advanced/attached-events-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-334">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="5963f-335"><xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> イベントまたは <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> イベントが処理された場合、キーボードフォーカスは変わりません。</span><span class="sxs-lookup"><span data-stu-id="5963f-335">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="5963f-336">キーボードフォーカスは、キーボード入力を受け取るオブジェクトを参照します。</span><span class="sxs-lookup"><span data-stu-id="5963f-336">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="5963f-337">キーボードフォーカスを持つ要素が `true`に <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> 設定されています。</span><span class="sxs-lookup"><span data-stu-id="5963f-337">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="5963f-338">キーボードフォーカスを持つ要素は、デスクトップ全体に1つだけ存在できます。</span><span class="sxs-lookup"><span data-stu-id="5963f-338">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="5963f-339">論理フォーカスとは、フォーカスがあるフォーカススコープ内のオブジェクトを指します。</span><span class="sxs-lookup"><span data-stu-id="5963f-339">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="5963f-340">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」と「[フォーカスの概要](~/docs/framework/wpf/advanced/focus-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-340">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyborad"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5963f-341">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="5963f-341">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5963f-342">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5963f-342">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="5963f-343">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="5963f-343">Routing strategy</span></span>|<span data-ttu-id="5963f-344">トンネリング</span><span class="sxs-lookup"><span data-stu-id="5963f-344">Tunneling</span></span>|  
|<span data-ttu-id="5963f-345">委任</span><span class="sxs-lookup"><span data-stu-id="5963f-345">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="5963f-346">対応するバブルイベントは <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>です。</span><span class="sxs-lookup"><span data-stu-id="5963f-346">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-347"><see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-347">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-348">ルーティングイベント識別子は、ルーティングイベントが登録されたときに作成されます。結果は、ルーティングイベントを登録するクラスのフィールドとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-348">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5963f-349">これらの識別子には、識別名、所有者の種類、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5963f-349">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5963f-350">多くの場合、これらの識別子をイベントシステムメソッドのパラメーターとして使用して、特定のルーティングイベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-350">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" Usage="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5963f-351">キーボード入力プロバイダーがフォーカスを取得中の場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="5963f-351">Occurs when the keyboard input provider is in the process of acquiring focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-352">これは添付イベントです。</span><span class="sxs-lookup"><span data-stu-id="5963f-352">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="5963f-353">は、添付イベントをルーティングイベントとして実装します。</span><span class="sxs-lookup"><span data-stu-id="5963f-353">implements attached events as routed events.</span></span> <span data-ttu-id="5963f-354">添付イベントは、基本的には、イベントを定義していないオブジェクトで処理できるイベントを参照するための [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 言語の概念です。これは、イベントがルートを走査できるようにすることで [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 拡張されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-354">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="5963f-355">アタッチされたイベントには、コードで直接処理構文がありません。コードでルーティングイベントのハンドラーをアタッチするには、指定された Add \* Handler メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="5963f-355">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="5963f-356">詳細については、「[添付イベントの概要](~/docs/framework/wpf/advanced/attached-events-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-356">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5963f-357">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="5963f-357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5963f-358">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5963f-358">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="5963f-359">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="5963f-359">Routing strategy</span></span>|<span data-ttu-id="5963f-360">トンネリング</span><span class="sxs-lookup"><span data-stu-id="5963f-360">Tunneling</span></span>|  
|<span data-ttu-id="5963f-361">委任</span><span class="sxs-lookup"><span data-stu-id="5963f-361">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="5963f-362">対応するバブルイベントは <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>です。</span><span class="sxs-lookup"><span data-stu-id="5963f-362">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-363"><see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-363">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-364">ルーティングイベント識別子は、ルーティングイベントが登録されたときに作成されます。結果は、ルーティングイベントを登録するクラスのフィールドとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-364">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5963f-365">これらの識別子には、識別名、所有者の種類、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5963f-365">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5963f-366">多くの場合、これらの識別子をイベントシステムメソッドのパラメーターとして使用して、特定のルーティングイベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-366">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" Usage="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5963f-367">キーボードのキーが押されると発生します。</span><span class="sxs-lookup"><span data-stu-id="5963f-367">Occurs when a key on the keyboard is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-368">これは添付イベントです。</span><span class="sxs-lookup"><span data-stu-id="5963f-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="5963f-369">は、添付イベントをルーティングイベントとして実装します。</span><span class="sxs-lookup"><span data-stu-id="5963f-369">implements attached events as routed events.</span></span> <span data-ttu-id="5963f-370">添付イベントは、基本的には、イベントを定義していないオブジェクトで処理できるイベントを参照するための [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 言語の概念です。これは、イベントがルートを走査できるようにすることで [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 拡張されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-370">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="5963f-371">アタッチされたイベントには、コードで直接処理構文がありません。コードでルーティングイベントのハンドラーをアタッチするには、指定された Add \* Handler メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="5963f-371">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="5963f-372">詳細については、「[添付イベントの概要](~/docs/framework/wpf/advanced/attached-events-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-372">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5963f-373">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="5963f-373">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5963f-374">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5963f-374">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyDownEvent>|  
|<span data-ttu-id="5963f-375">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="5963f-375">Routing strategy</span></span>|<span data-ttu-id="5963f-376">トンネリング</span><span class="sxs-lookup"><span data-stu-id="5963f-376">Tunneling</span></span>|  
|<span data-ttu-id="5963f-377">委任</span><span class="sxs-lookup"><span data-stu-id="5963f-377">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="5963f-378">対応するバブルイベントは <xref:System.Windows.Input.Keyboard.KeyDown>です。</span><span class="sxs-lookup"><span data-stu-id="5963f-378">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-379"><see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-379">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-380">ルーティングイベント識別子は、ルーティングイベントが登録されたときに作成されます。結果は、ルーティングイベントを登録するクラスのフィールドとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-380">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5963f-381">これらの識別子には、識別名、所有者の種類、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5963f-381">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5963f-382">多くの場合、これらの識別子をイベントシステムメソッドのパラメーターとして使用して、特定のルーティングイベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-382">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" Usage="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5963f-383">キーボードのキーを離すと発生します。</span><span class="sxs-lookup"><span data-stu-id="5963f-383">Occurs when a key on the keyboard is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-384">これは添付イベントです。</span><span class="sxs-lookup"><span data-stu-id="5963f-384">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="5963f-385">は、添付イベントをルーティングイベントとして実装します。</span><span class="sxs-lookup"><span data-stu-id="5963f-385">implements attached events as routed events.</span></span> <span data-ttu-id="5963f-386">添付イベントは、基本的には、イベントを定義していないオブジェクトで処理できるイベントを参照するための [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 言語の概念です。これは、イベントがルートを走査できるようにすることで [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 拡張されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-386">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="5963f-387">アタッチされたイベントには、コードで直接処理構文がありません。コードでルーティングイベントのハンドラーをアタッチするには、指定された Add \* Handler メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="5963f-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="5963f-388">詳細については、「[添付イベントの概要](~/docs/framework/wpf/advanced/attached-events-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-388">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5963f-389">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="5963f-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5963f-390">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5963f-390">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyUpEvent>|  
|<span data-ttu-id="5963f-391">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="5963f-391">Routing strategy</span></span>|<span data-ttu-id="5963f-392">トンネリング</span><span class="sxs-lookup"><span data-stu-id="5963f-392">Tunneling</span></span>|  
|<span data-ttu-id="5963f-393">委任</span><span class="sxs-lookup"><span data-stu-id="5963f-393">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="5963f-394">対応するバブルイベントは <xref:System.Windows.Input.Keyboard.KeyUp>です。</span><span class="sxs-lookup"><span data-stu-id="5963f-394">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-395"><see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-395">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-396">ルーティングイベント識別子は、ルーティングイベントが登録されたときに作成されます。結果は、ルーティングイベントを登録するクラスのフィールドとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-396">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5963f-397">これらの識別子には、識別名、所有者の種類、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5963f-397">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5963f-398">多くの場合、これらの識別子をイベントシステムメソッドのパラメーターとして使用して、特定のルーティングイベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-398">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" Usage="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5963f-399">要素がキーボード フォーカスを失う過程である場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="5963f-399">Occurs when an element is in the process of losing keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-400">これは添付イベントです。</span><span class="sxs-lookup"><span data-stu-id="5963f-400">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="5963f-401">は、添付イベントをルーティングイベントとして実装します。</span><span class="sxs-lookup"><span data-stu-id="5963f-401">implements attached events as routed events.</span></span> <span data-ttu-id="5963f-402">添付イベントは、基本的には、イベントを定義していないオブジェクトで処理できるイベントを参照するための [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 言語の概念です。これは、イベントがルートを走査できるようにすることで [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 拡張されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-402">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="5963f-403">アタッチされたイベントには、コードで直接処理構文がありません。コードでルーティングイベントのハンドラーをアタッチするには、指定された Add \* Handler メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="5963f-403">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="5963f-404">詳細については、「[添付イベントの概要](~/docs/framework/wpf/advanced/attached-events-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-404">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="5963f-405"><xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> イベントまたは <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> イベントが処理された場合、キーボードフォーカスは変わりません。</span><span class="sxs-lookup"><span data-stu-id="5963f-405">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="5963f-406">キーボードフォーカスは、キーボード入力を受け取るオブジェクトを参照します。</span><span class="sxs-lookup"><span data-stu-id="5963f-406">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="5963f-407">キーボードフォーカスを持つ要素が `true`に <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> 設定されています。</span><span class="sxs-lookup"><span data-stu-id="5963f-407">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="5963f-408">キーボードフォーカスを持つ要素は、デスクトップ全体に1つだけ存在できます。</span><span class="sxs-lookup"><span data-stu-id="5963f-408">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="5963f-409">論理フォーカスとは、フォーカスがあるフォーカススコープ内のオブジェクトを指します。</span><span class="sxs-lookup"><span data-stu-id="5963f-409">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="5963f-410">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」と「[フォーカスの概要](~/docs/framework/wpf/advanced/focus-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5963f-410">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="5963f-411">ルーティングされたイベント情報</span><span class="sxs-lookup"><span data-stu-id="5963f-411">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="5963f-412">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="5963f-412">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="5963f-413">ルーティング方法</span><span class="sxs-lookup"><span data-stu-id="5963f-413">Routing strategy</span></span>|<span data-ttu-id="5963f-414">トンネリング</span><span class="sxs-lookup"><span data-stu-id="5963f-414">Tunneling</span></span>|  
|<span data-ttu-id="5963f-415">委任</span><span class="sxs-lookup"><span data-stu-id="5963f-415">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="5963f-416">対応するバブルイベントは <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>です。</span><span class="sxs-lookup"><span data-stu-id="5963f-416">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-417"><see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-417">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-418">ルーティングイベント識別子は、ルーティングイベントが登録されたときに作成されます。結果は、ルーティングイベントを登録するクラスのフィールドとして格納されます。</span><span class="sxs-lookup"><span data-stu-id="5963f-418">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="5963f-419">これらの識別子には、識別名、所有者の種類、ハンドラーの型、ルーティング方法、およびイベントの所有者を追加するためのユーティリティメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="5963f-419">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="5963f-420">多くの場合、これらの識別子をイベントシステムメソッドのパラメーターとして使用して、特定のルーティングイベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="5963f-420">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyboardDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.KeyboardDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::KeyboardDevice ^ PrimaryDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.KeyboardDevice" Usage="System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5963f-421">プライマリ キーボード入力デバイスを取得します。</span><span class="sxs-lookup"><span data-stu-id="5963f-421">Gets the primary keyboard input device.</span></span></summary>
        <value><span data-ttu-id="5963f-422">デバイス。</span><span class="sxs-lookup"><span data-stu-id="5963f-422">The device.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-423">このプロパティは [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] インフラストラクチャをサポートします。コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="5963f-423">This property supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyboardDevice" />
      </Docs>
    </Member>
    <Member MemberName="RemoveGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-424">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-424">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-425">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-425">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="5963f-426"><see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="5963f-426">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-427">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> イベントへのコードアクセス用の添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-427">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-428">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-428">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-429">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-429">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="5963f-430"><see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="5963f-430">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-431">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> イベントへのコードアクセス用の添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-431">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-432">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-432">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-433">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-433">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="5963f-434"><see cref="E:System.Windows.Input.Keyboard.KeyDown" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="5963f-434">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-435">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> イベントへのコードアクセス用の添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-435">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-436">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-437">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-437">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="5963f-438"><see cref="E:System.Windows.Input.Keyboard.KeyUp" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="5963f-438">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-439">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> イベントへのコードアクセス用の添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-439">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-440">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-440">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-441">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-441">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="5963f-442"><see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="5963f-442">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-443">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> イベントへのコードアクセス用の添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-443">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-444">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-444">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-445">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-445">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="5963f-446"><see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="5963f-446">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-447">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> イベントへのコードアクセス用の添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-447">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-448">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-449">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-449">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="5963f-450"><see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="5963f-450">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-451">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> イベントへのコードアクセス用の添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-451">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-452">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-452">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-453">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-453">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="5963f-454"><see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="5963f-454">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-455">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> イベントへのコードアクセス用の添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-455">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-456">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-456">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-457">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-457">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="5963f-458"><see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="5963f-458">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-459">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> イベントへのコードアクセス用の添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-459">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="5963f-460">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" /> 。</span><span class="sxs-lookup"><span data-stu-id="5963f-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="5963f-461">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="5963f-461">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="5963f-462"><see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="5963f-462">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5963f-463">このメソッドは、アタッチされた <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> イベントへのコードアクセス用の添付プロパティアクセサーを提供します。</span><span class="sxs-lookup"><span data-stu-id="5963f-463">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
