<Type Name="FocusManager" FullName="System.Windows.Input.FocusManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="25eb5f6c527e69b7bb8ba33e5e3203915a125c9a" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75177069" /></Metadata><TypeSignature Language="C#" Value="public static class FocusManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FocusManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.FocusManager" />
  <TypeSignature Language="VB.NET" Value="Public Class FocusManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class FocusManager abstract sealed" />
  <TypeSignature Language="F#" Value="type FocusManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7e18f-101">フォーカス範囲を決定し設定するため、およびその範囲内でフォーカスされた要素を設定するための静的メソッド、添付プロパティ、およびイベントを提供します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-101">Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e18f-102">Windows Presentation Foundation (WPF) には、フォーカスに関して、キーボードフォーカスと論理フォーカスという2つの概念があります。</span><span class="sxs-lookup"><span data-stu-id="7e18f-102">In Windows Presentation Foundation (WPF) there are two concepts concerning focus: keyboard focus and logical focus.</span></span>  
  
 <span data-ttu-id="7e18f-103">キーボードフォーカスは、現在キーボード入力を受け取っている要素に関連します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-103">Keyboard focus pertains to the element which is currently receiving keyboard input.</span></span>  <span data-ttu-id="7e18f-104">キーボードフォーカスを持つ要素は1つだけ存在できます。</span><span class="sxs-lookup"><span data-stu-id="7e18f-104">There can be only one element with keyboard focus.</span></span>  <span data-ttu-id="7e18f-105">キーボードフォーカスを持つこの要素は、`true`に設定 <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> ます。</span><span class="sxs-lookup"><span data-stu-id="7e18f-105">This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="7e18f-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> は、キーボードフォーカスを持つ要素を返します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> returns the element with keyboard focus.</span></span>  
  
 <span data-ttu-id="7e18f-107">論理フォーカスは、特定のフォーカス範囲内の <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> に関連します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-107">Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within a specific focus scope.</span></span>  
  
 <span data-ttu-id="7e18f-108">フォーカス範囲は、そのスコープ内の <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> を追跡するコンテナー要素です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-108">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="7e18f-109">既定では、<xref:System.Windows.Window> クラスは、<xref:System.Windows.Controls.Menu>、<xref:System.Windows.Controls.ContextMenu>、および <xref:System.Windows.Controls.ToolBar> クラスとしてフォーカス範囲となります。</span><span class="sxs-lookup"><span data-stu-id="7e18f-109">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="7e18f-110">フォーカス範囲である要素が `true`に設定されて <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>。</span><span class="sxs-lookup"><span data-stu-id="7e18f-110">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="7e18f-111">論理フォーカスを持つ複数の要素が存在する場合がありますが、1つのフォーカススコープ内に論理フォーカスがある要素は1つだけ存在できます。</span><span class="sxs-lookup"><span data-stu-id="7e18f-111">There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.</span></span>  <span data-ttu-id="7e18f-112">論理フォーカスを持つ要素は、必ずしもキーボードフォーカスを持つとは限りませんが、キーボードフォーカスを持つ要素は論理フォーカスを持ちます。</span><span class="sxs-lookup"><span data-stu-id="7e18f-112">An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.</span></span>  <span data-ttu-id="7e18f-113">フォーカス範囲は、フォーカススコープ内で定義できます。</span><span class="sxs-lookup"><span data-stu-id="7e18f-113">It is possible to define a focus scope within a focus scope.</span></span>  <span data-ttu-id="7e18f-114">この場合、親のフォーカス範囲と子のフォーカス範囲の両方に <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="7e18f-114">In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7e18f-115">次のシナリオでは、<xref:System.Windows.Controls.TextBox> を持つ <xref:System.Windows.Window> と <xref:System.Windows.Controls.MenuItem>を持つ <xref:System.Windows.Controls.Menu> を持つ WPF アプリケーションで、キーボードフォーカスと論理フォーカスがどのように変化するかを示します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-115">The following scenario illustrates how keyboard focus and logical focus change in a WPF application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> which has a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="7e18f-116">キーボードフォーカスが <xref:System.Windows.Controls.TextBox> から <xref:System.Windows.Controls.MenuItem>に変更された場合、<xref:System.Windows.Controls.TextBox> はキーボードフォーカスを損失しますが、<xref:System.Windows.Window> のフォーカス範囲の論理フォーカスを保持します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-116">When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.</span></span>  <span data-ttu-id="7e18f-117"><xref:System.Windows.Controls.MenuItem> は、キーボードフォーカスを取得し、<xref:System.Windows.Controls.Menu> のフォーカス範囲の論理フォーカスを取得します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-117">The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  <span data-ttu-id="7e18f-118">キーボードフォーカスがルート <xref:System.Windows.Window>に戻ると、論理フォーカスを持つフォーカス範囲 <xref:System.Windows.Window> の要素はキーボードフォーカスを取得します。この例では <xref:System.Windows.Controls.TextBox>です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-118">When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="7e18f-119"><xref:System.Windows.Controls.TextBox> にキーボードフォーカスと論理フォーカスがあるようになりました。</span><span class="sxs-lookup"><span data-stu-id="7e18f-119">The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.</span></span>  <span data-ttu-id="7e18f-120"><xref:System.Windows.Controls.MenuItem> はキーボードフォーカスを失いますが、<xref:System.Windows.Controls.Menu> フォーカス範囲の論理フォーカスを保持します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-120">The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  
  
 <span data-ttu-id="7e18f-121"><xref:System.Windows.Window>、<xref:System.Windows.Controls.Menu>、<xref:System.Windows.Controls.ToolBar>、および <xref:System.Windows.Controls.ContextMenu> での <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> の既定値は `true`です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-121">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="7e18f-122">フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」と「フォーカスの[概要](~/docs/framework/wpf/advanced/focus-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7e18f-122">For more information on focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and the [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7e18f-123">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="7e18f-123">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7e18f-124">追加するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e18f-124">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="7e18f-125"><see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-125">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7e18f-126">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="7e18f-126">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7e18f-127">追加するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e18f-127">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="7e18f-128"><see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 添付イベントのハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-128">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="ILAsm" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="F#" Value="see GetFocusedElement, and SetFocusedElement" Usage="see GetFocusedElement, and SetFocusedElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7e18f-129">このプロパティが添付される要素に論理フォーカスがあるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-129">Determines whether the element this property is attached to has logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e18f-130"><xref:System.Windows.Input.FocusManager.FocusedElement%2A> は、特定のフォーカス範囲の論理フォーカスを持つ要素です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-130">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="7e18f-131">このオブジェクトは、キーボードフォーカスを持っている場合とない場合があります。</span><span class="sxs-lookup"><span data-stu-id="7e18f-131">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="7e18f-132">キーボードフォーカスは、キーボード入力を受け取る要素を指します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-132">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="7e18f-133">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7e18f-133">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="7e18f-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> と <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> を使用して、指定したフォーカス範囲内のフォーカスされた要素を取得および設定できます。</span><span class="sxs-lookup"><span data-stu-id="7e18f-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> and <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> can be used to get and set the focused element within the specified focus scope.</span></span>  
  
<a name="dependencyPropertyInfo_FocusedElement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7e18f-135">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="7e18f-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7e18f-136">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="7e18f-136">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.FocusedElementProperty>|  
|<span data-ttu-id="7e18f-137">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="7e18f-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="7e18f-138">なし</span><span class="sxs-lookup"><span data-stu-id="7e18f-138">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7e18f-139">次の例は、フォーカスを持つ要素 <xref:System.Windows.Controls.Button> を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="7e18f-139">The following example shows how to make a <xref:System.Windows.Controls.Button> the focused element.</span></span>  
  
 [!code-xml[markupsnippets#MarkupFocusManagerFocusedElementXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupfocusmanagerfocusedelementxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedElementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e18f-140"><see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> 添付プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-140">Identifies the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetFocusedElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusedElement (element As DependencyObject) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetFocusedElement(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusedElement : System.Windows.DependencyObject -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.FocusManager.GetFocusedElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7e18f-141">指定したフォーカス範囲で論理フォーカスを持つ要素。</span><span class="sxs-lookup"><span data-stu-id="7e18f-141">The element with logical focus in the specified focus scope.</span></span></param>
        <summary><span data-ttu-id="7e18f-142">指定したフォーカス範囲内で論理フォーカスを持つ要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-142">Gets the element with logical focus within the specified focus scope.</span></span></summary>
        <returns><span data-ttu-id="7e18f-143">論理フォーカスを持つ指定したフォーカス範囲内の要素。</span><span class="sxs-lookup"><span data-stu-id="7e18f-143">The element in the specified focus scope with logical focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e18f-144"><xref:System.Windows.Input.FocusManager.FocusedElement%2A> は、特定のフォーカス範囲の論理フォーカスを持つ要素です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-144">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="7e18f-145">このオブジェクトは、キーボードフォーカスを持っている場合とない場合があります。</span><span class="sxs-lookup"><span data-stu-id="7e18f-145">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="7e18f-146">キーボードフォーカスは、キーボード入力を受け取る要素を指します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-146">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="7e18f-147">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7e18f-147">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="7e18f-148">`element` がフォーカス範囲でない場合、このメソッドは `null`を返します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-148">If `element` is not a focus scope, this method will return `null`.</span></span>  
  
 <span data-ttu-id="7e18f-149"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>を使用して、指定したフォーカス範囲内で論理フォーカスを持つ要素を指定します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-149">Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e18f-150">次の例では、<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> を使用して論理フォーカスを持つ要素を設定し、<xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>を使用して論理フォーカスを持つ要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-150">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7e18f-151"><paramref name="element" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-151"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFocusScope">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusScope (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusScope : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Input.FocusManager.GetFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7e18f-152">最も近いフォーカス範囲を取得する対象となる要素。</span><span class="sxs-lookup"><span data-stu-id="7e18f-152">The element to get the closest focus scope for.</span></span></param>
        <summary><span data-ttu-id="7e18f-153"><see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> に設定された <see langword="true" /> を持ち、指定した要素に最も近い先祖を決定します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-153">Determines the closest ancestor of the specified element that has <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> set to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="7e18f-154">指定した要素のフォーカス範囲。</span><span class="sxs-lookup"><span data-stu-id="7e18f-154">The focus scope for the specified element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e18f-155"><xref:System.Windows.Window>、<xref:System.Windows.Controls.Menu>、<xref:System.Windows.Controls.ToolBar>、<xref:System.Windows.Controls.ContextMenu> の <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> の既定値は `true`です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-155">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="7e18f-156">フォーカス範囲は、そのスコープ内の <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> を追跡するコンテナー要素です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-156">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="7e18f-157">既定では、<xref:System.Windows.Window> クラスは、<xref:System.Windows.Controls.Menu>、<xref:System.Windows.Controls.ContextMenu>、および <xref:System.Windows.Controls.ToolBar> クラスとしてフォーカス範囲となります。</span><span class="sxs-lookup"><span data-stu-id="7e18f-157">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="7e18f-158">フォーカス範囲である要素が `true`に設定されて <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>。</span><span class="sxs-lookup"><span data-stu-id="7e18f-158">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="7e18f-159">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7e18f-159">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7e18f-160"><paramref name="element" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-160"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIsFocusScope">
      <MemberSignature Language="C#" Value="public static bool GetIsFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFocusScope (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFocusScope : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.FocusManager.GetIsFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7e18f-161">添付プロパティの読み込み元の要素。</span><span class="sxs-lookup"><span data-stu-id="7e18f-161">The element from which to read the attached property.</span></span></param>
        <summary><span data-ttu-id="7e18f-162">指定した <see cref="T:System.Windows.DependencyObject" /> がフォーカス範囲であるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-162">Determines whether the specified <see cref="T:System.Windows.DependencyObject" /> is a focus scope.</span></span></summary>
        <returns><span data-ttu-id="7e18f-163"><see langword="true" /> が指定した要素で <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7e18f-163"><see langword="true" /> if <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> is set to <see langword="true" /> on the specified element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e18f-164">フォーカス範囲は、そのスコープ内の <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> を追跡するコンテナー要素です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-164">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="7e18f-165">既定では、<xref:System.Windows.Window> クラスは、<xref:System.Windows.Controls.Menu>、<xref:System.Windows.Controls.ContextMenu>、および <xref:System.Windows.Controls.ToolBar> クラスとしてフォーカス範囲となります。</span><span class="sxs-lookup"><span data-stu-id="7e18f-165">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="7e18f-166">フォーカス範囲である要素が `true`に設定されて <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>。</span><span class="sxs-lookup"><span data-stu-id="7e18f-166">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="7e18f-167">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7e18f-167">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.GotFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" Usage="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7e18f-168">要素がフォーカスを取得すると発生します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-168">Occurs when an element gets focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e18f-169"><see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-169">Identifies the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScope">
      <MemberSignature Language="C#" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="ILAsm" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.IsFocusScope" />
      <MemberSignature Language="VB.NET" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="F#" Value="see GetIsFocusScope, and SetIsFocusScope" Usage="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7e18f-170">このプロパティが添付される要素がフォーカス範囲であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-170">Determines whether the element this property is attached to is a focus scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e18f-171">フォーカス範囲は、そのスコープ内の <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> を追跡するコンテナー要素です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-171">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="7e18f-172">既定では、<xref:System.Windows.Window> クラスは、<xref:System.Windows.Controls.Menu>、<xref:System.Windows.Controls.ContextMenu>、および <xref:System.Windows.Controls.ToolBar> クラスとしてフォーカス範囲となります。</span><span class="sxs-lookup"><span data-stu-id="7e18f-172">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="7e18f-173">フォーカス範囲である要素が `true`に設定されて <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>。</span><span class="sxs-lookup"><span data-stu-id="7e18f-173">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="7e18f-174">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7e18f-174">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocusScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="7e18f-175">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="7e18f-175">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="7e18f-176">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="7e18f-176">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.IsFocusScopeProperty>|  
|<span data-ttu-id="7e18f-177">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="7e18f-177">Metadata properties set to `true`</span></span>|<span data-ttu-id="7e18f-178">なし</span><span class="sxs-lookup"><span data-stu-id="7e18f-178">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="7e18f-179">次の例では、<xref:System.Windows.Controls.StackPanel> をフォーカス範囲にします。</span><span class="sxs-lookup"><span data-stu-id="7e18f-179">The following example makes a <xref:System.Windows.Controls.StackPanel> a focus scope.</span></span>  
  
 [!code-xml[markupsnippets#MarkupIsFocusScopeXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupisfocusscopexaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e18f-180"><see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> 添付プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-180">Identifies the <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> attached property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e18f-181"><xref:System.Windows.Window>、<xref:System.Windows.Controls.Menu>、<xref:System.Windows.Controls.ToolBar>、<xref:System.Windows.Controls.ContextMenu> の <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> の既定値は `true`です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-181">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="7e18f-182">フォーカス範囲は、そのスコープ内の <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> を追跡するコンテナー要素です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-182">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="7e18f-183">既定では、<xref:System.Windows.Window> クラスは、<xref:System.Windows.Controls.Menu>、<xref:System.Windows.Controls.ContextMenu>、および <xref:System.Windows.Controls.ToolBar> クラスとしてフォーカス範囲となります。</span><span class="sxs-lookup"><span data-stu-id="7e18f-183">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="7e18f-184">フォーカス範囲である要素が `true`に設定されて <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>。</span><span class="sxs-lookup"><span data-stu-id="7e18f-184">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="7e18f-185">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7e18f-185">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.LostFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" Usage="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7e18f-186">要素がフォーカスを失ったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-186">Occurs when an element loses focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e18f-187"><see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 添付イベントを識別します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-187">Identifies the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7e18f-188">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="7e18f-188">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7e18f-189">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e18f-189">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="7e18f-190"><see cref="E:System.Windows.Input.FocusManager.GotFocus" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-190">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7e18f-191">このイベントをリッスンする <see cref="T:System.Windows.UIElement" /> または <see cref="T:System.Windows.ContentElement" />。</span><span class="sxs-lookup"><span data-stu-id="7e18f-191">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="7e18f-192">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7e18f-192">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="7e18f-193"><see cref="E:System.Windows.Input.FocusManager.LostFocus" /> 添付イベントのハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-193">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusedElement">
      <MemberSignature Language="C#" Value="public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFocusedElement(class System.Windows.DependencyObject element, class System.Windows.IInputElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFocusedElement (element As DependencyObject, value As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFocusedElement(System::Windows::DependencyObject ^ element, System::Windows::IInputElement ^ value);" />
      <MemberSignature Language="F#" Value="static member SetFocusedElement : System.Windows.DependencyObject * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.FocusManager.SetFocusedElement (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7e18f-194">指定した要素を <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> にするフォーカス範囲。</span><span class="sxs-lookup"><span data-stu-id="7e18f-194">The focus scope in which to make the specified element the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span></span></param>
        <param name="value"><span data-ttu-id="7e18f-195">論理フォーカスの指定先にする要素。</span><span class="sxs-lookup"><span data-stu-id="7e18f-195">The element to give logical focus to.</span></span></param>
        <summary><span data-ttu-id="7e18f-196">指定した要素に論理フォーカスを設定します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-196">Sets logical focus on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e18f-197"><xref:System.Windows.Input.FocusManager.FocusedElement%2A> は、特定のフォーカス範囲の論理フォーカスを持つ要素です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-197">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for the specific focus scope.</span></span>  <span data-ttu-id="7e18f-198">このオブジェクトは、キーボードフォーカスを持っている場合とない場合があります。</span><span class="sxs-lookup"><span data-stu-id="7e18f-198">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="7e18f-199">キーボードフォーカスは、キーボード入力を受け取る要素を指します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-199">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="7e18f-200">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7e18f-200">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="7e18f-201">要素が含まれているフォーカス範囲の先祖であるフォーカス範囲を指定できます。</span><span class="sxs-lookup"><span data-stu-id="7e18f-201">It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.</span></span>  <span data-ttu-id="7e18f-202">たとえば、<xref:System.Windows.Controls.StackPanel> がフォーカス範囲であり、その親 <xref:System.Windows.Window> がフォーカス範囲である場合、<xref:System.Windows.Controls.StackPanel> の <xref:System.Windows.Controls.TextBox> 子は <xref:System.Windows.Window> を呼び出すときに、<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>をフォーカス範囲として指定できます。</span><span class="sxs-lookup"><span data-stu-id="7e18f-202">For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span></span>  <span data-ttu-id="7e18f-203"><xref:System.Windows.Controls.TextBox> は、<xref:System.Windows.Window> のフォーカス範囲と <xref:System.Windows.Controls.StackPanel> のフォーカス範囲の両方に対して <xref:System.Windows.Input.FocusManager.FocusedElement%2A> ます。</span><span class="sxs-lookup"><span data-stu-id="7e18f-203">The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.</span></span>  
  
 <span data-ttu-id="7e18f-204"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> は、指定された要素の論理フォーカスを指定されたフォーカス範囲内に与え、要素のキーボードフォーカスを指定しようとします。</span><span class="sxs-lookup"><span data-stu-id="7e18f-204"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e18f-205">次の例では、<xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> を使用して論理フォーカスを持つ要素を設定し、<xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>を使用して論理フォーカスを持つ要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-205">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFocusScope">
      <MemberSignature Language="C#" Value="public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFocusScope(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFocusScope (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFocusScope(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsFocusScope : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.FocusManager.SetIsFocusScope (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="7e18f-206">フォーカス範囲にする要素。</span><span class="sxs-lookup"><span data-stu-id="7e18f-206">The element to make a focus scope.</span></span></param>
        <param name="value"><span data-ttu-id="7e18f-207"><see langword="true" /> がフォーカス範囲である場合は <paramref name="element" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7e18f-207"><see langword="true" /> if <paramref name="element" /> is a focus scope; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7e18f-208">指定した <see cref="T:System.Windows.DependencyObject" /> をフォーカス範囲として設定します。</span><span class="sxs-lookup"><span data-stu-id="7e18f-208">Sets the specified <see cref="T:System.Windows.DependencyObject" /> as a focus scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e18f-209">フォーカス範囲は、そのスコープ内の <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> を追跡するコンテナー要素です。</span><span class="sxs-lookup"><span data-stu-id="7e18f-209">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="7e18f-210">既定では、<xref:System.Windows.Window> クラスは、<xref:System.Windows.Controls.Menu>、<xref:System.Windows.Controls.ContextMenu>、および <xref:System.Windows.Controls.ToolBar> クラスとしてフォーカス範囲となります。</span><span class="sxs-lookup"><span data-stu-id="7e18f-210">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="7e18f-211">フォーカス範囲である要素が `true`に設定されて <xref:System.Windows.Input.FocusManager.IsFocusScope%2A>。</span><span class="sxs-lookup"><span data-stu-id="7e18f-211">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="7e18f-212">フォーカス、キーボードフォーカス、および論理フォーカスの詳細については、「[入力の概要](~/docs/framework/wpf/advanced/input-overview.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7e18f-212">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e18f-213">次の例では、<xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>を使用して、要素をフォーカススコープにします。</span><span class="sxs-lookup"><span data-stu-id="7e18f-213">The follow example makes an element a focus scope by using <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusSetIsFocusScope](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focussetisfocusscope)]
 [!code-vb[focussnippets#FocusSetIsFocusScope](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focussetisfocusscope)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
