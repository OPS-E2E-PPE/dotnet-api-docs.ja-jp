<Type Name="Part" FullName="System.Web.UI.WebControls.WebParts.Part">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d29076fb22e8713e22ebed57c61115c1cc380be8" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77240548" /></Metadata><TypeSignature Language="C#" Value="public abstract class Part : System.Web.UI.WebControls.Panel, System.Web.UI.INamingContainer, System.Web.UI.WebControls.ICompositeControlDesignerAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Part extends System.Web.UI.WebControls.Panel implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.ICompositeControlDesignerAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.Part" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Part&#xA;Inherits Panel&#xA;Implements ICompositeControlDesignerAccessor, INamingContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class Part abstract : System::Web::UI::WebControls::Panel, System::Web::UI::INamingContainer, System::Web::UI::WebControls::ICompositeControlDesignerAccessor" />
  <TypeSignature Language="F#" Value="type Part = class&#xA;    inherit Panel&#xA;    interface INamingContainer&#xA;    interface ICompositeControlDesignerAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Panel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.ICompositeControlDesignerAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.PartDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.PartDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web フォーム ページ上のモジュール式ユーザー インターフェイスをレンダリングするすべての Web パーツのパーツ コントロールの基底クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.Part> クラスは、すべてのパーツコントロールに共通のプロパティを定義し、Web ページでのモジュール形式の一貫した外観を可能にします。 これらの共通プロパティには、タイトル、説明、およびパーツコントロールを囲む chrome または frame の特性が含まれます。  
  
 <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> プロパティは、パーツコントロールのタイトルを指定します。 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> プロパティは、パーツコントロールの目的を要約するために使用され、コントロールのタイトルバーにツールヒントとして表示されます。 <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> プロパティは、パーツコントロールの周囲に描画される境界線の種類を指定します。一方、<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> プロパティは、パーツコントロールが正常にレンダリングされるか、または最小化されるかを示します。 パーツコントロールの境界は、パーツを含むゾーンのプロパティの影響を受けます。たとえば、<xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A> プロパティは、ゾーンに含まれるすべてのパーツコントロールのフレームに影響します。  
  
 パーツコントロールの1つの種類は、対応するゾーン内にコンテンツをレンダリングする <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 もう1つの型は <xref:System.Web.UI.WebControls.WebParts.EditorPart> コントロールであり、個々の <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを変更 (カスタマイズ) するために使用されるユーザーインターフェイス (UI) コントロールを提供します。 パートコントロールの3番目の種類は <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールで、ユーザーが Web ページに追加したり、Web ページから削除したりできる <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの一覧を提供します。  
  
 パーツコントロールは、抽象 <xref:System.Web.UI.WebControls.WebParts.WebZone> クラスから派生するゾーンに含まれています。 ゾーンは、含まれているパーツコントロールを整理する役割を担います。 各ゾーンは、ヘッダー、フッター、タイトルバー、境界など、含まれている各パーツコントロールの周囲の UI 要素を含む、自身の UI 要素もレンダリングします。  
  
> [!NOTE]
>  通常、パーツコントロールはゾーンに存在しますが、コントロールが Web ページのマークアップで宣言によって参照されている場合は、ゾーンの外側にパーツコントロールを配置することができます。 パーツコントロールが Web ページ上のゾーンの外側で宣言されている場合、コントロールは引き続き機能しますが、その Web パーツ機能のほとんどは失われます。 たとえば、コントロールを編集することはできません。また、実行時にゾーンにドラッグすることもできません。 また、ゾーンからパーツコントロールをドラッグして、実行時にゾーン外のページにドロップすることもできます。  
  
 次の表に、基本の部分の種類と、それらに対応するゾーンの種類の例をいくつか示します。  
  
|Part コントロール型|ゾーンの種類|  
|-----------------------|---------------|  
|<xref:System.Web.UI.WebControls.WebParts.WebPart>|<xref:System.Web.UI.WebControls.WebParts.WebPartZone>|  
|<xref:System.Web.UI.WebControls.WebParts.EditorPart>|<xref:System.Web.UI.WebControls.WebParts.EditorZone>|  
|<xref:System.Web.UI.WebControls.WebParts.CatalogPart>|<xref:System.Web.UI.WebControls.WebParts.CatalogZone>|  
  
 <xref:System.Web.UI.WebControls.WebParts.Part> クラスから派生したさまざまな種類のパーツコントロールは、継承された UI 指向プロパティを異なる方法で処理します。 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールは、継承された UI プロパティのいくつかをオーバーライドし、`Personalizable` 属性でマークします (詳細については、<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute> クラスのドキュメントを参照してください)。これにより、これらのプロパティの値を、今後のブラウザーセッション (パーソナル化と呼ばれる機能) で保存できるようになります。 たとえば、プログラムを使用して、ユーザーが実行時に <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPart.Title%2A> プロパティの値を更新できるようにすると、その値はパーソナライズされます (既定では、パーソナル化が有効になっていることを前提としています)。 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが <xref:System.Web.UI.WebControls.WebParts.Part> クラスおよび <xref:System.Web.UI.WebControls.WebControl> クラスから継承する UI プロパティのいくつかは、同じように処理されます。  
  
 これに対し、<xref:System.Web.UI.WebControls.WebParts.EditorPart> や <xref:System.Web.UI.WebControls.WebParts.CatalogPart>などの他のパーツコントロールでは、継承された UI プロパティを個人用に設定することはできません。 このため、プログラムによって割り当てられたプロパティ値は、今後のブラウザーセッションでは保存されません。 たとえば、ユーザーがプログラムを使用して、実行時に <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> コントロールの <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart.Title%2A> プロパティを更新できるようにした場合、コントロールが閉じられるか、ブラウザーセッションが終了すると、更新された値は失われます。  
  
 これらの継承された UI プロパティに値を保存する簡単な方法として、今後のブラウザーセッション用に <xref:System.Web.UI.WebControls.WebParts.EditorPart> および <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールに対して、ページの永続形式でプロパティ値を宣言する方法があります。 ただし、これは静的な方法であり、ユーザーがプロパティ値をパーソナル化することはできません。 または、ユーザーが実行時にカスタマイズできるように、継承された UI プロパティに対するプログラムによる更新を有効にする場合は、プライベートな静的変数を使用してプロパティ値を保存できます。 <xref:System.Web.UI.WebControls.WebParts.EditorPart> または <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールの新しいインスタンスが作成されるたびに (たとえば、コントロールの <xref:System.Web.UI.Control.Init> イベントを処理するメソッドで)、静的変数の値を対応するプロパティに再割り当てできます。 このようなアプローチを使用すると、ユーザーは Web パーツアプリケーションの編集 UI とカタログ UI をカスタマイズできます。  
  
   
  
## Examples  
 次のコード例では、ASP.NET Web ページで参照されるカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの2つのインスタンスを使用して、<xref:System.Web.UI.WebControls.WebParts.Part> クラスの複数のプロパティを宣言型で使用する方法を示します。 コード例を実行するには、このソースコードをコンパイルする必要があります。 これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。 または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。 コンパイルの両方の方法を示すチュートリアルについては、「[チュートリアル: カスタム Web サーバーコントロールの開発と使用](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)」を参照してください。  
  
 この例の最初の部分には、`TextDisplayWebPart`という名前のカスタムコントロールのコードが含まれています。 コントロールは <xref:System.Web.UI.WebControls.WebParts.WebPart>から派生するため、<xref:System.Web.UI.WebControls.WebParts.Part> クラスによって提供される共通プロパティも継承し、このコード例では、これらのプロパティの使用方法を示しています。  
  
 [!code-csharp[WebParts_Part_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/textdisplaywebpart.cs#2)]
 [!code-vb[WebParts_Part_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/textdisplaywebpart.vb#2)]  
  
 この例の2番目の部分では、ASP.NET Web ページでカスタムパーツコントロールを参照する方法を示します。 さまざまな <xref:System.Web.UI.WebControls.WebParts.Part> プロパティが、宣言によってカスタムコントロールインスタンスに割り当てられていることに注意してください。 ページ上の2つのインスタンスを参照する宣言型コードを比較し、ブラウザーにページを読み込みます。 さまざまなプロパティがコントロールの外観にどのように影響するかに注意してください。 たとえば、ブラウザーにページを読み込むと、<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> プロパティ値が <xref:System.Web.UI.WebControls.WebParts.PartChromeState.Minimized>に設定されているため、`TextDisplayWebPart` コントロールの2番目のインスタンスが最小化されます。  
  
 [!code-aspx-csharp[WebParts_Part_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-aspx-vb[WebParts_Part_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>通常、カスタム Web パーツコントロールを開発するには、<see cref="T:System.Web.UI.WebControls.WebParts.Part" /> クラスから直接継承しないようにする必要があります。 Web パーツの完全な機能を提供するために、Web パーツコントロールセットには、<see cref="T:System.Web.UI.WebControls.WebParts.Part" /> クラスから派生したクラス (<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />、<see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />、および <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />) が必要です。したがって、カスタムコントロールを開発するには、これらのクラスから派生させる必要があります。 ただし、基本 <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> クラスの動作を理解することも重要です。これは、他のすべてのパートクラスで使用される共通のプロパティセットを提供するためです。</para></block>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/hhy9ewf1(v=vs.100)">ASP.NET Web パーツの概要</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)">Web パーツコントロールセットの概要</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
  </Docs>
  <Members>
    <Member MemberName="ChromeState">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.PartChromeState ChromeState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeState ChromeState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.ChromeState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ChromeState As PartChromeState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::PartChromeState ChromeState { System::Web::UI::WebControls::WebParts::PartChromeState get(); void set(System::Web::UI::WebControls::WebParts::PartChromeState value); };" />
      <MemberSignature Language="F#" Value="member this.ChromeState : System.Web.UI.WebControls.WebParts.PartChromeState with get, set" Usage="System.Web.UI.WebControls.WebParts.Part.ChromeState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パーツ コントロールが最小化または標準のどちらの状態で表示されるかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> 値のいずれか 1 つです。 既定では、 <see cref="F:System.Web.UI.WebControls.WebParts.PartChromeState.Normal" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パーツコントロールの <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> は、通常でも最小化でもかまいません。  
  
   
  
## Examples  
 次のコード例は、パーツコントロールでの <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> プロパティの宣言型の使用方法を示しています。 この例では、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール `TextDisplayWebPart`が必要です。これは、<xref:System.Web.UI.WebControls.WebParts.Part> クラスの概要の「例」セクションにあります。  
  
 Web ページの宣言型マークアップでは、`TextDisplayWebPart` コントロールの2番目のインスタンスによって <xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A> プロパティが設定されることに注意してください。 ブラウザーにページを読み込むと、2番目のコントロールインスタンスが最小化された状態で表示されます。  
  
 [!code-aspx-csharp[WebParts_Part_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-aspx-vb[WebParts_Part_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定された値が <see cref="T:System.Web.UI.WebControls.WebParts.PartChromeState" /> 値ではありません。</exception>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> などの派生クラスで <see cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeState" /> をオーバーライドして、コントロールの境界線の状態をユーザーがカスタマイズできるようにすることができます。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="ChromeType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.PartChromeType ChromeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WebParts.PartChromeType ChromeType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ChromeType As PartChromeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::PartChromeType ChromeType { System::Web::UI::WebControls::WebParts::PartChromeType get(); void set(System::Web::UI::WebControls::WebParts::PartChromeType value); };" />
      <MemberSignature Language="F#" Value="member this.ChromeType : System.Web.UI.WebControls.WebParts.PartChromeType with get, set" Usage="System.Web.UI.WebControls.WebParts.Part.ChromeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.PartChromeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web パーツ コントロールを囲む境界線の種類を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 値のいずれか 1 つです。 既定では、 <see cref="F:System.Web.UI.WebControls.WebParts.PartChromeType.Default" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パーツコントロールの <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> プロパティによって、コントロールを囲む境界線の種類が決まります。 オプションには、タイトルのみ、境界線のみ、タイトルと境界線、または既定のオプションが表示されます。このオプションでは、単に <xref:System.Web.UI.WebControls.WebParts.WebZone.PartChromeType%2A> プロパティの値が使用されます。  
  
   
  
## Examples  
 次のコード例は、パーツコントロールでの <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> プロパティの宣言型の使用方法を示しています。 この例では、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール `TextDisplayWebPart`が必要です。これは、<xref:System.Web.UI.WebControls.WebParts.Part> クラスの概要の「例」セクションにあります。  
  
 Web ページの宣言型コードでは、`TextDisplayWebPart` コントロールの2番目のインスタンスは、その <xref:System.Web.UI.WebControls.WebParts.Part.ChromeType%2A> プロパティにタイトルだけを設定します。一方、最初のインスタンスにはタイトルと境界線があります。 ブラウザーにページを読み込むと、コントロールの2番目のインスタンスが最小化されます。 コントロールを最大化すると、境界のないタイトルが表示されます。  
  
 [!code-aspx-csharp[WebParts_Part_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-aspx-vb[WebParts_Part_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">値が、<see cref="T:System.Web.UI.WebControls.WebParts.PartChromeType" /> 値ではありません。</exception>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> などの派生クラスでは、<see cref="P:System.Web.UI.WebControls.WebParts.Part.ChromeType" /> をオーバーライドして、コントロールの枠線の種類をユーザーがカスタマイズできるようにすることができます。</para></block>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.WebControls.WebParts.Part.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー インターフェイスの階層構造の指定されたサーバー コントロールの子コントロールを格納している <see cref="T:System.Web.UI.ControlCollection" /> オブジェクトを取得します。</summary>
        <value>指定されたサーバー コントロールの子コントロールのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ページでは、サーバーコントロールの開始タグと終了タグの間にコントロールが宣言によって追加されると、ASP.NET によって、そのコントロールが、含まれているサーバーコントロールの <xref:System.Web.UI.ControlCollection> オブジェクトに自動的に追加されます。 サーバー上で処理されない HTML タグやテキスト文字列は、<xref:System.Web.UI.LiteralControl> オブジェクトとして扱われます。 これらは、他のサーバーコントロールと同様にコレクションに追加されます。  
  
 <xref:System.Web.UI.Control.Controls%2A> プロパティを使用すると、任意のサーバーコントロールの <xref:System.Web.UI.ControlCollection> クラスのインスタンスにプログラムでアクセスできます。 コレクションにコントロールを追加したり、コレクションからコントロールを削除したり、コレクション内のサーバーコントロールを反復処理したりできます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.Part.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="part.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>呼び出されたサーバー コントロールとそのすべての子コントロールにデータ ソースをバインドします。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.Part.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パーツ コントロールのツールヒントやカタログで使用する、パーツ コントロールの動作をまとめた短い語句を取得または設定します。</summary>
        <value>パーツ コントロールの機能を簡潔にまとめた文字列。 既定値は空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> プロパティは、通常、パーツコントロールの一覧を提供するカタログで使用される文字列であり、パーツコントロールのタイトルバーのツールヒントとして使用されます。 <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> の内容は、パーツコントロールのタイトルバーのタイトルテキストの上にマウスポインターを置くと、ツールヒントに表示されます。 ツールヒントのテキストは、<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> プロパティの値、ハイフン、<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> プロパティ値の順に作成されます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次のコード例は、パーツコントロールでの <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> プロパティの宣言型の使用方法を示しています。 この例では、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール `TextDisplayWebPart`が必要です。これは、<xref:System.Web.UI.WebControls.WebParts.Part> クラスの概要の「例」セクションにあります。  
  
 ブラウザーにページを読み込むと、最初のコントロールインスタンスのタイトルテキストの上にマウスポインターを置くと、ツールヒントに説明のテキストが表示されます。  
  
 [!code-aspx-csharp[WebParts_Part_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-aspx-vb[WebParts_Part_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> などの派生クラスで <see cref="P:System.Web.UI.WebControls.WebParts.Part.Description" /> をオーバーライドして、コントロールの説明のユーザーの個人用設定を有効にすることができます。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls">
      <MemberSignature Language="C#" Value="void ICompositeControlDesignerAccessor.RecreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.Part.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Sub RecreateChildControls () Implements ICompositeControlDesignerAccessor.RecreateChildControls" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls() = System::Web::UI::WebControls::ICompositeControlDesignerAccessor::RecreateChildControls;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>複合パーツ コントロールのデザイナーの開発者が、デザイン サーフェイスでコントロールの子コントロールを再作成できるようにします。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.ICompositeControlDesignerAccessor.RecreateChildControls" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.Part.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.Part.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パーツ コントロールのタイトルを取得または設定します。</summary>
        <value>パーツ コントロールのタイトルを表す文字列。 既定値は空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パーツコントロールのタイトルバーに表示されるタイトルテキストは、<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> プロパティによって設定されます。 タイトルテキストは、<xref:System.Web.UI.WebControls.WebParts.WebPartZone> ゾーンに表示される <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールまたはその他のサーバーコントロールのタイトルバーの上にマウスポインターを置くと、ツールヒントテキストの一部としても表示されます。  
  
 タイトルのテキストのスタイルは、パーツコントロールを含むゾーンの <xref:System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle%2A> プロパティによって決定されます。  
  
 コントロールのタイトルを指定しない場合は、Web パーツコントロールセットによって、タイトルとして使用する既定の文字列が自動的に計算されます。 詳細については、<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> を参照してください。 また、タイトル文字列に追加される標準のサブタイトルを指定することもできます。 詳細については、「<xref:System.Web.UI.WebControls.WebParts.WebPart.Subtitle%2A>」を参照してください。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については、「<xref:System.ComponentModel.LocalizableAttribute> と[グローバリゼーションおよびローカリゼーション](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次のコード例は、パーツコントロールでの <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> プロパティの宣言型の使用方法を示しています。 この例では、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール `TextDisplayWebPart`が必要です。これは、<xref:System.Web.UI.WebControls.WebParts.Part> クラスの概要の「例」セクションにあります。  
  
 [!code-aspx-csharp[WebParts_Part_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_Part_Overview/CS/partoverviewcs.aspx#1)]
 [!code-aspx-vb[WebParts_Part_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_Part_Overview/VB/partoverviewvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> などの派生クラスで <see cref="P:System.Web.UI.WebControls.WebParts.Part.Title" /> をオーバーライドして、タイトルのユーザーの個人用設定を有効にすることができます。</para></block>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
  </Members>
</Type>
