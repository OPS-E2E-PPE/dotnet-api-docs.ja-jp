<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b5b0f5692bc1d3dd9e3aa93ed87db2f1b8b80ade" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77240626" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>あらかじめ定義した設定でコントロールを Web ページに追加できるように、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロール (または <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールとして使用される他の ASP.NET サーバー コントロール) の記述ファイルをインポートします。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールを使用すると、ユーザーが <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンに追加する <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールまたはサーバーコントロールの設定を説明する説明ファイルをインポートできます。  
  
 ユーザーが記述ファイルをインポートすると、ファイルで参照される <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロール内に表示され、ユーザーはそのコントロールをページに追加できます。  
  
 説明ファイルが、コントロール自体と同じではありません。 これは、で終わる XML ファイルです。WebPart 拡張機能には、名前と値のペアが含まれています。これは、コントロールの状態を記述する、ほとんどのプロパティ値です。 説明ファイルは、指定された XML 形式に従って作成されます。詳細については、「 [Web パーツコントロールの説明ファイル](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)」を参照してください。  
  
 記述ファイルが参照するコントロールと同様に、アセンブリにコンパイルすることも、.ascx ファイルで定義されているユーザーコントロールにすることもできます。 どちらの場合も、インポートした説明ファイルで参照されるコントロールは、そのコントロールをインポートしようとしているページをホストする Web サーバー上に存在している必要があります。 説明ファイルはコントロール名と、コントロールを含むアセンブリ (またはファイル) を参照します。説明ファイルには、コントロールのプロパティ値、外観、および動作に影響する設定が含まれています。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールを使用すると、ユーザーはコントロールの設定を共有できます。 複雑なコントロールには、多くのプロパティと設定を含めることができます。 たとえば、大企業内の一般的なイントラネットサイトでは、カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> 制御に、ユーザーの環境に固有の値を保持する多数のプロパティが含まれている場合があります (データベース接続、部門別の情報など)。 コントロールには、その外観に影響を与える多数のプロパティが含まれている場合もあります。 1人のユーザーが特定のサイトのコントロールを個人用に設定し、適切に動作させることができます。次に、そのコントロールの説明ファイルをエクスポートし、そのファイルをインポートして、完全に構成されたコントロールを他のイントラネットに追加します。個人用に設定できるサイト。 コントロールが含まれているコンパイル済みのアセンブリまたはユーザーコントロールファイルが、サイトをホストしている Web サーバー上に存在する限り、ユーザーは他の Web サイトにコントロールを追加できます。  
  
 ユーザーが記述ファイル (およびそれに関連付けられたサーバーコントロール) を Web ページにインポートするためのメカニズムは、ページ開発者が Web ページに追加する必要がある <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールです。 ユーザーがページをカタログ表示モードに切り替えると、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールが表示され、ユーザーはこのコントロールを使用してを参照できます。インポートするサーバーコントロールに対応する WebPart 記述ファイル。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールによって提供される UI と指示に従って、ユーザーは必要なサーバーコントロールを Web ページに追加できます。このコントロールの外観とプロパティは、インポートされた説明ファイルで指定したとおりに完全に構成されます。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの説明ファイルをインポートするには、まず、既存の <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールに基づいてファイルを作成 (エクスポート) する必要があります。 次の条件が満たされている場合は、コントロールの説明ファイルをエクスポートできます。  
  
-   コントロールには、`Personalizable` 属性でマークされたプロパティがあります。  
  
-   Web.config ファイルでは、`enableExport` 属性値が `<webParts>` 要素の `true` に設定されています。  
  
-   開発者は、コントロールの [<xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>] プロパティの値を <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>の既定値以外の値に設定します。これにより、エクスポートが禁止されます。 <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> プロパティの値が <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>に設定されている場合、ユーザーが説明ファイルをエクスポートしても、`Personalizable` 属性を持つ <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A> パラメーターを含むプロパティはエクスポートされません。 これにより、コントロール開発者は、接続文字列などの機密データが特定の状況でエクスポートされないようにすることができます。  
  
 エクスポートが有効になっているコントロールをエクスポートするには、コントロールの動詞メニューに表示される export 動詞をクリックして、を保存するための指示に従ってください。コントロールの WebPart 記述ファイル。 その後、他のユーザーがこのファイルをインポートして、コントロールの独自のインスタンスを構成できます。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> クラスには、いくつかのプロパティが含まれています。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> プロパティには、ユーザーが説明ファイルを参照するときに指示のテキストが含まれます。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> プロパティには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロール内に表示されるインポートされたコントロールのラベルとして機能するテキストが含まれています。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> には、コントロールの説明をインポートするときにエラーが発生した場合に表示されるテキストが含まれています。 開発者がタイトルを割り当てない場合は、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> プロパティによって基本プロパティがオーバーライドされ、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールに既定のタイトルが割り当てられます。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> プロパティには、ユーザーが説明ファイルをアップロードするためにクリックするボタンのテキストが含まれています。また、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> プロパティには、アップロードプロセスの手順が含まれています。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> クラスには、いくつかの固有のメソッドも含まれています。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> メソッドは、カタログ内の各 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> オブジェクトを取得します。これにより、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールは、各サーバーコントロールのインスタンスを作成しなくても、各サーバーコントロールに関する情報を表示できます。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> メソッドは、メソッドに渡された説明に基づいて、特定の <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールのインスタンスを取得します。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールの使用に関連するいくつかの固有のリスクがあります。 1つの例として、インポートに使用する説明ファイルを使用して、Web アプリケーションに悪意のあるデータをインポートする可能性があります。 説明ファイルの文字列プロパティの値として悪意のあるスクリプトのコードが配置されている場合は、ユーザーが説明ファイルをインポートし、参照先のサーバーコントロールを Web ページに追加すると、そのスクリプトが実行される可能性があります。 記述ファイルが悪意のあるデータにインポートされるリスクを最小限に抑えるために、文字列型のプロパティを持つサーバーコントロールは、常にプロパティデータをエンコードする必要があります。 別のリスクとして、説明ファイルを使用した型のインポートが含まれます (「 [Web パーツコントロールの説明ファイル](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)」を参照)。 悪意のあるユーザーが、多数のアセンブリを <xref:System.AppDomain>に読み込む要求を送信すると、大量のメモリが消費される可能性があります。  
  
 インポートに関連するリスクを回避するために、[インポート] 機能または [<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>] コントロールを使用しないで、機能を完全に無効にすることができます。 また、コントロールにアクセスできるユーザーを制限することもできます。 この操作は、ロール管理を使用してプログラムで行うことができます (「[ロールを使用した承認の管理](https://docs.microsoft.com/previous-versions/aspnet/9ab2fxh0(v=vs.100))」を参照してください)。 たとえば、ページが読み込まれるときに、ユーザーが管理者ロールなどの特定のロールに含まれているかどうかをテストできます。 ユーザーがロールに含まれている場合は、プログラムを使用して、そのユーザーのページに <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールを追加できます。 また、宣言型の方法を使用して、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールを使用できるユーザーのセットを制限することもできます。  カタログを含む web ページ内には、2つの <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールを配置できます。1つはインポート可能なユーザー用で、もう1つはできないユーザー用です。 インポートできるユーザーのゾーンには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールが含まれます。 ゾーン自体は <xref:System.Web.UI.WebControls.LoginView> コントロールの内部に配置できます。これにより、ゾーン内のコントロールの使用を、指定した認証されたユーザーまたはロールのみに制限できます。  
  
   
  
## Examples  
 次のコード例では、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールを、宣言によって Web ページ上でプログラムで使用する方法を示します。 この例には、次の4つの部分があります。  
  
-   Web パーツページの表示モードを変更できるユーザーコントロール。  
  
-   <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールと <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールを含む Web ページ。  
  
-   2つのカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを含むソースコードファイル。  
  
-   ブラウザーでページを読み込むときの例の動作について説明します。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。 ファイルに次のソースコードを配置し、使用している言語に応じて Displaymodemenucs. .ascx または Displaymodemenucs. .ascx という名前を付ける必要があります。 このコントロールの表示モードとソースコードの説明の詳細については、「[チュートリアル: Web パーツページの表示モードの変更](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)」を参照してください。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 コード例の2番目の部分は、Web ページです。 ページの上部には、2つの `register` ディレクティブがあります。1つはユーザーコントロール用で、もう1つは、2つのカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを含むコンパイル済みコンポーネント用です。 ページには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールへの宣言参照があり、宣言型要素の適切な階層内に入れ子になっていることに注意してください。 いくつかのプロパティ値は、`<asp:importcatalogpart>` 要素で宣言によって割り当てられることにも注意してください。 また、`Button1_Click` メソッドは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールのいくつかのプロパティ値を更新します。  
  
 ページの <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールでは、2つのカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールが宣言されます。 `<aspSample:userinfowebpart>` コントロールには、`exportmode="all"` 属性があります。 この属性は、ユーザーがコントロールの説明ファイルをエクスポートできるようにするために必要です。これは、説明ファイルを使用してコントロールをインポートする他のユーザーによってインポートできます。  
  
> [!NOTE]
>  Web パーツアプリケーションのユーザーが <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの説明ファイルをエクスポートできるようにするには、web.config ファイルの `<webParts>` 要素 (`<system.web>` 要素の子) に `enableExport="true"` 属性を追加して、Web アプリケーションのエクスポート機能を有効にする必要もあります。 既定ではエクスポートは無効になっているので、アプリケーションのエクスポートをまだ有効にしていない場合は、web.config ファイルを編集して、ここで実行します。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 コード例の3番目の部分は、2つの <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールのソースコードです。 これらのコントロールの一部のプロパティは、`WebBrowsable` 属性でマークされていることに注意してください。 これにより、コントロールが編集モードのときにユーザーがこれらのプロパティを編集するためのユーザーインターフェイス (UI) を動的に生成するために、<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> コントロールが使用できるようになります。 また、プロパティは、編集 UI の各コントロールの横に表示されるラベルのテキストを指定するために、`WebDisplayName` 属性でマークされます。 コード例を実行するには、このソースコードをコンパイルする必要があります。 これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。 または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。 このコード例では、動的コンパイルを使用します。 コンパイルの両方の方法を示すチュートリアルについては、「[チュートリアル: カスタム Web サーバーコントロールの開発と使用](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)」を参照してください。  
  
 `TextDisplayWebPart` というカスタムコントロールは、`<aspSample:TextDisplayWebPart>` 要素を使用して Web ページ上で参照されます。 `UserInfoWebPart`と呼ばれるもう1つのコントロールは、最初に Web ページでも宣言されますが、コントロールの説明ファイルをインポートする機能を示すために後で削除します。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 次に、コード例を実行します。 ブラウザーに Web ページを読み込みます。 最初の手順では、`UserInfoWebPart` コントロールを編集します。 **[表示モード]** ドロップダウンリストコントロールを使用して、**[編集]** を選択し、ページを編集モードに切り替えます。 `UserInfoWebPart` コントロール (タイトルバーの下向き矢印) の動詞メニューをクリックし、**[編集]** をクリックします。 編集 UI が表示されると、`UserInfoWebPart` コントロールの下に、フィールド値の編集に使用できる複数の編集コントロールが表示されます。 いくつかのフィールドを編集し、**[OK]** をクリックします。次に、**[表示モード]** ドロップダウンを使用して、ページをブラウズモードに戻します。  
  
 2番目の手順では、をエクスポートします。`UserInfoWebPart` コントロールの WebPart 記述ファイル。 (タイトルバーの下向き矢印によって表される) カスタムコントロールの動詞メニューをクリックし、**[エクスポート]** をクリックします。 指示に従ってを保存します。コントロールの WebPart 記述ファイル。 ここで、Web ページを閉じ、エディターでページソースを編集します。 `<aspSample:userinfowebpart>` コントロール宣言要素を削除し、ファイルを保存して閉じます。 (この手順を実行して、`UserInfoWebPart` コントロールをまだ持っていないユーザーをシミュレートします。これにより、コントロールをページにインポートできます)。  
  
 ブラウザーで Web ページを再度読み込みます。 `UserInfoWebPart` コントロールは、削除したため、表示されません。 **[表示モード]** ドロップダウンリストコントロールを使用して、**[カタログ]** を選択し、ページをカタログモードに切り替えます。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールで、**参照**ボタンをクリックし、を参照します。作成した WebPart ファイルをクリックし、**[アップロード]** ボタンをクリックします。 コントロールへの参照が、その横にチェックボックスと共に表示されます。 このチェックボックスをオンにし、**[追加]** をクリックして、コントロールをページに追加します。  
  
 ページのこのビューが表示されている間に、ページの下部付近にある **[更新]** をクリックして、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールのプロパティ値の数をプログラムで更新した場合の影響を確認します。 このボタンをクリックすると、さまざまなプロパティが UI でどのように変更されているかがわかります。  
  
 最後に、**[閉じる]** をクリックしてカタログモードを終了し、ページをブラウズモードに戻します。 これで、`UserInfoWebPart` コントロールがページに表示されるようになりました。前にエクスポートしたときの値が含まれています。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8">Web パーツコントロールの説明ファイル</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> コンストラクターは既定値です。<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> クラスでコンストラクターが宣言されていないため、クラスの新しいインスタンスが作成されるときに、特別なタスクは実行されません。 .NET Framework は、コンストラクターを内部的に使用してクラスのインスタンスを作成します。  
  
 通常、独自のコードで <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> コンストラクターをプログラムで使用する必要はありません。 コントロールを使用する目的は、デザイン時にページ開発者が宣言によってページを追加することです。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーに、記述ファイルの場所を参照するように指示するテキスト メッセージを取得または設定します。</summary>
        <value>メッセージのテキストを含む文字列。 既定値は、.NET Framework が提供する、カルチャ固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> プロパティを使用すると、ユーザーは、インポートされたコントロールを追加するプロセスで最初に行う必要のある作業の概要を簡単に示すことができます。パスを入力するか、ファイルを参照することにより、説明ファイルの場所を指定します。 このプロパティにカスタム値を指定する一般的な理由は、ユーザーが説明ファイルを検索するために参照する必要のある特定のネットワーク共有など、特別な指示がある場合です。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> プロパティを宣言およびプログラムによって使用する方法を示しています。 例を実行するために必要な完全なコードと手順については、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> クラスの概要の「例」を参照してください。  
  
 コードの次のセクションでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> プロパティ値がコントロールに対して宣言されて設定されていることに注意してください。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 コードのこのセクションでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> プロパティ値がプログラムによって割り当てられます。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 ブラウザーでページを読み込むときに、**[表示モード]** ドロップダウンリストコントロールを使用して**カタログモード**を選択し、ページをカタログモードに切り替えることができます。 カタログモードのページと説明ファイルをアップロードしたら、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールのユーザーインターフェイス (UI) に表示されるさまざまなテキスト文字列に注意してください。 **[説明ファイルのアップロード]** ボタンをクリックすると、UI のいくつかのプロパティのテキストが変更されます。これには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> プロパティのテキストが含まれます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー インターフェイス (UI) で、ボタンを含むフォームがレンダリングされるときにフォーカスを得る既定のボタンとして扱うボタンを取得または設定します。 このプロパティは、ページ開発者コードから呼び出すためのものではありません。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Button" /> コントロールで既定のフォーカスを受け取る <see cref="T:System.Web.UI.WebControls.Panel" /> の ID を含む文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティのコードは、<xref:System.Web.UI.WebControls.Panel> クラスから継承された基本プロパティをオーバーライドして、デザイナーからプロパティを非表示にし、テーマの影響を受けないようにします。 このプロパティはパブリックですが、このプロパティは、このコントロールの既定のレンダリングのために Web パーツコントロールセットによって内部的に使用され、ページ開発者が使用するためのものではありません。  
  
 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、「<xref:System.Web.UI.ThemeableAttribute> and [ASP.NET theme And スキン](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100))」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>カタログ内で利用できる <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールの説明のコレクションを返します。</summary>
        <returns>カタログ内の各コントロールの <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> を含む <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> メソッドは、<xref:System.Web.UI.WebControls.WebParts.CatalogPart> クラスで宣言された抽象基本メソッドの実装を提供します。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> メソッドは、カタログ内の各コントロールの説明情報を返します。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールの場合は、複数のコントロールがある場合でも、メソッドが動作する場合でも、カタログ内のサーバーコントロールは一度に1つしか存在できないことに注意してください。  
  
 <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> オブジェクトは、<xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールに関する重要な情報を含むオブジェクトです。 ID、コントロールへのオブジェクト参照、<xref:System.Web.UI.WebControls.WebParts.Part> クラスから継承されるいくつかの重要なプロパティの値 (<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> や <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>など) が含まれます。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> メソッドを行うと、パフォーマンスが向上します。 カタログが作成されると、タイトル、説明、アイコン (存在する場合)、ID など、カタログが含まれている各コントロールに関する情報が必要になります。 この情報を取得するために各コントロールのインスタンスを作成するのではなく、カタログを作成する <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> ゾーンが <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> メソッドを呼び出します。この呼び出しでは、コントロールのインスタンスではなく、コントロールの説明情報のみが返されます。  
  
   
  
## Examples  
 次のコード例は、Web ページで <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> メソッドを使用する方法を示しています。 この例には、次の4つの部分があります。  
  
-   Web パーツページの表示モードを変更できるユーザーコントロール。  
  
-   <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> メソッドを使用するコードと共に、<xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールと <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールを含む Web ページ。  
  
-   2つのカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを含むソースコードファイル。  
  
-   ブラウザーでページを読み込むときの例の動作について説明します。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。 ファイルに次のソースコードを配置し、使用している言語に応じて Displaymodemenucs. .ascx または Displaymodemenucs. .ascx という名前を付ける必要があります。 このコントロールの表示モードとソースコードの説明の詳細については、「[チュートリアル: Web パーツページの表示モードの変更](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)」を参照してください。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 コード例の2番目の部分は、Web ページです。 ページの上部には、2つの `register` ディレクティブがあります。1つはユーザーコントロール用で、もう1つは、2つのカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを含むコンパイル済みコンポーネント用です。 これらのコントロールは、どちらもページのマークアップで宣言によって参照されます。 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールへの宣言参照 (両方とも `aspSample` プレフィックスで始まる) では、各に `exportMode="all"` 属性が追加されていることに注意してください。 この属性を使用すると、をエクスポートできます。コントロールの WebPart 記述ファイル。このファイルは、後でコントロールをページにインポートするときに使用します。  
  
> [!NOTE]
>  Web パーツアプリケーションのユーザーが <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの説明ファイルをエクスポートできるようにするには、web.config ファイルの `<webParts>` 要素 (`<system.web>` 要素の子) に `enableExport="true"` 属性を追加して、Web アプリケーションのエクスポート機能を有効にする必要もあります。 既定ではエクスポートは無効になっているので、アプリケーションのエクスポートをまだ有効にしていない場合は、web.config ファイルを編集して、ここで実行します。  
  
 Web ページには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールへの宣言参照もあり、宣言型要素の適切な階層内に入れ子になっています。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> メソッドは、`Button1_Click` メソッドのコード内で呼び出されます。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 コード例の3番目の部分は、2つの <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールのソースコードです。 コード例を実行するには、このソースコードをコンパイルする必要があります。 これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。 または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。 このコード例では、動的コンパイルを使用します。 コンパイルの両方の方法を示すチュートリアルについては、「[チュートリアル: カスタム Web サーバーコントロールの開発と使用](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)」を参照してください。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 次に、コード例を実行します。 ブラウザーに Web ページを読み込みます。 最初の手順では、をエクスポートします。各 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの WebPart 記述ファイル (`TextDisplayWebPart` と `UserInfoWebPart` コントロール用)。 コントロールごとに、コントロールの動詞メニュー (タイトルバーの下向き矢印で表されます) をクリックし、**[エクスポート]** をクリックします。 指示に従ってを保存します。コントロールの WebPart 記述ファイル。 各コントロールの説明ファイルをエクスポートした後、Web ページを閉じ、エディターでページソースを編集します。 `<aspSample:userinfowebpart>` と `<aspSample:textdisplaywebpart>` コントロール宣言の要素を削除し、ファイルを保存して閉じます。 (この手順を実行して、これらのコントロールをまだ持っていないユーザーをシミュレートします。これにより、コントロールをページにインポートできます)。  
  
 ブラウザーで Web ページを再度読み込みます。 **[表示モード]** ドロップダウンリストコントロールを使用して、**[カタログ]** を選択し、ページをカタログモードに切り替えます。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールで、**[参照]** ボタンをクリックし、を参照します。作成した WebPart ファイルを1つ選択し、**[アップロード]** ボタンをクリックします。 コントロールへの参照が、その横にチェックボックスと共に表示されます。 このチェックボックスをオンにし、**[追加]** をクリックして、コントロールをページに追加します。 もう一方のコントロールについても、このプロセスを繰り返します。  
  
 ページのこのビューが表示されているときに、ページの下部付近にある **[WebPart の説明を取得]** ボタンをクリックして、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールに現在読み込まれているコントロールの説明の <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> オブジェクトにプログラムでアクセスした場合の影響を確認します。 ページソースの `Button1_Click` メソッドに含まれる説明の詳細にアクセスするために使用されるメソッドは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> メソッドです。 ボタンの下のラベルには、コントロールに関する基本的な詳細情報が表示されます。  
  
 最初のコントロールを追加した後、プロセスを繰り返して、2つ目のコントロールをページに追加します。 最後に、**[閉じる]** をクリックしてカタログモードを終了し、ページをブラウズモードに戻します。 前に説明ファイルをエクスポートしたときに使用した値を含む、両方のカスタムコントロールがページに表示されるようになりました。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">コントロールに関する詳細を格納している <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />。</param>
        <summary>メソッドに渡される説明の値に基づいて、<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> コントロールへの参照を返します。</summary>
        <returns>説明が <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> の値に一致する <paramref name="description" /> コントロール。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> メソッドは、メソッドに渡された <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> オブジェクトの値について説明の詳細が一致する <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールへの参照を返します。 通常、このメソッドは、カタログ内のコントロールの説明を取得するために使用される <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> メソッドと共に使用されます。 個々の <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> オブジェクトを <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> メソッドに渡すことによって、個々の <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを必要に応じて取得または操作できます。  
  
   
  
## Examples  
 次のコード例は、Web ページで <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> メソッドを使用する方法を示しています。 この例には、次の4つの部分があります。  
  
-   Web パーツページの表示モードを変更できるユーザーコントロール。  
  
-   <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> メソッドを使用するコードと共に、<xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールと <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールを含む Web ページ。  
  
-   2つのカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを含むソースコードファイル。  
  
-   ブラウザーでページを読み込むときの例の動作について説明します。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。 ファイルに次のソースコードを配置し、使用している言語に応じて Displaymodemenucs. .ascx または Displaymodemenucs. .ascx という名前を付ける必要があります。 このコントロールの表示モードとソースコードの説明の詳細については、「[チュートリアル: Web パーツページの表示モードの変更](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)」を参照してください。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 コード例の2番目の部分は、Web ページです。 ページの上部には、2つの `register` ディレクティブがあります。1つはユーザーコントロール用で、もう1つは、2つのカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを含むコンパイル済みコンポーネント用です。 これらのコントロールは、どちらもページのマークアップで宣言によって参照されます。 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールへの宣言参照 (両方とも `aspSample` プレフィックスで始まる) では、各に `exportMode="all"` 属性が追加されていることに注意してください。 この属性を使用すると、をエクスポートできます。コントロールの WebPart 記述ファイル。このファイルは、後でコントロールをページにインポートするときに使用します。  
  
> [!NOTE]
>  Web パーツアプリケーションのユーザーが <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの説明ファイルをエクスポートできるようにするには、web.config ファイルの `<webParts>` 要素 (`<system.web>` 要素の子) に `enableExport="true"` 属性を追加して、Web アプリケーションのエクスポート機能を有効にする必要もあります。 既定ではエクスポートは無効になっているので、アプリケーションのエクスポートをまだ有効にしていない場合は、web.config ファイルを編集して、ここで実行します。  
  
 Web ページには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールへの宣言参照もあり、宣言型要素の適切な階層内に入れ子になっています。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> メソッドは、`Button2_Click` メソッドのコード内で呼び出されます。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 コード例の3番目の部分は、2つの <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールのソースコードです。 コード例を実行するには、このソースコードをコンパイルする必要があります。 これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。 または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。 このコード例では、動的コンパイルを使用します。 コンパイルの両方の方法を示すチュートリアルについては、「[チュートリアル: カスタム Web サーバーコントロールの開発と使用](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)」を参照してください。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 次に、コード例を実行します。 ブラウザーに Web ページを読み込みます。 最初の手順では、をエクスポートします。各 <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの WebPart 記述ファイル (`TextDisplayWebPart` と `UserInfoWebPart` コントロール用)。 コントロールごとに、コントロールの動詞メニュー (タイトルバーの下向き矢印で表されます) をクリックし、**[エクスポート]** をクリックします。 指示に従ってを保存します。コントロールの WebPart 記述ファイル。 各コントロールの説明ファイルをエクスポートした後、Web ページを閉じ、エディターでページソースを編集します。 `<aspSample:userinfowebpart>` と `<aspSample:textdisplaywebpart>` コントロール宣言の要素を削除し、ファイルを保存して閉じます。 (この手順を実行して、これらのコントロールをまだ持っていないユーザーをシミュレートします。これにより、コントロールをページにインポートできます)。  
  
 ブラウザーで Web ページを再度読み込みます。 **[表示モード]** ドロップダウンリストコントロールを使用して、**[カタログ]** を選択し、ページをカタログモードに切り替えます。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールで、**[参照]** ボタンをクリックし、を参照します。作成した WebPart ファイルを1つ選択し、**[アップロード]** ボタンをクリックします。 コントロールへの参照が、その横にチェックボックスと共に表示されます。 コントロールの説明が <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールにアップロードされたので、ページの下部付近にある **[GetWebPart を使用]** ボタンをクリックします。 ここでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> メソッドを呼び出し、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールに現在読み込まれているコントロールの説明を渡すことによる影響について説明します。 関連付けられたサーバーコントロールは、ユーザーが **[追加]** ボタンをクリックしなくても、Web ページにすぐに追加されることに注意してください。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> メソッドは、ページソースの `Button2_Click` メソッドで呼び出され、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールに読み込まれている現在の説明に関連付けられている <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを返します。 次に、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> メソッドが呼び出され、<xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールがページに直接追加されます。 ここでは、ユーザーの介入なしに、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールからプログラムによってコントロールを追加する方法を示します。  
  
 最初のコントロールを追加した後、プロセスを繰り返して、2つ目のコントロールをページに追加します。 最後に、**[閉じる]** をクリックしてカタログモードを終了し、ページをブラウズモードに戻します。 前に説明ファイルをエクスポートしたときに使用した値を含む、両方のカスタムコントロールがページに表示されるようになりました。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="description" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="description" /> が、使用できる <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> 値ではありません。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが記述ファイルをインポートした後に表示されるテキストを取得または設定します。これは、インポートされたコントロールのカタログ内で個別のインポート済みコントロールを表現または説明するためのテキストです。</summary>
        <value>ラベルのテキストを含む文字列。 既定値は、.NET Framework が提供する、カルチャ固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> プロパティには、通常、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールに含まれるコントロールを記述する短い一般的なラベルを格納するために使用されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> プロパティを宣言およびプログラムによって使用する方法を示しています。 例を実行するために必要な完全なコードと手順については、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> クラスの概要の「例」を参照してください。  
  
 コードの次のセクションでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> プロパティ値がコントロールに対して宣言されて設定されていることに注意してください。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 コードのこのセクションでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> プロパティ値がプログラムによって割り当てられます。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 ブラウザーでページを読み込むときに、**[表示モード]** ドロップダウンリストコントロールを使用して**カタログモード**を選択し、ページをカタログモードに切り替えることができます。 カタログモードのページと説明ファイルをアップロードしたら、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールのユーザーインターフェイス (UI) に表示されるさまざまなテキスト文字列に注意してください。 **[説明ファイルのアップロード]** ボタンをクリックすると、UI のいくつかのプロパティのテキストが変更されます。これには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> プロパティのテキストが含まれます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インポート プロセスでエラーが発生した場合に表示されるエラー メッセージを取得または設定します。</summary>
        <value>ラベルのテキストを含む文字列。 既定値は、.NET Framework が提供する、カルチャ固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> プロパティは、ページが説明ファイルをインポートしようとしているときに何らかの問題またはエラーが発生した場合にユーザーに通知するために役立ちます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> プロパティを宣言およびプログラムによって使用する方法を示しています。 例を実行するために必要な完全なコードと手順については、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> クラスの概要の「例」を参照してください。  
  
 コードの次のセクションでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> プロパティ値がコントロールに対して宣言されて設定されていることに注意してください。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 コードのこのセクションでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> プロパティ値がプログラムによって割り当てられます。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 ブラウザーでページを読み込むときに、**[表示モード]** ドロップダウンリストコントロールを使用して**カタログモード**を選択し、ページをカタログモードに切り替えることができます。 カタログモードのページと説明ファイルをアップロードしたら、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールのユーザーインターフェイス (UI) に表示されるさまざまなテキスト文字列に注意してください。 **[説明ファイルのアップロード]** ボタンをクリックすると、UI のいくつかのプロパティのテキストが変更されます。これには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> プロパティのテキストが含まれます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> コントロールのタイトル バーに表示されるタイトルを取得または設定します。</summary>
        <value>コントロールのタイトルとして使用される文字列。 既定値は、Web パーツ コントロール セットによって提供される、計算済みのコントロール名です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> プロパティ値は、コントロールがカタログモードで表示されている場合に、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールのタイトルバーに表示されます。 コントロールがページで宣言されている場合は、`Title` 属性を使用してプロパティの値を設定できます。 タイトルの値を指定しない場合、このコントロールでユーザーが編集できるプロパティの種類を示すために、カルチャ固有の既定値が使用されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> プロパティを宣言およびプログラムによって使用する方法を示しています。 例を実行するために必要な完全なコードと手順については、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> クラスの概要の「例」を参照してください。  
  
 コードの次のセクションでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> プロパティ値がコントロールに対して宣言されて設定されていることに注意してください。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 コードのこのセクションでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> プロパティ値がプログラムによって割り当てられます。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 ブラウザーでページを読み込むときに、**[表示モード]** ドロップダウンリストコントロールを使用して**カタログモード**を選択し、ページをカタログモードに切り替えることができます。 カタログモードのページと説明ファイルをアップロードしたら、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールのユーザーインターフェイス (UI) に表示されるさまざまなテキスト文字列に注意してください。 **[説明ファイルのアップロード]** ボタンをクリックすると、UI のいくつかのプロパティのテキストが変更されます。これには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> プロパティのテキストが含まれます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>記述ファイルのアップロードを開始する <see cref="T:System.Web.UI.WebControls.Button" /> コントロールのテキストを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Button" /> のテキストとして使用される文字列。 既定値は、Web パーツ コントロール セットによって提供されるカルチャ固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> プロパティは、アップロードプロセスを開始する <xref:System.Web.UI.WebControls.Button> コントロールのテキストを提供します。 このプロパティまたは <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> プロパティにカスタムテキストを割り当てると、ユーザーが説明ファイルをアップロードしていることを示すテキストが表示されます。 テキストは、アップロードプロセスが実際にコントロール自体をアップロードしていることを示しているとは限りません。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> プロパティを宣言およびプログラムによって使用する方法を示しています。 例を実行するために必要な完全なコードと手順については、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> クラスの概要の「例」を参照してください。  
  
 コードの次のセクションでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> プロパティ値がコントロールに対して宣言されて設定されていることに注意してください。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 コードのこのセクションでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> プロパティ値がプログラムによって割り当てられます。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 ブラウザーでページを読み込むときに、**[表示モード]** ドロップダウンリストコントロールを使用して**カタログモード**を選択し、ページをカタログモードに切り替えることができます。 カタログモードのページと説明ファイルをアップロードしたら、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールのユーザーインターフェイス (UI) に表示されるさまざまなテキスト文字列に注意してください。 **[説明ファイルのアップロード]** ボタンをクリックすると、UI のいくつかのプロパティのテキストが変更されます。これには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> プロパティのテキストが含まれます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーに記述ファイルをアップロードする方法を通知するメッセージのテキストを取得または設定します。</summary>
        <value>ユーザーが記述ファイルをアップロードするときの指示として使用される文字列。 既定値は、Web パーツ コントロール セットによって提供されるカルチャ固有の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> プロパティは、ユーザーが説明ファイルをアップロードするボタンをクリックするように指示する簡単な文または語句を提供します。 このプロパティまたは <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> プロパティにカスタムテキストを割り当てると、ユーザーが説明ファイルをアップロードしていることを示すテキストが表示されます。 テキストは、アップロードプロセスが実際にコントロール自体をアップロードしていることを示しているとは限りません。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> プロパティを宣言およびプログラムによって使用する方法を示しています。 例を実行するために必要な完全なコードと手順については、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> クラスの概要の「例」を参照してください。  
  
 コードの次のセクションでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> プロパティ値がコントロールに対して宣言されて設定されていることに注意してください。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 コードのこのセクションでは、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> プロパティ値がプログラムによって割り当てられます。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 ブラウザーでページを読み込むときに、**[表示モード]** ドロップダウンリストコントロールを使用して**カタログモード**を選択し、ページをカタログモードに切り替えることができます。 カタログモードのページと説明ファイルをアップロードしたら、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールのユーザーインターフェイス (UI) に表示されるさまざまなテキスト文字列に注意してください。 **[説明ファイルのアップロード]** ボタンをクリックすると、UI のいくつかのプロパティのテキストが変更されます。これには、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> プロパティのテキストが含まれます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
  </Members>
</Type>
