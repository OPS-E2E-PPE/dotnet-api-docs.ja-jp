<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8144f808768f66beaf13699ab91895bf6fe77f6c" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78734914" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="393e1-101">Web パーツ接続で、コンシューマー コントロールとプロバイダー コントロールがデータを共有できるようにするコネクション ポイント オブジェクトを定義するための基本クラスとして機能します。</span><span class="sxs-lookup"><span data-stu-id="393e1-101">Serves as the base class for defining connection point objects that enable the consumer control and the provider control in a Web Parts connection to share data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="393e1-102">すべての Web パーツ接続は、データを共有する2つのサーバーコントロールで構成されます。1つはコンシューマー、もう1つはプロバイダーです。</span><span class="sxs-lookup"><span data-stu-id="393e1-102">Every Web Parts connection consists of two server controls sharing data: one control is the consumer, the other is the provider.</span></span> <span data-ttu-id="393e1-103">Web パーツ接続の重要なコンポーネントと接続オブジェクト自体の詳細については、「<xref:System.Web.UI.WebControls.WebParts.WebPartConnection> クラスの概要」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="393e1-103">For a discussion of the essential components of a Web Parts connection, and the connection object itself, see the <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> class overview.</span></span> <span data-ttu-id="393e1-104">すべての Web パーツ接続には接続ポイントが必要です。</span><span class="sxs-lookup"><span data-stu-id="393e1-104">Every Web Parts connection requires connection points.</span></span> <span data-ttu-id="393e1-105">プロバイダーとコンシューマーコントロールには、コントロールが別のコントロールに接続する方法の詳細と、共有できるデータの型を含む、1つ以上の <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> オブジェクトが定義されている必要があります (各オブジェクトには、必要に応じて複数の接続ポイントを持つことができます)。</span><span class="sxs-lookup"><span data-stu-id="393e1-105">The provider and the consumer control must each have at least one defined <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> object (each of them can optionally have multiple connection points) that contains the details for how a control can connect to another control and the type of data it can share.</span></span> <span data-ttu-id="393e1-106">実際の接続では、プロバイダーは独自の種類の接続ポイントオブジェクト (基本 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> クラスから派生)、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> インスタンスを持ち、コンシューマーは独自のオブジェクトである <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> インスタンスを持ちます。</span><span class="sxs-lookup"><span data-stu-id="393e1-106">In an actual connection, the provider has its own type of connection point object (derived from the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class), a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> instance, and the consumer has its own object, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> instance.</span></span>  
  
 <span data-ttu-id="393e1-107">プロバイダー接続ポイントを作成するには、実装されたインターフェイスインスタンスをコンシューマーに返すコールバックメソッドをプロバイダーに追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="393e1-107">To create a provider connection point, developers must add a callback method to the provider that will return an implemented interface instance to a consumer.</span></span> <span data-ttu-id="393e1-108">ソースコードのコールバックメソッドを `ConnectionProvider` コード属性でマークする必要があります (<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> クラスを参照してください)。</span><span class="sxs-lookup"><span data-stu-id="393e1-108">They must mark the callback method in the source code with a `ConnectionProvider` code attribute (see the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> class).</span></span> <span data-ttu-id="393e1-109">同様に、コンシューマー接続ポイントを作成するには、インターフェイスインスタンスを受け取るコンシューマーにメソッドを追加し、そのメソッドを `ConnectionConsumer` 属性でマークする必要があります (<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> クラスを参照してください)。</span><span class="sxs-lookup"><span data-stu-id="393e1-109">Similarly, to create a consumer connection point, developers must add a method to the consumer that receives an interface instance, and they must mark that method with a `ConnectionConsumer` attribute (see the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class).</span></span>  
  
 <span data-ttu-id="393e1-110">開発者が Web ページに接続を作成する場合は、静的な接続または動的接続として作成できます。</span><span class="sxs-lookup"><span data-stu-id="393e1-110">When developers create connections on a Web page, they can be created as static or dynamic connections.</span></span> <span data-ttu-id="393e1-111">静的接続は、Web ページのマークアップで宣言されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-111">Static connections are declared in the markup of a Web page.</span></span> <span data-ttu-id="393e1-112">静的接続を宣言すると、開発者は、`ProviderConnectionPointID` に値を割り当て、`<asp:webpartconnection>` 要素タグ内の `ConsumerConnectionPointID` 属性を使用して、コンシューマーとプロバイダーの両方に使用されるコネクションポイントを指定できます。</span><span class="sxs-lookup"><span data-stu-id="393e1-112">When a static connection is declared, developers can designate which connection points are used for both the consumer and provider by assigning values to the `ProviderConnectionPointID` and `ConsumerConnectionPointID` attributes within the `<asp:webpartconnection>` element tag.</span></span> <span data-ttu-id="393e1-113">この方法は、コンシューマーコントロールとプロバイダーコントロール内で複数の接続ポイントが定義されている場合に特に便利です。これは、接続に使用する接続ポイントを静的接続で識別できるようにするためです。</span><span class="sxs-lookup"><span data-stu-id="393e1-113">This approach is especially useful if there are multiple connection points defined within the consumer and provider controls, because it enables the static connection to identify which connection points to use for the connection.</span></span>  
  
 <span data-ttu-id="393e1-114">動的接続は、開発者のコードによって、または <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールによって提供されるユーザーインターフェイス (UI) を介してユーザーがプログラムによって作成されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-114">Dynamic connections are created programmatically, either by a developer's code or by users through the user interface (UI) provided by the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control.</span></span> <span data-ttu-id="393e1-115">コードで接続を作成するには、開発者は <xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> メソッドを呼び出すことによって、<xref:System.Web.UI.WebControls.WebParts.WebPartConnection> オブジェクトのインスタンスを取得する必要があります。</span><span class="sxs-lookup"><span data-stu-id="393e1-115">To create a connection in code, developers must get an instance of a <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="393e1-116">開発者は、このメソッドを呼び出す前に、コンシューマーおよびプロバイダーのサーバーコントロールと、それぞれの接続ポイントオブジェクトを参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="393e1-116">Before they can call this method, developers must have references to the consumer and provider server controls and their respective connection point objects.</span></span> <span data-ttu-id="393e1-117">プロバイダーとコンシューマーコントロールの接続ポイントへの参照を取得するために、開発者はまず、<xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールの <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> および <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="393e1-117">To get references to the connection points for a provider and a consumer control, developers first call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> methods on the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.</span></span> <span data-ttu-id="393e1-118">これらのメソッドは、適切な接続ポイントオブジェクトを返します。これらのオブジェクトは、接続を作成するためにメソッドに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="393e1-118">These methods return the appropriate connection point objects, which in turn can be passed to the method for creating a connection.</span></span>  
  
 <span data-ttu-id="393e1-119">プロバイダーとコンシューマーのコネクションポイントオブジェクトは、どちらも同じ種類のインターフェイスで動作する場合、互換性があり、データを共有する直接接続を形成できます。</span><span class="sxs-lookup"><span data-stu-id="393e1-119">When the provider's and the consumer's connection point objects both work with the same type of interface, they are compatible and can form a direct connection to share data.</span></span> <span data-ttu-id="393e1-120">同じインターフェイス型を使用しない場合は、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> オブジェクトを使用して、プロバイダーからのインターフェイスインスタンスをコンシューマーが使用できる型に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="393e1-120">If they do not work with the same interface type, a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to translate the interface instance from the provider into a type that the consumer can work with.</span></span>  
  
 <span data-ttu-id="393e1-121">抽象 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> クラスは、コンシューマーコントロールとプロバイダーコントロールの両方で共有されるコネクションポイントの基本情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="393e1-121">The abstract <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class provides the base details of connection points that are shared by both consumer and provider controls.</span></span> <span data-ttu-id="393e1-122">これらの詳細を含むプロパティがいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="393e1-122">Several properties contain these details.</span></span> <span data-ttu-id="393e1-123"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> プロパティは、接続ポイントが一度に複数の接続に参加できるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="393e1-123">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property indicates whether a connection point can participate in more than one connection at a time.</span></span> <span data-ttu-id="393e1-124">既定では、プロバイダー接続ポイントは複数の接続に参加することができ、コンシューマー接続ポイントは使用できません。</span><span class="sxs-lookup"><span data-stu-id="393e1-124">By default, provider connection points can participate in multiple connections, and consumer connection points cannot.</span></span> <span data-ttu-id="393e1-125"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> プロパティは、接続ポイントに関連付けられているサーバーコントロールの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="393e1-125">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property indicates the type of the server control associated with a connection point.</span></span> <span data-ttu-id="393e1-126">接続を形成できるのは <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールだけではないことに注意してください。ASP.NET コントロール、カスタムコントロール、またはユーザーコントロールのいずれのサーバーコントロールも、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンに配置されている場合、接続に参加できるようにすることができます。</span><span class="sxs-lookup"><span data-stu-id="393e1-126">Note that not only <xref:System.Web.UI.WebControls.WebParts.WebPart> controls can form connections; any server control, whether an ASP.NET control, a custom control, or a user control, can be enabled to participate in connections if placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone.</span></span> <span data-ttu-id="393e1-127"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> プロパティは、接続を作成しているユーザーを支援するために UI に表示できる接続ポイントのフレンドリ名を提供します。</span><span class="sxs-lookup"><span data-stu-id="393e1-127">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property provides a friendly name for the connection point that can be displayed in the UI to assist users who are creating connections.</span></span> <span data-ttu-id="393e1-128"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> プロパティは、接続ポイントオブジェクト自体の文字列識別子として機能します。</span><span class="sxs-lookup"><span data-stu-id="393e1-128">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property serves as a string identifier for the connection point object itself.</span></span> <span data-ttu-id="393e1-129"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> プロパティは、コネクションポイントが認識するインターフェイスインスタンスの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="393e1-129">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property indicates what type of interface instance the connection point understands.</span></span> <span data-ttu-id="393e1-130">指定されたコネクションポイントが、そのインターフェイスのインスタンスを提供または使用するかどうかは、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> であるか <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> オブジェクトであるかによって決まります。</span><span class="sxs-lookup"><span data-stu-id="393e1-130">Whether a given connection point provides or consumes an instance of that interface is determined by whether it is a <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> or a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span>  
  
 <span data-ttu-id="393e1-131"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> クラスには1つのメソッドがあります。</span><span class="sxs-lookup"><span data-stu-id="393e1-131">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class has one method.</span></span> <span data-ttu-id="393e1-132"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> メソッドは、接続ポイントが現在接続に参加できるかどうかを示すブール値を返します。</span><span class="sxs-lookup"><span data-stu-id="393e1-132">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method returns a Boolean value indicating whether a connection point is currently able to participate in connections.</span></span>  
  
 <span data-ttu-id="393e1-133"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> クラスには、1つのパブリックフィールド、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>もあります。</span><span class="sxs-lookup"><span data-stu-id="393e1-133">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class also has one public field, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>.</span></span> <span data-ttu-id="393e1-134">このフィールドには、接続の既定の接続ポイントを識別するために使用される値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="393e1-134">This field contains a value used to identify the default connection point in a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="393e1-135">接続ポイントのメソッドを指定する属性には、必須パラメーターとして `displayName`が1つしかないため、ID を指定せずに既定の接続ポイントの属性を作成することができます。</span><span class="sxs-lookup"><span data-stu-id="393e1-135">The attributes for specifying connection point methods have only one required parameter, `displayName`, so it is possible to create the default connection point attribute without specifying an ID.</span></span> <span data-ttu-id="393e1-136">このような場合は、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> フィールドに使用するベース値が指定されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-136">In such cases, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field supplies a base value to use.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="393e1-137">次のコード例は、必要な <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> オブジェクトを含む Web パーツ接続を作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="393e1-137">The following code example demonstrates the creation of a Web Parts connection that includes the required <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects.</span></span> <span data-ttu-id="393e1-138"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> クラスは抽象基本クラスであるため、その子クラスのインスタンス (<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> と <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>) は、接続を形成するために使用される実際のオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="393e1-138">Because the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class is an abstract base class, instances of its child classes--<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>--are the actual objects used to form a connection.</span></span>  
  
 <span data-ttu-id="393e1-139">この例には、次の4つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="393e1-139">The example has four parts:</span></span>  
  
-   <span data-ttu-id="393e1-140">ページの Web パーツ表示モードを変更できるユーザーコントロール。</span><span class="sxs-lookup"><span data-stu-id="393e1-140">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="393e1-141">インターフェイスのソースコードと、プロバイダーおよび接続のコンシューマーとして機能する2つの <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール。</span><span class="sxs-lookup"><span data-stu-id="393e1-141">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="393e1-142">すべてのコントロールをホストし、コード例を実行するための Web ページ。</span><span class="sxs-lookup"><span data-stu-id="393e1-142">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="393e1-143">例ページを実行する方法について説明します。</span><span class="sxs-lookup"><span data-stu-id="393e1-143">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="393e1-144">このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。</span><span class="sxs-lookup"><span data-stu-id="393e1-144">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="393e1-145">次のソースコードを .ascx ファイルに保存し、このユーザーコントロールの `Register` ディレクティブの `Src` 属性に割り当てられているファイル名を指定します。これは、ホストしている Web ページの上部付近にあります。</span><span class="sxs-lookup"><span data-stu-id="393e1-145">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="393e1-146">このコントロールの表示モードとソースコードの説明の詳細については、「[チュートリアル: Web パーツページの表示モードの変更](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="393e1-146">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="393e1-147">コード例の2番目の部分は、インターフェイスとコントロールのソースコードです。</span><span class="sxs-lookup"><span data-stu-id="393e1-147">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="393e1-148">ソースファイルには、`IZipCode`という名前の単純なインターフェイスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="393e1-148">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="393e1-149">インターフェイスを実装し、プロバイダーコントロールとして機能する `ZipCodeWebPart` という名前の <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスもあります。</span><span class="sxs-lookup"><span data-stu-id="393e1-149">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="393e1-150">`ProvideIZipCode` メソッドは、インターフェイスの唯一のメンバーを実装するコールバックメソッドです。</span><span class="sxs-lookup"><span data-stu-id="393e1-150">Its `ProvideIZipCode` method is the callback method that implements the interface's only member.</span></span> <span data-ttu-id="393e1-151">メソッドは、単にインターフェイスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="393e1-151">The method simply returns an instance of the interface.</span></span> <span data-ttu-id="393e1-152">メソッドは、そのメタデータ内の `ConnectionProvider` 属性でマークされていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="393e1-152">Note that the method is marked with a `ConnectionProvider` attribute in its metadata.</span></span> <span data-ttu-id="393e1-153">これは、プロバイダーのコネクションポイントのコールバックメソッドとしてメソッドを識別するための機構です。</span><span class="sxs-lookup"><span data-stu-id="393e1-153">This is the mechanism for identifying the method as the callback method for the provider's connection point.</span></span> <span data-ttu-id="393e1-154">その他の <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスは `WeatherWebPart`という名前で、接続のコンシューマーとして機能します。</span><span class="sxs-lookup"><span data-stu-id="393e1-154">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="393e1-155">このクラスには、プロバイダーコントロールから `IZipCode` インターフェイスのインスタンスを取得する `GetZipCode` という名前のメソッドがあります。</span><span class="sxs-lookup"><span data-stu-id="393e1-155">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="393e1-156">このメソッドは、メタデータ内の `ConnectionConsumer` 属性を使用して、コンシューマーの接続ポイントメソッドとしてマークされていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="393e1-156">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span> <span data-ttu-id="393e1-157">これは、コンシューマーコントロールのコネクションポイントメソッドを識別するための機構です。</span><span class="sxs-lookup"><span data-stu-id="393e1-157">This is the mechanism for identifying the connection point method in the consumer control.</span></span>  
  
 <span data-ttu-id="393e1-158">コード例を実行するには、このソースコードをコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="393e1-158">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="393e1-159">これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。</span><span class="sxs-lookup"><span data-stu-id="393e1-159">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="393e1-160">または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="393e1-160">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="393e1-161">このコード例では、動的コンパイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="393e1-161">This code example uses dynamic compilation.</span></span> <span data-ttu-id="393e1-162">のコンパイル方法を示すチュートリアルについては、「[チュートリアル: カスタム Web サーバーコントロールの開発と使用](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="393e1-162">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="393e1-163">コード例の3番目の部分は、Web ページです。</span><span class="sxs-lookup"><span data-stu-id="393e1-163">The third part of the code example is the Web page.</span></span> <span data-ttu-id="393e1-164">上部の近くには、接続を形成するカスタムコントロールを登録するための `Register` ディレクティブと、ユーザーがページの表示モードを変更できるようにするユーザーコントロールがあります。</span><span class="sxs-lookup"><span data-stu-id="393e1-164">Near the top are `Register` directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page.</span></span> <span data-ttu-id="393e1-165">接続自体は、ページの `<staticconnections>` 要素内で宣言によって作成されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-165">The connection itself is created declaratively within the `<staticconnections>` element on the page.</span></span> <span data-ttu-id="393e1-166">接続はプログラムによって作成することもできます。これを行うためのコードは、`Button1_Click` メソッドに含まれています。</span><span class="sxs-lookup"><span data-stu-id="393e1-166">You can also create the connection programmatically; the code for doing that is contained in the `Button1_Click` method.</span></span> <span data-ttu-id="393e1-167">接続が宣言によって作成されるか、プログラムによって作成されるかにかかわらず、接続ポイントはプロバイダーとコンシューマーの両方に対して常に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="393e1-167">Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer.</span></span> <span data-ttu-id="393e1-168">`Button2_Click` メソッドは、プロバイダーとコンシューマーの両方の <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> オブジェクトにアクセスし、そのプロパティ値の一部をページのラベルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="393e1-168">The `Button2_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects for both the provider and the consumer, and writes some of their property values to a label in the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 <span data-ttu-id="393e1-169">ブラウザーでページを読み込んだ後、**[接続ポイントの詳細]** ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="393e1-169">After you load the page in a browser, click the **Connection Point Details** button.</span></span> <span data-ttu-id="393e1-170">宣言型接続で確立されたプロバイダーおよびコンシューマー接続ポイントに関する情報が表示されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-170">Information about the provider and consumer connection points established in the declarative connection appears.</span></span> <span data-ttu-id="393e1-171">次に、**[表示モード]** ドロップダウンコントロールを使用して、ページを接続モードに切り替えます。</span><span class="sxs-lookup"><span data-stu-id="393e1-171">Next, use the **Display Mode** drop-down control to switch the page into connect mode.</span></span> <span data-ttu-id="393e1-172"><xref:System.Web.UI.WebControls.WebParts.WebPart> コントロール (タイトルバーの下向き矢印で表される) のいずれかの動詞メニューで、connect 動詞をクリックします。</span><span class="sxs-lookup"><span data-stu-id="393e1-172">On the verbs menu of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls (represented by a downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="393e1-173">接続 UI が表示され、ページで宣言された `<asp:connectionszone>` コントロールによって自動的に作成されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-173">The connection UI appears, created automatically by the `<asp:connectionszone>` control declared in the page.</span></span> <span data-ttu-id="393e1-174">**[切断]** ボタンをクリックして、既存の接続を終了します。</span><span class="sxs-lookup"><span data-stu-id="393e1-174">Click the **Disconnect** button to terminate the existing connection.</span></span> <span data-ttu-id="393e1-175">**[表示モード]** コントロールを使用して、ページをブラウズモードに戻します。</span><span class="sxs-lookup"><span data-stu-id="393e1-175">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="393e1-176">次に、**[動的接続]** ボタンをクリックして、プログラムによって接続を作成します。</span><span class="sxs-lookup"><span data-stu-id="393e1-176">Next, click the **Dynamic Connection** button to create a connection programmatically.</span></span> <span data-ttu-id="393e1-177">2つの接続ポイントオブジェクトの詳細を示すには、もう一度 **[接続ポイントの詳細]** ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="393e1-177">Click the **Connection Point Details** button again, to indicate details about the two connection point objects.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178187(v=vs.100)"><span data-ttu-id="393e1-178">Web パーツ接続の概要</span><span class="sxs-lookup"><span data-stu-id="393e1-178">Web Parts Connections Overview</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="393e1-179">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="393e1-179">ASP.NET Web Parts Controls</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="393e1-180">コネクション ポイントが同時に複数の接続をサポートするかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="393e1-180">Gets a value that indicates whether a connection point supports multiple simultaneous connections.</span></span></summary>
        <value><span data-ttu-id="393e1-181">コネクション ポイントが複数の接続をサポートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="393e1-181"><see langword="true" /> if the connection point supports multiple connections; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="393e1-182"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> のオブジェクトは、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> プロパティ値が <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> `true` に設定されています。既定では、この Web パーツコントロールにより、プロバイダー接続ポイントは複数のコンシューマーに接続を形成できるためです。</span><span class="sxs-lookup"><span data-stu-id="393e1-182"><xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> objects have their <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property value set to `true` (by the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> class), because the Web Parts control set by default enables provider connection points to form connections to multiple consumers.</span></span>  
  
 <span data-ttu-id="393e1-183">これに対し、<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> オブジェクトの <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> プロパティ値は `false` に設定されています (<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> クラス)。既定で Web パーツは、コンシューマー接続ポイントは、一度に1つのプロバイダーにのみ接続を確立できます。</span><span class="sxs-lookup"><span data-stu-id="393e1-183">In contrast, <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects have their <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property value set to `false` (by the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class) because the Web Parts control set by default allows consumer connection points to establish a connection to only one provider at a time.</span></span>  
  
 <span data-ttu-id="393e1-184">複数の接続に関する既定の動作を変更するには、<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> プロパティ (プロバイダーの場合) または <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> プロパティ (コンシューマーの場合) に、接続属性に使用する2つの <xref:System.Attribute> クラスの異なる値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="393e1-184">You can change the default behavior concerning multiple connections by assigning different values to the <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> property (for providers) or the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> property (for consumers) on the two <xref:System.Attribute> classes used for connection attributes.</span></span> <span data-ttu-id="393e1-185">コンシューマー接続ポイントが同時に複数のプロバイダーに接続できるようにする場合は、コードで同期の問題が発生したときに対処する必要があります。</span><span class="sxs-lookup"><span data-stu-id="393e1-185">If you enable consumer connection points to connect to multiple providers at the same time, your code must deal with any resulting synchronization issues.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="393e1-186">次のコード例は、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> オブジェクトと <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> オブジェクトの両方で <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> プロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="393e1-186">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="393e1-187">このコード例では、プロパティにアクセスするコードが含まれている Web ページのみを示しています。例を実行するために必要な完全なコードについては、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> クラスの概要の「例」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="393e1-187">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="393e1-188">Web ページの `Button2_Click` メソッドのコードは、各接続ポイントオブジェクトの <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> プロパティにアクセスし、各値をラベルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="393e1-188">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="393e1-189">ページがブラウザーに読み込まれた後に **[接続ポイントの詳細]** ボタンをクリックして、コードを実行します。</span><span class="sxs-lookup"><span data-stu-id="393e1-189">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="393e1-190">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="393e1-190">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="393e1-191">コネクション ポイントが関連付けられているサーバー コントロールの <see cref="T:System.Type" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="393e1-191">Gets the <see cref="T:System.Type" /> of the server control with which a connection point is associated.</span></span></summary>
        <value><span data-ttu-id="393e1-192">コントロールの種類を表す <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="393e1-192">A <see cref="T:System.Type" /> representing the control type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="393e1-193">多くの場合、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> プロパティの値は <xref:System.Web.UI.WebControls.WebParts.WebPart> 型です。</span><span class="sxs-lookup"><span data-stu-id="393e1-193">The value of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property is often the <xref:System.Web.UI.WebControls.WebParts.WebPart> type.</span></span> <span data-ttu-id="393e1-194">ただし、任意の種類のユーザーコントロールまたはサーバーコントロールが、適切に有効になっていて <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンに配置されている場合、接続に参加できるため、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> プロパティはこれらの他のサーバーコントロール型のいずれかを返すこともできます。</span><span class="sxs-lookup"><span data-stu-id="393e1-194">However, because any type of user control or server control can participate in connections if it is properly enabled and placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property can return one of these other server control types as well.</span></span>  
  
 <span data-ttu-id="393e1-195"><xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールではないサーバーコントロールが <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> ゾーンに配置されている場合は、実行時に <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> オブジェクトでラップされるので、<xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールとして機能し、接続に参加できます。</span><span class="sxs-lookup"><span data-stu-id="393e1-195">When server controls that are not <xref:System.Web.UI.WebControls.WebParts.WebPart> controls are placed in a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone, they are wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time so they can function as <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and participate in connections.</span></span> <span data-ttu-id="393e1-196">ただし、このようなコントロールが接続に関係している場合、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> プロパティ値は <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> 型を返しません。このメソッドは、サーバーまたはユーザーコントロールの型である <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> オブジェクトの子コントロールの型を返します。</span><span class="sxs-lookup"><span data-stu-id="393e1-196">But when such controls are involved in connections, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property value does not return the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> type; it returns the type of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object's child control, which is the type of the server or user control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="393e1-197">次のコード例は、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> オブジェクトと <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> オブジェクトの両方で <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> プロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="393e1-197">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="393e1-198">このコード例では、プロパティにアクセスするコードが含まれている Web ページのみを示しています。例を実行するために必要な完全なコードについては、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> クラスの概要の「例」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="393e1-198">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="393e1-199">Web ページの `Button2_Click` メソッドのコードは、各接続ポイントオブジェクトの <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> プロパティにアクセスし、各値をラベルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="393e1-199">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="393e1-200">ページがブラウザーに読み込まれた後に **[接続ポイントの詳細]** ボタンをクリックして、コードを実行します。</span><span class="sxs-lookup"><span data-stu-id="393e1-200">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="393e1-201">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="393e1-201">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="393e1-202">サーバー コントロールに関連付けられているコネクション ポイントのコレクション内で、既定のコネクション ポイントを識別するために使用される文字列を表します。</span><span class="sxs-lookup"><span data-stu-id="393e1-202">Represents a string used to identify the default connection point within a collection of connection points associated with a server control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="393e1-203">接続ポイントが作成されると、<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> または <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> 属性を使用して、コンシューマーまたはプロバイダー <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールのソースコード内の接続ポイントの ID を指定できます。</span><span class="sxs-lookup"><span data-stu-id="393e1-203">When a connection point is created, it is possible to specify an ID for the connection point in the source code of a consumer or provider <xref:System.Web.UI.WebControls.WebParts.WebPart> control, using a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> or a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute.</span></span> <span data-ttu-id="393e1-204">ただし、ソースコードのコネクションポイントに属性が追加された場合、`ID` パラメーターは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="393e1-204">However, when an attribute is added to a connection point in the source code, the `ID` parameter is optional.</span></span> <span data-ttu-id="393e1-205">属性で ID が指定されていない場合、[<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>] フィールドには、既定の接続ポイントを識別するために使用される文字列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-205">If the ID is not specified in the attribute, the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field provides a string that is used to identify the default connection point.</span></span>  
  
 <span data-ttu-id="393e1-206">コンシューマーコントロールまたはプロバイダーコントロールで複数の接続ポイントが定義されている場合は、接続の作成時に接続ポイントを区別できるように、各接続ポイントに ID を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="393e1-206">If multiple connection points are defined in a consumer or provider control, it is necessary to specify an ID for each connection point, so that the connection points can be distinguished when creating connections.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="393e1-207">ユーザー インターフェイス (UI) でコネクション ポイントを表す表示名として使用される文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="393e1-207">Gets a string that serves as a friendly display name to represent a connection point in the user interface (UI).</span></span></summary>
        <value><span data-ttu-id="393e1-208"><see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> オブジェクトの表示名を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="393e1-208">A string that contains a friendly display name for a <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="393e1-209">Web パーツ接続を作成するには、接続のプロバイダーとコンシューマーコントロールが、それぞれ少なくとも1つのコネクションポイントを指定する必要があります。これは、データの通信と共有を可能にするメソッドです。</span><span class="sxs-lookup"><span data-stu-id="393e1-209">To create a Web Parts connection, the provider and consumer controls for the connection must each specify at least one connection point, a method that enables them to communicate and share data.</span></span> <span data-ttu-id="393e1-210">これらの接続ポイントメソッドを識別するために、開発者は、選択したメソッドの属性を指定します。</span><span class="sxs-lookup"><span data-stu-id="393e1-210">To identify these connection point methods, a developer specifies an attribute on the selected methods.</span></span> <span data-ttu-id="393e1-211">プロバイダーでは、選択したコールバックメソッドに対して `ConnectionProvider` 属性が設定され、コンシューマーでは、プロバイダーからのデータを格納するインターフェイスのインスタンスを受け取るメソッドに対して `ConnectionConsumer` 属性が設定されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-211">In the provider, a `ConnectionProvider` attribute is set on the selected callback method, and in the consumer, a `ConnectionConsumer` attribute is set on the method that receives an instance of an interface that contains data from the provider.</span></span> <span data-ttu-id="393e1-212">どちらの属性でも、属性を作成するためにどのオーバーロードが宣言されているかに関係なく、常に必要なパラメーターは `displayName` パラメーターです。</span><span class="sxs-lookup"><span data-stu-id="393e1-212">For both of these attributes, the one parameter that is always required, regardless of which overload is declared to create the attribute, is the `displayName` parameter.</span></span> <span data-ttu-id="393e1-213">開発者は、接続ポイントの表示名として使用する文字列を割り当てる必要があります。この文字列は、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> プロパティの値になります。</span><span class="sxs-lookup"><span data-stu-id="393e1-213">The developer must assign a string to be used as a friendly display name for the connection point, and that string becomes the value of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property.</span></span>  
  
 <span data-ttu-id="393e1-214"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> プロパティ値は、ユーザーが接続を作成するときに Web ページの UI に表示されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-214">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property value is displayed in the UI of a Web page when users create connections.</span></span> <span data-ttu-id="393e1-215">たとえば、<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> コントロールがページに追加されると、ユーザーがコントロール間の接続を作成するための UI が作成されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-215">For example, when the <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control is added to the page, it creates a UI for users to create connections between controls.</span></span> <span data-ttu-id="393e1-216">ユーザーがページを接続表示モードに切り替え、<xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールで connect 動詞をクリックすると、接続 UI が表示されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-216">After a user switches a page into connect display mode and clicks a connect verb on a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, the connection UI appears.</span></span> <span data-ttu-id="393e1-217">接続に参加できる各コントロールは UI に表示されます。各コントロールの横には、使用可能な接続ポイントの表示名を表示するドロップダウンリストコントロールが表示されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-217">Each control that can participate in a connection is listed in the UI, and next to each control is a drop-down list control that displays the friendly names of its available connection points.</span></span> <span data-ttu-id="393e1-218">ユーザーは接続を確立するために、少なくとも1つの接続ポイントを選択する必要があります。</span><span class="sxs-lookup"><span data-stu-id="393e1-218">Users must select at least one connection point to establish a connection.</span></span> <span data-ttu-id="393e1-219">接続ポイントの一覧に表示される値は、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> プロパティから取得されます。</span><span class="sxs-lookup"><span data-stu-id="393e1-219">The values that appear in the list of connection points are obtained from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property.</span></span> <span data-ttu-id="393e1-220">接続を作成するためのカスタム UI を開発者が作成する場合は、接続ポイントを表すわかりやすい名前を指定するのと同様の方法で、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> プロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="393e1-220">If developers build a custom UI for creating connections, they can use the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property in a similar way to provide a friendly name that represents a connection point.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="393e1-221">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="393e1-221">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnabled (control As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="393e1-222">コネクション ポイントに関連付けられている <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> またはその他のサーバー コントロール。</span><span class="sxs-lookup"><span data-stu-id="393e1-222">A <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> or other server control that is associated with a connection point.</span></span></param>
        <summary><span data-ttu-id="393e1-223">コネクション ポイントが接続に参加できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="393e1-223">Returns a value that indicates whether a connection point can participate in connections.</span></span></summary>
        <returns><span data-ttu-id="393e1-224">コントロールが接続に参加するためのコネクション ポイントを作成できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="393e1-224"><see langword="true" /> if the control can create a connection point to participate in a connection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="393e1-225">基本 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> クラスの <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> メソッドは常に `true`を返しますが、派生クラスはメソッドをオーバーライドして、`false` の状態に基づいて、`true` または `control`を異なるタイミングで返すことができます。</span><span class="sxs-lookup"><span data-stu-id="393e1-225">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method in the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class always returns `true`, but derived classes can override the method to return `true` or `false` at different times, based on the state of `control`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="393e1-226">次のコード例は、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> オブジェクトと <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> オブジェクトの両方で <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> メソッドを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="393e1-226">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="393e1-227">このコード例では、プロパティにアクセスするコードが含まれている Web ページのみを示しています。例を実行するために必要な完全なコードについては、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> クラスの概要の「例」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="393e1-227">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="393e1-228">Web ページの `Button2_Click` メソッドのコードは、各接続ポイントオブジェクトの <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> メソッドにアクセスし、各値をラベルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="393e1-228">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> method on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="393e1-229">ページがブラウザーに読み込まれた後に **[接続ポイントの詳細]** ボタンをクリックして、コードを実行します。</span><span class="sxs-lookup"><span data-stu-id="393e1-229">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="393e1-230">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="393e1-230">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="393e1-231">コネクション ポイントの識別子を含む文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="393e1-231">Gets a string that contains the identifier for a connection point.</span></span></summary>
        <value><span data-ttu-id="393e1-232">コネクション ポイントの識別子を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="393e1-232">A string that contains the identifier for a connection point.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="393e1-233">開発者がコントロールのソースコード内のメソッドで <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> または <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> 属性を宣言するときに、メソッドをコネクションポイントとして使用できるようにするには、接続ポイント属性の `ID` パラメーターを宣言する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="393e1-233">When a developer declares a <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> or a <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> attribute on a method in the source code of a control, so that the method can be used as a connection point, it is not required to declare the `ID` parameter for the connection point attribute.</span></span> <span data-ttu-id="393e1-234">必須属性は `displayName` パラメーターのみです。</span><span class="sxs-lookup"><span data-stu-id="393e1-234">The only required attribute is the `displayName` parameter.</span></span> <span data-ttu-id="393e1-235">既定の ID は、[<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>] フィールドの値を使用して接続ポイントに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="393e1-235">A default ID is assigned to the connection point, using the value from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field.</span></span>  
  
 <span data-ttu-id="393e1-236">コネクションポイントとして使用されているコントロールにメソッドが1つしかない場合は、コネクションポイントの ID を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="393e1-236">If there is only one method in a control being used as a connection point, it is unnecessary to specify an ID for the connection point.</span></span> <span data-ttu-id="393e1-237">複数のメソッドがコネクションポイントとして指定されている場合は、それぞれに対して ID を指定する必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="393e1-237">If there are multiple methods specified as connection points, you must specify an ID for each one; otherwise, an exception will be thrown.</span></span> <span data-ttu-id="393e1-238">各接続ポイントに ID を割り当てることにより、Web ページで接続を宣言するとき、またはコードで接続を作成するときに使用する接続ポイントを指定することもできます。</span><span class="sxs-lookup"><span data-stu-id="393e1-238">By assigning an ID to each connection point, you also make it possible to specify which connection point to use when you declare connections in Web pages or create them in code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="393e1-239">次のコード例は、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> オブジェクトと <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> オブジェクトの両方で <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> プロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="393e1-239">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="393e1-240">このコード例では、プロパティにアクセスするコードが含まれている Web ページのみを示しています。例を実行するために必要な完全なコードについては、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> クラスの概要の「例」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="393e1-240">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="393e1-241">Web ページの `Button2_Click` メソッドのコードは、各接続ポイントオブジェクトの <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> プロパティにアクセスし、各値をラベルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="393e1-241">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="393e1-242">ページがブラウザーに読み込まれた後に **[接続ポイントの詳細]** ボタンをクリックして、コードを実行します。</span><span class="sxs-lookup"><span data-stu-id="393e1-242">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="393e1-243">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="393e1-243">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="393e1-244">コネクション ポイントによって使用されるインターフェイスの型を取得します。</span><span class="sxs-lookup"><span data-stu-id="393e1-244">Gets the type of the interface used by a connection point.</span></span></summary>
        <value><span data-ttu-id="393e1-245">コントロールによって提供または使用されるインターフェイスに対応する <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="393e1-245">A <see cref="T:System.Type" /> that corresponds to the interface type provided or consumed by a control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="393e1-246"><xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> プロパティは、コネクションポイントが使用するインターフェイスの種類を示します。</span><span class="sxs-lookup"><span data-stu-id="393e1-246">The <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property indicates what type of interface a connection point uses.</span></span> <span data-ttu-id="393e1-247">これは、2つのコントロールが互換性を持ち、接続を形成できるかどうかを判断するのに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="393e1-247">This can help to determine whether two controls are compatible and able to form a connection.</span></span> <span data-ttu-id="393e1-248">プロバイダー接続ポイントの <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> がコンシューマー接続ポイントの <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>と異なる場合、2つのコントロールに互換性がありません (つまり、トランスフォーマーを使用せずに直接接続することはできません)。また、<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> オブジェクトを使用して接続を確立する必要があります。</span><span class="sxs-lookup"><span data-stu-id="393e1-248">If the provider connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> is different from the consumer connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, then the two controls are incompatible (meaning that they cannot be directly connected without a transformer), and a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to establish a connection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="393e1-249">次のコード例は、<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> オブジェクトと <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> オブジェクトの両方で <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> プロパティを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="393e1-249">The following code example demonstrates the use of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property on both <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> and <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects.</span></span> <span data-ttu-id="393e1-250">このコード例では、プロパティにアクセスするコードが含まれている Web ページのみを示しています。例を実行するために必要な完全なコードについては、<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> クラスの概要の「例」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="393e1-250">This code example shows only the Web page that contains the code to access the property; for the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class overview.</span></span>  
  
 <span data-ttu-id="393e1-251">Web ページの `Button2_Click` メソッドのコードは、各接続ポイントオブジェクトの <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> プロパティにアクセスし、各値をラベルに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="393e1-251">The code in the `Button2_Click` method of the Web page accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property on each of the connection point objects and writes each value to a label.</span></span> <span data-ttu-id="393e1-252">ページがブラウザーに読み込まれた後に **[接続ポイントの詳細]** ボタンをクリックして、コードを実行します。</span><span class="sxs-lookup"><span data-stu-id="393e1-252">Execute the code by clicking the **Connection Point Details** button after the page is loaded in a browser.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)"><span data-ttu-id="393e1-253">ASP.NET Web パーツコントロール</span><span class="sxs-lookup"><span data-stu-id="393e1-253">ASP.NET Web Parts Controls</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
