<Type Name="CatalogZone" FullName="System.Web.UI.WebControls.WebParts.CatalogZone">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c1262732c77e5a4d03708bfc2dd2ab7f96c8deee" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77232579" /></Metadata><TypeSignature Language="C#" Value="public class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogZone extends System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZone" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogZone&#xA;Inherits CatalogZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZone : System::Web::UI::WebControls::WebParts::CatalogZoneBase" />
  <TypeSignature Language="F#" Value="type CatalogZone = class&#xA;    inherit CatalogZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web ページ上の <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> コントロールをホストするための、Web パーツ コントロール セットの主なコントロールとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web パーツコントロールセット内では、ゾーンは、Web パーツコントロールを含む Web ページ上の領域です。 Web パーツゾーンは、他のコントロールを格納するように設計された <xref:System.Web.UI.WebControls.CompositeControl> の一種であるゾーンコントロールによって作成されます。 ゾーンの主な機能は、含まれるコントロールをレイアウトし、それらのコントロールに共通のユーザーインターフェイス (UI) を提供することです。 ゾーンと Web パーツアプリケーションでのそれらの使用方法に関する一般的な情報については、「基本 <xref:System.Web.UI.WebControls.WebParts.WebZone> クラス」と「 [Web パーツコントロールセットの概要](https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100))」を参照してください。  
  
 Web パーツコントロールの重要な機能は、エンドユーザーが好みに応じて Web ページを変更 (またはカスタマイズ) し、今後のブラウザーセッション用に個人用設定を保存できることです。 Web パーツページの変更の1つの側面には、<xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールまたは他のサーバーコントロールを Web パーツページに追加する機能が含まれています。 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールは、ユーザーがページに追加できるコントロールのリストまたはカタログを提供します。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールは、Web パーツコントロールセットの基本コントロールの1つです。 これは <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> クラスから派生し、その動作のほとんどは、そのクラスから継承されます。 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> クラスは、基本的に、<xref:System.Web.UI.ITemplate> インターフェイスの実装であるゾーンテンプレートを基本クラスに追加します。 開発者はゾーンテンプレートを使用して、<xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールをページの永続形式でゾーンに宣言によって追加できます。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.WebParts.CatalogZone> ゾーンには、<xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールのみを含めることができます。逆に、<xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールは、<xref:System.Web.UI.WebControls.WebParts.CatalogZone>など <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> クラスから派生したゾーンにのみ配置できます。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールは、ユーザーが Web ページをカタログ表示モード (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>) に切り替えた場合にのみ表示されます。 カタログには、いくつかの種類の <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールを含めることができます。 各 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールは、ユーザーがページに追加できるサーバーコントロールを含むコンテナーの一種です。 <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールは、それが格納されているサーバーコントロールの発信元に応じて異なります。 次の表は、Web パーツコントロールセットで提供される <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールと、各コントロールに含まれるサーバーコントロールの種類をまとめたものです。  
  
|コントロール|Description|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|ページで閉じられているコントロールへの参照を保持します。 これらのコントロールは、ユーザーが再び開く (ページに再び追加する) ことができます。|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Web ページのマークアップで Web パーツカタログで宣言されているコントロールへの参照を格納します。 これらのコントロールは、ユーザーが Web ページに追加できます。|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|定義ファイル (を含む XML ファイル) をアップロードするための UI をユーザーに提供します。WebPart 拡張機能と、コントロールを Web ページに追加できるように、コントロールの状態情報を含む指定された形式)。|  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> クラスでは、基本クラスの動作にゾーンテンプレートのみが追加されるため、メンバーはほとんどありません。 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> コンストラクターはパラメーターなしのコンストラクターです。このメソッドを使用すると、<xref:System.Web.UI.WebControls.WebParts.CatalogZone> クラスの新しいインスタンスを初期化できます。 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> プロパティは、ゾーンのコントロールを格納する <xref:System.Web.UI.ITemplate> オブジェクトへの参照を取得または設定します。 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> メソッドは重大です。 これは、基本メソッドをオーバーライドして、ゾーンテンプレート内に含まれるすべての <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールのコレクションを作成します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebParts.CatalogZone> UI のボタンを使用するには、クライアント側のスクリプトを正しく動作させる必要があります。 ブラウザーでスクリプトが無効になっていると、ユーザーは <xref:System.Web.UI.WebControls.WebParts.CatalogZone> UI で操作を実行できなくなります。  
  
## <a name="accessibility"></a>アクセシビリティ  
 このコントロールに既定で表示されるマークアップは、Web コンテンツアクセシビリティガイドライン 1.0 (WCAG) 優先度1のガイドラインなどのユーザー補助の標準に準拠していない可能性があります。 このコントロールのアクセシビリティサポートの詳細については、「 [ASP.NET Controls And accessibility](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140))」を参照してください。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールの宣言型およびプログラムによる使用方法を示しています。 このコード例には、次の4つの部分があります。  
  
-   Web ページの表示モードを変更できるユーザーコントロール。  
  
-   カスタム <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールのソースコードと、カタログによってインポートされ Web ページに追加されるカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールを含むファイル。  
  
-   ユーザーコントロールとカスタム <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールを宣言する Web ページ。  
  
-   例を実行する方法について説明します。  
  
 このコード例の最初の部分は、ユーザーが Web ページの表示モードを変更できるようにするユーザーコントロールです。 このコントロールの表示モードとソースコードの説明の詳細については、「[チュートリアル: Web パーツページの表示モードの変更](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)」を参照してください。  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/displaymodemenucs.ascx#7)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/displaymodemenuvb.ascx#7)]  
  
 コード例の2番目の部分には、カスタム <xref:System.Web.UI.WebControls.WebParts.CatalogZone> および <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールのコードが含まれています。 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールのコードは、コンストラクターでいくつかの既定のプロパティ値を設定することによって、<xref:System.Web.UI.WebControls.WebParts.CatalogZone> クラスを継承し、そのプロパティをカスタマイズする方法を示しています。 ソースコードは、`TextDisplayWebPart`という名前のカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> クラスを作成する方法も示しています。 これは、に関連付けられているコントロールです。このコード例の一部としてインポートする WebPart description ファイル。 Web ページの <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールを使用して説明ファイルをインポートした後、説明ファイルで指定されているとおりに完全に構成された `TextDisplayWebPart` コントロールをページに追加できます。  
  
 コード例を実行するには、このソースコードをコンパイルする必要があります。 これを明示的にコンパイルし、生成されたアセンブリを Web サイトの Bin フォルダーまたはグローバルアセンブリキャッシュに格納することができます。 または、ソースコードをサイトの App_Code フォルダーに配置して、実行時に動的にコンパイルされるようにすることもできます。 このコード例では動的コンパイルを使用しているため、この例を実行する場合は、ソースコードファイルにという名前を指定し、Web アプリケーションのルートディレクトリの App_Code サブフォルダーに追加します。 コンパイルの両方の方法を示すチュートリアルについては、「[チュートリアル: カスタム Web サーバーコントロールの開発と使用](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)」を参照してください。  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 コード例の3番目の部分は、コントロールを含む Web ページです。 これには、ユーザーコントロールの `Register` ディレクティブ、およびカスタムコントロールを含むソースファイル用の別のディレクティブが含まれています。 2番目のディレクティブではアセンブリに名前が付けられないことに注意してください。例ではアセンブリを使用しないため、App_Code サブフォルダーに配置されているソースコードを使用して動的コンパイルを使用します。 Web ページは <xref:System.Web.UI.WebControls.WebParts.WebPartZone> コントロールを宣言し、その子 `<zonetemplate>` 要素内で <xref:System.Web.UI.WebControls.BulletedList> コントロールを宣言します。 これは標準の ASP.NET コントロールですが、実行時にはフル Web パーツ機能があります。これは、他のサーバーコントロールが Web パーツアプリケーションに参加できるように、<xref:System.Web.UI.WebControls.WebParts.WebPartManager> コントロールが <xref:System.Web.UI.WebControls.WebParts.WebPartZone> に配置されたサーバーコントロールを <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> オブジェクトでラップするためです。 このゾーンでも宣言されているのは、`TextDisplayWebPart`という名前のカスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールです。 このコントロールには `ExportMode="All"` の属性が宣言されていることに注意してください。 これにより、をエクスポートできます。コントロールのプロパティ値が含まれている WebPart 記述ファイル。他のユーザーがインポートして、事前に構成されたコントロールを他の Web ページに追加することができます。  
  
> [!NOTE]
>  Web パーツアプリケーションのユーザーが <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの説明ファイルをエクスポートできるようにするには、web.config ファイルの `<webParts>` 要素 (`<system.web>` 要素の子) に `enableExport="true"` 属性を追加して、Web アプリケーションのエクスポート機能を有効にする必要もあります。 既定ではエクスポートは無効になっているため、アプリケーションのエクスポートをまだ有効にしていない場合は、web.config ファイルを編集して、ここで実行します。  
  
 また、Web ページは、カスタム <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールを宣言し、その内部で、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールを含む `<zonetemplate>` 要素を宣言します。 ユーザーは、をインポートするときに、このコントロールを実行時に使用します。カスタム <xref:System.Web.UI.WebControls.WebParts.WebPart> コントロールの WebPart 記述ファイル。  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogzonevb.aspx#2)]  
  
 次に、コード例を実行します。 ブラウザーに Web ページを読み込みます。 最初の手順では、をエクスポートします。`TextDisplayWebPart` コントロールの WebPart 記述ファイル。 (タイトルバーの下向き矢印によって表される) カスタムコントロールの動詞メニューをクリックし、**[エクスポート]** をクリックします。 指示に従って、コントロールの説明ファイルを保存します。 を開きます。エディターでの WebPart description ファイル。タイトルのプロパティテキストの値を編集します。 属性 `name="Title"`を持つ `<property>` 要素を見つけ、`<property>` の開始タグと終了タグの間に含まれるタイトルテキストを編集します。 ここで、Web ページを閉じ、エディターでページソースを編集します。 `<aspSample:TextDisplayWebPart>` コントロール宣言要素を削除し、ファイルを保存して閉じます。  
  
 ブラウザーで Web ページを再度読み込みます。 `TextDisplayWebPart` コントロールは、削除したため、表示されません。 **[表示モード]** ドロップダウンリストコントロールを使用して、**[カタログ]** を選択し、ページをカタログモードに切り替えます。 カスタム <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールが、<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> コントロールと共に表示されることに注意してください。 **[参照]** ボタンをクリックして、を指定します。`TextDisplayWebPart` コントロール用にエクスポートした WebPart description ファイル。 **[アップロード]** をクリックし、インポートされたコントロールの横のチェックボックスをオンにして、**[追加]** をクリックしてページに追加します。 **[カタログを閉じる]** をクリックして、ページを通常ブラウズモードに戻します。 インポートしたコントロールがページに表示され、コントロールのタイトルバーに表示されるタイトルは、に追加したタイトルのテキストになります。WebPart description ファイル。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>カタログ UI の表示と動作をより細かく制御する場合は、カスタム <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> クラスを作成できます。 コントロールのユーザーに <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> コントロールを宣言によって追加する機能を提供する必要がない場合は、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> クラスから直接継承できます。 コントロールを宣言によって追加できるようにするには、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> クラスを継承する方法が必要です。これは、必須のゾーンテンプレートが提供されるためです。  
  
<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> クラスから継承する場合は、<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /> メソッドをオーバーライドし、メソッドを使用して、カスタムの <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> コントロールをゾーンに追加することをプログラムで制御する必要がある場合に、メソッドを使用してカスタム <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> コントロールを <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />に追加できます。</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)">Web パーツコントロールセットの概要</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Web パーツパーソナル化の概要</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールはゾーンテンプレートを実装するため、通常は宣言によって使用されるため、<xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> コンストラクターを使用してクラスの新しいインスタンスを作成する必要はほとんどありません。 ただし、<xref:System.Web.UI.WebControls.WebParts.CatalogZone> クラスを継承してカスタムゾーンを作成する場合は、コンストラクターを使用して、そのプロパティ値の一部を初期化し、その外観をカスタマイズすることをお勧めします。  
  
   
  
## Examples  
 次のコード例は、カスタム <xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロールでの <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> コンストラクターのプログラムによる使用方法を示しています。 コンストラクターは、コントロールの既定のプロパティ値を初期化するために使用されます。 次のコードは、コンストラクターが top の近くに宣言されているカスタム <xref:System.Web.UI.WebControls.WebParts.CatalogZone> クラスを示しています。 例を設定して実行するために必要な完全なコードと手順については、「<xref:System.Web.UI.WebControls.WebParts.CatalogZone> クラスの概要」の「例」を参照してください。  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="override this.CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZone.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ゾーンで宣言されている各 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 型のインスタンスを作成します。</summary>
        <returns>ゾーン内のすべての <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> コントロールへの参照を含む <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> メソッドは、ユーザーがページをカタログ表示モードに切り替えたときに、Web パーツカタログを構成するすべての <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールを作成するため、重要なメソッドです。  
  
 Web パーツコントロールセットで提供される <xref:System.Web.UI.WebControls.WebParts.CatalogZone> クラスの <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> メソッドでは、<xref:System.Web.UI.WebControls.WebParts.CatalogPart> クラスから継承する任意のサーバーコントロールを作成できます。 したがって、カスタム <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールを作成し、<xref:System.Web.UI.WebControls.WebParts.CatalogZone> コントロール内のページで宣言した場合、ユーザーがページをカタログモードに切り替えたときに、このメソッドによってコントロールが作成されます。  
  
 ただし、さまざまな理由により、<xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> 方法を制御することが必要になる場合があります。 特定の <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールのみを作成することもできます。 たとえば、一貫した外観を持ち、1つの製品または組織に属しているカスタム <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールのセットを作成するとします。 ページ開発者がカタログ内のカスタムコントロールを使用できるように制限する場合は、<xref:System.Web.UI.WebControls.WebParts.CatalogZone> クラスを継承し、<xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> メソッドをオーバーライドし、メソッドがカスタムコントロールと同じ型のコントロールのみを作成できるようにする必要があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">現在の <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> コントロールには、ID がありません。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.CatalogZone))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページの永続形式で <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> コントロール内に子コントロールを含めるテンプレートを取得または設定します。</summary>
        <value>ゾーンの子コントロールのコンテナーとして機能する <see cref="T:System.Web.UI.ITemplate" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> プロパティは、ゾーン内の <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールを格納するために使用される <xref:System.Web.UI.ITemplate> 型のテンプレートを参照します。 ゾーンテンプレートを使用すると、ページ開発者は、すべてのコントロールをプログラムで作成するのではなく、永続化形式で使用する <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールを宣言できます。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> プロパティの set アクセサーは、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> メソッドを呼び出します。これにより、ページ上のゾーンテンプレートで宣言されている <xref:System.Web.UI.WebControls.WebParts.CatalogPart> コントロールのコレクションが更新されます。 これにより、ユーザーがページ上のテンプレート内で実際に宣言されたコントロールを変更するたびに、ゾーンによって参照されるコントロールのコレクションが最新の状態に保たれるようになります。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>カスタム <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> ゾーンを作成するが、ページの開発者が宣言するのではなく、プログラムによって <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> コントロールを作成する場合は、ゾーンテンプレートのサポートは必要ありません。また、<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> クラスから直接継承することもできます。</para></block>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">ASP.NET Web パーツコントロール</related>
      </Docs>
    </Member>
  </Members>
</Type>
