<Type Name="GenerateScriptTypeAttribute" FullName="System.Web.Script.Services.GenerateScriptTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1435be8e6a0e3fc61fe0f44a08c1172cca780f2" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83963083" /></Metadata><TypeSignature Language="C#" Value="public sealed class GenerateScriptTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GenerateScriptTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Services.GenerateScriptTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GenerateScriptTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenerateScriptTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type GenerateScriptTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>サーバーの型が常にプロキシ オブジェクト内に生成されるように指定します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 AJAX 対応の ASP.NET Web サイトでは、ASP.NET は Web サービスクラスのメソッドのプロキシオブジェクトを自動的に生成できます。 これは、<xref:System.Web.Script.Services.ScriptServiceAttribute>でマークされているすべての Web メソッドの入力パラメーターと戻り値の最上位レベルの型に対して行われます。  
  
 それ以外の場合、サーバーの種類に対して生成されたオブジェクトをプロキシする場合は、<xref:System.Web.Script.Services.GenerateScriptTypeAttribute> を手動で適用する必要があります。 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> は、Web サービス自体、または <xref:System.Web.Services.WebMethodAttribute>でマークされた任意の Web サービスメソッドまたは `static` ページメソッドに適用できます。  
  
 場合によっては、型が Web サービスメソッドの入力パラメーターまたは戻り値に対応する場合でも、プロキシは自動的には生成されません。 その場合は、<xref:System.Web.Script.Services.GenerateScriptTypeAttribute> 属性を使用して、型のプロキシオブジェクトを生成する必要があります。 これは、`Dictionary<string,<T>>`などの複数の引数を持つジェネリック型および配列に対して発生します。  
  
 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> の1つ以上のインスタンスを、Web サービスのクラスまたはメソッドに適用できます。 次に、<xref:System.Web.Script.Services.GenerateScriptTypeAttribute>の各宣言によって参照される最上位レベルの型ごとに ECMAScript (JavaScript) プロキシクラスを生成します。  
  
> [!NOTE]
>  入れ子になった型のプロキシオブジェクトを生成する場合は、入れ子になった各型に <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> を手動で適用する必要があります。 ASP.NET は最上位レベルの型に対してのみプロキシを生成し、入れ子になった型に属性を自動的に再帰的に適用しません。  
  
 属性を使用する方法の詳細については、[属性](/dotnet/standard/attributes/)を参照してください。  
  
   
  
## Examples  
 次の例は、Web サービスクラスと Web メソッドに <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> を適用する方法を示しています。 その結果、`ColorObject` 型と入れ子にされた型 `FavoriteColors` がプロキシオブジェクトに含まれます。  
  
  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb515101(v=vs.100)">ASP.NET AJAX での Web サービスの使用</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398995(v=vs.100)">ASP.NET AJAX でクライアントスクリプトから Web サービスを呼び出す</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenerateScriptTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GenerateScriptTypeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Services.GenerateScriptTypeAttribute : Type -&gt; System.Web.Script.Services.GenerateScriptTypeAttribute" Usage="new System.Web.Script.Services.GenerateScriptTypeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">プロキシ クラスに含める型。</param>
        <summary>型を指定して、<see cref="T:System.Web.Script.Services.GenerateScriptTypeAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> プロパティは、このコンストラクターのオプションの名前付きパラメーターです。  
  
   
  
## Examples  
 次の例では、<xref:System.Web.Script.Services.GenerateScriptTypeAttribute> を使用して、メタデータマーカーに特定の型識別子を使用する、指定された型のプロキシオブジェクトを生成する方法を示します。  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> は <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTypeId">
      <MemberSignature Language="C#" Value="public string ScriptTypeId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptTypeId" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptTypeId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScriptTypeId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptTypeId : string with get, set" Usage="System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>型メタデータ マーカーを表す一意の識別子を取得または設定します。</summary>
        <value>シリアル化された JSON (JavaScript Object Notation) 文字列上の型メタデータ マーカーの型識別子。 既定値は、型のアセンブリ修飾名です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは省略可能なプロパティです。 指定した場合、<xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> の値は、型のアセンブリ修飾名ではなく、シリアル化された JSON 文字列の型メタデータマーカー ("__type") に使用されます。 逆シリアル化中に、<xref:System.Web.Script.Serialization.JavaScriptSerializer> オブジェクトに関連付けられている型リゾルバーは、型メタデータマーカー値を使用して、適切なマネージ型にマップし直します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.GenerateScriptTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Web.Script.Services.GenerateScriptTypeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プロキシ オブジェクトに含まれる型を取得します。</summary>
        <value>生成されたプロキシ オブジェクトに含まれる型オブジェクト。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
