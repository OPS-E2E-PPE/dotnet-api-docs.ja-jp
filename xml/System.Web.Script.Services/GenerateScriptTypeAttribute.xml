<Type Name="GenerateScriptTypeAttribute" FullName="System.Web.Script.Services.GenerateScriptTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79324d094462326ca4136fff65b68dac1c93806b" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77238429" /></Metadata><TypeSignature Language="C#" Value="public sealed class GenerateScriptTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GenerateScriptTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Services.GenerateScriptTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GenerateScriptTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class GenerateScriptTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type GenerateScriptTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f9c8f-101">サーバーの型が常にプロキシ オブジェクト内に生成されるように指定します。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-101">Specifies that the server type must be generated in the proxy object.</span></span> <span data-ttu-id="f9c8f-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c8f-103">AJAX 対応の ASP.NET Web サイトでは、ASP.NET は Web サービスクラスのメソッドのプロキシオブジェクトを自動的に生成できます。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-103">In AJAX-enabled ASP.NET Web sites, ASP.NET can automatically generate proxy objects for methods of a Web service class.</span></span> <span data-ttu-id="f9c8f-104">これは、<xref:System.Web.Script.Services.ScriptServiceAttribute>でマークされているすべての Web メソッドの入力パラメーターと戻り値の最上位レベルの型に対して行われます。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-104">It does this for most top-level types for the input parameters and return values of any Web methods that are marked with <xref:System.Web.Script.Services.ScriptServiceAttribute>.</span></span>  
  
 <span data-ttu-id="f9c8f-105">それ以外の場合、サーバーの種類に対して生成されたオブジェクトをプロキシする場合は、<xref:System.Web.Script.Services.GenerateScriptTypeAttribute> を手動で適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-105">In other cases, if you proxy objects generated for server types, you must apply <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> manually.</span></span> <span data-ttu-id="f9c8f-106"><xref:System.Web.Script.Services.GenerateScriptTypeAttribute> は、Web サービス自体、または <xref:System.Web.Services.WebMethodAttribute>でマークされた任意の Web サービスメソッドまたは `static` ページメソッドに適用できます。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-106">You can apply <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> to the Web service itself or to any Web service method or `static` page method marked with <xref:System.Web.Services.WebMethodAttribute>.</span></span>  
  
 <span data-ttu-id="f9c8f-107">場合によっては、型が Web サービスメソッドの入力パラメーターまたは戻り値に対応する場合でも、プロキシは自動的には生成されません。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-107">In some cases, even if the type corresponds to an input parameter or return value of a Web service method, the proxy will not be generated automatically.</span></span> <span data-ttu-id="f9c8f-108">その場合は、<xref:System.Web.Script.Services.GenerateScriptTypeAttribute> 属性を使用して、型のプロキシオブジェクトを生成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-108">In that case, you must use the <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> attribute to generate the proxy object for the type.</span></span> <span data-ttu-id="f9c8f-109">これは、`Dictionary<string,<T>>`などの複数の引数を持つジェネリック型および配列に対して発生します。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-109">This occurs for generic types and arrays that have more than one argument, such as `Dictionary<string,<T>>`.</span></span>  
  
 <span data-ttu-id="f9c8f-110"><xref:System.Web.Script.Services.GenerateScriptTypeAttribute> の1つ以上のインスタンスを、Web サービスのクラスまたはメソッドに適用できます。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-110">One or more instances of <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> can be applied to a Web service class or method.</span></span> <span data-ttu-id="f9c8f-111">次に、<xref:System.Web.Script.Services.GenerateScriptTypeAttribute>の各宣言によって参照される最上位レベルの型ごとに ECMAScript (JavaScript) プロキシクラスを生成します。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-111">ASP.NET will then generate an ECMAScript (JavaScript) proxy class for each top-level type that is referenced by each declaration of <xref:System.Web.Script.Services.GenerateScriptTypeAttribute>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f9c8f-112">入れ子になった型のプロキシオブジェクトを生成する場合は、入れ子になった各型に <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> を手動で適用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-112">If you want to generate proxy objects for nested types, you must manually apply <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> to each nested type.</span></span> <span data-ttu-id="f9c8f-113">ASP.NET は最上位レベルの型に対してのみプロキシを生成し、入れ子になった型に属性を自動的に再帰的に適用しません。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-113">ASP.NET generates proxies only for top-level types and does not automatically recursively apply the attribute to nested types.</span></span>  
  
 <span data-ttu-id="f9c8f-114">属性を使用する方法の詳細については、[属性](~/docs/standard/attributes/index.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-114">For more information about how to use attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c8f-115">次の例は、Web サービスクラスと Web メソッドに <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> を適用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-115">The following example shows how to apply <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> to a Web service class and to a Web method.</span></span> <span data-ttu-id="f9c8f-116">その結果、`ColorObject` 型と入れ子にされた型 `FavoriteColors` がプロキシオブジェクトに含まれます。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-116">As a result, the `ColorObject` type and its nested type `FavoriteColors` are included in the proxy object.</span></span>  
  
  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/4e876911-6276-4de8-b22a-d326a2033582"><span data-ttu-id="f9c8f-117">ASP.NET AJAX での Web サービスの使用</span><span class="sxs-lookup"><span data-stu-id="f9c8f-117">Using Web Services in ASP.NET AJAX</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398995(v=vs.100)"><span data-ttu-id="f9c8f-118">ASP.NET AJAX でクライアントスクリプトから Web サービスを呼び出す</span><span class="sxs-lookup"><span data-stu-id="f9c8f-118">Calling Web Services from Client Script in ASP.NET AJAX</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GenerateScriptTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GenerateScriptTypeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Services.GenerateScriptTypeAttribute : Type -&gt; System.Web.Script.Services.GenerateScriptTypeAttribute" Usage="new System.Web.Script.Services.GenerateScriptTypeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f9c8f-119">プロキシ クラスに含める型。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-119">The type to include in the proxy class.</span></span></param>
        <summary><span data-ttu-id="f9c8f-120">型を指定して、<see cref="T:System.Web.Script.Services.GenerateScriptTypeAttribute" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-120">Initializes a new instance of the <see cref="T:System.Web.Script.Services.GenerateScriptTypeAttribute" /> class for the specified type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c8f-121"><xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> プロパティは、このコンストラクターのオプションの名前付きパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-121">The <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> property is an optional named parameter for this constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9c8f-122">次の例では、<xref:System.Web.Script.Services.GenerateScriptTypeAttribute> を使用して、メタデータマーカーに特定の型識別子を使用する、指定された型のプロキシオブジェクトを生成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-122">The following example shows how to use <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> to generate a proxy object for the specified type that uses a specific type identifier for the metadata marker.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9c8f-123"><paramref name="type" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-123"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScriptTypeId">
      <MemberSignature Language="C#" Value="public string ScriptTypeId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptTypeId" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId" />
      <MemberSignature Language="VB.NET" Value="Public Property ScriptTypeId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScriptTypeId { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScriptTypeId : string with get, set" Usage="System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c8f-124">型メタデータ マーカーを表す一意の識別子を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-124">Gets or sets the type identifier for the type metadata marker.</span></span></summary>
        <value><span data-ttu-id="f9c8f-125">シリアル化された JSON (JavaScript Object Notation) 文字列上の型メタデータ マーカーの型識別子。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-125">The type identifier for the type metadata marker on the serialized JavaScript Object Notation (JSON) string.</span></span> <span data-ttu-id="f9c8f-126">既定値は、型のアセンブリ修飾名です。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-126">The default value is the assembly-qualified name of the type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9c8f-127">このプロパティは省略可能です。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-127">This is an optional property.</span></span> <span data-ttu-id="f9c8f-128">指定した場合、<xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> の値は、型のアセンブリ修飾名ではなく、シリアル化された JSON 文字列の型メタデータマーカー ("__type") に使用されます。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-128">If specified, the value of <xref:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId%2A> is used for the type metadata marker ("__type") on the serialized JSON string instead of the assembly-qualified name of the type.</span></span> <span data-ttu-id="f9c8f-129">逆シリアル化中に、<xref:System.Web.Script.Serialization.JavaScriptSerializer> オブジェクトに関連付けられている型リゾルバーは、型メタデータマーカー値を使用して、適切なマネージ型にマップし直します。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-129">During deserialization, the type resolver that is associated with the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object will use the type metadata marker value to map back to the appropriate managed type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Services.GenerateScriptTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.Web.Script.Services.GenerateScriptTypeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9c8f-130">プロキシ オブジェクトに含まれる型を取得します。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-130">Gets the type that is included in the proxy object.</span></span></summary>
        <value><span data-ttu-id="f9c8f-131">生成されたプロキシ オブジェクトに含まれる型オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f9c8f-131">The type object that is included in the generated proxy object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
