<Type Name="MetadataStore" FullName="System.Activities.Presentation.Metadata.MetadataStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df4b1cbff753740a0757cc25a94f4d3863012981" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83898371" /></Metadata><TypeSignature Language="C#" Value="public static class MetadataStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed MetadataStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Metadata.MetadataStore" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataStore abstract sealed" />
  <TypeSignature Language="F#" Value="type MetadataStore = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6f29a-101"><see cref="T:System.Type" /> による迅速なデザイナー要素検索が可能な、メモリ内のハッシュ テーブルのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="6f29a-101">An in-memory collection of hash tables that allows the rapid lookup of designer elements by <see cref="T:System.Type" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f29a-102">メタデータ ストアには、デザイナーと型の間の関連付けなどの、カスタム属性メタデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="6f29a-102">The metadata store contains custom attribute metadata, such as the association between designers and types.</span></span> <span data-ttu-id="6f29a-103">カスタム属性は、<xref:System.Activities.Presentation.Metadata.AttributeTable> で定義して、メタデータ ストアに追加できます。</span><span class="sxs-lookup"><span data-stu-id="6f29a-103">Custom attributes can be defined in an <xref:System.Activities.Presentation.Metadata.AttributeTable> and added to the metadata store.</span></span> <span data-ttu-id="6f29a-104">属性を追加すると、それらの属性は <xref:System.ComponentModel.TypeDescriptor> に対する呼び出しで使用されます。</span><span class="sxs-lookup"><span data-stu-id="6f29a-104">After the attributes are added, they will appear in calls made to <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6f29a-105">次のコード例は、`ActivityDesigner1` カスタム アクティビティ デザイナーをカスタム アクティビティと関連付ける方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6f29a-105">The following code example shows how to associate the `ActivityDesigner1` custom activity designer with a custom activity.</span></span> <span data-ttu-id="6f29a-106">カスタムアクティビティデザイナーを作成する方法の詳細については、「[方法: カスタムアクティビティデザイナーを作成](/dotnet/framework/windows-workflow-foundation/how-to-create-a-custom-activity-designer)する」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="6f29a-106">For more information about how to create custom activity designers, see [How to: Create a Custom Activity Designer](/dotnet/framework/windows-workflow-foundation/how-to-create-a-custom-activity-designer).</span></span>  
  
```csharp  
internal class Metadata : IRegisterMetadata  
{  
    private AttributeTable attributes;  
  
    // Called by the designer to register any design-time metadata.  
    public void Register()  
    {  
        AttributeTableBuilder builder = new AttributeTableBuilder();  
  
        // Add the custom attributes to associate the ActivityDesigner1 custom designer  
        // with the custom activity MyActivity.  
        builder.AddCustomAttributes(  
            typeof(MyActivity),  
            new DesignerAttribute(typeof(ActivityDesigner1)));  
        MetadataStore.AddAttributeTable(builder.CreateTable());  
  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAttributeTable">
      <MemberSignature Language="C#" Value="public static void AddAttributeTable (System.Activities.Presentation.Metadata.AttributeTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAttributeTable(class System.Activities.Presentation.Metadata.AttributeTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable(System.Activities.Presentation.Metadata.AttributeTable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAttributeTable (table As AttributeTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAttributeTable(System::Activities::Presentation::Metadata::AttributeTable ^ table);" />
      <MemberSignature Language="F#" Value="static member AddAttributeTable : System.Activities.Presentation.Metadata.AttributeTable -&gt; unit" Usage="System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Activities.Presentation.Metadata.AttributeTable" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="6f29a-107">追加するテーブル。</span><span class="sxs-lookup"><span data-stu-id="6f29a-107">The table to add.</span></span></param>
        <summary><span data-ttu-id="6f29a-108">指定したテーブルを現在の <see cref="T:System.AppDomain" /> オブジェクトの属性ストアに追加します。</span><span class="sxs-lookup"><span data-stu-id="6f29a-108">Adds the given table to the current <see cref="T:System.AppDomain" /> object's attribute store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6f29a-109">テーブルを追加すると、<xref:System.ComponentModel.TypeDescriptor> への呼び出しで、新たに追加されたテーブルに定義された属性が使用されます。</span><span class="sxs-lookup"><span data-stu-id="6f29a-109">After the table is added, calls to <xref:System.ComponentModel.TypeDescriptor> will use attributes defined in the newly added table.</span></span> <span data-ttu-id="6f29a-110">属性ストアには、複数のテーブルを追加できます。</span><span class="sxs-lookup"><span data-stu-id="6f29a-110">Multiple tables can be added to the attribute store.</span></span> <span data-ttu-id="6f29a-111">競合が発生した場合は、最後に追加されたテーブルの属性が使用されます。</span><span class="sxs-lookup"><span data-stu-id="6f29a-111">In the case of conflicts, attributes in the most recently added table are used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
