<Type Name="WebBaseErrorEvent" FullName="System.Web.Management.WebBaseErrorEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5872e9d0e439cf98366f017f7a660cc6df4f225c" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77243226" /></Metadata><TypeSignature Language="C#" Value="public class WebBaseErrorEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebBaseErrorEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebBaseErrorEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebBaseErrorEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebBaseErrorEvent : System::Web::Management::WebManagementEvent" />
  <TypeSignature Language="F#" Value="type WebBaseErrorEvent = class&#xA;    inherit WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>すべての状態監視エラー イベントの基本クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET の正常性の監視により、運用スタッフと運用スタッフは、デプロイされた Web アプリケーションを管理できます。 <xref:System.Web.Management> 名前空間には、アプリケーションの正常性状態データのパッケージ化を行う正常性イベントの種類と、このデータの処理を担当するプロバイダーの種類が含まれます。 また、正常性イベントの管理に役立つサポート型も含まれています。  
  
 <xref:System.Web.Management.WebBaseErrorEvent> クラスは、エラー状態を表す正常性監視イベントの基本クラスです。 ASP.NET は、<xref:System.Web.Management.WebBaseErrorEvent> とその派生型を使用して、Web アプリケーションの有効期間中のエラー状態を示します。  
  
> [!NOTE]
>  ほとんどの場合、ASP.NET の正常性監視の種類を実装して使用することができます。また、[`healthMonitoring` の構成] セクションで値を指定して、正常性監視システムを制御します。 また、正常性監視型から派生して、独自のカスタムイベントおよびプロバイダーを作成することもできます。 <xref:System.Web.Management.WebBaseErrorEvent> クラスからの派生の例については、このトピックで説明する例を参照してください。  
  
   
  
## Examples  
 次のコード例には2つの部分があります。 1つ目は、構成ファイルの抜粋であり、ASP.NET 正常性監視によって <xref:System.Web.Management.WebBaseErrorEvent> クラスから派生したイベントを使用できるようにします。 2番目の例は、<xref:System.Web.Management.WebBaseErrorEvent> クラスから派生してカスタムイベントを作成する方法を示しています。  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  
  <providers>  
    <!-- Define the custom provider that   
         processes custom Web request events. -->  
    <add name="SampleWebEventProvider"   
      type="SamplesAspNet.SampleEventProvider,  
      webeventprovider,Version=1.0.1573.18094,   
      Culture=neutral, PublicKeyToken=b5a57a9a9d487cf4,   
      processorArchitecture=MSIL"/>  
  </providers>  
  
  <eventMappings>  
  
    <!--  Define the event source that issues custom events.   -->  
    <add  name="SampleWebBaseErrorEvent"      
      type="SamplesAspNet.SampleWebBaseErrorEvent,  
      webbaseerrorevent,Version=1.0.1573.21549, Culture=neutral,     
      PublicKeyToken=2a0b23915ac7352b, processorArchitecture=MSIL"/>  
  </eventMappings>  
  
  <rules>  
    <!-- Associate custom event with related   
      custom provider -->  
    <add   
       name="Custom Web Base Errors"  
       eventName="SampleWebBaseErrorEvent"   
       provider="SampleWebEventProvider"   
       profile="Custom"/>    
  </rules>  
  
</healthMonitoring>  
```  
  
 次のコードは、<xref:System.Web.Management.WebBaseErrorEvent> クラスから派生してカスタムイベントを作成する方法を示しています。  
  
 [!code-csharp[System.Web.Management.WebErrorEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/CS/weberrorevent.cs#1)]
 [!code-vb[System.Web.Management.WebErrorEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebErrorEvent/VB/weberrorevent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebManagementEvent" />
    <altmember cref="T:System.Web.Management.WebErrorEvent" />
    <altmember cref="T:System.Web.Management.WebRequestEvent" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c">ASP.NET の正常性監視の概要</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.Management.WebBaseErrorEvent" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebBaseErrorEvent (string message, object eventSource, int eventCode, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebBaseErrorEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebBaseErrorEvent : string * obj * int * Exception -&gt; System.Web.Management.WebBaseErrorEvent" Usage="new System.Web.Management.WebBaseErrorEvent (message, eventSource, eventCode, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">イベントの説明です。</param>
        <param name="eventSource">イベントのソースであるオブジェクトです。</param>
        <param name="eventCode">イベントに関連付けられているコード。 カスタム イベントを実装する場合、イベント コードを <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> より大きくする必要があります。</param>
        <param name="e">エラーに関連付けられている <see cref="T:System.Exception" />。</param>
        <summary><see cref="T:System.Web.Management.WebBaseErrorEvent" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、ASP.NET health 監視システムによって内部的に使用されます。 このクラスを継承する独自のイベントの種類を実装するときに、このコンストラクターを呼び出すことができます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Management.WebBaseErrorEvent> クラスから派生したクラスである `SampleWebBaseErrorEvent` クラスのコンストラクターからこのコンストラクターを呼び出す方法を示しています。  
  
 [!code-csharp[System.Web.Management.WebBaseErrorEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/CS/webbaseerrorevent.cs#2)]
 [!code-vb[System.Web.Management.WebBaseErrorEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/VB/webbaseerrorevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebBaseErrorEvent (string message, object eventSource, int eventCode, int eventDetailCode, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseErrorEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebBaseErrorEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebBaseErrorEvent : string * obj * int * int * Exception -&gt; System.Web.Management.WebBaseErrorEvent" Usage="new System.Web.Management.WebBaseErrorEvent (message, eventSource, eventCode, eventDetailCode, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">イベントの説明です。</param>
        <param name="eventSource">イベントのソースであるオブジェクトです。</param>
        <param name="eventCode">イベントに関連付けられているコード。 カスタム イベントを実装する場合、イベント コードを <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> より大きくする必要があります。</param>
        <param name="eventDetailCode">イベントの詳細識別子。</param>
        <param name="e">エラーに関連付けられている <see cref="T:System.Exception" />。</param>
        <summary><see cref="T:System.Web.Management.WebBaseErrorEvent" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、ASP.NET health 監視システムによって内部的に使用されます。 このクラスを継承する独自のイベントの種類を実装するときに、このコンストラクターを呼び出すことができます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.Web.Management.WebBaseErrorEvent> クラスから派生したクラスである `SampleWebBaseErrorEvent` クラスのコンストラクターからこのコンストラクターを呼び出す方法を示しています。  
  
 [!code-csharp[System.Web.Management.WebBaseErrorEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/CS/webbaseerrorevent.cs#3)]
 [!code-vb[System.Web.Management.WebBaseErrorEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebBaseErrorEvent/VB/webbaseerrorevent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
    <Member MemberName="ErrorException">
      <MemberSignature Language="C#" Value="public Exception ErrorException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception ErrorException" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebBaseErrorEvent.ErrorException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ ErrorException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorException : Exception" Usage="System.Web.Management.WebBaseErrorEvent.ErrorException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エラーに関連付けられている <see cref="T:System.Exception" /> を取得します。</summary>
        <value>エラーに関連付けられている <see cref="T:System.Exception" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタム <xref:System.Web.Management.WebBaseErrorEvent>を実装する場合は、カスタムエラーイベントによってこの例外が処理されるようにする必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebBaseErrorEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberSignature Language="F#" Value="override this.IncrementPerfCounters : unit -&gt; unit" Usage="webBaseErrorEvent.IncrementPerfCounters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>イベント エラーのパフォーマンス関連カウンターをインクリメントします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、次のパフォーマンスカウンターをインクリメントします。  
  
-   インフラストラクチャエラーイベントが発生しました。 これは、発生したエラーイベントを追跡するグローバルカウンターです。  
  
-   エラーイベントが発生しました。 これはアプリケーション固有のカウンターであり、アプリケーションの開始後に発生したエラーイベントの数を追跡します。  
  
 また、このメソッドは親 <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A>も呼び出します。これにより、イベントが発生したカウンターが増加します。 このカウンターは、発生したイベントの合計数を追跡します。  
  
 これらのパフォーマンスカウンターをシステムモニター (PerfMon) で表示するには、**[カウンターの追加]** ウィンドウの **[パフォーマンスオブジェクト]** ボックスの一覧で **[ASP.NET]** を選択し、表示するパフォーマンスカウンターを選択して **[追加]** ボタンをクリックします。 詳細については、MSDN の IIS ドキュメントの「 [ASP.NET Applications でのシステムモニター (PerfMon) の使用](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc784965(v=ws.10))」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
