<Type Name="WebEventProvider" FullName="System.Web.Management.WebEventProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b50c253fca371cf4f6d74c6b2abba2afec8d5826" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73380037" /></Metadata><TypeSignature Language="C#" Value="public abstract class WebEventProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebEventProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WebEventProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebEventProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type WebEventProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="203ee-101">非バッファー イベント プロバイダーの基本クラスを提供します。</span><span class="sxs-lookup"><span data-stu-id="203ee-101">Provides the base class for non buffered event providers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="203ee-102">ASP.NET の正常性の監視により、運用スタッフと運用スタッフは、デプロイされた Web アプリケーションを管理できます。</span><span class="sxs-lookup"><span data-stu-id="203ee-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="203ee-103"><xref:System.Web.Management> 名前空間には、アプリケーションの正常性状態データのパッケージ化を行う正常性イベントの種類と、このデータの処理を担当するプロバイダーの種類が含まれます。</span><span class="sxs-lookup"><span data-stu-id="203ee-103">The <xref:System.Web.Management> namespace contains the health event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="203ee-104">また、正常性イベントの管理に役立つサポート型も含まれています。</span><span class="sxs-lookup"><span data-stu-id="203ee-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="203ee-105">正常性イベントの処理をカスタマイズする場合は、<xref:System.Web.Management.WebEventProvider> クラスから派生させて、独自のカスタムプロバイダーを作成できます。</span><span class="sxs-lookup"><span data-stu-id="203ee-105">If you want to customize the health-event processing, you can derive from the <xref:System.Web.Management.WebEventProvider> class to create your own custom provider.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="203ee-106">ほとんどの場合、ASP.NET の正常性監視の種類を実装済みとして使用できます。また、[`healthMonitoring` の構成] セクションで値を指定して、正常性監視システムを制御します。</span><span class="sxs-lookup"><span data-stu-id="203ee-106">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="203ee-107">また、正常性監視型から派生して、独自のカスタムイベントおよびプロバイダーを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="203ee-107">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="203ee-108"><xref:System.Web.Management.WebEventProvider> クラスからの派生の例については、このトピックで説明する例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="203ee-108">For an example of deriving from the <xref:System.Web.Management.WebEventProvider> class, see the example provided in this topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="203ee-109">次のコード例は、<xref:System.Web.Management.WebEventProvider> クラスから派生させて、適切なアクセス権を付与する必要のあるローカルファイルに構成されたイベントを書き込むカスタムプロバイダーを作成する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="203ee-109">The following code example shows how to derive from the <xref:System.Web.Management.WebEventProvider> class to create a custom provider that writes the configured events to a local file for which appropriate access rights must be granted.</span></span> <span data-ttu-id="203ee-110">このカスタムプロバイダーの例は単純であり、主な目的は、開発者が基本メカニズムを完全に制御できるようにすることです。</span><span class="sxs-lookup"><span data-stu-id="203ee-110">This custom provider example is simple and its main intent is to give you as developer full control of its basic mechanisms.</span></span> <span data-ttu-id="203ee-111">実際のシナリオでは、アプリケーションの動作を事前に調査するために、このプロバイダーと、特に <xref:System.Web.Management.BufferedWebEventProvider>で使用できるバッファープロバイダー例を使用できます。</span><span class="sxs-lookup"><span data-stu-id="203ee-111">In a real-world scenario, you could use this provider and especially the example buffered provider available at <xref:System.Web.Management.BufferedWebEventProvider>, as a preliminary probe into the behavior of an application.</span></span> <span data-ttu-id="203ee-112">これは、設計段階で、利用可能な情報を理解するのに役立ちます。その後、この情報をより複雑なプロバイダーに転送できます。</span><span class="sxs-lookup"><span data-stu-id="203ee-112">This can help you during the design stage to gain an understanding of the information available; then later you can direct this information to a more complex provider.</span></span>  
  
 <span data-ttu-id="203ee-113">次の構成ファイルの抜粋は、ASP.NET が、上で定義されたカスタムプロバイダーを使用してすべての正常性監視イベントを処理できるようにする、`healthMonitoring` セクションの構成を示しています。</span><span class="sxs-lookup"><span data-stu-id="203ee-113">The following configuration file excerpt shows a `healthMonitoring` section configuration that enables ASP.NET to use the custom provider defined above to process all health-monitoring events.</span></span>  
  
```  
<healthMonitoring   
  heartBeatInterval="0"   
  enabled="true">  
  
    <providers>  
  
      <add name="SampleWebEventProvider"   
        type="SamplesAspNet.SampleEventProvider,webeventprovider, Version=1.0.1773.33989, Culture=neutral, PublicKeyToken=cf85aa6c978d9dea, processorArchitecture=MSIL" />  
  
    </providers>  
  
    <rules>  
  
      <rule   
        name="Custom Event Provider"  
        eventName="All Events"  
        provider="SampleWebEventProvider"  
        profile="Default" />  
    </rules>  
  
</healthMonitoring>  
```  
  
 [!code-csharp[System.Web.Management.WebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#1)]
 [!code-vb[System.Web.Management.WebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="203ee-114">ASP.NET の正常性監視の概要</span><span class="sxs-lookup"><span data-stu-id="203ee-114">ASP.NET Health Monitoring Overview</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/ms178718(v=vs.140)"><span data-ttu-id="203ee-115">例: カスタムイベントプロバイダー</span><span class="sxs-lookup"><span data-stu-id="203ee-115">Example: Custom Event Provider</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2"><span data-ttu-id="203ee-116">ASP.NET プロバイダーのインストールと構成</span><span class="sxs-lookup"><span data-stu-id="203ee-116">Installing and Configuring ASP.NET Providers</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="203ee-117"><see cref="T:System.Web.Management.WebEventProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="203ee-117">Initializes a new instance of the <see cref="T:System.Web.Management.WebEventProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="203ee-118"><xref:System.Web.Management.WebEventProvider.%23ctor%2A> コンストラクターは、コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="203ee-118">The <xref:System.Web.Management.WebEventProvider.%23ctor%2A> constructor is not intended to be used directly from your code.</span></span> <span data-ttu-id="203ee-119">ASP.NET によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="203ee-119">It is called by ASP.NET.</span></span> <span data-ttu-id="203ee-120"><xref:System.Web.Management.WebEventProvider> クラスから派生する場合は、<xref:System.Web.Management.WebEventProvider.%23ctor%2A> コンストラクターを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="203ee-120">You can call the <xref:System.Web.Management.WebEventProvider.%23ctor%2A> constructor when deriving from the <xref:System.Web.Management.WebEventProvider> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="203ee-121">次のコード例は、カスタムイベントプロバイダーでこのコンストラクターを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="203ee-121">The following code example shows how to use this constructor in a custom event provider.</span></span>  
  
 [!code-csharp[System.Web.Management.WebEventProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#2)]
 [!code-vb[System.Web.Management.WebEventProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="webEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="203ee-122">イベントをプロバイダーのバッファーからイベント ログに移動します。</span><span class="sxs-lookup"><span data-stu-id="203ee-122">Moves the events from the provider's buffer into the event log.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="203ee-123">このメソッドが呼び出されると、最後の書き込みからの経過時間またはバッファー内のイベントの数に関係なく、バッファー内のすべてのイベントがバッファーからイベントログに直ちに移動されます。</span><span class="sxs-lookup"><span data-stu-id="203ee-123">When this method is called, all the events in the buffer are immediately moved from the buffer to the event log, regardless of how much time has elapsed since last write or how many events are in the buffer.</span></span> <span data-ttu-id="203ee-124">最後の書き込み時刻は、フラッシュ操作の時刻にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="203ee-124">The time of the last write is reset to the time of the flushing action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="203ee-125"><xref:System.Web.Management.WebEventProvider.Flush%2A> メソッドを使用するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="203ee-125">The following code example shows how to use the <xref:System.Web.Management.WebEventProvider.Flush%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Management.WebEventProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#3)]
 [!code-vb[System.Web.Management.WebEventProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public abstract void ProcessEvent (System.Web.Management.WebBaseEvent raisedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent raisedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ProcessEvent (raisedEvent As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ProcessEvent(System::Web::Management::WebBaseEvent ^ raisedEvent);" />
      <MemberSignature Language="F#" Value="abstract member ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="webEventProvider.ProcessEvent raisedEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="raisedEvent" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="raisedEvent"><span data-ttu-id="203ee-126">処理対象の <see cref="T:System.Web.Management.WebBaseEvent" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="203ee-126">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span></span></param>
        <summary><span data-ttu-id="203ee-127">プロバイダーに渡されたイベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="203ee-127">Processes the event passed to the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="203ee-128">このメソッドは、イベントの処理を開始するために、正常性監視の呼び出しを ASP.NET します。</span><span class="sxs-lookup"><span data-stu-id="203ee-128">This is the method that ASP.NET health monitoring calls to start processing the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="203ee-129">次のコード例は、<xref:System.Web.Management.WebEventProvider.ProcessEvent%2A> メソッドを実装する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="203ee-129">The following code example shows how to implement the <xref:System.Web.Management.WebEventProvider.ProcessEvent%2A> method.</span></span> <span data-ttu-id="203ee-130">このメソッドは、イベントのカスタマイズされた文字列形式を特定のログファイルに追加します。</span><span class="sxs-lookup"><span data-stu-id="203ee-130">This method appends the customized string representation of the event to a specific log file.</span></span>  
  
 [!code-csharp[System.Web.Management.WebEventProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#5)]
 [!code-vb[System.Web.Management.WebEventProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public abstract void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit" Usage="webEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="203ee-131">プロバイダーのシャットダウンに関連するタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="203ee-131">Performs tasks associated with shutting down the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="203ee-132">ASP.NET は、Web アプリケーションをホストしているアプリケーションドメインが終了したときに <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="203ee-132">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain hosting the Web application terminates.</span></span> <span data-ttu-id="203ee-133">メソッドは、リソースの終了など、アプリケーションが適切に終了できるようにするタスクを実行するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="203ee-133">The method is called to perform tasks that will allow the application to end gracefully, such as closing resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="203ee-134"><xref:System.Web.Management.WebEventProvider.Shutdown%2A> メソッドを使用するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="203ee-134">The following code example shows how to use the <xref:System.Web.Management.WebEventProvider.Shutdown%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Management.WebEventProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/CS/webeventprovider.cs#4)]
 [!code-vb[System.Web.Management.WebEventProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebEventProvider/VB/webeventprovider.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
