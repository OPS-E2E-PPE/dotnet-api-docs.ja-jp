<Type Name="WmiWebEventProvider" FullName="System.Web.Management.WmiWebEventProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47bfddea902a99d73683ce26d7ccfea2447da929" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73380029" /></Metadata><TypeSignature Language="C#" Value="public class WmiWebEventProvider : System.Web.Management.WebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WmiWebEventProvider extends System.Web.Management.WebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WmiWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WmiWebEventProvider&#xA;Inherits WebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiWebEventProvider : System::Web::Management::WebEventProvider" />
  <TypeSignature Language="F#" Value="type WmiWebEventProvider = class&#xA;    inherit WebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cb18f-101">ASP.NET 状態監視イベントを WMI (Windows Management Instrumentation) イベントに割り当てるイベント プロバイダーを実装します。</span><span class="sxs-lookup"><span data-stu-id="cb18f-101">Implements an event provider that maps ASP.NET health-monitoring events to Windows Management Instrumentation (WMI) events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb18f-102">ASP.NET の正常性の監視により、運用スタッフと運用スタッフは、デプロイされた Web アプリケーションを管理できます。</span><span class="sxs-lookup"><span data-stu-id="cb18f-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="cb18f-103"><xref:System.Web.Management> 名前空間には、アプリケーションの正常性状態データのパッケージ化を行う正常性イベントの種類と、このデータの処理を担当するプロバイダーの種類が含まれます。</span><span class="sxs-lookup"><span data-stu-id="cb18f-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="cb18f-104">また、正常性イベントの管理に役立つサポート型も含まれています。</span><span class="sxs-lookup"><span data-stu-id="cb18f-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="cb18f-105">ASP.NET は、このクラスを使用して、正常性監視イベントを WMI イベントにマップします。</span><span class="sxs-lookup"><span data-stu-id="cb18f-105">ASP.NET uses this class to map health-monitoring events to WMI events.</span></span> <span data-ttu-id="cb18f-106">ASP.NET の正常性監視イベントを WMI サブシステムに配信できるようにするには、構成ファイルの `<healthMonitoring>` セクションに適切な設定を追加して <xref:System.Web.Management.WmiWebEventProvider> クラスを構成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="cb18f-106">To enable the delivery of ASP.NET health-monitoring events to the WMI subsystem, you must configure the <xref:System.Web.Management.WmiWebEventProvider> class by adding the appropriate settings in the `<healthMonitoring>` section of the configuration file.</span></span>  
  
 <span data-ttu-id="cb18f-107">Aspnet ファイルに含まれる情報は、ASP.NET 状態監視イベントが <xref:System.Web.Management.WmiWebEventProvider> クラスにルーティングされ、WMI イベントにマップされるときに発生する WMI イベントのパラメーターについて説明します。</span><span class="sxs-lookup"><span data-stu-id="cb18f-107">The information contained in the Aspnet.mof file describes the parameters of the WMI events raised when ASP.NET health-monitoring events are routed to the <xref:System.Web.Management.WmiWebEventProvider> class and mapped into WMI events.</span></span> <span data-ttu-id="cb18f-108">Aspnet .mof ファイルは .NET Framework ビルドディレクトリに格納されます。たとえば、 *%windir%\Microsoft.NET\Framework\\の*ようになります。</span><span class="sxs-lookup"><span data-stu-id="cb18f-108">The Aspnet.mof file is stored in the .NET Framework build directory, for example %windir%\Microsoft.NET\Framework\\*BuildNumber*.</span></span> <span data-ttu-id="cb18f-109">正常性監視イベントを WMI イベントとしてレポートする方法の詳細については、「WMI を使用した[ASP.NET 正常性監視イベントの配信](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms178709(v=vs.85))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb18f-109">For more information about reporting health-monitoring events as WMI events, see [Using WMI to Deliver ASP.NET Health Monitoring Events](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms178709(v=vs.85)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb18f-110">ほとんどの場合、ASP.NET の正常性監視の種類を実装済みとして使用できます。また、[`<healthMonitoring>` の構成] セクションで値を指定して、正常性監視システムを制御します。</span><span class="sxs-lookup"><span data-stu-id="cb18f-110">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `<healthMonitoring>` configuration section.</span></span> <span data-ttu-id="cb18f-111">また、正常性監視型から派生して、独自のカスタムイベントおよびプロバイダーを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="cb18f-111">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="cb18f-112">カスタムプロバイダーを作成する例については、「[方法: 正常性監視カスタムプロバイダーの実装例](https://docs.microsoft.com/previous-versions/ms178718(v=vs.140))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="cb18f-112">For an example of creating a custom provider, see [How to: Implement the Health Monitoring Custom Provider Example](https://docs.microsoft.com/previous-versions/ms178718(v=vs.140)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cb18f-113">次の例では、Web アプリケーションの正常性イベントの結果として ASP.NET health monitoring によって発行された WMI イベントのコンシューマーを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="cb18f-113">The following example shows how to create a consumer of WMI events issued by ASP.NET health monitoring as a result of Web-application health events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cb18f-114">監視する <xref:System.Web.Management.WmiWebEventProvider> クラスと正常性イベントの種類は、既定で既に構成されています。</span><span class="sxs-lookup"><span data-stu-id="cb18f-114">The <xref:System.Web.Management.WmiWebEventProvider> class and the health event types to monitor are already configured by default.</span></span> <span data-ttu-id="cb18f-115">必要なのは、すべての正常性イベントに対してルールを定義することだけです。</span><span class="sxs-lookup"><span data-stu-id="cb18f-115">The only thing you need to do is to define the rule for all the health events.</span></span> <span data-ttu-id="cb18f-116">正常性イベントは、既定では <xref:System.Web.Management.WmiWebEventProvider> プロバイダーにディスパッチされないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="cb18f-116">Remember that the health events are not dispatched to the <xref:System.Web.Management.WmiWebEventProvider> provider by default.</span></span>  
  
 [!code-csharp[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/CS/WmiWebEventListener.cs#1)]
 [!code-vb[System.Web.Management.WmiWebEventProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WmiWebEventProvider/VB/WmiWebEventListener.vb#1)]  
  
 <span data-ttu-id="cb18f-117">次の例は、ASP.NET が <xref:System.Web.Management.WmiWebEventProvider> プロバイダーを使用してすべての正常性監視イベントを処理できるようにする `<healthMonitoring>` 構成セクションを示す構成ファイルの抜粋です。</span><span class="sxs-lookup"><span data-stu-id="cb18f-117">The following example is a configuration file excerpt that shows a `<healthMonitoring>` configuration section that enables ASP.NET to use the <xref:System.Web.Management.WmiWebEventProvider> provider to process all health-monitoring events.</span></span>  
  
```  
<healthMonitoring>  
  <rules>  
    <add   
      name="Using Wmi"  
      eventName="All Events"   
      provider="WmiWebEventProvider"   
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="cb18f-118">ASP.NET の正常性監視の概要</span><span class="sxs-lookup"><span data-stu-id="cb18f-118">ASP.NET Health Monitoring Overview</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/ms178718(v=vs.140)"><span data-ttu-id="cb18f-119">ASP.NET Health-カスタムプロバイダーの監視のサンプル</span><span class="sxs-lookup"><span data-stu-id="cb18f-119">ASP.NET Health-Monitoring Custom Provider Sample</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab894e83-7e2f-4af8-a116-b1bff8f815b2"><span data-ttu-id="cb18f-120">ASP.NET プロバイダーのインストールと構成</span><span class="sxs-lookup"><span data-stu-id="cb18f-120">Installing and Configuring ASP.NET Providers</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiWebEventProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiWebEventProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb18f-121"><see cref="T:System.Web.Management.WmiWebEventProvider" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="cb18f-121">Initializes a new instance of the <see cref="T:System.Web.Management.WmiWebEventProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb18f-122">このコンストラクターは、ASP.NET health 監視システムによって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="cb18f-122">This constructor is used internally by the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="cb18f-123"><xref:System.Web.Management.TraceWebEventProvider> クラスのインスタンスを作成するためには使用しませんが、このクラスから継承する独自のプロバイダーの型を実装する場合は、このコンストラクターを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="cb18f-123">You will never use it to create an instance of the <xref:System.Web.Management.TraceWebEventProvider> class, but you can call this constructor when you implement your own provider type that inherits from this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="wmiWebEventProvider.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb18f-124">すべてのイベントをプロバイダーのバッファーから削除します。</span><span class="sxs-lookup"><span data-stu-id="cb18f-124">Removes all events from the provider's buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb18f-125">このメソッドが呼び出されると、前回の書き込みからの経過時間またはバッファー内のイベントの数に関係なく、プロバイダーのバッファー内のすべてのイベントが直ちに削除されます。</span><span class="sxs-lookup"><span data-stu-id="cb18f-125">When this method is called, all the events in the provider's buffer are immediately removed, regardless of how much time has elapsed since the last write or how many events are in the buffer.</span></span> <span data-ttu-id="cb18f-126">最後の書き込み時刻は、フラッシュ操作の時刻にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="cb18f-126">The time of the last write is reset to the time of the flushing action.</span></span> <span data-ttu-id="cb18f-127">バッファリング機構が有効になっていない場合にこのメソッドを呼び出すと、効果はありません。</span><span class="sxs-lookup"><span data-stu-id="cb18f-127">Calling this method when the buffering mechanism is not enabled has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="wmiWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="cb18f-128">このプロバイダーを識別するために構成ファイルで使用する名前。</span><span class="sxs-lookup"><span data-stu-id="cb18f-128">The name used in the configuration file to identify this provider.</span></span></param>
        <param name="config"><span data-ttu-id="cb18f-129">構成ファイルでこのプロバイダーに割り当てられる属性を指定する <see cref="T:System.Collections.Specialized.NameValueCollection" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb18f-129">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that specifies the attributes assigned for this provider in the configuration file.</span></span></param>
        <summary><span data-ttu-id="cb18f-130">このオブジェクトの初期値を設定します。</span><span class="sxs-lookup"><span data-stu-id="cb18f-130">Sets the initial values for this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb18f-131">ASP.NET は、<xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> コンストラクターを呼び出した後に <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cb18f-131">ASP.NET calls the <xref:System.Web.Management.WmiWebEventProvider.Initialize%2A> method after calling the <xref:System.Web.Management.WmiWebEventProvider.%23ctor%2A> constructor.</span></span> <span data-ttu-id="cb18f-132">このメソッドは、構成設定と構成ファイルで指定された名前を使用して <xref:System.Web.Management.WmiWebEventProvider> クラスを初期化するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cb18f-132">This method is called to initialize the <xref:System.Web.Management.WmiWebEventProvider> class with the configuration settings and name specified in the configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="wmiWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised"><span data-ttu-id="cb18f-133">処理対象の <see cref="T:System.Web.Management.WebBaseEvent" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="cb18f-133">The <see cref="T:System.Web.Management.WebBaseEvent" /> object to process.</span></span></param>
        <summary><span data-ttu-id="cb18f-134">プロバイダーに渡されたイベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="cb18f-134">Processes the event passed to the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb18f-135">これは、イベントの処理を開始するために、正常性監視の呼び出しを ASP.NET するメソッドです。</span><span class="sxs-lookup"><span data-stu-id="cb18f-135">This is the method that ASP.NET health monitoring calls to start the processing of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="cb18f-136">イベントが発生しませんでした。</span><span class="sxs-lookup"><span data-stu-id="cb18f-136">The event could not be raised.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WmiWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="wmiWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="cb18f-137">プロバイダーのシャットダウンに関連するタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="cb18f-137">Performs tasks associated with shutting down the provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cb18f-138">ASP.NET は、Web アプリケーションをホストするアプリケーションドメインが終了したときに <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="cb18f-138">ASP.NET calls the <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> method when the application domain that hosts the Web application terminates.</span></span> <span data-ttu-id="cb18f-139">メソッドは、アプリケーションが正常に終了できるようにするタスクを実行するために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="cb18f-139">The method is called to perform tasks that will allow the application to end gracefully.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
