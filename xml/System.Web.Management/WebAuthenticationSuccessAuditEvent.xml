<Type Name="WebAuthenticationSuccessAuditEvent" FullName="System.Web.Management.WebAuthenticationSuccessAuditEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db5f67975a98c7549f2675306e5eac659222b94d" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77238481" /></Metadata><TypeSignature Language="C#" Value="public class WebAuthenticationSuccessAuditEvent : System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebAuthenticationSuccessAuditEvent extends System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebAuthenticationSuccessAuditEvent&#xA;Inherits WebSuccessAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebAuthenticationSuccessAuditEvent : System::Web::Management::WebSuccessAuditEvent" />
  <TypeSignature Language="F#" Value="type WebAuthenticationSuccessAuditEvent = class&#xA;    inherit WebSuccessAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebSuccessAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="85af7-101">正常終了した認証イベントに関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="85af7-101">Provides information about successful authentication events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85af7-102">ASP.NET の正常性の監視により、運用スタッフと運用スタッフは、デプロイされた Web アプリケーションを管理できます。</span><span class="sxs-lookup"><span data-stu-id="85af7-102">ASP.NET health monitoring allows production and operations staff to manage deployed Web applications.</span></span> <span data-ttu-id="85af7-103"><xref:System.Web.Management> 名前空間には、アプリケーションの正常性状態データのパッケージ化を行う正常性イベントの種類と、このデータの処理を担当するプロバイダーの種類が含まれます。</span><span class="sxs-lookup"><span data-stu-id="85af7-103">The <xref:System.Web.Management> namespace contains the health-event types responsible for packaging application health-status data and the provider types responsible for processing this data.</span></span> <span data-ttu-id="85af7-104">また、正常性イベントの管理に役立つサポート型も含まれています。</span><span class="sxs-lookup"><span data-stu-id="85af7-104">It also contains supporting types that help during the management of health events.</span></span>  
  
 <span data-ttu-id="85af7-105">次の一覧では、ASP.NET が型 <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>のイベントを発生させる機能について説明します。</span><span class="sxs-lookup"><span data-stu-id="85af7-105">The following list describes the features for which ASP.NET raises events of type <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85af7-106">既定では、ログ記録の成功状態によってシステムリソースが著しく低下する可能性があるため、ASP.NET は監査エラー条件のみをログに記録するように構成されています。</span><span class="sxs-lookup"><span data-stu-id="85af7-106">By default ASP.NET is configured to log audit failure conditions only, as logging success conditions can severely strain system resources.</span></span>  <span data-ttu-id="85af7-107">システムは、いつでも成功条件をログに記録するように構成できます。</span><span class="sxs-lookup"><span data-stu-id="85af7-107">You can always configure the system to log the success conditions.</span></span>  
  
-   <span data-ttu-id="85af7-108">フォーム認証。</span><span class="sxs-lookup"><span data-stu-id="85af7-108">Forms Authentication.</span></span> <span data-ttu-id="85af7-109">成功した条件が監査されます。</span><span class="sxs-lookup"><span data-stu-id="85af7-109">Successful conditions are audited.</span></span> <span data-ttu-id="85af7-110">成功の監査には、認証されたユーザー名が含まれます。</span><span class="sxs-lookup"><span data-stu-id="85af7-110">Success audits include the user name that was authenticated.</span></span> <span data-ttu-id="85af7-111">代わりに、復号化または検証に失敗したチケットが原因で発生することが多いため、失敗の監査にはユーザー名が含まれません。</span><span class="sxs-lookup"><span data-stu-id="85af7-111">Instead, failure audits do not include the user name, since they typically result from a ticket that failed decryption or validation.</span></span> <span data-ttu-id="85af7-112">両方にクライアント IP アドレスが含まれています。</span><span class="sxs-lookup"><span data-stu-id="85af7-112">Both contain the client IP address.</span></span> <span data-ttu-id="85af7-113">関連するイベント監査コードは <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>です。</span><span class="sxs-lookup"><span data-stu-id="85af7-113">The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>.</span></span>  
  
-   <span data-ttu-id="85af7-114">要素.</span><span class="sxs-lookup"><span data-stu-id="85af7-114">Membership.</span></span> <span data-ttu-id="85af7-115">成功した条件が監査されます。</span><span class="sxs-lookup"><span data-stu-id="85af7-115">Successful conditions are audited.</span></span> <span data-ttu-id="85af7-116">成功と失敗の両方の監査には、試行されたユーザー名が含まれます。</span><span class="sxs-lookup"><span data-stu-id="85af7-116">Both success and failure audits contain the username that was attempted.</span></span> <span data-ttu-id="85af7-117">ログに有効なパスワードが保持される可能性があるため、どちらの形式の監査にも、試行されたパスワードは含まれません。</span><span class="sxs-lookup"><span data-stu-id="85af7-117">Neither form of audit will contain the password that was attempted, because that would risk persisting a valid password in the log.</span></span> <span data-ttu-id="85af7-118">関連するイベント監査コードは <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>です。</span><span class="sxs-lookup"><span data-stu-id="85af7-118">The related event audit code is <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>.</span></span>  
  
 <span data-ttu-id="85af7-119"><xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> が発生すると、既定では、認証成功イベントの発生パフォーマンスカウンターが更新されます。</span><span class="sxs-lookup"><span data-stu-id="85af7-119">When a <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> is raised, by default it updates the Authentication Success Events Raised performance counter.</span></span> <span data-ttu-id="85af7-120">システムモニター (PerfMon) でこのパフォーマンスカウンターを表示するには、**カウンターの追加** ウィンドウの **パフォーマンスオブジェクト** ボックスの一覧で **ASP.NET** を選択し、認証成功イベントの発生 パフォーマンスカウンターを選択して **追加** ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="85af7-120">To view this performance counter in System Monitor (PerfMon), in the **Add Counters** window select **ASP.NET** in the **Performance object** drop-down list, select the Authentication Success Events Raised performance counter, and click the **Add** button.</span></span> <span data-ttu-id="85af7-121">詳細については、「 [ASP.NET Applications でのシステムモニター (PerfMon) の使用](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc784965(v=ws.10))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="85af7-121">For more information, see [Using the System Monitor (PerfMon) with ASP.NET Applications](https://docs.microsoft.com/previous-versions/windows/it-pro/windows-server-2003/cc784965(v=ws.10)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85af7-122">ほとんどの場合、ASP.NET の正常性監視の種類を実装済みとして使用できます。また、[`healthMonitoring` の構成] セクションで値を指定して、正常性監視システムを制御します。</span><span class="sxs-lookup"><span data-stu-id="85af7-122">In most cases you will be able to use the ASP.NET health-monitoring types as implemented, and you will control the health-monitoring system by specifying values in the `healthMonitoring` configuration section.</span></span> <span data-ttu-id="85af7-123">また、正常性監視型から派生して、独自のカスタムイベントおよびプロバイダーを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="85af7-123">You can also derive from the health-monitoring types to create your own custom events and providers.</span></span> <span data-ttu-id="85af7-124"><xref:System.Web.Management.WebBaseEvent> クラスからの派生の例については、このトピックで説明する例を参照してください。</span><span class="sxs-lookup"><span data-stu-id="85af7-124">For an example of deriving from the <xref:System.Web.Management.WebBaseEvent> class, see the example provided in this topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85af7-125">このコード例には、構成ファイルの抜粋と、<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> イベントをカスタマイズする方法を示すコードの2つの部分があります。</span><span class="sxs-lookup"><span data-stu-id="85af7-125">This code example has two parts: a configuration-file excerpt, followed by code that shows how to customize the <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> event.</span></span>  
  
 <span data-ttu-id="85af7-126">次に、構成ファイルの `provider` と `eventMappings` のセクションの抜粋を示します。</span><span class="sxs-lookup"><span data-stu-id="85af7-126">This following is an excerpt of the configuration file's `provider` and `eventMappings` sections.</span></span> <span data-ttu-id="85af7-127">既定では、これらは既に設定されています。</span><span class="sxs-lookup"><span data-stu-id="85af7-127">They are already set by default.</span></span> <span data-ttu-id="85af7-128">必要なのは、`healthMonitoring` セクションの `rules` 要素の設定を指定することだけです。</span><span class="sxs-lookup"><span data-stu-id="85af7-128">The only thing you need to do is to provide the setup for the `rules` element in the `healthMonitoring` section.</span></span>  
  
```  
<healthMonitoring  
  enabled="true"  
  heartBeatInterval="0">  
  
    <providers>  
      // Configure the provider to process   
      // the health events.  
      <add name="EventLogProvider"  
         type="System.Web.Management.EventLogWebEventProvider,  
         System.Web,Version=2.0.3600.0,Culture=neutral,  
         PublicKeyToken=b03f5f7f11d50a3a"/>  
    </providers>  
  
    <eventMappings>  
       <clear />  
       // Configure the custom event   
       // to handle the audit events.   
        <add name="SampleWebAuthenticationSuccessAuditEvent"   
          type="SamplesAspNet.SampleWebAuthenticationSuccessAuditEvent,  
          webauthsuccessaudit, Version=1.0.1735.23144, Culture=neutral,   
          PublicKeyToken=dd969eda3f3f6ae1, processorArchitecture=MSIL" />  
  
     </eventMappings>  
     <rules>  
       <clear/>  
       // Establish the connection between custom event   
       // and the provider that must process it.  
      <add name="Log Authentication Success Audits"   
        eventName="SampleWebAuthenticationFailureAuditEvent"  
        provider="EventLogProvider"   
        profile="Custom" />\  
     </rules>  
  
</healthMonitoring>  
```  
  
 <span data-ttu-id="85af7-129">次のコードは、<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> イベントをカスタマイズする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="85af7-129">The following code shows how to customize the <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> event.</span></span>  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#1)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
    <related type="Article" href="https://msdn.microsoft.com/library/e003f224-70fe-4cd8-a71a-2dc81e2d7e4c"><span data-ttu-id="85af7-130">ASP.NET の正常性監視の概要</span><span class="sxs-lookup"><span data-stu-id="85af7-130">ASP.NET Health Monitoring Overview</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="85af7-131"><see cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="85af7-131">Initializes a new instance of the <see cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationSuccessAuditEvent : string * obj * int * string -&gt; System.Web.Management.WebAuthenticationSuccessAuditEvent" Usage="new System.Web.Management.WebAuthenticationSuccessAuditEvent (message, eventSource, eventCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="85af7-132">イベントの説明です。</span><span class="sxs-lookup"><span data-stu-id="85af7-132">The event description.</span></span></param>
        <param name="eventSource"><span data-ttu-id="85af7-133">イベントのソースであるオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="85af7-133">The object that is the source of the event.</span></span></param>
        <param name="eventCode"><span data-ttu-id="85af7-134">イベントに関連付けられているコード。</span><span class="sxs-lookup"><span data-stu-id="85af7-134">The code associated with the event.</span></span> <span data-ttu-id="85af7-135">カスタム イベントを実装する場合、イベント コードを <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> より大きくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="85af7-135">When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</span></span></param>
        <param name="nameToAuthenticate"><span data-ttu-id="85af7-136">認証済みユーザーの名前。</span><span class="sxs-lookup"><span data-stu-id="85af7-136">The name of the authenticated user.</span></span></param>
        <summary><span data-ttu-id="85af7-137">指定されたパラメーターを使用して <see cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" /> クラスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="85af7-137">Initializes the <see cref="T:System.Web.Management.WebAuthenticationSuccessAuditEvent" /> class using the supplied parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85af7-138">このコンストラクターは、ASP.NET health 監視システムによって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="85af7-138">This constructor is used internally by the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="85af7-139">このクラスを使用して <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> オブジェクトをインスタンス化することはありませんが、このクラスから継承する独自のイベントの種類を実装する場合は、このコンストラクターを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="85af7-139">You will never use it to instantiate a <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85af7-140"><xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> コンストラクターは、コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="85af7-140">The <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> constructor is not intended to be used directly from your code.</span></span> <span data-ttu-id="85af7-141">ASP.NET によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="85af7-141">It is called by ASP.NET.</span></span> <span data-ttu-id="85af7-142"><xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> クラスから派生する場合は、<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> コンストラクターを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="85af7-142">You can call the <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> constructor when deriving from the <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85af7-143">次のコード例は、このコンストラクターをカスタマイズする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="85af7-143">The following code example shows how to customize this constructor.</span></span>  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#2)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebAuthenticationSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode, string nameToAuthenticate);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode, string nameToAuthenticate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebAuthenticationSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer, nameToAuthenticate As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebAuthenticationSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode, System::String ^ nameToAuthenticate);" />
      <MemberSignature Language="F#" Value="new System.Web.Management.WebAuthenticationSuccessAuditEvent : string * obj * int * int * string -&gt; System.Web.Management.WebAuthenticationSuccessAuditEvent" Usage="new System.Web.Management.WebAuthenticationSuccessAuditEvent (message, eventSource, eventCode, eventDetailCode, nameToAuthenticate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
        <Parameter Name="nameToAuthenticate" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="85af7-144">イベントの説明です。</span><span class="sxs-lookup"><span data-stu-id="85af7-144">The event description.</span></span></param>
        <param name="eventSource"><span data-ttu-id="85af7-145">イベントのソースであるオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="85af7-145">The object that is the source of the event.</span></span></param>
        <param name="eventCode"><span data-ttu-id="85af7-146">イベントに関連付けられているコード。</span><span class="sxs-lookup"><span data-stu-id="85af7-146">The code associated with the event.</span></span> <span data-ttu-id="85af7-147">カスタム イベントを実装する場合、イベント コードを <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" /> より大きくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="85af7-147">When you implement a custom event, the event code must be greater than <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</span></span></param>
        <param name="eventDetailCode"><span data-ttu-id="85af7-148">イベントの詳細な識別子を指定する <see cref="T:System.Web.Management.WebEventCodes" /> 値。</span><span class="sxs-lookup"><span data-stu-id="85af7-148">The <see cref="T:System.Web.Management.WebEventCodes" /> value that specifies the detailed identifier for the event.</span></span></param>
        <param name="nameToAuthenticate"><span data-ttu-id="85af7-149">認証済みユーザーの名前。</span><span class="sxs-lookup"><span data-stu-id="85af7-149">The name of the authenticated user.</span></span></param>
        <summary><span data-ttu-id="85af7-150">指定されたパラメーターを使用して <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> クラスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="85af7-150">Initializes the <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> class using the supplied parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85af7-151">このコンストラクターは、ASP.NET health 監視システムによって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="85af7-151">This constructor is used internally by the ASP.NET health-monitoring system.</span></span> <span data-ttu-id="85af7-152">このクラスを使用して <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> オブジェクトをインスタンス化することはありませんが、このクラスから継承する独自のイベントの種類を実装する場合は、このコンストラクターを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="85af7-152">You will never use it to instantiate a <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> object, but you can call this constructor when implementing your own event type that inherits from this class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85af7-153"><xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> コンストラクターは、コードから直接使用するためのものではありません。</span><span class="sxs-lookup"><span data-stu-id="85af7-153">The <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> constructor is not intended to be used directly from your code.</span></span> <span data-ttu-id="85af7-154">ASP.NET によって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="85af7-154">It is called by ASP.NET.</span></span> <span data-ttu-id="85af7-155"><xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> クラスから派生する場合は、<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> コンストラクターを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="85af7-155">You can call the <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.%23ctor%2A> constructor when deriving from the <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85af7-156">次のコード例は、このコンストラクターをカスタマイズする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="85af7-156">The following code example shows how to customize this constructor.</span></span>  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameToAuthenticate">
      <MemberSignature Language="C#" Value="public string NameToAuthenticate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameToAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameToAuthenticate As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameToAuthenticate { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameToAuthenticate : string" Usage="System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85af7-157">認証済みユーザーの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="85af7-157">Gets the name of the authenticated user.</span></span></summary>
        <value><span data-ttu-id="85af7-158">認証済みユーザーの名前。</span><span class="sxs-lookup"><span data-stu-id="85af7-158">The name of the authenticated user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85af7-159">成功の監査には、認証されたユーザーの名前だけが含まれます。</span><span class="sxs-lookup"><span data-stu-id="85af7-159">Only the success audits include the name of the authenticated user.</span></span> <span data-ttu-id="85af7-160">失敗の監査には、ユーザー名は含まれません。これは、通常、暗号化解除または検証に失敗した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="85af7-160">The failure audits do not include the user name, since they typically result from failed decryption or validation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85af7-161">次のコード例は、<xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="85af7-161">The following code example shows how to use the <xref:System.Web.Management.WebAuthenticationSuccessAuditEvent.NameToAuthenticate%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/CS/WebAuthenticationSuccessAuditEvent.cs#3)]
 [!code-vb[System.Web.Management.WebAuthenticationSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.management.WebAuthenticationSuccessAuditEvent/VB/WebAuthenticationSuccessAuditEvent.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebAuthenticationFailureAuditEvent" />
        <altmember cref="T:System.Web.Management.WebEventCodes" />
      </Docs>
    </Member>
  </Members>
</Type>
