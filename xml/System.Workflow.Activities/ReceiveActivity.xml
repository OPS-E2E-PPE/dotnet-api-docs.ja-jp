<Type Name="ReceiveActivity" FullName="System.Workflow.Activities.ReceiveActivity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2faaf5684bb46c76cf86a609ac21b97196f9605" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78808247" /></Metadata><TypeSignature Language="C#" Value="public sealed class ReceiveActivity : System.Workflow.Activities.SequenceActivity, System.Workflow.Activities.IEventActivity, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ReceiveActivity extends System.Workflow.Activities.SequenceActivity implements class System.Workflow.Activities.IEventActivity, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Activities.ReceiveActivity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReceiveActivity&#xA;Inherits SequenceActivity&#xA;Implements IActivityEventListener(Of QueueEventArgs), IEventActivity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReceiveActivity sealed : System::Workflow::Activities::SequenceActivity, System::Workflow::Activities::IEventActivity, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;" />
  <TypeSignature Language="F#" Value="type ReceiveActivity = class&#xA;    inherit SequenceActivity&#xA;    interface IEventActivity&#xA;    interface IActivityEventListener&lt;QueueEventArgs&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Activities.SequenceActivity</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Workflow.Activities.IEventActivity</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer(typeof(System.Workflow.Activities.ReceiveActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ReceiveActivity), "Design.Resources.ReceiveActivity.png")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ReceiveActivityValidator))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="abaad-101">Windows Communication Foundation (WCF) サービス コントラクトによって定義された操作を実装するサービス アクティビティ。</span><span class="sxs-lookup"><span data-stu-id="abaad-101">Service activity that implements an operation defined by a Windows Communication Foundation (WCF) service contract.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="abaad-102"><xref:System.Workflow.Activities.ReceiveActivity> アクティビティは、ワークフローが WCF サービスコントラクトで定義されている操作を実装する場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-102">The <xref:System.Workflow.Activities.ReceiveActivity> activity is used when a workflow implements an operation defined in a WCF service contract.</span></span> <span data-ttu-id="abaad-103"><xref:System.Workflow.Activities.ReceiveActivity> は既に定義されたサービス コントラクトの操作を実装できるか、またはワークフロー自体内のサービス コントラクトおよび操作を定義できます。</span><span class="sxs-lookup"><span data-stu-id="abaad-103">The <xref:System.Workflow.Activities.ReceiveActivity> can implement an operation from an already defined service contract or can define the service contract and operation within the workflow itself.</span></span> <span data-ttu-id="abaad-104">後者はワークフロー優先コントラクトと呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="abaad-104">The latter is known as a workflow-first contract.</span></span>  
  
 <span data-ttu-id="abaad-105"><xref:System.Workflow.Activities.ReceiveActivity> アクティビティでは、定義済みメッセージの交換パターンのセットをサポートします。</span><span class="sxs-lookup"><span data-stu-id="abaad-105">The <xref:System.Workflow.Activities.ReceiveActivity> activity supports a set of predefined message exchange patterns.</span></span> <span data-ttu-id="abaad-106">次のようなパターンが含まれます。</span><span class="sxs-lookup"><span data-stu-id="abaad-106">These patterns include:</span></span>  
  
-   <span data-ttu-id="abaad-107">一方向の受信</span><span class="sxs-lookup"><span data-stu-id="abaad-107">One-way receive</span></span>  
  
     <span data-ttu-id="abaad-108">メッセージを送信するクライアントは、応答を送信するサービスを想定していません。</span><span class="sxs-lookup"><span data-stu-id="abaad-108">The client that sends the message does not expect the service to send a response.</span></span> <span data-ttu-id="abaad-109">コントラクト操作には void 型の戻り値が必要です。</span><span class="sxs-lookup"><span data-stu-id="abaad-109">The contract operation should have a void return type.</span></span>  
  
-   <span data-ttu-id="abaad-110">要求の受信 - 応答の送信</span><span class="sxs-lookup"><span data-stu-id="abaad-110">Receive request - Send response</span></span>  
  
     <span data-ttu-id="abaad-111">メッセージは <xref:System.Workflow.Activities.ReceiveActivity> アクティビティによって受信および処理されてから、応答はクライアントに送信されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-111">After a message is received and processed by the <xref:System.Workflow.Activities.ReceiveActivity> activity, a response is sent back to the client.</span></span> <span data-ttu-id="abaad-112">コントラクト操作に void 型の戻り値があると、受信確認が送信アクティビティに返信されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-112">When the contract operation has a void return type, an acknowledgement is sent back to the send activity.</span></span>  
  
-   <span data-ttu-id="abaad-113">要求の受信 - エラーの送信</span><span class="sxs-lookup"><span data-stu-id="abaad-113">Receive request - Send fault</span></span>  
  
     <span data-ttu-id="abaad-114">メッセージは <xref:System.Workflow.Activities.ReceiveActivity> アクティビティによって受信および処理されてから、応答またはエラーはクライアントに送信されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-114">After a message is received and processed by the <xref:System.Workflow.Activities.ReceiveActivity> activity, a response or a fault is sent back to the client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abaad-115">永続化が正しく実行され、一時的なメッセージが永続化されないようにするには、<xref:System.Workflow.Activities.ReceiveActivity> の子アクティビティが単独で永続化されないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="abaad-115">To ensure that persistence performs properly and does not persist transient messages, make sure that child activities of the <xref:System.Workflow.Activities.ReceiveActivity> do not persist by themselves.</span></span> <span data-ttu-id="abaad-116">たとえば、`UnloadOnIdle` を `true` に設定して永続化プロバイダーが作成されたとき、子アクティビティがアイドル状態になると、これが発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="abaad-116">This can occur if the child activities go idle when a persistence provider was created with `UnloadOnIdle` set to `true`, for instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abaad-117">このアクティビティは [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]の一部です。</span><span class="sxs-lookup"><span data-stu-id="abaad-117">This activity is part of [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)].</span></span> <span data-ttu-id="abaad-118">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]の同等のアクティビティについては、「<xref:System.ServiceModel.Activities.Receive>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="abaad-118">For the equivalent activity in [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], see <xref:System.ServiceModel.Activities.Receive>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Workflow.Activities.SendActivity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="abaad-119"><see cref="T:System.Workflow.Activities.ReceiveActivity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="abaad-119">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-120"><xref:System.Workflow.Activities.ReceiveActivity> コンストラクターは通常、ワークフロー デザイナーで作成されたコード側ファイルで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-120">The <xref:System.Workflow.Activities.ReceiveActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReceiveActivity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReceiveActivity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abaad-121"><see cref="T:System.Workflow.Activities.ReceiveActivity" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="abaad-121">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-122"><xref:System.Workflow.Activities.ReceiveActivity> コンストラクターは通常、ワークフロー デザイナーで作成されたコード側ファイルで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-122">The <xref:System.Workflow.Activities.ReceiveActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-123">次の例では、<xref:System.Workflow.Activities.ReceiveActivity> クラスの新しいインスタンスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="abaad-123">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.</span></span>  <span data-ttu-id="abaad-124">このコードは、`Conversations` ファイルの `ShipperWorkflow.designer.cs` SDK サンプルを作成し直したものです。</span><span class="sxs-lookup"><span data-stu-id="abaad-124">This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.</span></span>  
  
 [!code-csharp[ReceiveActivity#11](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReceiveActivity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReceiveActivity(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Workflow.Activities.ReceiveActivity : string -&gt; System.Workflow.Activities.ReceiveActivity" Usage="new System.Workflow.Activities.ReceiveActivity name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="abaad-125">アクティビティ インスタンスに割り当てられる名前。</span><span class="sxs-lookup"><span data-stu-id="abaad-125">The name to assign to the activity instance.</span></span></param>
        <summary><span data-ttu-id="abaad-126"><see cref="T:System.Workflow.Activities.ReceiveActivity" /> プロパティを初期化して <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="abaad-126">Initializes a new instance of the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> class, initializing its <see cref="P:System.Workflow.ComponentModel.Activity.Name" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-127"><xref:System.Workflow.Activities.ReceiveActivity> コンストラクターは通常、ワークフロー デザイナーで作成されたコード側ファイルで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-127">The <xref:System.Workflow.Activities.ReceiveActivity> constructor is typically invoked in the code-beside file created by the workflow designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-128">次の例では、<xref:System.Workflow.Activities.ReceiveActivity> クラスの新しいインスタンスを作成する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="abaad-128">The following example shows how to create a new instance of the <xref:System.Workflow.Activities.ReceiveActivity> class.</span></span>  
  
 [!code-csharp[ReceiveActivity#12](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Cancel(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Cancel (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Cancel(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Cancel : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="receiveActivity.Cancel executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanCreateInstance">
      <MemberSignature Language="C#" Value="public bool CanCreateInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanCreateInstance" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.CanCreateInstance" />
      <MemberSignature Language="VB.NET" Value="Public Property CanCreateInstance As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanCreateInstance { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanCreateInstance : bool with get, set" Usage="System.Workflow.Activities.ReceiveActivity.CanCreateInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abaad-129">操作によって新しいワークフロー サービス インスタンスが作成されるかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="abaad-129">Gets or sets whether the operation causes a new workflow service instance to be created.</span></span></summary>
        <value><span data-ttu-id="abaad-130">新しいワークフロー インスタンスが作成される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="abaad-130"><see langword="true" /> if a new workflow instance is created; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-131">メッセージ交換の一部ではないサービス クライアントによって呼び出された場合、<xref:System.Workflow.Activities.ReceiveActivity> が <xref:System.Workflow.Activities.ReceiveActivity.CanCreateInstance%2A> に設定された `true` アクティビティはサービス操作を表し、これによってサービス ワークフローの新しいインスタンスが作成されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-131">A <xref:System.Workflow.Activities.ReceiveActivity> activity that has <xref:System.Workflow.Activities.ReceiveActivity.CanCreateInstance%2A> set to `true` represents a service operation that, when invoked by a service client without being part of a conversation, causes a new instance of the service workflow to be created.</span></span>  
  
 <span data-ttu-id="abaad-132"><xref:System.Workflow.Activities.ReceiveActivity> が <xref:System.Workflow.Activities.ReceiveActivity.CanCreateInstance%2A> に設定された `true` アクティビティを持たないサービス ワークフローは、サービス操作呼び出しを使用しているクライアントによってインスタンス化されません。</span><span class="sxs-lookup"><span data-stu-id="abaad-132">Service workflows that do not have a <xref:System.Workflow.Activities.ReceiveActivity> activity with <xref:System.Workflow.Activities.ReceiveActivity.CanCreateInstance%2A> set to `true` cannot be instantiated by a client using a service operation invocation.</span></span> <span data-ttu-id="abaad-133">そのようなワークフローを、関連付けられた <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> オブジェクトの <xref:System.Workflow.Runtime.WorkflowRuntime> メソッドを使用して作成することができます。</span><span class="sxs-lookup"><span data-stu-id="abaad-133">Such workflows can be created using the <xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A> method of the associated <xref:System.Workflow.Runtime.WorkflowRuntime> object.</span></span>  
  
 <span data-ttu-id="abaad-134">このプロパティの既定値は、`false` です。</span><span class="sxs-lookup"><span data-stu-id="abaad-134">The default value for this property is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-135">`CanCreateInstance` プロパティを設定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="abaad-135">The following example shows how to set the `CanCreateInstance` property.</span></span> <span data-ttu-id="abaad-136">このコードは、`Conversations` ファイルの `ShipperWorkflow.designer.cs` SDK サンプルを作成し直したものです。</span><span class="sxs-lookup"><span data-stu-id="abaad-136">This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.</span></span>  
  
 [!code-csharp[ReceiveActivity#0](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Context { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.ReceiveActivity.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abaad-137">このアクティビティのコンテキスト情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="abaad-137">Gets the context information for this activity.</span></span></summary>
        <value><span data-ttu-id="abaad-138">このアクティビティのコンテキスト情報を格納している <see cref="T:System.Collections.Generic.IDictionary`2" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="abaad-138">A <see cref="T:System.Collections.Generic.IDictionary`2" /> object that contains context information for this activity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-139">コンテキスト情報は、相関関係の識別など、通信しているクライアントとサービス間の通信に使用されています。</span><span class="sxs-lookup"><span data-stu-id="abaad-139">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-140">次の例は、`Context` プロパティにアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="abaad-140">The following example shows how to access the `Context` property.</span></span>  
  
 [!code-csharp[ReceiveActivity#17](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextToken">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.ContextToken ContextToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.ContextToken ContextToken" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.ContextToken" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextToken As ContextToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::ContextToken ^ ContextToken { System::Workflow::Activities::ContextToken ^ get(); void set(System::Workflow::Activities::ContextToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextToken : System.Workflow.Activities.ContextToken with get, set" Usage="System.Workflow.Activities.ReceiveActivity.ContextToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Workflow.Activities.ContextTokenTypeConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.ContextToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abaad-141">コンテキストを指定するのに使用できるトークンを表します。このコンテキストは、アクティビティが通信している <see cref="T:System.Workflow.Activities.ReceiveActivity" /> アクティビティとクライアント間の交換を関連付けるために使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="abaad-141">Represents a token that can be used to specify the context that should be used to correlate the exchange between a <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity and the client that the activity is communicating with.</span></span></summary>
        <value><span data-ttu-id="abaad-142">関連付けに使用できる <see cref="T:System.Workflow.Activities.ContextToken" />。</span><span class="sxs-lookup"><span data-stu-id="abaad-142">A <see cref="T:System.Workflow.Activities.ContextToken" /> that can be used for correlation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-143">各 <xref:System.Workflow.Activities.ReceiveActivity.ContextToken%2A> は、所有者アクティビティのスコープ内で定義されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-143">Each <xref:System.Workflow.Activities.ReceiveActivity.ContextToken%2A> is defined within the scope of an owner activity.</span></span> <span data-ttu-id="abaad-144">ユーザーは、同じ名前ではあるが異なる所有者のスコープで 2 つの個々のコンテキスト トークンをモデル化できます。</span><span class="sxs-lookup"><span data-stu-id="abaad-144">Users can model two distinct context tokens with the same name but different owner scopes.</span></span> <span data-ttu-id="abaad-145">これらのコンテキスト トークンに関連付けられているコンテキストの値は、実行時には異なります。</span><span class="sxs-lookup"><span data-stu-id="abaad-145">The value of the contexts associated with these context tokens are different at runtime.</span></span>  
  
 <span data-ttu-id="abaad-146">既定では、各ワークフローには、ルート アクティビティ レベルでスコープされた、暗黙的なルート コンテキスト トークンがあります。</span><span class="sxs-lookup"><span data-stu-id="abaad-146">By default, each workflow has an implicit root context token, scoped at the root activity level.</span></span> <span data-ttu-id="abaad-147">ルート コンテキスト トークンの名前が '(RootContext)' で、<xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A> が `null` です。</span><span class="sxs-lookup"><span data-stu-id="abaad-147">The name of the root context token is '(RootContext)' and the <xref:System.Workflow.Activities.ContextToken.OwnerActivityName%2A> is `null`.</span></span> <span data-ttu-id="abaad-148"><xref:System.Workflow.Activities.ReceiveActivity> アクティビティが関連付けられた <xref:System.Workflow.Activities.ReceiveActivity.ContextToken%2A> を持っていない場合は、ルート コンテキスト トークンが使用されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-148">If a <xref:System.Workflow.Activities.ReceiveActivity> activity does not have a <xref:System.Workflow.Activities.ReceiveActivity.ContextToken%2A> associated with it, the root context token is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-149">`ContextToken` プロパティへのアクセス方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="abaad-149">The following code example shows how to access the `ContextToken` property.</span></span> <span data-ttu-id="abaad-150">このコード例は、`Conversations` ファイルの `SupplierWorkflow.Designer.cs` SDK サンプルを作成し直したものです。</span><span class="sxs-lookup"><span data-stu-id="abaad-150">This code example is adapted from the `Conversations` SDK sample, from the `SupplierWorkflow.Designer.cs` file.</span></span>  
  
 [!code-csharp[ReceiveActivity#1](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="receiveActivity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus Execute(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Execute (executionContext As ActivityExecutionContext) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus Execute(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="receiveActivity.Execute executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultMessage">
      <MemberSignature Language="C#" Value="public System.ServiceModel.FaultException FaultMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.FaultException FaultMessage" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.FaultMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property FaultMessage As FaultException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::FaultException ^ FaultMessage { System::ServiceModel::FaultException ^ get(); void set(System::ServiceModel::FaultException ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FaultMessage : System.ServiceModel.FaultException with get, set" Usage="System.Workflow.Activities.ReceiveActivity.FaultMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.FaultException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abaad-151">受信アクティビティが実行を完了する場合に返される例外。</span><span class="sxs-lookup"><span data-stu-id="abaad-151">The exception that is returned when a receive activity completes execution.</span></span></summary>
        <value><span data-ttu-id="abaad-152">エラー メッセージ テキストおよび詳細が含まれる <see cref="T:System.ServiceModel.FaultException" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="abaad-152">A <see cref="T:System.ServiceModel.FaultException" /> object that contains the fault message text and details.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-153"><xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> プロパティが型 <xref:System.ServiceModel.FaultException> のインスタンスに設定される場合は、エラーは完了時にクライアントに返されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-153">If the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property is set to an instance of type <xref:System.ServiceModel.FaultException>, the fault is returned to the client upon completion.</span></span>  
  
 <span data-ttu-id="abaad-154">例外がアクティビティ実行時にスローされる場合は、<xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> プロパティが設定されていれば、指定されたエラーがクライアントに返されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-154">If an exception is thrown during the activity execution and the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property is set, then the specified fault is returned to the client.</span></span> <span data-ttu-id="abaad-155">アクティビティの実行時に例外がスローされ、<xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> プロパティが設定されていて、関連付けられている操作に <xref:System.ServiceModel.FaultContractAttribute> プロパティに一致するエラー型を指定する <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> 属性がある場合、チャネルはエラーにならず、クライアントは引き続きサーバーと通信できます。</span><span class="sxs-lookup"><span data-stu-id="abaad-155">If an exception is thrown during the activity execution and the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property is set, and the associated operation has a <xref:System.ServiceModel.FaultContractAttribute> attribute that specifies a fault type that matches that of the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property, then the channel is not faulted and the client can still communicate to the server.</span></span> <span data-ttu-id="abaad-156"><xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> プロパティが設定されていない場合は、スローされた例外がクライアントにエラーとして返されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-156">If the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property is not set, the thrown exception is returned as a fault to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-157">次のコード サンプルは、`FaultMessage` プロパティへのアクセス方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="abaad-157">The following code sample shows how to access the `FaultMessage` property.</span></span>  
  
 [!code-csharp[ReceiveActivity#2](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FaultMessageProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty FaultMessageProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty FaultMessageProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReceiveActivity.FaultMessageProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FaultMessageProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ FaultMessageProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FaultMessageProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.ReceiveActivity.FaultMessageProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abaad-158"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> プロパティをターゲットとする <see cref="P:System.Workflow.Activities.ReceiveActivity.FaultMessage" /> を表します。</span><span class="sxs-lookup"><span data-stu-id="abaad-158">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.ReceiveActivity.FaultMessage" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-159">この依存プロパティを使用すると、受信アクティビティの <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> プロパティと型 <xref:System.ServiceModel.FaultException> のパブリック ワークフロー プロパティおよびフィールド間または同じ型の別のアクティビティのパブリック プロパティおよびフィールド間のバインドを設定できます。</span><span class="sxs-lookup"><span data-stu-id="abaad-159">This dependency property can be used to set up a binding between the receive activity's <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property and a public workflow property/field of type <xref:System.ServiceModel.FaultException> or another activity's public property/field of the same type.</span></span>  
  
 <span data-ttu-id="abaad-160">この依存プロパティを使用すると、<xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> アクティビティの <xref:System.Workflow.Activities.ReceiveActivity> プロパティで関連付けられた値を設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="abaad-160">This dependency property can also be used to set the value associated with the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property of a <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span>  
  
 <span data-ttu-id="abaad-161">この依存プロパティを使用すると、<xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> アクティビティの <xref:System.Workflow.Activities.ReceiveActivity> プロパティで関連付けられたバインドまたは値を取得することもできます。</span><span class="sxs-lookup"><span data-stu-id="abaad-161">This dependency property can also be used to get the binding or value associated with the <xref:System.Workflow.Activities.ReceiveActivity.FaultMessage%2A> property of the <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetContext">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="abaad-162">クライアントとワークフロー サービス間の通信に使用されるコンテキスト情報を含むディクショナリを返します。</span><span class="sxs-lookup"><span data-stu-id="abaad-162">Returns a dictionary that contains the context information used for communication between a client and the workflow service.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-163">コンテキスト情報は、相関関係の識別など、通信しているクライアントとサービス間の通信に使用されています。</span><span class="sxs-lookup"><span data-stu-id="abaad-163">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, System.Workflow.Activities.ContextToken contextToken);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, class System.Workflow.Activities.ContextToken contextToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.ContextToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetContext (activity As Activity, contextToken As ContextToken) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::Workflow::Activities::ContextToken ^ contextToken);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * System.Workflow.Activities.ContextToken -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.ReceiveActivity.GetContext (activity, contextToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="contextToken" Type="System.Workflow.Activities.ContextToken" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="abaad-164">コンテキスト情報が要求されるアクティビティ インスタンス。</span><span class="sxs-lookup"><span data-stu-id="abaad-164">Activity instance that context information is requested for.</span></span></param>
        <param name="contextToken"><span data-ttu-id="abaad-165">アクティビティに使用されるコンテキスト トークン。</span><span class="sxs-lookup"><span data-stu-id="abaad-165">The context token used by the activity.</span></span></param>
        <summary><span data-ttu-id="abaad-166">アクティビティ インスタンスおよびコンテキスト トークンを指定したコンテキスト情報を返す静的メソッド。</span><span class="sxs-lookup"><span data-stu-id="abaad-166">Static method that returns context information given an activity instance and context token.</span></span></summary>
        <returns><span data-ttu-id="abaad-167"><see cref="T:System.Xml.XmlQualifiedName" /> キーとそれに関連付けられた <see cref="T:System.String" /> 値を含むディクショナリ ベースのコレクション。</span><span class="sxs-lookup"><span data-stu-id="abaad-167">A dictionary based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-168">コンテキスト情報は、相関関係の識別など、通信しているクライアントとサービス間の通信に使用されています。</span><span class="sxs-lookup"><span data-stu-id="abaad-168">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-169">`GetContext` メソッドを使用する方法の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="abaad-169">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[ReceiveActivity#13](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext (System.Workflow.ComponentModel.Activity activity, string contextName, string ownerActivityName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext(class System.Workflow.ComponentModel.Activity activity, string contextName, string ownerActivityName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.GetContext(System.Workflow.ComponentModel.Activity,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetContext (activity As Activity, contextName As String, ownerActivityName As String) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext(System::Workflow::ComponentModel::Activity ^ activity, System::String ^ contextName, System::String ^ ownerActivityName);" />
      <MemberSignature Language="F#" Value="static member GetContext : System.Workflow.ComponentModel.Activity * string * string -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.ReceiveActivity.GetContext (activity, contextName, ownerActivityName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="contextName" Type="System.String" />
        <Parameter Name="ownerActivityName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="abaad-170">コンテキスト情報が要求されるアクティビティ インスタンス。</span><span class="sxs-lookup"><span data-stu-id="abaad-170">Activity instance that context information is requested for.</span></span></param>
        <param name="contextName"><span data-ttu-id="abaad-171">アクティビティに使用されるコンテキスト トークンの名前。</span><span class="sxs-lookup"><span data-stu-id="abaad-171">Name of the context token used by the activity.</span></span></param>
        <param name="ownerActivityName"><span data-ttu-id="abaad-172">所有アクティビティの名前。</span><span class="sxs-lookup"><span data-stu-id="abaad-172">The name of the owning activity name.</span></span></param>
        <summary><span data-ttu-id="abaad-173">アクティビティ インスタンスおよびコンテキスト トークンを指定したコンテキスト情報を返す静的メソッド。</span><span class="sxs-lookup"><span data-stu-id="abaad-173">Static method that returns context information given an activity instance and context token.</span></span></summary>
        <returns><span data-ttu-id="abaad-174"><see cref="T:System.Xml.XmlQualifiedName" /> キーと関連付けられた <see cref="T:System.String" /> 値を含むディクショナリベースのコレクション。</span><span class="sxs-lookup"><span data-stu-id="abaad-174">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-175">コンテキスト情報は、相関関係の識別など、通信しているクライアントとサービス間の通信に使用されています。</span><span class="sxs-lookup"><span data-stu-id="abaad-175">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-176">`GetContext` メソッドを使用する方法の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="abaad-176">The following example shows how to use the `GetContext` method.</span></span>  
  
 [!code-csharp[ReceiveActivity#15](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRootContext">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,string&gt; GetRootContext (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetRootContext(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.GetRootContext(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRootContext (activity As Activity) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetRootContext(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetRootContext : System.Workflow.ComponentModel.Activity -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Workflow.Activities.ReceiveActivity.GetRootContext activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="abaad-177">子アクティビティ インスタンス。</span><span class="sxs-lookup"><span data-stu-id="abaad-177">The child activity instance.</span></span></param>
        <summary><span data-ttu-id="abaad-178">指定したアクティビティ インスタンスに関連付けられたルート コンテキストのコンテキスト情報を返す静的メソッド。</span><span class="sxs-lookup"><span data-stu-id="abaad-178">Static method that returns context information for the root context associated with a given activity instance.</span></span> <span data-ttu-id="abaad-179">コンテキスト情報は、ホスト アプリケーションとワークフロー サービスの間の通信に使用されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-179">Context information is used for communication between a host application and the workflow service.</span></span></summary>
        <returns><span data-ttu-id="abaad-180">ルート コンテキストのコンテキスト情報を表す <see cref="T:System.Xml.XmlQualifiedName" /> キーと関連付けられた <see cref="T:System.String" /> 値を含むディクショナリ ベースのコレクション。</span><span class="sxs-lookup"><span data-stu-id="abaad-180">A dictionary-based collection that contains <see cref="T:System.Xml.XmlQualifiedName" /> keys and their associated <see cref="T:System.String" /> values that represent context information for a root context.</span></span> <span data-ttu-id="abaad-181">カスタム インスタンス作成ロジックがない限り、新しいインスタンスの作成をトリガーするメッセージはルート コンテキストで受信されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-181">Barring custom instance creation logic, the message that triggers creation of a new instance is received in the root context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-182">コンテキスト情報は、相関関係の識別など、通信しているクライアントとサービス間の通信に使用されています。</span><span class="sxs-lookup"><span data-stu-id="abaad-182">Context information is used for communication between the client and the service it is communicating with and includes such things as identification for correlation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-183">`GetRootContext` メソッドを使用する方法の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="abaad-183">The following example shows how to use the `GetRootContext` method.</span></span>  
  
 [!code-csharp[ReceiveActivity#16](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowServiceAttributes">
      <MemberSignature Language="C#" Value="public static object GetWorkflowServiceAttributes (object dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetWorkflowServiceAttributes(object dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWorkflowServiceAttributes (dependencyObject As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetWorkflowServiceAttributes(System::Object ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetWorkflowServiceAttributes : obj -&gt; obj" Usage="System.Workflow.Activities.ReceiveActivity.GetWorkflowServiceAttributes dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="abaad-184">サービス属性を取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="abaad-184">The object to retrieve the service attributes from.</span></span></param>
        <summary><span data-ttu-id="abaad-185"><see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> アクティビティで実装されたサービスの <see cref="T:System.Workflow.Activities.ReceiveActivity" /> 属性を返します。</span><span class="sxs-lookup"><span data-stu-id="abaad-185">Returns the <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> attributes for the service implemented by the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity.</span></span> <span data-ttu-id="abaad-186">これらの属性には <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />、<see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />、<see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults" />、および <see cref="T:System.Workflow.Activities.ReceiveActivity" /> アクティビティから返されるエラーにある例外の詳細を含むかどうか、などの項目が含まれます。</span><span class="sxs-lookup"><span data-stu-id="abaad-186">These attributes include items like the <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />, the <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />, the <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults" />, and whether to include exception details in any faults that are returned from the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity.</span></span></summary>
        <returns><span data-ttu-id="abaad-187">サービス属性データを含む <see cref="T:System.Object" /> オブジェクトを表す <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="abaad-187">A <see cref="T:System.Object" /> that represents a <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> object that contains service attribute data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-188"><xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> プロパティは、<xref:System.Workflow.Activities.ReceiveActivity> アクティビティで定義済みの割り当てられた依存プロパティです。</span><span class="sxs-lookup"><span data-stu-id="abaad-188">The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span> <span data-ttu-id="abaad-189">この依存プロパティは、デザイン時に <xref:System.Workflow.Activities.ReceiveActivity> メソッドの呼び出しを使用した <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> アクティビティを含むルート ワークフローに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="abaad-189">This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time.</span></span>  
  
 <span data-ttu-id="abaad-190"><xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> プロパティは、開始時にワークフロー サービスに適用されているサービスレベル動作の属性を定義するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-190">The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is used for defining service-level behavior attributes that are applied to the workflow service when it starts.</span></span> <span data-ttu-id="abaad-191">これらは実行時に変更できません。</span><span class="sxs-lookup"><span data-stu-id="abaad-191">These cannot be modified at runtime.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abaad-192">現在のワークフローが <xref:System.Workflow.Activities.InvokeWorkflowActivity> アクティビティを使用して別のワークフローを開始する場合、呼び出されたワークフローは呼び出しているワークフローのサービス属性を継承しません。</span><span class="sxs-lookup"><span data-stu-id="abaad-192">If the current workflow starts another workflow using an <xref:System.Workflow.Activities.InvokeWorkflowActivity> activity, the invoked workflow does not inherit the invoking workflow's service attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abaad-193">カスタム アクティビティに対してサービス属性が設定されており、そのアクティビティがワークフローに含まれる場合は、そのサービス属性が使用されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-193">If service attributes are set for a custom activity and that activity is included in a workflow, those service attributes are used.</span></span> <span data-ttu-id="abaad-194">サービス属性は、カスタム アクティビティ自体がワークフローとして実行される場合は、カスタム アクティビティのみに使用されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-194">Service attributes are only used for custom activities if the custom activity itself is run as a workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-195">`GetWorkflowServiceAttributes` メソッドを使用する方法の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="abaad-195">The following example shows how to use the `GetWorkflowServiceAttributes` method.</span></span>  
  
 [!code-csharp[ReceiveActivity#5](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleFault">
      <MemberSignature Language="C#" Value="protected override System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HandleFault (executionContext As ActivityExecutionContext, exception As Exception) As ActivityExecutionStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Workflow::ComponentModel::ActivityExecutionStatus HandleFault(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="override this.HandleFault : System.Workflow.ComponentModel.ActivityExecutionContext * Exception -&gt; System.Workflow.ComponentModel.ActivityExecutionStatus" Usage="receiveActivity.HandleFault (executionContext, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityExecutionStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <param name="exception">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize (IServiceProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize(class System.IServiceProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.Initialize(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize (provider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize(IServiceProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.Initialize : IServiceProvider -&gt; unit" Usage="receiveActivity.Initialize provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected override void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeProperties();" />
      <MemberSignature Language="F#" Value="override this.InitializeProperties : unit -&gt; unit" Usage="receiveActivity.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSequenceComplete">
      <MemberSignature Language="C#" Value="protected override void OnSequenceComplete (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSequenceComplete(class System.Workflow.ComponentModel.ActivityExecutionContext executionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSequenceComplete (executionContext As ActivityExecutionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSequenceComplete(System::Workflow::ComponentModel::ActivityExecutionContext ^ executionContext);" />
      <MemberSignature Language="F#" Value="override this.OnSequenceComplete : System.Workflow.ComponentModel.ActivityExecutionContext -&gt; unit" Usage="receiveActivity.OnSequenceComplete executionContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
      </Parameters>
      <Docs>
        <param name="executionContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationValidation">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Workflow.Activities.OperationValidationEventArgs&gt; OperationValidation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Workflow.Activities.OperationValidationEventArgs&gt; OperationValidation" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.Activities.ReceiveActivity.OperationValidation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event OperationValidation As EventHandler(Of OperationValidationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Workflow::Activities::OperationValidationEventArgs ^&gt; ^ OperationValidation;" />
      <MemberSignature Language="F#" Value="member this.OperationValidation : EventHandler&lt;System.Workflow.Activities.OperationValidationEventArgs&gt; " Usage="member this.OperationValidation : System.EventHandler&lt;System.Workflow.Activities.OperationValidationEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ServiceModel.SRCategory("Handlers")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Workflow.Activities.OperationValidationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abaad-196">操作に関するメッセージが受信され、検証が必要な場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="abaad-196">Occurs when a message is received for an operation and validation is required.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-197">これは、<xref:System.Workflow.Activities.ReceiveActivity> アクティビティがメッセージを受信しようとする場合に発生するオプションのイベント ハンドラーです。</span><span class="sxs-lookup"><span data-stu-id="abaad-197">This is an optional event handler that is fired when the <xref:System.Workflow.Activities.ReceiveActivity> activity is about to receive a message.</span></span> <span data-ttu-id="abaad-198">関連付けられたハンドラーを使用して、ClaimSet ベースのセキュリティ チェックを実行し、<xref:System.Workflow.Activities.ReceiveActivity> アクティビティで実装されたサービス操作のクライアント呼び出しを承認できます。</span><span class="sxs-lookup"><span data-stu-id="abaad-198">The associated handler can be used to perform ClaimSet-based security checks to authorize client invocation of the service operation implemented by the <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span>  
  
 <span data-ttu-id="abaad-199">イベント ハンドラーで <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=nameWithType> を `false` に設定すると、サービス操作呼び出しを拒否し、クライアントは <xref:System.ServiceModel.FaultException> を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="abaad-199">Setting <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=nameWithType> to `false` in the event handler rejects the service operation invocation and the client receives a <xref:System.ServiceModel.FaultException>.</span></span> <span data-ttu-id="abaad-200"><xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=nameWithType> が `true` に設定される場合は、サービス操作呼び出しは成功し、<xref:System.Workflow.Activities.ReceiveActivity> アクティビティはメッセージを受信および処理します。</span><span class="sxs-lookup"><span data-stu-id="abaad-200">If <xref:System.Workflow.Activities.OperationValidationEventArgs.IsValid%2A?displayProperty=nameWithType> is set to `true`, then the service operation invocation succeeds and the <xref:System.Workflow.Activities.ReceiveActivity> activity receives and processes the message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-201">`OperationValidation` イベントを使用する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="abaad-201">The following example shows how to use the `OperationValidation` event.</span></span>  
  
 [!code-csharp[ReceiveActivity#7](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationValidationEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty OperationValidationEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty OperationValidationEvent" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReceiveActivity.OperationValidationEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OperationValidationEvent As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ OperationValidationEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable OperationValidationEvent : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.ReceiveActivity.OperationValidationEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abaad-202"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> イベントをターゲットとする <see cref="E:System.Workflow.Activities.ReceiveActivity.OperationValidation" /> を表します。</span><span class="sxs-lookup"><span data-stu-id="abaad-202">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="E:System.Workflow.Activities.ReceiveActivity.OperationValidation" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-203">この依存イベント プロパティを使用して、受信アクティビティの <xref:System.Workflow.Activities.ReceiveActivity.OperationValidation> イベントをワークフロー クラスのパブリック イベント ハンドラーにバインドできます。</span><span class="sxs-lookup"><span data-stu-id="abaad-203">This dependency event property can be used to bind the receive activity's <xref:System.Workflow.Activities.ReceiveActivity.OperationValidation> event to a public event handler on the workflow class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterBindings">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.WorkflowParameterBindingCollection ParameterBindings" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.ParameterBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterBindings As WorkflowParameterBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ ParameterBindings { System::Workflow::ComponentModel::WorkflowParameterBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterBindings : System.Workflow.ComponentModel.WorkflowParameterBindingCollection" Usage="System.Workflow.Activities.ReceiveActivity.ParameterBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.WorkflowParameterBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abaad-204">このサービスの正式なパラメーター リストに検出されるようなバインド可能なパラメーターのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="abaad-204">Gets the collection of bindable parameters as found in the service's formal parameter list.</span></span></summary>
        <value><span data-ttu-id="abaad-205">バインドされるパラメーターの <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" />。</span><span class="sxs-lookup"><span data-stu-id="abaad-205">The <see cref="T:System.Workflow.ComponentModel.WorkflowParameterBindingCollection" /> of parameters to bind to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-206"><xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> を使用して、<xref:System.Workflow.Activities.ReceiveActivity> アクティビティを含むサービス操作パラメーターとワークフローのパブリック フィールドおよびパブリック プロパティ間のバインディングを指定できます。</span><span class="sxs-lookup"><span data-stu-id="abaad-206"><xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> can be used to specify a binding between the service operation parameters and public field/properties of the workflow that contain the <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span> <span data-ttu-id="abaad-207">クライアントが操作を呼び出す場合、対応するパラメーター値は受信アクティビティの実行時にバインドされたワークフロー プロパティに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="abaad-207">When a client invokes the operation, the corresponding parameter values are written to bound workflow properties during the receive activity's execution.</span></span>  
  
 <span data-ttu-id="abaad-208"><xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> は、受信アクティビティの子アクティビティで使用して、クライアントの呼び出しで渡されるパラメーター値を読み込むこともできます。</span><span class="sxs-lookup"><span data-stu-id="abaad-208"><xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> can also be used by the receive activity's child activities to read the parameter values passed in by client invocation.</span></span> <span data-ttu-id="abaad-209">子アクティビティは <xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> コレクションを使用して、親 <xref:System.Workflow.Activities.ReceiveActivity> アクティビティの戻り値を設定します。</span><span class="sxs-lookup"><span data-stu-id="abaad-209">Child activities can use the <xref:System.Workflow.Activities.ReceiveActivity.ParameterBindings%2A> collection to set the return value of the parent <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span>  
  
 <span data-ttu-id="abaad-210">サービス コントラクトのすべてのパラメーターが `ParameterBindings` プロパティに含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="abaad-210">All parameters of the service contract should be included in the `ParameterBindings` property.</span></span> <span data-ttu-id="abaad-211">バインドされていないパラメーターがあると、コンパイル時にコンパイラで警告が発生します。<xref:System.Workflow.Activities.ReceiveActivity> がこのメッセージをクライアントに返すときに例外が発生する場合があります。</span><span class="sxs-lookup"><span data-stu-id="abaad-211">Unbound parameters cause compiler warnings upon compilation and an exception can occur when the <xref:System.Workflow.Activities.ReceiveActivity> returns this message back to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-212">次の例は、`ParameterBindings` プロパティにアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="abaad-212">The following example shows how to access the `ParameterBindings` property.</span></span> <span data-ttu-id="abaad-213">このコードは、`Conversations` ファイルの `ShipperWorkflow.designer.cs` SDK サンプルを作成し直したものです。</span><span class="sxs-lookup"><span data-stu-id="abaad-213">This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.</span></span>  
  
 [!code-csharp[ReceiveActivity#3](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceOperationInfo">
      <MemberSignature Language="C#" Value="public System.Workflow.Activities.OperationInfoBase ServiceOperationInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Activities.OperationInfoBase ServiceOperationInfo" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceOperationInfo As OperationInfoBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Activities::OperationInfoBase ^ ServiceOperationInfo { System::Workflow::Activities::OperationInfoBase ^ get(); void set(System::Workflow::Activities::OperationInfoBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceOperationInfo : System.Workflow.Activities.OperationInfoBase with get, set" Usage="System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Visible)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Workflow.Activities.OperationInfoBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abaad-214"><see cref="T:System.Workflow.Activities.ReceiveActivity" /> アクティビティが実装するコントラクトおよびサービス操作を定義します。</span><span class="sxs-lookup"><span data-stu-id="abaad-214">Defines the contract and service operation that the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity implements.</span></span></summary>
        <value><span data-ttu-id="abaad-215">コントラクト名、コントラクト型、操作名 (実際のメソッド名と異なる場合がある)、その操作が一方向の操作かどうか、および操作についてのパラメーターなどのメソッド情報を含んでいる <see cref="T:System.Workflow.Activities.OperationInfoBase" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="abaad-215">An <see cref="T:System.Workflow.Activities.OperationInfoBase" /> object that contains the contract name, the contract type, the operation name, (which could be distinct from method name), whether the operation is a one-way operation, and method information including parameters about the operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-216"><xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo%2A> プロパティは、型が <xref:System.Workflow.Activities.TypedOperationInfo> または <xref:System.Workflow.Activities.OperationInfo> のインスタンスに設定することができます。</span><span class="sxs-lookup"><span data-stu-id="abaad-216">The <xref:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo%2A> property can be set to an instance of type <xref:System.Workflow.Activities.TypedOperationInfo> or <xref:System.Workflow.Activities.OperationInfo>.</span></span> <span data-ttu-id="abaad-217"><xref:System.Workflow.Activities.TypedOperationInfo> を使用して、既存の Windows Communication Foundation (WCF) サービスコントラクトを使用する receive アクティビティを構成できます。</span><span class="sxs-lookup"><span data-stu-id="abaad-217"><xref:System.Workflow.Activities.TypedOperationInfo> can be used to configure a receive activity using an existing Windows Communication Foundation (WCF) service contract.</span></span>  
  
 <span data-ttu-id="abaad-218"><xref:System.Workflow.Activities.OperationInfo> のインスタンスを使用して、ワークフロー優先のコントラクト シナリオの受信アクティビティを構成できます。</span><span class="sxs-lookup"><span data-stu-id="abaad-218">An instance of <xref:System.Workflow.Activities.OperationInfo> can be used to configure a receive activity for the workflow-first contract scenario.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-219">次の例は、`ServiceOperationInfo` プロパティにアクセスする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="abaad-219">The following example shows how to access the `ServiceOperationInfo` property.</span></span> <span data-ttu-id="abaad-220">このコードは、`Conversations` ファイルの `ShipperWorkflow.designer.cs` SDK サンプルを作成し直したものです。</span><span class="sxs-lookup"><span data-stu-id="abaad-220">This code was adapted from the `Conversations` SDK sample, from the `ShipperWorkflow.designer.cs` file.</span></span>  
  
 [!code-csharp[ReceiveActivity#4](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorkflowServiceAttributes">
      <MemberSignature Language="C#" Value="public static void SetWorkflowServiceAttributes (object dependencyObject, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWorkflowServiceAttributes(object dependencyObject, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetWorkflowServiceAttributes (dependencyObject As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetWorkflowServiceAttributes(System::Object ^ dependencyObject, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member SetWorkflowServiceAttributes : obj * obj -&gt; unit" Usage="System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes (dependencyObject, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="abaad-221">サービス属性を適用するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="abaad-221">The object to apply the service attributes to.</span></span></param>
        <param name="value"><span data-ttu-id="abaad-222">適用するサービス属性データを含む <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="abaad-222">The <see cref="T:System.Workflow.Activities.WorkflowServiceAttributes" /> object that contains the service attribute data to apply.</span></span></param>
        <summary><span data-ttu-id="abaad-223"><see cref="T:System.Workflow.Activities.ReceiveActivity" /> アクティビティで実装されたサービスの属性を設定します。</span><span class="sxs-lookup"><span data-stu-id="abaad-223">Sets the attributes for the service implemented by the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity.</span></span> <span data-ttu-id="abaad-224">これらの属性には <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />、<see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />、および <see cref="T:System.Workflow.Activities.ReceiveActivity" /> アクティビティから返されるエラーにある例外の詳細を含むかどうか、などの項目が含まれます。</span><span class="sxs-lookup"><span data-stu-id="abaad-224">These attributes include items like the <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.AddressFilterMode" />, the <see cref="P:System.Workflow.Activities.WorkflowServiceAttributes.ConfigurationName" />, and whether to include exception details in any faults that are returned from the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-225"><xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> プロパティは、<xref:System.Workflow.Activities.ReceiveActivity> アクティビティで定義済みの割り当てられた依存プロパティです。</span><span class="sxs-lookup"><span data-stu-id="abaad-225">The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span> <span data-ttu-id="abaad-226">この依存プロパティは、デザイン時に <xref:System.Workflow.Activities.ReceiveActivity> メソッドの呼び出しを使用した <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> アクティビティを含むルート ワークフローに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="abaad-226">This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time.</span></span>  
  
 <span data-ttu-id="abaad-227"><xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> プロパティは、開始時にワークフロー サービスに適用されているサービスレベル動作の属性を定義するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-227">The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is used for defining service-level behavior attributes that are applied to the workflow service when it starts.</span></span> <span data-ttu-id="abaad-228">これらは実行時に変更できません。</span><span class="sxs-lookup"><span data-stu-id="abaad-228">These cannot be modified at runtime.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abaad-229">現在のワークフローが <xref:System.Workflow.Activities.InvokeWorkflowActivity> アクティビティを使用して別のワークフローを開始する場合、呼び出されたワークフローは呼び出しているワークフローのサービス属性を継承しません。</span><span class="sxs-lookup"><span data-stu-id="abaad-229">If the current workflow starts another workflow using a <xref:System.Workflow.Activities.InvokeWorkflowActivity> activity, the invoked workflow does not inherit the invoking workflow's service attributes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="abaad-230">カスタム アクティビティに対してサービス属性が設定されており、そのアクティビティがワークフローに含まれる場合は、そのサービス属性は使用されません。</span><span class="sxs-lookup"><span data-stu-id="abaad-230">If service attributes are set for a custom activity and that activity is included in a workflow, those service attributes is not used.</span></span> <span data-ttu-id="abaad-231">サービス属性は、カスタム アクティビティ自体がワークフローとして実行される場合は、カスタム アクティビティのみに使用されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-231">Service attributes are only used in custom activities if the custom activity itself is run as a workflow.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="abaad-232">`SetWorkflowServiceAttributes` メソッドを使用する方法の例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="abaad-232">The following example shows how to use the `SetWorkflowServiceAttributes` method.</span></span>  
  
 [!code-csharp[ReceiveActivity#6](~/samples/snippets/csharp/VS_Snippets_CFX/receiveactivity/cs/snippets.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.QueueName">
      <MemberSignature Language="C#" Value="IComparable System.Workflow.Activities.IEventActivity.QueueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IComparable System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#QueueName" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property QueueName As IComparable Implements IEventActivity.QueueName" />
      <MemberSignature Language="C++ CLI" Value="property IComparable ^ System::Workflow::Activities::IEventActivity::QueueName { IComparable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Workflow.Activities.IEventActivity.QueueName : IComparable" Usage="System.Workflow.Activities.IEventActivity.QueueName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Workflow.Activities.IEventActivity.QueueName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IComparable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abaad-233">アクティビティがデータの到着を待機している <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> の名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="abaad-233">Gets the name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> on which the activity is waiting for data to arrive.</span></span></summary>
        <value><span data-ttu-id="abaad-234">アクティビティがデータの到着を待機している <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> の名前。</span><span class="sxs-lookup"><span data-stu-id="abaad-234">The name of the <see cref="T:System.Workflow.Runtime.WorkflowQueue" /> on which the activity is waiting for data to arrive.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Subscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Subscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Subscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Subscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Subscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Subscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Subscribe;" />
      <MemberSignature Language="F#" Value="abstract member System.Workflow.Activities.IEventActivity.Subscribe : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit&#xA;override this.System.Workflow.Activities.IEventActivity.Subscribe : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="receiveActivity.System.Workflow.Activities.IEventActivity.Subscribe (parentContext, parentEventHandler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><span data-ttu-id="abaad-235"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> アクティビティの実行環境を表す <see cref="T:System.Workflow.Activities.ReceiveActivity" />。</span><span class="sxs-lookup"><span data-stu-id="abaad-235">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity.</span></span></param>
        <param name="parentEventHandler"><span data-ttu-id="abaad-236">イベントを処理する <see cref="T:System.EventHandler" />。</span><span class="sxs-lookup"><span data-stu-id="abaad-236">The <see cref="T:System.EventHandler" /> that handles the event.</span></span> <span data-ttu-id="abaad-237">このイベント ハンドラーは親アクティビティが所有します。</span><span class="sxs-lookup"><span data-stu-id="abaad-237">This event handler is owned by the parent activity.</span></span></param>
        <summary><span data-ttu-id="abaad-238">イベントに対する <see cref="T:System.Workflow.Activities.ReceiveActivity" /> アクティビティのサブスクリプションを作成します。</span><span class="sxs-lookup"><span data-stu-id="abaad-238">Creates the subscription of the <see cref="T:System.Workflow.Activities.ReceiveActivity" /> activity to an event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.Activities.IEventActivity.Unsubscribe">
      <MemberSignature Language="C#" Value="void IEventActivity.Unsubscribe (System.Workflow.ComponentModel.ActivityExecutionContext parentContext, System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.Activities.IEventActivity.Unsubscribe(class System.Workflow.ComponentModel.ActivityExecutionContext parentContext, class System.Workflow.ComponentModel.IActivityEventListener`1&lt;class System.Workflow.ComponentModel.QueueEventArgs&gt; parentEventHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Sub Unsubscribe (parentContext As ActivityExecutionContext, parentEventHandler As IActivityEventListener(Of QueueEventArgs)) Implements IEventActivity.Unsubscribe" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.Activities.IEventActivity.Unsubscribe(System::Workflow::ComponentModel::ActivityExecutionContext ^ parentContext, System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt; ^ parentEventHandler) = System::Workflow::Activities::IEventActivity::Unsubscribe;" />
      <MemberSignature Language="F#" Value="abstract member System.Workflow.Activities.IEventActivity.Unsubscribe : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit&#xA;override this.System.Workflow.Activities.IEventActivity.Unsubscribe : System.Workflow.ComponentModel.ActivityExecutionContext * System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt; -&gt; unit" Usage="receiveActivity.System.Workflow.Activities.IEventActivity.Unsubscribe (parentContext, parentEventHandler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.Activities.IEventActivity.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentContext" Type="System.Workflow.ComponentModel.ActivityExecutionContext" />
        <Parameter Name="parentEventHandler" Type="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="parentContext"><span data-ttu-id="abaad-239"><see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> アクティビティの実行環境を表す <see cref="T:System.Workflow.Activities.WebServiceInputActivity" />。</span><span class="sxs-lookup"><span data-stu-id="abaad-239">The <see cref="T:System.Workflow.ComponentModel.ActivityExecutionContext" /> that represents the execution environment of the <see cref="T:System.Workflow.Activities.WebServiceInputActivity" /> activity.</span></span></param>
        <param name="parentEventHandler"><span data-ttu-id="abaad-240">イベントを処理する <see cref="T:System.EventHandler" />。</span><span class="sxs-lookup"><span data-stu-id="abaad-240">The <see cref="T:System.EventHandler" /> that handles the event.</span></span> <span data-ttu-id="abaad-241">このイベント ハンドラーは親アクティビティが所有します。</span><span class="sxs-lookup"><span data-stu-id="abaad-241">This event handler is owned by the parent activity.</span></span></param>
        <summary><span data-ttu-id="abaad-242">イベントに対する <see cref="T:System.Workflow.ComponentModel.Activity" /> のサブスクリプションをキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="abaad-242">Cancels the subscription of a <see cref="T:System.Workflow.ComponentModel.Activity" /> to an event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent">
      <MemberSignature Language="C#" Value="void IActivityEventListener&lt;QueueEventArgs&gt;.OnEvent (object sender, System.Workflow.ComponentModel.QueueEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(object sender, class System.Workflow.ComponentModel.QueueEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Activities.ReceiveActivity.System#Workflow#ComponentModel#IActivityEventListener&lt;System#Workflow#ComponentModel#QueueEventArgs&gt;#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnEvent (sender As Object, e As QueueEventArgs) Implements IActivityEventListener(Of QueueEventArgs).OnEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent(System::Object ^ sender, System::Workflow::ComponentModel::QueueEventArgs ^ e) = System::Workflow::ComponentModel::IActivityEventListener&lt;System::Workflow::ComponentModel::QueueEventArgs ^&gt;::OnEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent : obj * System.Workflow.ComponentModel.QueueEventArgs -&gt; unit&#xA;override this.System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent : obj * System.Workflow.ComponentModel.QueueEventArgs -&gt; unit" Usage="receiveActivity.System.Workflow.ComponentModel.IActivityEventListener&lt;System.Workflow.ComponentModel.QueueEventArgs&gt;.OnEvent (sender, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IActivityEventListener`1.OnEvent(System.Object,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.Workflow.ComponentModel.QueueEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="abaad-243">イベントを発生させたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="abaad-243">The object that raised the event.</span></span></param>
        <param name="e"><span data-ttu-id="abaad-244">型指定されていたイベント引数。</span><span class="sxs-lookup"><span data-stu-id="abaad-244">The previously-typed event arguments.</span></span></param>
        <summary><span data-ttu-id="abaad-245">定期受信されているイベントが発生したときの処理プロシージャを定義します。</span><span class="sxs-lookup"><span data-stu-id="abaad-245">Defines the processing procedure when the subscribed-to event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkflowServiceAttributesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Workflow.ComponentModel.DependencyProperty WorkflowServiceAttributesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Workflow.ComponentModel.DependencyProperty WorkflowServiceAttributesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WorkflowServiceAttributesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Workflow::ComponentModel::DependencyProperty ^ WorkflowServiceAttributesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WorkflowServiceAttributesProperty : System.Workflow.ComponentModel.DependencyProperty" Usage="System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abaad-246"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> プロパティをターゲットとする <see cref="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" /> を表します。</span><span class="sxs-lookup"><span data-stu-id="abaad-246">Represents the <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> that targets the <see cref="P:System.Workflow.Activities.ReceiveActivity.ServiceOperationInfo" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abaad-247"><xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> プロパティは、<xref:System.Workflow.Activities.ReceiveActivity> アクティビティで定義済みの割り当てられた依存プロパティです。</span><span class="sxs-lookup"><span data-stu-id="abaad-247">The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is an attached dependency property defined by the <xref:System.Workflow.Activities.ReceiveActivity> activity.</span></span> <span data-ttu-id="abaad-248">この依存プロパティは、デザイン時に <xref:System.Workflow.Activities.ReceiveActivity> メソッドの呼び出しを使用した <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> アクティビティを含むルート ワークフローに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="abaad-248">This dependency property is attached to the root workflow that contains the <xref:System.Workflow.Activities.ReceiveActivity> activity using the <xref:System.Workflow.Activities.ReceiveActivity.SetWorkflowServiceAttributes%2A> method call at design time.</span></span>  
  
 <span data-ttu-id="abaad-249"><xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> プロパティは、開始時にワークフロー サービスに適用されているサービスレベル動作の属性を定義するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="abaad-249">The <xref:System.Workflow.Activities.ReceiveActivity.WorkflowServiceAttributesProperty> property is used for defining service-level behavior attributes that are applied to the workflow service when it starts.</span></span> <span data-ttu-id="abaad-250">これらは実行時に変更できません。</span><span class="sxs-lookup"><span data-stu-id="abaad-250">These cannot be modified at runtime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
