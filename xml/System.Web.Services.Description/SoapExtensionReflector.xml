<Type Name="SoapExtensionReflector" FullName="System.Web.Services.Description.SoapExtensionReflector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="34d0337bdb1817c01a072baf7cb2dd29766b6a15" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73379744" /></Metadata><TypeSignature Language="C#" Value="public abstract class SoapExtensionReflector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapExtensionReflector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Description.SoapExtensionReflector" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapExtensionReflector" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapExtensionReflector abstract" />
  <TypeSignature Language="F#" Value="type SoapExtensionReflector = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>メソッド単位で SOAP 拡張機能情報を <see cref="T:System.Web.Services.Description.ServiceDescription" /> オブジェクトに追加する共通のインターフェイスおよび機能をクラスに提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Abstract <xref:System.Web.Services.Description.SoapExtensionReflector> クラスは抽象メソッドを公開します。 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> です。 この抽象メソッドを使用すると、<xref:System.Web.Services.Description.ServiceDescription> オブジェクトに配置されているオブジェクトに Web メソッドを反映するときに、派生クラスで SOAP 拡張機能の説明を追加できます。 メソッド自体は入力ではありません。 この説明は、<xref:System.Web.Services.Description.ServiceDescription>を生成する、指定されたバインディングに属するすべての Web メソッドに追加されます。  
  
 <xref:System.Web.Services.Description.ServiceDescription> を使用すると、<xref:System.Web.Services.Description.ServiceDescription.Write%2A> メソッドを使用して Web サービス記述言語 (WSDL) ドキュメントを生成できます。 <xref:System.Web.Services.Description.ServiceDescriptionImporter> クラスと関連クラスは、<xref:System.Web.Services.Description.ServiceDescription> を使用して、クライアントプロキシコードを生成したり、サーバーコードを抽象化したりすることもできます。  
  
 <xref:System.Web.Services.Description.SoapExtensionReflector> クラスから派生したクラスを、抽象 <xref:System.Web.Services.Protocols.SoapExtension> クラスから派生したクラスと共に使用して、クライアントまたはサービスでの SOAP メッセージの実行時処理を拡張します。  
  
 構成ファイル内の <xref:System.Web.Services.Description.SoapExtensionReflector> は、 [\<soapExtensionReflectorTypes > 要素](https://msdn.microsoft.com/library/6950609a-c9a3-4f6f-a5fc-a05d6d204d5c)要素とその子要素**add**要素を使用して指定できます。 また、Web サービスを発行する ASP.NET Web アプリケーションに構成を適用することもできます。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
    <altmember cref="M:System.Web.Services.Description.ProtocolReflector.ReflectMethod" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoapExtensionReflector ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SoapExtensionReflector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.Services.Description.SoapExtensionReflector" /> クラスのインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectDescription">
      <MemberSignature Language="C#" Value="public virtual void ReflectDescription ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectDescription() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectDescription" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReflectDescription ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReflectDescription();" />
      <MemberSignature Language="F#" Value="abstract member ReflectDescription : unit -&gt; unit&#xA;override this.ReflectDescription : unit -&gt; unit" Usage="soapExtensionReflector.ReflectDescription " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>バインディングに対応する <see cref="T:System.Web.Services.Description.ServiceDescription" /> オブジェクトに配置されるサービス固有の説明情報を生成します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectionContext">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ProtocolReflector ReflectionContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ProtocolReflector ReflectionContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext" />
      <MemberSignature Language="VB.NET" Value="Public Property ReflectionContext As ProtocolReflector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ProtocolReflector ^ ReflectionContext { System::Web::Services::Description::ProtocolReflector ^ get(); void set(System::Web::Services::Description::ProtocolReflector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ReflectionContext : System.Web.Services.Description.ProtocolReflector with get, set" Usage="System.Web.Services.Description.SoapExtensionReflector.ReflectionContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ProtocolReflector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.Services.Description.ProtocolReflector" /> メソッドを呼び出す <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" /> 抽象クラスから派生したクラスのインスタンスを取得または設定します。</summary>
        <value><see cref="T:System.Web.Services.Description.ProtocolReflector" /> メソッドを呼び出す <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" /> 抽象クラスから派生したクラスのインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapExtensionReflector>`abstract` クラスから派生したクラスを実装する場合、<xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> メソッドを呼び出したり、<xref:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext%2A> プロパティを設定したりするために、<xref:System.Web.Services.Description.ProtocolReflector> から派生したクラスを実装する必要はありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectMethod">
      <MemberSignature Language="C#" Value="public abstract void ReflectMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReflectMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReflectMethod ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReflectMethod();" />
      <MemberSignature Language="F#" Value="abstract member ReflectMethod : unit -&gt; unit" Usage="soapExtensionReflector.ReflectMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>メソッド単位で SOAP 拡張機能情報を <see cref="T:System.Web.Services.Description.ServiceDescription" /> オブジェクトに追加するために、派生クラスが実装する必要がある <see langword="Abstract" /> メソッド。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> メソッドは、<xref:System.Web.Services.Description.ServiceDescription> が表すバインディングに属する各 Web メソッドに対して呼び出されます。 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> メソッドは、Web メソッドを直接使用しません。 SOAP 拡張機能の情報は、Web サービスクラスからリフレクションされたバインディング内のすべての Web メソッドに対して追加されます。  
  
 <xref:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod%2A> の実装では、操作のバインディング、`abstract` 操作、メッセージなどの情報を生成できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
