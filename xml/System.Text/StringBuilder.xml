<Type Name="StringBuilder" FullName="System.Text.StringBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fceeb096e3831bbdc326359702c1f7724fe1af63" /><Meta Name="ms.sourcegitcommit" Value="f6fc130f7b9399b2b130a137d6b0b2b73c1d17b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/18/2019" /><Meta Name="ms.locfileid" Value="74154537" /></Metadata><TypeSignature Language="C#" Value="public sealed class StringBuilder : System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit StringBuilder extends System.Object implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Text.StringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StringBuilder&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringBuilder sealed : System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type StringBuilder = class&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d1b66-101">Represents a mutable string of characters.</span><span class="sxs-lookup"><span data-stu-id="d1b66-101">Represents a mutable string of characters.</span></span> <span data-ttu-id="d1b66-102">This class cannot be inherited.</span><span class="sxs-lookup"><span data-stu-id="d1b66-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-103">このクラスは、値が変更可能な一連の文字である文字列に似たオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-103">This class represents a string-like object whose value is a mutable sequence of characters.</span></span>

 <span data-ttu-id="d1b66-104">このセクションの内容:</span><span class="sxs-lookup"><span data-stu-id="d1b66-104">In this section:</span></span>

-   [<span data-ttu-id="d1b66-105">String 型と StringBuilder 型</span><span class="sxs-lookup"><span data-stu-id="d1b66-105">The String and StringBuilder types</span></span>](#StringAndSB)

-   [<span data-ttu-id="d1b66-106">StringBuilder の動作</span><span class="sxs-lookup"><span data-stu-id="d1b66-106">How StringBuilder works</span></span>](#HowWorks)

-   [<span data-ttu-id="d1b66-107">メモリの割り当て</span><span class="sxs-lookup"><span data-stu-id="d1b66-107">Memory allocation</span></span>](#Memory)

-   [<span data-ttu-id="d1b66-108">StringBuilder オブジェクトのインスタンス化</span><span class="sxs-lookup"><span data-stu-id="d1b66-108">Instantiating a StringBuilder object</span></span>](#Instantiating)

-   [<span data-ttu-id="d1b66-109">StringBuilder メソッドの呼び出し</span><span class="sxs-lookup"><span data-stu-id="d1b66-109">Calling StringBuilder methods</span></span>](#Calling)

-   [<span data-ttu-id="d1b66-110">StringBuilder 操作の実行</span><span class="sxs-lookup"><span data-stu-id="d1b66-110">Performing StringBuilder operations</span></span>](#Operations)

    -   [<span data-ttu-id="d1b66-111">StringBuilder 文字の反復処理</span><span class="sxs-lookup"><span data-stu-id="d1b66-111">Iterating StringBuilder characters</span></span>](#Iterating)

    -   [<span data-ttu-id="d1b66-112">StringBuilder オブジェクトへのテキストの追加</span><span class="sxs-lookup"><span data-stu-id="d1b66-112">Adding text to a StringBuilder object</span></span>](#Adding)

    -   [<span data-ttu-id="d1b66-113">StringBuilder オブジェクトからのテキストの削除</span><span class="sxs-lookup"><span data-stu-id="d1b66-113">Deleting text from a StringBuilder object</span></span>](#Deleting)

    -   [<span data-ttu-id="d1b66-114">StringBuilder オブジェクト内のテキストの変更</span><span class="sxs-lookup"><span data-stu-id="d1b66-114">Modifying the text in a StringBuilder object</span></span>](#Modifying)

-   [<span data-ttu-id="d1b66-115">StringBuilder オブジェクト内のテキストの検索</span><span class="sxs-lookup"><span data-stu-id="d1b66-115">Searching the text in a StringBuilder object</span></span>](#Searching)

-   [<span data-ttu-id="d1b66-116">StringBuilder オブジェクトを文字列に変換する</span><span class="sxs-lookup"><span data-stu-id="d1b66-116">Converting the StringBuilder object to a string</span></span>](#Converting)

<a name="StringAndSB"></a>
## <a name="the-string-and-stringbuilder-types"></a><span data-ttu-id="d1b66-117">String 型と StringBuilder 型</span><span class="sxs-lookup"><span data-stu-id="d1b66-117">The String and StringBuilder types</span></span>
 <span data-ttu-id="d1b66-118"><xref:System.Text.StringBuilder> と <xref:System.String> は両方とも文字のシーケンスを表しますが、それぞれ異なる方法で実装されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-118">Although <xref:System.Text.StringBuilder> and <xref:System.String> both represent sequences of characters, they are implemented differently.</span></span> <span data-ttu-id="d1b66-119"><xref:System.String> は変更できない型です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-119"><xref:System.String> is an immutable type.</span></span> <span data-ttu-id="d1b66-120">つまり、<xref:System.String> オブジェクトを変更するように表示される各操作では、実際に新しい文字列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-120">That is, each operation that appears to modify a <xref:System.String> object actually creates a new string.</span></span>

 <span data-ttu-id="d1b66-121">たとえば、次C#の例の <xref:System.String.Concat%2A?displayProperty=nameWithType> メソッドを呼び出すと、`value`という名前の文字列変数の値が変更されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-121">For example, the call to the <xref:System.String.Concat%2A?displayProperty=nameWithType> method in the following C# example appears to change the value of a string variable named `value`.</span></span> <span data-ttu-id="d1b66-122">実際、<xref:System.String.Concat%2A> メソッドは、メソッドに渡された `value` オブジェクトとは異なる値とアドレスを持つ `value` オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-122">In fact, the <xref:System.String.Concat%2A> method returns a `value` object that has a different value and address from the `value` object that was passed to the method.</span></span> <span data-ttu-id="d1b66-123">この例は、`/unsafe` コンパイラオプションを使用してコンパイルする必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-123">Note that the example must be compiled using the `/unsafe` compiler option.</span></span>

 [!code-csharp[System.Text.StringBuilder.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/immutability2.cs#1)]

 <span data-ttu-id="d1b66-124">多数の文字列操作 (ループ内の文字列を何度も変更するアプリなど) を実行するルーチンでは、文字列を繰り返し変更すると、パフォーマンスが大幅に低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-124">For routines that perform extensive string manipulation (such as apps that modify a string numerous times in a loop), modifying a string repeatedly can exact a significant performance penalty.</span></span> <span data-ttu-id="d1b66-125">代替手段は、変更可能な文字列クラスである <xref:System.Text.StringBuilder>を使用することです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-125">The alternative is to use <xref:System.Text.StringBuilder>, which is a mutable string class.</span></span> <span data-ttu-id="d1b66-126">変更可能性とは、クラスのインスタンスが作成された後に、そのインスタンスを追加、削除、置換、または挿入することによって変更できることを意味します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-126">Mutability means that once an instance of the class has been created, it can be modified by appending, removing, replacing, or inserting characters.</span></span> <span data-ttu-id="d1b66-127"><xref:System.Text.StringBuilder> オブジェクトは、文字列への展開に対応するバッファーを保持します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-127">A <xref:System.Text.StringBuilder> object maintains a buffer to accommodate expansions to the string.</span></span> <span data-ttu-id="d1b66-128">空き領域がある場合は、新しいデータがバッファーに追加されます。それ以外の場合は、新しい大きなバッファーが割り当てられ、元のバッファーのデータが新しいバッファーにコピーされます。その後、新しいデータが新しいバッファーに追加されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-128">New data is appended to the buffer if room is available; otherwise, a new, larger buffer is allocated, data from the original buffer is copied to the new buffer, and the new data is then appended to the new buffer.</span></span>

> [!IMPORTANT]
>  <span data-ttu-id="d1b66-129">一般に、<xref:System.Text.StringBuilder> クラスは <xref:System.String> クラスより優れたパフォーマンスを提供しますが、文字列を操作するときは常に <xref:System.String> を <xref:System.Text.StringBuilder> に自動的に置き換えないようにしてください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-129">Although the <xref:System.Text.StringBuilder> class generally offers better performance than the <xref:System.String> class, you should not automatically replace <xref:System.String> with <xref:System.Text.StringBuilder> whenever you want to manipulate strings.</span></span> <span data-ttu-id="d1b66-130">パフォーマンスは、文字列のサイズ、新しい文字列に割り当てられるメモリの量、アプリが実行されているシステム、および操作の種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-130">Performance depends on the size of the string, the amount of memory to be allocated for the new string, the system on which your app is executing, and the type of operation.</span></span> <span data-ttu-id="d1b66-131"><xref:System.Text.StringBuilder> 実際に大幅なパフォーマンス向上が実現されているかどうかを判断するために、アプリをテストする準備を整える必要があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-131">You should be prepared to test your app to determine whether <xref:System.Text.StringBuilder> actually offers a significant performance improvement.</span></span>

 <span data-ttu-id="d1b66-132">次の条件下では、<xref:System.String> クラスの使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-132">Consider using the <xref:System.String> class under these conditions:</span></span>

-   <span data-ttu-id="d1b66-133">アプリが文字列に対して行う変更の数が少ない場合。</span><span class="sxs-lookup"><span data-stu-id="d1b66-133">When the number of changes that your app will make to a string is small.</span></span> <span data-ttu-id="d1b66-134">このような場合、<xref:System.Text.StringBuilder> では、<xref:System.String>よりもわずかにパフォーマンスが向上しないことがあります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-134">In these cases, <xref:System.Text.StringBuilder> might offer negligible or no performance improvement over <xref:System.String>.</span></span>

-   <span data-ttu-id="d1b66-135">特に文字列リテラルを使用して、固定された数の連結演算を実行する場合。</span><span class="sxs-lookup"><span data-stu-id="d1b66-135">When you are performing a fixed number of concatenation operations, particularly with string literals.</span></span> <span data-ttu-id="d1b66-136">この場合、コンパイラは連結操作を1つの操作に結合することがあります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-136">In this case, the compiler might combine the concatenation operations into a single operation.</span></span>

-   <span data-ttu-id="d1b66-137">文字列を構築するときに、広範な検索操作を実行する必要がある場合。</span><span class="sxs-lookup"><span data-stu-id="d1b66-137">When you have to perform extensive search operations while you are building your string.</span></span> <span data-ttu-id="d1b66-138"><xref:System.Text.StringBuilder> クラスには、`IndexOf` や `StartsWith`などの検索メソッドがありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-138">The <xref:System.Text.StringBuilder> class lacks search methods such as `IndexOf` or `StartsWith`.</span></span> <span data-ttu-id="d1b66-139">これらの操作のために <xref:System.Text.StringBuilder> オブジェクトを <xref:System.String> に変換する必要があります。これにより <xref:System.Text.StringBuilder>を使用した場合のパフォーマンスの利点が損なわれる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-139">You'll have to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> for these operations, and this can negate the performance benefit from using <xref:System.Text.StringBuilder>.</span></span> <span data-ttu-id="d1b66-140">詳細については、「 [StringBuilder オブジェクト内のテキストの検索](#Searching)」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-140">For more information, see the [Searching the text in a StringBuilder object](#Searching) section.</span></span>

 <span data-ttu-id="d1b66-141">次の条件下では、<xref:System.Text.StringBuilder> クラスの使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-141">Consider using the <xref:System.Text.StringBuilder> class under these conditions:</span></span>

-   <span data-ttu-id="d1b66-142">アプリケーションで、デザイン時に文字列に対して不明な数の変更を加えることが予想される場合 (たとえば、ユーザー入力を含む文字列の数を連結するためにループを使用する場合など)。</span><span class="sxs-lookup"><span data-stu-id="d1b66-142">When you expect your app to make an unknown number of changes to a string at design time (for example, when you are using a loop to concatenate a random number of strings that contain user input).</span></span>

-   <span data-ttu-id="d1b66-143">アプリが文字列に大幅な変更を加えることが予想される場合。</span><span class="sxs-lookup"><span data-stu-id="d1b66-143">When you expect your app to make a significant number of changes to a string.</span></span>

<a name="HowWorks"></a>
## <a name="how-stringbuilder-works"></a><span data-ttu-id="d1b66-144">StringBuilder の動作</span><span class="sxs-lookup"><span data-stu-id="d1b66-144">How StringBuilder works</span></span>
 <span data-ttu-id="d1b66-145"><xref:System.Text.StringBuilder.Length%2A?displayProperty=nameWithType> プロパティは、<xref:System.Text.StringBuilder> オブジェクトに現在格納されている文字数を示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-145">The <xref:System.Text.StringBuilder.Length%2A?displayProperty=nameWithType> property indicates the number of characters the <xref:System.Text.StringBuilder> object currently contains.</span></span> <span data-ttu-id="d1b66-146"><xref:System.Text.StringBuilder> オブジェクトに文字を追加した場合、その長さは、オブジェクトに含めることができる文字数を定義する <xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType> プロパティのサイズと等しくなるまで増加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-146">If you add characters to the <xref:System.Text.StringBuilder> object, its length increases until it equals the size of the <xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType> property, which defines the number of characters that the object can contain.</span></span> <span data-ttu-id="d1b66-147">追加された文字数によって <xref:System.Text.StringBuilder> オブジェクトの長さが現在の容量を超えた場合、新しいメモリが割り当てられ、<xref:System.Text.StringBuilder.Capacity%2A> プロパティの値が2倍になり、新しい文字が <xref:System.Text.StringBuilder> オブジェクトに追加され、その <xref:System.Text.StringBuilder.Length%2A> プロパティはになります。合わせる.</span><span class="sxs-lookup"><span data-stu-id="d1b66-147">If the number of added characters causes the length of the <xref:System.Text.StringBuilder> object to exceed its current capacity, new memory is allocated, the value of the <xref:System.Text.StringBuilder.Capacity%2A> property is doubled, new characters are added to the <xref:System.Text.StringBuilder> object, and its <xref:System.Text.StringBuilder.Length%2A> property is adjusted.</span></span> <span data-ttu-id="d1b66-148"><xref:System.Text.StringBuilder> オブジェクトの追加メモリは、<xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> プロパティによって定義された値に達するまで、動的に割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-148">Additional memory for the <xref:System.Text.StringBuilder> object is allocated dynamically until it reaches the value defined by the <xref:System.Text.StringBuilder.MaxCapacity%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d1b66-149">最大容量に達すると、<xref:System.Text.StringBuilder> オブジェクトに対してそれ以上のメモリを割り当てることができなくなり、文字を追加したり、最大容量を超えて拡張しようとしたりすると、<xref:System.ArgumentOutOfRangeException> または <xref:System.OutOfMemoryException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-149">When the maximum capacity is reached, no further memory can be allocated for the <xref:System.Text.StringBuilder> object, and trying to add characters or expand it beyond its maximum capacity throws either an <xref:System.ArgumentOutOfRangeException> or an <xref:System.OutOfMemoryException> exception.</span></span>

 <span data-ttu-id="d1b66-150">次の例は、オブジェクトに割り当てられた文字列が拡張されると、<xref:System.Text.StringBuilder> オブジェクトが新しいメモリを割り当て、容量を動的に増やす方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-150">The following example illustrates how a <xref:System.Text.StringBuilder> object allocates new memory and increases its capacity dynamically as the string assigned to the object expands.</span></span> <span data-ttu-id="d1b66-151">このコードでは、既定の (パラメーターなしの) コンストラクターを呼び出すことによって <xref:System.Text.StringBuilder> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-151">The code creates a <xref:System.Text.StringBuilder> object by calling its default (parameterless) constructor.</span></span> <span data-ttu-id="d1b66-152">このオブジェクトの既定の容量は16文字で、最大容量は20億文字を超えています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-152">The default capacity of this object is 16 characters, and its maximum capacity is more than 2 billion characters.</span></span> <span data-ttu-id="d1b66-153">"This is a 文." という文字列を追加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-153">Appending the string "This is a sentence."</span></span> <span data-ttu-id="d1b66-154">文字列の長さ (19 文字) が <xref:System.Text.StringBuilder> オブジェクトの既定の容量を超えているため、新しいメモリが割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-154">results in a new memory allocation because the string length (19 characters) exceeds the default capacity of the <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="d1b66-155">オブジェクトの容量が2倍32になると、新しい文字列が追加され、オブジェクトの長さは19文字になります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-155">The capacity of the object doubles to 32 characters, the new string is added, and the length of the object now equals 19 characters.</span></span> <span data-ttu-id="d1b66-156">このコードでは、"This は追加の文です。" という文字列を追加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-156">The code then appends the string "This is an additional sentence."</span></span> <span data-ttu-id="d1b66-157"><xref:System.Text.StringBuilder> オブジェクトの値を11回に指定します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-157">to the value of the <xref:System.Text.StringBuilder> object 11 times.</span></span> <span data-ttu-id="d1b66-158">追加操作によって <xref:System.Text.StringBuilder> オブジェクトの長さがその容量を超えた場合、既存の容量が2倍になり、<xref:System.Text.StringBuilder.Append%2A> 操作が成功します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-158">Whenever the append operation causes the length of the <xref:System.Text.StringBuilder> object to exceed its capacity, its existing capacity is doubled and the <xref:System.Text.StringBuilder.Append%2A> operation succeeds.</span></span>

 [!code-csharp[System.Text.StringBuilder.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/default1.cs#3)]
 [!code-vb[System.Text.StringBuilder.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/default1.vb#3)]

<a name="Memory"></a>
## <a name="memory-allocation"></a><span data-ttu-id="d1b66-159">メモリ割り当て</span><span class="sxs-lookup"><span data-stu-id="d1b66-159">Memory allocation</span></span>
 <span data-ttu-id="d1b66-160"><xref:System.Text.StringBuilder> オブジェクトの既定の容量は16文字で、既定の最大容量は <xref:System.Int32.MaxValue?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-160">The default capacity of a <xref:System.Text.StringBuilder> object is 16 characters, and its default maximum capacity is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1b66-161">これらの既定値は、<xref:System.Text.StringBuilder.%23ctor> コンストラクターと <xref:System.Text.StringBuilder.%23ctor%28System.String%29> コンストラクターを呼び出す場合に使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-161">These default values are used if you call the <xref:System.Text.StringBuilder.%23ctor> and <xref:System.Text.StringBuilder.%23ctor%28System.String%29> constructors.</span></span>

 <span data-ttu-id="d1b66-162"><xref:System.Text.StringBuilder> オブジェクトの初期容量は、次の方法で明示的に定義できます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-162">You can explicitly define the initial capacity of a <xref:System.Text.StringBuilder> object in the following ways:</span></span>

-   <span data-ttu-id="d1b66-163">オブジェクトを作成するときに、`capacity` パラメーターを含む <xref:System.Text.StringBuilder> コンストラクターのいずれかを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-163">By calling any of the <xref:System.Text.StringBuilder> constructors that includes a `capacity` parameter when you create the object.</span></span>

-   <span data-ttu-id="d1b66-164">新しい値を <xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType> プロパティに明示的に代入して、既存の <xref:System.Text.StringBuilder> オブジェクトを展開する。</span><span class="sxs-lookup"><span data-stu-id="d1b66-164">By explicitly assigning a new value to the <xref:System.Text.StringBuilder.Capacity%2A?displayProperty=nameWithType> property to expand an existing <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="d1b66-165">新しい容量が既存の容量より小さい場合、または <xref:System.Text.StringBuilder> オブジェクトの最大容量より大きい場合、プロパティは例外をスローすることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-165">Note that the property throws an exception if the new capacity is less than the existing capacity or greater than the <xref:System.Text.StringBuilder> object's maximum capacity.</span></span>

-   <span data-ttu-id="d1b66-166">新しい容量で <xref:System.Text.StringBuilder.EnsureCapacity%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-166">By calling the <xref:System.Text.StringBuilder.EnsureCapacity%2A?displayProperty=nameWithType> method with the new capacity.</span></span> <span data-ttu-id="d1b66-167">新しい容量は、<xref:System.Text.StringBuilder> オブジェクトの最大容量を超えないようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-167">The new capacity must not be greater than the <xref:System.Text.StringBuilder> object's maximum capacity.</span></span> <span data-ttu-id="d1b66-168">ただし、<xref:System.Text.StringBuilder.Capacity%2A> プロパティへの割り当てとは異なり、必要な新しい容量が既存の容量よりも少ない場合、<xref:System.Text.StringBuilder.EnsureCapacity%2A> は例外をスローしません。この場合、メソッドの呼び出しは無効です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-168">However, unlike an assignment to the <xref:System.Text.StringBuilder.Capacity%2A> property, <xref:System.Text.StringBuilder.EnsureCapacity%2A> does not throw an exception if the desired new capacity is less than the existing capacity; in this case, the method call has no effect.</span></span>

 <span data-ttu-id="d1b66-169">コンストラクター呼び出しの <xref:System.Text.StringBuilder> オブジェクトに割り当てられた文字列の長さが、既定の容量または指定された容量のいずれかを超えた場合、<xref:System.Text.StringBuilder.Capacity%2A> プロパティは `value` パラメーターで指定された文字列の長さに設定されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-169">If the length of the string assigned to the <xref:System.Text.StringBuilder> object in the constructor call exceeds either the default capacity or the specified capacity, the <xref:System.Text.StringBuilder.Capacity%2A> property is set to the length of the string specified with the `value` parameter.</span></span>

 <span data-ttu-id="d1b66-170"><xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29> コンストラクターを呼び出すことによって、<xref:System.Text.StringBuilder> オブジェクトの最大容量を明示的に定義できます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-170">You can explicitly define the maximum capacity of a <xref:System.Text.StringBuilder> object by calling the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29> constructor.</span></span> <span data-ttu-id="d1b66-171"><xref:System.Text.StringBuilder.MaxCapacity%2A> プロパティに新しい値を割り当てることによって最大容量を変更することはできません。これは読み取り専用であるためです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-171">You can't change the maximum capacity by assigning a new value to the <xref:System.Text.StringBuilder.MaxCapacity%2A> property, because it is read-only.</span></span>

 <span data-ttu-id="d1b66-172">前のセクションで示したように、既存の容量が不十分な場合は、追加のメモリが割り当てられ、<xref:System.Text.StringBuilder> オブジェクトの容量が <xref:System.Text.StringBuilder.MaxCapacity%2A> プロパティで定義されている値まで倍増します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-172">As the previous section shows, whenever the existing capacity is inadequate, additional memory is allocated and the capacity of a <xref:System.Text.StringBuilder> object doubles up to the value defined by the <xref:System.Text.StringBuilder.MaxCapacity%2A> property.</span></span>

 <span data-ttu-id="d1b66-173">一般に、既定の容量と最大容量は、ほとんどのアプリに適しています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-173">In general, the default capacity and maximum capacity are adequate for most apps.</span></span> <span data-ttu-id="d1b66-174">次の条件に該当する場合は、これらの値を設定することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-174">You might consider setting these values under the following conditions:</span></span>

-   <span data-ttu-id="d1b66-175"><xref:System.Text.StringBuilder> オブジェクトの最終的なサイズが非常に大きくなる可能性が高い場合、通常は数 mb を超えています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-175">If the eventual size of the <xref:System.Text.StringBuilder> object is likely to grow exceedingly large, typically in excess of several megabytes.</span></span> <span data-ttu-id="d1b66-176">この場合、初期の <xref:System.Text.StringBuilder.Capacity%2A> プロパティを非常に大きな値に設定すると、メモリの再割り当て回数が多すぎる必要がなくなるため、パフォーマンスが向上する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-176">In this case, there may be some performance benefit from setting the initial <xref:System.Text.StringBuilder.Capacity%2A> property to a significantly high value to eliminate the need for too many memory reallocations.</span></span>

-   <span data-ttu-id="d1b66-177">アプリがメモリが限られているシステムで実行されている場合。</span><span class="sxs-lookup"><span data-stu-id="d1b66-177">If your app is running on a system with limited memory.</span></span> <span data-ttu-id="d1b66-178">この場合、メモリの制約がある環境で実行される可能性のある大きな文字列をアプリが処理している場合は、<xref:System.Text.StringBuilder.MaxCapacity%2A> プロパティを <xref:System.Int32.MaxValue?displayProperty=nameWithType> より小さい値に設定することを検討してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-178">In this case, you may want to consider setting the <xref:System.Text.StringBuilder.MaxCapacity%2A> property to less than <xref:System.Int32.MaxValue?displayProperty=nameWithType> if your app is handling large strings that may cause it to execute in a memory-constrained environment.</span></span>

<a name="Instantiating"></a>
## <a name="instantiating-a-stringbuilder-object"></a><span data-ttu-id="d1b66-179">StringBuilder オブジェクトのインスタンス化</span><span class="sxs-lookup"><span data-stu-id="d1b66-179">Instantiating a StringBuilder object</span></span>
 <span data-ttu-id="d1b66-180">次の表に示すように、6つのオーバーロードされたクラスコンストラクターのいずれかを呼び出すことによって、<xref:System.Text.StringBuilder> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-180">You instantiate a <xref:System.Text.StringBuilder> object by calling one of its six overloaded class constructors, which are listed in the following table.</span></span> <span data-ttu-id="d1b66-181">3つのコンストラクターは、値が空の文字列である <xref:System.Text.StringBuilder> オブジェクトをインスタンス化しますが、その <xref:System.Text.StringBuilder.Capacity%2A> と <xref:System.Text.StringBuilder.MaxCapacity%2A> 値は異なる方法で設定します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-181">Three of the constructors instantiate a <xref:System.Text.StringBuilder> object whose value is an empty string, but set its <xref:System.Text.StringBuilder.Capacity%2A> and <xref:System.Text.StringBuilder.MaxCapacity%2A> values differently.</span></span> <span data-ttu-id="d1b66-182">残りの3つのコンストラクターは、特定の文字列値と容量を持つ <xref:System.Text.StringBuilder> オブジェクトを定義します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-182">The remaining three constructors define a <xref:System.Text.StringBuilder> object that has a specific string value and capacity.</span></span> <span data-ttu-id="d1b66-183">3つのコンストラクターのうち2つは <xref:System.Int32.MaxValue?displayProperty=nameWithType>の既定の最大容量を使用し、3番目のコンストラクターでは最大容量を設定できます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-183">Two of the three constructors use the default maximum capacity of <xref:System.Int32.MaxValue?displayProperty=nameWithType>, whereas the third allows you to set the maximum capacity.</span></span>

|<span data-ttu-id="d1b66-184">コンストラクター</span><span class="sxs-lookup"><span data-stu-id="d1b66-184">Constructor</span></span>|<span data-ttu-id="d1b66-185">文字列値</span><span class="sxs-lookup"><span data-stu-id="d1b66-185">String value</span></span>|<span data-ttu-id="d1b66-186">容量</span><span class="sxs-lookup"><span data-stu-id="d1b66-186">Capacity</span></span>|<span data-ttu-id="d1b66-187">最大容量</span><span class="sxs-lookup"><span data-stu-id="d1b66-187">Maximum capacity</span></span>|
|-----------------|------------------|--------------|----------------------|
|<xref:System.Text.StringBuilder.%23ctor>|<xref:System.String.Empty?displayProperty=nameWithType>|<span data-ttu-id="d1b66-188">16</span><span class="sxs-lookup"><span data-stu-id="d1b66-188">16</span></span>|<xref:System.Int32.MaxValue?displayProperty=nameWithType>|
|<xref:System.Text.StringBuilder.%23ctor%28System.Int32%29>|<xref:System.String.Empty?displayProperty=nameWithType>|<span data-ttu-id="d1b66-189">`capacity` パラメーターによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-189">Defined by the `capacity` parameter</span></span>|<xref:System.Int32.MaxValue?displayProperty=nameWithType>|
|<xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29>|<xref:System.String.Empty?displayProperty=nameWithType>|<span data-ttu-id="d1b66-190">`capacity` パラメーターによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-190">Defined by the `capacity` parameter</span></span>|<span data-ttu-id="d1b66-191">`maxCapacity` パラメーターによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-191">Defined by the `maxCapacity` parameter</span></span>|
|<xref:System.Text.StringBuilder.%23ctor%28System.String%29>|<span data-ttu-id="d1b66-192">`value` パラメーターによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-192">Defined by the `value` parameter</span></span>|<span data-ttu-id="d1b66-193">16または `value`。</span><span class="sxs-lookup"><span data-stu-id="d1b66-193">16 or `value`.</span></span> <span data-ttu-id="d1b66-194"><xref:System.String.Length%2A>のいずれか大きい方</span><span class="sxs-lookup"><span data-stu-id="d1b66-194"><xref:System.String.Length%2A>, whichever is greater</span></span>|<xref:System.Int32.MaxValue?displayProperty=nameWithType>|
|<xref:System.Text.StringBuilder.%23ctor%28System.String%2CSystem.Int32%29>|<span data-ttu-id="d1b66-195">`value` パラメーターによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-195">Defined by the `value` parameter</span></span>|<span data-ttu-id="d1b66-196">`capacity` パラメーターまたは `value`によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-196">Defined by the `capacity` parameter or `value`.</span></span> <span data-ttu-id="d1b66-197"><xref:System.String.Length%2A>のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="d1b66-197"><xref:System.String.Length%2A>, whichever is greater.</span></span>|<xref:System.Int32.MaxValue?displayProperty=nameWithType>|
|<xref:System.Text.StringBuilder.%23ctor%28System.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>|<span data-ttu-id="d1b66-198">`value` によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-198">Defined by `value`.</span></span> <span data-ttu-id="d1b66-199"><xref:System.String.Substring%2A>(`startIndex`, `length`)</span><span class="sxs-lookup"><span data-stu-id="d1b66-199"><xref:System.String.Substring%2A>(`startIndex`, `length`)</span></span>|<span data-ttu-id="d1b66-200">`capacity` パラメーターまたは `value`によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-200">Defined by the `capacity` parameter or `value`.</span></span> <span data-ttu-id="d1b66-201"><xref:System.String.Length%2A>のいずれか大きい方。</span><span class="sxs-lookup"><span data-stu-id="d1b66-201"><xref:System.String.Length%2A>, whichever is greater.</span></span>|<span data-ttu-id="d1b66-202">`maxCapacity` パラメーターによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-202">Defined by the `maxCapacity` parameter</span></span>|

 <span data-ttu-id="d1b66-203">次の例では、これらのコンストラクターの3つのオーバーロードを使用して、<xref:System.Text.StringBuilder> オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-203">The following example uses three of these constructor overloads to instantiate <xref:System.Text.StringBuilder> objects.</span></span>

 [!code-csharp[System.Text.StringBuilder.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/instantiate1.cs#6)]
 [!code-vb[System.Text.StringBuilder.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/instantiate1.vb#6)]

<a name="Calling"></a>
## <a name="calling-stringbuilder-methods"></a><span data-ttu-id="d1b66-204">StringBuilder メソッドの呼び出し</span><span class="sxs-lookup"><span data-stu-id="d1b66-204">Calling StringBuilder methods</span></span>
 <span data-ttu-id="d1b66-205"><xref:System.Text.StringBuilder> インスタンスの文字列を変更するメソッドのほとんどは、その同じインスタンスへの参照を返します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-205">Most of the methods that modify the string in a <xref:System.Text.StringBuilder> instance return a reference to that same instance.</span></span> <span data-ttu-id="d1b66-206">これにより、次の2つの方法で <xref:System.Text.StringBuilder> メソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-206">This enables you to call <xref:System.Text.StringBuilder> methods in two ways:</span></span>

-   <span data-ttu-id="d1b66-207">次の例に示すように、個々のメソッドを呼び出し、戻り値を無視することができます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-207">You can make individual method calls and ignore the return value, as the following example does.</span></span>

     [!code-csharp[System.Text.StringBuilder.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/call1.cs#4)]
     [!code-vb[System.Text.StringBuilder.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/call1.vb#4)]

-   <span data-ttu-id="d1b66-208">1つのステートメントで一連のメソッド呼び出しを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-208">You can make a series of method calls in a single statement.</span></span> <span data-ttu-id="d1b66-209">これは、連続する操作を連結する1つのステートメントを記述する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-209">This can be convenient if you want to write a single statement that chains successive operations.</span></span> <span data-ttu-id="d1b66-210">次の例では、前の例の3つのメソッド呼び出しを1行のコードに統合しています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-210">The following example consolidates three method calls from the previous example into a single line of code.</span></span>

     [!code-csharp[System.Text.StringBuilder.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/call2.cs#5)]
     [!code-vb[System.Text.StringBuilder.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/call2.vb#5)]

<a name="Operations"></a>
## <a name="performing-stringbuilder-operations"></a><span data-ttu-id="d1b66-211">StringBuilder 操作の実行</span><span class="sxs-lookup"><span data-stu-id="d1b66-211">Performing StringBuilder operations</span></span>
 <span data-ttu-id="d1b66-212"><xref:System.Text.StringBuilder> クラスのメソッドを使用して、<xref:System.Text.StringBuilder> オブジェクト内の文字の反復、追加、削除、または変更を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-212">You can use the methods of the <xref:System.Text.StringBuilder> class to iterate, add, delete, or modify characters in a <xref:System.Text.StringBuilder> object.</span></span>

<a name="Iterating"></a>
### <a name="iterating-stringbuilder-characters"></a><span data-ttu-id="d1b66-213">StringBuilder 文字の反復処理</span><span class="sxs-lookup"><span data-stu-id="d1b66-213">Iterating StringBuilder characters</span></span>
 <span data-ttu-id="d1b66-214"><xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> プロパティを使用して、<xref:System.Text.StringBuilder> オブジェクト内の文字にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-214">You can access the characters in a <xref:System.Text.StringBuilder> object by using the <xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d1b66-215">でC#は、<xref:System.Text.StringBuilder.Chars%2A> はインデクサーです。Visual Basic では、これは <xref:System.Text.StringBuilder> クラスの既定のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-215">In C#, <xref:System.Text.StringBuilder.Chars%2A> is an indexer; in Visual Basic, it is the default property of the <xref:System.Text.StringBuilder> class.</span></span> <span data-ttu-id="d1b66-216">これにより、<xref:System.Text.StringBuilder.Chars%2A> プロパティを明示的に参照せずに、インデックスのみを使用して個々の文字を設定または取得することができます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-216">This enables you to set or retrieve individual characters by using their index only, without explicitly referencing the <xref:System.Text.StringBuilder.Chars%2A> property.</span></span> <span data-ttu-id="d1b66-217"><xref:System.Text.StringBuilder> オブジェクト内の文字は、インデックス 0 (ゼロ) から開始し、<xref:System.Text.StringBuilder.Length%2A>-1 のインデックス作成を続行します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-217">Characters in a <xref:System.Text.StringBuilder> object begin at index 0 (zero) and continue to index <xref:System.Text.StringBuilder.Length%2A> - 1.</span></span>

 <span data-ttu-id="d1b66-218">次の例は、<xref:System.Text.StringBuilder.Chars%2A> プロパティを示しています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-218">The following example illustrates the <xref:System.Text.StringBuilder.Chars%2A> property.</span></span> <span data-ttu-id="d1b66-219"><xref:System.Text.StringBuilder> オブジェクトに10個の乱数を追加し、各文字を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-219">It appends ten random numbers to a <xref:System.Text.StringBuilder> object, and then iterates each character.</span></span> <span data-ttu-id="d1b66-220">文字の Unicode カテゴリが <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>場合は、数値を1つ減らします (または、値が0の場合は、数値を9に変更します)。</span><span class="sxs-lookup"><span data-stu-id="d1b66-220">If the character's Unicode category is <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber?displayProperty=nameWithType>, it decreases the number by 1 (or changes the number to 9 if its value is 0).</span></span> <span data-ttu-id="d1b66-221">この例では、個々の文字の値が変更された前と後の両方で、<xref:System.Text.StringBuilder> オブジェクトの内容が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-221">The example displays the contents of the <xref:System.Text.StringBuilder> object both before and after the values of individual characters were changed.</span></span>

 [!code-csharp[System.Text.StringBuilder.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/chars1.cs#7)]
 [!code-vb[System.Text.StringBuilder.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/chars1.vb#7)]

[!INCLUDE[stringbuilder-performance-note](~/includes/stringbuilder-perf-note.md)]

<a name="Adding"></a>
### <a name="adding-text-to-a-stringbuilder-object"></a><span data-ttu-id="d1b66-222">StringBuilder オブジェクトへのテキストの追加</span><span class="sxs-lookup"><span data-stu-id="d1b66-222">Adding text to a StringBuilder object</span></span>
 <span data-ttu-id="d1b66-223"><xref:System.Text.StringBuilder> クラスには、<xref:System.Text.StringBuilder> オブジェクトの内容を拡張するための次のメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-223">The <xref:System.Text.StringBuilder> class includes the following methods for expanding the contents of a <xref:System.Text.StringBuilder> object:</span></span>

-   <span data-ttu-id="d1b66-224"><xref:System.Text.StringBuilder.Append%2A> メソッドは、文字列、部分文字列、文字配列、文字配列の一部、複数回繰り返される1文字、またはプリミティブデータ型の文字列形式を <xref:System.Text.StringBuilder> オブジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-224">The <xref:System.Text.StringBuilder.Append%2A> method appends a string, a substring, a character array, a portion of a character array, a single character repeated multiple times, or the string representation of a primitive data type to a <xref:System.Text.StringBuilder> object.</span></span>

-   <span data-ttu-id="d1b66-225"><xref:System.Text.StringBuilder.AppendLine%2A> メソッドは、行終端記号または文字列を行終端記号と共に <xref:System.Text.StringBuilder> オブジェクトに追加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-225">The <xref:System.Text.StringBuilder.AppendLine%2A> method appends a line terminator or a string along with a line terminator to a <xref:System.Text.StringBuilder> object.</span></span>

-   <span data-ttu-id="d1b66-226"><xref:System.Text.StringBuilder.AppendFormat%2A> メソッドは、<xref:System.Text.StringBuilder> オブジェクトに[複合書式指定文字列](~/docs/standard/base-types/composite-formatting.md)を追加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-226">The <xref:System.Text.StringBuilder.AppendFormat%2A> method appends a [composite format string](~/docs/standard/base-types/composite-formatting.md) to a <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="d1b66-227">結果文字列に含まれるオブジェクトの文字列形式は、現在のシステムカルチャまたは指定されたカルチャの書式指定規則を反映できます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-227">The string representations of objects included in the result string can reflect the formatting conventions of the current system culture or a specified culture.</span></span>

-   <span data-ttu-id="d1b66-228"><xref:System.Text.StringBuilder.Insert%2A> メソッドは、文字列、部分文字列、複数回の文字列の繰り返し、文字配列、文字配列の一部、または <xref:System.Text.StringBuilder> オブジェクト内の指定位置にあるプリミティブデータ型の文字列形式を挿入します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-228">The <xref:System.Text.StringBuilder.Insert%2A> method inserts a string, a substring, multiple repetitions of a string, a character array, a portion of a character array, or the string representation of a primitive data type at a specified position in the <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="d1b66-229">位置は、0から始まるインデックスによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-229">The position is defined by a zero-based index.</span></span>

 <span data-ttu-id="d1b66-230">次の例では、<xref:System.Text.StringBuilder.Append%2A>、<xref:System.Text.StringBuilder.AppendLine%2A>、<xref:System.Text.StringBuilder.AppendFormat%2A>、および <xref:System.Text.StringBuilder.Insert%2A> の各メソッドを使用して、<xref:System.Text.StringBuilder> オブジェクトのテキストを展開します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-230">The following example uses the <xref:System.Text.StringBuilder.Append%2A>, <xref:System.Text.StringBuilder.AppendLine%2A>, <xref:System.Text.StringBuilder.AppendFormat%2A>, and <xref:System.Text.StringBuilder.Insert%2A> methods to expand the text of a <xref:System.Text.StringBuilder> object.</span></span>

 [!code-csharp[System.Text.StringBuilder.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/expand1.cs#9)]
 [!code-vb[System.Text.StringBuilder.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/expand1.vb#9)]

<a name="Deleting"></a>
### <a name="deleting-text-from-a-stringbuilder-object"></a><span data-ttu-id="d1b66-231">StringBuilder オブジェクトからのテキストの削除</span><span class="sxs-lookup"><span data-stu-id="d1b66-231">Deleting text from a StringBuilder object</span></span>
 <span data-ttu-id="d1b66-232"><xref:System.Text.StringBuilder> クラスには、現在の <xref:System.Text.StringBuilder> インスタンスのサイズを縮小できるメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-232">The <xref:System.Text.StringBuilder> class includes methods that can reduce the size of the current <xref:System.Text.StringBuilder> instance.</span></span> <span data-ttu-id="d1b66-233"><xref:System.Text.StringBuilder.Clear%2A> メソッドは、すべての文字を削除し、<xref:System.Text.StringBuilder.Length%2A> プロパティを0に設定します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-233">The <xref:System.Text.StringBuilder.Clear%2A> method removes all characters and sets the <xref:System.Text.StringBuilder.Length%2A> property to zero.</span></span> <span data-ttu-id="d1b66-234"><xref:System.Text.StringBuilder.Remove%2A> メソッドは、特定のインデックス位置から指定された数の文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-234">The <xref:System.Text.StringBuilder.Remove%2A> method deletes a specified number of characters starting at a particular index position.</span></span> <span data-ttu-id="d1b66-235">また、<xref:System.Text.StringBuilder.Length%2A> プロパティを現在のインスタンスの長さよりも小さい値に設定することにより、<xref:System.Text.StringBuilder> オブジェクトの末尾から文字を削除できます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-235">In addition, you can remove characters from the end of a <xref:System.Text.StringBuilder> object by setting its <xref:System.Text.StringBuilder.Length%2A> property to a value that is less than the length of the current instance.</span></span>

 <span data-ttu-id="d1b66-236">次の例では、<xref:System.Text.StringBuilder> オブジェクトから一部のテキストを削除し、その結果の容量、最大容量、および長さのプロパティ値を表示した後、<xref:System.Text.StringBuilder.Clear%2A> メソッドを呼び出して、<xref:System.Text.StringBuilder> オブジェクトからすべての文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-236">The following example removes some of the text from a <xref:System.Text.StringBuilder> object, displays its resulting capacity, maximum capacity, and length property values, and then calls the <xref:System.Text.StringBuilder.Clear%2A> method to remove all the characters from the <xref:System.Text.StringBuilder> object.</span></span>

 [!code-csharp[System.Text.StringBuilder.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/delete1.cs#10)]
 [!code-vb[System.Text.StringBuilder.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/delete1.vb#10)]

<a name="Modifying"></a>
### <a name="modifying-the-text-in-a-stringbuilder-object"></a><span data-ttu-id="d1b66-237">StringBuilder オブジェクト内のテキストの変更</span><span class="sxs-lookup"><span data-stu-id="d1b66-237">Modifying the text in a StringBuilder object</span></span>
 <span data-ttu-id="d1b66-238"><xref:System.Text.StringBuilder.Replace%2A?displayProperty=nameWithType> メソッドは、<xref:System.Text.StringBuilder> オブジェクト全体または特定の文字範囲内の文字または文字列のすべての出現箇所を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-238">The <xref:System.Text.StringBuilder.Replace%2A?displayProperty=nameWithType> method replaces all occurrences of a character or a string in the entire <xref:System.Text.StringBuilder> object or in a particular character range.</span></span> <span data-ttu-id="d1b66-239">次の例では、<xref:System.Text.StringBuilder.Replace%2A> メソッドを使用して、<xref:System.Text.StringBuilder> オブジェクト内のすべての感嘆符 (!) を疑問符 (?) に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-239">The following example uses the <xref:System.Text.StringBuilder.Replace%2A> method to replace all exclamation points (!) with question marks (?) in the <xref:System.Text.StringBuilder> object.</span></span>

 [!code-csharp[System.Text.StringBuilder.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/replace1.cs#11)]
 [!code-vb[System.Text.StringBuilder.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/replace1.vb#11)]

<a name="Searching"></a>
## <a name="searching-the-text-in-a-stringbuilder-object"></a><span data-ttu-id="d1b66-240">StringBuilder オブジェクト内のテキストの検索</span><span class="sxs-lookup"><span data-stu-id="d1b66-240">Searching the text in a StringBuilder object</span></span>
 <span data-ttu-id="d1b66-241"><xref:System.Text.StringBuilder> クラスには、オブジェクト内で特定の文字または部分文字列を検索できるようにするために、<xref:System.String> クラスによって提供される <xref:System.String.Contains%2A?displayProperty=nameWithType>、<xref:System.String.IndexOf%2A?displayProperty=nameWithType>、および <xref:System.String.StartsWith%2A?displayProperty=nameWithType> メソッドと同様のメソッドは含まれません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-241">The <xref:System.Text.StringBuilder> class does not include methods similar to the <xref:System.String.Contains%2A?displayProperty=nameWithType>, <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, and <xref:System.String.StartsWith%2A?displayProperty=nameWithType> methods provided by the <xref:System.String> class, which allow you to search the object for a particular character or a substring.</span></span> <span data-ttu-id="d1b66-242">部分文字列の存在または開始文字の位置を特定するには、文字列検索メソッドまたは正規表現メソッドのいずれかを使用して <xref:System.String> 値を検索する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-242">Determining the presence or starting character position of a substring requires that you search a <xref:System.String> value by using either a string search method or a regular expression method.</span></span> <span data-ttu-id="d1b66-243">このような検索を実装するには、次の表に示すように4つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-243">There are four ways to implement such searches, as the following table shows.</span></span>

|<span data-ttu-id="d1b66-244">手法</span><span class="sxs-lookup"><span data-stu-id="d1b66-244">Technique</span></span>|<span data-ttu-id="d1b66-245">プロフェッショナル</span><span class="sxs-lookup"><span data-stu-id="d1b66-245">Pros</span></span>|<span data-ttu-id="d1b66-246">マイナス</span><span class="sxs-lookup"><span data-stu-id="d1b66-246">Cons</span></span>|
|---------------|----------|----------|
|<span data-ttu-id="d1b66-247">文字列値を <xref:System.Text.StringBuilder> オブジェクトに追加する前に検索します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-247">Search string values before adding them to the <xref:System.Text.StringBuilder> object.</span></span>|<span data-ttu-id="d1b66-248">部分文字列が存在するかどうかを判断する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-248">Useful for determining whether a substring exists.</span></span>|<span data-ttu-id="d1b66-249">は、部分文字列のインデックス位置が重要な場合は使用できません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-249">Cannot be used when the index position of a substring is important.</span></span>|
|<span data-ttu-id="d1b66-250"><xref:System.Text.StringBuilder.ToString%2A> を呼び出し、返された <xref:System.String> オブジェクトを検索します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-250">Call <xref:System.Text.StringBuilder.ToString%2A> and search the returned <xref:System.String> object.</span></span>|<span data-ttu-id="d1b66-251">すべてのテキストを <xref:System.Text.StringBuilder> オブジェクトに割り当ててから、その変更を開始する場合は、簡単に使用できます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-251">Easy to use if you assign all the text to a <xref:System.Text.StringBuilder> object, and then begin to modify it.</span></span>|<span data-ttu-id="d1b66-252">すべてのテキストを <xref:System.Text.StringBuilder> オブジェクトに追加する前に変更を行う必要がある場合は、<xref:System.Text.StringBuilder.ToString%2A> を繰り返し呼び出すのが面倒です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-252">Cumbersome to repeatedly call <xref:System.Text.StringBuilder.ToString%2A> if you must make modifications before all text is added to the <xref:System.Text.StringBuilder> object.</span></span><br /><br /> <span data-ttu-id="d1b66-253">変更を行う場合は、<xref:System.Text.StringBuilder> オブジェクトのテキストの末尾から作業することを忘れないでください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-253">You must remember to work from the end of the <xref:System.Text.StringBuilder> object's text if you're making changes.</span></span>|
|<span data-ttu-id="d1b66-254"><xref:System.Text.StringBuilder.Chars%2A> プロパティを使用して、文字の範囲を順番に検索します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-254">Use the <xref:System.Text.StringBuilder.Chars%2A> property to sequentially search a range of characters.</span></span>|<span data-ttu-id="d1b66-255">個々の文字または小さい部分文字列に関心がある場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-255">Useful if you're concerned with individual characters or a small substring.</span></span>|<span data-ttu-id="d1b66-256">検索する文字数が多い場合、または検索ロジックが複雑な場合には煩雑です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-256">Cumbersome if the number of characters to search is large or if the search logic is complex.</span></span><br /><br /><span data-ttu-id="d1b66-257">メソッドの呼び出しを繰り返すことによって非常に大きな増加したオブジェクトのパフォーマンスが非常に低下します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-257">Results in very poor performance for objects that have grown very large through repeated method calls.</span></span>  |
|<span data-ttu-id="d1b66-258"><xref:System.Text.StringBuilder> オブジェクトを <xref:System.String> オブジェクトに変換し、<xref:System.String> オブジェクトに対して変更を実行します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-258">Convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object, and perform modifications on the <xref:System.String> object.</span></span>|<span data-ttu-id="d1b66-259">変更の数が少ない場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-259">Useful if the number of modifications is small.</span></span>|<span data-ttu-id="d1b66-260">変更の数が多い場合は、<xref:System.Text.StringBuilder> クラスのパフォーマンス上の利点を否定します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-260">Negates the performance benefit of the <xref:System.Text.StringBuilder> class if the number of modifications is large.</span></span>|

 <span data-ttu-id="d1b66-261">これらの手法についてさらに詳しく説明します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-261">Let's examine these techniques in greater detail.</span></span>

-   <span data-ttu-id="d1b66-262">検索の目的が特定の部分文字列が存在するかどうかを判断する場合 (つまり、部分文字列の位置に関心がない場合) は、文字列を <xref:System.Text.StringBuilder> オブジェクトに格納する前に検索できます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-262">If the goal of the search is to determine whether a particular substring exists (that is, if you aren't interested in the position of the substring), you can search strings before storing them in the <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="d1b66-263">次の例では、考えられる1つの実装を示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-263">The following example provides one possible implementation.</span></span> <span data-ttu-id="d1b66-264">また、<xref:System.Text.StringBuilder> オブジェクトへの参照と、文字列内で検索する部分文字列をコンストラクターに渡す `StringBuilderFinder` クラスを定義します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-264">It defines a `StringBuilderFinder` class whose constructor is passed a reference to a <xref:System.Text.StringBuilder> object and the substring to find in the string.</span></span> <span data-ttu-id="d1b66-265">この例では、記録された気温が華氏と摂氏のどちらであるかを判断し、<xref:System.Text.StringBuilder> オブジェクトの先頭に適切な紹介文を追加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-265">In this case, the example tries to determine whether recorded temperatures are in Fahrenheit or Celsius, and adds the appropriate introductory text to the beginning of the <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="d1b66-266">ランダムな数値ジェネレーターを使用して、摂氏または華氏でデータを含む配列を選択します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-266">A random number generator is used to select an array that contains data in either degrees Celsius or degrees Fahrenheit.</span></span>

     [!code-csharp[System.Text.StringBuilder.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/pattern1.cs#12)]
     [!code-vb[System.Text.StringBuilder.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/pattern1.vb#12)]

-   <span data-ttu-id="d1b66-267"><xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> メソッドを呼び出して、<xref:System.Text.StringBuilder> オブジェクトを <xref:System.String> オブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-267">Call the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object.</span></span> <span data-ttu-id="d1b66-268"><xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> や <xref:System.String.StartsWith%2A?displayProperty=nameWithType>などのメソッドを使用して文字列を検索することも、正規表現と <xref:System.Text.RegularExpressions.Regex> クラスを使用してパターンを検索することもできます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-268">You can search the string by using methods such as <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType> or <xref:System.String.StartsWith%2A?displayProperty=nameWithType>, or you can use regular expressions and the <xref:System.Text.RegularExpressions.Regex> class to search for patterns.</span></span> <span data-ttu-id="d1b66-269"><xref:System.Text.StringBuilder> と <xref:System.String> の両方のオブジェクトが文字を格納するために UTF-16 エンコードを使用するため、文字、部分文字列、および正規表現の一致のインデックス位置は、両方のオブジェクトで同じになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-269">Because both <xref:System.Text.StringBuilder> and <xref:System.String> objects use UTF-16 encoding to store characters, the index positions of characters, substrings, and regular expression matches are the same in both objects.</span></span> <span data-ttu-id="d1b66-270">これにより、<xref:System.Text.StringBuilder> メソッドを使用して、<xref:System.String> オブジェクト内のそのテキストと同じ位置で変更を加えることができます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-270">This enables you to use <xref:System.Text.StringBuilder> methods to make changes at the same position at which that text is found in the <xref:System.String> object.</span></span>

    > [!NOTE]
    >  <span data-ttu-id="d1b66-271">この方法を採用する場合は、<xref:System.Text.StringBuilder> オブジェクトを文字列に繰り返し変換する必要がないように、<xref:System.Text.StringBuilder> オブジェクトの末尾から先頭に作業する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-271">If you adopt this approach, you should work from the end of the <xref:System.Text.StringBuilder> object to its beginning so that you don't have to repeatedly convert the <xref:System.Text.StringBuilder> object to a string.</span></span>

     <span data-ttu-id="d1b66-272">このアプローチの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-272">The following example illustrates this approach.</span></span> <span data-ttu-id="d1b66-273"><xref:System.Text.StringBuilder> オブジェクトに、英語のアルファベットの各文字の4回の出現を格納します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-273">It stores four occurrences of each letter of the English alphabet in a <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="d1b66-274">次に、テキストを <xref:System.String> オブジェクトに変換し、正規表現を使用して各4文字のシーケンスの開始位置を識別します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-274">It then converts the text to a <xref:System.String> object and uses a regular expression to identify the starting position of each four-character sequence.</span></span> <span data-ttu-id="d1b66-275">最後に、最初のシーケンスを除く4文字の各シーケンスの前にアンダースコアを追加し、シーケンスの最初の文字を大文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-275">Finally, it adds an underscore before each four-character sequence except for the first sequence, and converts the first character of the sequence to uppercase.</span></span>

     [!code-csharp[System.Text.StringBuilder.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/pattern2.cs#13)]
     [!code-vb[System.Text.StringBuilder.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/pattern2.vb#13)]

-   <span data-ttu-id="d1b66-276"><xref:System.Text.StringBuilder> オブジェクト内の文字の範囲を順番に検索するには、<xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-276">Use the <xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> property to sequentially search a range of characters in a <xref:System.Text.StringBuilder> object.</span></span> <span data-ttu-id="d1b66-277">検索対象の文字数が多い場合や検索ロジックが特に複雑な場合、この方法は実用的ではない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-277">This approach may not be practical if the number of characters to be searched is large or the search logic is particularly complex.</span></span> <span data-ttu-id="d1b66-278">非常に大きい、チャンク化された <xref:System.Text.StringBuilder> オブジェクトに対する文字単位のインデックスベースのアクセスのパフォーマンスへの影響については、<xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> プロパティのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-278">For the performance implications of character-by-character index-based access for very large, chunked <xref:System.Text.StringBuilder> objects, see the documentation for the <xref:System.Text.StringBuilder.Chars%2A?displayProperty=nameWithType> property.</span></span>

     <span data-ttu-id="d1b66-279">次の例は、前の例と同じ機能ですが、実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-279">The following example is identical in functionality to the previous example but differs in implementation.</span></span> <span data-ttu-id="d1b66-280">また、<xref:System.Text.StringBuilder.Chars%2A> プロパティを使用して、文字値がいつ変更されたかを検出し、その位置にアンダースコアを挿入し、新しいシーケンスの最初の文字を大文字に変換します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-280">It uses the <xref:System.Text.StringBuilder.Chars%2A> property to detect when a character value has changed, inserts an underscore at that position, and converts the first character in the new sequence to uppercase.</span></span>

     [!code-csharp[System.Text.StringBuilder.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/pattern3.cs#14)]
     [!code-vb[System.Text.StringBuilder.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/pattern3.vb#14)]

-   <span data-ttu-id="d1b66-281">未変更のテキストをすべて <xref:System.Text.StringBuilder> オブジェクトに格納し、<xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> メソッドを呼び出して <xref:System.Text.StringBuilder> オブジェクトを <xref:System.String> オブジェクトに変換し、<xref:System.String> オブジェクトに対して変更を実行します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-281">Store all the unmodified text in the <xref:System.Text.StringBuilder> object, call the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object, and perform the modifications on the <xref:System.String> object.</span></span> <span data-ttu-id="d1b66-282">いくつかの変更がある場合は、この方法を使用できます。そうしないと、変更できない文字列を操作するコストが、<xref:System.Text.StringBuilder> オブジェクトを使用した場合のパフォーマンス上の利点を否定する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-282">You can use this approach if you have only a few modifications; otherwise, the cost of working with immutable strings may negate the performance benefits of using a <xref:System.Text.StringBuilder> object.</span></span>

     <span data-ttu-id="d1b66-283">次の例は、前の2つの例と同じ機能を備えていますが、実装によって異なります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-283">The following example is identical in functionality to the previous two examples but differs in implementation.</span></span> <span data-ttu-id="d1b66-284"><xref:System.Text.StringBuilder> オブジェクトを作成し、それを <xref:System.String> オブジェクトに変換した後、正規表現を使用して、文字列に対する残りのすべての変更を実行します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-284">It creates a <xref:System.Text.StringBuilder> object, converts it to a <xref:System.String> object, and then uses a regular expression to perform all remaining modifications on the string.</span></span> <span data-ttu-id="d1b66-285"><xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType> メソッドは、ラムダ式を使用して、一致するたびに置換を実行します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-285">The <xref:System.Text.RegularExpressions.Regex.Replace%28System.String%2CSystem.String%2CSystem.Text.RegularExpressions.MatchEvaluator%29?displayProperty=nameWithType> method uses a lambda expression to perform the replacement on each match.</span></span>

     [!code-csharp[System.Text.StringBuilder.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.class/cs/pattern4.cs#15)]
     [!code-vb[System.Text.StringBuilder.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.class/vb/pattern4.vb#15)]

<a name="Converting"></a>
## <a name="converting-the-stringbuilder-object-to-a-string"></a><span data-ttu-id="d1b66-286">StringBuilder オブジェクトを文字列に変換する</span><span class="sxs-lookup"><span data-stu-id="d1b66-286">Converting the StringBuilder object to a string</span></span>
 <span data-ttu-id="d1b66-287"><xref:System.Text.StringBuilder> オブジェクトで表される文字列を <xref:System.String> パラメーターを持つメソッドに渡すかそれをユーザー インターフェイスに表示するには、事前に <xref:System.Text.StringBuilder> オブジェクトを <xref:System.String> オブジェクトに変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-287">You must convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object before you can pass the string represented by the <xref:System.Text.StringBuilder> object to a method that has a <xref:System.String> parameter or display it in the user interface.</span></span> <span data-ttu-id="d1b66-288">この変換を実行するには、<xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-288">You perform this conversion by calling the <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d1b66-289">図については、前の例を参照してください。この例では、<xref:System.Text.StringBuilder.ToString%2A> メソッドを呼び出して、<xref:System.Text.StringBuilder> オブジェクトを文字列に変換し、正規表現メソッドに渡すことができるようにしています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-289">For an illustration, see the previous example, which calls the <xref:System.Text.StringBuilder.ToString%2A> method to convert a <xref:System.Text.StringBuilder> object to a string so that it can be passed to a regular expression method.</span></span>



## Examples
 <span data-ttu-id="d1b66-290">次の例では、<xref:System.Text.StringBuilder> クラスで定義されている多くのメソッドを呼び出す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-290">The following example shows how to call many of the methods defined by the <xref:System.Text.StringBuilder> class.</span></span>

 [!code-cpp[StringBuilder#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringBuilder/cpp/StringBuilder.cpp#1)]
 [!code-csharp[StringBuilder#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringBuilder/CS/StringBuilder.cs#1)]
 [!code-vb[StringBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringBuilder/VB/StringBuilder.vb#1)]

 ]]></format>
    </remarks>
    <block subset="none" type="usage"><para><span data-ttu-id="d1b66-291">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-291">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-292">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-292">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
    <altmember cref="T:System.String" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1b66-293">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class.</span><span class="sxs-lookup"><span data-stu-id="d1b66-293">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1b66-294">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class.</span><span class="sxs-lookup"><span data-stu-id="d1b66-294">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-295">このインスタンスの文字列値は <xref:System.String.Empty?displayProperty=nameWithType>に設定され、容量は実装固有の既定の容量に設定されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-295">The string value of this instance is set to <xref:System.String.Empty?displayProperty=nameWithType>, and the capacity is set to the implementation-specific default capacity.</span></span>



## Examples
 <span data-ttu-id="d1b66-296">次の例は、パラメーターを使用せずに <xref:System.Text.StringBuilder.%23ctor%2A> コンストラクターを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-296">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with no parameters.</span></span>

 [!code-cpp[System.Text.StringBuilder.Constructors#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#1)]
 [!code-csharp[System.Text.StringBuilder.Constructors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#1)]
 [!code-vb[System.Text.StringBuilder.Constructors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : int -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="d1b66-297">The suggested starting size of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-297">The suggested starting size of this instance.</span></span></param>
        <summary><span data-ttu-id="d1b66-298">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class using the specified capacity.</span><span class="sxs-lookup"><span data-stu-id="d1b66-298">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class using the specified capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-299">`capacity` パラメーターは、現在のインスタンスによって割り当てられたメモリに格納できる最大文字数を定義します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-299">The `capacity` parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</span></span> <span data-ttu-id="d1b66-300">この値は <xref:System.Text.StringBuilder.Capacity%2A> プロパティに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-300">Its value is assigned to the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span> <span data-ttu-id="d1b66-301">現在のインスタンスに格納されている文字数がこの `capacity` 値を超える場合、<xref:System.Text.StringBuilder> オブジェクトは、それを格納するために追加のメモリを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-301">If the number of characters to be stored in the current instance exceeds this `capacity` value, the <xref:System.Text.StringBuilder> object allocates additional memory to store them.</span></span>

 <span data-ttu-id="d1b66-302">このインスタンスの文字列値が <xref:System.String.Empty?displayProperty=nameWithType>に設定されています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-302">The string value of this instance is set to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1b66-303">`capacity` がゼロの場合は、実装固有の既定の容量が使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-303">If `capacity` is zero, the implementation-specific default capacity is used.</span></span>



## Examples
 <span data-ttu-id="d1b66-304">次の例は、指定された容量で <xref:System.Text.StringBuilder.%23ctor%2A> コンストラクターを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-304">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with a specified capacity.</span></span>

 [!code-cpp[System.Text.StringBuilder.Constructors#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#3)]
 [!code-csharp[System.Text.StringBuilder.Constructors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#3)]
 [!code-vb[System.Text.StringBuilder.Constructors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-305"><paramref name="capacity" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-305"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Text.StringBuilder.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : string -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-306">The string used to initialize the value of the instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-306">The string used to initialize the value of the instance.</span></span> <span data-ttu-id="d1b66-307">If <paramref name="value" /> is <see langword="null" />, the new <see cref="T:System.Text.StringBuilder" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />).</span><span class="sxs-lookup"><span data-stu-id="d1b66-307">If <paramref name="value" /> is <see langword="null" />, the new <see cref="T:System.Text.StringBuilder" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />).</span></span></param>
        <summary><span data-ttu-id="d1b66-308">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class using the specified string.</span><span class="sxs-lookup"><span data-stu-id="d1b66-308">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class using the specified string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-309">`value` が `null` の場合、新しい <xref:System.Text.StringBuilder> は空の文字列、つまり、<xref:System.String.Empty> を含みます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-309">If `value` is `null`, the new <xref:System.Text.StringBuilder> will contain the empty string (that is, it contains <xref:System.String.Empty>).</span></span>



## Examples
 <span data-ttu-id="d1b66-310">次の例は、指定された文字列を使用して <xref:System.Text.StringBuilder.%23ctor%2A> コンストラクターを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-310">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with the specified string.</span></span>

 [!code-cpp[System.Text.StringBuilder.Constructors#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#4)]
 [!code-csharp[System.Text.StringBuilder.Constructors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#4)]
 [!code-vb[System.Text.StringBuilder.Constructors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#4)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (int capacity, int maxCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, int32 maxCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, maxCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(int capacity, int maxCapacity);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : int * int -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder (capacity, maxCapacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="maxCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="d1b66-311">The suggested starting size of the <see cref="T:System.Text.StringBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-311">The suggested starting size of the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <param name="maxCapacity"><span data-ttu-id="d1b66-312">The maximum number of characters the current string can contain.</span><span class="sxs-lookup"><span data-stu-id="d1b66-312">The maximum number of characters the current string can contain.</span></span></param>
        <summary><span data-ttu-id="d1b66-313">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class that starts with a specified capacity and can grow to a specified maximum.</span><span class="sxs-lookup"><span data-stu-id="d1b66-313">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class that starts with a specified capacity and can grow to a specified maximum.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-314">`capacity` パラメーターは、現在のインスタンスによって割り当てられたメモリに格納できる最大文字数を定義します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-314">The `capacity` parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</span></span> <span data-ttu-id="d1b66-315">この値は <xref:System.Text.StringBuilder.Capacity%2A> プロパティに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-315">Its value is assigned to the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span> <span data-ttu-id="d1b66-316">現在のインスタンスに格納されている文字数がこの `capacity` 値を超える場合、<xref:System.Text.StringBuilder> オブジェクトは、それを格納するために追加のメモリを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-316">If the number of characters to be stored in the current instance exceeds this `capacity` value, the <xref:System.Text.StringBuilder> object allocates additional memory to store them.</span></span>

 <span data-ttu-id="d1b66-317">`capacity` がゼロの場合は、実装固有の既定の容量が使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-317">If `capacity` is zero, the implementation-specific default capacity is used.</span></span>

 <span data-ttu-id="d1b66-318">`maxCapacity` プロパティは、現在のインスタンスが保持できる最大文字数を定義します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-318">The `maxCapacity` property defines the maximum number of characters that the current instance can hold.</span></span> <span data-ttu-id="d1b66-319">この値は <xref:System.Text.StringBuilder.MaxCapacity%2A> プロパティに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-319">Its value is assigned to the <xref:System.Text.StringBuilder.MaxCapacity%2A> property.</span></span> <span data-ttu-id="d1b66-320">現在のインスタンスに格納される文字数がこの `maxCapacity` 値を超える場合、<xref:System.Text.StringBuilder> オブジェクトは追加のメモリを割り当てませんが、代わりに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-320">If the number of characters to be stored in the current instance exceeds this `maxCapacity` value, the <xref:System.Text.StringBuilder> object does not allocate additional memory, but instead throws an exception.</span></span>



## Examples
 <span data-ttu-id="d1b66-321">次の例は、指定された容量と最大容量を使用して <xref:System.Text.StringBuilder.%23ctor%2A> コンストラクターを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-321">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with a specified capacity and maximum capacity.</span></span>

 [!code-cpp[System.Text.StringBuilder.Constructors#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#5)]
 [!code-csharp[System.Text.StringBuilder.Constructors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#5)]
 [!code-vb[System.Text.StringBuilder.Constructors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#5)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-322"><paramref name="maxCapacity" /> is less than one, <paramref name="capacity" /> is less than zero, or <paramref name="capacity" /> is greater than <paramref name="maxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-322"><paramref name="maxCapacity" /> is less than one, <paramref name="capacity" /> is less than zero, or <paramref name="capacity" /> is greater than <paramref name="maxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-323">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-323">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-324">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-324">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="P:System.Text.StringBuilder.Capacity" />
        <altmember cref="P:System.Text.StringBuilder.MaxCapacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (string value, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(System::String ^ value, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : string * int -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder (value, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-325">The string used to initialize the value of the instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-325">The string used to initialize the value of the instance.</span></span> <span data-ttu-id="d1b66-326">If <paramref name="value" /> is <see langword="null" />, the new <see cref="T:System.Text.StringBuilder" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />).</span><span class="sxs-lookup"><span data-stu-id="d1b66-326">If <paramref name="value" /> is <see langword="null" />, the new <see cref="T:System.Text.StringBuilder" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />).</span></span></param>
        <param name="capacity"><span data-ttu-id="d1b66-327">The suggested starting size of the <see cref="T:System.Text.StringBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-327">The suggested starting size of the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <summary><span data-ttu-id="d1b66-328">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class using the specified string and capacity.</span><span class="sxs-lookup"><span data-stu-id="d1b66-328">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class using the specified string and capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-329">`capacity` パラメーターは、現在のインスタンスによって割り当てられたメモリに格納できる最大文字数を定義します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-329">The `capacity` parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</span></span> <span data-ttu-id="d1b66-330">この値は <xref:System.Text.StringBuilder.Capacity%2A> プロパティに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-330">Its value is assigned to the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span> <span data-ttu-id="d1b66-331">現在のインスタンスに格納されている文字数がこの `capacity` 値を超える場合、<xref:System.Text.StringBuilder> オブジェクトは、それを格納するために追加のメモリを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-331">If the number of characters to be stored in the current instance exceeds this `capacity` value, the <xref:System.Text.StringBuilder> object allocates additional memory to store them.</span></span>

 <span data-ttu-id="d1b66-332">`capacity` がゼロの場合は、実装固有の既定の容量が使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-332">If `capacity` is zero, the implementation-specific default capacity is used.</span></span>



## Examples
 <span data-ttu-id="d1b66-333">次の例は、初期文字列と指定された容量を使用して <xref:System.Text.StringBuilder.%23ctor%2A> コンストラクターを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-333">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with an initial string and a specified capacity.</span></span>

 [!code-cpp[System.Text.StringBuilder.Constructors#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#7)]
 [!code-csharp[System.Text.StringBuilder.Constructors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#7)]
 [!code-vb[System.Text.StringBuilder.Constructors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#7)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-334"><paramref name="capacity" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-334"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Text.StringBuilder.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringBuilder (string value, int startIndex, int length, int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value, int32 startIndex, int32 length, int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.#ctor(System.String,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String, startIndex As Integer, length As Integer, capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringBuilder(System::String ^ value, int startIndex, int length, int capacity);" />
      <MemberSignature Language="F#" Value="new System.Text.StringBuilder : string * int * int * int -&gt; System.Text.StringBuilder" Usage="new System.Text.StringBuilder (value, startIndex, length, capacity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-335">The string that contains the substring used to initialize the value of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-335">The string that contains the substring used to initialize the value of this instance.</span></span> <span data-ttu-id="d1b66-336">If <paramref name="value" /> is <see langword="null" />, the new <see cref="T:System.Text.StringBuilder" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />).</span><span class="sxs-lookup"><span data-stu-id="d1b66-336">If <paramref name="value" /> is <see langword="null" />, the new <see cref="T:System.Text.StringBuilder" /> will contain the empty string (that is, it contains <see cref="F:System.String.Empty" />).</span></span></param>
        <param name="startIndex"><span data-ttu-id="d1b66-337">The position within <paramref name="value" /> where the substring begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-337">The position within <paramref name="value" /> where the substring begins.</span></span></param>
        <param name="length"><span data-ttu-id="d1b66-338">The number of characters in the substring.</span><span class="sxs-lookup"><span data-stu-id="d1b66-338">The number of characters in the substring.</span></span></param>
        <param name="capacity"><span data-ttu-id="d1b66-339">The suggested starting size of the <see cref="T:System.Text.StringBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-339">The suggested starting size of the <see cref="T:System.Text.StringBuilder" />.</span></span></param>
        <summary><span data-ttu-id="d1b66-340">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class from the specified substring and capacity.</span><span class="sxs-lookup"><span data-stu-id="d1b66-340">Initializes a new instance of the <see cref="T:System.Text.StringBuilder" /> class from the specified substring and capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-341">`capacity` パラメーターは、現在のインスタンスによって割り当てられたメモリに格納できる最大文字数を定義します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-341">The `capacity` parameter defines the maximum number of characters that can be stored in the memory allocated by the current instance.</span></span> <span data-ttu-id="d1b66-342">この値は <xref:System.Text.StringBuilder.Capacity%2A> プロパティに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-342">Its value is assigned to the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span> <span data-ttu-id="d1b66-343">現在のインスタンスに格納されている文字数がこの `capacity` 値を超える場合、<xref:System.Text.StringBuilder> オブジェクトは、それを格納するために追加のメモリを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-343">If the number of characters to be stored in the current instance exceeds this `capacity` value, the <xref:System.Text.StringBuilder> object allocates additional memory to store them.</span></span>

 <span data-ttu-id="d1b66-344">`capacity` がゼロの場合は、実装固有の既定の容量が使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-344">If `capacity` is zero, the implementation-specific default capacity is used.</span></span>



## Examples
 <span data-ttu-id="d1b66-345">次の例は、指定された文字列を使用して <xref:System.Text.StringBuilder.%23ctor%2A> コンストラクターを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-345">The following example demonstrates how to call the <xref:System.Text.StringBuilder.%23ctor%2A> constructor with the specified string.</span></span>

 [!code-cpp[System.Text.StringBuilder.Constructors#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CPP/constructors.cpp#6)]
 [!code-csharp[System.Text.StringBuilder.Constructors#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/CS/constructors.cs#6)]
 [!code-vb[System.Text.StringBuilder.Constructors#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Constructors/VB/Form1.vb#6)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-346"><paramref name="capacity" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-346"><paramref name="capacity" /> is less than zero.</span></span>

<span data-ttu-id="d1b66-347">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-347">-or-</span></span>

 <span data-ttu-id="d1b66-348"><paramref name="startIndex" /> plus <paramref name="length" /> is not a position within <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-348"><paramref name="startIndex" /> plus <paramref name="length" /> is not a position within <paramref name="value" />.</span></span></exception>
        <altmember cref="P:System.Text.StringBuilder.Capacity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1b66-349">Appends the string representation of a specified object to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-349">Appends the string representation of a specified object to this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Boolean) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(bool value);" />
      <MemberSignature Language="F#" Value="member this.Append : bool -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-350">The Boolean value to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-350">The Boolean value to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-351">Appends the string representation of a specified Boolean value to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-351">Appends the string representation of a specified Boolean value to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-352">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-352">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-353"><xref:System.Text.StringBuilder.Append%28System.Boolean%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-353">The <xref:System.Text.StringBuilder.Append%28System.Boolean%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-354">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-354">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#2)]
 [!code-vb[System.Text.StringBuilder.Append#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#2)]

 <span data-ttu-id="d1b66-355"><xref:System.Text.StringBuilder.Append%28System.Boolean%29> メソッドは、<xref:System.Boolean.ToString?displayProperty=nameWithType> メソッドを呼び出して、`value`の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-355">The <xref:System.Text.StringBuilder.Append%28System.Boolean%29> method calls the <xref:System.Boolean.ToString?displayProperty=nameWithType> method to get the string representation of `value`.</span></span> <span data-ttu-id="d1b66-356">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-356">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-357">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-357">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-358">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-358">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-359">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-359">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Byte) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Byte value);" />
      <MemberSignature Language="F#" Value="member this.Append : byte -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-360">The value to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-360">The value to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-361">Appends the string representation of a specified 8-bit unsigned integer to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-361">Appends the string representation of a specified 8-bit unsigned integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-362">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-362">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-363"><xref:System.Text.StringBuilder.Append%28System.Byte%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-363">The <xref:System.Text.StringBuilder.Append%28System.Byte%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-364">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-364">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#3)]
 [!code-vb[System.Text.StringBuilder.Append#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#3)]

 <span data-ttu-id="d1b66-365"><xref:System.Text.StringBuilder.Append%28System.Byte%29> メソッドは、<xref:System.Byte.ToString%28System.IFormatProvider%29> メソッドを呼び出して、現在のカルチャの `value` の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-365">The <xref:System.Text.StringBuilder.Append%28System.Byte%29> method calls the <xref:System.Byte.ToString%28System.IFormatProvider%29> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="d1b66-366">`value`の書式設定を制御するには、<xref:System.Text.StringBuilder.AppendFormat%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-366">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 <span data-ttu-id="d1b66-367">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-367">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-368">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-368">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-369">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-369">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-370">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-370">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Char) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(char value);" />
      <MemberSignature Language="F#" Value="member this.Append : char -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-371">The UTF-16-encoded code unit to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-371">The UTF-16-encoded code unit to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-372">Appends the string representation of a specified <see cref="T:System.Char" /> object to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-372">Appends the string representation of a specified <see cref="T:System.Char" /> object to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-373">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-373">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-374"><xref:System.Text.StringBuilder.Append%28System.Char%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-374">The <xref:System.Text.StringBuilder.Append%28System.Char%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-375">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-375">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#4)]
 [!code-vb[System.Text.StringBuilder.Append#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#4)]

 <span data-ttu-id="d1b66-376">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-376">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-377">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-377">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-378">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-378">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-379">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-379">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Char()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(cli::array &lt;char&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : char[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-380">The array of characters to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-380">The array of characters to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-381">Appends the string representation of the Unicode characters in a specified array to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-381">Appends the string representation of the Unicode characters in a specified array to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-382">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-382">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-383">このメソッドは、指定した配列内のすべての文字を `value`に表示される順序と同じ順序で現在のインスタンスに追加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-383">This method appends all the characters in the specified array to the current instance in the same order as they appear in `value`.</span></span> <span data-ttu-id="d1b66-384">`value` が `null`場合、変更は行われません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-384">If `value` is `null`, no changes are made.</span></span>

 <span data-ttu-id="d1b66-385"><xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-385">The <xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-386">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-386">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#6)]
 [!code-vb[System.Text.StringBuilder.Append#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#6)]

 <span data-ttu-id="d1b66-387">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-387">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-388">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-388">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-389">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-389">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-390">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-390">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Decimal) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.Append : decimal -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-391">The value to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-391">The value to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-392">Appends the string representation of a specified decimal number to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-392">Appends the string representation of a specified decimal number to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-393">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-393">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-394"><xref:System.Text.StringBuilder.Append%28System.Decimal%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-394">The <xref:System.Text.StringBuilder.Append%28System.Decimal%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-395">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-395">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#8)]
 [!code-vb[System.Text.StringBuilder.Append#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#8)]

 <span data-ttu-id="d1b66-396"><xref:System.Text.StringBuilder.Append%28System.Decimal%29> メソッドは、<xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> メソッドを呼び出して、現在のカルチャの `value` の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-396">The <xref:System.Text.StringBuilder.Append%28System.Decimal%29> method calls the <xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="d1b66-397">`value`の書式設定を制御するには、<xref:System.Text.StringBuilder.AppendFormat%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-397">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 <span data-ttu-id="d1b66-398">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-398">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-399">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-399">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-400">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-400">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-401">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-401">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Double) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(double value);" />
      <MemberSignature Language="F#" Value="member this.Append : double -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-402">The value to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-402">The value to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-403">Appends the string representation of a specified double-precision floating-point number to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-403">Appends the string representation of a specified double-precision floating-point number to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-404">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-404">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-405"><xref:System.Text.StringBuilder.Append%28System.Double%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-405">The <xref:System.Text.StringBuilder.Append%28System.Double%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-406">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-406">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#9)]
 [!code-vb[System.Text.StringBuilder.Append#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#9)]

 <span data-ttu-id="d1b66-407"><xref:System.Text.StringBuilder.Append%28System.Double%29> メソッドは、<xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> メソッドを呼び出して、現在のカルチャの `value` の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-407">The <xref:System.Text.StringBuilder.Append%28System.Double%29> method calls the <xref:System.Double.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="d1b66-408">`value`の書式設定を制御するには、<xref:System.Text.StringBuilder.AppendFormat%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-408">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 <span data-ttu-id="d1b66-409">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-409">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-410">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-410">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-411">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-411">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-412">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-412">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Short) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(short value);" />
      <MemberSignature Language="F#" Value="member this.Append : int16 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-413">The value to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-413">The value to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-414">Appends the string representation of a specified 16-bit signed integer to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-414">Appends the string representation of a specified 16-bit signed integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-415">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-415">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-416"><xref:System.Text.StringBuilder.Append%28System.Int16%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-416">The <xref:System.Text.StringBuilder.Append%28System.Int16%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-417">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-417">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#10)]
 [!code-vb[System.Text.StringBuilder.Append#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#10)]

 <span data-ttu-id="d1b66-418"><xref:System.Text.StringBuilder.Append%28System.Int16%29> メソッドは、<xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> メソッドを呼び出して、現在のカルチャの `value` の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-418">The <xref:System.Text.StringBuilder.Append%28System.Int16%29> method calls the <xref:System.Int16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="d1b66-419">`value`の書式設定を制御するには、<xref:System.Text.StringBuilder.AppendFormat%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-419">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 <span data-ttu-id="d1b66-420">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-420">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-421">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-421">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-422">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-422">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-423">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-423">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(int value);" />
      <MemberSignature Language="F#" Value="member this.Append : int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-424">The value to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-424">The value to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-425">Appends the string representation of a specified 32-bit signed integer to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-425">Appends the string representation of a specified 32-bit signed integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-426">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-426">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-427"><xref:System.Text.StringBuilder.Append%28System.Int32%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-427">The <xref:System.Text.StringBuilder.Append%28System.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-428">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-428">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#11)]
 [!code-vb[System.Text.StringBuilder.Append#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#11)]

 <span data-ttu-id="d1b66-429"><xref:System.Text.StringBuilder.Append%28System.Int32%29> メソッドは、<xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> メソッドを呼び出して、現在のカルチャの `value` の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-429">The <xref:System.Text.StringBuilder.Append%28System.Int32%29> method calls the <xref:System.Int32.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="d1b66-430">`value`の書式設定を制御するには、<xref:System.Text.StringBuilder.AppendFormat%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-430">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 <span data-ttu-id="d1b66-431">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-431">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-432">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-432">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-433">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-433">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-434">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-434">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Long) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(long value);" />
      <MemberSignature Language="F#" Value="member this.Append : int64 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-435">The value to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-435">The value to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-436">Appends the string representation of a specified 64-bit signed integer to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-436">Appends the string representation of a specified 64-bit signed integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-437">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-437">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-438"><xref:System.Text.StringBuilder.Append%28System.Int64%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-438">The <xref:System.Text.StringBuilder.Append%28System.Int64%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-439">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-439">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#12)]
 [!code-vb[System.Text.StringBuilder.Append#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#12)]

 <span data-ttu-id="d1b66-440"><xref:System.Text.StringBuilder.Append%28System.Int64%29> メソッドは、<xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> を呼び出して、現在のカルチャの `value` の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-440">The <xref:System.Text.StringBuilder.Append%28System.Int64%29> method calls the <xref:System.Int64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="d1b66-441">`value`の書式設定を制御するには、<xref:System.Text.StringBuilder.AppendFormat%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-441">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 <span data-ttu-id="d1b66-442">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-442">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-443">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-443">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-444">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-444">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-445">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-445">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-446">The object to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-446">The object to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-447">Appends the string representation of a specified object to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-447">Appends the string representation of a specified object to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-448">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-448">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-449"><xref:System.Text.StringBuilder.Append%28System.Object%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-449">The <xref:System.Text.StringBuilder.Append%28System.Object%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-450">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-450">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span> <span data-ttu-id="d1b66-451">これは `Dog` クラスを定義し、`Dog` オブジェクトを作成し、<xref:System.Text.StringBuilder.Append%2A> メソッドを3回呼び出して、dog の名前と組み合わせを含む文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-451">It defines a `Dog` class, creates a `Dog` object, and makes three calls to the <xref:System.Text.StringBuilder.Append%2A> method to create a string that contains the dog's name and breed.</span></span>

 [!code-csharp[System.Text.Stringbuilder.Append#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append4.cs#18)]
 [!code-vb[System.Text.Stringbuilder.Append#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append4.vb#18)]

 <span data-ttu-id="d1b66-452"><xref:System.Text.StringBuilder.Append%28System.Object%29> メソッドは、<xref:System.Object.ToString%2A?displayProperty=nameWithType> メソッドを呼び出して、`value`の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-452">The <xref:System.Text.StringBuilder.Append%28System.Object%29> method calls the <xref:System.Object.ToString%2A?displayProperty=nameWithType> method to get the string representation of `value`.</span></span> <span data-ttu-id="d1b66-453">`value` が `null`場合、<xref:System.Text.StringBuilder> オブジェクトに変更は加えられません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-453">If `value` is `null`, no changes are made to the <xref:System.Text.StringBuilder> object.</span></span>

 <span data-ttu-id="d1b66-454">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-454">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-455">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-455">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-456">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-456">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-457">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-457">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (ReadOnlyMemory&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(valuetype System.ReadOnlyMemory`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.ReadOnlyMemory{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As ReadOnlyMemory(Of Char)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(ReadOnlyMemory&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.Append : ReadOnlyMemory&lt;char&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlyMemory&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-458">The read-only character memory region to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-458">The read-only character memory region to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-459">Appends the string representation of a specified read-only character memory region to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-459">Appends the string representation of a specified read-only character memory region to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-460">A reference to this instance after the append operation is completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-460">A reference to this instance after the append operation is completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As ReadOnlySpan(Of Char)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.Append : ReadOnlySpan&lt;char&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-461">The read-only character span to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-461">The read-only character span to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-462">Appends the string representation of a specified read-only character span to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-462">Appends the string representation of a specified read-only character span to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-463">A reference to this instance after the append operation is completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-463">A reference to this instance after the append operation is completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As SByte) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::SByte value);" />
      <MemberSignature Language="F#" Value="member this.Append : sbyte -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-464">The value to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-464">The value to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-465">Appends the string representation of a specified 8-bit signed integer to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-465">Appends the string representation of a specified 8-bit signed integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-466">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-466">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-467"><xref:System.Text.StringBuilder.Append%28System.SByte%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-467">The <xref:System.Text.StringBuilder.Append%28System.SByte%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-468">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-468">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#13)]
 [!code-vb[System.Text.StringBuilder.Append#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#13)]

 <span data-ttu-id="d1b66-469"><xref:System.Text.StringBuilder.Append%28System.SByte%29> メソッドは、<xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> メソッドを呼び出して、現在のカルチャの `value` の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-469">The <xref:System.Text.StringBuilder.Append%28System.SByte%29> method calls the <xref:System.SByte.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method  to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="d1b66-470">`value`の書式設定を制御するには、<xref:System.Text.StringBuilder.AppendFormat%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-470">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 <span data-ttu-id="d1b66-471">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-471">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-472">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-472">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-473">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-473">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-474">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-474">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Single) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(float value);" />
      <MemberSignature Language="F#" Value="member this.Append : single -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-475">The value to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-475">The value to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-476">Appends the string representation of a specified single-precision floating-point number to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-476">Appends the string representation of a specified single-precision floating-point number to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-477">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-477">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-478"><xref:System.Text.StringBuilder.Append%28System.Single%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-478">The <xref:System.Text.StringBuilder.Append%28System.Single%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-479">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-479">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#14)]
 [!code-vb[System.Text.StringBuilder.Append#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#14)]

 <span data-ttu-id="d1b66-480"><xref:System.Text.StringBuilder.Append%28System.Single%29> メソッドは、<xref:System.Single.ToString%2A?displayProperty=nameWithType> メソッドを呼び出して、現在のカルチャの `value` の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-480">The <xref:System.Text.StringBuilder.Append%28System.Single%29> method calls the <xref:System.Single.ToString%2A?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="d1b66-481">`value`の書式設定を制御するには、<xref:System.Text.StringBuilder.AppendFormat%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-481">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 <span data-ttu-id="d1b66-482">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-482">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-483">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-483">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-484">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-484">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-485">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-485">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As String) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-486">The string to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-486">The string to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-487">Appends a copy of the specified string to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-487">Appends a copy of the specified string to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-488">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-488">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-489"><xref:System.Text.StringBuilder.Append%28System.String%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-489">The <xref:System.Text.StringBuilder.Append%28System.String%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-490">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-490">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#2)]
 [!code-vb[System.Text.StringBuilder.Append#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#2)]

 <span data-ttu-id="d1b66-491">`value` が `null`場合、変更は行われません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-491">If `value` is `null`, no changes are made.</span></span>

 <span data-ttu-id="d1b66-492">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-492">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-493">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-493">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-494">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-494">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-495">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-495">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (System.Text.StringBuilder value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(class System.Text.StringBuilder value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As StringBuilder) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Text::StringBuilder ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Text.StringBuilder -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-496">The string builder to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-496">The string builder to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-497">Appends the string representation of a specified string builder to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-497">Appends the string representation of a specified string builder to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-498">A reference to this instance after the append operation is completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-498">A reference to this instance after the append operation is completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As UShort) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="member this.Append : uint16 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-499">The value to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-499">The value to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-500">Appends the string representation of a specified 16-bit unsigned integer to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-500">Appends the string representation of a specified 16-bit unsigned integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-501">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-501">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-502"><xref:System.Text.StringBuilder.Append%28System.UInt16%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-502">The <xref:System.Text.StringBuilder.Append%28System.UInt16%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-503">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-503">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#15)]
 [!code-vb[System.Text.StringBuilder.Append#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#15)]

 <span data-ttu-id="d1b66-504"><xref:System.Text.StringBuilder.Append%28System.UInt16%29> メソッドは、<xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> メソッドを呼び出して、`value`の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-504">The <xref:System.Text.StringBuilder.Append%28System.UInt16%29> method calls the <xref:System.UInt16.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value`.</span></span> <span data-ttu-id="d1b66-505">`value`の書式設定を制御するには、<xref:System.Text.StringBuilder.AppendFormat%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-505">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 <span data-ttu-id="d1b66-506">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-506">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-507">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-507">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-508">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-508">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-509">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-509">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As UInteger) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.Append : uint32 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-510">The value to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-510">The value to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-511">Appends the string representation of a specified 32-bit unsigned integer to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-511">Appends the string representation of a specified 32-bit unsigned integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-512">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-512">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-513"><xref:System.Text.StringBuilder.Append%28System.UInt32%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-513">The <xref:System.Text.StringBuilder.Append%28System.UInt32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-514">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-514">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#16)]
 [!code-vb[System.Text.StringBuilder.Append#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#16)]

 <span data-ttu-id="d1b66-515"><xref:System.Text.StringBuilder.Append%28System.UInt32%29> は、<xref:System.UInt32.ToString%2A?displayProperty=nameWithType> メソッドを呼び出して、現在のカルチャの `value` の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-515">The <xref:System.Text.StringBuilder.Append%28System.UInt32%29> calls the <xref:System.UInt32.ToString%2A?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="d1b66-516">`value`の書式設定を制御するには、<xref:System.Text.StringBuilder.AppendFormat%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-516">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 <span data-ttu-id="d1b66-517">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-517">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-518">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-518">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-519">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-519">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-520">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-520">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As ULong) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.Append : uint64 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-521">The value to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-521">The value to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-522">Appends the string representation of a specified 64-bit unsigned integer to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-522">Appends the string representation of a specified 64-bit unsigned integer to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-523">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-523">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-524"><xref:System.Text.StringBuilder.Append%28System.UInt64%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-524">The <xref:System.Text.StringBuilder.Append%28System.UInt64%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-525">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-525">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#17)]
 [!code-vb[System.Text.StringBuilder.Append#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#17)]

 <span data-ttu-id="d1b66-526"><xref:System.Text.StringBuilder.Append%28System.UInt64%29> メソッドは、<xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> メソッドを呼び出して、現在のカルチャの `value` の文字列形式を取得します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-526">The <xref:System.Text.StringBuilder.Append%28System.UInt64%29> method calls the <xref:System.UInt64.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method to get the string representation of `value` for the current culture.</span></span> <span data-ttu-id="d1b66-527">`value`の書式設定を制御するには、<xref:System.Text.StringBuilder.AppendFormat%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-527">To control the formatting of `value`, call the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 <span data-ttu-id="d1b66-528">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-528">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-529">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-529">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-530">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-530">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-531">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-531">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char value, int repeatCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char value, int32 repeatCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Char, repeatCount As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(char value, int repeatCount);" />
      <MemberSignature Language="F#" Value="member this.Append : char * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, repeatCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="repeatCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-532">The character to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-532">The character to append.</span></span></param>
        <param name="repeatCount"><span data-ttu-id="d1b66-533">The number of times to append <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-533">The number of times to append <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="d1b66-534">Appends a specified number of copies of the string representation of a Unicode character to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-534">Appends a specified number of copies of the string representation of a Unicode character to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-535">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-535">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-536"><xref:System.Text.StringBuilder.Append%28System.Char%2CSystem.Int32%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-536">The <xref:System.Text.StringBuilder.Append%28System.Char%2CSystem.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-537">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-537">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#5)]
 [!code-vb[System.Text.StringBuilder.Append#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#5)]

 <span data-ttu-id="d1b66-538">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-538">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-539"><paramref name="repeatCount" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-539"><paramref name="repeatCount" /> is less than zero.</span></span>

<span data-ttu-id="d1b66-540">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-540">-or-</span></span>

<span data-ttu-id="d1b66-541">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-541">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-542">Out of memory.</span><span class="sxs-lookup"><span data-stu-id="d1b66-542">Out of memory.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-543">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-543">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-544">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-544">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char* value, int valueCount);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char* value, int32 valueCount) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char*,System.Int32)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(char* value, int valueCount);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Append : nativeptr&lt;char&gt; * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, valueCount)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="valueCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-545">A pointer to an array of characters.</span><span class="sxs-lookup"><span data-stu-id="d1b66-545">A pointer to an array of characters.</span></span></param>
        <param name="valueCount"><span data-ttu-id="d1b66-546">The number of characters in the array.</span><span class="sxs-lookup"><span data-stu-id="d1b66-546">The number of characters in the array.</span></span></param>
        <summary><span data-ttu-id="d1b66-547">Appends an array of Unicode characters starting at a specified address to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-547">Appends an array of Unicode characters starting at a specified address to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-548">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-548">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-549">このメソッドは、アドレス `value` で始まる `valueCount` 文字を現在のインスタンスに追加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-549">This method appends `valueCount` characters starting at address `value` to the current instance.</span></span>

 <span data-ttu-id="d1b66-550"><xref:System.Text.StringBuilder.Append%28System.Char%2A%2CSystem.Int32%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-550">The <xref:System.Text.StringBuilder.Append%28System.Char%2A%2CSystem.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-551">このため、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-551">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object.</span></span>

 <span data-ttu-id="d1b66-552">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-552">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-553"><paramref name="valueCount" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-553"><paramref name="valueCount" /> is less than zero.</span></span>

<span data-ttu-id="d1b66-554">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-554">-or-</span></span>

<span data-ttu-id="d1b66-555">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-555">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="d1b66-556"><paramref name="value" /> is a null pointer.</span><span class="sxs-lookup"><span data-stu-id="d1b66-556"><paramref name="value" /> is a null pointer.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-557">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-557">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-558">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-558">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (char[] value, int startIndex, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(char[] value, int32 startIndex, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As Char(), startIndex As Integer, charCount As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(cli::array &lt;char&gt; ^ value, int startIndex, int charCount);" />
      <MemberSignature Language="F#" Value="member this.Append : char[] * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, startIndex, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-559">A character array.</span><span class="sxs-lookup"><span data-stu-id="d1b66-559">A character array.</span></span></param>
        <param name="startIndex"><span data-ttu-id="d1b66-560">The starting position in <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-560">The starting position in <paramref name="value" />.</span></span></param>
        <param name="charCount"><span data-ttu-id="d1b66-561">The number of characters to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-561">The number of characters to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-562">Appends the string representation of a specified subarray of Unicode characters to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-562">Appends the string representation of a specified subarray of Unicode characters to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-563">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-563">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-564">このメソッドは、`value` 内の指定された範囲の文字を現在のインスタンスに追加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-564">This method appends the specified range of characters in `value` to the current instance.</span></span> <span data-ttu-id="d1b66-565">`value` が `null`、`startIndex` と `count` が両方とも0の場合、変更は行われません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-565">If `value` is `null` and `startIndex` and `count` are both zero, no changes are made.</span></span>

 <span data-ttu-id="d1b66-566"><xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-566">The <xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-567">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-567">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append2.cs#7)]
 [!code-vb[System.Text.StringBuilder.Append#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append2.vb#7)]

 <span data-ttu-id="d1b66-568">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-568">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-569"><paramref name="value" /> is <see langword="null" />, and <paramref name="startIndex" /> and <paramref name="charCount" /> are not zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-569"><paramref name="value" /> is <see langword="null" />, and <paramref name="startIndex" /> and <paramref name="charCount" /> are not zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-570"><paramref name="charCount" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-570"><paramref name="charCount" /> is less than zero.</span></span>

<span data-ttu-id="d1b66-571">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-571">-or-</span></span>

 <span data-ttu-id="d1b66-572"><paramref name="startIndex" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-572"><paramref name="startIndex" /> is less than zero.</span></span>

<span data-ttu-id="d1b66-573">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-573">-or-</span></span>

 <span data-ttu-id="d1b66-574"><paramref name="startIndex" /> + <paramref name="charCount" /> is greater than the length of <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-574"><paramref name="startIndex" /> + <paramref name="charCount" /> is greater than the length of <paramref name="value" />.</span></span>

<span data-ttu-id="d1b66-575">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-575">-or-</span></span>

<span data-ttu-id="d1b66-576">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-576">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-577">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-577">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-578">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-578">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As String, startIndex As Integer, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-579">The string that contains the substring to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-579">The string that contains the substring to append.</span></span></param>
        <param name="startIndex"><span data-ttu-id="d1b66-580">The starting position of the substring within <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-580">The starting position of the substring within <paramref name="value" />.</span></span></param>
        <param name="count"><span data-ttu-id="d1b66-581">The number of characters in <paramref name="value" /> to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-581">The number of characters in <paramref name="value" /> to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-582">Appends a copy of a specified substring to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-582">Appends a copy of a specified substring to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-583">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-583">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-584">このメソッドは、`value` 内の指定された範囲の文字を現在のインスタンスに追加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-584">This method appends the specified range of characters in `value` to the current instance.</span></span> <span data-ttu-id="d1b66-585">`value` が `null`、`startIndex` と `count` が両方とも0の場合、変更は行われません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-585">If `value` is `null` and `startIndex` and `count` are both zero, no changes are made.</span></span>

 <span data-ttu-id="d1b66-586"><xref:System.Text.StringBuilder.Append%28System.String%2CSystem.Int32%2CSystem.Int32%29> メソッドは、このクラスの既存のインスタンスを変更します。新しいクラスのインスタンスは返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-586">The <xref:System.Text.StringBuilder.Append%28System.String%2CSystem.Int32%2CSystem.Int32%29> method modifies the existing instance of this class; it does not return a new class instance.</span></span> <span data-ttu-id="d1b66-587">このため、次の例に示すように、既存の参照に対してメソッドまたはプロパティを呼び出すことができ、<xref:System.Text.StringBuilder> オブジェクトに戻り値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-587">Because of this, you can call a method or property on the existing reference and you do not have to assign the return value to a <xref:System.Text.StringBuilder> object, as the following example illustrates.</span></span>

 [!code-csharp[System.Text.StringBuilder.Append#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/cs/append3.cs#19)]
 [!code-vb[System.Text.StringBuilder.Append#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.StringBuilder.Append/vb/append3.vb#19)]

 <span data-ttu-id="d1b66-588">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-588">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-589"><paramref name="value" /> is <see langword="null" />, and <paramref name="startIndex" /> and <paramref name="count" /> are not zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-589"><paramref name="value" /> is <see langword="null" />, and <paramref name="startIndex" /> and <paramref name="count" /> are not zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-590"><paramref name="count" /> less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-590"><paramref name="count" /> less than zero.</span></span>

<span data-ttu-id="d1b66-591">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-591">-or-</span></span>

 <span data-ttu-id="d1b66-592"><paramref name="startIndex" /> less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-592"><paramref name="startIndex" /> less than zero.</span></span>

<span data-ttu-id="d1b66-593">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-593">-or-</span></span>

 <span data-ttu-id="d1b66-594"><paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-594"><paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="value" />.</span></span>

<span data-ttu-id="d1b66-595">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-595">-or-</span></span>

<span data-ttu-id="d1b66-596">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-596">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-597">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-597">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-598">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-598">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Append (System.Text.StringBuilder value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Append(class System.Text.StringBuilder value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Append(System.Text.StringBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Append (value As StringBuilder, startIndex As Integer, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Append(System::Text::StringBuilder ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Text.StringBuilder * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Append (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.StringBuilder" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="startIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-599">The string builder that contains the substring to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-599">The string builder that contains the substring to append.</span></span></param>
        <param name="startIndex"><span data-ttu-id="d1b66-600">The starting position of the substring within <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-600">The starting position of the substring within <paramref name="value" />.</span></span></param>
        <param name="count"><span data-ttu-id="d1b66-601">The number of characters in <paramref name="value" /> to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-601">The number of characters in <paramref name="value" /> to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-602">Appends a copy of a substring within a specified string builder to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-602">Appends a copy of a substring within a specified string builder to this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-603">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-603">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFormat">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1b66-604">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-604">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="d1b66-605">Each format item is replaced by the string representation of a corresponding object argument.</span><span class="sxs-lookup"><span data-stu-id="d1b66-605">Each format item is replaced by the string representation of a corresponding object argument.</span></span></summary>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="d1b66-606">複合書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-606">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="d1b66-607">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-607">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="d1b66-608">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-608">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="d1b66-609">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-609">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="d1b66-610">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-610">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="d1b66-611">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-611">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="d1b66-612">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-612">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="d1b66-613">列挙型書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-613">Enumeration Format Strings</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (format As String, arg0 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : string * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="d1b66-614">A composite format string.</span><span class="sxs-lookup"><span data-stu-id="d1b66-614">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="d1b66-615">An object to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-615">An object to format.</span></span></param>
        <summary><span data-ttu-id="d1b66-616">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-616">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="d1b66-617">Each format item is replaced by the string representation of a single argument.</span><span class="sxs-lookup"><span data-stu-id="d1b66-617">Each format item is replaced by the string representation of a single argument.</span></span></summary>
        <returns><span data-ttu-id="d1b66-618">A reference to this instance with <paramref name="format" /> appended.</span><span class="sxs-lookup"><span data-stu-id="d1b66-618">A reference to this instance with <paramref name="format" /> appended.</span></span> <span data-ttu-id="d1b66-619">Each format item in <paramref name="format" /> is replaced by the string representation of <paramref name="arg0" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-619">Each format item in <paramref name="format" /> is replaced by the string representation of <paramref name="arg0" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-620">このメソッドは、.NET Framework の[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)を使用して、オブジェクトの値をテキスト表現に変換し、その表現を現在の <xref:System.Text.StringBuilder> オブジェクトに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-620">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>

 <span data-ttu-id="d1b66-621">`format` パラメーターは、書式指定項目と呼ばれる0個以上のインデックス付きプレースホルダーと共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-621">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items.</span></span> <span data-ttu-id="d1b66-622">書式項目のインデックスは、このメソッドのパラメーターリスト内の1つのオブジェクト `arg0`に対応する0にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-622">The index of the format items must be 0, to correspond to `arg0`, the single object in the parameter list of this method.</span></span> <span data-ttu-id="d1b66-623">書式設定のプロセスでは、各書式項目が `arg0`の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-623">The formatting process replaces each format item with the string representation of `arg0`.</span></span>

 <span data-ttu-id="d1b66-624">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-624">The syntax of a format item is as follows:</span></span>

 <span data-ttu-id="d1b66-625">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="d1b66-625">{*index*[,*length*][:*formatString*]}</span></span>

 <span data-ttu-id="d1b66-626">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-626">Elements in square brackets are optional.</span></span> <span data-ttu-id="d1b66-627">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-627">The following table describes each element.</span></span>

|<span data-ttu-id="d1b66-628">要素</span><span class="sxs-lookup"><span data-stu-id="d1b66-628">Element</span></span>|<span data-ttu-id="d1b66-629">説明</span><span class="sxs-lookup"><span data-stu-id="d1b66-629">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="d1b66-630">*index*</span><span class="sxs-lookup"><span data-stu-id="d1b66-630">*index*</span></span>|<span data-ttu-id="d1b66-631">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="d1b66-631">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="d1b66-632">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-632">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1b66-633">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-633">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|
|<span data-ttu-id="d1b66-634">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="d1b66-634">,*length*</span></span>|<span data-ttu-id="d1b66-635">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="d1b66-635">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="d1b66-636">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-636">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|
|<span data-ttu-id="d1b66-637">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="d1b66-637">:*formatString*</span></span>|<span data-ttu-id="d1b66-638">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="d1b66-638">A standard or custom format string that is supported by the parameter.</span></span>|

> [!NOTE]
>  <span data-ttu-id="d1b66-639">日付と時刻の値と共に使用される標準およびカスタム書式指定文字列については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-639">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="d1b66-640">数値で使用される標準およびカスタム書式指定文字列については、「[標準の数値書式](~/docs/standard/base-types/standard-numeric-format-strings.md)指定文字列」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-640">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="d1b66-641">列挙体で使用される標準書式指定文字列については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-641">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>

 <span data-ttu-id="d1b66-642">`arg0` は、書式設定するオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-642">`arg0` represents the object to be formatted.</span></span> <span data-ttu-id="d1b66-643">`format` 内の各書式指定項目は、`arg0`の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-643">Each format item in `format` is replaced with the string representation of `arg0`.</span></span> <span data-ttu-id="d1b66-644">書式指定項目に `formatString` が含まれており、`arg0` <xref:System.IFormattable> インターフェイスが実装されている場合、`arg0.ToString(formatString, null)` は書式設定を定義します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-644">If the format item includes `formatString` and `arg0` implements the <xref:System.IFormattable> interface, then `arg0.ToString(formatString, null)` defines the formatting.</span></span> <span data-ttu-id="d1b66-645">それ以外の場合は、`arg0.ToString()` によって書式設定が定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-645">Otherwise, `arg0.ToString()` defines the formatting.</span></span>

 <span data-ttu-id="d1b66-646">`format` に割り当てられた文字列が "{0: # # # #} の食料を慈善団体に寄付しようとしています" という内容の場合は、</span><span class="sxs-lookup"><span data-stu-id="d1b66-646">If the string assigned to `format` is "Thank you for your donation of {0:####} cans of food to our charitable organization."</span></span> <span data-ttu-id="d1b66-647">また `arg0` は値が10の整数です。この戻り値は、"私たちの慈善団体に対して10人の食べ物を寄付したとしていただき、ありがとうございました" となります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-647">and `arg0` is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</span></span>



## Examples
 <span data-ttu-id="d1b66-648"><xref:System.Text.StringBuilder.AppendFormat%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-648">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-649"><paramref name="format" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-649"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d1b66-650"><paramref name="format" /> is invalid.</span><span class="sxs-lookup"><span data-stu-id="d1b66-650"><paramref name="format" /> is invalid.</span></span>

<span data-ttu-id="d1b66-651">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-651">-or-</span></span>

<span data-ttu-id="d1b66-652">The index of a format item is less than 0 (zero), or greater than or equal to 1.</span><span class="sxs-lookup"><span data-stu-id="d1b66-652">The index of a format item is less than 0 (zero), or greater than or equal to 1.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-653">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-653">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-654">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-654">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-655">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-655">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="d1b66-656">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-656">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="d1b66-657">複合書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-657">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="d1b66-658">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-658">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="d1b66-659">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-659">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="d1b66-660">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-660">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="d1b66-661">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-661">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="d1b66-662">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-662">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="d1b66-663">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-663">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="d1b66-664">列挙型書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-664">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (format As String, ParamArray args As Object()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : string * obj[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="d1b66-665">A composite format string.</span><span class="sxs-lookup"><span data-stu-id="d1b66-665">A composite format string.</span></span></param>
        <param name="args"><span data-ttu-id="d1b66-666">An array of objects to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-666">An array of objects to format.</span></span></param>
        <summary><span data-ttu-id="d1b66-667">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-667">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="d1b66-668">Each format item is replaced by the string representation of a corresponding argument in a parameter array.</span><span class="sxs-lookup"><span data-stu-id="d1b66-668">Each format item is replaced by the string representation of a corresponding argument in a parameter array.</span></span></summary>
        <returns><span data-ttu-id="d1b66-669">A reference to this instance with <paramref name="format" /> appended.</span><span class="sxs-lookup"><span data-stu-id="d1b66-669">A reference to this instance with <paramref name="format" /> appended.</span></span> <span data-ttu-id="d1b66-670">Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</span><span class="sxs-lookup"><span data-stu-id="d1b66-670">Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-671">このメソッドは、.NET Framework の[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)を使用して、オブジェクトの値をテキスト表現に変換し、その表現を現在の <xref:System.Text.StringBuilder> オブジェクトに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-671">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>

 <span data-ttu-id="d1b66-672">`format` パラメーターは、このメソッドのパラメーターリスト内のオブジェクトに対応する0個以上のインデックス付きプレースホルダー (書式項目と呼ばれます) と共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-672">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</span></span> <span data-ttu-id="d1b66-673">書式設定のプロセスでは、各書式項目が対応するオブジェクトの文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-673">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>

 <span data-ttu-id="d1b66-674">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-674">The syntax of a format item is as follows:</span></span>

 <span data-ttu-id="d1b66-675">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="d1b66-675">{*index*[,*length*][:*formatString*]}</span></span>

 <span data-ttu-id="d1b66-676">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-676">Elements in square brackets are optional.</span></span> <span data-ttu-id="d1b66-677">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-677">The following table describes each element.</span></span>

|<span data-ttu-id="d1b66-678">要素</span><span class="sxs-lookup"><span data-stu-id="d1b66-678">Element</span></span>|<span data-ttu-id="d1b66-679">説明</span><span class="sxs-lookup"><span data-stu-id="d1b66-679">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="d1b66-680">*index*</span><span class="sxs-lookup"><span data-stu-id="d1b66-680">*index*</span></span>|<span data-ttu-id="d1b66-681">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="d1b66-681">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="d1b66-682">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-682">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1b66-683">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-683">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|
|<span data-ttu-id="d1b66-684">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="d1b66-684">,*length*</span></span>|<span data-ttu-id="d1b66-685">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="d1b66-685">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="d1b66-686">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-686">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|
|<span data-ttu-id="d1b66-687">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="d1b66-687">:*formatString*</span></span>|<span data-ttu-id="d1b66-688">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="d1b66-688">A standard or custom format string that is supported by the parameter.</span></span>|

> [!NOTE]
>  <span data-ttu-id="d1b66-689">日付と時刻の値と共に使用される標準およびカスタム書式指定文字列については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-689">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="d1b66-690">数値で使用される標準およびカスタム書式指定文字列については、「[標準の数値書式](~/docs/standard/base-types/standard-numeric-format-strings.md)指定文字列」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-690">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="d1b66-691">列挙体で使用される標準書式指定文字列については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-691">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>

 <span data-ttu-id="d1b66-692">`args` は、書式設定するオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-692">`args` represents the objects to be formatted.</span></span> <span data-ttu-id="d1b66-693">`format` 内の各書式指定項目は、`args`内の対応するオブジェクトの文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-693">Each format item in `format` is replaced with the string representation of the corresponding object in `args`.</span></span> <span data-ttu-id="d1b66-694">書式指定項目に `formatString` が含まれており、`args` 内の対応するオブジェクトが <xref:System.IFormattable> インターフェイスを実装している場合、`args[index].ToString(formatString, provider)` は書式設定を定義します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-694">If the format item includes `formatString` and the corresponding object in `args` implements the <xref:System.IFormattable> interface, then `args[index].ToString(formatString, provider)` defines the formatting.</span></span> <span data-ttu-id="d1b66-695">それ以外の場合は、`args[index].ToString()` によって書式設定が定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-695">Otherwise, `args[index].ToString()` defines the formatting.</span></span>

 <span data-ttu-id="d1b66-696">`format` に割り当てられた文字列が "{0: # # # #} の食料を慈善団体に寄付しようとしています" という内容の場合は、</span><span class="sxs-lookup"><span data-stu-id="d1b66-696">If the string assigned to `format` is "Thank you for your donation of {0:####} cans of food to our charitable organization."</span></span> <span data-ttu-id="d1b66-697">また `arg0` は値が10の整数です。この戻り値は、"私たちの慈善団体に対して10人の食べ物を寄付したとしていただき、ありがとうございました" となります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-697">and `arg0` is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</span></span>



## Examples
 <span data-ttu-id="d1b66-698"><xref:System.Text.StringBuilder.AppendFormat%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-698">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-699"><paramref name="format" /> or <paramref name="args" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-699"><paramref name="format" /> or <paramref name="args" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d1b66-700"><paramref name="format" /> is invalid.</span><span class="sxs-lookup"><span data-stu-id="d1b66-700"><paramref name="format" /> is invalid.</span></span>

<span data-ttu-id="d1b66-701">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-701">-or-</span></span>

<span data-ttu-id="d1b66-702">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="args" /> array.</span><span class="sxs-lookup"><span data-stu-id="d1b66-702">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="args" /> array.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-703">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-703">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-704">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-704">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-705">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-705">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="d1b66-706">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-706">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="d1b66-707">複合書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-707">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="d1b66-708">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-708">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="d1b66-709">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-709">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="d1b66-710">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-710">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="d1b66-711">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-711">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="d1b66-712">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-712">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="d1b66-713">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-713">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="d1b66-714">列挙型書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-714">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (IFormatProvider provider, string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (provider As IFormatProvider, format As String, arg0 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : IFormatProvider * string * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (provider, format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d1b66-715">An object that supplies culture-specific formatting information.</span><span class="sxs-lookup"><span data-stu-id="d1b66-715">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="format"><span data-ttu-id="d1b66-716">A composite format string.</span><span class="sxs-lookup"><span data-stu-id="d1b66-716">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="d1b66-717">The object to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-717">The object to format.</span></span></param>
        <summary><span data-ttu-id="d1b66-718">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-718">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="d1b66-719">Each format item is replaced by the string representation of a single argument using a specified format provider.</span><span class="sxs-lookup"><span data-stu-id="d1b66-719">Each format item is replaced by the string representation of a single argument using a specified format provider.</span></span></summary>
        <returns><span data-ttu-id="d1b66-720">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-720">A reference to this instance after the append operation has completed.</span></span> <span data-ttu-id="d1b66-721">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> in which any format specification is replaced by the string representation of <paramref name="arg0" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-721">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> in which any format specification is replaced by the string representation of <paramref name="arg0" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-722">このメソッドは、.NET Framework の[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)を使用して `arg0` の値をそのテキスト形式に変換し、その表現を現在の <xref:System.Text.StringBuilder> オブジェクトに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-722">This method uses the  [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of `arg0` to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>

 <span data-ttu-id="d1b66-723">`format` パラメーターは、書式指定項目と呼ばれる0個以上のインデックス付きプレースホルダーと共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-723">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items.</span></span> <span data-ttu-id="d1b66-724">各書式指定項目のインデックスはゼロ (0) である必要があります。このメソッドには1つの引数を持つ引数リストが含まれているためです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-724">The index of each format item must be zero (0) since this method includes an argument list with a single argument.</span></span> <span data-ttu-id="d1b66-725">書式設定のプロセスでは、各書式項目が `arg0`の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-725">The formatting process replaces each format item with the string representation of `arg0`.</span></span>

 <span data-ttu-id="d1b66-726">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-726">The syntax of a format item is as follows:</span></span>

 <span data-ttu-id="d1b66-727">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="d1b66-727">{*index*[,*length*][:*formatString*]}</span></span>

 <span data-ttu-id="d1b66-728">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-728">Elements in square brackets are optional.</span></span> <span data-ttu-id="d1b66-729">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-729">The following table describes each element.</span></span>

|<span data-ttu-id="d1b66-730">要素</span><span class="sxs-lookup"><span data-stu-id="d1b66-730">Element</span></span>|<span data-ttu-id="d1b66-731">説明</span><span class="sxs-lookup"><span data-stu-id="d1b66-731">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="d1b66-732">*index*</span><span class="sxs-lookup"><span data-stu-id="d1b66-732">*index*</span></span>|<span data-ttu-id="d1b66-733">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="d1b66-733">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="d1b66-734">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-734">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1b66-735">この場合、<xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29> メソッドの引数リストには1つの引数があるため、 *index*の値は常に0である必要があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-735">In this case, since the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29> method has a single argument in the argument list, the value of *index* must always be 0.</span></span> <span data-ttu-id="d1b66-736">そうでない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-736">If it is not, a <xref:System.FormatException> is thrown.</span></span>|
|<span data-ttu-id="d1b66-737">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="d1b66-737">,*length*</span></span>|<span data-ttu-id="d1b66-738">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="d1b66-738">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="d1b66-739">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-739">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|
|<span data-ttu-id="d1b66-740">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="d1b66-740">:*formatString*</span></span>|<span data-ttu-id="d1b66-741">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="d1b66-741">A standard or custom format string that is supported by the parameter.</span></span>|

> [!NOTE]
>  <span data-ttu-id="d1b66-742">日付と時刻の値と共に使用される標準およびカスタム書式指定文字列については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-742">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="d1b66-743">数値で使用される標準およびカスタム書式指定文字列については、「[標準の数値書式](~/docs/standard/base-types/standard-numeric-format-strings.md)指定文字列」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-743">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="d1b66-744">列挙体で使用される標準書式指定文字列については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-744">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>

 <span data-ttu-id="d1b66-745">`provider` パラメーターは `args`内のオブジェクトの書式設定情報を提供できる <xref:System.IFormatProvider> の実装を指定します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-745">The `provider` parameter specifies an <xref:System.IFormatProvider> implementation that can provide formatting information for the objects in `args`.</span></span> <span data-ttu-id="d1b66-746">`provider` は、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-746">`provider` can be any of the following:</span></span>

-   <span data-ttu-id="d1b66-747">カルチャ固有の書式情報を提供する <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d1b66-747">A <xref:System.Globalization.CultureInfo> object that provides culture-specific formatting information.</span></span>

-   <span data-ttu-id="d1b66-748">数値の場合、`arg0` にカルチャ固有の書式情報を提供する <xref:System.Globalization.NumberFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d1b66-748">A <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information for `arg0` if it is a numeric value.</span></span>

-   <span data-ttu-id="d1b66-749">日付と時刻の値の場合に、`arg0` のカルチャ固有の書式情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d1b66-749">A <xref:System.Globalization.DateTimeFormatInfo> object that provides culture-specific formatting information for `arg0` if it is a date and time value.</span></span>

-   <span data-ttu-id="d1b66-750">`arg0`の書式設定情報を提供するカスタム <xref:System.IFormatProvider> 実装。</span><span class="sxs-lookup"><span data-stu-id="d1b66-750">A custom <xref:System.IFormatProvider> implementation that provides formatting information for `arg0`.</span></span> <span data-ttu-id="d1b66-751">通常、このような実装では、<xref:System.ICustomFormatter> インターフェイスも実装します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-751">Typically, such an implementation also implements the <xref:System.ICustomFormatter> interface.</span></span>

 <span data-ttu-id="d1b66-752">`provider` パラメーターが `null`場合、書式設定情報は現在のカルチャから取得されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-752">If the `provider` parameter is `null`, formatting information is obtained from the current culture.</span></span>

 <span data-ttu-id="d1b66-753">`arg0` は、書式設定するオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-753">`arg0` represents the object to be formatted.</span></span> <span data-ttu-id="d1b66-754">`format` 内の各書式指定項目は、`arg0`の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-754">Each format item in `format` is replaced with the string representation of `arg0`.</span></span> <span data-ttu-id="d1b66-755">書式指定項目に `formatString` が含まれており、`arg0` <xref:System.IFormattable> インターフェイスが実装されている場合、`arg0.ToString(formatString, provider)` は書式設定を定義します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-755">If the format item includes `formatString` and `arg0` implements the <xref:System.IFormattable> interface, then `arg0.ToString(formatString, provider)` defines the formatting.</span></span> <span data-ttu-id="d1b66-756">それ以外の場合は、`arg0.ToString()` によって書式設定が定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-756">Otherwise, `arg0.ToString()` defines the formatting.</span></span>



## Examples
 <span data-ttu-id="d1b66-757"><xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29> メソッドの2つの呼び出しを次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-757">The following includes two calls to the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="d1b66-758">どちらも、英語版の英国 (en-us) カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-758">Both use the formatting conventions of the English-Great Britain (en-GB) culture.</span></span> <span data-ttu-id="d1b66-759">最初のは、<xref:System.Decimal> 値の通貨の文字列形式を結果の文字列に挿入します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-759">The first inserts the string representation of a <xref:System.Decimal> value currency in a result string.</span></span> <span data-ttu-id="d1b66-760">2番目の方法では、結果文字列の2つの場所に <xref:System.DateTime> 値が挿入されます。最初の位置には短い日付文字列と短い時刻文字列のみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-760">The second inserts a <xref:System.DateTime> value in two places in a result string, the first including only the short date string and the second the short time string.</span></span>

 [!code-csharp[System.Text.StringBuilder.AppendFormat#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/cs/appendformat1.cs#2)]
 [!code-vb[System.Text.StringBuilder.AppendFormat#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/vb/appendformat1.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-761"><paramref name="format" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-761"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d1b66-762"><paramref name="format" /> is invalid.</span><span class="sxs-lookup"><span data-stu-id="d1b66-762"><paramref name="format" /> is invalid.</span></span>

<span data-ttu-id="d1b66-763">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-763">-or-</span></span>

<span data-ttu-id="d1b66-764">The index of a format item is less than 0 (zero), or greater than or equal to one (1).</span><span class="sxs-lookup"><span data-stu-id="d1b66-764">The index of a format item is less than 0 (zero), or greater than or equal to one (1).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-765">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-765">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-766">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-766">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-767">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-767">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="d1b66-768">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-768">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="d1b66-769">複合書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-769">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md"><span data-ttu-id="d1b66-770">方法 : カスタム数値書式プロバイダーを定義して使用する</span><span class="sxs-lookup"><span data-stu-id="d1b66-770">How to: Define and Use Custom Numeric Format Providers</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="d1b66-771">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-771">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="d1b66-772">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-772">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="d1b66-773">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-773">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="d1b66-774">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-774">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="d1b66-775">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-775">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="d1b66-776">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-776">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="d1b66-777">列挙型書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-777">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (IFormatProvider provider, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (provider As IFormatProvider, format As String, ParamArray args As Object()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(IFormatProvider ^ provider, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : IFormatProvider * string * obj[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (provider, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-uwp-10.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d1b66-778">An object that supplies culture-specific formatting information.</span><span class="sxs-lookup"><span data-stu-id="d1b66-778">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="format"><span data-ttu-id="d1b66-779">A composite format string.</span><span class="sxs-lookup"><span data-stu-id="d1b66-779">A composite format string.</span></span></param>
        <param name="args"><span data-ttu-id="d1b66-780">An array of objects to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-780">An array of objects to format.</span></span></param>
        <summary><span data-ttu-id="d1b66-781">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-781">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="d1b66-782">Each format item is replaced by the string representation of a corresponding argument in a parameter array using a specified format provider.</span><span class="sxs-lookup"><span data-stu-id="d1b66-782">Each format item is replaced by the string representation of a corresponding argument in a parameter array using a specified format provider.</span></span></summary>
        <returns><span data-ttu-id="d1b66-783">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-783">A reference to this instance after the append operation has completed.</span></span> <span data-ttu-id="d1b66-784">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument.</span><span class="sxs-lookup"><span data-stu-id="d1b66-784">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-785">このメソッドは、.NET Framework の[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)を使用して、オブジェクトの値をテキスト表現に変換し、その表現を現在の <xref:System.Text.StringBuilder> オブジェクトに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-785">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>

 <span data-ttu-id="d1b66-786">`format` パラメーターは、このメソッドのパラメーターリスト内のオブジェクトに対応する0個以上のインデックス付きプレースホルダー (書式項目と呼ばれます) と共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-786">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</span></span> <span data-ttu-id="d1b66-787">書式設定のプロセスでは、各書式項目が対応するオブジェクトの文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-787">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>

 <span data-ttu-id="d1b66-788">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-788">The syntax of a format item is as follows:</span></span>

 <span data-ttu-id="d1b66-789">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="d1b66-789">{*index*[,*length*][:*formatString*]}</span></span>

 <span data-ttu-id="d1b66-790">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-790">Elements in square brackets are optional.</span></span> <span data-ttu-id="d1b66-791">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-791">The following table describes each element.</span></span>

|<span data-ttu-id="d1b66-792">要素</span><span class="sxs-lookup"><span data-stu-id="d1b66-792">Element</span></span>|<span data-ttu-id="d1b66-793">説明</span><span class="sxs-lookup"><span data-stu-id="d1b66-793">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="d1b66-794">*index*</span><span class="sxs-lookup"><span data-stu-id="d1b66-794">*index*</span></span>|<span data-ttu-id="d1b66-795">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="d1b66-795">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="d1b66-796">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-796">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1b66-797">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-797">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|
|<span data-ttu-id="d1b66-798">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="d1b66-798">,*length*</span></span>|<span data-ttu-id="d1b66-799">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="d1b66-799">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="d1b66-800">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-800">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|
|<span data-ttu-id="d1b66-801">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="d1b66-801">:*formatString*</span></span>|<span data-ttu-id="d1b66-802">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="d1b66-802">A standard or custom format string that is supported by the parameter.</span></span>|

> [!NOTE]
>  <span data-ttu-id="d1b66-803">日付と時刻の値と共に使用される標準およびカスタム書式指定文字列については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-803">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="d1b66-804">数値で使用される標準およびカスタム書式指定文字列については、「[標準の数値書式](~/docs/standard/base-types/standard-numeric-format-strings.md)指定文字列」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-804">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="d1b66-805">列挙体で使用される標準書式指定文字列については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-805">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>

 <span data-ttu-id="d1b66-806">`provider` パラメーターは `args`内のオブジェクトの書式設定情報を提供できる <xref:System.IFormatProvider> の実装を指定します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-806">The `provider` parameter specifies an <xref:System.IFormatProvider> implementation that can provide formatting information for the objects in `args`.</span></span> <span data-ttu-id="d1b66-807">`provider` は、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-807">`provider` can be any of the following:</span></span>

-   <span data-ttu-id="d1b66-808">カルチャ固有の書式情報を提供する <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d1b66-808">A <xref:System.Globalization.CultureInfo> object that provides culture-specific formatting information.</span></span>

-   <span data-ttu-id="d1b66-809">`args`の数値にカルチャ固有の書式情報を提供する <xref:System.Globalization.NumberFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d1b66-809">A <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information for numeric values in `args`.</span></span>

-   <span data-ttu-id="d1b66-810">`args`の日付と時刻の値にカルチャ固有の書式情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d1b66-810">A <xref:System.Globalization.DateTimeFormatInfo> object that provides culture-specific formatting information for date and time values in `args`.</span></span>

-   <span data-ttu-id="d1b66-811">`args`内の1つ以上のオブジェクトの書式設定情報を提供するカスタム <xref:System.IFormatProvider> 実装。</span><span class="sxs-lookup"><span data-stu-id="d1b66-811">A custom <xref:System.IFormatProvider> implementation that provides formatting information for one or more of the objects in `args`.</span></span> <span data-ttu-id="d1b66-812">通常、このような実装では、<xref:System.ICustomFormatter> インターフェイスも実装します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-812">Typically, such an implementation also implements the <xref:System.ICustomFormatter> interface.</span></span> <span data-ttu-id="d1b66-813">次のセクションの2番目の例では、カスタム <xref:System.IFormatProvider> 実装を使用した <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> メソッド呼び出しについて説明します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-813">The second example in the next section illustrates an <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method call with a custom <xref:System.IFormatProvider> implementation.</span></span>

 <span data-ttu-id="d1b66-814">`provider` パラメーターが `null`の場合、書式プロバイダー情報は現在のカルチャから取得されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-814">If the `provider` parameter is `null`, format provider information is obtained from the current culture.</span></span>

 <span data-ttu-id="d1b66-815">`args` は、書式設定するオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-815">`args` represents the objects to be formatted.</span></span> <span data-ttu-id="d1b66-816">`format` 内の各書式指定項目は、`args`内の対応するオブジェクトの文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-816">Each format item in `format` is replaced with the string representation of the corresponding object in `args`.</span></span> <span data-ttu-id="d1b66-817">書式指定項目に `formatString` が含まれており、`args` 内の対応するオブジェクトが <xref:System.IFormattable> インターフェイスを実装している場合、`args[index].ToString(formatString, provider)` は書式設定を定義します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-817">If the format item includes `formatString` and the corresponding object in `args` implements the <xref:System.IFormattable> interface, then `args[index].ToString(formatString, provider)` defines the formatting.</span></span> <span data-ttu-id="d1b66-818">それ以外の場合は、`args[index].ToString()` によって書式設定が定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-818">Otherwise, `args[index].ToString()` defines the formatting.</span></span>



## Examples
 <span data-ttu-id="d1b66-819"><xref:System.Text.StringBuilder.AppendFormat%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-819">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]

 <span data-ttu-id="d1b66-820">次の例では、4桁と7桁のハイフンを使用して10桁の顧客番号を書式設定する `CustomerFormatter` という名前のカスタム <xref:System.IFormatProvider> 実装を定義します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-820">The following example defines a custom <xref:System.IFormatProvider> implementation named `CustomerFormatter` that formats a 10-digit customer number with hyphens after the fourth and seventh digits.</span></span> <span data-ttu-id="d1b66-821">これは、書式設定された顧客番号と顧客名を含む文字列を作成するために、<xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-821">It is passed to the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> method to create a string that includes the formatted customer number and customer name.</span></span>

 [!code-csharp[System.Text.StringBuilder.AppendFormat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/cs/customernumberformatter1.cs#1)]
 [!code-vb[System.Text.StringBuilder.AppendFormat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/vb/customernumberformatter1.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-822"><paramref name="format" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-822"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d1b66-823"><paramref name="format" /> is invalid.</span><span class="sxs-lookup"><span data-stu-id="d1b66-823"><paramref name="format" /> is invalid.</span></span>

<span data-ttu-id="d1b66-824">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-824">-or-</span></span>

<span data-ttu-id="d1b66-825">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="args" /> array.</span><span class="sxs-lookup"><span data-stu-id="d1b66-825">The index of a format item is less than 0 (zero), or greater than or equal to the length of the <paramref name="args" /> array.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-826">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-826">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-827">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-827">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-828">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-828">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="d1b66-829">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-829">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="d1b66-830">複合書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-830">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md"><span data-ttu-id="d1b66-831">方法 : カスタム数値書式プロバイダーを定義して使用する</span><span class="sxs-lookup"><span data-stu-id="d1b66-831">How to: Define and Use Custom Numeric Format Providers</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="d1b66-832">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-832">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="d1b66-833">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-833">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="d1b66-834">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-834">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="d1b66-835">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-835">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="d1b66-836">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-836">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="d1b66-837">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-837">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="d1b66-838">列挙型書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-838">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (format As String, arg0 As Object, arg1 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : string * obj * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="d1b66-839">A composite format string.</span><span class="sxs-lookup"><span data-stu-id="d1b66-839">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="d1b66-840">The first object to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-840">The first object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="d1b66-841">The second object to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-841">The second object to format.</span></span></param>
        <summary><span data-ttu-id="d1b66-842">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-842">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="d1b66-843">Each format item is replaced by the string representation of either of two arguments.</span><span class="sxs-lookup"><span data-stu-id="d1b66-843">Each format item is replaced by the string representation of either of two arguments.</span></span></summary>
        <returns><span data-ttu-id="d1b66-844">A reference to this instance with <paramref name="format" /> appended.</span><span class="sxs-lookup"><span data-stu-id="d1b66-844">A reference to this instance with <paramref name="format" /> appended.</span></span> <span data-ttu-id="d1b66-845">Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</span><span class="sxs-lookup"><span data-stu-id="d1b66-845">Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-846">このメソッドは、.NET Framework の[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)を使用して、オブジェクトの値をテキスト表現に変換し、その表現を現在の <xref:System.Text.StringBuilder> オブジェクトに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-846">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>

 <span data-ttu-id="d1b66-847">`format` パラメーターは、このメソッドのパラメーターリストに含まれる2つのオブジェクトの `arg0` と `arg1`に対応する書式項目と呼ばれる0個以上のインデックス付きプレースホルダーと共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-847">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to `arg0` and `arg1`, the two objects in the parameter list of this method.</span></span> <span data-ttu-id="d1b66-848">書式設定のプロセスでは、各書式項目が対応するオブジェクトの文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-848">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>

 <span data-ttu-id="d1b66-849">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-849">The syntax of a format item is as follows:</span></span>

 <span data-ttu-id="d1b66-850">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="d1b66-850">{*index*[,*length*][:*formatString*]}</span></span>

 <span data-ttu-id="d1b66-851">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-851">Elements in square brackets are optional.</span></span> <span data-ttu-id="d1b66-852">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-852">The following table describes each element.</span></span>

|<span data-ttu-id="d1b66-853">要素</span><span class="sxs-lookup"><span data-stu-id="d1b66-853">Element</span></span>|<span data-ttu-id="d1b66-854">説明</span><span class="sxs-lookup"><span data-stu-id="d1b66-854">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="d1b66-855">*index*</span><span class="sxs-lookup"><span data-stu-id="d1b66-855">*index*</span></span>|<span data-ttu-id="d1b66-856">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="d1b66-856">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="d1b66-857">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-857">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1b66-858">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-858">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|
|<span data-ttu-id="d1b66-859">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="d1b66-859">,*length*</span></span>|<span data-ttu-id="d1b66-860">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="d1b66-860">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="d1b66-861">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-861">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|
|<span data-ttu-id="d1b66-862">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="d1b66-862">:*formatString*</span></span>|<span data-ttu-id="d1b66-863">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="d1b66-863">A standard or custom format string that is supported by the parameter.</span></span>|

> [!NOTE]
>  <span data-ttu-id="d1b66-864">日付と時刻の値と共に使用される標準およびカスタム書式指定文字列については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-864">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="d1b66-865">数値で使用される標準およびカスタム書式指定文字列については、「[標準の数値書式](~/docs/standard/base-types/standard-numeric-format-strings.md)指定文字列」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-865">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="d1b66-866">列挙体で使用される標準書式指定文字列については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-866">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>

 <span data-ttu-id="d1b66-867">`arg0` と `arg1` は、書式設定するオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-867">`arg0` and `arg1` represent the objects to be formatted.</span></span> <span data-ttu-id="d1b66-868">`format` 内の各書式指定項目は、`arg0` または `arg1`の文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-868">Each format item in `format` is replaced with the string representation of either `arg0` or `arg1`.</span></span> <span data-ttu-id="d1b66-869">書式指定項目に `formatString` が含まれており、対応するオブジェクトが <xref:System.IFormattable> インターフェイスを実装している場合、`arg`*x*`.ToString(formatString, provider)` は書式を定義します。ここで、 *x*は引数のインデックスです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-869">If the format item includes `formatString` and the corresponding object implements the <xref:System.IFormattable> interface, then `arg`*x*`.ToString(formatString, provider)` defines the formatting, where *x* is the index of the argument.</span></span> <span data-ttu-id="d1b66-870">それ以外の場合は、`arg`*x*`.ToString()` によって書式設定が定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-870">Otherwise, `arg`*x*`.ToString()` defines the formatting.</span></span>

 <span data-ttu-id="d1b66-871">`format` に割り当てられた文字列が "{0: # # # #} の食料を慈善団体に寄付しようとしています" という内容の場合は、</span><span class="sxs-lookup"><span data-stu-id="d1b66-871">If the string assigned to `format` is "Thank you for your donation of {0:####} cans of food to our charitable organization."</span></span> <span data-ttu-id="d1b66-872">また `arg0` は値が10の整数です。この戻り値は、"私たちの慈善団体に対して10人の食べ物を寄付したとしていただき、ありがとうございました" となります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-872">and `arg0` is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</span></span>



## Examples
 <span data-ttu-id="d1b66-873"><xref:System.Text.StringBuilder.AppendFormat%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-873">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-874"><paramref name="format" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-874"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d1b66-875"><paramref name="format" /> is invalid.</span><span class="sxs-lookup"><span data-stu-id="d1b66-875"><paramref name="format" /> is invalid.</span></span>

<span data-ttu-id="d1b66-876">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-876">-or-</span></span>

<span data-ttu-id="d1b66-877">The index of a format item is less than 0 (zero), or greater than or equal to 2.</span><span class="sxs-lookup"><span data-stu-id="d1b66-877">The index of a format item is less than 0 (zero), or greater than or equal to 2.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-878">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-878">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-879">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-879">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-880">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-880">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="d1b66-881">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-881">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="d1b66-882">複合書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-882">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="d1b66-883">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-883">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="d1b66-884">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-884">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="d1b66-885">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-885">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="d1b66-886">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-886">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="d1b66-887">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-887">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="d1b66-888">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-888">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="d1b66-889">列挙型書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-889">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (IFormatProvider provider, string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (provider As IFormatProvider, format As String, arg0 As Object, arg1 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : IFormatProvider * string * obj * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (provider, format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d1b66-890">An object that supplies culture-specific formatting information.</span><span class="sxs-lookup"><span data-stu-id="d1b66-890">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="format"><span data-ttu-id="d1b66-891">A composite format string.</span><span class="sxs-lookup"><span data-stu-id="d1b66-891">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="d1b66-892">The first object to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-892">The first object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="d1b66-893">The second object to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-893">The second object to format.</span></span></param>
        <summary><span data-ttu-id="d1b66-894">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-894">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="d1b66-895">Each format item is replaced by the string representation of either of two arguments using a specified format provider.</span><span class="sxs-lookup"><span data-stu-id="d1b66-895">Each format item is replaced by the string representation of either of two arguments using a specified format provider.</span></span></summary>
        <returns><span data-ttu-id="d1b66-896">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-896">A reference to this instance after the append operation has completed.</span></span> <span data-ttu-id="d1b66-897">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument.</span><span class="sxs-lookup"><span data-stu-id="d1b66-897">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-898">このメソッドは、.NET Framework の[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)を使用して、オブジェクトの値をテキスト表現に変換し、その表現を現在の <xref:System.Text.StringBuilder> オブジェクトに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-898">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>

 <span data-ttu-id="d1b66-899">`format` パラメーターは、このメソッドのパラメーターリスト内のオブジェクトに対応する0個以上のインデックス付きプレースホルダー (書式項目と呼ばれます) と共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-899">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</span></span> <span data-ttu-id="d1b66-900">書式設定のプロセスでは、各書式項目が対応するオブジェクトの文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-900">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>

 <span data-ttu-id="d1b66-901">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-901">The syntax of a format item is as follows:</span></span>

 <span data-ttu-id="d1b66-902">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="d1b66-902">{*index*[,*length*][:*formatString*]}</span></span>

 <span data-ttu-id="d1b66-903">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-903">Elements in square brackets are optional.</span></span> <span data-ttu-id="d1b66-904">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-904">The following table describes each element.</span></span>

|<span data-ttu-id="d1b66-905">要素</span><span class="sxs-lookup"><span data-stu-id="d1b66-905">Element</span></span>|<span data-ttu-id="d1b66-906">説明</span><span class="sxs-lookup"><span data-stu-id="d1b66-906">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="d1b66-907">*index*</span><span class="sxs-lookup"><span data-stu-id="d1b66-907">*index*</span></span>|<span data-ttu-id="d1b66-908">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="d1b66-908">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="d1b66-909">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-909">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1b66-910">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-910">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|
|<span data-ttu-id="d1b66-911">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="d1b66-911">,*length*</span></span>|<span data-ttu-id="d1b66-912">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="d1b66-912">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="d1b66-913">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-913">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|
|<span data-ttu-id="d1b66-914">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="d1b66-914">:*formatString*</span></span>|<span data-ttu-id="d1b66-915">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="d1b66-915">A standard or custom format string that is supported by the parameter.</span></span>|

> [!NOTE]
>  <span data-ttu-id="d1b66-916">日付と時刻の値と共に使用される標準およびカスタム書式指定文字列については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-916">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="d1b66-917">数値で使用される標準およびカスタム書式指定文字列については、「[標準の数値書式](~/docs/standard/base-types/standard-numeric-format-strings.md)指定文字列」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-917">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="d1b66-918">列挙体で使用される標準書式指定文字列については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-918">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>

 <span data-ttu-id="d1b66-919">`provider` パラメーターは、`arg0` と `arg1`の書式設定情報を提供できる <xref:System.IFormatProvider> の実装を指定します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-919">The `provider` parameter specifies an <xref:System.IFormatProvider> implementation that can provide formatting information for `arg0` and `arg1`.</span></span> <span data-ttu-id="d1b66-920">`provider` は、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-920">`provider` can be any of the following:</span></span>

-   <span data-ttu-id="d1b66-921">カルチャ固有の書式情報を提供する <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d1b66-921">A <xref:System.Globalization.CultureInfo> object that provides culture-specific formatting information.</span></span>

-   <span data-ttu-id="d1b66-922">数値の場合、`arg0` または `arg1` にカルチャ固有の書式情報を提供する <xref:System.Globalization.NumberFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d1b66-922">A <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information for `arg0` or `arg1` if they are numeric values.</span></span>

-   <span data-ttu-id="d1b66-923">日付と時刻の値の場合、`arg0` または `arg1` にカルチャ固有の書式情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d1b66-923">A <xref:System.Globalization.DateTimeFormatInfo> object that provides culture-specific formatting information for `arg0` or `arg1` if they are date and time values.</span></span>

-   <span data-ttu-id="d1b66-924">`arg0` および `arg1`の書式設定情報を提供するカスタム <xref:System.IFormatProvider> 実装。</span><span class="sxs-lookup"><span data-stu-id="d1b66-924">A custom <xref:System.IFormatProvider> implementation that provides formatting information for `arg0` and `arg1`.</span></span> <span data-ttu-id="d1b66-925">通常、このような実装では、<xref:System.ICustomFormatter> インターフェイスも実装します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-925">Typically, such an implementation also implements the <xref:System.ICustomFormatter> interface.</span></span>

 <span data-ttu-id="d1b66-926">`provider` パラメーターが `null`の場合、書式プロバイダー情報は現在のカルチャから取得されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-926">If the `provider` parameter is `null`, format provider information is obtained from the current culture.</span></span>

 <span data-ttu-id="d1b66-927">`arg0` と `arg1` は、書式設定するオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-927">`arg0` and `arg1` represent the objects to be formatted.</span></span> <span data-ttu-id="d1b66-928">`format` 内の各書式指定項目は、対応するインデックスを持つオブジェクトの文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-928">Each format item in `format` is replaced with the string representation of the object that has the corresponding index.</span></span> <span data-ttu-id="d1b66-929">書式指定項目に `formatString` が含まれていて、対応する引数が <xref:System.IFormattable> インターフェイスを実装している場合は、引数の `ToString(formatString, provider)` メソッドによって書式設定が定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-929">If the format item includes `formatString` and the corresponding argument implements the <xref:System.IFormattable> interface, then the argument's `ToString(formatString, provider)` method defines the formatting.</span></span> <span data-ttu-id="d1b66-930">それ以外の場合は、引数の `ToString()` メソッドによって書式設定が定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-930">Otherwise, the argument's `ToString()` method defines the formatting.</span></span>



## Examples
 <span data-ttu-id="d1b66-931">次の例では、<xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%29> メソッドを使用して、ジェネリック <xref:System.Collections.Generic.Dictionary%602> オブジェクトに格納されている時間と気温のデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-931">The following example uses the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%29> method to display time and temperature data stored in a generic <xref:System.Collections.Generic.Dictionary%602> object.</span></span> <span data-ttu-id="d1b66-932">書式指定文字列には、書式設定するオブジェクトだけではなく、3つの書式項目があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-932">Note that the format string has three format items, although there are only to objects to format.</span></span> <span data-ttu-id="d1b66-933">これは、リスト内の最初のオブジェクト (日付と時刻の値) が2つの書式指定項目によって使用されるためです。最初の書式項目は時刻を表示し、2番目のオブジェクトは日付を表示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-933">This is because the first object in the list (a date and time value) is used by two format items: The first format item displays the time, and the second displays the date.</span></span>

 [!code-csharp[System.Text.StringBuilder.AppendFormat#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/cs/appendformat2.cs#3)]
 [!code-vb[System.Text.StringBuilder.AppendFormat#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/vb/appendformat2.vb#3)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-934"><paramref name="format" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-934"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d1b66-935"><paramref name="format" /> is invalid.</span><span class="sxs-lookup"><span data-stu-id="d1b66-935"><paramref name="format" /> is invalid.</span></span>

<span data-ttu-id="d1b66-936">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-936">-or-</span></span>

<span data-ttu-id="d1b66-937">The index of a format item is less than 0 (zero), or greater than or equal to 2 (two).</span><span class="sxs-lookup"><span data-stu-id="d1b66-937">The index of a format item is less than 0 (zero), or greater than or equal to 2 (two).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-938">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-938">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-939">プロファイリング .NET Core と .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-939">IIn .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-940">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-940">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="d1b66-941">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-941">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="d1b66-942">複合書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-942">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md"><span data-ttu-id="d1b66-943">方法 : カスタム数値書式プロバイダーを定義して使用する</span><span class="sxs-lookup"><span data-stu-id="d1b66-943">How to: Define and Use Custom Numeric Format Providers</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="d1b66-944">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-944">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="d1b66-945">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-945">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="d1b66-946">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-946">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="d1b66-947">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-947">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="d1b66-948">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-948">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="d1b66-949">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-949">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="d1b66-950">列挙型書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-950">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (format As String, arg0 As Object, arg1 As Object, arg2 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : string * obj * obj * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="d1b66-951">A composite format string.</span><span class="sxs-lookup"><span data-stu-id="d1b66-951">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="d1b66-952">The first object to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-952">The first object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="d1b66-953">The second object to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-953">The second object to format.</span></span></param>
        <param name="arg2"><span data-ttu-id="d1b66-954">The third object to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-954">The third object to format.</span></span></param>
        <summary><span data-ttu-id="d1b66-955">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-955">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="d1b66-956">Each format item is replaced by the string representation of either of three arguments.</span><span class="sxs-lookup"><span data-stu-id="d1b66-956">Each format item is replaced by the string representation of either of three arguments.</span></span></summary>
        <returns><span data-ttu-id="d1b66-957">A reference to this instance with <paramref name="format" /> appended.</span><span class="sxs-lookup"><span data-stu-id="d1b66-957">A reference to this instance with <paramref name="format" /> appended.</span></span> <span data-ttu-id="d1b66-958">Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</span><span class="sxs-lookup"><span data-stu-id="d1b66-958">Each format item in <paramref name="format" /> is replaced by the string representation of the corresponding object argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-959">このメソッドは、.NET Framework の[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)を使用して、オブジェクトの値をテキスト表現に変換し、その表現を現在の <xref:System.Text.StringBuilder> オブジェクトに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-959">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>

 <span data-ttu-id="d1b66-960">`format` パラメーターは、書式指定項目と呼ばれる0個以上のインデックス付きプレースホルダーと共に、0個以上のテキストの実行で構成されます。これは、このメソッドのパラメーターリスト内のオブジェクト `arg2`によって `arg0` に対応します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-960">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to `arg0` through `arg2`, the objects in the parameter list of this method.</span></span> <span data-ttu-id="d1b66-961">書式設定のプロセスでは、各書式項目が対応するオブジェクトの文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-961">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>

 <span data-ttu-id="d1b66-962">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-962">The syntax of a format item is as follows:</span></span>

 <span data-ttu-id="d1b66-963">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="d1b66-963">{*index*[,*length*][:*formatString*]}</span></span>

 <span data-ttu-id="d1b66-964">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-964">Elements in square brackets are optional.</span></span> <span data-ttu-id="d1b66-965">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-965">The following table describes each element.</span></span>

|<span data-ttu-id="d1b66-966">要素</span><span class="sxs-lookup"><span data-stu-id="d1b66-966">Element</span></span>|<span data-ttu-id="d1b66-967">説明</span><span class="sxs-lookup"><span data-stu-id="d1b66-967">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="d1b66-968">*index*</span><span class="sxs-lookup"><span data-stu-id="d1b66-968">*index*</span></span>|<span data-ttu-id="d1b66-969">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="d1b66-969">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="d1b66-970">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-970">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1b66-971">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-971">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|
|<span data-ttu-id="d1b66-972">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="d1b66-972">,*length*</span></span>|<span data-ttu-id="d1b66-973">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="d1b66-973">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="d1b66-974">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-974">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|
|<span data-ttu-id="d1b66-975">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="d1b66-975">:*formatString*</span></span>|<span data-ttu-id="d1b66-976">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="d1b66-976">A standard or custom format string that is supported by the parameter.</span></span>|

> [!NOTE]
>  <span data-ttu-id="d1b66-977">日付と時刻の値と共に使用される標準およびカスタム書式指定文字列については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-977">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="d1b66-978">数値で使用される標準およびカスタム書式指定文字列については、「[標準の数値書式](~/docs/standard/base-types/standard-numeric-format-strings.md)指定文字列」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-978">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="d1b66-979">列挙体で使用される標準書式指定文字列については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-979">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>

 <span data-ttu-id="d1b66-980">`arg0`、`arg1`、および `arg2` は、書式設定するオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-980">`arg0`, `arg1`, and `arg2` represent the objects to be formatted.</span></span> <span data-ttu-id="d1b66-981">`format` の各書式指定項目は、書式項目のインデックスに応じて、`arg0`、`arg1`、または `arg2`のいずれかの文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-981">Each format item in `format` is replaced with the string representation of either `arg0`, `arg1`, or `arg2`, depending on the index of the format item.</span></span> <span data-ttu-id="d1b66-982">書式指定項目に `formatString` が含まれており、`args` 内の対応するオブジェクトが <xref:System.IFormattable> インターフェイスを実装している場合、`arg`*x*`.ToString(formatString, null)` は書式を定義します。ここで、 *x*は引数のインデックスです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-982">If the format item includes `formatString` and the corresponding object in `args` implements the <xref:System.IFormattable> interface, then `arg`*x*`.ToString(formatString, null)` defines the formatting, where *x* is the index of the argument.</span></span> <span data-ttu-id="d1b66-983">それ以外の場合は、`arg`*x*`.ToString()` によって書式設定が定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-983">Otherwise, `arg`*x*`.ToString()` defines the formatting.</span></span>

 <span data-ttu-id="d1b66-984">`format` に割り当てられた文字列が "{0: # # # #} の食料を慈善団体に寄付しようとしています" という内容の場合は、</span><span class="sxs-lookup"><span data-stu-id="d1b66-984">If the string assigned to `format` is "Thank you for your donation of {0:####} cans of food to our charitable organization."</span></span> <span data-ttu-id="d1b66-985">また `arg0` は値が10の整数です。この戻り値は、"私たちの慈善団体に対して10人の食べ物を寄付したとしていただき、ありがとうございました" となります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-985">and `arg0` is an integer with the value 10, the return value will be "Thank you for your donation of 10 cans of food to our charitable organization."</span></span>



## Examples
 <span data-ttu-id="d1b66-986"><xref:System.Text.StringBuilder.AppendFormat%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-986">The following example demonstrates the <xref:System.Text.StringBuilder.AppendFormat%2A> method.</span></span>

 [!code-cpp[stringbuilder.appendformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendformat/CPP/appfmt.cpp#1)]
 [!code-csharp[stringbuilder.appendformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendformat/CS/appfmt.cs#1)]
 [!code-vb[stringbuilder.appendformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendformat/VB/appfmt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-987"><paramref name="format" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-987"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d1b66-988"><paramref name="format" /> is invalid.</span><span class="sxs-lookup"><span data-stu-id="d1b66-988"><paramref name="format" /> is invalid.</span></span>

<span data-ttu-id="d1b66-989">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-989">-or-</span></span>

<span data-ttu-id="d1b66-990">The index of a format item is less than 0 (zero), or greater than or equal to 3.</span><span class="sxs-lookup"><span data-stu-id="d1b66-990">The index of a format item is less than 0 (zero), or greater than or equal to 3.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-991">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-991">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-992">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-992">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-993">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-993">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="d1b66-994">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-994">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="d1b66-995">複合書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-995">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="d1b66-996">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-996">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="d1b66-997">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-997">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="d1b66-998">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-998">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="d1b66-999">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-999">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="d1b66-1000">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-1000">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="d1b66-1001">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-1001">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="d1b66-1002">列挙型書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-1002">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendFormat">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendFormat (IFormatProvider provider, string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendFormat(class System.IFormatProvider provider, string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendFormat (provider As IFormatProvider, format As String, arg0 As Object, arg1 As Object, arg2 As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendFormat(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="member this.AppendFormat : IFormatProvider * string * obj * obj * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendFormat (provider, format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="format" Type="System.String" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg0" Type="System.Object" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg1" Type="System.Object" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="arg2" Type="System.Object" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="d1b66-1003">An object that supplies culture-specific formatting information.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1003">An object that supplies culture-specific formatting information.</span></span></param>
        <param name="format"><span data-ttu-id="d1b66-1004">A composite format string.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1004">A composite format string.</span></span></param>
        <param name="arg0"><span data-ttu-id="d1b66-1005">The first object to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1005">The first object to format.</span></span></param>
        <param name="arg1"><span data-ttu-id="d1b66-1006">The second object to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1006">The second object to format.</span></span></param>
        <param name="arg2"><span data-ttu-id="d1b66-1007">The third object to format.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1007">The third object to format.</span></span></param>
        <summary><span data-ttu-id="d1b66-1008">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1008">Appends the string returned by processing a composite format string, which contains zero or more format items, to this instance.</span></span> <span data-ttu-id="d1b66-1009">Each format item is replaced by the string representation of either of three arguments using a specified format provider.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1009">Each format item is replaced by the string representation of either of three arguments using a specified format provider.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1010">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1010">A reference to this instance after the append operation has completed.</span></span> <span data-ttu-id="d1b66-1011">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1011">After the append operation, this instance contains any data that existed before the operation, suffixed by a copy of <paramref name="format" /> where any format specification is replaced by the string representation of the corresponding object argument.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1012">このメソッドは、.NET Framework の[複合書式指定機能](~/docs/standard/base-types/composite-formatting.md)を使用して、オブジェクトの値をテキスト表現に変換し、その表現を現在の <xref:System.Text.StringBuilder> オブジェクトに埋め込みます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1012">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) of the .NET Framework to convert the value of an object to its text representation and embed that representation in the current <xref:System.Text.StringBuilder> object.</span></span>

 <span data-ttu-id="d1b66-1013">`format` パラメーターは、このメソッドのパラメーターリスト内のオブジェクトに対応する0個以上のインデックス付きプレースホルダー (書式項目と呼ばれます) と共に、0個以上のテキストの実行で構成されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1013">The `format` parameter consists of zero or more runs of text intermixed with zero or more indexed placeholders, called format items, that correspond to objects in the parameter list of this method.</span></span> <span data-ttu-id="d1b66-1014">書式設定のプロセスでは、各書式項目が対応するオブジェクトの文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1014">The formatting process replaces each format item with the string representation of the corresponding object.</span></span>

 <span data-ttu-id="d1b66-1015">書式指定項目の構文は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1015">The syntax of a format item is as follows:</span></span>

 <span data-ttu-id="d1b66-1016">{*index*[,*length*][:*formatString*]}</span><span class="sxs-lookup"><span data-stu-id="d1b66-1016">{*index*[,*length*][:*formatString*]}</span></span>

 <span data-ttu-id="d1b66-1017">角かっこ内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1017">Elements in square brackets are optional.</span></span> <span data-ttu-id="d1b66-1018">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1018">The following table describes each element.</span></span>

|<span data-ttu-id="d1b66-1019">要素</span><span class="sxs-lookup"><span data-stu-id="d1b66-1019">Element</span></span>|<span data-ttu-id="d1b66-1020">説明</span><span class="sxs-lookup"><span data-stu-id="d1b66-1020">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="d1b66-1021">*index*</span><span class="sxs-lookup"><span data-stu-id="d1b66-1021">*index*</span></span>|<span data-ttu-id="d1b66-1022">書式設定するオブジェクトのパラメーターリスト内の0から始まる位置。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1022">The zero-based position in the parameter list of the object to be formatted.</span></span> <span data-ttu-id="d1b66-1023">*Index*で指定されたオブジェクトが `null`場合、書式項目は <xref:System.String.Empty?displayProperty=nameWithType>に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1023">If the object specified by *index* is `null`, the format item is replaced by <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1b66-1024">*インデックス*位置にパラメーターがない場合は、<xref:System.FormatException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1024">If there is no parameter in the *index* position, a <xref:System.FormatException> is thrown.</span></span>|
|<span data-ttu-id="d1b66-1025">、*長さ*</span><span class="sxs-lookup"><span data-stu-id="d1b66-1025">,*length*</span></span>|<span data-ttu-id="d1b66-1026">パラメーターの文字列形式の最小文字数。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1026">The minimum number of characters in the string representation of the parameter.</span></span> <span data-ttu-id="d1b66-1027">正の場合、パラメーターは右上にあります。負の場合は、左揃えになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1027">If positive, the parameter is right-aligned; if negative, it is left-aligned.</span></span>|
|<span data-ttu-id="d1b66-1028">:*formatString*</span><span class="sxs-lookup"><span data-stu-id="d1b66-1028">:*formatString*</span></span>|<span data-ttu-id="d1b66-1029">パラメーターでサポートされている標準またはカスタムの書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1029">A standard or custom format string that is supported by the parameter.</span></span>|

> [!NOTE]
>  <span data-ttu-id="d1b66-1030">日付と時刻の値と共に使用される標準およびカスタム書式指定文字列については、「[標準の日付と時刻の書式指定文字列](~/docs/standard/base-types/standard-date-and-time-format-strings.md)」および「[カスタム日時書式指定文字列](~/docs/standard/base-types/custom-date-and-time-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1030">For the standard and custom format strings used with date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span> <span data-ttu-id="d1b66-1031">数値で使用される標準およびカスタム書式指定文字列については、「[標準の数値書式](~/docs/standard/base-types/standard-numeric-format-strings.md)指定文字列」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1031">For the standard and custom format strings used with numeric values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="d1b66-1032">列挙体で使用される標準書式指定文字列については、「[列挙型書式指定文字列](~/docs/standard/base-types/enumeration-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1032">For the standard format strings used with enumerations, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>

 <span data-ttu-id="d1b66-1033">`provider` パラメーターは、`arg0` と `arg1`の書式設定情報を提供できる <xref:System.IFormatProvider> の実装を指定します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1033">The `provider` parameter specifies an <xref:System.IFormatProvider> implementation that can provide formatting information for `arg0` and `arg1`.</span></span> <span data-ttu-id="d1b66-1034">`provider` は、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1034">`provider` can be any of the following:</span></span>

-   <span data-ttu-id="d1b66-1035">カルチャ固有の書式情報を提供する <xref:System.Globalization.CultureInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1035">A <xref:System.Globalization.CultureInfo> object that provides culture-specific formatting information.</span></span>

-   <span data-ttu-id="d1b66-1036">数値の場合、`arg0` または `arg1` にカルチャ固有の書式情報を提供する <xref:System.Globalization.NumberFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1036">A <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information for `arg0` or `arg1` if they are numeric values.</span></span>

-   <span data-ttu-id="d1b66-1037">`arg0`、`arg1`、または `arg2` の日付と時刻の値である場合に、カルチャ固有の書式情報を提供する <xref:System.Globalization.DateTimeFormatInfo> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1037">A <xref:System.Globalization.DateTimeFormatInfo> object that provides culture-specific formatting information for `arg0`, `arg1`, or `arg2` if they are date and time values.</span></span>

-   <span data-ttu-id="d1b66-1038">`arg0`、`arg1`、および `arg2`の書式設定情報を提供するカスタム <xref:System.IFormatProvider> 実装。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1038">A custom <xref:System.IFormatProvider> implementation that provides formatting information for `arg0`,  `arg1`, and `arg2`.</span></span> <span data-ttu-id="d1b66-1039">通常、このような実装では、<xref:System.ICustomFormatter> インターフェイスも実装します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1039">Typically, such an implementation also implements the <xref:System.ICustomFormatter> interface.</span></span>

 <span data-ttu-id="d1b66-1040">`provider` パラメーターが `null`の場合、書式プロバイダー情報は現在のカルチャから取得されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1040">If the `provider` parameter is `null`, format provider information is obtained from the current culture.</span></span>

 <span data-ttu-id="d1b66-1041">`arg0`、`arg1`、および `arg2` は、書式設定するオブジェクトを表します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1041">`arg0`, `arg1`, and `arg2` represent the objects to be formatted.</span></span> <span data-ttu-id="d1b66-1042">`format` 内の各書式指定項目は、対応するインデックスを持つオブジェクトの文字列形式に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1042">Each format item in `format` is replaced with the string representation of the object that has the corresponding index.</span></span> <span data-ttu-id="d1b66-1043">書式指定項目に `formatString` が含まれていて、対応する引数が <xref:System.IFormattable> インターフェイスを実装している場合は、引数の `ToString(formatString, provider)` メソッドによって書式設定が定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1043">If the format item includes `formatString` and the corresponding argument implements the <xref:System.IFormattable> interface, then the argument's `ToString(formatString, provider)` method defines the formatting.</span></span> <span data-ttu-id="d1b66-1044">それ以外の場合は、引数の `ToString()` メソッドによって書式設定が定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1044">Otherwise, the argument's `ToString()` method defines the formatting.</span></span>



## Examples
 <span data-ttu-id="d1b66-1045">次の例では、<xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> メソッドを使用して、整数値を持つブール `And` 演算の結果を示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1045">The following example uses the <xref:System.Text.StringBuilder.AppendFormat%28System.IFormatProvider%2CSystem.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method to illustrate the result of a Boolean `And` operation with integer values.</span></span> <span data-ttu-id="d1b66-1046">書式指定文字列には6つの書式項目が含まれていますが、各項目は2つの異なる方法で書式設定されるため、メソッドの引数リストには3つの項目しかありません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1046">Note that the format string includes six format items, but the method has only three items in its argument list, because each item is formatted in two different ways.</span></span>

 [!code-csharp[System.Text.StringBuilder.AppendFormat#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/cs/appendformat3.cs#4)]
 [!code-vb[System.Text.StringBuilder.AppendFormat#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.appendformat/vb/appendformat3.vb#4)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-1047"><paramref name="format" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1047"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="d1b66-1048"><paramref name="format" /> is invalid.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1048"><paramref name="format" /> is invalid.</span></span>

<span data-ttu-id="d1b66-1049">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1049">-or-</span></span>

<span data-ttu-id="d1b66-1050">The index of a format item is less than 0 (zero), or greater than or equal to 3 (three).</span><span class="sxs-lookup"><span data-stu-id="d1b66-1050">The index of a format item is less than 0 (zero), or greater than or equal to 3 (three).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1051">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1051">The length of the expanded string would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1052">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1052">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-1053">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1053">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="d1b66-1054">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-1054">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/composite-formatting.md"><span data-ttu-id="d1b66-1055">複合書式設定</span><span class="sxs-lookup"><span data-stu-id="d1b66-1055">Composite Formatting</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md"><span data-ttu-id="d1b66-1056">方法 : カスタム数値書式プロバイダーを定義して使用する</span><span class="sxs-lookup"><span data-stu-id="d1b66-1056">How to: Define and Use Custom Numeric Format Providers</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="d1b66-1057">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-1057">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="d1b66-1058">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-1058">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-date-and-time-format-strings.md"><span data-ttu-id="d1b66-1059">標準の日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-1059">Standard Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-date-and-time-format-strings.md"><span data-ttu-id="d1b66-1060">カスタム日時書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-1060">Custom Date and Time Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-timespan-format-strings.md"><span data-ttu-id="d1b66-1061">標準 TimeSpan 書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-1061">Standard TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-timespan-format-strings.md"><span data-ttu-id="d1b66-1062">カスタム時間間隔書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-1062">Custom TimeSpan Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/enumeration-format-strings.md"><span data-ttu-id="d1b66-1063">列挙型書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="d1b66-1063">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin (char separator, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin(char separator, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin(System.Char,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin (separator As Char, ParamArray values As Object()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendJoin(char separator, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : char * obj[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="d1b66-1064">The character to use as a separator.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1064">The character to use as a separator.</span></span> <span data-ttu-id="d1b66-1065"><paramref name="separator" /> is included in the joined strings only if <paramref name="values" /> has more than one element.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1065"><paramref name="separator" /> is included in the joined strings only if <paramref name="values" /> has more than one element.</span></span></param>
        <param name="values"><span data-ttu-id="d1b66-1066">An array that contains the strings to concatenate and append to the current instance of the string builder.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1066">An array that contains the strings to concatenate and append to the current instance of the string builder.</span></span></param>
        <summary><span data-ttu-id="d1b66-1067">Concatenates the string representations of the elements in the provided array of objects, using the specified char separator between each member, then appends the result to the current instance of the string builder.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1067">Concatenates the string representations of the elements in the provided array of objects, using the specified char separator between each member, then appends the result to the current instance of the string builder.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1068">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1068">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin (char separator, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin(char separator, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin(System.Char,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin (separator As Char, ParamArray values As String()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendJoin(char separator, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : char * string[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="d1b66-1069">The character to use as a separator.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1069">The character to use as a separator.</span></span> <span data-ttu-id="d1b66-1070"><paramref name="separator" /> is included in the joined strings only if <paramref name="values" /> has more than one element.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1070"><paramref name="separator" /> is included in the joined strings only if <paramref name="values" /> has more than one element.</span></span></param>
        <param name="values"><span data-ttu-id="d1b66-1071">An array that contains the strings to concatenate and append to the current instance of the string builder.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1071">An array that contains the strings to concatenate and append to the current instance of the string builder.</span></span></param>
        <summary><span data-ttu-id="d1b66-1072">Concatenates the strings of the provided array, using the specified char separator between each string, then appends the result to the current instance of the string builder.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1072">Concatenates the strings of the provided array, using the specified char separator between each string, then appends the result to the current instance of the string builder.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1073">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1073">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin (string separator, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin(string separator, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin (separator As String, ParamArray values As Object()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendJoin(System::String ^ separator, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : string * obj[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.Object[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="d1b66-1074">The string to use as a separator.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1074">The string to use as a separator.</span></span> <span data-ttu-id="d1b66-1075"><paramref name="separator" /> is included in the joined strings only if <paramref name="values" /> has more than one element.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1075"><paramref name="separator" /> is included in the joined strings only if <paramref name="values" /> has more than one element.</span></span></param>
        <param name="values"><span data-ttu-id="d1b66-1076">An array that contains the strings to concatenate and append to the current instance of the string builder.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1076">An array that contains the strings to concatenate and append to the current instance of the string builder.</span></span></param>
        <summary><span data-ttu-id="d1b66-1077">Concatenates the string representations of the elements in the provided array of objects, using the specified separator between each member, then appends the result to the current instance of the string builder.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1077">Concatenates the string representations of the elements in the provided array of objects, using the specified separator between each member, then appends the result to the current instance of the string builder.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1078">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1078">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin (string separator, params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin(string separator, string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin (separator As String, ParamArray values As String()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendJoin(System::String ^ separator, ... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : string * string[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.String[]" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator"><span data-ttu-id="d1b66-1079">The string to use as a separator.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1079">The string to use as a separator.</span></span> <span data-ttu-id="d1b66-1080"><paramref name="separator" /> is included in the joined strings only if <paramref name="values" /> has more than one element.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1080"><paramref name="separator" /> is included in the joined strings only if <paramref name="values" /> has more than one element.</span></span></param>
        <param name="values"><span data-ttu-id="d1b66-1081">An array that contains the strings to concatenate and append to the current instance of the string builder.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1081">An array that contains the strings to concatenate and append to the current instance of the string builder.</span></span></param>
        <summary><span data-ttu-id="d1b66-1082">Concatenates the strings of the provided array, using the specified separator between each string, then appends the result to the current instance of the string builder.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1082">Concatenates the strings of the provided array, using the specified separator between each string, then appends the result to the current instance of the string builder.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1083">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1083">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin&lt;T&gt; (char separator, System.Collections.Generic.IEnumerable&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin&lt;T&gt;(char separator, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin``1(System.Char,System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin(Of T) (separator As Char, values As IEnumerable(Of T)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Text::StringBuilder ^ AppendJoin(char separator, System::Collections::Generic::IEnumerable&lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : char * seq&lt;'T&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="d1b66-1084"><paramref name="values" /> のメンバーの型。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1084">The type of the members of <paramref name="values" />.</span></span></typeparam>
        <param name="separator"><span data-ttu-id="d1b66-1085">The character to use as a separator.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1085">The character to use as a separator.</span></span> <span data-ttu-id="d1b66-1086"><paramref name="separator" /> is included in the concatenated and appended strings only if <paramref name="values" /> has more than one element.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1086"><paramref name="separator" /> is included in the concatenated and appended strings only if <paramref name="values" /> has more than one element.</span></span></param>
        <param name="values"><span data-ttu-id="d1b66-1087">A collection that contains the objects to concatenate and append to the current instance of the string builder.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1087">A collection that contains the objects to concatenate and append to the current instance of the string builder.</span></span></param>
        <summary><span data-ttu-id="d1b66-1088">Concatenates and appends the members of a collection, using the specified char separator between each member.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1088">Concatenates and appends the members of a collection, using the specified char separator between each member.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1089">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1089">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendJoin&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendJoin&lt;T&gt; (string separator, System.Collections.Generic.IEnumerable&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendJoin&lt;T&gt;(string separator, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendJoin``1(System.String,System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendJoin(Of T) (separator As String, values As IEnumerable(Of T)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Text::StringBuilder ^ AppendJoin(System::String ^ separator, System::Collections::Generic::IEnumerable&lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="member this.AppendJoin : string * seq&lt;'T&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendJoin (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="separator" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="d1b66-1090"><paramref name="values" /> のメンバーの型。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1090">The type of the members of <paramref name="values" />.</span></span></typeparam>
        <param name="separator"><span data-ttu-id="d1b66-1091">The string to use as a separator.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1091">The string to use as a separator.</span></span> <span data-ttu-id="d1b66-1092"><paramref name="separator" /> is included in the concatenated and appended strings only if <paramref name="values" /> has more than one element.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1092"><paramref name="separator" /> is included in the concatenated and appended strings only if <paramref name="values" /> has more than one element.</span></span></param>
        <param name="values"><span data-ttu-id="d1b66-1093">A collection that contains the objects to concatenate and append to the current instance of the string builder.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1093">A collection that contains the objects to concatenate and append to the current instance of the string builder.</span></span></param>
        <summary><span data-ttu-id="d1b66-1094">Concatenates and appends the members of a collection, using the specified separator between each member.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1094">Concatenates and appends the members of a collection, using the specified separator between each member.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1095">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1095">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendLine">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1b66-1096">Appends the default line terminator, or a copy of a specified string and the default line terminator, to the end of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1096">Appends the default line terminator, or a copy of a specified string and the default line terminator, to the end of this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendLine" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendLine () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendLine();" />
      <MemberSignature Language="F#" Value="member this.AppendLine : unit -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1b66-1097">Appends the default line terminator to the end of the current <see cref="T:System.Text.StringBuilder" /> object.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1097">Appends the default line terminator to the end of the current <see cref="T:System.Text.StringBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1098">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1098">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1099">既定の行終端記号は、<xref:System.Environment.NewLine%2A?displayProperty=nameWithType> プロパティの現在の値です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1099">The default line terminator is the current value of the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> property.</span></span>

 <span data-ttu-id="d1b66-1100">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1100">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1101"><xref:System.Text.StringBuilder.AppendLine%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1101">The following example demonstrates the <xref:System.Text.StringBuilder.AppendLine%2A> method.</span></span>

 [!code-cpp[stringbuilder.appendline#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.appendline/CPP/al.cpp#1)]
 [!code-csharp[stringbuilder.appendline#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.appendline/CS/al.cs#1)]
 [!code-vb[stringbuilder.appendline#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.appendline/VB/al.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1102">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1102">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1103">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1103">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-1104">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1104">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="AppendLine">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder AppendLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder AppendLine(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.AppendLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AppendLine (value As String) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ AppendLine(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.AppendLine : string -&gt; System.Text.StringBuilder" Usage="stringBuilder.AppendLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="d1b66-1105">The string to append.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1105">The string to append.</span></span></param>
        <summary><span data-ttu-id="d1b66-1106">Appends a copy of the specified string followed by the default line terminator to the end of the current <see cref="T:System.Text.StringBuilder" /> object.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1106">Appends a copy of the specified string followed by the default line terminator to the end of the current <see cref="T:System.Text.StringBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1107">A reference to this instance after the append operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1107">A reference to this instance after the append operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1108">既定の行終端記号は、<xref:System.Environment.NewLine%2A?displayProperty=nameWithType> プロパティの現在の値です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1108">The default line terminator is the current value of the <xref:System.Environment.NewLine%2A?displayProperty=nameWithType> property.</span></span>

 <span data-ttu-id="d1b66-1109">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1109">The capacity of this instance is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1110">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1110">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1111">.NET Core および .NET Framework 4.0 以降のバージョンでは、<see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> コンストラクターを呼び出すことによって <see cref="T:System.Text.StringBuilder" /> オブジェクトをインスタンス化すると、<see cref="T:System.Text.StringBuilder" /> インスタンスの長さと容量の両方が、その <see cref="P:System.Text.StringBuilder.MaxCapacity" /> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1111">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <see cref="T:System.Text.StringBuilder" /> object by calling the <see cref="M:System.Text.StringBuilder.#ctor(System.Int32,System.Int32)" /> constructor, both the length and the capacity of the <see cref="T:System.Text.StringBuilder" /> instance can grow beyond the value of its <see cref="P:System.Text.StringBuilder.MaxCapacity" /> property.</span></span> <span data-ttu-id="d1b66-1112">これは、<see cref="M:System.Text.StringBuilder.Append(System.String)" /> と <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1112">This can occur particularly when you call the <see cref="M:System.Text.StringBuilder.Append(System.String)" /> and <see cref="M:System.Text.StringBuilder.AppendFormat(System.String,System.Object)" /> methods to append small strings.</span></span></para></block>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int with get, set" Usage="System.Text.StringBuilder.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1b66-1113">Gets or sets the maximum number of characters that can be contained in the memory allocated by the current instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1113">Gets or sets the maximum number of characters that can be contained in the memory allocated by the current instance.</span></span></summary>
        <value><span data-ttu-id="d1b66-1114">現在のインスタンスによって割り当てられたメモリに格納できる最大文字数。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1114">The maximum number of characters that can be contained in the memory allocated by the current instance.</span></span> <span data-ttu-id="d1b66-1115">この値の範囲は <see cref="P:System.Text.StringBuilder.Length" /> ～ <see cref="P:System.Text.StringBuilder.MaxCapacity" /> です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1115">Its value can range from <see cref="P:System.Text.StringBuilder.Length" /> to <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1116"><xref:System.Text.StringBuilder.Capacity%2A> は、現在のインスタンスの文字列値には影響しません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1116"><xref:System.Text.StringBuilder.Capacity%2A> does not affect the string value of the current instance.</span></span> <span data-ttu-id="d1b66-1117"><xref:System.Text.StringBuilder.Capacity%2A> が <xref:System.Text.StringBuilder.Length%2A>未満である限り、減らすことができます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1117"><xref:System.Text.StringBuilder.Capacity%2A> can be decreased as long as it is not less than <xref:System.Text.StringBuilder.Length%2A>.</span></span>

 <span data-ttu-id="d1b66-1118"><xref:System.Text.StringBuilder> は、必要なときにより多くの領域を動的に割り当て、それに応じて <xref:System.Text.StringBuilder.Capacity%2A> を増やします。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1118">The <xref:System.Text.StringBuilder> dynamically allocates more space when required and increases <xref:System.Text.StringBuilder.Capacity%2A> accordingly.</span></span> <span data-ttu-id="d1b66-1119">パフォーマンス上の理由から、<xref:System.Text.StringBuilder> では必要以上に多くのメモリが割り当てられる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1119">For performance reasons, a <xref:System.Text.StringBuilder> might allocate more memory than needed.</span></span> <span data-ttu-id="d1b66-1120">割り当てられるメモリの量は、実装固有です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1120">The amount of memory allocated is implementation-specific.</span></span>



## Examples
 <span data-ttu-id="d1b66-1121"><xref:System.Text.StringBuilder.Capacity%2A>プロパティの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1121">The following example demonstrates the <xref:System.Text.StringBuilder.Capacity%2A> property.</span></span>

 [!code-cpp[stringbuilder.ensurecapacity#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CPP/cap.cpp#1)]
 [!code-csharp[stringbuilder.ensurecapacity#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CS/cap.cs#1)]
 [!code-vb[stringbuilder.ensurecapacity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.ensurecapacity/VB/cap.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1122">The value specified for a set operation is less than the current length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1122">The value specified for a set operation is less than the current length of this instance.</span></span>

 <span data-ttu-id="d1b66-1123">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1123">-or-</span></span>

 <span data-ttu-id="d1b66-1124">The value specified for a set operation is greater than the maximum capacity.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1124">The value specified for a set operation is greater than the maximum capacity.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Chars">
      <MemberSignature Language="C#" Value="public char this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Chars(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.Chars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Chars(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); void set(int index, char value); };" />
      <MemberSignature Language="F#" Value="member this.Chars(int) : char with get, set" Usage="System.Text.StringBuilder.Chars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1125">The position of the character.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1125">The position of the character.</span></span></param>
        <summary><span data-ttu-id="d1b66-1126">Gets or sets the character at the specified character position in this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1126">Gets or sets the character at the specified character position in this instance.</span></span></summary>
        <value><span data-ttu-id="d1b66-1127"><paramref name="index" /> 位置の Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1127">The Unicode character at position <paramref name="index" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1128">`index` パラメーターは、<xref:System.Text.StringBuilder>内の文字の位置です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1128">The `index` parameter is the position of a character within the <xref:System.Text.StringBuilder>.</span></span> <span data-ttu-id="d1b66-1129">文字列の最初の文字は、インデックス0の位置にあります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1129">The first character in the string is at index 0.</span></span> <span data-ttu-id="d1b66-1130">文字列の長さは、文字列に含まれる文字数です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1130">The length of a string is the number of characters it contains.</span></span> <span data-ttu-id="d1b66-1131"><xref:System.Text.StringBuilder> インスタンスの最後にアクセスできる文字は、インデックス <xref:System.Text.StringBuilder.Length%2A>-1 です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1131">The last accessible character of a <xref:System.Text.StringBuilder> instance is at index <xref:System.Text.StringBuilder.Length%2A> - 1.</span></span>

 <span data-ttu-id="d1b66-1132"><xref:System.Text.StringBuilder.Chars%2A> は、<xref:System.Text.StringBuilder> クラスの既定のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1132"><xref:System.Text.StringBuilder.Chars%2A> is the default property of the <xref:System.Text.StringBuilder> class.</span></span> <span data-ttu-id="d1b66-1133">でC#は、これはインデクサーです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1133">In C#, it is an indexer.</span></span> <span data-ttu-id="d1b66-1134">これは、次の例に示すように、<xref:System.Text.StringBuilder.Chars%2A> プロパティから個々の文字を取得できることを意味します。この例では、文字列内の英字、空白、および句読点の数をカウントします。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1134">This means that individual characters can be retrieved from the <xref:System.Text.StringBuilder.Chars%2A> property as shown in the following example, which counts the number of alphabetic, white-space, and punctuation characters in a string.</span></span>

 [!code-csharp[System.Text.StringBuilder.Chars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.chars/cs/chars1.cs#1)]
 [!code-vb[System.Text.StringBuilder.Chars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.chars/vb/chars1.vb#1)]

### <a name="performance-and-character-based-indexing"></a><span data-ttu-id="d1b66-1135">パフォーマンスと文字ベースのインデックス作成</span><span class="sxs-lookup"><span data-stu-id="d1b66-1135">Performance and character-based indexing</span></span>

[!INCLUDE[stringbuilder-performance-note](~/includes/stringbuilder-perf-note.md)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1136"><paramref name="index" /> is outside the bounds of this instance while setting a character.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1136"><paramref name="index" /> is outside the bounds of this instance while setting a character.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="d1b66-1137"><paramref name="index" /> is outside the bounds of this instance while getting a character.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1137"><paramref name="index" /> is outside the bounds of this instance while getting a character.</span></span></exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Function Clear () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; System.Text.StringBuilder" Usage="stringBuilder.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1b66-1138">Removes all characters from the current <see cref="T:System.Text.StringBuilder" /> instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1138">Removes all characters from the current <see cref="T:System.Text.StringBuilder" /> instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1139">An object whose <see cref="P:System.Text.StringBuilder.Length" /> is 0 (zero).</span><span class="sxs-lookup"><span data-stu-id="d1b66-1139">An object whose <see cref="P:System.Text.StringBuilder.Length" /> is 0 (zero).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="d1b66-1140"><xref:System.Text.StringBuilder.Clear%2A> は、現在のインスタンスの <xref:System.Text.StringBuilder.Length%2A> プロパティを 0 (ゼロ) に設定するのと同じ便利な方法です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1140"><xref:System.Text.StringBuilder.Clear%2A> is a convenience method that is equivalent to setting the <xref:System.Text.StringBuilder.Length%2A> property of the current instance to 0 (zero).</span></span>

## Examples

<span data-ttu-id="d1b66-1141">次の例では、文字列を使用して <xref:System.Text.StringBuilder> オブジェクトをインスタンス化し、<xref:System.Text.StringBuilder.Clear%2A> メソッドを呼び出して、新しい文字列を追加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1141">The following example instantiates a <xref:System.Text.StringBuilder> object with a string, calls the <xref:System.Text.StringBuilder.Clear%2A> method, and then appends a new string.</span></span>

[!code-csharp[System.Text.StringBuilder.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.stringbuilder.clear/cs/clear1.cs#1)]
[!code-vb[System.Text.StringBuilder.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.stringbuilder.clear/vb/clear1.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int sourceIndex, Span&lt;char&gt; destination, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 sourceIndex, valuetype System.Span`1&lt;char&gt; destination, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Span{System.Char},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (sourceIndex As Integer, destination As Span(Of Char), count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int sourceIndex, Span&lt;char&gt; destination, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * Span&lt;char&gt; * int -&gt; unit" Usage="stringBuilder.CopyTo (sourceIndex, destination, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceIndex" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="count" Type="System.Int32" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="sourceIndex"><span data-ttu-id="d1b66-1142">The starting position in this instance where characters will be copied from.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1142">The starting position in this instance where characters will be copied from.</span></span> <span data-ttu-id="d1b66-1143">The index is zero-based.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1143">The index is zero-based.</span></span></param>
        <param name="destination"><span data-ttu-id="d1b66-1144">The writable span where characters will be copied.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1144">The writable span where characters will be copied.</span></span></param>
        <param name="count"><span data-ttu-id="d1b66-1145">The number of characters to be copied.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1145">The number of characters to be copied.</span></span></param>
        <summary><span data-ttu-id="d1b66-1146">Copies the characters from a specified segment of this instance to a destination <see cref="T:System.Char" /> span.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1146">Copies the characters from a specified segment of this instance to a destination <see cref="T:System.Char" /> span.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1147"><xref:System.Text.StringBuilder.CopyTo%2A> メソッドは、<xref:System.Text.StringBuilder> オブジェクトの連続するセクションをスパンに効率的にコピーする必要があるまれな状況で使用することを目的としています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1147">The <xref:System.Text.StringBuilder.CopyTo%2A> method is intended to be used in the rare situation when you need to efficiently copy successive sections of a <xref:System.Text.StringBuilder> object to an span.</span></span>

 <span data-ttu-id="d1b66-1148">たとえば、アプリケーションで大量の文字を含む <xref:System.Text.StringBuilder> オブジェクトを設定した後、<xref:System.Text.StringBuilder.CopyTo%2A> メソッドを使用して、<xref:System.Text.StringBuilder> オブジェクトの小さい部分を、その部分が処理されるスパンにコピーできます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1148">For example, your application could populate a <xref:System.Text.StringBuilder> object with a large number of characters then use the <xref:System.Text.StringBuilder.CopyTo%2A> method to copy small, successive pieces of the <xref:System.Text.StringBuilder> object to an span where the pieces are processed.</span></span> <span data-ttu-id="d1b66-1149"><xref:System.Text.StringBuilder> オブジェクト内のすべてのデータが処理されると、<xref:System.Text.StringBuilder> オブジェクトのサイズが0に設定され、サイクルが繰り返されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1149">When all the data in the <xref:System.Text.StringBuilder> object is processed, the size of the <xref:System.Text.StringBuilder> object is set to zero and the cycle is repeated.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int sourceIndex, char[] destination, int destinationIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 sourceIndex, char[] destination, int32 destinationIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (sourceIndex As Integer, destination As Char(), destinationIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int sourceIndex, cli::array &lt;char&gt; ^ destination, int destinationIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * char[] * int * int -&gt; unit" Usage="stringBuilder.CopyTo (sourceIndex, destination, destinationIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceIndex" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destination" Type="System.Char[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="destinationIndex" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="sourceIndex"><span data-ttu-id="d1b66-1150">The starting position in this instance where characters will be copied from.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1150">The starting position in this instance where characters will be copied from.</span></span> <span data-ttu-id="d1b66-1151">The index is zero-based.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1151">The index is zero-based.</span></span></param>
        <param name="destination"><span data-ttu-id="d1b66-1152">The array where characters will be copied.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1152">The array where characters will be copied.</span></span></param>
        <param name="destinationIndex"><span data-ttu-id="d1b66-1153">The starting position in <paramref name="destination" /> where characters will be copied.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1153">The starting position in <paramref name="destination" /> where characters will be copied.</span></span> <span data-ttu-id="d1b66-1154">The index is zero-based.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1154">The index is zero-based.</span></span></param>
        <param name="count"><span data-ttu-id="d1b66-1155">The number of characters to be copied.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1155">The number of characters to be copied.</span></span></param>
        <summary><span data-ttu-id="d1b66-1156">Copies the characters from a specified segment of this instance to a specified segment of a destination <see cref="T:System.Char" /> array.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1156">Copies the characters from a specified segment of this instance to a specified segment of a destination <see cref="T:System.Char" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1157"><xref:System.Text.StringBuilder.CopyTo%2A> メソッドは、<xref:System.Text.StringBuilder> オブジェクトの連続するセクションを配列に効率的にコピーする必要があるまれな状況で使用することを目的としています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1157">The <xref:System.Text.StringBuilder.CopyTo%2A> method is intended to be used in the rare situation when you need to efficiently copy successive sections of a <xref:System.Text.StringBuilder> object to an array.</span></span> <span data-ttu-id="d1b66-1158">配列は固定サイズ、事前に割り当てられ、再利用可能で、場合によってはグローバルにアクセス可能である必要があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1158">The array should be a fixed size, preallocated, reusable, and possibly globally accessible.</span></span>

 <span data-ttu-id="d1b66-1159">たとえば、アプリケーションで多数の文字を含む <xref:System.Text.StringBuilder> オブジェクトを設定した後、<xref:System.Text.StringBuilder.CopyTo%2A> メソッドを使用して、<xref:System.Text.StringBuilder> オブジェクトの小さい部分を、その部分が処理される配列にコピーできます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1159">For example, your application could populate a <xref:System.Text.StringBuilder> object with a large number of characters then use the <xref:System.Text.StringBuilder.CopyTo%2A> method to copy small, successive pieces of the <xref:System.Text.StringBuilder> object to an array where the pieces are processed.</span></span> <span data-ttu-id="d1b66-1160"><xref:System.Text.StringBuilder> オブジェクト内のすべてのデータが処理されると、<xref:System.Text.StringBuilder> オブジェクトのサイズが0に設定され、サイクルが繰り返されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1160">When all the data in the <xref:System.Text.StringBuilder> object is processed, the size of the <xref:System.Text.StringBuilder> object is set to zero and the cycle is repeated.</span></span>



## Examples
 <span data-ttu-id="d1b66-1161"><xref:System.Text.StringBuilder.CopyTo%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1161">The following example demonstrates the <xref:System.Text.StringBuilder.CopyTo%2A> method.</span></span>

 [!code-cpp[stringbuilder.copyto2#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.copyto2/CPP/ct2.cpp#1)]
 [!code-csharp[stringbuilder.copyto2#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.copyto2/CS/ct2.cs#1)]
 [!code-vb[stringbuilder.copyto2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.copyto2/VB/ct2.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-1162"><paramref name="destination" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1162"><paramref name="destination" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1163"><paramref name="sourceIndex" />, <paramref name="destinationIndex" />, or <paramref name="count" />, is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1163"><paramref name="sourceIndex" />, <paramref name="destinationIndex" />, or <paramref name="count" />, is less than zero.</span></span>

<span data-ttu-id="d1b66-1164">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1164">-or-</span></span>

 <span data-ttu-id="d1b66-1165"><paramref name="sourceIndex" /> is greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1165"><paramref name="sourceIndex" /> is greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1b66-1166"><paramref name="sourceIndex" /> + <paramref name="count" /> is greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1166"><paramref name="sourceIndex" /> + <paramref name="count" /> is greater than the length of this instance.</span></span>

<span data-ttu-id="d1b66-1167">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1167">-or-</span></span>

 <span data-ttu-id="d1b66-1168"><paramref name="destinationIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="destination" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1168"><paramref name="destinationIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="destination" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureCapacity">
      <MemberSignature Language="C#" Value="public int EnsureCapacity (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EnsureCapacity(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.EnsureCapacity(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnsureCapacity (capacity As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EnsureCapacity(int capacity);" />
      <MemberSignature Language="F#" Value="member this.EnsureCapacity : int -&gt; int" Usage="stringBuilder.EnsureCapacity capacity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="d1b66-1169">The minimum capacity to ensure.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1169">The minimum capacity to ensure.</span></span></param>
        <summary><span data-ttu-id="d1b66-1170">Ensures that the capacity of this instance of <see cref="T:System.Text.StringBuilder" /> is at least the specified value.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1170">Ensures that the capacity of this instance of <see cref="T:System.Text.StringBuilder" /> is at least the specified value.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1171">The new capacity of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1171">The new capacity of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1172">現在の容量が `capacity` パラメーターよりも小さい場合、このインスタンスのメモリは少なくとも `capacity` の文字数を保持するように再割り当てされます。それ以外の場合、メモリは変更されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1172">If the current capacity is less than the `capacity` parameter, memory for this instance is reallocated to hold at least `capacity` number of characters; otherwise, no memory is changed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1173"><xref:System.Text.StringBuilder.EnsureCapacity%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1173">The following example demonstrates the <xref:System.Text.StringBuilder.EnsureCapacity%2A> method.</span></span>

 [!code-cpp[stringbuilder.ensurecapacity#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CPP/cap.cpp#1)]
 [!code-csharp[stringbuilder.ensurecapacity#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CS/cap.cs#1)]
 [!code-vb[stringbuilder.ensurecapacity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.ensurecapacity/VB/cap.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1174"><paramref name="capacity" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1174"><paramref name="capacity" /> is less than zero.</span></span>

<span data-ttu-id="d1b66-1175">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1175">-or-</span></span>

<span data-ttu-id="d1b66-1176">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1176">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ReadOnlySpan&lt;char&gt; span);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.ReadOnlySpan`1&lt;char&gt; span) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Equals(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (span As ReadOnlySpan(Of Char)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(ReadOnlySpan&lt;char&gt; span);" />
      <MemberSignature Language="F#" Value="override this.Equals : ReadOnlySpan&lt;char&gt; -&gt; bool" Usage="stringBuilder.Equals span" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="span" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="span"><span data-ttu-id="d1b66-1177">The character span to compare with the current instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1177">The character span to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="d1b66-1178">Returns a value indicating whether the characters in this instance are equal to the characters in a specified read-only character span.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1178">Returns a value indicating whether the characters in this instance are equal to the characters in a specified read-only character span.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1179"><see langword="true" /> if the characters in this instance and <paramref name="span" /> are the same; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1179"><see langword="true" /> if the characters in this instance and <paramref name="span" /> are the same; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="d1b66-1180">`Equals` メソッドは、序数に基づく比較を実行して、現在のインスタンスと `span` の文字が等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1180">The `Equals` method performs an ordinal comparison to determine whether the characters in the current instance and `span` are equal.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Equals(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (sb As StringBuilder) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Text::StringBuilder ^ sb);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Text.StringBuilder -&gt; bool" Usage="stringBuilder.Equals sb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb"><span data-ttu-id="d1b66-1181">An object to compare with this instance, or <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1181">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d1b66-1182">Returns a value indicating whether this instance is equal to a specified object.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1182">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1183"><see langword="true" /> if this instance and <paramref name="sb" /> have equal string, <see cref="P:System.Text.StringBuilder.Capacity" />, and <see cref="P:System.Text.StringBuilder.MaxCapacity" /> values; otherwise, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1183"><see langword="true" /> if this instance and <paramref name="sb" /> have equal string, <see cref="P:System.Text.StringBuilder.Capacity" />, and <see cref="P:System.Text.StringBuilder.MaxCapacity" /> values; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="d1b66-1184">**.NET Framework および .Net Core 2.2 以前のバージョン:** 現在のインスタンスと `sb` は、文字列、<xref:System.Text.StringBuilder.Capacity>、および <xref:System.Text.StringBuilder.MaxCapacity> 値が等しい場合に等しいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1184">**.NET Framework and .NET Core 2.2 and previous versions:** The current instance and `sb` are equal if they have equal string, <xref:System.Text.StringBuilder.Capacity>, and <xref:System.Text.StringBuilder.MaxCapacity> values.</span></span> <span data-ttu-id="d1b66-1185">`Equals` メソッドは、序数に基づく比較を使用して、文字列が等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1185">The `Equals` method uses ordinal comparison to determine whether the strings are equal.</span></span>

<span data-ttu-id="d1b66-1186">**.Net Core 3.0 以降のバージョン:** 現在のインスタンスと `sb` は、両方の <xref:System.Text.StringBuilder> オブジェクトに割り当てられた文字列が同じである場合に等しくなります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1186">**.NET Core 3.0 and later versions:** The current instance and `sb` are equal if the strings assigned to both <xref:System.Text.StringBuilder> objects are the same.</span></span>  <span data-ttu-id="d1b66-1187">等しいかどうかを判断するために、`Equals` メソッドでは序数による比較を使用します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1187">To determine equality, the `Equals` method uses ordinal comparison.</span></span> <span data-ttu-id="d1b66-1188"><xref:System.Text.StringBuilder.Capacity> と <xref:System.Text.StringBuilder.MaxCapacity> のプロパティ値は、比較では使用されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1188">The <xref:System.Text.StringBuilder.Capacity> and <xref:System.Text.StringBuilder.MaxCapacity> property values are not used in the comparison.</span></span>

## Examples
 <span data-ttu-id="d1b66-1189">次のコードでは、<xref:System.Text.StringBuilder.Equals%2A> メソッドを使用して、2つの <xref:System.Text.StringBuilder> オブジェクトが等しいかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1189">The following code uses the <xref:System.Text.StringBuilder.Equals%2A> method to check whether two <xref:System.Text.StringBuilder> objects are equal.</span></span> <span data-ttu-id="d1b66-1190">各オブジェクトに小さな変更が加えられると、メソッドが繰り返し呼び出され、結果がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1190">The method is called repeatedly after small changes are made to each object, and the results are displayed to the console.</span></span>

 [!code-cpp[stringbuilder.ensurecapacity#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CPP/cap.cpp#1)]
 [!code-csharp[stringbuilder.ensurecapacity#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CS/cap.cs#1)]
 [!code-vb[stringbuilder.ensurecapacity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.ensurecapacity/VB/cap.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChunks">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder.ChunkEnumerator GetChunks ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Text.StringBuilder/ChunkEnumerator GetChunks() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.GetChunks" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChunks () As StringBuilder.ChunkEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder::ChunkEnumerator GetChunks();" />
      <MemberSignature Language="F#" Value="member this.GetChunks : unit -&gt; System.Text.StringBuilder.ChunkEnumerator" Usage="stringBuilder.GetChunks " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder+ChunkEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1b66-1191">Returns an object that can be used to iterate through the chunks of characters represented in a <see langword="ReadOnlyMemory&lt;Char&gt;" /> created from this <see cref="T:System.Text.StringBuilder" /> instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1191">Returns an object that can be used to iterate through the chunks of characters represented in a <see langword="ReadOnlyMemory&lt;Char&gt;" /> created from this <see cref="T:System.Text.StringBuilder" /> instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1192">An enumerator for the chunks in the <see langword="ReadOnlyMemory&lt;Char&gt;" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1192">An enumerator for the chunks in the <see langword="ReadOnlyMemory&lt;Char&gt;" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="d1b66-1193">次のようなコードを使用して、メモリ範囲内のチャンクを反復処理できます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1193">You can iterate the chunks in the memory range with code like the following:</span></span>

```csharp
foreach (ReadOnlyMemory<char> chunk in sb.GetChunks())
    foreach(char ch in chunk.Span)
        { /* operations on ch */ }
```

<span data-ttu-id="d1b66-1194">このメソッドの目的は、*定数*<xref:System.Text.StringBuilder>のデータを効率的に抽出することです。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1194">The purpose of this method is to efficiently extract the data of a *constant* <xref:System.Text.StringBuilder>.</span></span> <span data-ttu-id="d1b66-1195">チャンクの列挙が不完全なときに <xref:System.Text.StringBuilder> が変更された場合、結果は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1195">If the <xref:System.Text.StringBuilder> is modified while the chunk enumeration is incomplete, the result is undefined.</span></span> <span data-ttu-id="d1b66-1196"><xref:System.Text.StringBuilder> もスレッドセーフではないため、同時実行スレッドでの操作は無効です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1196"><xref:System.Text.StringBuilder> is also not thread-safe, so operating on it with concurrent threads is illegal.</span></span>

<span data-ttu-id="d1b66-1197">返された <xref:System.ReadOnlyMemory%601> チャンクは、<xref:System.Text.StringBuilder> が変更されても変更されないとは限りません。そのため、後で使用できるようにキャッシュしないでください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1197">The <xref:System.ReadOnlyMemory%601> chunks returned are not guaranteed to remain unchanged if the <xref:System.Text.StringBuilder> is modified, so do not cache them for later use.</span></span>

<span data-ttu-id="d1b66-1198">前の例の <xref:System.ReadOnlyMemory%601.Span?displayProperty=nameWithType> メソッドと同様に <xref:System.ReadOnlyMemory%601> から <xref:System.ReadOnlySpan%601> を作成すると、コストが高くなります。そのため、入れ子になった `for` ステートメントで使用する必要がある場合は、スパンのローカル変数を作成します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1198">Creating a <xref:System.ReadOnlySpan%601> from a <xref:System.ReadOnlyMemory%601> (as the <xref:System.ReadOnlyMemory%601.Span?displayProperty=nameWithType> method does in the previous example, is expensive, so create a local variable for the span if you need to use it in a nested `for` statement.</span></span> <span data-ttu-id="d1b66-1199">例 :</span><span class="sxs-lookup"><span data-stu-id="d1b66-1199">For example:</span></span>

```csharp
foreach (ReadOnlyMemory<char> chunk in sb.GetChunks())
{
    var span = chunk.Span;
    for(int i = 0; i < span.Length; i++)
    {
        /* operations on span[i] */
    }
}
```

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Insert">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1b66-1200">Inserts the string representation of a specified object into this instance at a specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1200">Inserts the string representation of a specified object into this instance at a specified character position.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Boolean) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, bool value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * bool -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1201">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1201">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1202">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1202">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1203">Inserts the string representation of a Boolean value into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1203">Inserts the string representation of a Boolean value into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1204">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1204">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1205"><xref:System.Boolean.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1205"><xref:System.Boolean.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1206">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1206">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1207">容量は必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1207">The capacity is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1208"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1208">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1209"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1209"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1210">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1210">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1211">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1211">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1212">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1212">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Byte) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::Byte value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * byte -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1213">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1213">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1214">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1214">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1215">Inserts the string representation of a specified 8-bit unsigned integer into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1215">Inserts the string representation of a specified 8-bit unsigned integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1216">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1216">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1217"><xref:System.Byte.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1217"><xref:System.Byte.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1218">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1218">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1219">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1219">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1220"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1220">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1221"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1221"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1222">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1222">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1223">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1223">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1224">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1224">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Byte" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Char) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, char value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * char -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1225">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1225">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1226">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1226">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1227">Inserts the string representation of a specified Unicode character into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1227">Inserts the string representation of a specified Unicode character into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1228">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1228">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1229"><xref:System.Char.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1229"><xref:System.Char.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1230">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1230">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1231">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1231">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1232"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1232">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1233"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1233"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span>

<span data-ttu-id="d1b66-1234">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1234">-or-</span></span>

<span data-ttu-id="d1b66-1235">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1235">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <altmember cref="T:System.Char" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, char[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, char[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Char()) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, cli::array &lt;char&gt; ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * char[] -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1236">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1236">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1237">The character array to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1237">The character array to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1238">Inserts the string representation of a specified array of Unicode characters into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1238">Inserts the string representation of a specified array of Unicode characters into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1239">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1239">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1240">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1240">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1241">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1241">The capacity of this instance is adjusted as needed.</span></span>

 <span data-ttu-id="d1b66-1242">`value` が `null`場合、<xref:System.Text.StringBuilder> は変更されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1242">If `value` is `null`, the <xref:System.Text.StringBuilder> is not changed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1243"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1243">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1244"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1244"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span>

<span data-ttu-id="d1b66-1245">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1245">-or-</span></span>

<span data-ttu-id="d1b66-1246">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1246">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Decimal) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::Decimal value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * decimal -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1247">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1247">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1248">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1248">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1249">Inserts the string representation of a decimal number into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1249">Inserts the string representation of a decimal number into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1250">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1250">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1251"><xref:System.Decimal.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1251"><xref:System.Decimal.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1252">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1252">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1253">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1253">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1254"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1254">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1255"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1255"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1256">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1256">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1257">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1257">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1258">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1258">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Decimal" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Double) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, double value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * double -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1259">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1259">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1260">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1260">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1261">Inserts the string representation of a double-precision floating-point number into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1261">Inserts the string representation of a double-precision floating-point number into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1262">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1262">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1263"><xref:System.Double.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1263"><xref:System.Double.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1264">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1264">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1265">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1265">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1266"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1266">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1267"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1267"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1268">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1268">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1269">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1269">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1270">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1270">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Short) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, short value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * int16 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1271">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1271">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1272">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1272">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1273">Inserts the string representation of a specified 16-bit signed integer into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1273">Inserts the string representation of a specified 16-bit signed integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1274">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1274">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1275"><xref:System.Int16.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1275"><xref:System.Int16.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1276">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1276">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1277">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1277">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1278"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1278">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1279"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1279"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1280">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1280">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1281">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1281">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1282">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1282">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, int value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1283">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1283">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1284">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1284">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1285">Inserts the string representation of a specified 32-bit signed integer into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1285">Inserts the string representation of a specified 32-bit signed integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1286">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1286">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1287"><xref:System.Int32.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1287"><xref:System.Int32.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1288">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1288">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1289">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1289">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1290"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1290">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1291"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1291"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1292">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1292">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1293">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1293">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1294">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1294">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Long) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, long value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * int64 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1295">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1295">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1296">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1296">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1297">Inserts the string representation of a 64-bit signed integer into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1297">Inserts the string representation of a 64-bit signed integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1298">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1298">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1299"><xref:System.Int64.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1299"><xref:System.Int64.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1300">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1300">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1301">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1301">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1302"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1302">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1303"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1303"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1304">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1304">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1305">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1305">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1306">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1306">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Object) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * obj -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1307">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1307">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1308">The object to insert, or <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1308">The object to insert, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d1b66-1309">Inserts the string representation of an object into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1309">Inserts the string representation of an object into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1310">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1310">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1311"><xref:System.Object.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1311"><xref:System.Object.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1312">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1312">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1313">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1313">The capacity of this instance is adjusted as needed.</span></span>

 <span data-ttu-id="d1b66-1314">`value` が `null`場合、このインスタンスの値は変更されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1314">If `value` is `null`, the value of this instance is unchanged.</span></span>



## Examples
 <span data-ttu-id="d1b66-1315"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1315">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1316"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1316"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1317">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1317">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1318">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1318">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1319">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1319">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As ReadOnlySpan(Of Char)) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * ReadOnlySpan&lt;char&gt; -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1320">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1320">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1321">The character span to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1321">The character span to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1322">Inserts the sequence of characters into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1322">Inserts the sequence of characters into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1323">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1323">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="d1b66-1324">既存の文字をシフトして、`value` 内の文字シーケンスを挿入するための領域を確保します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1324">The existing characters are shifted to make room for the character sequence in the `value` to insert it.</span></span> <span data-ttu-id="d1b66-1325">容量は必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1325">The capacity is adjusted as needed.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As SByte) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::SByte value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * sbyte -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1326">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1326">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1327">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1327">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1328">Inserts the string representation of a specified 8-bit signed integer into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1328">Inserts the string representation of a specified 8-bit signed integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1329">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1329">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1330"><xref:System.SByte.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1330"><xref:System.SByte.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1331">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1331">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1332">容量は必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1332">The capacity is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1333"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1333">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1334"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1334"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1335">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1335">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1336">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1336">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1337">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1337">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.SByte" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Single) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, float value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * single -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1338">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1338">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1339">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1339">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1340">Inserts the string representation of a single-precision floating point number into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1340">Inserts the string representation of a single-precision floating point number into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1341">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1341">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1342"><xref:System.Single.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1342"><xref:System.Single.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1343">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1343">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1344">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1344">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1345"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1345">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1346"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1346"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1347">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1347">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1348">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1348">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1349">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1349">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.Single" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As String) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1350">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1350">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1351">The string to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1351">The string to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1352">Inserts a string into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1352">Inserts a string into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1353">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1353">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1354">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1354">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1355">容量は必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1355">The capacity is adjusted as needed.</span></span>

 <span data-ttu-id="d1b66-1356">`value` が `null`の場合、または `value` が `null` ではなく長さが0の場合、この <xref:System.Text.StringBuilder> のインスタンスは変更されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1356">This instance of <xref:System.Text.StringBuilder> is not changed if `value` is `null`, or `value` is not `null` but its length is zero.</span></span>



## Examples
 <span data-ttu-id="d1b66-1357"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1357">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1358"><paramref name="index" /> is less than zero or greater than the current length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1358"><paramref name="index" /> is less than zero or greater than the current length of this instance.</span></span>

<span data-ttu-id="d1b66-1359">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1359">-or-</span></span>

<span data-ttu-id="d1b66-1360">The current length of this <see cref="T:System.Text.StringBuilder" /> object plus the length of <paramref name="value" /> exceeds <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1360">The current length of this <see cref="T:System.Text.StringBuilder" /> object plus the length of <paramref name="value" /> exceeds <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As UShort) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * uint16 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1361">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1361">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1362">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1362">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1363">Inserts the string representation of a 16-bit unsigned integer into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1363">Inserts the string representation of a 16-bit unsigned integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1364">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1364">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1365"><xref:System.UInt16.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1365"><xref:System.UInt16.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1366">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1366">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1367">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1367">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1368"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1368">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1369"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1369"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1370">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1370">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1371">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1371">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1372">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1372">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.UInt16" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As UInteger) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * uint32 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1373">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1373">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1374">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1374">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1375">Inserts the string representation of a 32-bit unsigned integer into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1375">Inserts the string representation of a 32-bit unsigned integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1376">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1376">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1377"><xref:System.UInt32.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1377"><xref:System.UInt32.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1378">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1378">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1379">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1379">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1380"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1380">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1381"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1381"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1382">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1382">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1383">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1383">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1384">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1384">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.UInt32" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As ULong) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * uint64 -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1385">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1385">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1386">The value to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1386">The value to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1387">Inserts the string representation of a 64-bit unsigned integer into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1387">Inserts the string representation of a 64-bit unsigned integer into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1388">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1388">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1389"><xref:System.UInt64.ToString%2A?displayProperty=nameWithType> は、`value`の文字列表現を取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1389"><xref:System.UInt64.ToString%2A?displayProperty=nameWithType> is used to get a string representation of `value`.</span></span> <span data-ttu-id="d1b66-1390">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1390">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1391">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1391">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1392"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1392">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1393"><paramref name="index" /> is less than zero or greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1393"><paramref name="index" /> is less than zero or greater than the length of this instance.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1394">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1394">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="d1b66-1395">[!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] 以前のバージョンでは、<paramref name="value" /> を挿入するとオブジェクトの合計長が <see cref="P:System.Text.StringBuilder.MaxCapacity" />を超える場合、このメソッドの呼び出しによって <see cref="T:System.ArgumentOutOfRangeException" /> がスローされました。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1395">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)] and earlier versions, calls to this method threw an <see cref="T:System.ArgumentOutOfRangeException" /> if inserting <paramref name="value" /> would cause the object's total length to exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span> <span data-ttu-id="d1b66-1396">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]以降では、メソッドによって <see cref="T:System.OutOfMemoryException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1396">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the method throws an <see cref="T:System.OutOfMemoryException" />.</span></span></para></block>
        <altmember cref="T:System.UInt64" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, string value, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, string value, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As String, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, System::String ^ value, int count);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1397">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1397">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1398">The string to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1398">The string to insert.</span></span></param>
        <param name="count"><span data-ttu-id="d1b66-1399">The number of times to insert <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1399">The number of times to insert <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="d1b66-1400">Inserts one or more copies of a specified string into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1400">Inserts one or more copies of a specified string into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1401">A reference to this instance after insertion has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1401">A reference to this instance after insertion has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1402">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1402">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1403">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1403">The capacity of this instance is adjusted as needed.</span></span>

 <span data-ttu-id="d1b66-1404">この <xref:System.Text.StringBuilder> オブジェクトは、`value` が `null`、`value` が `null` ではなく、長さが0である、または `count` が0の場合は変更されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1404">This <xref:System.Text.StringBuilder> object is not changed if `value` is `null`, `value` is not `null` but its length is zero, or `count` is zero.</span></span>



## Examples
 <span data-ttu-id="d1b66-1405"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1405">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1406"><paramref name="index" /> is less than zero or greater than the current length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1406"><paramref name="index" /> is less than zero or greater than the current length of this instance.</span></span>

<span data-ttu-id="d1b66-1407">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1407">-or-</span></span>

 <span data-ttu-id="d1b66-1408"><paramref name="count" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1408"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="d1b66-1409">The current length of this <see cref="T:System.Text.StringBuilder" /> object plus the length of <paramref name="value" /> times <paramref name="count" /> exceeds <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1409">The current length of this <see cref="T:System.Text.StringBuilder" /> object plus the length of <paramref name="value" /> times <paramref name="count" /> exceeds <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Insert (int index, char[] value, int startIndex, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Insert(int32 index, char[] value, int32 startIndex, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Insert(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (index As Integer, value As Char(), startIndex As Integer, charCount As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Insert(int index, cli::array &lt;char&gt; ^ value, int startIndex, int charCount);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * char[] * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Insert (index, value, startIndex, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d1b66-1410">The position in this instance where insertion begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1410">The position in this instance where insertion begins.</span></span></param>
        <param name="value"><span data-ttu-id="d1b66-1411">A character array.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1411">A character array.</span></span></param>
        <param name="startIndex"><span data-ttu-id="d1b66-1412">The starting index within <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1412">The starting index within <paramref name="value" />.</span></span></param>
        <param name="charCount"><span data-ttu-id="d1b66-1413">The number of characters to insert.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1413">The number of characters to insert.</span></span></param>
        <summary><span data-ttu-id="d1b66-1414">Inserts the string representation of a specified subarray of Unicode characters into this instance at the specified character position.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1414">Inserts the string representation of a specified subarray of Unicode characters into this instance at the specified character position.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1415">A reference to this instance after the insert operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1415">A reference to this instance after the insert operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1416">新しいテキスト用の領域を確保するために、既存の文字がシフトされます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1416">Existing characters are shifted to make room for the new text.</span></span> <span data-ttu-id="d1b66-1417">このインスタンスの容量は、必要に応じて調整されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1417">The capacity of this instance is adjusted as needed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1418"><xref:System.Text.StringBuilder.Insert%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1418">The following example demonstrates the <xref:System.Text.StringBuilder.Insert%2A> method.</span></span>

 [!code-cpp[stringbuilder.insert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.insert/CPP/insert.cpp#1)]
 [!code-csharp[stringbuilder.insert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.insert/CS/insert.cs#1)]
 [!code-vb[stringbuilder.insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.insert/VB/insert.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-1419"><paramref name="value" /> is <see langword="null" />, and <paramref name="startIndex" /> and <paramref name="charCount" /> are not zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1419"><paramref name="value" /> is <see langword="null" />, and <paramref name="startIndex" /> and <paramref name="charCount" /> are not zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1420"><paramref name="index" />, <paramref name="startIndex" />, or <paramref name="charCount" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1420"><paramref name="index" />, <paramref name="startIndex" />, or <paramref name="charCount" /> is less than zero.</span></span>

<span data-ttu-id="d1b66-1421">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1421">-or-</span></span>

 <span data-ttu-id="d1b66-1422"><paramref name="index" /> is greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1422"><paramref name="index" /> is greater than the length of this instance.</span></span>

<span data-ttu-id="d1b66-1423">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1423">-or-</span></span>

 <span data-ttu-id="d1b66-1424"><paramref name="startIndex" /> plus <paramref name="charCount" /> is not a position within <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1424"><paramref name="startIndex" /> plus <paramref name="charCount" /> is not a position within <paramref name="value" />.</span></span>

<span data-ttu-id="d1b66-1425">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1425">-or-</span></span>

<span data-ttu-id="d1b66-1426">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1426">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int with get, set" Usage="System.Text.StringBuilder.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1b66-1427">Gets or sets the length of the current <see cref="T:System.Text.StringBuilder" /> object.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1427">Gets or sets the length of the current <see cref="T:System.Text.StringBuilder" /> object.</span></span></summary>
        <value><span data-ttu-id="d1b66-1428">このインスタンスの長さ。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1428">The length of this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1429"><xref:System.Text.StringBuilder> オブジェクトの長さは、<xref:System.Char> オブジェクトの数によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1429">The length of a <xref:System.Text.StringBuilder> object is defined by its number of <xref:System.Char> objects.</span></span>

 <span data-ttu-id="d1b66-1430"><xref:System.String.Length%2A?displayProperty=nameWithType> プロパティと同様に、<xref:System.Text.StringBuilder.Length%2A> プロパティは、現在の文字列オブジェクトの長さを示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1430">Like the <xref:System.String.Length%2A?displayProperty=nameWithType> property, the <xref:System.Text.StringBuilder.Length%2A> property indicates the length of the current string object.</span></span> <span data-ttu-id="d1b66-1431">読み取り専用の <xref:System.String.Length%2A?displayProperty=nameWithType> プロパティとは異なり、<xref:System.Text.StringBuilder.Length%2A> プロパティを使用すると、<xref:System.Text.StringBuilder> オブジェクトに格納されている文字列の長さを変更できます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1431">Unlike the <xref:System.String.Length%2A?displayProperty=nameWithType> property, which is read-only, the <xref:System.Text.StringBuilder.Length%2A> property allows you to modify the length of the string stored to the <xref:System.Text.StringBuilder> object.</span></span>

 <span data-ttu-id="d1b66-1432">指定した長さが現在の長さよりも小さい場合は、現在の <xref:System.Text.StringBuilder> オブジェクトが、指定された長さに切り詰められます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1432">If the specified length is less than the current length, the current <xref:System.Text.StringBuilder> object is truncated to the specified length.</span></span> <span data-ttu-id="d1b66-1433">指定された長さが現在の長さよりも大きい場合、現在の <xref:System.Text.StringBuilder> オブジェクトの文字列値の末尾に、Unicode の NULL 文字 (U + 0000) が埋め込まれます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1433">If the specified length is greater than the current length, the end of the string value of the current <xref:System.Text.StringBuilder> object is padded with the Unicode NULL character (U+0000).</span></span>

 <span data-ttu-id="d1b66-1434">指定された長さが現在の容量を超えている場合は、指定された長さ以上になるように <xref:System.Text.StringBuilder.Capacity%2A> が増加します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1434">If the specified length is greater than the current capacity, <xref:System.Text.StringBuilder.Capacity%2A> increases so that it is greater than or equal to the specified length.</span></span>



## Examples
 <span data-ttu-id="d1b66-1435"><xref:System.Text.StringBuilder.Length%2A>プロパティの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1435">The following example demonstrates the <xref:System.Text.StringBuilder.Length%2A> property.</span></span>

 [!code-cpp[stringbuilder.ensurecapacity#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CPP/cap.cpp#1)]
 [!code-csharp[stringbuilder.ensurecapacity#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.ensurecapacity/CS/cap.cs#1)]
 [!code-vb[stringbuilder.ensurecapacity#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.ensurecapacity/VB/cap.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1436">The value specified for a set operation is less than zero or greater than <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1436">The value specified for a set operation is less than zero or greater than <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxCapacity">
      <MemberSignature Language="C#" Value="public int MaxCapacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Text.StringBuilder.MaxCapacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCapacity { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxCapacity : int" Usage="System.Text.StringBuilder.MaxCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d1b66-1437">Gets the maximum capacity of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1437">Gets the maximum capacity of this instance.</span></span></summary>
        <value><span data-ttu-id="d1b66-1438">このインスタンスが保持できる最大文字数。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1438">The maximum number of characters this instance can hold.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1439">この実装の最大容量は <xref:System.Int32.MaxValue?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1439">The maximum capacity for this implementation is <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d1b66-1440">ただし、この値は実装固有であり、その他の実装では異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1440">However, this value is implementation-specific and might be different in other or later implementations.</span></span> <span data-ttu-id="d1b66-1441"><xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29> コンストラクターを呼び出すことによって、<xref:System.Text.StringBuilder> オブジェクトの最大容量を明示的に設定できます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1441">You can explicitly set the maximum capacity of a <xref:System.Text.StringBuilder> object by calling the <xref:System.Text.StringBuilder.%23ctor%28System.Int32%2CSystem.Int32%29> constructor.</span></span>

<span data-ttu-id="d1b66-1442">.NET Core および .NET Framework 4.0 以降のバージョンでは、<xref:System.Text.StringBuilder.%23ctor(System.Int32,System.Int32)> コンストラクターを呼び出すことによって <xref:System.Text.StringBuilder> オブジェクトをインスタンス化すると、<xref:System.Text.StringBuilder> インスタンスの長さと容量の両方が、その <xref:System.Text.StringBuilder.MaxCapacity> プロパティの値を超えて拡張される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1442">In .NET Core and in the .NET Framework 4.0 and later versions, when you instantiate the <xref:System.Text.StringBuilder> object by calling the <xref:System.Text.StringBuilder.%23ctor(System.Int32,System.Int32)> constructor, both the length and the capacity of the <xref:System.Text.StringBuilder> instance can grow beyond the value of its <xref:System.Text.StringBuilder.MaxCapacity> property.</span></span> <span data-ttu-id="d1b66-1443">これは、<xref:System.Text.StringBuilder.Append(System.String)> と <xref:System.Text.StringBuilder.AppendFormat(System.String,System.Object)> メソッドを呼び出して小さい文字列を追加する場合に特に発生します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1443">This can occur particularly when you call the <xref:System.Text.StringBuilder.Append(System.String)> and <xref:System.Text.StringBuilder.AppendFormat(System.String,System.Object)> methods to append small strings.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Remove (int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Remove(int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (startIndex As Integer, length As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Remove(int startIndex, int length);" />
      <MemberSignature Language="F#" Value="member this.Remove : int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Remove (startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="d1b66-1444">The zero-based position in this instance where removal begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1444">The zero-based position in this instance where removal begins.</span></span></param>
        <param name="length"><span data-ttu-id="d1b66-1445">The number of characters to remove.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1445">The number of characters to remove.</span></span></param>
        <summary><span data-ttu-id="d1b66-1446">Removes the specified range of characters from this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1446">Removes the specified range of characters from this instance.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1447">A reference to this instance after the excise operation has completed.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1447">A reference to this instance after the excise operation has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1448">現在のメソッドは、現在のインスタンスから指定された範囲の文字を削除します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1448">The current method removes the specified range of characters from the current instance.</span></span> <span data-ttu-id="d1b66-1449">(`startIndex` + `length`) の文字は `startIndex`に移動され、現在のインスタンスの文字列値は `length`によって短縮されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1449">The characters at (`startIndex` + `length`) are moved to `startIndex`, and the string value of the current instance is shortened by `length`.</span></span> <span data-ttu-id="d1b66-1450">現在のインスタンスの容量は影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1450">The capacity of the current instance is unaffected.</span></span>

> [!NOTE]
>  <span data-ttu-id="d1b66-1451"><xref:System.Text.StringBuilder.Remove%2A> メソッドは、現在の <xref:System.Text.StringBuilder> インスタンスの値を変更し、そのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1451">The <xref:System.Text.StringBuilder.Remove%2A> method modifies the value of the current <xref:System.Text.StringBuilder> instance and returns that instance.</span></span> <span data-ttu-id="d1b66-1452">新しい <xref:System.Text.StringBuilder> オブジェクトは作成されず、返されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1452">It does not create and return a new <xref:System.Text.StringBuilder> object.</span></span>



## Examples
 <span data-ttu-id="d1b66-1453"><xref:System.Text.StringBuilder.Remove%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1453">The following example demonstrates the <xref:System.Text.StringBuilder.Remove%2A> method.</span></span>

 [!code-cpp[stringbuilder.remove#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.remove/CPP/remove.cpp#1)]
 [!code-csharp[stringbuilder.remove#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.remove/CS/remove.cs#1)]
 [!code-vb[stringbuilder.remove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.remove/VB/remove.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1454">If <paramref name="startIndex" /> or <paramref name="length" /> is less than zero, or <paramref name="startIndex" /> + <paramref name="length" /> is greater than the length of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1454">If <paramref name="startIndex" /> or <paramref name="length" /> is less than zero, or <paramref name="startIndex" /> + <paramref name="length" /> is greater than the length of this instance.</span></span></exception>
        <altmember cref="M:System.Text.StringBuilder.Replace(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1b66-1455">Replaces all occurrences of a specified character or string in this instance with another specified character or string.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1455">Replaces all occurrences of a specified character or string in this instance with another specified character or string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Replace (char oldChar, char newChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Replace(char oldChar, char newChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Replace(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldChar As Char, newChar As Char) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Replace(char oldChar, char newChar);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * char -&gt; System.Text.StringBuilder" Usage="stringBuilder.Replace (oldChar, newChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChar" Type="System.Char" />
        <Parameter Name="newChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="oldChar"><span data-ttu-id="d1b66-1456">The character to replace.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1456">The character to replace.</span></span></param>
        <param name="newChar"><span data-ttu-id="d1b66-1457">The character that replaces <paramref name="oldChar" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1457">The character that replaces <paramref name="oldChar" />.</span></span></param>
        <summary><span data-ttu-id="d1b66-1458">Replaces all occurrences of a specified character in this instance with another specified character.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1458">Replaces all occurrences of a specified character in this instance with another specified character.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1459">A reference to this instance with <paramref name="oldChar" /> replaced by <paramref name="newChar" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1459">A reference to this instance with <paramref name="oldChar" /> replaced by <paramref name="newChar" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1460">このメソッドは、大文字と小文字を区別した序数の比較を実行して、現在のインスタンスでの `oldChar` の出現を識別します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1460">This method performs an ordinal, case-sensitive comparison to identify occurrences of `oldChar` in the current instance.</span></span> <span data-ttu-id="d1b66-1461">現在の <xref:System.Text.StringBuilder> インスタンスのサイズは、置換後も変更されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1461">The size of the current <xref:System.Text.StringBuilder> instance is unchanged after the replacement.</span></span>



## Examples
 <span data-ttu-id="d1b66-1462"><xref:System.Text.StringBuilder.Replace%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1462">The following example demonstrates the <xref:System.Text.StringBuilder.Replace%2A> method.</span></span>

 [!code-cpp[stringbuilder.replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.replace/CPP/replace.cpp#1)]
 [!code-csharp[stringbuilder.replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.replace/CS/replace.cs#1)]
 [!code-vb[stringbuilder.replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.replace/VB/replace.vb#1)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Replace (string oldValue, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Replace(string oldValue, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Replace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Replace(System::String ^ oldValue, System::String ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string -&gt; System.Text.StringBuilder" Usage="stringBuilder.Replace (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldValue"><span data-ttu-id="d1b66-1463">The string to replace.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1463">The string to replace.</span></span></param>
        <param name="newValue"><span data-ttu-id="d1b66-1464">The string that replaces <paramref name="oldValue" />, or <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1464">The string that replaces <paramref name="oldValue" />, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d1b66-1465">Replaces all occurrences of a specified string in this instance with another specified string.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1465">Replaces all occurrences of a specified string in this instance with another specified string.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1466">A reference to this instance with all instances of <paramref name="oldValue" /> replaced by <paramref name="newValue" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1466">A reference to this instance with all instances of <paramref name="oldValue" /> replaced by <paramref name="newValue" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1467">このメソッドは、大文字と小文字を区別した序数の比較を実行して、現在のインスタンスでの `oldValue` の出現を識別します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1467">This method performs an ordinal, case-sensitive comparison to identify occurrences of `oldValue` in the current instance.</span></span> <span data-ttu-id="d1b66-1468">`newValue` が `null` または <xref:System.String.Empty?displayProperty=nameWithType>の場合、すべての `oldValue` が削除されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1468">If `newValue` is `null` or <xref:System.String.Empty?displayProperty=nameWithType>, all occurrences of `oldValue` are removed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1469"><xref:System.Text.StringBuilder.Replace%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1469">The following example demonstrates the <xref:System.Text.StringBuilder.Replace%2A> method.</span></span>

 [!code-cpp[stringbuilder.replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.replace/CPP/replace.cpp#1)]
 [!code-csharp[stringbuilder.replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.replace/CS/replace.cs#1)]
 [!code-vb[stringbuilder.replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.replace/VB/replace.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-1470"><paramref name="oldValue" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1470"><paramref name="oldValue" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1b66-1471">The length of <paramref name="oldValue" /> is zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1471">The length of <paramref name="oldValue" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1472">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1472">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <altmember cref="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Replace (char oldChar, char newChar, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Replace(char oldChar, char newChar, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Replace(System.Char,System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldChar As Char, newChar As Char, startIndex As Integer, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Replace(char oldChar, char newChar, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * char * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Replace (oldChar, newChar, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChar" Type="System.Char" />
        <Parameter Name="newChar" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldChar"><span data-ttu-id="d1b66-1473">The character to replace.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1473">The character to replace.</span></span></param>
        <param name="newChar"><span data-ttu-id="d1b66-1474">The character that replaces <paramref name="oldChar" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1474">The character that replaces <paramref name="oldChar" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="d1b66-1475">The position in this instance where the substring begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1475">The position in this instance where the substring begins.</span></span></param>
        <param name="count"><span data-ttu-id="d1b66-1476">The length of the substring.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1476">The length of the substring.</span></span></param>
        <summary><span data-ttu-id="d1b66-1477">Replaces, within a substring of this instance, all occurrences of a specified character with another specified character.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1477">Replaces, within a substring of this instance, all occurrences of a specified character with another specified character.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1478">A reference to this instance with <paramref name="oldChar" /> replaced by <paramref name="newChar" /> in the range from <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> -1.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1478">A reference to this instance with <paramref name="oldChar" /> replaced by <paramref name="newChar" /> in the range from <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1479">このメソッドは、大文字と小文字を区別した序数の比較を実行して、現在のインスタンスでの `oldChar` の出現を識別します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1479">This method performs an ordinal, case-sensitive comparison to identify occurrences of `oldChar` in the current instance.</span></span> <span data-ttu-id="d1b66-1480">現在の <xref:System.Text.StringBuilder> オブジェクトのサイズは、置換後も変更されません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1480">The size of the current <xref:System.Text.StringBuilder> object is unchanged after the replacement.</span></span>



## Examples
 <span data-ttu-id="d1b66-1481"><xref:System.Text.StringBuilder.Replace%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1481">The following example demonstrates the <xref:System.Text.StringBuilder.Replace%2A> method.</span></span>

 [!code-cpp[stringbuilder.replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.replace/CPP/replace.cpp#1)]
 [!code-csharp[stringbuilder.replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.replace/CS/replace.cs#1)]
 [!code-vb[stringbuilder.replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.replace/VB/replace.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1482"><paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of the value of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1482"><paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of the value of this instance.</span></span>

<span data-ttu-id="d1b66-1483">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1483">-or-</span></span>

 <span data-ttu-id="d1b66-1484"><paramref name="startIndex" /> or <paramref name="count" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1484"><paramref name="startIndex" /> or <paramref name="count" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public System.Text.StringBuilder Replace (string oldValue, string newValue, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Text.StringBuilder Replace(string oldValue, string newValue, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.Replace(System.String,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String, startIndex As Integer, count As Integer) As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Text::StringBuilder ^ Replace(System::String ^ oldValue, System::String ^ newValue, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * int * int -&gt; System.Text.StringBuilder" Usage="stringBuilder.Replace (oldValue, newValue, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="oldValue"><span data-ttu-id="d1b66-1485">The string to replace.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1485">The string to replace.</span></span></param>
        <param name="newValue"><span data-ttu-id="d1b66-1486">The string that replaces <paramref name="oldValue" />, or <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1486">The string that replaces <paramref name="oldValue" />, or <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="d1b66-1487">The position in this instance where the substring begins.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1487">The position in this instance where the substring begins.</span></span></param>
        <param name="count"><span data-ttu-id="d1b66-1488">The length of the substring.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1488">The length of the substring.</span></span></param>
        <summary><span data-ttu-id="d1b66-1489">Replaces, within a substring of this instance, all occurrences of a specified string with another specified string.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1489">Replaces, within a substring of this instance, all occurrences of a specified string with another specified string.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1490">A reference to this instance with all instances of <paramref name="oldValue" /> replaced by <paramref name="newValue" /> in the range from <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> - 1.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1490">A reference to this instance with all instances of <paramref name="oldValue" /> replaced by <paramref name="newValue" /> in the range from <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> - 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1491">このメソッドは、大文字と小文字を区別した序数の比較を実行して、指定した部分文字列に含まれる `oldValue` の出現を識別します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1491">This method performs an ordinal, case-sensitive comparison to identify occurrences of `oldValue` in the specified substring.</span></span> <span data-ttu-id="d1b66-1492">`newValue` が `null` または <xref:System.String.Empty?displayProperty=nameWithType>の場合、すべての `oldValue` が削除されます。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1492">If `newValue` is `null` or <xref:System.String.Empty?displayProperty=nameWithType>, all occurrences of `oldValue` are removed.</span></span>



## Examples
 <span data-ttu-id="d1b66-1493"><xref:System.Text.StringBuilder.Replace%2A>メソッドの例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1493">The following example demonstrates the <xref:System.Text.StringBuilder.Replace%2A> method.</span></span>

 [!code-cpp[stringbuilder.replace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringbuilder.replace/CPP/replace.cpp#1)]
 [!code-csharp[stringbuilder.replace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringbuilder.replace/CS/replace.cs#1)]
 [!code-vb[stringbuilder.replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringbuilder.replace/VB/replace.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-1494"><paramref name="oldValue" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1494"><paramref name="oldValue" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d1b66-1495">The length of <paramref name="oldValue" /> is zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1495">The length of <paramref name="oldValue" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1496"><paramref name="startIndex" /> or <paramref name="count" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1496"><paramref name="startIndex" /> or <paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="d1b66-1497">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1497">-or-</span></span>

 <span data-ttu-id="d1b66-1498"><paramref name="startIndex" /> plus <paramref name="count" /> indicates a character position not within this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1498"><paramref name="startIndex" /> plus <paramref name="count" /> indicates a character position not within this instance.</span></span>

<span data-ttu-id="d1b66-1499">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1499">-or-</span></span>

<span data-ttu-id="d1b66-1500">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1500">Enlarging the value of this instance would exceed <see cref="P:System.Text.StringBuilder.MaxCapacity" />.</span></span></exception>
        <altmember cref="M:System.Text.StringBuilder.Remove(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="d1b66-1501">The object to populate with serialization information.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1501">The object to populate with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="d1b66-1502">The place to store and retrieve serialized data.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1502">The place to store and retrieve serialized data.</span></span> <span data-ttu-id="d1b66-1503">Reserved for future use.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1503">Reserved for future use.</span></span></param>
        <summary><span data-ttu-id="d1b66-1504">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data necessary to deserialize the current <see cref="T:System.Text.StringBuilder" /> object.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1504">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the data necessary to deserialize the current <see cref="T:System.Text.StringBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1505">`context` パラメーターは将来の使用のために予約されているため、この操作には参加しません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1505">The `context` parameter is reserved for future use and does not participate in this operation.</span></span>

 <span data-ttu-id="d1b66-1506">詳細については、<xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=nameWithType> メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1506">For more information, see the <xref:System.Runtime.Serialization.SerializationInfo.AddValue%28System.String%2CSystem.Object%2CSystem.Type%29?displayProperty=nameWithType> method.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d1b66-1507"><paramref name="info" /> is <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1507"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d1b66-1508">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1508">requires full trust for the immediate caller.</span></span> <span data-ttu-id="d1b66-1509">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1509">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1b66-1510">Converts the value of a <see cref="T:System.Text.StringBuilder" /> to a <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1510">Converts the value of a <see cref="T:System.Text.StringBuilder" /> to a <see cref="T:System.String" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1b66-1511">Converts the value of this instance to a <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1511">Converts the value of this instance to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1512">A string whose value is the same as this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1512">A string whose value is the same as this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1513"><xref:System.Text.StringBuilder> オブジェクトによって表される文字列を <xref:System.String> パラメーターを持つメソッドに渡したり、ユーザーインターフェイスに表示したりするには、<xref:System.Text.StringBuilder.ToString%2A> メソッドを呼び出して、<xref:System.Text.StringBuilder> オブジェクトを <xref:System.String> オブジェクトに変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1513">You must call the <xref:System.Text.StringBuilder.ToString%2A> method to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object before you can pass the string represented by the <xref:System.Text.StringBuilder> object to a method that has a <xref:System.String> parameter or display it in the user interface.</span></span>



## Examples
 <span data-ttu-id="d1b66-1514">次の例では、<xref:System.Text.StringBuilder.ToString%2A> メソッドを呼び出す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1514">The following example demonstrates calling the <xref:System.Text.StringBuilder.ToString%2A> method.</span></span> <span data-ttu-id="d1b66-1515">この例は、<xref:System.Text.StringBuilder> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1515">This example is part of a larger example provided for the <xref:System.Text.StringBuilder> class.</span></span>

 [!code-cpp[StringBuilder#5](~/samples/snippets/cpp/VS_Snippets_CLR/StringBuilder/cpp/StringBuilder.cpp#5)]
 [!code-csharp[StringBuilder#5](~/samples/snippets/csharp/VS_Snippets_CLR/StringBuilder/CS/StringBuilder.cs#5)]
 [!code-vb[StringBuilder#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringBuilder/VB/StringBuilder.vb#5)]

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.StringBuilder.ToString(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (startIndex As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(int startIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.ToString : int * int -&gt; string" Usage="stringBuilder.ToString (startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex"><span data-ttu-id="d1b66-1516">The starting position of the substring in this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1516">The starting position of the substring in this instance.</span></span></param>
        <param name="length"><span data-ttu-id="d1b66-1517">The length of the substring.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1517">The length of the substring.</span></span></param>
        <summary><span data-ttu-id="d1b66-1518">Converts the value of a substring of this instance to a <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1518">Converts the value of a substring of this instance to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="d1b66-1519">A string whose value is the same as the specified substring of this instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1519">A string whose value is the same as the specified substring of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="d1b66-1520"><xref:System.Text.StringBuilder> オブジェクトによって表される文字列を <xref:System.String> パラメーターを持つメソッドに渡したり、ユーザーインターフェイスに表示したりするには、<xref:System.Text.StringBuilder.ToString%2A> メソッドを呼び出して、<xref:System.Text.StringBuilder> オブジェクトを <xref:System.String> オブジェクトに変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d1b66-1520">You must call the <xref:System.Text.StringBuilder.ToString%2A> method to convert the <xref:System.Text.StringBuilder> object to a <xref:System.String> object before you can pass the string represented by the <xref:System.Text.StringBuilder> object to a method that has a <xref:System.String> parameter or display it in the user interface.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d1b66-1521"><paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1521"><paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span></span>

<span data-ttu-id="d1b66-1522">-or-</span><span class="sxs-lookup"><span data-stu-id="d1b66-1522">-or-</span></span>

<span data-ttu-id="d1b66-1523">The sum of <paramref name="startIndex" /> and <paramref name="length" /> is greater than the length of the current instance.</span><span class="sxs-lookup"><span data-stu-id="d1b66-1523">The sum of <paramref name="startIndex" /> and <paramref name="length" /> is greater than the length of the current instance.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
