<Type Name="CodePagesEncodingProvider" FullName="System.Text.CodePagesEncodingProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1ac2cbb976620502eb60880d667c4c73e48c891" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75053114" /></Metadata><TypeSignature Language="C#" Value="public sealed class CodePagesEncodingProvider : System.Text.EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodePagesEncodingProvider extends System.Text.EncodingProvider" />
  <TypeSignature Language="DocId" Value="T:System.Text.CodePagesEncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodePagesEncodingProvider&#xA;Inherits EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodePagesEncodingProvider sealed : System::Text::EncodingProvider" />
  <TypeSignature Language="F#" Value="type CodePagesEncodingProvider = class&#xA;    inherit EncodingProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="dotnet-plat-ext-2.1">System.Text.EncodingProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>コード ページのエンコード プロバイダーへのアクセスを提供します。それ以外の場合、このページはデスクトップの .NET Framework でのみサポートされます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

 Windows デスクトップの .NET Framework は、大規模な Unicode およびコードページエンコードのセットをサポートしています。 一方、.NET Core では、次のエンコーディングのみがサポートされています。

-   ASCII (コードページ 20127)。 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> プロパティによって返されます。

-   ISO-8859-1 (コードページ 28591)。

-   UTF-7 (コードページ 65000)。これは <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> プロパティによって返されます。

-   UTF-8 (コードページ 65001)。 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> プロパティによって返されます。

-   UTF-16 および 16LE (コードページ 1200)。これは <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> プロパティによって返されます。

-   UTF-16 BE (コードページ 1201)。 `bigEndian` 値が `true`の <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> または <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> コンストラクターを呼び出すことによってインスタンス化されます。

-   32 UTF-8 と UTF-16 LE (コードページ 12000)。 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> プロパティによって返されます。

-   UTF (コードページ 12001) は、`bigEndian` パラメーターを持ち、メソッド呼び出しで `true` の値を提供する <xref:System.Text.UTF32Encoding> コンストラクターを呼び出すことによってインスタンス化されます。

 コードページ20127以外のコードページエンコーディングはサポートされていません。

 <xref:System.Text.CodePagesEncodingProvider> クラスは <xref:System.Text.EncodingProvider> を拡張して、これらのコードページを .NET Core で使用できるようにします。 これらの追加のコードページを使用するには、次の手順を実行します。

-   プロジェクトに、参照を追加して、コードページ...........................

-   静的な <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> プロパティから <xref:System.Text.CodePagesEncodingProvider> オブジェクトを取得します。

-   <xref:System.Text.CodePagesEncodingProvider> オブジェクトを <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> メソッドに渡します。

 <xref:System.Text.EncodingProvider> オブジェクトが登録されると、そのオブジェクトがサポートするエンコーディングは、<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>のオーバーロードを呼び出すことによって利用できるようになります。<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> のオーバーロードは呼び出さないでください。

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

.NET Framework は、多数の文字エンコーディングとコードページをサポートしています。 エンコードの完全な一覧を取得するには、.NET Framework で使用できる <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> メソッドを呼び出します。 一方、.NET Core は、既定では次のエンコーディングのみをサポートしています。

-   ASCII (コードページ 20127)。 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> プロパティによって返されます。

-   ISO-8859-1 (コードページ 28591)。

-   UTF-7 (コードページ 65000)。これは <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> プロパティによって返されます。

-   UTF-8 (コードページ 65001)。 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> プロパティによって返されます。

-   UTF-16 および 16LE (コードページ 1200)。これは <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> プロパティによって返されます。

-   UTF-16 BE (コードページ 1201)。 `bigEndian` 値が `true`の <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> または <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> コンストラクターを呼び出すことによってインスタンス化されます。

-   32 UTF-8 と UTF-16 LE (コードページ 12000)。 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> プロパティによって返されます。

-   UTF (コードページ 12001) は、`bigEndian` パラメーターを持ち、メソッド呼び出しで `true` の値を提供する <xref:System.Text.UTF32Encoding> コンストラクターを呼び出すことによってインスタンス化されます。

 .NET Core ではなく .NET Framework に存在するエンコーディングを取得するには、次の手順を実行します。

-   プロジェクトに、参照を追加して、コード*ページ*...........................

-   静的な <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> プロパティから <xref:System.Text.EncodingProvider> オブジェクトを取得します。

-   <xref:System.Text.EncodingProvider> オブジェクトを <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> メソッドに渡して、<xref:System.Text.EncodingProvider> オブジェクトによって提供されるエンコーディングを共通言語ランタイムで使用できるようにします。

-   <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> オーバーロードを呼び出して、エンコーディングを取得します。 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> メソッドは、対応する <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> メソッドを呼び出して、要求されたエンコーディングを提供できるかどうかを判断します。

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : int -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="codepage">エンコード プロバイダーでサポートされる優先エンコードのコード ページ識別子。</param>
        <summary>指定したコード ページ ID に関連付けられたエンコーディングを返します。</summary>
        <returns>指定したコード ページ識別子に関連付けられているエンコード。プロバイダーが要求されたコード ページ エンコードをサポートしていない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : string -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="name">エンコード プロバイダーでサポートされる優先エンコードのコード ページ名。</param>
        <summary>指定したコード ページ名に関連付けられたエンコーディングを返します。</summary>
        <returns>指定したコード ページに関連付けられているエンコード。プロバイダーが要求されたエンコードをサポートしていない場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingProvider Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncodingProvider Instance" />
      <MemberSignature Language="DocId" Value="P:System.Text.CodePagesEncodingProvider.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As EncodingProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncodingProvider ^ Instance { System::Text::EncodingProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Text.EncodingProvider" Usage="System.Text.CodePagesEncodingProvider.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>デスクトップの .NET Framework ではサポートされているものの現在の .NET Framework プラットフォームではサポートされていないコード ページのエンコーディング プロバイダーを取得します。</summary>
        <value>現在の .NET Framework プラットフォームでサポートされていないエンコーディングへのアクセスを許可するエンコーディングプロバイダー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 .NET Framework は、多数の文字エンコーディングとコードページをサポートしています。 エンコードの完全な一覧を取得するには、.NET Framework で使用できる <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> メソッドを呼び出します。 一方、.NET Core は、既定では次のエンコーディングのみをサポートしています。

-   ASCII (コードページ 20127)。 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> プロパティによって返されます。

-   ISO-8859-1 (コードページ 28591)。

-   UTF-7 (コードページ 65000)。これは <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> プロパティによって返されます。

-   UTF-8 (コードページ 65001)。 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> プロパティによって返されます。

-   UTF-16 および 16LE (コードページ 1200)。これは <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> プロパティによって返されます。

-   UTF-16 BE (コードページ 1201)。 `bigEndian` 値が `true`の <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> または <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> コンストラクターを呼び出すことによってインスタンス化されます。

-   32 UTF-8 と UTF-16 LE (コードページ 12000)。 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> プロパティによって返されます。

-   UTF (コードページ 12001) は、`bigEndian` パラメーターを持ち、メソッド呼び出しで `true` の値を提供する <xref:System.Text.UTF32Encoding> コンストラクターを呼び出すことによってインスタンス化されます。

 .NET Core ではなく、Windows デスクトップの .NET Framework に存在するエンコーディングを取得するには、次の手順を実行します。

-   プロジェクトに、参照を追加して、コードページ...........................

-   静的な <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> プロパティから <xref:System.Text.EncodingProvider> オブジェクトを取得します。

-   <xref:System.Text.EncodingProvider> オブジェクトを <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> メソッドに渡して、<xref:System.Text.EncodingProvider> オブジェクトによって提供されるエンコーディングを共通言語ランタイムで使用できるようにします。

-   <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> オーバーロードを呼び出して、エンコーディングを取得します。 <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> メソッドは、対応する <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> メソッドを呼び出して、要求されたエンコーディングを提供できるかどうかを判断します。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
