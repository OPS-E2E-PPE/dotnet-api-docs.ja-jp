<Type Name="CodePagesEncodingProvider" FullName="System.Text.CodePagesEncodingProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="26da2ff559c11323a5dfe37702e3e24ec76a0c2e" /><Meta Name="ms.sourcegitcommit" Value="93be4738b3a867ee93eb6ee4b43150302a23b5b5" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/11/2019" /><Meta Name="ms.locfileid" Value="73916927" /></Metadata><TypeSignature Language="C#" Value="public sealed class CodePagesEncodingProvider : System.Text.EncodingProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CodePagesEncodingProvider extends System.Text.EncodingProvider" />
  <TypeSignature Language="DocId" Value="T:System.Text.CodePagesEncodingProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CodePagesEncodingProvider&#xA;Inherits EncodingProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodePagesEncodingProvider sealed : System::Text::EncodingProvider" />
  <TypeSignature Language="F#" Value="type CodePagesEncodingProvider = class&#xA;    inherit EncodingProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="dotnet-plat-ext-2.1">System.Text.EncodingProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4b7cc-101">コード ページのエンコード プロバイダーへのアクセスを提供します。それ以外の場合、このページはデスクトップの .NET Framework でのみサポートされます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-101">Provides access to an encoding provider for code pages that otherwise are available only in the desktop .NET Framework.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="4b7cc-102">Windows デスクトップの .NET Framework は、大規模な Unicode およびコードページエンコードのセットをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-102">The .NET Framework for the Windows desktop supports a large set of Unicode and code page encodings.</span></span> <span data-ttu-id="4b7cc-103">一方、.NET Core では、次のエンコーディングのみがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-103">.NET Core, on the other hand, supports only the following encodings:</span></span>

-   <span data-ttu-id="4b7cc-104">ASCII (コードページ 20127)。 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-104">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-105">ISO-8859-1 (コードページ 28591)。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-105">ISO-8859-1 (code page 28591).</span></span>

-   <span data-ttu-id="4b7cc-106">UTF-7 (コードページ 65000)。これは <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-106">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-107">UTF-8 (コードページ 65001)。 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-107">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-108">UTF-16 および 16LE (コードページ 1200)。これは <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-108">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-109">UTF-16 BE (コードページ 1201)。 `bigEndian` 値が `true`の <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> または <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> コンストラクターを呼び出すことによってインスタンス化されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-109">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>

-   <span data-ttu-id="4b7cc-110">32 UTF-8 と UTF-16 LE (コードページ 12000)。 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-110">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-111">UTF (コードページ 12001) は、`bigEndian` パラメーターを持ち、メソッド呼び出しで `true` の値を提供する <xref:System.Text.UTF32Encoding> コンストラクターを呼び出すことによってインスタンス化されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-111">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>

 <span data-ttu-id="4b7cc-112">コードページ20127以外のコードページエンコーディングはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-112">Other than code page 20127, code page encodings are not supported.</span></span>

 <span data-ttu-id="4b7cc-113"><xref:System.Text.CodePagesEncodingProvider> クラスは <xref:System.Text.EncodingProvider> を拡張して、これらのコードページを .NET Core で使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-113">The <xref:System.Text.CodePagesEncodingProvider> class extends <xref:System.Text.EncodingProvider> to make these code pages available to .NET Core.</span></span> <span data-ttu-id="4b7cc-114">これらの追加のコードページを使用するには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-114">To use these additional code pages, you do the following:</span></span>

-   <span data-ttu-id="4b7cc-115">プロジェクトに、参照を追加して、コードページ...........................</span><span class="sxs-lookup"><span data-stu-id="4b7cc-115">Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</span></span>

-   <span data-ttu-id="4b7cc-116">静的な <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> プロパティから <xref:System.Text.CodePagesEncodingProvider> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-116">Retrieve a <xref:System.Text.CodePagesEncodingProvider> object from the static <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-117"><xref:System.Text.CodePagesEncodingProvider> オブジェクトを <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> メソッドに渡します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-117">Pass the <xref:System.Text.CodePagesEncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method.</span></span>

 <span data-ttu-id="4b7cc-118"><xref:System.Text.EncodingProvider> オブジェクトが登録されると、そのオブジェクトがサポートするエンコーディングは、<xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>のオーバーロードを呼び出すことによって利用できるようになります。<xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> のオーバーロードは呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-118">After an <xref:System.Text.EncodingProvider> object is registered, the encodings that it supports are available by calling the overloads of <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType>; you should not call the <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> overloads.</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetEncoding">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="4b7cc-119">.NET Framework は、多数の文字エンコーディングとコードページをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-119">The .NET Framework supports a large number of character encodings and code pages.</span></span> <span data-ttu-id="4b7cc-120">エンコードの完全な一覧を取得するには、.NET Framework で使用できる <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-120">You can get a complete list of encodings by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> method, which is available in the .NET Framework.</span></span> <span data-ttu-id="4b7cc-121">一方、.NET Core は、既定では次のエンコーディングのみをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-121">On the other hand, .NET Core only supports the following encodings by default:</span></span>

-   <span data-ttu-id="4b7cc-122">ASCII (コードページ 20127)。 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-122">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-123">ISO-8859-1 (コードページ 28591)。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-123">ISO-8859-1 (code page 28591).</span></span>

-   <span data-ttu-id="4b7cc-124">UTF-7 (コードページ 65000)。これは <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-124">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-125">UTF-8 (コードページ 65001)。 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-125">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-126">UTF-16 および 16LE (コードページ 1200)。これは <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-126">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-127">UTF-16 BE (コードページ 1201)。 `bigEndian` 値が `true`の <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> または <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> コンストラクターを呼び出すことによってインスタンス化されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-127">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>

-   <span data-ttu-id="4b7cc-128">32 UTF-8 と UTF-16 LE (コードページ 12000)。 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-128">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-129">UTF (コードページ 12001) は、`bigEndian` パラメーターを持ち、メソッド呼び出しで `true` の値を提供する <xref:System.Text.UTF32Encoding> コンストラクターを呼び出すことによってインスタンス化されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-129">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>

 <span data-ttu-id="4b7cc-130">.NET Core ではなく .NET Framework に存在するエンコーディングを取得するには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-130">To retrieve an encoding that is present in .NET Framework but not in .NET Core, you do the following:</span></span>

-   <span data-ttu-id="4b7cc-131">プロジェクトに、参照を追加して、コード*ページ*...........................</span><span class="sxs-lookup"><span data-stu-id="4b7cc-131">Add a reference to the *System.Text.Encoding.CodePages.dll* assembly to your project.</span></span>

-   <span data-ttu-id="4b7cc-132">静的な <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> プロパティから <xref:System.Text.EncodingProvider> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-132">Get the <xref:System.Text.EncodingProvider> object from the static <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-133"><xref:System.Text.EncodingProvider> オブジェクトを <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> メソッドに渡して、<xref:System.Text.EncodingProvider> オブジェクトによって提供されるエンコーディングを共通言語ランタイムで使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-133">Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.</span></span>

-   <span data-ttu-id="4b7cc-134"><xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> オーバーロードを呼び出して、エンコーディングを取得します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-134">Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload to retrieve the encoding.</span></span> <span data-ttu-id="4b7cc-135"><xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> メソッドは、対応する <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> メソッドを呼び出して、要求されたエンコーディングを提供できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-135">The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> method to determine whether it can supply the requested encoding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (int codepage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(int32 codepage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (codepage As Integer) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(int codepage);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : int -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding codepage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codepage" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="codepage"><span data-ttu-id="4b7cc-136">エンコード プロバイダーでサポートされる優先エンコードのコード ページ識別子。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-136">The code page identifier of the preferred encoding which the encoding provider may support.</span></span></param>
        <summary><span data-ttu-id="4b7cc-137">指定したコード ページ ID に関連付けられたエンコーディングを返します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-137">Returns the encoding associated with the specified code page identifier.</span></span></summary>
        <returns><span data-ttu-id="4b7cc-138">指定したコード ページ識別子に関連付けられているエンコード。プロバイダーが要求されたコード ページ エンコードをサポートしていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-138">The encoding associated with the specified code page identifier, or <see langword="null" /> if the provider does not support the requested codepage encoding.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEncoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding GetEncoding (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoding GetEncoding(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.CodePagesEncodingProvider.GetEncoding(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoding (name As String) As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoding ^ GetEncoding(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.GetEncoding : string -&gt; System.Text.Encoding" Usage="codePagesEncodingProvider.GetEncoding name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4b7cc-139">エンコード プロバイダーでサポートされる優先エンコードのコード ページ名。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-139">The code page name of the preferred encoding which the encoding provider may support.</span></span></param>
        <summary><span data-ttu-id="4b7cc-140">指定したコード ページ名に関連付けられたエンコーディングを返します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-140">Returns the encoding associated with the specified code page name.</span></span></summary>
        <returns><span data-ttu-id="4b7cc-141">指定したコード ページに関連付けられているエンコード。プロバイダーが要求されたエンコードをサポートしていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-141">The encoding associated with the specified code page, or <see langword="null" /> if the provider does not support the requested encoding.</span></span></returns>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static System.Text.EncodingProvider Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.EncodingProvider Instance" />
      <MemberSignature Language="DocId" Value="P:System.Text.CodePagesEncodingProvider.Instance" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As EncodingProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::EncodingProvider ^ Instance { System::Text::EncodingProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : System.Text.EncodingProvider" Usage="System.Text.CodePagesEncodingProvider.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.CodePages</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.EncodingProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4b7cc-142">デスクトップの .NET Framework ではサポートされているものの現在の .NET Framework プラットフォームではサポートされていないコード ページのエンコーディング プロバイダーを取得します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-142">Gets an encoding provider for code pages supported in the desktop .NET Framework but not in the current .NET Framework platform.</span></span></summary>
        <value><span data-ttu-id="4b7cc-143">現在の .NET Framework プラットフォームでサポートされていないエンコーディングへのアクセスを許可するエンコーディングプロバイダー。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-143">An encoding provider that allows access to encodings not supported on the current .NET Framework platform.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="4b7cc-144">.NET Framework は、多数の文字エンコーディングとコードページをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-144">The .NET Framework supports a large number of character encodings and code pages.</span></span> <span data-ttu-id="4b7cc-145">エンコードの完全な一覧を取得するには、.NET Framework で使用できる <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-145">You can get a complete list of encodings by calling the <xref:System.Text.Encoding.GetEncodings%2A?displayProperty=nameWithType> method, which is available in the .NET Framework.</span></span> <span data-ttu-id="4b7cc-146">一方、.NET Core は、既定では次のエンコーディングのみをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-146">On the other hand, .NET Core only supports the following encodings by default:</span></span>

-   <span data-ttu-id="4b7cc-147">ASCII (コードページ 20127)。 <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-147">ASCII (code page 20127), which is returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-148">ISO-8859-1 (コードページ 28591)。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-148">ISO-8859-1 (code page 28591).</span></span>

-   <span data-ttu-id="4b7cc-149">UTF-7 (コードページ 65000)。これは <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-149">UTF-7 (code page 65000), which is returned by the <xref:System.Text.Encoding.UTF7%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-150">UTF-8 (コードページ 65001)。 <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-150">UTF-8 (code page 65001), which is returned by the <xref:System.Text.Encoding.UTF8%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-151">UTF-16 および 16LE (コードページ 1200)。これは <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-151">UTF-16 and UTF-16LE (code page 1200), which is returned by the <xref:System.Text.Encoding.Unicode%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-152">UTF-16 BE (コードページ 1201)。 `bigEndian` 値が `true`の <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> または <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> コンストラクターを呼び出すことによってインスタンス化されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-152">UTF-16BE (code page 1201), which is instantiated by calling the <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> or <xref:System.Text.UnicodeEncoding.%23ctor%2A?displayProperty=nameWithType> constructor with a `bigEndian` value of `true`.</span></span>

-   <span data-ttu-id="4b7cc-153">32 UTF-8 と UTF-16 LE (コードページ 12000)。 <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-153">UTF-32 and UTF-32LE (code page 12000), which is returned by the <xref:System.Text.Encoding.UTF32%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-154">UTF (コードページ 12001) は、`bigEndian` パラメーターを持ち、メソッド呼び出しで `true` の値を提供する <xref:System.Text.UTF32Encoding> コンストラクターを呼び出すことによってインスタンス化されます。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-154">UTF-32BE (code page 12001), which is instantiated by calling an <xref:System.Text.UTF32Encoding> constructor that has a `bigEndian` parameter and providing a value of `true` in the method call.</span></span>

 <span data-ttu-id="4b7cc-155">.NET Core ではなく、Windows デスクトップの .NET Framework に存在するエンコーディングを取得するには、次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-155">To retrieve an encoding that is present in the .NET Framework on the Windows desktop but not in .NET Core, you do the following:</span></span>

-   <span data-ttu-id="4b7cc-156">プロジェクトに、参照を追加して、コードページ...........................</span><span class="sxs-lookup"><span data-stu-id="4b7cc-156">Add a reference to the System.Text.Encoding.CodePages.dll assembly to your project.</span></span>

-   <span data-ttu-id="4b7cc-157">静的な <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> プロパティから <xref:System.Text.EncodingProvider> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-157">Get the <xref:System.Text.EncodingProvider> object from the static <xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=nameWithType> property.</span></span>

-   <span data-ttu-id="4b7cc-158"><xref:System.Text.EncodingProvider> オブジェクトを <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> メソッドに渡して、<xref:System.Text.EncodingProvider> オブジェクトによって提供されるエンコーディングを共通言語ランタイムで使用できるようにします。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-158">Pass the <xref:System.Text.EncodingProvider> object to the <xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=nameWithType> method to make the encodings supplied by the <xref:System.Text.EncodingProvider> object available to the common language runtime.</span></span>

-   <span data-ttu-id="4b7cc-159"><xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> オーバーロードを呼び出して、エンコーディングを取得します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-159">Call an <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> overload to retrieve the encoding.</span></span> <span data-ttu-id="4b7cc-160"><xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> メソッドは、対応する <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> メソッドを呼び出して、要求されたエンコーディングを提供できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="4b7cc-160">The <xref:System.Text.Encoding.GetEncoding%2A?displayProperty=nameWithType> method will call the corresponding <xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=nameWithType> method to determine whether it can supply the requested encoding.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
