<Type Name="Encoder" FullName="System.Text.Encoder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fbbf8a1d012b3afbc123a8238140b6884ef1dbeb" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78785237" /></Metadata><TypeSignature Language="C#" Value="public abstract class Encoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Encoder extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Text.Encoder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Encoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Encoder abstract" />
  <TypeSignature Language="F#" Value="type Encoder = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Encoder extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Text.Encoding" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Text.Encoding" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3fd63-101">文字のセットをバイトのシーケンスに変換します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-101">Converts a set of characters into a sequence of bytes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3fd63-102"><xref:System.Text.Encoder> クラスの実装のインスタンスを取得するには、アプリケーションで <xref:System.Text.Encoding> 実装の <xref:System.Text.Encoding.GetEncoder%2A> メソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-102">To obtain an instance of an implementation of the <xref:System.Text.Encoder> class, the application should use the <xref:System.Text.Encoding.GetEncoder%2A> method of an <xref:System.Text.Encoding> implementation.</span></span>

 <span data-ttu-id="3fd63-103"><xref:System.Text.Encoder.GetByteCount%2A> メソッドは、Unicode 文字のセットをエンコードするためのバイト数を決定し、<xref:System.Text.Encoder.GetBytes%2A> メソッドは実際のエンコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-103">The <xref:System.Text.Encoder.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.Encoder.GetBytes%2A> method performs the actual encoding.</span></span> <span data-ttu-id="3fd63-104">これらのメソッドの両方について、<xref:System.Text.Encoder> クラスで使用できるバージョンがいくつかあります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-104">There are several versions of both of these methods available in the <xref:System.Text.Encoder> class.</span></span> <span data-ttu-id="3fd63-105">詳細については、「<xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="3fd63-105">For more information, see <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="3fd63-106"><xref:System.Text.Encoder> オブジェクトは、ブロックにまたがる文字シーケンスを正しくエンコードできるように、`GetBytes` または <xref:System.Text.Decoder.Convert%2A> メソッドの連続した呼び出し間で状態情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-106">A <xref:System.Text.Encoder> object maintains state information between successive calls to `GetBytes` or <xref:System.Text.Decoder.Convert%2A> methods so that it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="3fd63-107">また <xref:System.Text.Encoder> は、データブロックの末尾で末尾の文字を保持し、次のエンコーディング操作で末尾の文字を使用します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-107">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="3fd63-108">たとえば、データブロックの末尾が一致していない上位サロゲートで、一致する下位サロゲートが次のデータブロックに含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-108">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="3fd63-109">そのため、<xref:System.Text.Encoding.GetDecoder%2A> と <xref:System.Text.Encoding.GetEncoder%2A> は、ネットワークの転送とファイル操作に役立ちます。これらの操作は、多くの場合、データストリーム全体ではなくデータブロックを処理するためです。</span><span class="sxs-lookup"><span data-stu-id="3fd63-109">Therefore, <xref:System.Text.Encoding.GetDecoder%2A> and <xref:System.Text.Encoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>

> [!NOTE]
>  <span data-ttu-id="3fd63-110">データストリームを使用してアプリケーションを実行する場合は、適切なメソッドの呼び出しで `flush` パラメーターを `true` に設定することによって、状態情報がフラッシュされるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-110">When the application is done with a stream of data it should make sure that the state information is flushed by setting the `flush` parameter to `true` in the appropriate method call.</span></span> <span data-ttu-id="3fd63-111">例外が発生した場合、またはアプリケーションがストリームを切り替える場合は、<xref:System.Text.Encoder.Reset%2A> を呼び出して、`Encoder` オブジェクトの内部状態をクリアする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-111">If an exception occurs or if the application switches streams, it should call <xref:System.Text.Encoder.Reset%2A> to clear the internal state of the `Encoder` object.</span></span>

## <a name="version-considerations"></a><span data-ttu-id="3fd63-112">バージョンに関する考慮事項</span><span class="sxs-lookup"><span data-stu-id="3fd63-112">Version Considerations</span></span>
 <span data-ttu-id="3fd63-113">変換操作中に、<xref:System.Text.Decoder> オブジェクトまたは <xref:System.Text.Encoder> オブジェクトをシリアル化できます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-113">A <xref:System.Text.Decoder> or <xref:System.Text.Encoder> object can be serialized during a conversion operation.</span></span> <span data-ttu-id="3fd63-114">オブジェクトの状態は、同じバージョンの .NET Framework で逆シリアル化された場合は保持されますが、別のバージョンで逆シリアル化された場合は失われます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-114">The state of the object is retained if it is deserialized in the same version of the .NET Framework, but lost if it is deserialized in another version.</span></span>



## Examples
 <span data-ttu-id="3fd63-115">次の例は、指定されたエンコーディングを使用して Unicode 文字の配列をバイトのブロックに変換する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3fd63-115">The following example demonstrates how to convert an array of Unicode characters into blocks of bytes using a specified encoding.</span></span> <span data-ttu-id="3fd63-116">比較のために、文字の配列は最初に <xref:System.Text.UTF7Encoding>を使用してエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-116">For comparison, the array of characters is first encoded using <xref:System.Text.UTF7Encoding>.</span></span> <span data-ttu-id="3fd63-117">次に、文字の配列が <xref:System.Text.Encoder>を使用してエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-117">Next, the array of characters is encoded using an <xref:System.Text.Encoder>.</span></span>

 [!code-cpp[System.Text.Encoder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoder Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.Encoder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoder Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.Encoder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoder Example/VB/snippet.vb#1)]

 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="3fd63-118">アプリケーションがこのクラスから継承する場合は、すべてのメンバーをオーバーライドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-118">When your application inherits from this class, it must override all the members.</span></span></para></block>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoding" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="3fd63-119">エンコーディングについて</span><span class="sxs-lookup"><span data-stu-id="3fd63-119">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Encoder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Encoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fd63-120"><see cref="T:System.Text.Encoder" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-120">Initializes a new instance of the <see cref="T:System.Text.Encoder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3fd63-121">このクラスの実装のインスタンスを取得するには、アプリケーションで <xref:System.Text.Encoding> 実装の <xref:System.Text.Encoding.GetEncoder%2A> メソッドを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-121">To obtain an instance of an implementation of this class, the application should use the <xref:System.Text.Encoding.GetEncoder%2A> method of an <xref:System.Text.Encoding> implementation.</span></span>



## Examples
 <span data-ttu-id="3fd63-122">次の例は、新しい <xref:System.Text.Encoder> インスタンスを初期化する2つの方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3fd63-122">The following example demonstrates two techniques for initializing a new <xref:System.Text.Encoder> instance.</span></span>

 [!code-cpp[System.Text.Encoder.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoder.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.Encoder.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoder.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.Encoder.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoder.ctor Example/VB/ctor.vb#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3fd63-123">バッファーまたは配列に格納されている Unicode 文字を、エンコード済みバイト シーケンスに変換します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-123">Converts a buffer or array of Unicode characters to an encoded byte sequence.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes, bool flush, out int charsUsed, out int bytesUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes, bool flush, [out] int32&amp; charsUsed, [out] int32&amp; bytesUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.Convert(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte), flush As Boolean, ByRef charsUsed As Integer, ByRef bytesUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes, bool flush, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; * bool * int * int * bool -&gt; unit&#xA;override this.Convert : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; * bool * int * int * bool -&gt; unit" Usage="encoder.Convert (chars, bytes, flush, charsUsed, bytesUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="charsUsed" Type="System.Int32" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bytesUsed" Type="System.Int32" RefType="out" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="completed" Type="System.Boolean" RefType="out" Index="5" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="3fd63-124">変換する UTF-16 エンコードの文字スパン。</span><span class="sxs-lookup"><span data-stu-id="3fd63-124">The span of UTF-16 encoded characters to convert.</span></span></param>
        <param name="bytes"><span data-ttu-id="3fd63-125">変換されたバイトを格納するスパン バッファー。</span><span class="sxs-lookup"><span data-stu-id="3fd63-125">The span buffer to store the converted bytes.</span></span></param>
        <param name="flush"><span data-ttu-id="3fd63-126">これ以上データの変換を行わないことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fd63-126"><see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span></span></param>
        <param name="charsUsed"><span data-ttu-id="3fd63-127">このメソッドから制御が戻るときに、<paramref name="chars" /> で変換に使用された文字数を格納します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-127">When this method returns, contains the number of characters from <paramref name="chars" /> that were used in the conversion.</span></span> <span data-ttu-id="3fd63-128">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-128">This parameter is passed uninitialized.</span></span></param>
        <param name="bytesUsed"><span data-ttu-id="3fd63-129">このメソッドから制御が戻るときに、変換に使用されたバイト数を格納します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-129">When this method returns, contains the number of bytes that were used in the conversion.</span></span> <span data-ttu-id="3fd63-130">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-130">This parameter is passed uninitialized.</span></span></param>
        <param name="completed"><span data-ttu-id="3fd63-131">このメソッドから制御が戻るときに、<paramref name="chars" /> のすべての文字が変換された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fd63-131">When this method returns, contains <see langword="true" /> if all the characters in <paramref name="chars" /> were converted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3fd63-132">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-132">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="3fd63-133">Unicode 文字のスパンをエンコードされたバイト シーケンスに変換し、結果を別のバッファーに格納します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-133">Converts a span of Unicode characters to an encoded byte sequence and stores the result in another buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks
 <span data-ttu-id="3fd63-134"><xref:System.Text.Encoder> オブジェクトは <xref:System.Text.Encoder.Convert%2A>の呼び出しの間に状態を保存することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="3fd63-134">Remember that the <xref:System.Text.Encoder> object saves state between calls to <xref:System.Text.Encoder.Convert%2A>.</span></span> <span data-ttu-id="3fd63-135">データストリームを使用してアプリケーションを実行する場合は、`flush` パラメーターを `true` に設定して、状態情報がフラッシュされるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-135">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="3fd63-136">この設定では、エンコーダーはデータブロックの末尾の無効なバイトを無視し、内部バッファーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="3fd63-136">With this setting, the encoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="3fd63-137">サロゲートペアの上位サロゲートなど、論理ユニットの一部であるその他の処理済みデータは、現在のフォールバック設定に従って変換されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-137">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>

 <span data-ttu-id="3fd63-138">`Convert` メソッドは、ファイルまたはストリームから読み取ったデータなど、任意の量の入力をエンコードするためにループで使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="3fd63-138">The `Convert` method is designed to be used in a loop to encode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="3fd63-139">エンコーディング操作の出力は、固定サイズのバッファーに格納されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-139">It stores the output of the encoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="3fd63-140">出力バッファーのサイズが十分でない場合、<xref:System.Text.Encoder.GetBytes%2A> は例外をスローしますが、<xref:System.Text.Encoder.Convert%2A> は可能な限り多くの領域を使用し、書き込まれた文字の読み取りとバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-140"><xref:System.Text.Encoder.GetBytes%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Encoder.Convert%2A> will fill as much space as possible and return the chars read and bytes written.</span></span> <span data-ttu-id="3fd63-141">コメントの詳細については、<xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> のトピックも参照してください。</span><span class="sxs-lookup"><span data-stu-id="3fd63-141">Also see the <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> topic for more comments.</span></span>

 <span data-ttu-id="3fd63-142">`completed` の出力パラメーターは、入力バッファー内のすべてのデータが変換され、出力バッファーに格納されたかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-142">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="3fd63-143">このパラメーターは、`byteCount` パラメーターで指定されたバイト数を超えずに `charCount` パラメーターで指定された文字数を変換できない場合に `false` に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-143">This parameter is set to `false` if the number of characters specified by the `charCount` parameter cannot be converted without exceeding the number of bytes specified by the `byteCount` parameter.</span></span> <span data-ttu-id="3fd63-144">このような状況では、アプリケーションは出力バッファーの内容を使用するか、新しい出力バッファーを提供し、`charsUsed` パラメーターで指定された文字数だけ `chars` パラメーターをインクリメントしてから、`Convert` メソッドを再度呼び出して残りの入力を処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-144">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `chars` parameter by the number of characters specified by the `charsUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>

 <span data-ttu-id="3fd63-145">`charsUsed` パラメーターと ' char ' の範囲の長さが等しい場合でも、`completed` パラメーターを `false`に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-145">The `completed` parameter can also be set to `false`, even though the `charsUsed` parameter and 'char' span length are equal.</span></span> <span data-ttu-id="3fd63-146">この状況は、`chars` バッファーに格納されていない <xref:System.Text.Encoder> オブジェクトにデータが残っている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-146">This situation occurs if there is still data in the <xref:System.Text.Encoder> object that has not been stored in the `chars` buffer.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (char* chars, int charCount, byte* bytes, int byteCount, bool flush, out int charsUsed, out int bytesUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount, bool flush, [out] int32&amp; charsUsed, [out] int32&amp; bytesUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.Convert(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(char* chars, int charCount, System::Byte* bytes, int byteCount, bool flush, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int * bool * int * int * bool -&gt; unit&#xA;override this.Convert : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int * bool * int * int * bool -&gt; unit" Usage="encoder.Convert (chars, charCount, bytes, byteCount, flush, charsUsed, bytesUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="charCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bytes" Type="System.Byte*" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="byteCount" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="charsUsed" Type="System.Int32" RefType="out" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bytesUsed" Type="System.Int32" RefType="out" Index="6" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="completed" Type="System.Boolean" RefType="out" Index="7" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="3fd63-147">UTF-16 でエンコードされた変換対象の文字の文字列のアドレス。</span><span class="sxs-lookup"><span data-stu-id="3fd63-147">The address of a string of UTF-16 encoded characters to convert.</span></span></param>
        <param name="charCount"><span data-ttu-id="3fd63-148">変換する <paramref name="chars" /> 内の文字の数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-148">The number of characters in <paramref name="chars" /> to convert.</span></span></param>
        <param name="bytes"><span data-ttu-id="3fd63-149">変換後のバイトを格納するバッファーのアドレス。</span><span class="sxs-lookup"><span data-stu-id="3fd63-149">The address of a buffer to store the converted bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="3fd63-150">変換に使用する <paramref name="bytes" /> 内の最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-150">The maximum number of bytes in <paramref name="bytes" /> to use in the conversion.</span></span></param>
        <param name="flush"><span data-ttu-id="3fd63-151">これ以上データの変換を行わないことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fd63-151"><see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span></span></param>
        <param name="charsUsed"><span data-ttu-id="3fd63-152">このメソッドから制御が戻るときに、<paramref name="chars" /> で変換に使用された文字数を格納します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-152">When this method returns, contains the number of characters from <paramref name="chars" /> that were used in the conversion.</span></span> <span data-ttu-id="3fd63-153">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-153">This parameter is passed uninitialized.</span></span></param>
        <param name="bytesUsed"><span data-ttu-id="3fd63-154">このメソッドから制御が戻るときに、変換に使用されたバイト数を格納します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-154">When this method returns, contains the number of bytes that were used in the conversion.</span></span> <span data-ttu-id="3fd63-155">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-155">This parameter is passed uninitialized.</span></span></param>
        <param name="completed"><span data-ttu-id="3fd63-156">このメソッドから制御が戻るときに、<paramref name="charCount" /> で指定したすべての文字が変換された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fd63-156">When this method returns, contains <see langword="true" /> if all the characters specified by <paramref name="charCount" /> were converted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3fd63-157">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-157">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="3fd63-158">バッファーに格納されている Unicode 文字をエンコード済みバイト シーケンスに変換し、その結果を別のバッファーに格納します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-158">Converts a buffer of Unicode characters to an encoded byte sequence and stores the result in another buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3fd63-159"><xref:System.Text.Encoder> オブジェクトは <xref:System.Text.Encoder.Convert%2A>の呼び出しの間に状態を保存することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="3fd63-159">Remember that the <xref:System.Text.Encoder> object saves state between calls to <xref:System.Text.Encoder.Convert%2A>.</span></span> <span data-ttu-id="3fd63-160">データストリームを使用してアプリケーションを実行する場合は、`flush` パラメーターを `true` に設定して、状態情報がフラッシュされるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-160">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="3fd63-161">この設定では、エンコーダーはデータブロックの末尾の無効なバイトを無視し、内部バッファーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="3fd63-161">With this setting, the encoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="3fd63-162">サロゲートペアの上位サロゲートなど、論理ユニットの一部であるその他の処理済みデータは、現在のフォールバック設定に従って変換されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-162">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>

 <span data-ttu-id="3fd63-163">`Convert` メソッドは、ファイルまたはストリームから読み取ったデータなど、任意の量の入力をエンコードするためにループで使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="3fd63-163">The `Convert` method is designed to be used in a loop to encode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="3fd63-164">エンコーディング操作の出力は、固定サイズのバッファーに格納されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-164">It stores the output of the encoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="3fd63-165">出力バッファーのサイズが十分でない場合、<xref:System.Text.Encoder.GetBytes%2A> は例外をスローしますが、<xref:System.Text.Encoder.Convert%2A> は可能な限り多くの領域を使用し、書き込まれた文字の読み取りとバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-165"><xref:System.Text.Encoder.GetBytes%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Encoder.Convert%2A> will fill as much space as possible and return the chars read and bytes written.</span></span> <span data-ttu-id="3fd63-166">コメントの詳細については、<xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> のトピックも参照してください。</span><span class="sxs-lookup"><span data-stu-id="3fd63-166">Also see the <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> topic for more comments.</span></span>

 <span data-ttu-id="3fd63-167">`completed` の出力パラメーターは、入力バッファー内のすべてのデータが変換され、出力バッファーに格納されたかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-167">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="3fd63-168">このパラメーターは、`byteCount` パラメーターで指定されたバイト数を超えずに `charCount` パラメーターで指定された文字数を変換できない場合に `false` に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-168">This parameter is set to `false` if the number of characters specified by the `charCount` parameter cannot be converted without exceeding the number of bytes specified by the `byteCount` parameter.</span></span> <span data-ttu-id="3fd63-169">このような状況では、アプリケーションは出力バッファーの内容を使用するか、新しい出力バッファーを提供し、`charsUsed` パラメーターで指定された文字数だけ `chars` パラメーターをインクリメントしてから、`Convert` メソッドを再度呼び出して残りの入力を処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-169">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `chars` parameter by the number of characters specified by the `charsUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>

 <span data-ttu-id="3fd63-170">`charsUsed` パラメーターと `charCount` パラメーターが等しい場合でも、`completed` パラメーターを `false`に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-170">The `completed` parameter can also be set to `false`, even though the `charsUsed` and `charCount` parameters are equal.</span></span> <span data-ttu-id="3fd63-171">この状況は、`chars` バッファーに格納されていない <xref:System.Text.Encoder> オブジェクトにデータが残っている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-171">This situation occurs if there is still data in the <xref:System.Text.Encoder> object that has not been stored in the `chars` buffer.</span></span>

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3fd63-172"><paramref name="chars" /> または <paramref name="bytes" /> が <see langword="null" /> (<see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-172"><paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3fd63-173"><paramref name="charCount" /> または <paramref name="byteCount" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-173"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3fd63-174">出力バッファーが小さすぎて、変換した入力を格納できません。</span><span class="sxs-lookup"><span data-stu-id="3fd63-174">The output buffer is too small to contain any of the converted input.</span></span> <span data-ttu-id="3fd63-175">出力バッファーは、<see cref="Overload:System.Text.Encoder.GetByteCount" /> メソッドで示されるサイズ以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-175">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Encoder.GetByteCount" /> method.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="3fd63-176">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="3fd63-176">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span>

<span data-ttu-id="3fd63-177">および</span><span class="sxs-lookup"><span data-stu-id="3fd63-177">-and-</span></span>

 <span data-ttu-id="3fd63-178"><see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-178"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public virtual void Convert (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, int byteCount, bool flush, out int charsUsed, out int bytesUsed, out bool completed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Convert(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex, int32 byteCount, bool flush, [out] int32&amp; charsUsed, [out] int32&amp; bytesUsed, [out] bool&amp; completed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.Convert(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Convert (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer, byteCount As Integer, flush As Boolean, ByRef charsUsed As Integer, ByRef bytesUsed As Integer, ByRef completed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Convert(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, bool flush, [Runtime::InteropServices::Out] int % charsUsed, [Runtime::InteropServices::Out] int % bytesUsed, [Runtime::InteropServices::Out] bool % completed);" />
      <MemberSignature Language="F#" Value="abstract member Convert : char[] * int * int * byte[] * int * int * bool * int * int * bool -&gt; unit&#xA;override this.Convert : char[] * int * int * byte[] * int * int * bool * int * int * bool -&gt; unit" Usage="encoder.Convert (chars, charIndex, charCount, bytes, byteIndex, byteCount, flush, charsUsed, bytesUsed, completed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytes" Type="System.Byte[]" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteIndex" Type="System.Int32" Index="4" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="5" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="flush" Type="System.Boolean" Index="6" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charsUsed" Type="System.Int32" RefType="out" Index="7" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytesUsed" Type="System.Int32" RefType="out" Index="8" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="completed" Type="System.Boolean" RefType="out" Index="9" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="3fd63-179">変換する文字の配列。</span><span class="sxs-lookup"><span data-stu-id="3fd63-179">An array of characters to convert.</span></span></param>
        <param name="charIndex"><span data-ttu-id="3fd63-180">変換する <paramref name="chars" /> の最初の要素。</span><span class="sxs-lookup"><span data-stu-id="3fd63-180">The first element of <paramref name="chars" /> to convert.</span></span></param>
        <param name="charCount"><span data-ttu-id="3fd63-181">変換する <paramref name="chars" /> の要素の数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-181">The number of elements of <paramref name="chars" /> to convert.</span></span></param>
        <param name="bytes"><span data-ttu-id="3fd63-182">変換後のバイトを格納する配列。</span><span class="sxs-lookup"><span data-stu-id="3fd63-182">An array where the converted bytes are stored.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="3fd63-183">データを格納する <paramref name="bytes" /> の最初の要素。</span><span class="sxs-lookup"><span data-stu-id="3fd63-183">The first element of <paramref name="bytes" /> in which data is stored.</span></span></param>
        <param name="byteCount"><span data-ttu-id="3fd63-184">変換に使用する <paramref name="bytes" /> 内の最大要素数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-184">The maximum number of elements of <paramref name="bytes" /> to use in the conversion.</span></span></param>
        <param name="flush"><span data-ttu-id="3fd63-185">これ以上データの変換を行わないことを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fd63-185"><see langword="true" /> to indicate no further data is to be converted; otherwise, <see langword="false" />.</span></span></param>
        <param name="charsUsed"><span data-ttu-id="3fd63-186">このメソッドから制御が戻るときに、<paramref name="chars" /> で変換に使用された文字数を格納します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-186">When this method returns, contains the number of characters from <paramref name="chars" /> that were used in the conversion.</span></span> <span data-ttu-id="3fd63-187">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-187">This parameter is passed uninitialized.</span></span></param>
        <param name="bytesUsed"><span data-ttu-id="3fd63-188">このメソッドから制御が戻るときに、変換の結果生成されたバイト数を格納します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-188">When this method returns, contains the number of bytes that were produced by the conversion.</span></span> <span data-ttu-id="3fd63-189">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-189">This parameter is passed uninitialized.</span></span></param>
        <param name="completed"><span data-ttu-id="3fd63-190">このメソッドから制御が戻るときに、<paramref name="charCount" /> で指定したすべての文字が変換された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fd63-190">When this method returns, contains <see langword="true" /> if all the characters specified by <paramref name="charCount" /> were converted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3fd63-191">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-191">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="3fd63-192">Unicode 文字の配列をエンコード済みバイト シーケンスに変換し、その結果をバイト配列に格納します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-192">Converts an array of Unicode characters to an encoded byte sequence and stores the result in an array of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3fd63-193"><xref:System.Text.Encoder> オブジェクトは <xref:System.Text.Encoder.Convert%2A>の呼び出しの間に状態を保存することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="3fd63-193">Remember that the <xref:System.Text.Encoder> object saves state between calls to <xref:System.Text.Encoder.Convert%2A>.</span></span> <span data-ttu-id="3fd63-194">データストリームを使用してアプリケーションを実行する場合は、`flush` パラメーターを `true` に設定して、状態情報がフラッシュされるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-194">When the application is done with a stream of data, it should set the `flush` parameter to `true` to make sure that the state information is flushed.</span></span> <span data-ttu-id="3fd63-195">この設定では、エンコーダーはデータブロックの末尾の無効なバイトを無視し、内部バッファーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="3fd63-195">With this setting, the encoder ignores invalid bytes at the end of the data block and clears the internal buffer.</span></span> <span data-ttu-id="3fd63-196">サロゲートペアの上位サロゲートなど、論理ユニットの一部であるその他の処理済みデータは、現在のフォールバック設定に従って変換されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-196">Any remaining processed data that is part of a logical unit, such as the high surrogate of a surrogate pair, is converted according to the current fallback settings.</span></span>

 <span data-ttu-id="3fd63-197">`Convert` メソッドは、ファイルまたはストリームから読み取ったデータなど、任意の量の入力をエンコードするためにループで使用されるように設計されています。</span><span class="sxs-lookup"><span data-stu-id="3fd63-197">The `Convert` method is designed to be used in a loop to encode an arbitrary amount of input, such as data read from a file or stream.</span></span> <span data-ttu-id="3fd63-198">エンコーディング操作の出力は、固定サイズのバッファーに格納されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-198">It stores the output of the encoding operation in a fixed-size buffer.</span></span> <span data-ttu-id="3fd63-199">出力バッファーのサイズが十分でない場合、<xref:System.Text.Encoder.GetBytes%2A> は例外をスローしますが、<xref:System.Text.Encoder.Convert%2A> は可能な限り多くの領域を使用し、書き込まれた文字の読み取りとバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-199"><xref:System.Text.Encoder.GetBytes%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Encoder.Convert%2A> will fill as much space as possible and return the chars read and bytes written.</span></span> <span data-ttu-id="3fd63-200">コメントの詳細については、<xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> に関する記事も参照してください。</span><span class="sxs-lookup"><span data-stu-id="3fd63-200">Also see the <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> article for more comments.</span></span>

 <span data-ttu-id="3fd63-201">`completed` の出力パラメーターは、入力バッファー内のすべてのデータが変換され、出力バッファーに格納されたかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-201">The `completed` output parameter indicates whether all the data in the input buffer was converted and stored in the output buffer.</span></span> <span data-ttu-id="3fd63-202">このパラメーターは、`byteCount` パラメーターで指定されたバイト数を超えずに `charCount` パラメーターで指定された文字数を変換できない場合に `false` に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-202">This parameter is set to `false` if the number of characters specified by the `charCount` parameter cannot be converted without exceeding the number of bytes specified by the `byteCount` parameter.</span></span> <span data-ttu-id="3fd63-203">このような状況では、アプリケーションは出力バッファーの内容を使用するか、新しい出力バッファーを提供し、`charsUsed` パラメーターで指定された文字数だけ `chars` パラメーターをインクリメントしてから、`Convert` メソッドを再度呼び出して残りの入力を処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-203">In that situation, the application should use the contents of the output buffer or provide a new output buffer, increment the `chars` parameter by the number of characters specified by the `charsUsed` parameter, then call the `Convert` method again to process the remaining input.</span></span>

 <span data-ttu-id="3fd63-204">`charsUsed` パラメーターと `charCount` パラメーターが等しい場合でも、`completed` パラメーターを `false`に設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-204">The `completed` parameter can also be set to `false`, even though the `charsUsed` and `charCount` parameters are equal.</span></span> <span data-ttu-id="3fd63-205">この状況は、`chars` バッファーに格納されていない <xref:System.Text.Encoder> オブジェクトにデータが残っている場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-205">This situation occurs if there is still data in the <xref:System.Text.Encoder> object that has not been stored in the `chars` buffer.</span></span>



## Examples
 <span data-ttu-id="3fd63-206">次の例では、<xref:System.Text.Encoder.Convert%2A> メソッドを使用して UTF-16 文字のファイルを UTF-8 に変換し、<xref:System.Text.Decoder.Convert%2A> メソッドを使用して utf-8 文字を UTF-16 文字に戻します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-206">The following example uses the <xref:System.Text.Encoder.Convert%2A> method to convert a file of UTF-16 characters to UTF-8, then uses the <xref:System.Text.Decoder.Convert%2A> method to convert the UTF-8 characters back to UTF-16 characters.</span></span>

 [!code-csharp[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/cs/edCvt.cs#1)]
 [!code-vb[sys.txt.EncoderDecoder.convert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.EncoderDecoder.convert/vb/edCvt.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3fd63-207"><paramref name="chars" /> または <paramref name="bytes" /> が <see langword="null" /> (<see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-207"><paramref name="chars" /> or <paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3fd63-208"><paramref name="charIndex" />、 <paramref name="charCount" />、 <paramref name="byteIndex" />、または <paramref name="byteCount" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-208"><paramref name="charIndex" />, <paramref name="charCount" />, <paramref name="byteIndex" />, or <paramref name="byteCount" /> is less than zero.</span></span>

<span data-ttu-id="3fd63-209">- または -</span><span class="sxs-lookup"><span data-stu-id="3fd63-209">-or-</span></span>

<span data-ttu-id="3fd63-210"><paramref name="chars" /> - <paramref name="charIndex" /> の長さは <paramref name="charCount" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-210">The length of <paramref name="chars" /> - <paramref name="charIndex" /> is less than <paramref name="charCount" />.</span></span>

<span data-ttu-id="3fd63-211">- または -</span><span class="sxs-lookup"><span data-stu-id="3fd63-211">-or-</span></span>

<span data-ttu-id="3fd63-212"><paramref name="bytes" /> - <paramref name="byteIndex" /> の長さは <paramref name="byteCount" /> 未満です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-212">The length of <paramref name="bytes" /> - <paramref name="byteIndex" /> is less than <paramref name="byteCount" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3fd63-213">出力バッファーが小さすぎて、変換した入力を格納できません。</span><span class="sxs-lookup"><span data-stu-id="3fd63-213">The output buffer is too small to contain any of the converted input.</span></span> <span data-ttu-id="3fd63-214">出力バッファーは、<see cref="Overload:System.Text.Encoder.GetByteCount" /> メソッドで示されるサイズ以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-214">The output buffer should be greater than or equal to the size indicated by the <see cref="Overload:System.Text.Encoder.GetByteCount" /> method.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="3fd63-215">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="3fd63-215">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span>

<span data-ttu-id="3fd63-216">および</span><span class="sxs-lookup"><span data-stu-id="3fd63-216">-and-</span></span>

 <span data-ttu-id="3fd63-217"><see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-217"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Fallback">
      <MemberSignature Language="C#" Value="public System.Text.EncoderFallback Fallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.EncoderFallback Fallback" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoder.Fallback" />
      <MemberSignature Language="VB.NET" Value="Public Property Fallback As EncoderFallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::EncoderFallback ^ Fallback { System::Text::EncoderFallback ^ get(); void set(System::Text::EncoderFallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Fallback : System.Text.EncoderFallback with get, set" Usage="System.Text.Encoder.Fallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fd63-218">現在の <see cref="T:System.Text.EncoderFallback" /> オブジェクトの <see cref="T:System.Text.Encoder" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-218">Gets or sets a <see cref="T:System.Text.EncoderFallback" /> object for the current <see cref="T:System.Text.Encoder" /> object.</span></span></summary>
        <value><span data-ttu-id="3fd63-219"><see cref="T:System.Text.EncoderFallback" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3fd63-219">A <see cref="T:System.Text.EncoderFallback" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3fd63-220"><xref:System.Text.EncoderFallback> オブジェクトは、文字をエンコード済みバイトシーケンスに変換できない場合に呼び出されるエラーハンドラーを表します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-220">The <xref:System.Text.EncoderFallback> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3fd63-221">設定操作の値が <see langword="null" /> (<see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-221">The value in a set operation is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3fd63-222">現在の <see cref="T:System.Text.EncoderFallbackBuffer" /> オブジェクトにまだエンコードされていないデータが含まれるため、設定操作に新しい値を代入できません。</span><span class="sxs-lookup"><span data-stu-id="3fd63-222">A new value cannot be assigned in a set operation because the current <see cref="T:System.Text.EncoderFallbackBuffer" /> object contains data that has not been encoded yet.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="3fd63-223">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="3fd63-223">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span>

<span data-ttu-id="3fd63-224">および</span><span class="sxs-lookup"><span data-stu-id="3fd63-224">-and-</span></span>

 <span data-ttu-id="3fd63-225"><see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-225"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.FallbackBuffer" />
      </Docs>
    </Member>
    <Member MemberName="FallbackBuffer">
      <MemberSignature Language="C#" Value="public System.Text.EncoderFallbackBuffer FallbackBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.EncoderFallbackBuffer FallbackBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Text.Encoder.FallbackBuffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FallbackBuffer As EncoderFallbackBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::EncoderFallbackBuffer ^ FallbackBuffer { System::Text::EncoderFallbackBuffer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FallbackBuffer : System.Text.EncoderFallbackBuffer" Usage="System.Text.Encoder.FallbackBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.EncoderFallbackBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3fd63-226">現在の <see cref="T:System.Text.EncoderFallbackBuffer" /> オブジェクトに関連付けられている <see cref="T:System.Text.Encoder" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-226">Gets the <see cref="T:System.Text.EncoderFallbackBuffer" /> object associated with the current <see cref="T:System.Text.Encoder" /> object.</span></span></summary>
        <value><span data-ttu-id="3fd63-227"><see cref="T:System.Text.EncoderFallbackBuffer" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="3fd63-227">A <see cref="T:System.Text.EncoderFallbackBuffer" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3fd63-228"><xref:System.Text.Encoder.FallbackBuffer%2A> オブジェクトは、<xref:System.Text.EncoderFallback> オブジェクトによって使用されるデータを表します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-228">The <xref:System.Text.Encoder.FallbackBuffer%2A> object represents data used by the <xref:System.Text.EncoderFallback> object.</span></span> <span data-ttu-id="3fd63-229"><xref:System.Text.EncoderFallback> オブジェクトは、文字をエンコード済みバイトシーケンスに変換できない場合に呼び出されるエラーハンドラーを表します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-229">The <xref:System.Text.EncoderFallback> object represents an error handler that is invoked when a character cannot be converted into an encoded byte sequence.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.EncoderFallback" />
        <altmember cref="P:System.Text.Encoder.Fallback" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3fd63-230">派生クラスでオーバーライドされた場合、文字のセットをエンコードすることによって生成されるバイト数を計算します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-230">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3fd63-231">このメソッドは、エンコーダーの状態には影響しません。</span><span class="sxs-lookup"><span data-stu-id="3fd63-231">This method does not affect the state of the encoder.</span></span>

 <span data-ttu-id="3fd63-232">結果のバイトを格納するために <xref:System.Text.Encoder.GetBytes%2A> が必要とする配列の正確なサイズを計算するには、アプリケーションで <xref:System.Text.Encoder.GetByteCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-232">To calculate the exact array size that <xref:System.Text.Encoder.GetBytes%2A> requires to store the resulting bytes, the application should use <xref:System.Text.Encoder.GetByteCount%2A>.</span></span>

 <span data-ttu-id="3fd63-233">`flush` を `false`に設定して `GetBytes` を呼び出すと、エンコーダーはデータブロックの末尾にある末尾の文字を内部バッファーに格納し、次のエンコーディング操作でそれを使用します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-233">If `GetBytes` is called with `flush` set to `false`, the encoder stores trailing characters at the end of the data block in an internal buffer and uses them in the next encoding operation.</span></span> <span data-ttu-id="3fd63-234">アプリケーションは、同じブロックで `GetBytes` を呼び出す直前に、データのブロックで `GetByteCount` を呼び出す必要があります。これにより、前のブロックの末尾の文字が計算に含まれるようになります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-234">The application should call `GetByteCount` on a block of data immediately before calling `GetBytes` on the same block, so that any trailing characters from the previous block are included in the calculation.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (ReadOnlySpan&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetByteCount(System.ReadOnlySpan{System.Char},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetByteCount (chars As ReadOnlySpan(Of Char), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(ReadOnlySpan&lt;char&gt; chars, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : ReadOnlySpan&lt;char&gt; * bool -&gt; int&#xA;override this.GetByteCount : ReadOnlySpan&lt;char&gt; * bool -&gt; int" Usage="encoder.GetByteCount (chars, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="3fd63-235">エンコードする文字スパン。</span><span class="sxs-lookup"><span data-stu-id="3fd63-235">A character span to encode.</span></span></param>
        <param name="flush"><span data-ttu-id="3fd63-236">計算後にエンコーダーの内部状態をクリアするようシミュレートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fd63-236"><see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3fd63-237">派生クラスでオーバーライドされた場合、'chars' スパンの文字セットをエンコードすることによって生成されるバイト数を計算します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-237">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters in the 'chars' span.</span></span> <span data-ttu-id="3fd63-238">パラメーターでは、計算後にエンコーダーの内部状態をクリアするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-238">A parameter indicates whether to clear the internal state of the encoder after the calculation.</span></span></summary>
        <returns><span data-ttu-id="3fd63-239">指定した文字、および内部バッファー内の文字をエンコードすることによって生成されるバイト数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-239">The number of bytes produced by encoding the specified characters and any characters in the internal buffer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public virtual int GetByteCount (char* chars, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char* chars, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetByteCount(System.Char*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetByteCount(char* chars, int count, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : nativeptr&lt;char&gt; * int * bool -&gt; int&#xA;override this.GetByteCount : nativeptr&lt;char&gt; * int * bool -&gt; int" Usage="encoder.GetByteCount (chars, count, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="3fd63-240">エンコードする最初の文字へのポインター。</span><span class="sxs-lookup"><span data-stu-id="3fd63-240">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="3fd63-241">エンコードする文字数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-241">The number of characters to encode.</span></span></param>
        <param name="flush"><span data-ttu-id="3fd63-242">計算後にエンコーダーの内部状態をクリアするようシミュレートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fd63-242"><see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3fd63-243">派生クラスでオーバーライドされた場合、指定した文字ポインターから始まる文字のセットをエンコードすることによって生成されるバイト数を計算します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-243">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span> <span data-ttu-id="3fd63-244">パラメーターでは、計算後にエンコーダーの内部状態をクリアするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-244">A parameter indicates whether to clear the internal state of the encoder after the calculation.</span></span></summary>
        <returns><span data-ttu-id="3fd63-245">指定した文字、および内部バッファー内の文字をエンコードすることによって生成されるバイト数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-245">The number of bytes produced by encoding the specified characters and any characters in the internal buffer.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3fd63-246"><paramref name="chars" /> が <see langword="null" /> (Visual Basic .NET の場合は <see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-246"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" /> in Visual Basic .NET).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3fd63-247"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-247"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="3fd63-248">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="3fd63-248">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span>

<span data-ttu-id="3fd63-249">および</span><span class="sxs-lookup"><span data-stu-id="3fd63-249">-and-</span></span>

 <span data-ttu-id="3fd63-250"><see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-250"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Encoder.Reset" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public abstract int GetByteCount (char[] chars, int index, int count, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetByteCount(System.Char[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByteCount (chars As Char(), index As Integer, count As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetByteCount : char[] * int * int * bool -&gt; int" Usage="encoder.GetByteCount (chars, index, count, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="3fd63-251">エンコード対象の文字のセットを格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="3fd63-251">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="3fd63-252">エンコードする最初の文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="3fd63-252">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="3fd63-253">エンコードする文字数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-253">The number of characters to encode.</span></span></param>
        <param name="flush"><span data-ttu-id="3fd63-254">計算後にエンコーダーの内部状態をクリアするようシミュレートする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fd63-254"><see langword="true" /> to simulate clearing the internal state of the encoder after the calculation; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3fd63-255">派生クラスでオーバーライドされた場合、指定した文字配列に格納されている文字のセットをエンコードすることによって生成されるバイト数を計算します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-255">When overridden in a derived class, calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span> <span data-ttu-id="3fd63-256">パラメーターでは、計算後にエンコーダーの内部状態をクリアするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-256">A parameter indicates whether to clear the internal state of the encoder after the calculation.</span></span></summary>
        <returns><span data-ttu-id="3fd63-257">指定した文字、および内部バッファー内の文字をエンコードすることによって生成されるバイト数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-257">The number of bytes produced by encoding the specified characters and any characters in the internal buffer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples

<span data-ttu-id="3fd63-258">次のコード例は、<xref:System.Text.Encoder.GetByteCount%2A> メソッドを使用して、Unicode <xref:System.Text.Encoder>を使用して文字の配列をエンコードするために必要なバイト数を返す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3fd63-258">The following code example demonstrates how to use the <xref:System.Text.Encoder.GetByteCount%2A> method to return the number of bytes required to encode an array of characters using a Unicode <xref:System.Text.Encoder>.</span></span>

[!code-cpp[System.Text.Encoder.GetByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoder.GetByteCount Example/CPP/getbytecount-char[]-int32-int32.cpp#1)]
[!code-csharp[System.Text.Encoder.GetByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoder.GetByteCount Example/CS/getbytecount-char[]-int32-int32.cs#1)]
[!code-vb[System.Text.Encoder.GetByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoder.GetByteCount Example/VB/getbytecount-char[]-int32-int32.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3fd63-259"><paramref name="chars" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-259"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3fd63-260"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-260"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>

<span data-ttu-id="3fd63-261">- または -</span><span class="sxs-lookup"><span data-stu-id="3fd63-261">-or-</span></span>

 <span data-ttu-id="3fd63-262"><paramref name="index" /> および <paramref name="count" /> は <paramref name="chars" /> において有効な範囲を表していません。</span><span class="sxs-lookup"><span data-stu-id="3fd63-262"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="3fd63-263">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="3fd63-263">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span>

<span data-ttu-id="3fd63-264">および</span><span class="sxs-lookup"><span data-stu-id="3fd63-264">-and-</span></span>

 <span data-ttu-id="3fd63-265"><see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-265"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)" />
        <altmember cref="M:System.Text.Encoder.Reset" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3fd63-266">派生クラスでオーバーライドされた場合、文字のセットをバイト シーケンスにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3fd63-266">When overridden in a derived class, encodes a set of characters into a sequence of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="3fd63-267"><xref:System.Text.Encoder> オブジェクトは <xref:System.Text.Encoder.GetBytes%2A>の呼び出しの間に状態を保存することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="3fd63-267">Remember that the <xref:System.Text.Encoder> object saves state between calls to <xref:System.Text.Encoder.GetBytes%2A>.</span></span> <span data-ttu-id="3fd63-268">データのストリームを使用してアプリケーションを実行する場合は、`GetBytes` への最後の呼び出しで `flush` パラメーターを `true` に設定して、状態情報がフラッシュされ、エンコードされたバイトが正しく終了していることを確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-268">When the application is done with a stream of data, it should set the `flush` parameter to `true` in the last call to `GetBytes` to make sure that the state information is flushed and that the encoded bytes are properly terminated.</span></span> <span data-ttu-id="3fd63-269">この設定では、エンコーダーは、一致しないサロゲートや不完全な結合シーケンスなど、データブロックの末尾の無効なバイトを無視し、内部バッファーをクリアします。</span><span class="sxs-lookup"><span data-stu-id="3fd63-269">With this setting, the encoder ignores invalid bytes at the end of the data block, such as unmatched surrogates or incomplete combining sequences, and clears the internal buffer.</span></span>

<span data-ttu-id="3fd63-270">結果の文字を格納するために `GetBytes` が必要とする正確なバッファーサイズを計算するには、アプリケーションで <xref:System.Text.Encoder.GetByteCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-270">To calculate the exact buffer size that `GetBytes` requires to store the resulting characters, the application should use <xref:System.Text.Encoder.GetByteCount%2A>.</span></span>

<span data-ttu-id="3fd63-271">`flush` を `false`に設定して `GetBytes` が呼び出された場合、エンコーダーはデータブロックの末尾にあるバイトを内部バッファーに格納し、次のエンコーディング操作でそれを使用します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-271">If `GetBytes` is called with `flush` set to `false`, the encoder stores trailing bytes at the end of the data block in an internal buffer and uses them in the next encoding operation.</span></span> <span data-ttu-id="3fd63-272">アプリケーションは、同じブロックで `GetBytes` を呼び出す直前に、データのブロックで `GetByteCount` を呼び出す必要があります。これにより、前のブロックの末尾の文字が計算に含まれるようになります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-272">The application should call `GetByteCount` on a block of data immediately before calling `GetBytes` on the same block, so that any trailing characters from the previous block are included in the calculation.</span></span>

<span data-ttu-id="3fd63-273">アプリケーションが入力ストリームの多くのセグメントを変換する場合は、<xref:System.Text.Encoder.Convert%2A> メソッドの使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="3fd63-273">If your application is to convert many segments of an input stream, consider using the <xref:System.Text.Encoder.Convert%2A> method.</span></span> <span data-ttu-id="3fd63-274">出力バッファーのサイズが十分でない場合、<xref:System.Text.Encoder.GetBytes%2A> は例外をスローしますが、<xref:System.Text.Encoder.Convert%2A> は可能な限り多くの領域を使用し、書き込まれた文字の読み取りとバイト数を返します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-274"><xref:System.Text.Encoder.GetBytes%2A> will throw an exception if the output buffer isn't large enough, but <xref:System.Text.Encoder.Convert%2A> will fill as much space as possible and return the chars read and bytes written.</span></span> <span data-ttu-id="3fd63-275">コメントの詳細については、<xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> のトピックも参照してください。</span><span class="sxs-lookup"><span data-stu-id="3fd63-275">Also see the <xref:System.Text.Encoding.GetBytes%2A?displayProperty=nameWithType> topic for more comments.</span></span>

 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.Encoder.Reset" />
        <altmember cref="Overload:System.Text.Encoder.GetByteCount" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte), flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; * bool -&gt; int&#xA;override this.GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; * bool -&gt; int" Usage="encoder.GetBytes (chars, bytes, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="3fd63-276">エンコードする文字スパン。</span><span class="sxs-lookup"><span data-stu-id="3fd63-276">A character span to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="3fd63-277">結果のバイト シーケンスを書き込むバイト スパン。</span><span class="sxs-lookup"><span data-stu-id="3fd63-277">A byte span to write the resulting sequence of bytes to.</span></span></param>
        <param name="flush"><span data-ttu-id="3fd63-278">変換後にエンコーダーの内部状態をクリアする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fd63-278"><see langword="true" /> to clear the internal state of the encoder after the conversion; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3fd63-279">派生クラスでオーバーライドされた場合、入力文字スパン内の文字セットと内部バッファー内のすべての文字を、入力バイト スパンに格納されるバイト シーケンスにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3fd63-279">When overridden in a derived class, encodes a set of characters in the input characters span and any characters in the internal buffer into a sequence of bytes that are stored in the input byte span.</span></span> <span data-ttu-id="3fd63-280">パラメーターでは、変換後にエンコーダーの内部状態をクリアするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-280">A parameter indicates whether to clear the internal state of the encoder after the conversion.</span></span></summary>
        <returns><span data-ttu-id="3fd63-281"><paramref name="bytes" /> パラメーターによって示される位置に書き込む実際のバイト数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-281">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public virtual int GetBytes (char* chars, int charCount, byte* bytes, int byteCount, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int * bool -&gt; int&#xA;override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int * bool -&gt; int" Usage="encoder.GetBytes (chars, charCount, bytes, byteCount, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="charCount" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="bytes" Type="System.Byte*" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="byteCount" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="flush" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="3fd63-282">エンコードする最初の文字へのポインター。</span><span class="sxs-lookup"><span data-stu-id="3fd63-282">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="3fd63-283">エンコードする文字数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-283">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="3fd63-284">結果のバイト シーケンスの書き込みを開始する位置へのポインター。</span><span class="sxs-lookup"><span data-stu-id="3fd63-284">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="3fd63-285">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-285">The maximum number of bytes to write.</span></span></param>
        <param name="flush"><span data-ttu-id="3fd63-286">変換後にエンコーダーの内部状態をクリアする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fd63-286"><see langword="true" /> to clear the internal state of the encoder after the conversion; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3fd63-287">派生クラスでオーバーライドされた場合、指定した文字ポインターで始まる文字のセット、および内部バッファー内の文字を、指定したバイト ポインターを開始位置として格納されるバイト シーケンスにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3fd63-287">When overridden in a derived class, encodes a set of characters starting at the specified character pointer and any characters in the internal buffer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span> <span data-ttu-id="3fd63-288">パラメーターでは、変換後にエンコーダーの内部状態をクリアするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-288">A parameter indicates whether to clear the internal state of the encoder after the conversion.</span></span></summary>
        <returns><span data-ttu-id="3fd63-289"><paramref name="bytes" /> パラメーターによって示される位置に書き込む実際のバイト数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-289">The actual number of bytes written at the location indicated by the <paramref name="bytes" /> parameter.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3fd63-290"><paramref name="chars" /> が <see langword="null" /> (<see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-290"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>

<span data-ttu-id="3fd63-291">- または -</span><span class="sxs-lookup"><span data-stu-id="3fd63-291">-or-</span></span>

 <span data-ttu-id="3fd63-292"><paramref name="bytes" /> が <see langword="null" /> (<see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-292"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3fd63-293"><paramref name="charCount" /> または <paramref name="byteCount" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-293"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3fd63-294"><paramref name="byteCount" /> が結果のバイト数より少なくなっています。</span><span class="sxs-lookup"><span data-stu-id="3fd63-294"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="3fd63-295">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="3fd63-295">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span>

<span data-ttu-id="3fd63-296">および</span><span class="sxs-lookup"><span data-stu-id="3fd63-296">-and-</span></span>

 <span data-ttu-id="3fd63-297"><see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-297"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public abstract int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex, bool flush);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex, bool flush) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer, flush As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, bool flush);" />
      <MemberSignature Language="F#" Value="abstract member GetBytes : char[] * int * int * byte[] * int * bool -&gt; int" Usage="encoder.GetBytes (chars, charIndex, charCount, bytes, byteIndex, flush)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="flush" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="3fd63-298">エンコード対象の文字のセットを格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="3fd63-298">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="3fd63-299">エンコードする最初の文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="3fd63-299">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="3fd63-300">エンコードする文字数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-300">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="3fd63-301">結果のバイト シーケンスを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="3fd63-301">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="3fd63-302">結果のバイト シーケンスを書き込む開始位置のインデックス。</span><span class="sxs-lookup"><span data-stu-id="3fd63-302">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="flush"><span data-ttu-id="3fd63-303">変換後にエンコーダーの内部状態をクリアする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3fd63-303"><see langword="true" /> to clear the internal state of the encoder after the conversion; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="3fd63-304">派生クラスでオーバーライドされた場合、指定した文字配列に格納されている文字のセット、および内部バッファー内の文字を、指定したバイト配列にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="3fd63-304">When overridden in a derived class, encodes a set of characters from the specified character array and any characters in the internal buffer into the specified byte array.</span></span> <span data-ttu-id="3fd63-305">パラメーターでは、変換後にエンコーダーの内部状態をクリアするかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-305">A parameter indicates whether to clear the internal state of the encoder after the conversion.</span></span></summary>
        <returns><span data-ttu-id="3fd63-306"><paramref name="bytes" /> に書き込まれた実際のバイト数。</span><span class="sxs-lookup"><span data-stu-id="3fd63-306">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 <span data-ttu-id="3fd63-307">次の例は、文字配列から要素の範囲をエンコードし、バイト配列の要素範囲にエンコードされたバイトを格納する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="3fd63-307">The following example demonstrates how to encode a range of elements from a character array and store the encoded bytes in a range of elements in a byte array.</span></span> <span data-ttu-id="3fd63-308"><xref:System.Text.Encoder.GetByteCount%2A> メソッドは、<xref:System.Text.Encoder.GetBytes%2A>が必要とする配列のサイズを決定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-308">The <xref:System.Text.Encoder.GetByteCount%2A> method is used to determine the size of the array required by <xref:System.Text.Encoder.GetBytes%2A>.</span></span>

 [!code-cpp[System.Text.Encoder.GetBytes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.Encoder.GetBytes Example/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.Encoder.GetBytes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.Encoder.GetBytes Example/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.Encoder.GetBytes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.Encoder.GetBytes Example/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3fd63-309"><paramref name="chars" /> が <see langword="null" /> (<see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-309"><paramref name="chars" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span>

<span data-ttu-id="3fd63-310">- または -</span><span class="sxs-lookup"><span data-stu-id="3fd63-310">-or-</span></span>

 <span data-ttu-id="3fd63-311"><paramref name="bytes" /> が <see langword="null" /> (<see langword="Nothing" />) です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-311"><paramref name="bytes" /> is <see langword="null" /> (<see langword="Nothing" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="3fd63-312"><paramref name="charIndex" />、<paramref name="charCount" />、または <paramref name="byteIndex" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="3fd63-312"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>

<span data-ttu-id="3fd63-313">- または -</span><span class="sxs-lookup"><span data-stu-id="3fd63-313">-or-</span></span>

 <span data-ttu-id="3fd63-314"><paramref name="charIndex" /> および <paramref name="charCount" /> は <paramref name="chars" />において有効な範囲を表していません。</span><span class="sxs-lookup"><span data-stu-id="3fd63-314"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>

<span data-ttu-id="3fd63-315">- または -</span><span class="sxs-lookup"><span data-stu-id="3fd63-315">-or-</span></span>

 <span data-ttu-id="3fd63-316"><paramref name="byteIndex" /> が <paramref name="bytes" /> の有効なインデックスではありません。</span><span class="sxs-lookup"><span data-stu-id="3fd63-316"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3fd63-317"><paramref name="bytes" /> には、<paramref name="byteIndex" /> から配列の末尾までに十分なサイズがなく、結果のバイトを格納できません。</span><span class="sxs-lookup"><span data-stu-id="3fd63-317"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="3fd63-318">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="3fd63-318">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span>

<span data-ttu-id="3fd63-319">および</span><span class="sxs-lookup"><span data-stu-id="3fd63-319">-and-</span></span>

 <span data-ttu-id="3fd63-320"><see cref="P:System.Text.Encoder.Fallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="3fd63-320"><see cref="P:System.Text.Encoder.Fallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Encoder.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="encoder.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fd63-321">派生クラスでオーバーライドされた場合、エンコーダーを初期状態に戻します。</span><span class="sxs-lookup"><span data-stu-id="3fd63-321">When overridden in a derived class, sets the encoder back to its initial state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="3fd63-322">このメソッドは、<xref:System.Text.Encoder> オブジェクトの内部状態をクリアします。</span><span class="sxs-lookup"><span data-stu-id="3fd63-322">This method clears the internal state of the <xref:System.Text.Encoder> object.</span></span> <span data-ttu-id="3fd63-323">メソッドは、前のデータブロックの末尾 (一致していない上位サロゲートなど) の末尾の文字を含め、<xref:System.Text.Encoder.GetBytes%2A> または <xref:System.Text.Decoder.Convert%2A>への前回の呼び出しから保持されていた状態情報をクリアします。</span><span class="sxs-lookup"><span data-stu-id="3fd63-323">The method clears any state information preserved from a previous call to <xref:System.Text.Encoder.GetBytes%2A> or <xref:System.Text.Decoder.Convert%2A>, including trailing characters at the end of the previous data block, such as an unmatched high surrogate.</span></span>

 <span data-ttu-id="3fd63-324">アプリケーションでは、<xref:System.Text.Encoder.GetBytes%2A> または <xref:System.Text.Encoder.GetByteCount%2A>によって例外がスローされた後でも同じエンコーダーを再利用する必要がある場合、またはアプリケーションがストリームを切り替える場合に、`Reset` メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="3fd63-324">Your application should call the `Reset` method if it wants to reuse the same encoder even after an exception is thrown by <xref:System.Text.Encoder.GetBytes%2A> or <xref:System.Text.Encoder.GetByteCount%2A>, or if the application switches streams.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
