<Type Name="ASCIIEncoding" FullName="System.Text.ASCIIEncoding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9214b0865ba096aef5a179b2bff222c6804b96d5" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75053205" /></Metadata><TypeSignature Language="C#" Value="public class ASCIIEncoding : System.Text.Encoding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ASCIIEncoding extends System.Text.Encoding" />
  <TypeSignature Language="DocId" Value="T:System.Text.ASCIIEncoding" />
  <TypeSignature Language="VB.NET" Value="Public Class ASCIIEncoding&#xA;Inherits Encoding" />
  <TypeSignature Language="C++ CLI" Value="public ref class ASCIIEncoding : System::Text::Encoding" />
  <TypeSignature Language="F#" Value="type ASCIIEncoding = class&#xA;    inherit Encoding" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Text.Encoding</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e5513-101">Unicode 文字の ASCII 文字エンコードを表します。</span><span class="sxs-lookup"><span data-stu-id="e5513-101">Represents an ASCII character encoding of Unicode characters.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-102">エンコーディングは、Unicode 文字のセットをバイト シーケンスに変換するプロセスです。</span><span class="sxs-lookup"><span data-stu-id="e5513-102">Encoding is the process of transforming a set of Unicode characters into a sequence of bytes.</span></span> <span data-ttu-id="e5513-103">デコードとは、エンコードされたバイトシーケンスを Unicode 文字のセットに変換するプロセスです。</span><span class="sxs-lookup"><span data-stu-id="e5513-103">Decoding is the process of transforming a sequence of encoded bytes into a set of Unicode characters.</span></span>  
  
 <span data-ttu-id="e5513-104"><xref:System.Text.ASCIIEncoding> は、Windows コードページ20127に対応しています。</span><span class="sxs-lookup"><span data-stu-id="e5513-104"><xref:System.Text.ASCIIEncoding> corresponds to the Windows code page 20127.</span></span> <span data-ttu-id="e5513-105">ASCII は7ビットエンコードであるため、ASCII 文字は、U + 0000 から U + 007F までの 128 Unicode 文字に制限されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-105">Because ASCII is a 7-bit encoding, ASCII characters are limited to the lowest 128 Unicode characters, from U+0000 to U+007F.</span></span> <span data-ttu-id="e5513-106"><xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> プロパティまたは <xref:System.Text.ASCIIEncoding.%23ctor%2A> コンストラクターによって返される既定のエンコーダーを使用する場合、エンコード操作が実行される前に、その範囲外の文字が疑問符 (?) に置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="e5513-106">If you use the default encoder returned by the <xref:System.Text.Encoding.ASCII%2A?displayProperty=nameWithType> property or the <xref:System.Text.ASCIIEncoding.%23ctor%2A> constructor, characters outside that range are replaced with a question mark (?) before the encoding operation is performed.</span></span>  <span data-ttu-id="e5513-107"><xref:System.Text.ASCIIEncoding> クラスでサポートされる文字セットは限られているため、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、および <xref:System.Text.UTF32Encoding> クラスは、グローバル化されたアプリケーションに適しています。</span><span class="sxs-lookup"><span data-stu-id="e5513-107">Because the <xref:System.Text.ASCIIEncoding> class supports only a limited character set, the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, and <xref:System.Text.UTF32Encoding> classes are better suited for globalized applications.</span></span> <span data-ttu-id="e5513-108"><xref:System.Text.ASCIIEncoding>を使用するかどうかを決定する際には、次の点に注意してください。</span><span class="sxs-lookup"><span data-stu-id="e5513-108">The following considerations can help you to decide whether to use <xref:System.Text.ASCIIEncoding>:</span></span>  
  
-   <span data-ttu-id="e5513-109">一部のプロトコルでは、ASCII または ASCII のサブセットが必要です。</span><span class="sxs-lookup"><span data-stu-id="e5513-109">Some protocols require ASCII or a subset of ASCII.</span></span> <span data-ttu-id="e5513-110">このような場合は、ASCII エンコーディングが適しています。</span><span class="sxs-lookup"><span data-stu-id="e5513-110">In these cases ASCII encoding is appropriate.</span></span>  
  
-   <span data-ttu-id="e5513-111">8ビットのエンコーディングが想定されている場合、ASCII は正しい選択ではない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-111">If an 8-bit encoding is expected, then ASCII probably isn't the correct choice.</span></span> <span data-ttu-id="e5513-112">代わりに、ASCII ではなく UTF8 の使用を検討してください。</span><span class="sxs-lookup"><span data-stu-id="e5513-112">Instead, consider using UTF8 instead of ASCII.</span></span> <span data-ttu-id="e5513-113">文字 U + 0000 ~ U + 007F の場合、結果は同じですが、すべての Unicode 文字が UTF-8 で表現できるため、データの損失を回避できます。</span><span class="sxs-lookup"><span data-stu-id="e5513-113">For the characters U+0000 through U+007F, the results are identical, but all Unicode characters are representable in UTF-8, which avoids data loss.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e5513-114"><xref:System.Text.ASCIIEncoding> では、エラー検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="e5513-114"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="e5513-115">セキュリティ上の理由から、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、または <xref:System.Text.UTF32Encoding> を使用して、エラー検出を有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-115">For security reasons, you should use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 <span data-ttu-id="e5513-116"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドは、Unicode 文字のセットをエンコードするためのバイト数を決定し、<xref:System.Text.ASCIIEncoding.GetBytes%2A> メソッドは実際のエンコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="e5513-116">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method determines how many bytes result in encoding a set of Unicode characters, and the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method performs the actual encoding.</span></span>  
  
 <span data-ttu-id="e5513-117">同様に、<xref:System.Text.ASCIIEncoding.GetCharCount%2A> メソッドは、バイトシーケンスをデコードする文字数を決定し、<xref:System.Text.ASCIIEncoding.GetChars%2A> メソッドと <xref:System.Text.ASCIIEncoding.GetString%2A> メソッドが実際のデコードを実行します。</span><span class="sxs-lookup"><span data-stu-id="e5513-117">Likewise, the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method determines how many characters result in decoding a sequence of bytes, and the <xref:System.Text.ASCIIEncoding.GetChars%2A> and <xref:System.Text.ASCIIEncoding.GetString%2A> methods perform the actual decoding.</span></span>  
  
 <span data-ttu-id="e5513-118">既定の <xref:System.Text.ASCIIEncoding> コンストラクター自体には、アプリケーションに対する適切な動作がない場合があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e5513-118">Note that the default <xref:System.Text.ASCIIEncoding> constructor by itself might not have the appropriate behavior for your application.</span></span> <span data-ttu-id="e5513-119"><xref:System.Text.Encoding.EncoderFallback%2A> または <xref:System.Text.Encoding.DecoderFallback%2A> プロパティを <xref:System.Text.EncoderExceptionFallback> または <xref:System.Text.DecoderExceptionFallback> に設定して、8番目のビットが設定されているシーケンスを防ぐことを検討してください。</span><span class="sxs-lookup"><span data-stu-id="e5513-119">You might want to consider setting the <xref:System.Text.Encoding.EncoderFallback%2A> or <xref:System.Text.Encoding.DecoderFallback%2A> property to <xref:System.Text.EncoderExceptionFallback> or <xref:System.Text.DecoderExceptionFallback> to prevent sequences with the 8th bit set.</span></span> <span data-ttu-id="e5513-120">このような場合には、カスタム動作が適していることもあります。</span><span class="sxs-lookup"><span data-stu-id="e5513-120">Custom behavior might also be appropriate for these cases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5513-121">Unicode 文字を ASCII にエンコードする方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="e5513-121">The following example demonstrates how to encode Unicode characters into ASCII.</span></span> <span data-ttu-id="e5513-122">アプリケーションで <xref:System.Text.ASCIIEncoding> を使用して ASCII の範囲外の Unicode 文字をエンコードすると、データが失われることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="e5513-122">Notice the loss of data that occurs when your application uses <xref:System.Text.ASCIIEncoding> to encode Unicode characters outside of the ASCII range.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/CPP/snippet.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/CS/snippet.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding Example/VB/snippet.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.Decoder" />
    <altmember cref="T:System.Text.Encoder" />
    <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="e5513-123">エンコーディングについて</span><span class="sxs-lookup"><span data-stu-id="e5513-123">Understanding Encodings</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ASCIIEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ASCIIEncoding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5513-124"><see cref="T:System.Text.ASCIIEncoding" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e5513-124">Initializes a new instance of the <see cref="T:System.Text.ASCIIEncoding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="e5513-125"><xref:System.Text.ASCIIEncoding> クラスは、エラーの検出を行いません。</span><span class="sxs-lookup"><span data-stu-id="e5513-125">The <xref:System.Text.ASCIIEncoding> class does not provide error detection.</span></span> <span data-ttu-id="e5513-126">セキュリティ上の理由から、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、または <xref:System.Text.UTF32Encoding> クラスを使用して、エラー検出を有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-126">For security reasons, you should use the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> class and enable error detection.</span></span>  
  
 <span data-ttu-id="e5513-127">ASCII エンコーディングの使用を選択した場合、このコンストラクターはアプリケーションに適切なフォールバック動作を提供しない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-127">If you choose to use ASCII encoding, this constructor may not provide the appropriate fallback behavior for your application.</span></span> <span data-ttu-id="e5513-128"><xref:System.Text.EncoderReplacementFallback> クラスと <xref:System.Text.DecoderReplacementFallback> クラスを使用して、U + 0000 から U + 007F の範囲外のすべての文字を疑問符 (?) に置き換えます。</span><span class="sxs-lookup"><span data-stu-id="e5513-128">It uses the <xref:System.Text.EncoderReplacementFallback> and <xref:System.Text.DecoderReplacementFallback> classes to replace every character outside the range of U+0000 through U+007F with a question mark (?).</span></span> <span data-ttu-id="e5513-129">代わりに、<xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> または <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> メソッドを呼び出して、例外フォールバックを使用するように <xref:System.Text.EncoderExceptionFallback> および <xref:System.Text.DecoderExceptionFallback> オブジェクトに渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="e5513-129">Instead, you can call the <xref:System.Text.Encoding.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> or <xref:System.Text.Encoding.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29?displayProperty=nameWithType> method and pass it <xref:System.Text.EncoderExceptionFallback> and <xref:System.Text.DecoderExceptionFallback> objects to use exception fallback.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5513-130"><xref:System.Text.ASCIIEncoding> は、U + 0000 から U + 007F までの Unicode 文字値のみをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="e5513-130"><xref:System.Text.ASCIIEncoding> supports only the Unicode character values between U+0000 and U+007F.</span></span> <span data-ttu-id="e5513-131">そのため、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、および <xref:System.Text.UTF32Encoding> は、グローバル化されたアプリケーションに適しています。</span><span class="sxs-lookup"><span data-stu-id="e5513-131">Therefore, <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, and <xref:System.Text.UTF32Encoding> are better suited for globalized applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5513-132">次の例は、新しい <xref:System.Text.ASCIIEncoding> インスタンスを作成し、エンコーディングの名前を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e5513-132">The following example demonstrates how to create a new <xref:System.Text.ASCIIEncoding> instance and display the name of the encoding.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/CPP/ctor.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/CS/ctor.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.ctor Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.ctor Example/VB/ctor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetByteCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5513-133">文字のセットをエンコードすることによって生成されるバイト数を計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-133">Calculates the number of bytes produced by encoding a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(valuetype System.ReadOnlySpan`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As ReadOnlySpan(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(ReadOnlySpan&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : ReadOnlySpan&lt;char&gt; -&gt; int" Usage="aSCIIEncoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="e5513-134">エンコードする文字のセットを格納するスパン。</span><span class="sxs-lookup"><span data-stu-id="e5513-134">The span that contains the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="e5513-135">指定された文字スパンをエンコードすることによって生成されるバイト数を計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-135">Calculates the number of bytes produced by encoding the specified character span.</span></span></summary>
        <returns><span data-ttu-id="e5513-136">指定された文字スパンをエンコードすることによって生成されるバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-136">The number of bytes produced by encoding the specified character span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-137">結果のバイトを格納するために <xref:System.Text.ASCIIEncoding.GetBytes%2A> が必要とする正確なサイズを計算するには <xref:System.Text.ASCIIEncoding.GetByteCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-137">To calculate the exact size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, use <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="e5513-138">最大サイズを計算するには、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-138">To calculate the maximum size, use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="e5513-139"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-139">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>    
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (string chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(string chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(System::String ^ chars);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : string -&gt; int" Usage="aSCIIEncoding.GetByteCount chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="e5513-140">エンコード対象の文字のセットを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="e5513-140">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <summary><span data-ttu-id="e5513-141">指定した <see cref="T:System.String" /> 内の文字をエンコードすることによって生成されるバイト数を計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-141">Calculates the number of bytes produced by encoding the characters in the specified <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="e5513-142">指定した文字をエンコードすることによって生成されるバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-142">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-143"><xref:System.Text.ASCIIEncoding.GetBytes%2A> が結果のバイトを格納するために必要な配列の正確なサイズを計算するために、アプリケーションは <xref:System.Text.ASCIIEncoding.GetByteCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-143">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="e5513-144">配列の最大サイズを計算するには、アプリケーションで <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-144">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="e5513-145"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-145">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5513-146">次の例では、<xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドを使用して、<xref:System.Text.ASCIIEncoding>を使用して文字列をエンコードするために必要なバイト数を返す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e5513-146">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method to return the number of bytes required to encode a string using <xref:System.Text.ASCIIEncoding>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/CPP/getbytecount-string.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/CS/getbytecount-string.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetByteCount2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount2 Example/VB/getbytecount-string.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5513-147"><paramref name="chars" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-147"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-148">結果のバイト数が、整数として返すことのできる最大数を超えています。</span><span class="sxs-lookup"><span data-stu-id="e5513-148">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e5513-149">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="e5513-149">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="e5513-150">および</span><span class="sxs-lookup"><span data-stu-id="e5513-150">-and-</span></span> 
 <span data-ttu-id="e5513-151"><see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-151"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="e5513-152">エンコーディングについて</span><span class="sxs-lookup"><span data-stu-id="e5513-152">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char* chars, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char* chars, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(char* chars, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : nativeptr&lt;char&gt; * int -&gt; int" Usage="aSCIIEncoding.GetByteCount (chars, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="e5513-153">エンコードする最初の文字へのポインター。</span><span class="sxs-lookup"><span data-stu-id="e5513-153">A pointer to the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="e5513-154">エンコードする文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-154">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="e5513-155">指定した文字ポインターで始まる文字のセットをエンコードすることによって生成されるバイト数を計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-155">Calculates the number of bytes produced by encoding a set of characters starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="e5513-156">指定した文字をエンコードすることによって生成されるバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-156">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-157"><xref:System.Text.ASCIIEncoding.GetBytes%2A> が結果のバイトを格納するために必要な配列の正確なサイズを計算するために、アプリケーションは <xref:System.Text.ASCIIEncoding.GetByteCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-157">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="e5513-158">配列の最大サイズを計算するには、アプリケーションで <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-158">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="e5513-159"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-159">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5513-160"><paramref name="chars" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-160"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-161"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e5513-161"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="e5513-162">または</span><span class="sxs-lookup"><span data-stu-id="e5513-162">-or-</span></span> 
<span data-ttu-id="e5513-163">結果のバイト数が、整数として返すことのできる最大数を超えています。</span><span class="sxs-lookup"><span data-stu-id="e5513-163">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e5513-164">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="e5513-164">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="e5513-165">および</span><span class="sxs-lookup"><span data-stu-id="e5513-165">-and-</span></span> 
 <span data-ttu-id="e5513-166"><see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-166"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e5513-167">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="e5513-167">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="e5513-168">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="e5513-168">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public override int GetByteCount (char[] chars, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetByteCount(char[] chars, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByteCount (chars As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetByteCount(cli::array &lt;char&gt; ^ chars, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetByteCount : char[] * int * int -&gt; int" Usage="aSCIIEncoding.GetByteCount (chars, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="e5513-169">エンコード対象の文字のセットを格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="e5513-169">The character array containing the set of characters to encode.</span></span></param>
        <param name="index"><span data-ttu-id="e5513-170">エンコードする最初の文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="e5513-170">The index of the first character to encode.</span></span></param>
        <param name="count"><span data-ttu-id="e5513-171">エンコードする文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-171">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="e5513-172">指定した文字配列から文字のセットをエンコードすることによって生成されるバイト数を計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-172">Calculates the number of bytes produced by encoding a set of characters from the specified character array.</span></span></summary>
        <returns><span data-ttu-id="e5513-173">指定した文字をエンコードすることによって生成されるバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-173">The number of bytes produced by encoding the specified characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-174"><xref:System.Text.ASCIIEncoding.GetBytes%2A> が結果のバイトを格納するために必要な配列の正確なサイズを計算するために、アプリケーションは <xref:System.Text.ASCIIEncoding.GetByteCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-174">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="e5513-175">配列の最大サイズを計算するには、アプリケーションで <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-175">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="e5513-176"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-176">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5513-177">次の例は、<xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドを使用して、<xref:System.Text.ASCIIEncoding>を使用して Unicode 文字の配列をエンコードするために必要なバイト数を返す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e5513-177">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method to return the number of bytes required to encode an array of Unicode characters using <xref:System.Text.ASCIIEncoding>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/CPP/getbytecount-char[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/CS/getbytecount-char[]-int32-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetByteCount1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetByteCount1 Example/VB/getbytecount-char[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5513-178"><paramref name="chars" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-178"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-179"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e5513-179"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="e5513-180">または</span><span class="sxs-lookup"><span data-stu-id="e5513-180">-or-</span></span> 
 <span data-ttu-id="e5513-181"><paramref name="index" /> および <paramref name="count" /> は <paramref name="chars" /> において有効な範囲を表していません。</span><span class="sxs-lookup"><span data-stu-id="e5513-181"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="e5513-182">または</span><span class="sxs-lookup"><span data-stu-id="e5513-182">-or-</span></span> 
<span data-ttu-id="e5513-183">結果のバイト数が、整数として返すことのできる最大数を超えています。</span><span class="sxs-lookup"><span data-stu-id="e5513-183">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e5513-184">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="e5513-184">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="e5513-185">および</span><span class="sxs-lookup"><span data-stu-id="e5513-185">-and-</span></span> 
 <span data-ttu-id="e5513-186"><see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-186"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBytes">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5513-187">文字のセットをバイト シーケンスにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="e5513-187">Encodes a set of characters into a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (ReadOnlySpan&lt;char&gt; chars, Span&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(valuetype System.ReadOnlySpan`1&lt;char&gt; chars, valuetype System.Span`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.ReadOnlySpan{System.Char},System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As ReadOnlySpan(Of Char), bytes As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(ReadOnlySpan&lt;char&gt; chars, Span&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : ReadOnlySpan&lt;char&gt; * Span&lt;byte&gt; -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
        <Parameter Name="bytes" Type="System.Span&lt;System.Byte&gt;" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="e5513-188">エンコードする文字スパン。</span><span class="sxs-lookup"><span data-stu-id="e5513-188">The character span to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="e5513-189">結果のバイト セットを格納するスパン。</span><span class="sxs-lookup"><span data-stu-id="e5513-189">The span to contain the resulting set of bytes.</span></span></param>
        <summary><span data-ttu-id="e5513-190">指定された文字スパンを指定されたバイト スパンにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="e5513-190">Encodes the specified character span into the specified byte span.</span></span></summary>
        <returns><span data-ttu-id="e5513-191"><paramref name="bytes" /> に書き込まれた実際のバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-191">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-192">結果のバイトを格納するために <xref:System.Text.ASCIIEncoding.GetBytes%2A> が必要とする正確なサイズを計算するには <xref:System.Text.ASCIIEncoding.GetByteCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-192">To calculate the exact size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, use <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="e5513-193">最大サイズを計算するには、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-193">To calculate the maximum size, use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="e5513-194"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-194">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="e5513-195">ストリームから読み取られたデータなど、変換されるデータは、連続したブロックでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e5513-195">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="e5513-196">この場合、またはデータ量が非常に大きく、小さいブロックに分割する必要がある場合は、それぞれ <xref:System.Text.ASCIIEncoding.GetDecoder%2A> メソッドまたは <xref:System.Text.ASCIIEncoding.GetEncoder%2A> メソッドによって提供される <xref:System.Text.Decoder> または <xref:System.Text.Encoder> を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-196">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="e5513-197"><xref:System.Text.ASCIIEncoding> では、エラー検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="e5513-197"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="e5513-198">`U+007F` より大きい Unicode 文字は、ASCII 疑問符 ("?") としてエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="e5513-198">Any Unicode character greater than `U+007F` is encoded as the ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e5513-199">セキュリティ上の理由から、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、または <xref:System.Text.UTF32Encoding> を使用して、エラー検出を有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-199">For security reasons, you should use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char* chars, int32 charCount, unsigned int8* bytes, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(char* chars, int charCount, System::Byte* bytes, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : nativeptr&lt;char&gt; * int * nativeptr&lt;byte&gt; * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charCount, bytes, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytes" Type="System.Byte*" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="e5513-200">エンコードする最初の文字へのポインター。</span><span class="sxs-lookup"><span data-stu-id="e5513-200">A pointer to the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="e5513-201">エンコードする文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-201">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="e5513-202">結果のバイト シーケンスの書き込みを開始する位置へのポインター。</span><span class="sxs-lookup"><span data-stu-id="e5513-202">A pointer to the location at which to start writing the resulting sequence of bytes.</span></span></param>
        <param name="byteCount"><span data-ttu-id="e5513-203">書き込む最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-203">The maximum number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="e5513-204">指定した文字ポインターで始まる文字のセットを、指定したバイト ポインターを開始位置として格納されるバイト シーケンスにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="e5513-204">Encodes a set of characters starting at the specified character pointer into a sequence of bytes that are stored starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="e5513-205"><paramref name="bytes" /> によって示される位置に書き込まれる実際のバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-205">The actual number of bytes written at the location indicated by <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-206"><xref:System.Text.ASCIIEncoding.GetBytes%2A> が結果のバイトを格納するために必要な配列の正確なサイズを計算するために、アプリケーションは <xref:System.Text.ASCIIEncoding.GetByteCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-206">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="e5513-207">配列の最大サイズを計算するには、アプリケーションで <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-207">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="e5513-208"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-208">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="e5513-209">ストリームから読み取られたデータなど、変換されるデータは、連続したブロックでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e5513-209">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="e5513-210">この場合、またはデータ量が非常に大きく、小さいブロックに分割する必要がある場合、アプリケーションでは、<xref:System.Text.ASCIIEncoding.GetDecoder%2A> メソッドまたは <xref:System.Text.ASCIIEncoding.GetEncoder%2A> メソッドによって提供される <xref:System.Text.Decoder> または <xref:System.Text.Encoder> をそれぞれ使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-210">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="e5513-211"><xref:System.Text.ASCIIEncoding> では、エラー検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="e5513-211"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="e5513-212">U + 007F を超える Unicode 文字は、ASCII 疑問符 ("?") に変換されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-212">Any Unicode character greater than U+007F is translated to an ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e5513-213">セキュリティ上の理由から、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、または <xref:System.Text.UTF32Encoding> を使用してエラー検出を有効にすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e5513-213">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5513-214"><paramref name="chars" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-214"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e5513-215">または</span><span class="sxs-lookup"><span data-stu-id="e5513-215">-or-</span></span> 
 <span data-ttu-id="e5513-216"><paramref name="bytes" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-216"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-217"><paramref name="charCount" /> または <paramref name="byteCount" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e5513-217"><paramref name="charCount" /> or <paramref name="byteCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5513-218"><paramref name="byteCount" /> が結果のバイト数より少なくなっています。</span><span class="sxs-lookup"><span data-stu-id="e5513-218"><paramref name="byteCount" /> is less than the resulting number of bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e5513-219">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="e5513-219">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="e5513-220">および</span><span class="sxs-lookup"><span data-stu-id="e5513-220">-and-</span></span> 
 <span data-ttu-id="e5513-221"><see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-221"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e5513-222">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="e5513-222">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="e5513-223">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="e5513-223">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(char[] chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As Char(), charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(cli::array &lt;char&gt; ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : char[] * int * int * byte[] * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="e5513-224">エンコード対象の文字のセットを格納している文字配列。</span><span class="sxs-lookup"><span data-stu-id="e5513-224">The character array containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="e5513-225">エンコードする最初の文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="e5513-225">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="e5513-226">エンコードする文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-226">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="e5513-227">結果のバイト シーケンスを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="e5513-227">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="e5513-228">結果のバイト シーケンスを書き込む開始位置のインデックス。</span><span class="sxs-lookup"><span data-stu-id="e5513-228">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="e5513-229">指定した文字配列に格納されている文字のセットを指定したバイト配列にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="e5513-229">Encodes a set of characters from the specified character array into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="e5513-230"><paramref name="bytes" /> に書き込まれた実際のバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-230">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-231"><xref:System.Text.ASCIIEncoding.GetBytes%2A> が結果のバイトを格納するために必要な配列の正確なサイズを計算するために、アプリケーションは <xref:System.Text.ASCIIEncoding.GetByteCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-231">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="e5513-232">配列の最大サイズを計算するには、アプリケーションで <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-232">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="e5513-233"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-233">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="e5513-234">ストリームから読み取られたデータなど、変換されるデータは、連続したブロックでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e5513-234">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="e5513-235">この場合、またはデータ量が非常に大きく、小さいブロックに分割する必要がある場合、アプリケーションでは、<xref:System.Text.ASCIIEncoding.GetDecoder%2A> メソッドまたは <xref:System.Text.ASCIIEncoding.GetEncoder%2A> メソッドによって提供される <xref:System.Text.Decoder> または <xref:System.Text.Encoder> をそれぞれ使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-235">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="e5513-236"><xref:System.Text.ASCIIEncoding> では、エラー検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="e5513-236"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="e5513-237">U + 007F を超える Unicode 文字は、ASCII 疑問符 ("?") としてエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="e5513-237">Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e5513-238">セキュリティ上の理由から、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、または <xref:System.Text.UTF32Encoding> を使用してエラー検出を有効にすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e5513-238">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5513-239">次の例では、<xref:System.Text.ASCIIEncoding.GetBytes%2A> メソッドを使用して文字列から範囲の文字をエンコードし、エンコードされた文字をバイト配列の要素範囲に格納する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e5513-239">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to encode a range of characters from a string and store the encoded characters in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/CPP/getbytes-string-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/CS/getbytes-string-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetBytes1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes1 Example/VB/getbytes-string-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5513-240"><paramref name="chars" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-240"><paramref name="chars" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e5513-241">または</span><span class="sxs-lookup"><span data-stu-id="e5513-241">-or-</span></span> 
 <span data-ttu-id="e5513-242"><paramref name="bytes" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-242"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-243"><paramref name="charIndex" />、<paramref name="charCount" />、または <paramref name="byteIndex" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e5513-243"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="e5513-244">または</span><span class="sxs-lookup"><span data-stu-id="e5513-244">-or-</span></span> 
 <span data-ttu-id="e5513-245"><paramref name="charIndex" /> および <paramref name="charCount" /> は <paramref name="chars" /> において有効な範囲を表していません。</span><span class="sxs-lookup"><span data-stu-id="e5513-245"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="e5513-246">または</span><span class="sxs-lookup"><span data-stu-id="e5513-246">-or-</span></span> 
 <span data-ttu-id="e5513-247"><paramref name="byteIndex" /> が <paramref name="bytes" /> の有効なインデックスではありません。</span><span class="sxs-lookup"><span data-stu-id="e5513-247"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5513-248"><paramref name="bytes" /> には、<paramref name="byteIndex" /> から配列の末尾までに十分なサイズがなく、結果のバイトを格納できません。</span><span class="sxs-lookup"><span data-stu-id="e5513-248"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e5513-249">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="e5513-249">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="e5513-250">および</span><span class="sxs-lookup"><span data-stu-id="e5513-250">-and-</span></span> 
 <span data-ttu-id="e5513-251"><see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-251"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override int GetBytes (string chars, int charIndex, int charCount, byte[] bytes, int byteIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetBytes(string chars, int32 charIndex, int32 charCount, unsigned int8[] bytes, int32 byteIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (chars As String, charIndex As Integer, charCount As Integer, bytes As Byte(), byteIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetBytes(System::String ^ chars, int charIndex, int charCount, cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : string * int * int * byte[] * int -&gt; int" Usage="aSCIIEncoding.GetBytes (chars, charIndex, charCount, bytes, byteIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.String" />
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="charCount" Type="System.Int32" />
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars"><span data-ttu-id="e5513-252">エンコード対象の文字のセットを格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="e5513-252">The <see cref="T:System.String" /> containing the set of characters to encode.</span></span></param>
        <param name="charIndex"><span data-ttu-id="e5513-253">エンコードする最初の文字のインデックス。</span><span class="sxs-lookup"><span data-stu-id="e5513-253">The index of the first character to encode.</span></span></param>
        <param name="charCount"><span data-ttu-id="e5513-254">エンコードする文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-254">The number of characters to encode.</span></span></param>
        <param name="bytes"><span data-ttu-id="e5513-255">結果のバイト シーケンスを格納するバイト配列。</span><span class="sxs-lookup"><span data-stu-id="e5513-255">The byte array to contain the resulting sequence of bytes.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="e5513-256">結果のバイト シーケンスを書き込む開始位置のインデックス。</span><span class="sxs-lookup"><span data-stu-id="e5513-256">The index at which to start writing the resulting sequence of bytes.</span></span></param>
        <summary><span data-ttu-id="e5513-257">指定した <see cref="T:System.String" /> の文字セットを、指定したバイト配列にエンコードします。</span><span class="sxs-lookup"><span data-stu-id="e5513-257">Encodes a set of characters from the specified <see cref="T:System.String" /> into the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="e5513-258"><paramref name="bytes" /> に書き込まれた実際のバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-258">The actual number of bytes written into <paramref name="bytes" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-259"><xref:System.Text.ASCIIEncoding.GetBytes%2A> が結果のバイトを格納するために必要な配列の正確なサイズを計算するために、アプリケーションは <xref:System.Text.ASCIIEncoding.GetByteCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-259">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetBytes%2A> to store the resulting bytes, the application uses <xref:System.Text.ASCIIEncoding.GetByteCount%2A>.</span></span> <span data-ttu-id="e5513-260">配列の最大サイズを計算するには、アプリケーションで <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-260">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span> <span data-ttu-id="e5513-261"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-261">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="e5513-262">ストリームから読み取られたデータなど、変換されるデータは、連続したブロックでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e5513-262">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="e5513-263">この場合、またはデータ量が非常に大きく、小さいブロックに分割する必要がある場合、アプリケーションでは、<xref:System.Text.ASCIIEncoding.GetDecoder%2A> メソッドまたは <xref:System.Text.ASCIIEncoding.GetEncoder%2A> メソッドによって提供される <xref:System.Text.Decoder> または <xref:System.Text.Encoder> をそれぞれ使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-263">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="e5513-264"><xref:System.Text.ASCIIEncoding> では、エラー検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="e5513-264"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="e5513-265">U + 007F を超える Unicode 文字は、ASCII 疑問符 ("?") としてエンコードされます。</span><span class="sxs-lookup"><span data-stu-id="e5513-265">Any Unicode character greater than U+007F is encoded as the ASCII question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e5513-266">セキュリティ上の理由から、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、または <xref:System.Text.UTF32Encoding> を使用してエラー検出を有効にすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e5513-266">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5513-267">次の例は、<xref:System.Text.ASCIIEncoding.GetBytes%2A> メソッドを使用して、Unicode 文字配列から要素の範囲をエンコードし、バイト配列の要素範囲にエンコードされたバイトを格納する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e5513-267">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to encode a range of elements from a Unicode character array and store the encoded bytes in a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/CPP/getbytes-char[]-int32-int32-byte[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/CS/getbytes-char[]-int32-int32-byte[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetBytes2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetBytes2/VB/getbytes-char[]-int32-int32-byte[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5513-268"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-268"><paramref name="s" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e5513-269">または</span><span class="sxs-lookup"><span data-stu-id="e5513-269">-or-</span></span> 
 <span data-ttu-id="e5513-270"><paramref name="bytes" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-270"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-271"><paramref name="charIndex" />、<paramref name="charCount" />、または <paramref name="byteIndex" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e5513-271"><paramref name="charIndex" /> or <paramref name="charCount" /> or <paramref name="byteIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="e5513-272">または</span><span class="sxs-lookup"><span data-stu-id="e5513-272">-or-</span></span> 
 <span data-ttu-id="e5513-273"><paramref name="charIndex" /> および <paramref name="charCount" /> は <paramref name="chars" /> において有効な範囲を表していません。</span><span class="sxs-lookup"><span data-stu-id="e5513-273"><paramref name="charIndex" /> and <paramref name="charCount" /> do not denote a valid range in <paramref name="chars" />.</span></span>  
  
<span data-ttu-id="e5513-274">または</span><span class="sxs-lookup"><span data-stu-id="e5513-274">-or-</span></span> 
 <span data-ttu-id="e5513-275"><paramref name="byteIndex" /> が <paramref name="bytes" /> の有効なインデックスではありません。</span><span class="sxs-lookup"><span data-stu-id="e5513-275"><paramref name="byteIndex" /> is not a valid index in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5513-276"><paramref name="bytes" /> には、<paramref name="byteIndex" /> から配列の末尾までに十分なサイズがなく、結果のバイトを格納できません。</span><span class="sxs-lookup"><span data-stu-id="e5513-276"><paramref name="bytes" /> does not have enough capacity from <paramref name="byteIndex" /> to the end of the array to accommodate the resulting bytes.</span></span></exception>
        <exception cref="T:System.Text.EncoderFallbackException"><span data-ttu-id="e5513-277">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="e5513-277">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="e5513-278">および</span><span class="sxs-lookup"><span data-stu-id="e5513-278">-and-</span></span> 
 <span data-ttu-id="e5513-279"><see cref="P:System.Text.Encoding.EncoderFallback" /> が <see cref="T:System.Text.EncoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-279"><see cref="P:System.Text.Encoding.EncoderFallback" /> is set to <see cref="T:System.Text.EncoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCharCount">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5513-280">バイト シーケンスをデコードすることによって生成される文字数を計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-280">Calculates the number of characters produced by decoding a sequence of bytes.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (ReadOnlySpan&lt;byte&gt; bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As ReadOnlySpan(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(ReadOnlySpan&lt;System::Byte&gt; bytes);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : ReadOnlySpan&lt;byte&gt; -&gt; int" Usage="aSCIIEncoding.GetCharCount bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="e5513-281">デコードするバイトのセットを格納しているスパン。</span><span class="sxs-lookup"><span data-stu-id="e5513-281">The span containing the set of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="e5513-282">指定されたバイト スパンをデコードすることによって生成される文字数を計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-282">Calculates the number of characters produced by decoding the specified byte span.</span></span></summary>
        <returns><span data-ttu-id="e5513-283">指定されたバイト スパンをデコードすることによって生成される文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-283">The number of characters produced by decoding the specified byte span.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-284">結果の文字を格納するために <xref:System.Text.ASCIIEncoding.GetChars%2A> で必要とされる正確なサイズを計算するには、<xref:System.Text.ASCIIEncoding.GetCharCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-284">To calculate the exact size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, use <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="e5513-285">最大サイズを計算するには、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-285">To calculate the maximum size, use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="e5513-286"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-286">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte* bytes, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8* bytes, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(System::Byte* bytes, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : nativeptr&lt;byte&gt; * int -&gt; int" Usage="aSCIIEncoding.GetCharCount (bytes, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="count" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="e5513-287">デコードする最初のバイトへのポインター。</span><span class="sxs-lookup"><span data-stu-id="e5513-287">A pointer to the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="e5513-288">デコードするバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-288">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="e5513-289">指定したバイト ポインターで始まるバイト シーケンスをデコードすることによって生成される文字数を計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-289">Calculates the number of characters produced by decoding a sequence of bytes starting at the specified byte pointer.</span></span></summary>
        <returns><span data-ttu-id="e5513-290">指定したバイト シーケンスをデコードすることによって生成される文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-290">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-291"><xref:System.Text.ASCIIEncoding.GetChars%2A> が結果の文字を格納するために必要な配列の正確なサイズを計算するために、アプリケーションは <xref:System.Text.ASCIIEncoding.GetCharCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-291">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="e5513-292">配列の最大サイズを計算するには、アプリケーションで <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-292">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="e5513-293"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-293">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5513-294"><paramref name="bytes" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-294"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-295"><paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e5513-295"><paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="e5513-296">または</span><span class="sxs-lookup"><span data-stu-id="e5513-296">-or-</span></span> 
<span data-ttu-id="e5513-297">結果のバイト数が、整数として返すことのできる最大数を超えています。</span><span class="sxs-lookup"><span data-stu-id="e5513-297">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="e5513-298">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="e5513-298">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="e5513-299">および</span><span class="sxs-lookup"><span data-stu-id="e5513-299">-and-</span></span> 
 <span data-ttu-id="e5513-300"><see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-300"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e5513-301">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="e5513-301">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="e5513-302">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="e5513-302">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="Overload:System.Text.ASCIIEncoding.GetChars" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetCharCount">
      <MemberSignature Language="C#" Value="public override int GetCharCount (byte[] bytes, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetCharCount(unsigned int8[] bytes, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCharCount (bytes As Byte(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetCharCount(cli::array &lt;System::Byte&gt; ^ bytes, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.GetCharCount : byte[] * int * int -&gt; int" Usage="aSCIIEncoding.GetCharCount (bytes, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="e5513-303">デコード対象のバイト シーケンスが格納されたバイト配列。</span><span class="sxs-lookup"><span data-stu-id="e5513-303">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="index"><span data-ttu-id="e5513-304">デコードする最初のバイトのインデックス。</span><span class="sxs-lookup"><span data-stu-id="e5513-304">The index of the first byte to decode.</span></span></param>
        <param name="count"><span data-ttu-id="e5513-305">デコードするバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-305">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="e5513-306">指定したバイト配列からバイト シーケンスをデコードすることによって生成される文字数を計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-306">Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.</span></span></summary>
        <returns><span data-ttu-id="e5513-307">指定したバイト シーケンスをデコードすることによって生成される文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-307">The number of characters produced by decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-308"><xref:System.Text.ASCIIEncoding.GetChars%2A> が結果の文字を格納するために必要な配列の正確なサイズを計算するために、アプリケーションは <xref:System.Text.ASCIIEncoding.GetCharCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-308">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="e5513-309">配列の最大サイズを計算するには、アプリケーションで <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-309">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="e5513-310"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-310">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5513-311">次の例は、<xref:System.Text.ASCIIEncoding.GetCharCount%2A> メソッドを使用して、バイト配列内の要素の範囲をデコードすることによって生成される文字数を返す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e5513-311">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method to return the number of characters produced by decoding a range of elements in a byte array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/CPP/getcharcount-byte[]-int32-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/CS/getcharcount-byte[]-int32-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetCharCount Example/VB/getcharcount-byte[]-int32-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5513-312"><paramref name="bytes" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-312"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-313"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e5513-313"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="e5513-314">または</span><span class="sxs-lookup"><span data-stu-id="e5513-314">-or-</span></span> 
 <span data-ttu-id="e5513-315"><paramref name="index" /> および <paramref name="count" /> は <paramref name="bytes" /> において有効な範囲を表していません。</span><span class="sxs-lookup"><span data-stu-id="e5513-315"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="e5513-316">または</span><span class="sxs-lookup"><span data-stu-id="e5513-316">-or-</span></span> 
<span data-ttu-id="e5513-317">結果のバイト数が、整数として返すことのできる最大数を超えています。</span><span class="sxs-lookup"><span data-stu-id="e5513-317">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="e5513-318">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="e5513-318">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="e5513-319">および</span><span class="sxs-lookup"><span data-stu-id="e5513-319">-and-</span></span> 
 <span data-ttu-id="e5513-320"><see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-320"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="Overload:System.Text.ASCIIEncoding.GetChars" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChars">
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e5513-321">バイト シーケンスを文字のセットにデコードします。</span><span class="sxs-lookup"><span data-stu-id="e5513-321">Decodes a sequence of bytes into a set of characters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (ReadOnlySpan&lt;byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; bytes, valuetype System.Span`1&lt;char&gt; chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.ReadOnlySpan{System.Byte},System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As ReadOnlySpan(Of Byte), chars As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(ReadOnlySpan&lt;System::Byte&gt; bytes, Span&lt;char&gt; chars);" />
      <MemberSignature Language="F#" Value="override this.GetChars : ReadOnlySpan&lt;byte&gt; * Span&lt;char&gt; -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, chars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
        <Parameter Name="chars" Type="System.Span&lt;System.Char&gt;" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="e5513-322">デコードするバイトを格納しているスパン。</span><span class="sxs-lookup"><span data-stu-id="e5513-322">The span containing the bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="e5513-323">結果の文字セットを格納するスパン。</span><span class="sxs-lookup"><span data-stu-id="e5513-323">The span to contain the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="e5513-324">指定されたバイト スパンを指定された文字スパンにデコードします。</span><span class="sxs-lookup"><span data-stu-id="e5513-324">Decodes the specified byte span into the specified character span.</span></span></summary>
        <returns><span data-ttu-id="e5513-325"><paramref name="chars" /> に書き込まれた実際の文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-325">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-326">結果の文字を格納するために <xref:System.Text.ASCIIEncoding.GetChars%2A> で必要とされる正確なサイズを計算するには、<xref:System.Text.ASCIIEncoding.GetCharCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-326">To calculate the exact size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, use <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="e5513-327">最大サイズを計算するには、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-327">To calculate the maximum size, use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="e5513-328"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-328">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="e5513-329">ストリームから読み取られたデータなど、変換されるデータは、連続したブロックでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e5513-329">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="e5513-330">この場合、またはデータ量が非常に大きく、小さいブロックに分割する必要がある場合は、<xref:System.Text.ASCIIEncoding.GetDecoder%2A> メソッドまたは <xref:System.Text.ASCIIEncoding.GetEncoder%2A> メソッドによって提供される <xref:System.Text.Decoder> または <xref:System.Text.Encoder> をそれぞれ使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-330">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, you should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="e5513-331"><xref:System.Text.ASCIIEncoding> では、エラー検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="e5513-331"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="e5513-332">16進 `0x7F` より大きいバイトは、Unicode 疑問符 ("?") としてデコードされます。</span><span class="sxs-lookup"><span data-stu-id="e5513-332">Any byte greater than hexadecimal `0x7F` is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e5513-333">セキュリティ上の理由から、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、または <xref:System.Text.UTF32Encoding> を使用して、エラー検出を有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-333">For security reasons, you should use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8* bytes, int32 byteCount, char* chars, int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(System::Byte* bytes, int byteCount, char* chars, int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetChars : nativeptr&lt;byte&gt; * int * nativeptr&lt;char&gt; * int -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, byteCount, chars, charCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1;netcore-3.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte*" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="byteCount" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="chars" Type="System.Char*" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="charCount" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="e5513-334">デコードする最初のバイトへのポインター。</span><span class="sxs-lookup"><span data-stu-id="e5513-334">A pointer to the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="e5513-335">デコードするバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-335">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="e5513-336">結果の文字セットの書き込みを開始する位置へのポインター。</span><span class="sxs-lookup"><span data-stu-id="e5513-336">A pointer to the location at which to start writing the resulting set of characters.</span></span></param>
        <param name="charCount"><span data-ttu-id="e5513-337">書き込む文字の最大数。</span><span class="sxs-lookup"><span data-stu-id="e5513-337">The maximum number of characters to write.</span></span></param>
        <summary><span data-ttu-id="e5513-338">指定したバイト ポインターで始まるバイト シーケンスを、指定した文字ポインターを開始位置として格納される文字のセットにデコードします。</span><span class="sxs-lookup"><span data-stu-id="e5513-338">Decodes a sequence of bytes starting at the specified byte pointer into a set of characters that are stored starting at the specified character pointer.</span></span></summary>
        <returns><span data-ttu-id="e5513-339"><paramref name="chars" /> によって示される位置に書き込まれる実際の文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-339">The actual number of characters written at the location indicated by <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-340"><xref:System.Text.ASCIIEncoding.GetChars%2A> が結果の文字を格納するために必要な配列の正確なサイズを計算するために、アプリケーションは <xref:System.Text.ASCIIEncoding.GetCharCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-340">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="e5513-341">配列の最大サイズを計算するには、アプリケーションで <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-341">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="e5513-342"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-342">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="e5513-343">ストリームから読み取られたデータなど、変換されるデータは、連続したブロックでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e5513-343">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="e5513-344">この場合、またはデータ量が非常に大きく、小さいブロックに分割する必要がある場合、アプリケーションでは、<xref:System.Text.ASCIIEncoding.GetDecoder%2A> メソッドまたは <xref:System.Text.ASCIIEncoding.GetEncoder%2A> メソッドによって提供される <xref:System.Text.Decoder> または <xref:System.Text.Encoder> をそれぞれ使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-344">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="e5513-345"><xref:System.Text.ASCIIEncoding> では、エラー検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="e5513-345"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="e5513-346">16進数の0x7F を超えるバイトは、Unicode の疑問符 ("?") としてデコードされます。</span><span class="sxs-lookup"><span data-stu-id="e5513-346">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e5513-347">セキュリティ上の理由から、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、または <xref:System.Text.UTF32Encoding> を使用してエラー検出を有効にすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e5513-347">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5513-348"><paramref name="bytes" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-348"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e5513-349">または</span><span class="sxs-lookup"><span data-stu-id="e5513-349">-or-</span></span> 
 <span data-ttu-id="e5513-350"><paramref name="chars" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-350"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-351"><paramref name="byteCount" /> または <paramref name="charCount" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e5513-351"><paramref name="byteCount" /> or <paramref name="charCount" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5513-352"><paramref name="charCount" /> が結果の文字数より少なくなっています。</span><span class="sxs-lookup"><span data-stu-id="e5513-352"><paramref name="charCount" /> is less than the resulting number of characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="e5513-353">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="e5513-353">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="e5513-354">および</span><span class="sxs-lookup"><span data-stu-id="e5513-354">-and-</span></span> 
 <span data-ttu-id="e5513-355"><see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-355"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="e5513-356">直前の呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="e5513-356">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="e5513-357">このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="e5513-357">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetChars(unsigned int8[] bytes, int32 byteIndex, int32 byteCount, char[] chars, int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (bytes As Byte(), byteIndex As Integer, byteCount As Integer, chars As Char(), charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetChars(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount, cli::array &lt;char&gt; ^ chars, int charIndex);" />
      <MemberSignature Language="F#" Value="override this.GetChars : byte[] * int * int * char[] * int -&gt; int" Usage="aSCIIEncoding.GetChars (bytes, byteIndex, byteCount, chars, charIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="e5513-358">デコード対象のバイト シーケンスが格納されたバイト配列。</span><span class="sxs-lookup"><span data-stu-id="e5513-358">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="e5513-359">デコードする最初のバイトのインデックス。</span><span class="sxs-lookup"><span data-stu-id="e5513-359">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="e5513-360">デコードするバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-360">The number of bytes to decode.</span></span></param>
        <param name="chars"><span data-ttu-id="e5513-361">結果の文字のセットを格納する文字配列。</span><span class="sxs-lookup"><span data-stu-id="e5513-361">The character array to contain the resulting set of characters.</span></span></param>
        <param name="charIndex"><span data-ttu-id="e5513-362">結果の文字のセットを書き込む開始位置のインデックス。</span><span class="sxs-lookup"><span data-stu-id="e5513-362">The index at which to start writing the resulting set of characters.</span></span></param>
        <summary><span data-ttu-id="e5513-363">指定したバイト配列に格納されているバイト シーケンスを指定した文字配列にデコードします。</span><span class="sxs-lookup"><span data-stu-id="e5513-363">Decodes a sequence of bytes from the specified byte array into the specified character array.</span></span></summary>
        <returns><span data-ttu-id="e5513-364"><paramref name="chars" /> に書き込まれた実際の文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-364">The actual number of characters written into <paramref name="chars" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-365"><xref:System.Text.ASCIIEncoding.GetChars%2A> が結果の文字を格納するために必要な配列の正確なサイズを計算するために、アプリケーションは <xref:System.Text.ASCIIEncoding.GetCharCount%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-365">To calculate the exact array size required by <xref:System.Text.ASCIIEncoding.GetChars%2A> to store the resulting characters, the application uses <xref:System.Text.ASCIIEncoding.GetCharCount%2A>.</span></span> <span data-ttu-id="e5513-366">配列の最大サイズを計算するには、アプリケーションで <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-366">To calculate the maximum array size, the application should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span> <span data-ttu-id="e5513-367"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> メソッドを使用すると、通常はより少ないメモリを割り当てることができますが、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-367">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allows allocation of less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="e5513-368">ストリームから読み取られたデータなど、変換されるデータは、連続したブロックでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e5513-368">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="e5513-369">この場合、またはデータ量が非常に大きく、小さいブロックに分割する必要がある場合、アプリケーションでは、<xref:System.Text.ASCIIEncoding.GetDecoder%2A> メソッドまたは <xref:System.Text.ASCIIEncoding.GetEncoder%2A> メソッドによって提供される <xref:System.Text.Decoder> または <xref:System.Text.Encoder> をそれぞれ使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-369">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="e5513-370"><xref:System.Text.ASCIIEncoding> では、エラー検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="e5513-370"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="e5513-371">16進数の0x7F を超えるバイトは、Unicode の疑問符 ("?") としてデコードされます。</span><span class="sxs-lookup"><span data-stu-id="e5513-371">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e5513-372">セキュリティ上の理由から、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、または <xref:System.Text.UTF32Encoding> を使用してエラー検出を有効にすることをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="e5513-372">For security reasons, your application is recommended to use <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> and enable error detection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5513-373">次の例では、バイト配列から要素の範囲をデコードし、その結果を Unicode 文字配列の要素のセットに格納する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e5513-373">The following example demonstrates how to decode a range of elements from a byte array and store the result in a set of elements in a Unicode character array.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/CPP/getchars-byte[]-int32-int32-char[]-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/CS/getchars-byte[]-int32-int32-char[]-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetChars Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetChars Example/VB/getchars-byte[]-int32-int32-char[]-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5513-374"><paramref name="bytes" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-374"><paramref name="bytes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e5513-375">または</span><span class="sxs-lookup"><span data-stu-id="e5513-375">-or-</span></span> 
 <span data-ttu-id="e5513-376"><paramref name="chars" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-376"><paramref name="chars" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-377"><paramref name="byteIndex" />、<paramref name="byteCount" />、または <paramref name="charIndex" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e5513-377"><paramref name="byteIndex" /> or <paramref name="byteCount" /> or <paramref name="charIndex" /> is less than zero.</span></span>  
  
<span data-ttu-id="e5513-378">または</span><span class="sxs-lookup"><span data-stu-id="e5513-378">-or-</span></span> 
 <span data-ttu-id="e5513-379"><paramref name="byteindex" /> および <paramref name="byteCount" /> は <paramref name="bytes" /> において有効な範囲を表していません。</span><span class="sxs-lookup"><span data-stu-id="e5513-379"><paramref name="byteindex" /> and <paramref name="byteCount" /> do not denote a valid range in <paramref name="bytes" />.</span></span>  
  
<span data-ttu-id="e5513-380">または</span><span class="sxs-lookup"><span data-stu-id="e5513-380">-or-</span></span> 
 <span data-ttu-id="e5513-381"><paramref name="charIndex" /> が <paramref name="chars" /> の有効なインデックスではありません。</span><span class="sxs-lookup"><span data-stu-id="e5513-381"><paramref name="charIndex" /> is not a valid index in <paramref name="chars" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e5513-382"><paramref name="chars" /> には、<paramref name="charIndex" /> から配列の末尾までに十分なサイズがなく、結果の文字を格納できません。</span><span class="sxs-lookup"><span data-stu-id="e5513-382"><paramref name="chars" /> does not have enough capacity from <paramref name="charIndex" /> to the end of the array to accommodate the resulting characters.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="e5513-383">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="e5513-383">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="e5513-384">および</span><span class="sxs-lookup"><span data-stu-id="e5513-384">-and-</span></span> 
 <span data-ttu-id="e5513-385"><see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-385"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDecoder">
      <MemberSignature Language="C#" Value="public override System.Text.Decoder GetDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Decoder GetDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetDecoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecoder () As Decoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Decoder ^ GetDecoder();" />
      <MemberSignature Language="F#" Value="override this.GetDecoder : unit -&gt; System.Text.Decoder" Usage="aSCIIEncoding.GetDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Decoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5513-386">ASCII でエンコードされたバイト シーケンスを Unicode 文字のシーケンスに変換するデコーダーを取得します。</span><span class="sxs-lookup"><span data-stu-id="e5513-386">Obtains a decoder that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</span></span></summary>
        <returns><span data-ttu-id="e5513-387">ASCII でエンコードされたバイト シーケンスを Unicode 文字のシーケンスに変換する <see cref="T:System.Text.Decoder" />。</span><span class="sxs-lookup"><span data-stu-id="e5513-387">A <see cref="T:System.Text.Decoder" /> that converts an ASCII encoded sequence of bytes into a sequence of Unicode characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-388"><xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> メソッドは、このクラスの <xref:System.Text.ASCIIEncoding.GetChars%2A> メソッドと同様の方法で、バイトのシーケンシャルブロックを文字の連続したブロックに変換します。</span><span class="sxs-lookup"><span data-stu-id="e5513-388">The <xref:System.Text.Decoder.GetChars%2A?displayProperty=nameWithType> method converts sequential blocks of bytes into sequential blocks of characters, in a manner similar to the <xref:System.Text.ASCIIEncoding.GetChars%2A> method of this class.</span></span> <span data-ttu-id="e5513-389">ただし、<xref:System.Text.Decoder> は、複数のブロックにまたがるバイトシーケンスを正しくデコードできるように、呼び出しの間に状態情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="e5513-389">However, a <xref:System.Text.Decoder> maintains state information between calls so it can correctly decode byte sequences that span blocks.</span></span> <span data-ttu-id="e5513-390">また <xref:System.Text.Decoder> は、データブロックの末尾で末尾のバイトを保持し、次のデコード操作で末尾のバイトを使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-390">The <xref:System.Text.Decoder> also preserves trailing bytes at the end of data blocks and uses the trailing bytes in the next decoding operation.</span></span> <span data-ttu-id="e5513-391">そのため、<xref:System.Text.ASCIIEncoding.GetDecoder%2A> と <xref:System.Text.ASCIIEncoding.GetEncoder%2A> は、ネットワークの転送とファイル操作に役立ちます。これらの操作は、多くの場合、データストリーム全体ではなくデータブロックを処理するためです。</span><span class="sxs-lookup"><span data-stu-id="e5513-391">Therefore, <xref:System.Text.ASCIIEncoding.GetDecoder%2A> and <xref:System.Text.ASCIIEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Decoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="e5513-392">エンコーディングについて</span><span class="sxs-lookup"><span data-stu-id="e5513-392">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEncoder">
      <MemberSignature Language="C#" Value="public override System.Text.Encoder GetEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Text.Encoder GetEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetEncoder" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEncoder () As Encoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Text::Encoder ^ GetEncoder();" />
      <MemberSignature Language="F#" Value="override this.GetEncoder : unit -&gt; System.Text.Encoder" Usage="aSCIIEncoding.GetEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e5513-393">Unicode 文字のシーケンスを ASCII でエンコードされたバイト シーケンスに変換するエンコーダーを取得します。</span><span class="sxs-lookup"><span data-stu-id="e5513-393">Obtains an encoder that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</span></span></summary>
        <returns><span data-ttu-id="e5513-394">Unicode 文字のシーケンスを ASCII でエンコードされたバイト シーケンスに変換する <see cref="T:System.Text.Encoder" />。</span><span class="sxs-lookup"><span data-stu-id="e5513-394">An <see cref="T:System.Text.Encoder" /> that converts a sequence of Unicode characters into an ASCII encoded sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-395"><xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> メソッドは、このクラスの <xref:System.Text.ASCIIEncoding.GetBytes%2A> メソッドと同様の方法で、一連の文字を連続するバイトのブロックに変換します。</span><span class="sxs-lookup"><span data-stu-id="e5513-395">The <xref:System.Text.Encoder.GetBytes%2A?displayProperty=nameWithType> method converts sequential blocks of characters into sequential blocks of bytes, in a manner similar to the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method of this class.</span></span> <span data-ttu-id="e5513-396">ただし、<xref:System.Text.Encoder> は、複数のブロックにまたがる文字シーケンスを正しくエンコードできるように、呼び出しの間に状態情報を保持します。</span><span class="sxs-lookup"><span data-stu-id="e5513-396">However, an <xref:System.Text.Encoder> maintains state information between calls so it can correctly encode character sequences that span blocks.</span></span> <span data-ttu-id="e5513-397">また <xref:System.Text.Encoder> は、データブロックの末尾で末尾の文字を保持し、次のエンコーディング操作で末尾の文字を使用します。</span><span class="sxs-lookup"><span data-stu-id="e5513-397">The <xref:System.Text.Encoder> also preserves trailing characters at the end of data blocks and uses the trailing characters in the next encoding operation.</span></span> <span data-ttu-id="e5513-398">たとえば、データブロックの末尾が一致していない上位サロゲートで、一致する下位サロゲートが次のデータブロックに含まれている可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-398">For example, a data block might end with an unmatched high surrogate, and the matching low surrogate might be in the next data block.</span></span> <span data-ttu-id="e5513-399">そのため、<xref:System.Text.ASCIIEncoding.GetDecoder%2A> と <xref:System.Text.ASCIIEncoding.GetEncoder%2A> は、ネットワークの転送とファイル操作に役立ちます。これらの操作は、多くの場合、データストリーム全体ではなくデータブロックを処理するためです。</span><span class="sxs-lookup"><span data-stu-id="e5513-399">Therefore, <xref:System.Text.ASCIIEncoding.GetDecoder%2A> and <xref:System.Text.ASCIIEncoding.GetEncoder%2A> are useful for network transmission and file operations, because those operations often deal with blocks of data instead of a complete data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <related type="Article" href="~/docs/standard/base-types/character-encoding.md"><span data-ttu-id="e5513-400">エンコーディングについて</span><span class="sxs-lookup"><span data-stu-id="e5513-400">Understanding Encodings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetMaxByteCount">
      <MemberSignature Language="C#" Value="public override int GetMaxByteCount (int charCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxByteCount(int32 charCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxByteCount (charCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxByteCount(int charCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxByteCount : int -&gt; int" Usage="aSCIIEncoding.GetMaxByteCount charCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charCount"><span data-ttu-id="e5513-401">エンコードする文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-401">The number of characters to encode.</span></span></param>
        <summary><span data-ttu-id="e5513-402">指定した文字数をエンコードすることによって生成される最大バイト数を計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-402">Calculates the maximum number of bytes produced by encoding the specified number of characters.</span></span></summary>
        <returns><span data-ttu-id="e5513-403">指定した文字数をエンコードすることによって生成される最大バイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-403">The maximum number of bytes produced by encoding the specified number of characters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-404"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドは、結果のバイトを格納するために <xref:System.Text.ASCIIEncoding.GetBytes%2A> メソッドで必要とされる配列の正確なサイズを計算します。一方、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドは配列の最大サイズを計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-404">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method calculates the exact array size required by the <xref:System.Text.ASCIIEncoding.GetBytes%2A> method to store the resulting bytes, whereas the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method calculates the maximum array size.</span></span> <span data-ttu-id="e5513-405"><xref:System.Text.ASCIIEncoding.GetByteCount%2A> メソッドでは、通常、割り当てられるメモリが少なくなりますが、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドは一般に高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-405">The <xref:System.Text.ASCIIEncoding.GetByteCount%2A> method generally allocates less memory, but the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="e5513-406"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> は、現在選択されている <xref:System.Text.EncoderFallback>の最悪のケースを含む、最悪の数値です。</span><span class="sxs-lookup"><span data-stu-id="e5513-406"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> is a worst-case number, including the worst case for the currently selected <xref:System.Text.EncoderFallback>.</span></span>  <span data-ttu-id="e5513-407">大きな文字列を含む置換フォールバックを選択した場合、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> は大きな値を返すことがあります。</span><span class="sxs-lookup"><span data-stu-id="e5513-407">If you choose a replacement fallback with a potentially large string, <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> can return large values.</span></span>  
  
 <span data-ttu-id="e5513-408"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドは、前のエンコード操作から残っている可能性のあるサロゲートを考慮します。</span><span class="sxs-lookup"><span data-stu-id="e5513-408">The <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method considers potential leftover surrogates from a previous encoding operation.</span></span> <span data-ttu-id="e5513-409">その結果、<xref:System.Text.ASCIIEncoding> オブジェクトが既定の置換フォールバックを使用する場合、またはカスタム置換フォールバックが1つの可能なフォールバック文字で定義されている場合、このメソッドは `charCount` + 1 を返します。</span><span class="sxs-lookup"><span data-stu-id="e5513-409">As a result, if the <xref:System.Text.ASCIIEncoding> object uses the default replacement fallback, or if a custom replacement fallback has been defined with a single possible fallback character, the method returns `charCount` + 1.</span></span> <span data-ttu-id="e5513-410"><xref:System.Text.ASCIIEncoding> オブジェクトが、可能な複数のフォールバック文字で置換フォールバックを使用する場合、メソッドは*n* \* (`charCount` + 1) を返します。ここで、 *n*はフォールバック文字の最大数です。</span><span class="sxs-lookup"><span data-stu-id="e5513-410">If the <xref:System.Text.ASCIIEncoding> object uses a replacement fallback with more than one possible fallback character, the method returns *n* \* (`charCount` + 1), where *n* is the maximum number of fallback characters.</span></span>  
  
 <span data-ttu-id="e5513-411"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> に <xref:System.Text.ASCIIEncoding.GetChars%2A>との関係はありません。</span><span class="sxs-lookup"><span data-stu-id="e5513-411"><xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> has no relation to <xref:System.Text.ASCIIEncoding.GetChars%2A>.</span></span> <span data-ttu-id="e5513-412"><xref:System.Text.ASCIIEncoding.GetChars%2A>で使用する同様の機能がアプリケーションに必要な場合は、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-412">If your application needs a similar function to use with <xref:System.Text.ASCIIEncoding.GetChars%2A>, it should use <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5513-413">`GetMaxByteCount(N)` は、必ずしも `N* GetMaxByteCount(1)`と同じ値であるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="e5513-413">`GetMaxByteCount(N)` is not necessarily the same value as `N* GetMaxByteCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5513-414">次の例では、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドを使用して、指定された文字数をエンコードするために必要なバイト数を計算する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e5513-414">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method to calculate the bytes required to encode a specified number of characters.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/CPP/getmaxbytecount-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/CS/getmaxbytecount-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetMaxByteCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxByteCount Example/VB/getmaxbytecount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-415"><paramref name="charCount" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e5513-415"><paramref name="charCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="e5513-416">または</span><span class="sxs-lookup"><span data-stu-id="e5513-416">-or-</span></span> 
<span data-ttu-id="e5513-417">結果のバイト数が、整数として返すことのできる最大数を超えています。</span><span class="sxs-lookup"><span data-stu-id="e5513-417">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetEncoder" />
      </Docs>
    </Member>
    <Member MemberName="GetMaxCharCount">
      <MemberSignature Language="C#" Value="public override int GetMaxCharCount (int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetMaxCharCount(int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMaxCharCount (byteCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetMaxCharCount(int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetMaxCharCount : int -&gt; int" Usage="aSCIIEncoding.GetMaxCharCount byteCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteCount"><span data-ttu-id="e5513-418">デコードするバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-418">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="e5513-419">指定したバイト数をデコードすることによって生成される最大文字数を計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-419">Calculates the maximum number of characters produced by decoding the specified number of bytes.</span></span></summary>
        <returns><span data-ttu-id="e5513-420">指定したバイト数をデコードすることによって生成される最大文字数。</span><span class="sxs-lookup"><span data-stu-id="e5513-420">The maximum number of characters produced by decoding the specified number of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-421"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> メソッドは、<xref:System.Text.ASCIIEncoding.GetChars%2A> メソッドが結果の文字を格納するために必要な配列の正確なサイズを計算します。一方、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> メソッドは配列の最大サイズを計算します。</span><span class="sxs-lookup"><span data-stu-id="e5513-421">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method calculates the exact array size required by the <xref:System.Text.ASCIIEncoding.GetChars%2A> method to store the resulting characters, whereas  the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method calculates the maximum array size.</span></span> <span data-ttu-id="e5513-422"><xref:System.Text.ASCIIEncoding.GetCharCount%2A> メソッドは通常、より少ないメモリを割り当てますが、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> メソッドは通常、より高速に実行されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-422">The <xref:System.Text.ASCIIEncoding.GetCharCount%2A> method generally allocates less memory, while the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method generally executes faster.</span></span>  
  
 <span data-ttu-id="e5513-423"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> は、現在選択されている <xref:System.Text.DecoderFallback>の最悪のケースを含む、最悪のケース番号を取得します。</span><span class="sxs-lookup"><span data-stu-id="e5513-423"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> retrieves a worst-case number, including the worst case for the currently selected <xref:System.Text.DecoderFallback>.</span></span> <span data-ttu-id="e5513-424">最大フォールバック長が*n*のデコーダーフォールバックが存在する場合、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> メソッドは*n* \* `byteCount`を返します。</span><span class="sxs-lookup"><span data-stu-id="e5513-424">If a decoder fallback is present that has a maximum fallback length of *n*, the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method returns *n* \* `byteCount`.</span></span>  
  
 <span data-ttu-id="e5513-425"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> に <xref:System.Text.ASCIIEncoding.GetBytes%2A>との関係はありません。</span><span class="sxs-lookup"><span data-stu-id="e5513-425"><xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> has no relation to <xref:System.Text.ASCIIEncoding.GetBytes%2A>.</span></span> <span data-ttu-id="e5513-426"><xref:System.Text.ASCIIEncoding.GetBytes%2A>で使用する同様の機能がアプリケーションに必要な場合は、<xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-426">If your application needs a similar function to use with <xref:System.Text.ASCIIEncoding.GetBytes%2A>, it should use <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5513-427">`GetMaxCharCount(N)` は、必ずしも `N* GetMaxCharCount(1)`と同じ値であるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="e5513-427">`GetMaxCharCount(N)` is not necessarily the same value as `N* GetMaxCharCount(1)`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5513-428">次の例は、<xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> メソッドを使用して、指定されたバイト数をデコードするために必要な最大文字数を計算する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e5513-428">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method to calculate the maximum number of characters needed to decode a specified number of bytes.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/CPP/getmaxcharcount-int32.cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/CS/getmaxcharcount-int32.cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetMaxCharCount Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetMaxCharCount Example/VB/getmaxcharcount-int32.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-429"><paramref name="byteCount" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e5513-429"><paramref name="byteCount" /> is less than zero.</span></span>  
  
<span data-ttu-id="e5513-430">または</span><span class="sxs-lookup"><span data-stu-id="e5513-430">-or-</span></span> 
<span data-ttu-id="e5513-431">結果のバイト数が、整数として返すことのできる最大数を超えています。</span><span class="sxs-lookup"><span data-stu-id="e5513-431">The resulting number of bytes is greater than the maximum number that can be returned as an integer.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetString(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] -&gt; string" Usage="aSCIIEncoding.GetString bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="bytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (byte[] bytes, int byteIndex, int byteCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(unsigned int8[] bytes, int32 byteIndex, int32 byteCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.ASCIIEncoding.GetString(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (bytes As Byte(), byteIndex As Integer, byteCount As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(cli::array &lt;System::Byte&gt; ^ bytes, int byteIndex, int byteCount);" />
      <MemberSignature Language="F#" Value="override this.GetString : byte[] * int * int -&gt; string" Usage="aSCIIEncoding.GetString (bytes, byteIndex, byteCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="byteIndex" Type="System.Int32" />
        <Parameter Name="byteCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes"><span data-ttu-id="e5513-432">デコード対象のバイト シーケンスが格納されたバイト配列。</span><span class="sxs-lookup"><span data-stu-id="e5513-432">The byte array containing the sequence of bytes to decode.</span></span></param>
        <param name="byteIndex"><span data-ttu-id="e5513-433">デコードする最初のバイトのインデックス。</span><span class="sxs-lookup"><span data-stu-id="e5513-433">The index of the first byte to decode.</span></span></param>
        <param name="byteCount"><span data-ttu-id="e5513-434">デコードするバイト数。</span><span class="sxs-lookup"><span data-stu-id="e5513-434">The number of bytes to decode.</span></span></param>
        <summary><span data-ttu-id="e5513-435">バイト配列に格納されているある範囲のバイトを文字列にデコードします。</span><span class="sxs-lookup"><span data-stu-id="e5513-435">Decodes a range of bytes from a byte array into a string.</span></span></summary>
        <returns><span data-ttu-id="e5513-436">指定したバイト シーケンスのデコード結果が格納されている <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="e5513-436">A <see cref="T:System.String" /> containing the results of decoding the specified sequence of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-437">ストリームから読み取られたデータなど、変換されるデータは、連続したブロックでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="e5513-437">Data to be converted, such as data read from a stream, can be available only in sequential blocks.</span></span> <span data-ttu-id="e5513-438">この場合、またはデータ量が非常に大きく、小さいブロックに分割する必要がある場合、アプリケーションでは、<xref:System.Text.ASCIIEncoding.GetDecoder%2A> メソッドまたは <xref:System.Text.ASCIIEncoding.GetEncoder%2A> メソッドによって提供される <xref:System.Text.Decoder> または <xref:System.Text.Encoder> をそれぞれ使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-438">In this case, or if the amount of data is so large that it needs to be divided into smaller blocks, the application should use the <xref:System.Text.Decoder> or the <xref:System.Text.Encoder> provided by the <xref:System.Text.ASCIIEncoding.GetDecoder%2A> method or the <xref:System.Text.ASCIIEncoding.GetEncoder%2A> method, respectively.</span></span>  
  
 <span data-ttu-id="e5513-439"><xref:System.Text.ASCIIEncoding> では、エラー検出は提供されません。</span><span class="sxs-lookup"><span data-stu-id="e5513-439"><xref:System.Text.ASCIIEncoding> does not provide error detection.</span></span> <span data-ttu-id="e5513-440">16進数の0x7F を超えるバイトは、Unicode の疑問符 ("?") としてデコードされます。</span><span class="sxs-lookup"><span data-stu-id="e5513-440">Any byte greater than hexadecimal 0x7F is decoded as the Unicode question mark ("?").</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e5513-441">セキュリティ上の理由により、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、または <xref:System.Text.UTF32Encoding> クラスを使用し、<xref:System.Text.ASCIIEncoding> クラスを使用する代わりにエラー検出を有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-441">For security reasons, you should use the <xref:System.Text.UTF8Encoding>, <xref:System.Text.UnicodeEncoding>, or <xref:System.Text.UTF32Encoding> classes and enable error detection instead of using the <xref:System.Text.ASCIIEncoding> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5513-442">次の例では、<xref:System.Text.ASCIIEncoding.GetString%2A> メソッドを使用して、バイト配列を <xref:System.String>に変換する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e5513-442">The following example demonstrates how to use the <xref:System.Text.ASCIIEncoding.GetString%2A> method to convert a byte array into a <xref:System.String>.</span></span>  
  
 [!code-cpp[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/CPP/getstring-byte[].cpp#1)]
 [!code-csharp[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/CS/getstring-byte[].cs#1)]
 [!code-vb[System.Text.ASCIIEncoding.GetString1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.ASCIIEncoding.GetString1 Example/VB/getstring-byte[].vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e5513-443"><paramref name="bytes" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-443"><paramref name="bytes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="e5513-444"><paramref name="index" /> または <paramref name="count" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="e5513-444"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="e5513-445">または</span><span class="sxs-lookup"><span data-stu-id="e5513-445">-or-</span></span> 
 <span data-ttu-id="e5513-446"><paramref name="index" /> および <paramref name="count" /> は <paramref name="bytes" /> において有効な範囲を表していません。</span><span class="sxs-lookup"><span data-stu-id="e5513-446"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in <paramref name="bytes" />.</span></span></exception>
        <exception cref="T:System.Text.DecoderFallbackException"><span data-ttu-id="e5513-447">フォールバックが発生しました (詳細については「<see href="~/docs/standard/base-types/character-encoding.md">.NET での文字エンコード</see>」を参照)</span><span class="sxs-lookup"><span data-stu-id="e5513-447">A fallback occurred (for more information, see <see href="~/docs/standard/base-types/character-encoding.md">Character Encoding in .NET</see>)</span></span> 
<span data-ttu-id="e5513-448">および</span><span class="sxs-lookup"><span data-stu-id="e5513-448">-and-</span></span> 
 <span data-ttu-id="e5513-449"><see cref="P:System.Text.Encoding.DecoderFallback" /> が <see cref="T:System.Text.DecoderExceptionFallback" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e5513-449"><see cref="P:System.Text.Encoding.DecoderFallback" /> is set to <see cref="T:System.Text.DecoderExceptionFallback" />.</span></span></exception>
        <altmember cref="M:System.Text.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetDecoder" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsSingleByte">
      <MemberSignature Language="C#" Value="public override bool IsSingleByte { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSingleByte" />
      <MemberSignature Language="DocId" Value="P:System.Text.ASCIIEncoding.IsSingleByte" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsSingleByte As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSingleByte { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSingleByte : bool" Usage="System.Text.ASCIIEncoding.IsSingleByte" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Encoding.Extensions</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5513-450">現在のエンコーディングが 1 バイトのコード ポイントを使用するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e5513-450">Gets a value indicating whether the current encoding uses single-byte code points.</span></span></summary>
        <value><span data-ttu-id="e5513-451">このプロパティは常に <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="e5513-451">This property is always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5513-452"><xref:System.Text.ASCIIEncoding.IsSingleByte%2A> プロパティを使用して、エンコード操作のバイト配列のサイズとデコード操作の文字配列のサイズを決定する代わりに (たとえば、バイト配列のサイズが <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> \* エンコードされる文字の数になるように)、エンコード操作の場合は <xref:System.Text.ASCIIEncoding.GetByteCount%2A> または <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> メソッドを、デコード操作の場合は <xref:System.Text.ASCIIEncoding.GetCharCount%2A> または <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e5513-452">Instead of using the <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> property to determine the size of a byte array for encoding operations  and the size of a character array for decoding operations (for example, so that the size of the byte array is <xref:System.Text.ASCIIEncoding.IsSingleByte%2A> \* the number of characters to be encoded), you should call the <xref:System.Text.ASCIIEncoding.GetByteCount%2A> or <xref:System.Text.ASCIIEncoding.GetMaxByteCount%2A> method for encoding operations and the <xref:System.Text.ASCIIEncoding.GetCharCount%2A> or <xref:System.Text.ASCIIEncoding.GetMaxCharCount%2A> method for decoding operations.</span></span> <span data-ttu-id="e5513-453">これらのメソッドは、必要な配列のサイズを計算するときに、<xref:System.Text.ASCIIEncoding> オブジェクトの置換フォールバック戦略を考慮します。</span><span class="sxs-lookup"><span data-stu-id="e5513-453">These methods takes the <xref:System.Text.ASCIIEncoding> object's replacement fallback strategy into account when calculating the required array size.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <altmember cref="M:System.Text.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
      </Docs>
    </Member>
  </Members>
</Type>
