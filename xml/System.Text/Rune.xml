<Type Name="Rune" FullName="System.Text.Rune">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ccd800c394b1cec987d6e6d9159e72f5b0385984" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75118660" /></Metadata><TypeSignature Language="C#" Value="public struct Rune : IComparable&lt;System.Text.Rune&gt;, IEquatable&lt;System.Text.Rune&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit Rune extends System.ValueType implements class System.IComparable`1&lt;valuetype System.Text.Rune&gt;, class System.IEquatable`1&lt;valuetype System.Text.Rune&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Text.Rune" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rune&#xA;Implements IComparable(Of Rune), IEquatable(Of Rune)" />
  <TypeSignature Language="C++ CLI" Value="public value class Rune : IComparable&lt;System::Text::Rune&gt;, IEquatable&lt;System::Text::Rune&gt;" />
  <TypeSignature Language="F#" Value="type Rune = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Text.Rune&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Text.Rune&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1b477-101">Unicode スカラー値 ([ U+0000..U+D7FF ] (最初と最後の要素を含む) または [ U+E000..U+10FFFF ] (最初と最後の要素を含む)) を表します。</span><span class="sxs-lookup"><span data-stu-id="1b477-101">Represents a Unicode scalar value ([ U+0000..U+D7FF ], inclusive; or [ U+E000..U+10FFFF ], inclusive).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-102">この型のコンストラクターと変換演算子によって入力が検証されるため、基になる <xref:System.Text.Rune> インスタンスが整形式であると仮定して、コンシューマーは Api を呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="1b477-102">This type's constructors and conversion operators validate the input, so consumers can call the APIs assuming that the underlying <xref:System.Text.Rune> instance is well-formed.</span></span>

          ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(char ch);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : char -&gt; System.Text.Rune" Usage="new System.Text.Rune ch" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="1b477-103">UTF-16 コード単位。</span><span class="sxs-lookup"><span data-stu-id="1b477-103">A UTF-16 code unit.</span></span></param>
        <summary><span data-ttu-id="1b477-104">指定された UTF-16 コード単位から <see cref="T:System.Text.Rune" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="1b477-104">Creates a <see cref="T:System.Text.Rune" /> from the provided UTF-16 code unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b477-105"><paramref name="ch" /> は、UTF-16 サロゲート コード ポイント (U+D800..U+DFFF、最初と最後の要素を含む) を表します。</span><span class="sxs-lookup"><span data-stu-id="1b477-105"><paramref name="ch" /> represents a UTF-16 surrogate code point (U+D800..U+DFFF, inclusive).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(int value);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : int -&gt; System.Text.Rune" Usage="new System.Text.Rune value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-106">Unicode スカラー値。</span><span class="sxs-lookup"><span data-stu-id="1b477-106">A Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="1b477-107">Unicode スカラー値を表す、指定された 32 ビット整数から <see cref="T:System.Text.Rune" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="1b477-107">Creates a <see cref="T:System.Text.Rune" /> from the specified 32-bit integer that represents a Unicode scalar value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b477-108"><paramref name="value" /> は Unicode スカラー値を表しません。</span><span class="sxs-lookup"><span data-stu-id="1b477-108"><paramref name="value" /> does not represent a Unicode scalar value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : uint32 -&gt; System.Text.Rune" Usage="new System.Text.Rune value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-109">Unicode スカラー値。</span><span class="sxs-lookup"><span data-stu-id="1b477-109">A Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="1b477-110">Unicode スカラー値を表す、指定された符号なし 32 ビット整数から <see cref="T:System.Text.Rune" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="1b477-110">Creates a <see cref="T:System.Text.Rune" /> from the specified 32-bit unsigned integer that represents a Unicode scalar value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b477-111"><paramref name="value" /> は Unicode スカラー値を表しません。</span><span class="sxs-lookup"><span data-stu-id="1b477-111"><paramref name="value" /> does not represent a Unicode scalar value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rune (char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char highSurrogate, char lowSurrogate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.#ctor(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (highSurrogate As Char, lowSurrogate As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rune(char highSurrogate, char lowSurrogate);" />
      <MemberSignature Language="F#" Value="new System.Text.Rune : char * char -&gt; System.Text.Rune" Usage="new System.Text.Rune (highSurrogate, lowSurrogate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="1b477-112">サロゲート ペアの上位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="1b477-112">The high surrogate of the surrogate pair.</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="1b477-113">サロゲート ペアの下位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="1b477-113">The low surrogate of the surrogate pair.</span></span></param>
        <summary><span data-ttu-id="1b477-114">指定された UTF-16 サロゲート ペアから <see cref="T:System.Text.Rune" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="1b477-114">Creates a <see cref="T:System.Text.Rune" /> from the provided UTF-16 surrogate pair.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b477-115"><paramref name="highSurrogate" /> は UTF-16 上位サロゲート コード ポイントを表しません。</span><span class="sxs-lookup"><span data-stu-id="1b477-115"><paramref name="highSurrogate" /> does not represent a UTF-16 high surrogate code point.</span></span>
          
<span data-ttu-id="1b477-116">- または -</span><span class="sxs-lookup"><span data-stu-id="1b477-116">-or-</span></span>

<span data-ttu-id="1b477-117"><paramref name="lowSurrogate" /> は UTF-16 下位サロゲート コード ポイントを表しません。</span><span class="sxs-lookup"><span data-stu-id="1b477-117"><paramref name="lowSurrogate" /> does not represent a UTF-16 low surrogate code point.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Text.Rune other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Text.Rune other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.CompareTo(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Rune) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Text::Rune other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : System.Text.Rune -&gt; int&#xA;override this.CompareTo : System.Text.Rune -&gt; int" Usage="rune.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="1b477-118">現在のインスタンスと比較するインスタンス。</span><span class="sxs-lookup"><span data-stu-id="1b477-118">The instance to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="1b477-119">現在のインスタンスを、指定された <see cref="T:System.Text.Rune" /> インスタンスと比較します。</span><span class="sxs-lookup"><span data-stu-id="1b477-119">Compares the current instance to the specified <see cref="T:System.Text.Rune" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1b477-120">並べ替え順序において、<paramref name="other" /> との関係でこのインスタンスの位置を示す符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="1b477-120">A signed integer indicating the position of this instance in the sort order in relation to <paramref name="other" />:</span></span> <br /><span data-ttu-id="1b477-121">- 0 未満:このインスタンスの位置が <paramref name="other" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="1b477-121">- Less than zero: This instance precedes <paramref name="other" />.</span></span> 
<br /><span data-ttu-id="1b477-122">- ゼロ:並べ替え順序においてインスタンスの位置が <paramref name="other" /> と同じです。</span><span class="sxs-lookup"><span data-stu-id="1b477-122">- Zero: The instance has the same position in the sort order as <paramref name="other" />.</span></span>
<br /><span data-ttu-id="1b477-123">- 0 より大きい:このインスタンスの位置が <paramref name="other" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="1b477-123">- Greater than zero: This instance follows <paramref name="other" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf16">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf16 (ReadOnlySpan&lt;char&gt; source, out System.Text.Rune result, out int charsConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf16(valuetype System.ReadOnlySpan`1&lt;char&gt; source, [out] valuetype System.Text.Rune&amp; result, [out] int32&amp; charsConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf16 (source As ReadOnlySpan(Of Char), ByRef result As Rune, ByRef charsConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf16(ReadOnlySpan&lt;char&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % result, [Runtime::InteropServices::Out] int % charsConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf16 : ReadOnlySpan&lt;char&gt; * Rune * int -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeFromUtf16 (source, result, charsConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="charsConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="1b477-124">読み取り専用 UTF-16 文字スパン。</span><span class="sxs-lookup"><span data-stu-id="1b477-124">A read-only UTF-16 character span.</span></span></param>
        <param name="result"><span data-ttu-id="1b477-125">このメソッドから制御が戻るときに、デコードされたルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-125">When this method returns, the decoded rune.</span></span></param>
        <param name="charsConsumed"><span data-ttu-id="1b477-126">このメソッドから制御が戻るときに、ルーンを作成するために読み取られた文字数。</span><span class="sxs-lookup"><span data-stu-id="1b477-126">When this method returns, the number of characters read to create the rune.</span></span></param>
        <summary><span data-ttu-id="1b477-127">指定された UTF-16 ソース バッファーの先頭で <see cref="T:System.Text.Rune" /> を復号します。</span><span class="sxs-lookup"><span data-stu-id="1b477-127">Decodes the <see cref="T:System.Text.Rune" /> at the beginning of the provided UTF-16 source buffer.</span></span></summary>
        <returns><span data-ttu-id="1b477-128">UTF-16 でエンコードされた有効なスカラー値でソース バッファーが始まる場合、<see cref="F:System.Buffers.OperationStatus.Done" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-128"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer begins with a valid UTF-16 encoded scalar value.</span></span> <span data-ttu-id="1b477-129">結果として、復号された <see cref="T:System.Text.Rune" /> が <paramref name="result" /> に含まれます。<paramref name="charsConsumed" /> には <see cref="T:System.Text.Rune" /> をエンコードする目的で入力バッファーで使用される <see cref="T:System.Char" /> 値の数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-129"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="1b477-130">ソース バッファーが空か、スタンドアロンの UTF-16 上位サロゲート文字のみが含まれる場合、<see cref="F:System.Buffers.OperationStatus.NeedMoreData" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-130"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-16 high surrogate character.</span></span> <span data-ttu-id="1b477-131">結果として、<paramref name="result" /> に <see cref="P:System.Text.Rune.ReplacementChar" /> が含まれ、<paramref name="charsConsumed" /> には入力バッファーの長さが含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-131"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="1b477-132">UTF-16 でエンコードされた、形式が正しくないスカラー値でソース バッファーが始まる場合、<see cref="F:System.Buffers.OperationStatus.InvalidData" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-132"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer begins with an ill-formed UTF-16 encoded scalar value.</span></span> <span data-ttu-id="1b477-133">結果として、<paramref name="result" /> に <see cref="P:System.Text.Rune.ReplacementChar" /> が含まれ、<paramref name="charsConsumed" /> には形式が正しくないシーケンスをエンコードした <see cref="T:System.Char" /> 値の数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-133"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used to encode the ill-formed sequence.</span></span>
<span data-ttu-id="1b477-134">.</span><span class="sxs-lookup"><span data-stu-id="1b477-134">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-135">一般的な規則では、ループ内でこのメソッドを呼び出し、ループの各反復処理の `charsConsumed` 要素によって、`source` バッファーをスライスします。</span><span class="sxs-lookup"><span data-stu-id="1b477-135">The general convention is to call this method in a loop, slicing the `source` buffer by `charsConsumed` elements on each iteration of the loop.</span></span> <span data-ttu-id="1b477-136">ループの各反復処理では、データが正常にデコードされた場合は、実際のスカラー値が `result` に含まれます。データが正常にデコードされなかった場合は <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-136">On each iteration of the loop, `result` contains the real scalar value if the data was successfully decoded, or it contains <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> if the data was not successfully decoded.</span></span> <span data-ttu-id="1b477-137">このパターンを使用すると、ループの反復処理中に、無効なシーケンスを自動的に U + FFFD で置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="1b477-137">This pattern provides convenient automatic U+FFFD substitution of invalid sequences while iterating through the loop.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeFromUtf8 (ReadOnlySpan&lt;byte&gt; source, out System.Text.Rune result, out int bytesConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Text.Rune&amp; result, [out] int32&amp; bytesConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeFromUtf8 (source As ReadOnlySpan(Of Byte), ByRef result As Rune, ByRef bytesConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeFromUtf8(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % result, [Runtime::InteropServices::Out] int % bytesConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeFromUtf8 : ReadOnlySpan&lt;byte&gt; * Rune * int -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeFromUtf8 (source, result, bytesConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="1b477-138">UTF-8 でエンコードされた読み取り専用バイト スパン。</span><span class="sxs-lookup"><span data-stu-id="1b477-138">A read-only UTF-8 encoded byte span.</span></span></param>
        <param name="result"><span data-ttu-id="1b477-139">このメソッドから制御が戻るときに、デコードされたルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-139">When this method returns, the decoded rune.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="1b477-140">このメソッドから制御が戻るときに、ルーンを作成するために読み取られたバイト数。</span><span class="sxs-lookup"><span data-stu-id="1b477-140">When this method returns, the number of bytes read to create the rune.</span></span></param>
        <summary><span data-ttu-id="1b477-141">指定された UTF-8 ソース バッファーの先頭で <see cref="T:System.Text.Rune" /> を復号します。</span><span class="sxs-lookup"><span data-stu-id="1b477-141">Decodes the <see cref="T:System.Text.Rune" /> at the beginning of the provided UTF-8 source buffer.</span></span></summary>
        <returns><span data-ttu-id="1b477-142">UTF-8 でエンコードされた有効なスカラー値でソース バッファーが始まる場合、<see cref="F:System.Buffers.OperationStatus.Done" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-142"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer begins with a valid UTF-8 encoded scalar value.</span></span> <span data-ttu-id="1b477-143">結果として、復号された <see cref="T:System.Text.Rune" /> が <paramref name="result" /> に含まれます。<paramref name="bytesConsumed" /> には <see cref="T:System.Text.Rune" /> をエンコードする目的で入力バッファーで使用される <see cref="T:System.Byte" /> 値の数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-143"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="1b477-144">ソース バッファーが空か、スタンドアロンの UTF-8 上位サロゲート文字のみが含まれる場合、<see cref="F:System.Buffers.OperationStatus.NeedMoreData" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-144"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-8 high surrogate character.</span></span> <span data-ttu-id="1b477-145">結果として、<paramref name="result" /> に <see cref="P:System.Text.Rune.ReplacementChar" /> が含まれ、<paramref name="bytesConsumed" /> には入力バッファーの長さが含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-145"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="1b477-146">UTF-8 でエンコードされた、形式が正しくないスカラー値で入力バッファーが始まる場合、<see cref="F:System.Buffers.OperationStatus.InvalidData" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-146"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer begins with an ill-formed UTF-8 encoded scalar value.</span></span> <span data-ttu-id="1b477-147">結果として、<paramref name="result" /> に <see cref="P:System.Text.Rune.ReplacementChar" /> が含まれ、<paramref name="bytesConsumed" /> には形式が正しくないシーケンスをエンコードする目的で入力バッファーで使用された <see cref="T:System.Byte" /> 値の数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-147"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the ill-formed sequence.</span></span>
<span data-ttu-id="1b477-148">.</span><span class="sxs-lookup"><span data-stu-id="1b477-148">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-149">一般的な規則では、ループ内でこのメソッドを呼び出し、ループの各反復処理の `bytesConsumed` 要素によって、`source` バッファーをスライスします。</span><span class="sxs-lookup"><span data-stu-id="1b477-149">The general convention is to call this method in a loop, slicing the `source` buffer by `bytesConsumed` elements on each iteration of the loop.</span></span> <span data-ttu-id="1b477-150">ループの各反復処理では、`result` が正常にデコードされた場合は実際のスカラー値が含まれ、データが正常にデコードされなかった場合は <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-150">On each iteration of the loop, `result` contains the real scalar value if successfully decoded, or it contains <xref:System.Text.Rune.ReplacementChar?displayProperty=nameWithType> if the data could not be successfully decoded.</span></span> <span data-ttu-id="1b477-151">このパターンを使用すると、ループの反復処理中に、無効なシーケンスを自動的に U + FFFD で置き換えることができます。</span><span class="sxs-lookup"><span data-stu-id="1b477-151">This pattern provides convenient automatic U+FFFD substitution of invalid sequences while iterating through the loop.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeLastFromUtf16">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeLastFromUtf16 (ReadOnlySpan&lt;char&gt; source, out System.Text.Rune result, out int charsConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeLastFromUtf16(valuetype System.ReadOnlySpan`1&lt;char&gt; source, [out] valuetype System.Text.Rune&amp; result, [out] int32&amp; charsConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeLastFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeLastFromUtf16 (source As ReadOnlySpan(Of Char), ByRef result As Rune, ByRef charsConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeLastFromUtf16(ReadOnlySpan&lt;char&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % result, [Runtime::InteropServices::Out] int % charsConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeLastFromUtf16 : ReadOnlySpan&lt;char&gt; * Rune * int -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeLastFromUtf16 (source, result, charsConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="charsConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="1b477-152">UTF-16 でエンコードされた読み取り専用文字スパン。</span><span class="sxs-lookup"><span data-stu-id="1b477-152">A read-only UTF-16 encoded character span.</span></span></param>
        <param name="result"><span data-ttu-id="1b477-153">このメソッドから制御が戻るときに、デコードされたルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-153">When this method returns, the decoded rune.</span></span></param>
        <param name="charsConsumed"><span data-ttu-id="1b477-154">このメソッドから制御が戻るときに、ルーンを作成するために読み取られたバイト数。</span><span class="sxs-lookup"><span data-stu-id="1b477-154">When this method returns, the number of bytes read to create the rune.</span></span></param>
        <summary><span data-ttu-id="1b477-155">指定された UTF-16 ソース バッファーの末尾で <see cref="T:System.Text.Rune" /> を復号します。</span><span class="sxs-lookup"><span data-stu-id="1b477-155">Decodes the <see cref="T:System.Text.Rune" /> at the end of the provided UTF-16 source buffer.</span></span></summary>
        <returns><span data-ttu-id="1b477-156">UTF-16 でエンコードされた有効なスカラー値でソース バッファーが始まる場合、<see cref="F:System.Buffers.OperationStatus.Done" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-156"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer begins with a valid UTF-16 encoded scalar value.</span></span> <span data-ttu-id="1b477-157">結果として、復号された <see cref="T:System.Text.Rune" /> が <paramref name="result" /> に含まれます。<paramref name="charsConsumed" /> には <see cref="T:System.Text.Rune" /> をエンコードする目的で入力バッファーで使用される <see cref="T:System.Char" /> 値の数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-157"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="1b477-158">ソース バッファーが空か、スタンドアロンの UTF-16 上位サロゲート文字のみが含まれる場合、<see cref="F:System.Buffers.OperationStatus.NeedMoreData" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-158"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-16 high surrogate character.</span></span> <span data-ttu-id="1b477-159">結果として、<paramref name="result" /> に <see cref="P:System.Text.Rune.ReplacementChar" /> が含まれ、<paramref name="charsConsumed" /> には入力バッファーの長さが含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-159"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="1b477-160">UTF-16 でエンコードされた、形式が正しくないスカラー値でソース バッファーが始まる場合、<see cref="F:System.Buffers.OperationStatus.InvalidData" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-160"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer begins with an ill-formed UTF-16 encoded scalar value.</span></span> <span data-ttu-id="1b477-161">結果として、<paramref name="result" /> に <see cref="P:System.Text.Rune.ReplacementChar" /> が含まれ、<paramref name="charsConsumed" /> には形式が正しくないシーケンスをエンコードした <see cref="T:System.Char" /> 値の数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-161"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="charsConsumed" /> contains the number of <see cref="T:System.Char" /> values used to encode the ill-formed sequence.</span></span>
<span data-ttu-id="1b477-162">.</span><span class="sxs-lookup"><span data-stu-id="1b477-162">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-163">このメソッドは <xref:System.Text.Rune.DecodeFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)>とよく似ていますが、呼び出し元は前方ではなく逆方向にループすることができます。</span><span class="sxs-lookup"><span data-stu-id="1b477-163">This method is very similar to <xref:System.Text.Rune.DecodeFromUtf16(System.ReadOnlySpan{System.Char},System.Text.Rune@,System.Int32@)>, except it allows the caller to loop backward instead of forward.</span></span> <span data-ttu-id="1b477-164">一般的な呼び出し規則では、ループの各反復処理で、呼び出し元が `source` バッファーの最後の `charsConsumed` 要素からスライスする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b477-164">The typical calling convention is that on each iteration of the loop, the caller should slice off the final `charsConsumed` elements of the `source` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeLastFromUtf8">
      <MemberSignature Language="C#" Value="public static System.Buffers.OperationStatus DecodeLastFromUtf8 (ReadOnlySpan&lt;byte&gt; source, out System.Text.Rune value, out int bytesConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Buffers.OperationStatus DecodeLastFromUtf8(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source, [out] valuetype System.Text.Rune&amp; value, [out] int32&amp; bytesConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.DecodeLastFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeLastFromUtf8 (source As ReadOnlySpan(Of Byte), ByRef value As Rune, ByRef bytesConsumed As Integer) As OperationStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::OperationStatus DecodeLastFromUtf8(ReadOnlySpan&lt;System::Byte&gt; source, [Runtime::InteropServices::Out] System::Text::Rune % value, [Runtime::InteropServices::Out] int % bytesConsumed);" />
      <MemberSignature Language="F#" Value="static member DecodeLastFromUtf8 : ReadOnlySpan&lt;byte&gt; * Rune * int -&gt; System.Buffers.OperationStatus" Usage="System.Text.Rune.DecodeLastFromUtf8 (source, value, bytesConsumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.OperationStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="value" Type="System.Text.Rune" RefType="out" />
        <Parameter Name="bytesConsumed" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="1b477-165">UTF-8 でエンコードされた読み取り専用バイト スパン。</span><span class="sxs-lookup"><span data-stu-id="1b477-165">A read-only UTF-8 encoded byte span.</span></span></param>
        <param name="value"><span data-ttu-id="1b477-166">このメソッドから制御が戻るときに、デコードされたルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-166">When this method returns, the decoded rune.</span></span></param>
        <param name="bytesConsumed"><span data-ttu-id="1b477-167">このメソッドから制御が戻るときに、ルーンを作成するために読み取られたバイト数。</span><span class="sxs-lookup"><span data-stu-id="1b477-167">When this method returns, the number of bytes read to create the rune.</span></span></param>
        <summary><span data-ttu-id="1b477-168">指定された UTF-8 ソース バッファーの末尾で <see cref="T:System.Text.Rune" /> を復号します。</span><span class="sxs-lookup"><span data-stu-id="1b477-168">Decodes the <see cref="T:System.Text.Rune" /> at the end of the provided UTF-8 source buffer.</span></span></summary>
        <returns><span data-ttu-id="1b477-169">UTF-8 でエンコードされた有効なスカラー値でソース バッファーが終わる場合、<see cref="F:System.Buffers.OperationStatus.Done" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-169"><see cref="F:System.Buffers.OperationStatus.Done" /> if the source buffer ends with a valid UTF-8 encoded scalar value.</span></span> <span data-ttu-id="1b477-170">結果として、復号された <see cref="T:System.Text.Rune" /> が <paramref name="result" /> に含まれます。<paramref name="bytesConsumed" /> には <see cref="T:System.Text.Rune" /> をエンコードする目的で入力バッファーで使用される <see cref="T:System.Byte" /> 値の数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-170"><paramref name="result" /> then contains the decoded <see cref="T:System.Text.Rune" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the <see cref="T:System.Text.Rune" />.</span></span>
            
<span data-ttu-id="1b477-171">ソース バッファーが空か、スタンドアロンの UTF-8 上位サロゲート文字のみが含まれる場合、<see cref="F:System.Buffers.OperationStatus.NeedMoreData" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-171"><see cref="F:System.Buffers.OperationStatus.NeedMoreData" /> if the source buffer is empty or contains only a standalone UTF-8 high surrogate character.</span></span> <span data-ttu-id="1b477-172">結果として、<paramref name="result" /> に <see cref="P:System.Text.Rune.ReplacementChar" /> が含まれ、<paramref name="bytesConsumed" /> には入力バッファーの長さが含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-172"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the length of the input buffer.</span></span>
            
<span data-ttu-id="1b477-173">UTF-8 でエンコードされた、形式が正しくないスカラー値でソース バッファーが終わる場合、<see cref="F:System.Buffers.OperationStatus.InvalidData" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-173"><see cref="F:System.Buffers.OperationStatus.InvalidData" /> if the source buffer ends with an ill-formed UTF-8 encoded scalar value.</span></span> <span data-ttu-id="1b477-174">結果として、<paramref name="result" /> に <see cref="P:System.Text.Rune.ReplacementChar" /> が含まれ、<paramref name="bytesConsumed" /> には形式が正しくないシーケンスをエンコードする目的で入力バッファーで使用された <see cref="T:System.Byte" /> 値の数が含まれます。</span><span class="sxs-lookup"><span data-stu-id="1b477-174"><paramref name="result" /> then contains <see cref="P:System.Text.Rune.ReplacementChar" />, and <paramref name="bytesConsumed" /> contains the number of <see cref="T:System.Byte" /> values used in the input buffer to encode the ill-formed sequence.</span></span>
<span data-ttu-id="1b477-175">.</span><span class="sxs-lookup"><span data-stu-id="1b477-175">.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-176">このメソッドは <xref:System.Text.Rune.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)>とよく似ていますが、呼び出し元は前方ではなく逆方向にループすることができます。</span><span class="sxs-lookup"><span data-stu-id="1b477-176">This method is very similar to <xref:System.Text.Rune.DecodeFromUtf8(System.ReadOnlySpan{System.Byte},System.Text.Rune@,System.Int32@)>, except it allows the caller to loop backward instead of forward.</span></span> <span data-ttu-id="1b477-177">一般的な呼び出し規則では、ループの各反復処理で、呼び出し元が `source` バッファーの最後の `bytesConsumed` 要素からスライスする必要があります。</span><span class="sxs-lookup"><span data-stu-id="1b477-177">The typical calling convention is that on each iteration of the loop, the caller should slice off the final `bytesConsumed` elements of the `source` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf16">
      <MemberSignature Language="C#" Value="public int EncodeToUtf16 (Span&lt;char&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EncodeToUtf16(valuetype System.Span`1&lt;char&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.EncodeToUtf16(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeToUtf16 (destination As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EncodeToUtf16(Span&lt;char&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.EncodeToUtf16 : Span&lt;char&gt; -&gt; int" Usage="rune.EncodeToUtf16 destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="1b477-178">UTF-16 として、この値の書き込み先となるバッファー。</span><span class="sxs-lookup"><span data-stu-id="1b477-178">The buffer to which to write this value as UTF-16.</span></span></param>
        <summary><span data-ttu-id="1b477-179">この <see cref="T:System.Text.Rune" /> を UTF-16 ターゲット バッファーにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="1b477-179">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-16 destination buffer.</span></span></summary>
        <returns><span data-ttu-id="1b477-180"><paramref name="destination" /> に書き込まれた <see cref="T:System.Char" /> 値の数。</span><span class="sxs-lookup"><span data-stu-id="1b477-180">The number of <see cref="T:System.Char" /> values written to <paramref name="destination" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1b477-181"><paramref name="destination" /> は出力を保持できるほど大きくありません。</span><span class="sxs-lookup"><span data-stu-id="1b477-181"><paramref name="destination" /> is not large enough to hold the output.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncodeToUtf8">
      <MemberSignature Language="C#" Value="public int EncodeToUtf8 (Span&lt;byte&gt; destination);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EncodeToUtf8(valuetype System.Span`1&lt;unsigned int8&gt; destination) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.EncodeToUtf8(System.Span{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function EncodeToUtf8 (destination As Span(Of Byte)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EncodeToUtf8(Span&lt;System::Byte&gt; destination);" />
      <MemberSignature Language="F#" Value="member this.EncodeToUtf8 : Span&lt;byte&gt; -&gt; int" Usage="rune.EncodeToUtf8 destination" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="1b477-182">UTF-8 として、この値の書き込み先となるバッファー。</span><span class="sxs-lookup"><span data-stu-id="1b477-182">The buffer to which to write this value as UTF-8.</span></span></param>
        <summary><span data-ttu-id="1b477-183">この <see cref="T:System.Text.Rune" /> をエンコードし、UTF-8 ターゲット バッファーに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="1b477-183">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-8 destination buffer.</span></span></summary>
        <returns><span data-ttu-id="1b477-184"><paramref name="destination" /> に書き込まれた <see cref="T:System.Byte" /> 値の数。</span><span class="sxs-lookup"><span data-stu-id="1b477-184">The number of <see cref="T:System.Byte" /> values written to <paramref name="destination" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1b477-185"><paramref name="destination" /> は出力を保持できるほど大きくありません。</span><span class="sxs-lookup"><span data-stu-id="1b477-185"><paramref name="destination" /> is not large enough to hold the output.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="rune.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="1b477-186">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1b477-186">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="1b477-187">現在のインスタンスと、指定されたオブジェクトが等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-187">Returns a value that indicates whether the current instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="1b477-188"><paramref name="obj" /> の型が <see cref="T:System.Text.Rune" /> で、現在のインスタンスに等しければ <see langword="true" />。それ以外の場合は、<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-188"><see langword="true" /> if <paramref name="obj" /> is of type <see cref="T:System.Text.Rune" /> and is equal to the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Text.Rune other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Text.Rune other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.Equals(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Text::Rune other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Text.Rune -&gt; bool" Usage="rune.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="1b477-189">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1b477-189">The object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="1b477-190">現在のインスタンスと指定されたルーンが等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-190">Returns a value that indicates whether the current instance and a specified rune are equal.</span></span></summary>
        <returns><span data-ttu-id="1b477-191">現在のインスタンスと <paramref name="other" /> が等しい場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-191"><see langword="true" /> if the current instance and <paramref name="other" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="rune.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b477-192">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-192">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="1b477-193">対象のインスタンスのハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="1b477-193">The hash code for this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumericValue">
      <MemberSignature Language="C#" Value="public static double GetNumericValue (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetNumericValue(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetNumericValue(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumericValue (value As Rune) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetNumericValue(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member GetNumericValue : System.Text.Rune -&gt; double" Usage="System.Text.Rune.GetNumericValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-194">数値を取得する対象のルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-194">The rune for which to get the numeric value.</span></span></param>
        <summary><span data-ttu-id="1b477-195">指定されたルーンに関連付けられている数値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1b477-195">Gets the numeric value associated with the specified rune.</span></span></summary>
        <returns><span data-ttu-id="1b477-196"><paramref name="value" /> に関連付けられている数値。または、<paramref name="value" /> が数字を表していない場合は -1。</span><span class="sxs-lookup"><span data-stu-id="1b477-196">The numeric value associated with <paramref name="value" />, or -1 if <paramref name="value" /> doesn't represent a numeric character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-197">このメソッドには、<xref:System.Globalization.CharUnicodeInfo.GetNumericValue%2A?displayProperty=nameWithType>と同じ動作があります。</span><span class="sxs-lookup"><span data-stu-id="1b477-197">This method has behavior equivalent to <xref:System.Globalization.CharUnicodeInfo.GetNumericValue%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1b477-198">詳細については、こちらのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-198">Refer to that documentation for more information.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRuneAt">
      <MemberSignature Language="C#" Value="public static System.Text.Rune GetRuneAt (string input, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune GetRuneAt(string input, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetRuneAt(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRuneAt (input As String, index As Integer) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune GetRuneAt(System::String ^ input, int index);" />
      <MemberSignature Language="F#" Value="static member GetRuneAt : string * int -&gt; System.Text.Rune" Usage="System.Text.Rune.GetRuneAt (input, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1b477-199">ルーン作成の元になる文字列。</span><span class="sxs-lookup"><span data-stu-id="1b477-199">The string from which to create the rune.</span></span></param>
        <param name="index"><span data-ttu-id="1b477-200"><paramref name="input" /> において、ルーンの作成を開始する位置。</span><span class="sxs-lookup"><span data-stu-id="1b477-200">The starting position in <paramref name="input" /> at which to create the rune.</span></span></param>
        <summary><span data-ttu-id="1b477-201">文字列において指定された位置から始まる <see cref="T:System.Text.Rune" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="1b477-201">Gets the <see cref="T:System.Text.Rune" /> that begins at a specified position in a string.</span></span></summary>
        <returns><span data-ttu-id="1b477-202">指定された <paramref name="index" /> にある <paramref name="input" /> から取得されたルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-202">The rune obtained from <paramref name="input" /> at the specified <paramref name="index" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b477-203"><paramref name="input" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="1b477-203"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1b477-204"><paramref name="index" /> は、<paramref name="input" /> において、有効なスカラー値の開始を参照しません。</span><span class="sxs-lookup"><span data-stu-id="1b477-204"><paramref name="index" /> does not reference the start of a valid scalar value in <paramref name="input" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b477-205"><paramref name="index" /> が <paramref name="input" /> の範囲の外にあります。</span><span class="sxs-lookup"><span data-stu-id="1b477-205"><paramref name="index" /> is outside the range of <paramref name="input" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeCategory">
      <MemberSignature Language="C#" Value="public static System.Globalization.UnicodeCategory GetUnicodeCategory (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Globalization.UnicodeCategory GetUnicodeCategory(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnicodeCategory (value As Rune) As UnicodeCategory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Globalization::UnicodeCategory GetUnicodeCategory(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member GetUnicodeCategory : System.Text.Rune -&gt; System.Globalization.UnicodeCategory" Usage="System.Text.Rune.GetUnicodeCategory value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.UnicodeCategory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-206">Unicode カテゴリを取得する対象のルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-206">The rune for which to get the Unicode category.</span></span></param>
        <summary><span data-ttu-id="1b477-207">指定されたルーンに関連付けられている Unicode カテゴリを取得します。</span><span class="sxs-lookup"><span data-stu-id="1b477-207">Gets the Unicode category associated with the specified rune.</span></span></summary>
        <returns><span data-ttu-id="1b477-208"><paramref name="value" /> に関連付けられている Unicode カテゴリ。</span><span class="sxs-lookup"><span data-stu-id="1b477-208">The Unicode category associated with <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-209">このメソッドには、<xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>と同じ動作があります。</span><span class="sxs-lookup"><span data-stu-id="1b477-209">This method has behavior equivalent to <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1b477-210">詳細については、こちらのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-210">Refer to that documentation for more information.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAscii">
      <MemberSignature Language="C#" Value="public bool IsAscii { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAscii" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.IsAscii" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAscii As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAscii { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAscii : bool" Usage="System.Text.Rune.IsAscii" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b477-211">この <see cref="T:System.Text.Rune" /> に関連付けられているスカラー値が ASCII エンコード範囲内であるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1b477-211">Gets a value that indicates whether the scalar value associated with this <see cref="T:System.Text.Rune" /> is within the ASCII encoding range.</span></span></summary>
        <value><span data-ttu-id="1b477-212">関連付けられているスカラー値が ASCII エンコード範囲 ([U + 0000.. U + 007F]) 内にあり、1つの UTF-8 コード単位で表現可能な場合は、<see langword="true" /> ます。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="1b477-212"><see langword="true" /> if the scalar value associated is within the ASCII encoding range ([ U+0000..U+007F ]) and therefore representable by a single UTF-8 code unit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBmp">
      <MemberSignature Language="C#" Value="public bool IsBmp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBmp" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.IsBmp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBmp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBmp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBmp : bool" Usage="System.Text.Rune.IsBmp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b477-213">この <see cref="T:System.Text.Rune" /> に関連付けられているスカラー値が BMP エンコード範囲内であるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1b477-213">Gets a value that indicates whether the scalar value associated with this <see cref="T:System.Text.Rune" /> is within the BMP encoding range.</span></span></summary>
        <value><span data-ttu-id="1b477-214">関連付けられているスカラー値が BMP エンコード範囲 ([U + 0000.. U + FFFF]) 内にあり、1つの UTF-16 コード単位で表現可能な場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</span><span class="sxs-lookup"><span data-stu-id="1b477-214"><see langword="true" /> if the scalar value associated is within the BMP encoding range ([ U+0000..U+FFFF ]) and therefore representable by a single UTF-16 code unit; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsControl">
      <MemberSignature Language="C#" Value="public static bool IsControl (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsControl(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsControl(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsControl (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsControl(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsControl : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsControl value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-215">評価するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-215">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="1b477-216">指定されたルーンが制御文字として分類されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-216">Returns a value that indicates whether the specified rune is categorized as a control character.</span></span></summary>
        <returns><span data-ttu-id="1b477-217"><paramref name="value" /> が制御文字である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-217"><see langword="true" /> if <paramref name="value" /> is a control character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-218">このメソッドは、<xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> に対してクエリを実行し、結果を <xref:System.Globalization.UnicodeCategory.Control>と比較することと同じです。</span><span class="sxs-lookup"><span data-stu-id="1b477-218">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.Control>.</span></span>

<span data-ttu-id="1b477-219">[Unicode の安定性ポリシー](https://www.unicode.org/policies/stability_policy.html)ごとに、制御文字のセットは `[ U+0000..U+001F ]` と `[ U+007F..U+009F ]`の和集合として永続的に固定されます。</span><span class="sxs-lookup"><span data-stu-id="1b477-219">Per [Unicode stability policies](https://www.unicode.org/policies/stability_policy.html), the set of control characters is permanently fixed to be the union of `[ U+0000..U+001F ]` and `[ U+007F..U+009F ]`.</span></span>

<span data-ttu-id="1b477-220">詳細については、「<xref:System.Char.IsControl%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-220">For more information, see <xref:System.Char.IsControl%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDigit">
      <MemberSignature Language="C#" Value="public static bool IsDigit (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDigit(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsDigit(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDigit (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDigit(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsDigit : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsDigit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-221">評価するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-221">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="1b477-222">指定されたルーンが 10 進数の数字として分類されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-222">Returns a value that indicates whether the specified rune is categorized as a decimal digit.</span></span></summary>
        <returns><span data-ttu-id="1b477-223"><see langword="true" /> が 10 進数の数字の場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-223"><see langword="true" /> if <paramref name="value" /> is a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-224">このメソッドは、<xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> に対してクエリを実行し、結果を <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>と比較することと同じです。</span><span class="sxs-lookup"><span data-stu-id="1b477-224">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>.</span></span>

<span data-ttu-id="1b477-225">詳細については、「<xref:System.Char.IsDigit%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-225">For more information, see <xref:System.Char.IsDigit%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLetter">
      <MemberSignature Language="C#" Value="public static bool IsLetter (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetter(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsLetter(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetter (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetter(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsLetter : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsLetter value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-226">評価するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-226">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="1b477-227">指定されたルーンが文字として分類されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-227">Returns a value that indicates whether the specified rune is categorized as a letter.</span></span></summary>
        <returns><span data-ttu-id="1b477-228"><see langword="true" /> が文字である場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-228"><see langword="true" /> if <paramref name="value" /> is a letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-229">このメソッドは、<xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> に対してクエリを実行し、その結果を <xref:System.Globalization.UnicodeCategory.UppercaseLetter>、<xref:System.Globalization.UnicodeCategory.LowercaseLetter>、<xref:System.Globalization.UnicodeCategory.TitlecaseLetter>、<xref:System.Globalization.UnicodeCategory.ModifierLetter>、<xref:System.Globalization.UnicodeCategory.OtherLetter>のいずれかの値と比較することと同じです。</span><span class="sxs-lookup"><span data-stu-id="1b477-229">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.UppercaseLetter>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter>, <xref:System.Globalization.UnicodeCategory.TitlecaseLetter>, <xref:System.Globalization.UnicodeCategory.ModifierLetter>, and <xref:System.Globalization.UnicodeCategory.OtherLetter>.</span></span>

<span data-ttu-id="1b477-230">詳細については、「<xref:System.Char.IsLetter%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-230">For more information, see <xref:System.Char.IsLetter%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLetterOrDigit">
      <MemberSignature Language="C#" Value="public static bool IsLetterOrDigit (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLetterOrDigit(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsLetterOrDigit(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLetterOrDigit (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLetterOrDigit(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsLetterOrDigit : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsLetterOrDigit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-231">評価するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-231">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="1b477-232">指定されたルーンが文字または 10 進数の数字として分類されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-232">Returns a value that indicates whether the specified rune is categorized as a letter or a decimal digit.</span></span></summary>
        <returns><span data-ttu-id="1b477-233"><see langword="true" /> が文字または 10 進数の数字の場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-233"><see langword="true" /> if <paramref name="value" /> is a letter or a decimal digit; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-234">このメソッドは、<xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> に対してクエリを実行し、その結果を <xref:System.Globalization.UnicodeCategory.UppercaseLetter>、<xref:System.Globalization.UnicodeCategory.LowercaseLetter>、<xref:System.Globalization.UnicodeCategory.TitlecaseLetter>、<xref:System.Globalization.UnicodeCategory.ModifierLetter>、<xref:System.Globalization.UnicodeCategory.OtherLetter>、および <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>の値と比較することと同じです。</span><span class="sxs-lookup"><span data-stu-id="1b477-234">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.UppercaseLetter>, <xref:System.Globalization.UnicodeCategory.LowercaseLetter>, <xref:System.Globalization.UnicodeCategory.TitlecaseLetter>, <xref:System.Globalization.UnicodeCategory.ModifierLetter>, <xref:System.Globalization.UnicodeCategory.OtherLetter>, and <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>.</span></span>

<span data-ttu-id="1b477-235">詳細については、「<xref:System.Char.IsLetterOrDigit%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-235">For more information, see <xref:System.Char.IsLetterOrDigit%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLower">
      <MemberSignature Language="C#" Value="public static bool IsLower (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsLower(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsLower(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLower (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLower(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsLower : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsLower value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-236">評価するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-236">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="1b477-237">指定されたルーンが小文字として分類されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-237">Returns a value that indicates whether the specified rune is categorized as a lowercase letter.</span></span></summary>
        <returns><span data-ttu-id="1b477-238"><paramref name="value" /> が小文字の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-238"><see langword="true" /> if <paramref name="value" /> is a lowercase letter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-239">このメソッドは、<xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> に対してクエリを実行し、結果を <xref:System.Globalization.UnicodeCategory.LowercaseLetter>と比較することと同じです。</span><span class="sxs-lookup"><span data-stu-id="1b477-239">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.LowercaseLetter>.</span></span>

<span data-ttu-id="1b477-240">詳細については、「<xref:System.Char.IsLower%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-240">For more information, see <xref:System.Char.IsLower%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNumber">
      <MemberSignature Language="C#" Value="public static bool IsNumber (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNumber(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsNumber(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNumber (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNumber(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsNumber : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsNumber value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-241">評価するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-241">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="1b477-242">指定されたルーンが数字として分類されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-242">Returns a value that indicates whether the specified rune is categorized as a number.</span></span></summary>
        <returns><span data-ttu-id="1b477-243"><see langword="true" /> が数字である場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-243"><see langword="true" /> if <paramref name="value" /> is a number; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-244">このメソッドは、<xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> に対してクエリを実行し、その結果を <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>、<xref:System.Globalization.UnicodeCategory.LetterNumber>、および <xref:System.Globalization.UnicodeCategory.OtherNumber>のいずれかの値と比較することと同じです。</span><span class="sxs-lookup"><span data-stu-id="1b477-244">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.DecimalDigitNumber>, <xref:System.Globalization.UnicodeCategory.LetterNumber>, and <xref:System.Globalization.UnicodeCategory.OtherNumber>.</span></span>

<span data-ttu-id="1b477-245">詳細については、「<xref:System.Char.IsNumber%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-245">For more information, see <xref:System.Char.IsNumber%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPunctuation(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsPunctuation(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsPunctuation value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-246">評価するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-246">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="1b477-247">指定されたルーンが区切り記号として分類されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-247">Returns a value that indicates whether the specified rune is categorized as a punctuation mark.</span></span></summary>
        <returns><span data-ttu-id="1b477-248"><see langword="true" /> が区切り記号の場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-248"><see langword="true" /> if <paramref name="value" /> is a punctuation mark; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-249">このメソッドは、<xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> に対してクエリを実行し、結果を <xref:System.Globalization.UnicodeCategory.ConnectorPunctuation>、<xref:System.Globalization.UnicodeCategory.DashPunctuation>、<xref:System.Globalization.UnicodeCategory.OpenPunctuation>、<xref:System.Globalization.UnicodeCategory.ClosePunctuation>、<xref:System.Globalization.UnicodeCategory.InitialQuotePunctuation>、<xref:System.Globalization.UnicodeCategory.FinalQuotePunctuation>、<xref:System.Globalization.UnicodeCategory.OtherPunctuation>のいずれかの値と比較することと同じです。</span><span class="sxs-lookup"><span data-stu-id="1b477-249">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.ConnectorPunctuation>, <xref:System.Globalization.UnicodeCategory.DashPunctuation>, <xref:System.Globalization.UnicodeCategory.OpenPunctuation>, <xref:System.Globalization.UnicodeCategory.ClosePunctuation>, <xref:System.Globalization.UnicodeCategory.InitialQuotePunctuation>, <xref:System.Globalization.UnicodeCategory.FinalQuotePunctuation>, and <xref:System.Globalization.UnicodeCategory.OtherPunctuation>.</span></span>

<span data-ttu-id="1b477-250">詳細については、「<xref:System.Char.IsPunctuation%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-250">For more information, see <xref:System.Char.IsPunctuation%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSeparator">
      <MemberSignature Language="C#" Value="public static bool IsSeparator (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSeparator(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsSeparator(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSeparator (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSeparator(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsSeparator : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsSeparator value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-251">評価するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-251">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="1b477-252">指定されたルーンが区切り文字として分類されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-252">Returns a value that indicates whether the specified rune is categorized as a separator character.</span></span></summary>
        <returns><span data-ttu-id="1b477-253"><see langword="true" /> が区切り文字である場合は <paramref name="value" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-253"><see langword="true" /> if <paramref name="value" /> is a separator character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-254">このメソッドは、<xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> に対してクエリを実行し、その結果を <xref:System.Globalization.UnicodeCategory.SpaceSeparator>、<xref:System.Globalization.UnicodeCategory.LineSeparator>、および <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>のいずれかの値と比較することと同じです。</span><span class="sxs-lookup"><span data-stu-id="1b477-254">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.SpaceSeparator>, <xref:System.Globalization.UnicodeCategory.LineSeparator>, and <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>.</span></span>

<span data-ttu-id="1b477-255">詳細については、「<xref:System.Char.IsSeparator%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-255">For more information, see <xref:System.Char.IsSeparator%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSymbol">
      <MemberSignature Language="C#" Value="public static bool IsSymbol (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSymbol(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsSymbol(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSymbol (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSymbol(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsSymbol : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsSymbol value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-256">評価するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-256">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="1b477-257">指定されたルーンが記号として分類されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-257">Returns a value that indicates whether the specified rune is categorized as a symbol character.</span></span></summary>
        <returns><span data-ttu-id="1b477-258"><paramref name="value" /> が記号である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-258"><see langword="true" /> if <paramref name="value" /> is a symbol character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-259">このメソッドは、<xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> に対してクエリを実行し、その結果を <xref:System.Globalization.UnicodeCategory.MathSymbol>、<xref:System.Globalization.UnicodeCategory.CurrencySymbol>、<xref:System.Globalization.UnicodeCategory.ModifierSymbol>、および <xref:System.Globalization.UnicodeCategory.OtherSymbol>のいずれかの値と比較することと同じです。</span><span class="sxs-lookup"><span data-stu-id="1b477-259">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.MathSymbol>, <xref:System.Globalization.UnicodeCategory.CurrencySymbol>, <xref:System.Globalization.UnicodeCategory.ModifierSymbol>, and <xref:System.Globalization.UnicodeCategory.OtherSymbol>.</span></span>

<span data-ttu-id="1b477-260">詳細については、「<xref:System.Char.IsSymbol%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-260">For more information, see <xref:System.Char.IsSymbol%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpper">
      <MemberSignature Language="C#" Value="public static bool IsUpper (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpper(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsUpper(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUpper (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpper(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsUpper : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsUpper value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-261">評価するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-261">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="1b477-262">指定されたルーンが大文字として分類されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-262">Returns a value that indicates whether the specified rune is categorized as an uppercase letter.</span></span></summary>
        <returns><span data-ttu-id="1b477-263"><paramref name="value" /> が大文字である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-263"><see langword="true" /> if <paramref name="value" /> is an uppercase letter; otherwise,<see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-264">このメソッドは、<xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> に対してクエリを実行し、結果を <xref:System.Globalization.UnicodeCategory.UppercaseLetter>と比較することと同じです。</span><span class="sxs-lookup"><span data-stu-id="1b477-264">This method is equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against <xref:System.Globalization.UnicodeCategory.UppercaseLetter>.</span></span>

<span data-ttu-id="1b477-265">詳細については、「<xref:System.Char.IsUpper%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-265">For more information, see <xref:System.Char.IsUpper%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsValid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValid (value As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValid(int value);" />
      <MemberSignature Language="F#" Value="static member IsValid : int -&gt; bool" Usage="System.Text.Rune.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-266">Unicode スカラー値。</span><span class="sxs-lookup"><span data-stu-id="1b477-266">The Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="1b477-267">32 ビットの符号付き整数が有効な Unicode スカラー値、すなわち、[ U+0000..U+D7FF ] (最初と最後の要素を含む) または [ U+E000..U+10FFFF ] (最初と最後の要素を含む) という範囲内にあるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-267">Returns a value that indicates whether a 32-bit signed integer represents a valid Unicode scalar value; that is, it is in the range [ U+0000..U+D7FF ], inclusive; or [ U+E000..U+10FFFF ], inclusive.</span></span></summary>
        <returns><span data-ttu-id="1b477-268"><paramref name="value" /> が有効な Unicode スカラー値の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-268"><see langword="true" /> if <paramref name="value" /> is a valid Unicode scalar value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public static bool IsValid (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsValid(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsValid(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValid (value As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValid(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member IsValid : uint32 -&gt; bool" Usage="System.Text.Rune.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-269">Unicode スカラー値。</span><span class="sxs-lookup"><span data-stu-id="1b477-269">The Unicode scalar value.</span></span></param>
        <summary><span data-ttu-id="1b477-270">32 ビットの符号なし整数が有効な Unicode スカラー値、すなわち、[ U+0000..U+D7FF ] (最初と最後の要素を含む) または [ U+E000..U+10FFFF ] (最初と最後の要素を含む) という範囲内にあるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-270">Returns a value that indicates whether a 32-bit unsigned integer represents a valid Unicode scalar value; that is, it is in the range [ U+0000..U+D7FF ], inclusive, or [ U+E000..U+10FFFF ], inclusive.</span></span></summary>
        <returns><span data-ttu-id="1b477-271"><paramref name="value" /> が有効な Unicode スカラー値の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-271"><see langword="true" /> if <paramref name="value" /> is a valid Unicode scalar value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsWhiteSpace (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhiteSpace(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.IsWhiteSpace(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhiteSpace (value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhiteSpace(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member IsWhiteSpace : System.Text.Rune -&gt; bool" Usage="System.Text.Rune.IsWhiteSpace value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-272">評価するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-272">The rune to evaluate.</span></span></param>
        <summary><span data-ttu-id="1b477-273">指定されたルーンが空白文字として分類されているかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-273">Returns a value that indicates whether the specified rune is categorized as a white space character.</span></span></summary>
        <returns><span data-ttu-id="1b477-274"><paramref name="value" /> が空白文字の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-274"><see langword="true" /> if <paramref name="value" /> is a white space character; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-275">このメソッドは、通常、<xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> に対してクエリを実行し、その結果を <xref:System.Globalization.UnicodeCategory.SpaceSeparator>、<xref:System.Globalization.UnicodeCategory.LineSeparator>、および <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>のいずれかの値と比較することと同じです。</span><span class="sxs-lookup"><span data-stu-id="1b477-275">This method is generally equivalent to querying <xref:System.Text.Rune.GetUnicodeCategory(System.Text.Rune)> and comparing the result against any of the values <xref:System.Globalization.UnicodeCategory.SpaceSeparator>, <xref:System.Globalization.UnicodeCategory.LineSeparator>, and <xref:System.Globalization.UnicodeCategory.ParagraphSeparator>.</span></span> <span data-ttu-id="1b477-276">ただし、<xref:System.Globalization.UnicodeCategory.Control> カテゴリにはいくつかの <xref:System.Text.Rune>があります。これは空白文字としても分類され、このメソッドはこれらの値に対してアカウントを持ちます。</span><span class="sxs-lookup"><span data-stu-id="1b477-276">However, there are some <xref:System.Text.Rune>s in the <xref:System.Globalization.UnicodeCategory.Control> category which are also classified as white space characters, and this method accounts for those values.</span></span>

<span data-ttu-id="1b477-277">詳細については、「<xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1b477-277">For more information, see <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Equality(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="1b477-278">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="1b477-278">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="1b477-279">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="1b477-279">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="1b477-280">2 つの <see cref="T:System.Text.Rune" /> インスタンスが等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-280">Returns a value that indicates whether two <see cref="T:System.Text.Rune" /> instances are equal.</span></span></summary>
        <returns><span data-ttu-id="1b477-281"><paramref name="left" /> と <paramref name="right" /> が等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-281"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Text.Rune (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Text.Rune op_Explicit(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Explicit(System.Char)~System.Text.Rune" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (ch As Char) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Text::Rune(char ch);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : char -&gt; System.Text.Rune" Usage="System.Text.Rune.op_Explicit ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="1b477-282">変換する 16 ビットの Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="1b477-282">The 16-bit Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="1b477-283">16 ビットの Unicode 文字の <see cref="T:System.Text.Rune" /> への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="1b477-283">Defines an explicit conversion of a 16-bit Unicode character to a <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="1b477-284">32 ビットの Unicode 文字としての <paramref name="ch" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-284"><paramref name="ch" /> as a 32-bit Unicode character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b477-285"><paramref name="ch" /> は、サロゲート コード ポイントを表す Unicode スカラーです。</span><span class="sxs-lookup"><span data-stu-id="1b477-285"><paramref name="ch" /> is a Unicode scalar that represents a surrogate code point.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Text.Rune (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Text.Rune op_Explicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Explicit(System.Int32)~System.Text.Rune" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Integer) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Text::Rune(int value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : int -&gt; System.Text.Rune" Usage="System.Text.Rune.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-286">変換する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="1b477-286">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="1b477-287">32 ビット符号付き整数の <see cref="T:System.Text.Rune" /> への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="1b477-287">Defines an explicit conversion of a 32-bit signed integer to a <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="1b477-288">32 ビットの Unicode 文字としての <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-288"><paramref name="value" /> as a 32-bit Unicode character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b477-289"><paramref name="value" /> は無効な Unicode スカラーです。</span><span class="sxs-lookup"><span data-stu-id="1b477-289"><paramref name="value" /> is an invalid Unicode scalar.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Text.Rune (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Text.Rune op_Explicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Explicit(System.UInt32)~System.Text.Rune" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As UInteger) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Text::Rune(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : uint32 -&gt; System.Text.Rune" Usage="System.Text.Rune.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-290">変換する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="1b477-290">The 32-bit signed integer to convert.</span></span></param>
        <summary><span data-ttu-id="1b477-291">32 ビット符号なし整数の <see cref="T:System.Text.Rune" /> への明示的な変換を定義します。</span><span class="sxs-lookup"><span data-stu-id="1b477-291">Defines an explicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="1b477-292">32 ビットの Unicode 文字としての <paramref name="value" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-292"><paramref name="value" /> as a 32-bit Unicode character.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b477-293"><paramref name="value" /> は無効な Unicode スカラーです。</span><span class="sxs-lookup"><span data-stu-id="1b477-293"><paramref name="value" /> is an invalid Unicode scalar.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_GreaterThan(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="1b477-294">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="1b477-294">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="1b477-295">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="1b477-295">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="1b477-296">指定した <see cref="T:System.Text.Rune" /> が、指定した別の <see cref="T:System.Text.Rune" /> より大きいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-296">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is greater than another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="1b477-297"><paramref name="left" /> が <paramref name="right" /> より大きい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-297"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_GreaterThanOrEqual(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="1b477-298">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="1b477-298">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="1b477-299">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="1b477-299">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="1b477-300">指定した <see cref="T:System.Text.Rune" /> が、指定した別の <see cref="T:System.Text.Rune" /> 以上かどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-300">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is greater than or equal to another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="1b477-301"><paramref name="left" /> が <paramref name="right" /> 以上の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-301"><see langword="true" /> if <paramref name="left" /> is greater than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_Inequality(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="System.Text.Rune.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="1b477-302">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="1b477-302">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="1b477-303">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="1b477-303">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="1b477-304">2 つの <see cref="T:System.Text.Rune" /> インスタンスの値が異なるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-304">Returns a value that indicates whether two <see cref="T:System.Text.Rune" /> instances have different values.</span></span></summary>
        <returns><span data-ttu-id="1b477-305"><paramref name="left" /> と <paramref name="right" /> が等しくない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-305"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_LessThan(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="1b477-306">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="1b477-306">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="1b477-307">比較する 2 番目の値。</span><span class="sxs-lookup"><span data-stu-id="1b477-307">the second value to compare.</span></span></param>
        <summary><span data-ttu-id="1b477-308">指定した <see cref="T:System.Text.Rune" /> が、指定した別の <see cref="T:System.Text.Rune" /> より小さいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-308">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is less than another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="1b477-309"><paramref name="left" /> が <paramref name="right" /> より小さい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-309"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Text.Rune left, System.Text.Rune right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Text.Rune left, valuetype System.Text.Rune right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.op_LessThanOrEqual(System.Text.Rune,System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Rune, right As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Text::Rune left, System::Text::Rune right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Text.Rune * System.Text.Rune -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Text.Rune" />
        <Parameter Name="right" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="1b477-310">比較する最初の値です。</span><span class="sxs-lookup"><span data-stu-id="1b477-310">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="1b477-311">比較する 2 番目の値です。</span><span class="sxs-lookup"><span data-stu-id="1b477-311">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="1b477-312">指定した <see cref="T:System.Text.Rune" /> が、指定したもう 1 つの <see cref="T:System.Text.Rune" /> 以下であるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-312">Returns a value indicating whether a specified <see cref="T:System.Text.Rune" /> is less than or equal to another specified <see cref="T:System.Text.Rune" />.</span></span></summary>
        <returns><span data-ttu-id="1b477-313"><paramref name="left" /> が <paramref name="right" /> 以下の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-313"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plane">
      <MemberSignature Language="C#" Value="public int Plane { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Plane" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Plane" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Plane As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Plane { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Plane : int" Usage="System.Text.Rune.Plane" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b477-314">このスカラーを含む Unicode 平面 (0 から 16 まで、0 と 16 を含む) を取得します。</span><span class="sxs-lookup"><span data-stu-id="1b477-314">Gets the Unicode plane (0 to 16, inclusive) that contains this scalar.</span></span></summary>
        <value><span data-ttu-id="1b477-315">このスカラーを含む Unicode 平面 (0 ~ 16)。</span><span class="sxs-lookup"><span data-stu-id="1b477-315">The Unicode plane (0 to 16, inclusive) that contains this scalar.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplacementChar">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ReplacementChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Text.Rune ReplacementChar" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.ReplacementChar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReplacementChar As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Text::Rune ReplacementChar { System::Text::Rune get(); };" />
      <MemberSignature Language="F#" Value="member this.ReplacementChar : System.Text.Rune" Usage="System.Text.Rune.ReplacementChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b477-316">Unicode 置換文字 U+FFFD を表す <see cref="T:System.Text.Rune" /> インスタンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="1b477-316">Gets a <see cref="T:System.Text.Rune" /> instance that represents the Unicode replacement character U+FFFD.</span></span></summary>
        <value><span data-ttu-id="1b477-317">Unicode 置換文字 U+FFFD を表す <see cref="T:System.Text.Rune" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="1b477-317">A <see cref="T:System.Text.Rune" /> instance that represents the Unicode replacement character U+FFFD.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToLower (System.Text.Rune value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToLower(valuetype System.Text.Rune value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToLower(System.Text.Rune,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLower (value As Rune, culture As CultureInfo) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToLower(System::Text::Rune value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToLower : System.Text.Rune * System.Globalization.CultureInfo -&gt; System.Text.Rune" Usage="System.Text.Rune.ToLower (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-318">変換する 32 ビットの Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="1b477-318">The 32-bit Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="1b477-319">カルチャ固有の大文字と小文字の規則を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1b477-319">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="1b477-320">指定されたカルチャの大文字と小文字の規則を使用して、指定された <see cref="T:System.Text.Rune" /> のコピーを小文字に変換して返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-320">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to lowercase, using the casing rules of the specified culture.</span></span></summary>
        <returns><span data-ttu-id="1b477-321"><paramref name="value" /> の小文字表現。</span><span class="sxs-lookup"><span data-stu-id="1b477-321">The lowercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToLowerInvariant (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToLowerInvariant(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToLowerInvariant(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToLowerInvariant (value As Rune) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToLowerInvariant(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member ToLowerInvariant : System.Text.Rune -&gt; System.Text.Rune" Usage="System.Text.Rune.ToLowerInvariant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-322">変換する 32 ビットの Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="1b477-322">The 32-bit Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="1b477-323">インバリアント カルチャの大文字と小文字の規則を使用して、指定された <see cref="T:System.Text.Rune" /> のコピーを小文字に変換して返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-323">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to lowercase using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="1b477-324"><paramref name="value" /> の小文字表現。</span><span class="sxs-lookup"><span data-stu-id="1b477-324">The lowercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="rune.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1b477-325">この <see cref="T:System.Text.Rune" /> オブジェクトの文字列表現を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-325">Returns the string representation of this <see cref="T:System.Text.Rune" /> instance.</span></span></summary>
        <returns><span data-ttu-id="1b477-326">このルーンの文字列形式。</span><span class="sxs-lookup"><span data-stu-id="1b477-326">The string representation of this rune.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToUpper (System.Text.Rune value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToUpper(valuetype System.Text.Rune value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToUpper(System.Text.Rune,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpper (value As Rune, culture As CultureInfo) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToUpper(System::Text::Rune value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member ToUpper : System.Text.Rune * System.Globalization.CultureInfo -&gt; System.Text.Rune" Usage="System.Text.Rune.ToUpper (value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-327">変換する 32 ビットの Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="1b477-327">The 32-bit Unicode character to convert.</span></span></param>
        <param name="culture"><span data-ttu-id="1b477-328">カルチャ固有の大文字と小文字の規則を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1b477-328">An object that supplies culture-specific casing rules.</span></span></param>
        <summary><span data-ttu-id="1b477-329">指定されたカルチャの大文字と小文字の規則を使用して、指定された <see cref="T:System.Text.Rune" /> のコピーを大文字に変換して返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-329">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to uppercase, using the casing rules of the specified culture.</span></span></summary>
        <returns><span data-ttu-id="1b477-330"><paramref name="value" /> の大文字表現。</span><span class="sxs-lookup"><span data-stu-id="1b477-330">The uppercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public static System.Text.Rune ToUpperInvariant (System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Rune ToUpperInvariant(valuetype System.Text.Rune value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.ToUpperInvariant(System.Text.Rune)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUpperInvariant (value As Rune) As Rune" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Rune ToUpperInvariant(System::Text::Rune value);" />
      <MemberSignature Language="F#" Value="static member ToUpperInvariant : System.Text.Rune -&gt; System.Text.Rune" Usage="System.Text.Rune.ToUpperInvariant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Rune</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Text.Rune" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-331">変換する 32 ビットの Unicode 文字。</span><span class="sxs-lookup"><span data-stu-id="1b477-331">The 32-bit Unicode character to convert.</span></span></param>
        <summary><span data-ttu-id="1b477-332">インバリアント カルチャの大文字と小文字の規則を使用して、指定された <see cref="T:System.Text.Rune" /> のコピーを大文字に変換して返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-332">Returns a copy of the specified <see cref="T:System.Text.Rune" /> converted to uppercase using the casing rules of the invariant culture.</span></span></summary>
        <returns><span data-ttu-id="1b477-333"><paramref name="value" /> の大文字表現。</span><span class="sxs-lookup"><span data-stu-id="1b477-333">The uppercase equivalent of <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (char ch, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(char ch, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.Char,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (ch As Char, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(char ch, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : char * Rune -&gt; bool" Usage="System.Text.Rune.TryCreate (ch, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="1b477-334">ルーン作成の元になる文字。</span><span class="sxs-lookup"><span data-stu-id="1b477-334">The character from which to create the rune.</span></span></param>
        <param name="result"><span data-ttu-id="1b477-335">このメソッドから制御が戻るときに、<paramref name="ch" /> に対応するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-335">When this method returns, the rune that corresponds to <paramref name="ch" />.</span></span></param>
        <summary><span data-ttu-id="1b477-336">指定された文字から <see cref="T:System.Text.Rune" /> の作成を試し、操作が成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-336">Attempts to create a <see cref="T:System.Text.Rune" /> from a specified character and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="1b477-337">メソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-337"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (int value, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(int32 value, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.Int32,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (value As Integer, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(int value, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : int * Rune -&gt; bool" Usage="System.Text.Rune.TryCreate (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-338">Unicode スカラー値。</span><span class="sxs-lookup"><span data-stu-id="1b477-338">The Unicode scalar value.</span></span></param>
        <param name="result"><span data-ttu-id="1b477-339">このメソッドから制御が戻るときに、<paramref name="value" /> に対応するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-339">When this method returns, the rune that corresponds to <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="1b477-340">Unicode スカラー値を表す指定された符号付き整数から <see cref="T:System.Text.Rune" /> の作成を試します。</span><span class="sxs-lookup"><span data-stu-id="1b477-340">Attempts to create a <see cref="T:System.Text.Rune" /> from a specified signed integer that represents a Unicode scalar value.</span></span></summary>
        <returns><span data-ttu-id="1b477-341">メソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-341"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (uint value, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(unsigned int32 value, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.UInt32,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (value As UInteger, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(System::UInt32 value, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : uint32 * Rune -&gt; bool" Usage="System.Text.Rune.TryCreate (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1b477-342">Unicode スカラー値。</span><span class="sxs-lookup"><span data-stu-id="1b477-342">The Unicode scalar value.</span></span></param>
        <param name="result"><span data-ttu-id="1b477-343">このメソッドから制御が戻るときに、<paramref name="value" /> に対応するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-343">When this method returns, the rune that corresponds to <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="1b477-344">Unicode スカラー値を表す、指定された符号付き 32 ビット整数から <see cref="T:System.Text.Rune" /> の作成を試します。</span><span class="sxs-lookup"><span data-stu-id="1b477-344">Attempts to create a <see cref="T:System.Text.Rune" /> from the specified 32-bit unsigned integer that represents a Unicode scalar value.</span></span></summary>
        <returns><span data-ttu-id="1b477-345">メソッドが成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-345"><see langword="true" /> if the method succeeded; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreate">
      <MemberSignature Language="C#" Value="public static bool TryCreate (char highSurrogate, char lowSurrogate, out System.Text.Rune result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryCreate(char highSurrogate, char lowSurrogate, [out] valuetype System.Text.Rune&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryCreate(System.Char,System.Char,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreate (highSurrogate As Char, lowSurrogate As Char, ByRef result As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryCreate(char highSurrogate, char lowSurrogate, [Runtime::InteropServices::Out] System::Text::Rune % result);" />
      <MemberSignature Language="F#" Value="static member TryCreate : char * char * Rune -&gt; bool" Usage="System.Text.Rune.TryCreate (highSurrogate, lowSurrogate, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="highSurrogate" Type="System.Char" />
        <Parameter Name="lowSurrogate" Type="System.Char" />
        <Parameter Name="result" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="highSurrogate"><span data-ttu-id="1b477-346">サロゲート ペアの上位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="1b477-346">The high surrogate of the surrogate pair.</span></span></param>
        <param name="lowSurrogate"><span data-ttu-id="1b477-347">サロゲート ペアの下位サロゲート。</span><span class="sxs-lookup"><span data-stu-id="1b477-347">The low surrogate of the surrogate pair.</span></span></param>
        <param name="result"><span data-ttu-id="1b477-348">指定のサロゲート ペアに対応するルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-348">The rune that corresponds to the specified surrogate pair.</span></span></param>
        <summary><span data-ttu-id="1b477-349">指定された UTF-16 サロゲート ペアから <see cref="T:System.Text.Rune" /> の作成を試し、操作が成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-349">Attempts to create a <see cref="T:System.Text.Rune" /> from the specified UTF-16 surrogate pair and returns a value that indicates whether the operation was successful.</span></span></summary>
        <returns><span data-ttu-id="1b477-350">操作が成功した場合は <see langword="true" />。入力値が形式の正しい UTF-16 サロゲート ペアを表さない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-350"><see langword="true" /> if the operation succeeded; <see langword="false" /> if the input values don't represent a well-formed UTF-16 surrogate pair.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncodeToUtf16">
      <MemberSignature Language="C#" Value="public bool TryEncodeToUtf16 (Span&lt;char&gt; destination, out int charsWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncodeToUtf16(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryEncodeToUtf16(System.Span{System.Char},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncodeToUtf16 (destination As Span(Of Char), ByRef charsWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncodeToUtf16(Span&lt;char&gt; destination, [Runtime::InteropServices::Out] int % charsWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncodeToUtf16 : Span&lt;char&gt; * int -&gt; bool" Usage="rune.TryEncodeToUtf16 (destination, charsWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="1b477-351">UTF-16 でエンコードされた値として、この値の書き込み先となるバッファー。</span><span class="sxs-lookup"><span data-stu-id="1b477-351">The buffer to which to write this value as UTF-16 encoded value.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="1b477-352"><paramref name="destination" /> に書き込まれた <see cref="T:System.Char" /> 値の数。あるいは、ターゲット バッファーに出力を入れる大きさがない場合は 0。</span><span class="sxs-lookup"><span data-stu-id="1b477-352">The number of <see cref="T:System.Char" /> values written to <paramref name="destination" />, or 0 if the destination buffer is not large enough to contain the output.</span></span></param>
        <summary><span data-ttu-id="1b477-353">この <see cref="T:System.Text.Rune" /> を、UTF-16 でエンコードされたターゲット バッファーにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="1b477-353">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-16 encoded destination buffer.</span></span></summary>
        <returns><span data-ttu-id="1b477-354">値がバッファーに書き込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-354"><see langword="true" /> if the value was written to the buffer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
## Remarks

<span data-ttu-id="1b477-355"><xref:System.Text.Rune.Utf16SequenceLength> プロパティは、`destination` バッファーに必要なサイズを決定するために事前に照会できます。</span><span class="sxs-lookup"><span data-stu-id="1b477-355">The <xref:System.Text.Rune.Utf16SequenceLength> property can be queried ahead of time to determine the required size of the `destination` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryEncodeToUtf8">
      <MemberSignature Language="C#" Value="public bool TryEncodeToUtf8 (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryEncodeToUtf8(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryEncodeToUtf8(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryEncodeToUtf8 (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryEncodeToUtf8(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryEncodeToUtf8 : Span&lt;byte&gt; * int -&gt; bool" Usage="rune.TryEncodeToUtf8 (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="1b477-356">UTF-8 でエンコードされた値の書き込み先となるバッファー。</span><span class="sxs-lookup"><span data-stu-id="1b477-356">The buffer to which to write the UTF-8 encoded value.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="1b477-357"><paramref name="destination" /> に書き込まれた <see cref="T:System.Byte" /> 値の数。あるいは、ターゲット バッファーに出力を入れる大きさがない場合は 0。</span><span class="sxs-lookup"><span data-stu-id="1b477-357">The number of <see cref="T:System.Byte" /> values written to <paramref name="destination" />, or 0 if the destination buffer is not large enough to contain the output.</span></span></param>
        <summary><span data-ttu-id="1b477-358">この <see cref="T:System.Text.Rune" /> を、UTF-8 でエンコードされたターゲット バッファーにエンコードします。</span><span class="sxs-lookup"><span data-stu-id="1b477-358">Encodes this <see cref="T:System.Text.Rune" /> to a UTF-8 encoded destination buffer.</span></span></summary>
        <returns><span data-ttu-id="1b477-359">値がバッファーに書き込まれた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-359"><see langword="true" /> if the value was written to the buffer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
## Remarks

<span data-ttu-id="1b477-360"><xref:System.Text.Rune.Utf8SequenceLength> プロパティは、`destination` バッファーに必要なサイズを決定するために事前に照会できます。</span><span class="sxs-lookup"><span data-stu-id="1b477-360">The <xref:System.Text.Rune.Utf8SequenceLength> property can be queried ahead of time to determine the required size of the `destination` buffer.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRuneAt">
      <MemberSignature Language="C#" Value="public static bool TryGetRuneAt (string input, int index, out System.Text.Rune value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetRuneAt(string input, int32 index, [out] valuetype System.Text.Rune&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Rune.TryGetRuneAt(System.String,System.Int32,System.Text.Rune@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetRuneAt (input As String, index As Integer, ByRef value As Rune) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetRuneAt(System::String ^ input, int index, [Runtime::InteropServices::Out] System::Text::Rune % value);" />
      <MemberSignature Language="F#" Value="static member TryGetRuneAt : string * int * Rune -&gt; bool" Usage="System.Text.Rune.TryGetRuneAt (input, index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Text.Rune" RefType="out" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="1b477-361">ルーンを抽出する文字列。</span><span class="sxs-lookup"><span data-stu-id="1b477-361">The string from which to extract the rune.</span></span></param>
        <param name="index"><span data-ttu-id="1b477-362">ルーンの抽出元となる、0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="1b477-362">The zero-based index from which to extract the rune.</span></span></param>
        <param name="value"><span data-ttu-id="1b477-363">このメソッドから制御が戻るときに、デコードされたルーン。</span><span class="sxs-lookup"><span data-stu-id="1b477-363">When this method returns, the decoded rune.</span></span></param>
        <summary><span data-ttu-id="1b477-364">文字列において指定された位置から始まる <see cref="T:System.Text.Rune" /> の取得を試し、操作が成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="1b477-364">Attempts to get the <see cref="T:System.Text.Rune" /> that begins at a specified position in a string, and return a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="1b477-365">スカラー値が指定のインデックスから正常に抽出された場合は <see langword="true" />。データが無効なため、値を抽出できなかった場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1b477-365"><see langword="true" /> if a scalar value was successfully extracted from the specified index; <see langword="false" /> if a value could not be extracted because of invalid data.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1b477-366"><paramref name="input" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="1b477-366"><paramref name="input" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1b477-367"><paramref name="index" /> は <paramref name="input" /> の範囲外です。</span><span class="sxs-lookup"><span data-stu-id="1b477-367"><paramref name="index" /> is out of the range of <paramref name="input" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Utf16SequenceLength">
      <MemberSignature Language="C#" Value="public int Utf16SequenceLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Utf16SequenceLength" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Utf16SequenceLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Utf16SequenceLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Utf16SequenceLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Utf16SequenceLength : int" Usage="System.Text.Rune.Utf16SequenceLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b477-368">このスカラー値を表すために必要な UTF-16 シーケンスのコード単位 (<see cref="T:System.Char" />) の長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="1b477-368">Gets the length in code units (<see cref="T:System.Char" />) of the UTF-16 sequence required to represent this scalar value.</span></span></summary>
        <value><span data-ttu-id="1b477-369">このスカラー値を表すために必要な UTF-16 シーケンスのコード単位 (<see cref="T:System.Char" />) の長さ。</span><span class="sxs-lookup"><span data-stu-id="1b477-369">The length in code units (<see cref="T:System.Char" />) of the UTF-16 sequence required to represent this scalar value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-370">戻り値は1または2になります。</span><span class="sxs-lookup"><span data-stu-id="1b477-370">The return value will be 1 or 2.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Utf8SequenceLength">
      <MemberSignature Language="C#" Value="public int Utf8SequenceLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Utf8SequenceLength" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Utf8SequenceLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Utf8SequenceLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Utf8SequenceLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Utf8SequenceLength : int" Usage="System.Text.Rune.Utf8SequenceLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b477-371">このスカラー値を表すために必要な UTF-8 シーケンスのコード単位の長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="1b477-371">Gets the length in code units of the UTF-8 sequence required to represent this scalar value.</span></span></summary>
        <value><span data-ttu-id="1b477-372">このスカラー値を表すために必要な UTF-8 シーケンスのコード単位の長さ。</span><span class="sxs-lookup"><span data-stu-id="1b477-372">The length in code units of the UTF-8 sequence required to represent this scalar value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="1b477-373">戻り値は 1 ~ 4 の範囲です。</span><span class="sxs-lookup"><span data-stu-id="1b477-373">The return value will be 1 through 4, inclusive.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public int Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.Rune.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Value { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : int" Usage="System.Text.Rune.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1b477-374">Unicode スカラー値を整数として取得します。</span><span class="sxs-lookup"><span data-stu-id="1b477-374">Gets the Unicode scalar value as an integer.</span></span></summary>
        <value><span data-ttu-id="1b477-375">整数としての Unicode スカラー値。</span><span class="sxs-lookup"><span data-stu-id="1b477-375">The Unicode scalar value as an integer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
