<Type Name="IpcClientChannel" FullName="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d52bafcc3e041fe4e56262cbd5cad24b9a0d7ea" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73354053" /></Metadata><TypeSignature Language="C#" Value="public class IpcClientChannel : System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IpcClientChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelSender, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class IpcClientChannel&#xA;Implements IChannelSender, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class IpcClientChannel : System::Runtime::Remoting::Channels::IChannelSender, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <TypeSignature Language="F#" Value="type IpcClientChannel = class&#xA;    interface IChannelSender&#xA;    interface IChannel&#xA;    interface ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0c87c-101">IPC プロトコルを使用してメッセージを送信するリモート呼び出しのクライアント チャネルを実装します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-101">Implements a client channel for remote calls that uses the IPC protocol to transmit messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="0c87c-102">チャネルは、リモート呼び出しを転送するために the.NET Framework リモート処理インフラストラクチャによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="0c87c-102">Channels are used by the.NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="0c87c-103">クライアントがリモートオブジェクトを呼び出すと、呼び出しは、クライアントチャネルによって送信され、サーバーチャネルによって受信されるメッセージにシリアル化されます。</span><span class="sxs-lookup"><span data-stu-id="0c87c-103">When a client calls a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="0c87c-104">メッセージが受信されると、逆シリアル化されて処理されます。</span><span class="sxs-lookup"><span data-stu-id="0c87c-104">After the message is received, it is deserialized and processed.</span></span> <span data-ttu-id="0c87c-105">返された値は、サーバーチャネルによって送信され、クライアントチャネルによって受信されます。</span><span class="sxs-lookup"><span data-stu-id="0c87c-105">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="0c87c-106"><xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> クラスは、Windows プロセス間通信 (IPC) システムを使用して、同じコンピューター上のアプリケーションドメイン間でメッセージを転送します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-106">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> class uses the Windows interprocess communication (IPC) system to transport messages between application domains on the same computer.</span></span> <span data-ttu-id="0c87c-107">同じコンピューター上のアプリケーションドメイン間で通信する場合、IPC チャネルは TCP チャネルまたは HTTP チャネルよりもはるかに高速です。</span><span class="sxs-lookup"><span data-stu-id="0c87c-107">When communicating between application domains on the same computer, the IPC channel is much faster than the TCP or HTTP channels.</span></span>  
  
 <span data-ttu-id="0c87c-108">クライアント側でメッセージの追加処理を実行するには、<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> オブジェクトによって処理されるすべてのメッセージが渡される <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> インターフェイスの実装を指定します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-108">To perform additional processing of messages on the client side, you can specify an implementation of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> interface through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> object will be passed.</span></span>  
  
 <span data-ttu-id="0c87c-109">既定では、<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> クラスはバイナリフォーマッタを使用してすべてのメッセージをシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-109">By default, the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> class uses a binary formatter to serialize all messages.</span></span>  
  
 <span data-ttu-id="0c87c-110"><xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> オブジェクトには、(静的 <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> メソッドを呼び出すことによって) 構成ファイルで実行時に設定できる構成プロパティ、または (<xref:System.Collections.IDictionary> コレクションを <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> コンストラクターに渡すことによって) プログラムで設定できる構成プロパティが関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="0c87c-110">A <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="0c87c-111">これらの構成プロパティの一覧については、<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> コンストラクターのドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="0c87c-111">For a list of these configuration properties, see the documentation for the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c87c-112"><xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> クラスを使用するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-112">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel> class.</span></span>  
  
 [!code-cpp[Remoting_Ipc#20](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/client.cpp#20)]
 [!code-csharp[Remoting_Ipc#20](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/client.cs#20)]  
  
 <span data-ttu-id="0c87c-113">上記のコードでは、次のリモートオブジェクトを使用します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-113">The preceding code uses the following remote object.</span></span>  
  
 [!code-cpp[Remoting_Ipc#0](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/counter.cpp#0)]
 [!code-csharp[Remoting_Ipc#0](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/counter.cs#0)]  
  
 <span data-ttu-id="0c87c-114">このオブジェクトをリモートで公開するサーバーの例については、「<xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0c87c-114">For an example of a server that exposes this object remotely, see <xref:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0c87c-115"><see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-115">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcClientChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcClientChannel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0c87c-116"><see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-116">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcServerChannel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c87c-117">このコンストラクターによって返される <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> インスタンスの構成プロパティは、すべて既定値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="0c87c-117">The configuration properties of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> instance returned by this constructor are all set to their default values.</span></span> <span data-ttu-id="0c87c-118">次の表は、各構成プロパティの既定値を示しています。</span><span class="sxs-lookup"><span data-stu-id="0c87c-118">The following table shows the default value for each configuration property.</span></span>  
  
|<span data-ttu-id="0c87c-119">構成プロパティ</span><span class="sxs-lookup"><span data-stu-id="0c87c-119">Configuration property</span></span>|<span data-ttu-id="0c87c-120">説明</span><span class="sxs-lookup"><span data-stu-id="0c87c-120">Description</span></span>|  
|----------------------------|-----------------|  
|`name`|<span data-ttu-id="0c87c-121">既定の名前は "ipc client" です。</span><span class="sxs-lookup"><span data-stu-id="0c87c-121">The default name is "ipc client".</span></span> <span data-ttu-id="0c87c-122">各チャネルに一意な名前が付けられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c87c-122">Each channel must have a unique name.</span></span>|  
|`priority`|<span data-ttu-id="0c87c-123">既定の優先順位は1です。</span><span class="sxs-lookup"><span data-stu-id="0c87c-123">The default priority is 1.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0c87c-124">このコンストラクターの使用方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-124">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[Remoting_Ipc#21](~/samples/snippets/cpp/VS_Snippets_Remoting/Remoting_Ipc/CPP/client.cpp#21)]
 [!code-csharp[Remoting_Ipc#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Remoting_Ipc/CS/client.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcClientChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, sinkProvider As IClientChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcClientChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcClientChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IClientChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcClientChannel (properties, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="0c87c-125">チャネルで使用される構成プロパティの値を指定する <see cref="T:System.Collections.IDictionary" /> コレクション。</span><span class="sxs-lookup"><span data-stu-id="0c87c-125">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="0c87c-126">チャネルによって使用される <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="0c87c-126">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="0c87c-127">構成プロパティとシンクを指定して、<see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-127">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> class with the specified configuration properties and sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c87c-128">チャネル構成プロパティの詳細については、「[チャネルとフォーマッタの構成プロパティ](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="0c87c-128">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
 <span data-ttu-id="0c87c-129">シンク機能が必要ない場合は、`sinkProvider` パラメーターを `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-129">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c87c-130">このコンストラクターの使用方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-130">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#41](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client2.cpp#41)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#41](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client2.cs#41)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="0c87c-131">チャネルおよびフォーマッタの構成プロパティ</span><span class="sxs-lookup"><span data-stu-id="0c87c-131">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IpcClientChannel (string name, System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider sinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.#ctor(System.String,System.Runtime.Remoting.Channels.IClientChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, sinkProvider As IClientChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IpcClientChannel(System::String ^ name, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ sinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Ipc.IpcClientChannel : string * System.Runtime.Remoting.Channels.IClientChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" Usage="new System.Runtime.Remoting.Channels.Ipc.IpcClientChannel (name, sinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="sinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="0c87c-132">チャネルの名前。</span><span class="sxs-lookup"><span data-stu-id="0c87c-132">The name of the channel.</span></span></param>
        <param name="sinkProvider"><span data-ttu-id="0c87c-133">チャネルによって使用される <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="0c87c-133">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the channel.</span></span></param>
        <summary><span data-ttu-id="0c87c-134">名前とシンクを指定して、<see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-134">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel" /> class with the specified name and sink.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c87c-135">このコンストラクターは、`name` パラメーターを使用して <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-135">This constructor sets the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> property by using the `name` parameter.</span></span> <span data-ttu-id="0c87c-136">複数のチャネルを登録する場合、各チャネルには一意の名前を付ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="0c87c-136">If you want to register more than one channel, each channel must have a unique name.</span></span>  
  
 <span data-ttu-id="0c87c-137">シンク機能が必要ない場合は、`sinkProvider` パラメーターを `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-137">If you do not require sink functionality, set the `sinkProvider` parameter to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c87c-138">このコンストラクターの使用方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-138">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#42](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client2.cpp#42)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#42](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client2.cs#42)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c87c-139">現在のチャネルの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-139">Gets the name of the current channel.</span></span></summary>
        <value><span data-ttu-id="0c87c-140">チャネルの名前を格納している <see cref="T:System.String" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="0c87c-140">A <see cref="T:System.String" /> instance that contains the name of the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c87c-141">登録されたすべてのチャネルには一意の名前が付いています。</span><span class="sxs-lookup"><span data-stu-id="0c87c-141">Every registered channel has a unique name.</span></span> <span data-ttu-id="0c87c-142">名前は、<xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A?displayProperty=nameWithType> メソッドを呼び出すときに、特定のチャネルを取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="0c87c-142">The name is used to retrieve a specific channel when calling the <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0c87c-143">既定の名前は "ipc client" です。</span><span class="sxs-lookup"><span data-stu-id="0c87c-143">The default name is "ipc client".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c87c-144">次のコード例は、<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0c87c-144">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelName%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#21](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#21)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#21](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelPriority</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c87c-145">現在のチャネルの優先順位を取得します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-145">Gets the priority of the current channel.</span></span></summary>
        <value><span data-ttu-id="0c87c-146">チャネルに割り当てられている優先順位を示す整数。</span><span class="sxs-lookup"><span data-stu-id="0c87c-146">An integer that indicates the priority assigned to the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c87c-147">優先順位は、競合しているクライアントが特定のエンドポイントに接続する順序を制御します。優先順位の高いチャネルは、優先順位の低いチャネルより前に接続します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-147">The priority controls the order in which competing clients connect to a given endpoint; higher priority channels connect before lower priority channels.</span></span> <span data-ttu-id="0c87c-148">既定の優先順位は1です。負の優先順位が許可されます。</span><span class="sxs-lookup"><span data-stu-id="0c87c-148">The default priority is 1; negative priorities are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c87c-149">次のコード例は、<xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="0c87c-149">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.ChannelPriority%2A> property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#23](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#23)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#23](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink(System.String,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateMessageSink (url As String, remoteChannelData As Object, ByRef objectURI As String) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageSink ^ CreateMessageSink(System::String ^ url, System::Object ^ remoteChannelData, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageSink : string * obj * string -&gt; System.Runtime.Remoting.Messaging.IMessageSink&#xA;override this.CreateMessageSink : string * obj * string -&gt; System.Runtime.Remoting.Messaging.IMessageSink" Usage="ipcClientChannel.CreateMessageSink (url, remoteChannelData, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink(System.String,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="0c87c-150">新しいシンクがメッセージを配信する先の URL。</span><span class="sxs-lookup"><span data-stu-id="0c87c-150">The URL to which the new sink delivers messages.</span></span> <span data-ttu-id="0c87c-151">このパラメーターは、<see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="0c87c-151">This parameter can be <see langword="null" />.</span></span></param>
        <param name="remoteChannelData"><span data-ttu-id="0c87c-152">新しいシンクがメッセージを配信する先のリモート ホストのチャネル データ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0c87c-152">The channel data object of the remote host to which the new sink will deliver messages.</span></span> <span data-ttu-id="0c87c-153">このパラメーターは、<see langword="null" /> に設定できます。</span><span class="sxs-lookup"><span data-stu-id="0c87c-153">This parameter can be <see langword="null" />.</span></span></param>
        <param name="objectURI"><span data-ttu-id="0c87c-154">このメソッドが返されるときに、指定した URL またはチャネル データ オブジェクトにメッセージを配信する新しいチャネル メッセージ シンクの URI を格納します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-154">When this method returns, contains the URI of the new channel message sink that delivers messages to the specified URL or channel data object.</span></span> <span data-ttu-id="0c87c-155">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0c87c-155">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="0c87c-156">指定した URL またはチャネル データ オブジェクトにメッセージを配信するチャネル メッセージ シンクを返します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-156">Returns a channel message sink that delivers messages to the specified URL or channel data object.</span></span></summary>
        <returns><span data-ttu-id="0c87c-157">指定した URL またはチャネル データ オブジェクトにメッセージを配信するチャネル メッセージ シンク。</span><span class="sxs-lookup"><span data-stu-id="0c87c-157">A channel message sink that delivers messages to the specified URL or channel data object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c87c-158"><xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A> メソッドは、指定された URL またはチャネルデータオブジェクトにメッセージを配信するチャネルメッセージシンクを返します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-158">The <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A> method returns a channel message sink that delivers messages to either the specified URL or the channel data object.</span></span> <span data-ttu-id="0c87c-159">`uri` パラメーターが `null`の場合、`remoteChannelData` はシンクのターゲットとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="0c87c-159">If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink.</span></span> <span data-ttu-id="0c87c-160">`url` または `remoteChannelData` のいずれかのパラメーターを `null`することはできますが、両方を指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="0c87c-160">Either the `url` or `remoteChannelData` parameters can be `null`, but not both.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0c87c-161"><xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A> メソッドを使用するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-161">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.CreateMessageSink%2A> method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#22](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#22)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#22](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException"><span data-ttu-id="0c87c-162">指定されたシンクで <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" /> が実装されていません。</span><span class="sxs-lookup"><span data-stu-id="0c87c-162">The provided sink does not implement <see cref="T:System.Runtime.Remoting.Messaging.IMessageSink" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.ISecurableChannel.IsSecured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c87c-163">現在のチャネルをセキュリティで保護しているかどうかを示すブール値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-163">Gets or sets a Boolean value that indicates whether the current channel is secure.</span></span></summary>
        <value><span data-ttu-id="0c87c-164">現在のインスタンスをセキュリティで保護しているかどうかを示すブール値。</span><span class="sxs-lookup"><span data-stu-id="0c87c-164">A Boolean value that indicates whether the current instance is secure.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string * string -&gt; string&#xA;override this.Parse : string * string -&gt; string" Usage="ipcClientChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="0c87c-165">オブジェクト URI の抽出元 URL。</span><span class="sxs-lookup"><span data-stu-id="0c87c-165">The URL from which to extract the object URI.</span></span></param>
        <param name="objectURI"><span data-ttu-id="0c87c-166">このメソッドから制御が戻るときに、既知のリモート オブジェクトの URI を保持している <see cref="T:System.String" /> インスタンスを格納します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-166">When this method returns, a <see cref="T:System.String" /> instance that holds the URI of the remote well-known object.</span></span> <span data-ttu-id="0c87c-167">このパラメーターは初期化せずに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0c87c-167">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="0c87c-168">指定した URL からチャネル URI と既知のリモート オブジェクト URI を抽出します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-168">Extracts the channel URI and the remote well-known object URI from the specified URL.</span></span></summary>
        <returns><span data-ttu-id="0c87c-169">チャネル URI を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="0c87c-169">A <see cref="T:System.String" /> that contains the channel URI.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0c87c-170"><xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse%2A> メソッドを使用するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="0c87c-170">The following code example shows how to use the <xref:System.Runtime.Remoting.Channels.Ipc.IpcClientChannel.Parse%2A> method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#24](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CPP/client.cpp#24)]
 [!code-csharp[System.Runtime.Remoting.Channels.Ipc.IpcClientChannel#24](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Ipc.IpcClientChannel/CS/client.cs#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
