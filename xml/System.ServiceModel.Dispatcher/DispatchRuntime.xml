<Type Name="DispatchRuntime" FullName="System.ServiceModel.Dispatcher.DispatchRuntime">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70099911405e0ffe5cfc741d809ca791dc383a00" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73393198" /></Metadata><TypeSignature Language="C#" Value="public sealed class DispatchRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DispatchRuntime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.DispatchRuntime" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DispatchRuntime" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatchRuntime sealed" />
  <TypeSignature Language="F#" Value="type DispatchRuntime = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e52cf-101">既定のサービス動作の変更や、カスタム オブジェクトの結合に使用できるプロパティを公開します。このカスタム オブジェクトで、受信メッセージをオブジェクトに変換して操作にディスパッチする方法を変更できます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-101">Exposes properties that can be used to modify default service behavior as well as attach custom objects that can modify how incoming messages are transformed into objects and dispatched to operations.</span></span> <span data-ttu-id="e52cf-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="e52cf-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-103"><xref:System.ServiceModel.Dispatcher.DispatchRuntime> クラスは、サービスまたは個別のエンドポイントの既定動作を変更するため、またはカスタム変更を実装したオブジェクトを次のサービス プロセスの一方または両方に挿入するために使用します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-103">Use the <xref:System.ServiceModel.Dispatcher.DispatchRuntime> class either to modify the default behavior of a service or individual endpoint, or to insert objects that implement custom modifications to one or both of the following service processes:</span></span>  
  
1.  <span data-ttu-id="e52cf-104">受信メッセージをオブジェクトに変換し、メソッド呼び出しとしてサービス オブジェクト上でそれらのオブジェクトを解放します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-104">The transformation of incoming messages into objects and releasing those objects as method invocations on a service object.</span></span>  
  
2.  <span data-ttu-id="e52cf-105">サービス操作呼び出しに対する応答から受信したオブジェクトを送信メッセージに変換します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-105">The transformation of objects received from the response to a service operation invocation into outbound messages.</span></span>  
  
 <span data-ttu-id="e52cf-106">Windows Communication Foundation (WCF) では、チャネルおよびエンドポイントディスパッチャーは、新しいチャネルの受け入れ、メッセージの受信、メソッドのディスパッチと呼び出し、および応答処理を行うサービスコンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="e52cf-106">In Windows Communication Foundation (WCF), the channel and endpoint dispatchers are the service components responsible for accepting new channels, receiving messages, method dispatch and invocation, and response processing.</span></span> <span data-ttu-id="e52cf-107"><xref:System.ServiceModel.ServiceHost> オブジェクトによって公開される各エンドポイントには、1 つのエンドポイント ディスパッチャーと、関連付けられた 1 つのチャネル ディスパッチャーがあります。さらに、双方向通信に参加する各クライアントには、各コールバック エンドポイントのエンドポイント ディスパッチャーとチャネル ディスパッチャーもあります。</span><span class="sxs-lookup"><span data-stu-id="e52cf-107">Each endpoint exposed by a <xref:System.ServiceModel.ServiceHost> object has one endpoint dispatcher and an associated channel dispatcher; in addition, each client that participates in duplex communication also has an endpoint dispatcher and channel dispatcher for each callback endpoint.</span></span>  
  
 <span data-ttu-id="e52cf-108"><xref:System.ServiceModel.Dispatcher.DispatchRuntime> を使用すると、メッセージが認識されない場合でも、特定のコントラクト全体のすべてのメッセージについて、特定のチャネルまたはエンドポイント ディスパッチャーを途中受信および拡張できます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-108">The <xref:System.ServiceModel.Dispatcher.DispatchRuntime> enables you to intercept and extend the channel or endpoint dispatcher for all messages across a particular contract, even when a message is not recognized.</span></span> <span data-ttu-id="e52cf-109">コントラクト内で宣言されているどのメッセージとも一致しないメッセージが到着すると、<xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A> プロパティにより返された操作にディスパッチされます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-109">When a message arrives that does not match any messages declared in the contract it is dispatched to the operation that was returned by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A> property.</span></span> <span data-ttu-id="e52cf-110">特定の操作についてすべてのメッセージを途中受信または拡張する方法については、<xref:System.ServiceModel.Dispatcher.DispatchOperation> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e52cf-110">To intercept or extend across all messages for a particular operation, see the <xref:System.ServiceModel.Dispatcher.DispatchOperation> class.</span></span>  
  
 <span data-ttu-id="e52cf-111"><xref:System.ServiceModel.Dispatcher.DispatchRuntime> クラスによって公開されているディスパッチャー拡張性は次の 4 つの領域に大別できます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-111">There are four main areas of dispatcher extensibility exposed by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime> class:</span></span>  
  
1.  <span data-ttu-id="e52cf-112">ディスパッチ コンポーネントは、<xref:System.ServiceModel.Dispatcher.DispatchRuntime> のプロパティおよび <xref:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher%2A> プロパティによって返される関連チャネル ディスパッチャーのプロパティを使用して、チャネル ディスパッチャーがチャネルを受け入れてクローズする方法をカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="e52cf-112">Dispatch components use the properties of the <xref:System.ServiceModel.Dispatcher.DispatchRuntime> and those of the associated channel dispatcher returned by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher%2A> property to customize how the channel dispatcher accepts and closes channels.</span></span> <span data-ttu-id="e52cf-113">この分類に属するプロパティとして、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers%2A> プロパティおよび <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers%2A> があります。</span><span class="sxs-lookup"><span data-stu-id="e52cf-113">This category includes the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers%2A> and <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers%2A> properties.</span></span>  
  
2.  <span data-ttu-id="e52cf-114">メッセージ コンポーネントを、処理されるメッセージごとにカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="e52cf-114">Message components are customized for each message processed.</span></span> <span data-ttu-id="e52cf-115">この分類に属するプロパティとして、<xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A>、<xref:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector%2A>、<xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A>、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> があります。</span><span class="sxs-lookup"><span data-stu-id="e52cf-115">This category includes the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A>, <xref:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector%2A>, <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A>, and the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> properties.</span></span>  
  
3.  <span data-ttu-id="e52cf-116">インスタンス コンポーネントが、特定のサービス型のインスタンスの作成、有効期間、破棄をカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="e52cf-116">Instance components customize the creation, lifetime, and disposal of instances of the service type.</span></span> <span data-ttu-id="e52cf-117">サービス オブジェクトの有効期間の詳細については、<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e52cf-117">For more information about service object lifetimes, see the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property.</span></span> <span data-ttu-id="e52cf-118">このカテゴリには、<xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> プロパティおよび <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A> プロパティが含まれます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-118">This category includes the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> and the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A> properties.</span></span>  
  
4.  <span data-ttu-id="e52cf-119">セキュリティ関連コンポーネントは、次のプロパティを使用できます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-119">Security-related components can use the following properties:</span></span>  
  
    -   <span data-ttu-id="e52cf-120"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A> は、監査イベントが出力される場所を示します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-120"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A> indicates where audit events are written.</span></span>  
  
    -   <span data-ttu-id="e52cf-121"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations%2A> は、サービスが受信メッセージによって提供される資格情報を使用して偽装を試みるかどうかを制御します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-121"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations%2A> controls whether the service attempts to impersonate using the credentials provided by the incoming message.</span></span>  
  
    -   <span data-ttu-id="e52cf-122"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel%2A> は、<xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A> によって指定されたイベント ログに、メッセージ認証成功イベントを出力するかどうかを制御します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-122"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel%2A> controls whether successful message authentication events are written to the event log specified by <xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A>.</span></span>  
  
    -   <span data-ttu-id="e52cf-123"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode%2A> は、<xref:System.Threading.Thread.CurrentPrincipal%2A> プロパティの設定方法を制御します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-123"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode%2A> controls how the <xref:System.Threading.Thread.CurrentPrincipal%2A> property is set.</span></span>  
  
    -   <span data-ttu-id="e52cf-124"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A> は、承認イベントの監査の実行方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-124"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A> specifies how the auditing of authorization events is performed.</span></span>  
  
    -   <span data-ttu-id="e52cf-125"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure%2A> は、ログ記録処理中に発生した致命的でない例外を抑制するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-125"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure%2A> specifies whether to suppress non-critical exceptions that occur during the logging process.</span></span>  
  
 <span data-ttu-id="e52cf-126">カスタムの拡張オブジェクトは通常、<xref:System.ServiceModel.Dispatcher.DispatchRuntime> プロパティに割り当てるか、またはサービス動作 (<xref:System.ServiceModel.Description.IServiceBehavior> を実装するオブジェクト)、契約動作 (<xref:System.ServiceModel.Description.IContractBehavior> を実装するオブジェクト)、エンドポイント動作 (<xref:System.ServiceModel.Description.IEndpointBehavior> を実装するオブジェクト) のいずれかによってコレクションに挿入します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-126">Typically custom extension objects are assigned to a <xref:System.ServiceModel.Dispatcher.DispatchRuntime> property or inserted into a collection by a service behavior (an object that implements <xref:System.ServiceModel.Description.IServiceBehavior>), a contract behavior (an object that implements <xref:System.ServiceModel.Description.IContractBehavior>), or an endpoint behavior (an object that implements <xref:System.ServiceModel.Description.IEndpointBehavior>).</span></span> <span data-ttu-id="e52cf-127">次に、インストール動作オブジェクトを、プログラムで直接、またはカスタムの <xref:System.ServiceModel.Configuration.BehaviorExtensionElement> オブジェクトを実装して適切な動作コレクションに追加し、アプリケーション構成ファイルを使用して動作を挿入できるようにします。</span><span class="sxs-lookup"><span data-stu-id="e52cf-127">Then the installing behavior object is added to the appropriate collection of behaviors either programmatically or by implementing a custom <xref:System.ServiceModel.Configuration.BehaviorExtensionElement> object to enable the behavior to be inserted using an application configuration file.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AutomaticInputSessionShutdown">
      <MemberSignature Language="C#" Value="public bool AutomaticInputSessionShutdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutomaticInputSessionShutdown" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticInputSessionShutdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutomaticInputSessionShutdown { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticInputSessionShutdown : bool with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-128">クライアントが出力セッションを閉じるときに、サービスは入力セッションを閉じるかどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-128">Gets or sets a value that specifies whether the service closes an input session when the client closes an output session.</span></span></summary>
        <value><span data-ttu-id="e52cf-129">クライアントが出力セッションを閉じるときにサービスが入力セッションを閉じる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-129"><see langword="true" /> if the service closes an input session when the client closes an output session; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e52cf-130">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="e52cf-130">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-131"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown%2A> プロパティに `false` を設定した場合は、その他のしくみによってチャネルが閉じられる必要があります。</span><span class="sxs-lookup"><span data-stu-id="e52cf-131">If you set the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown%2A> property to `false`, the channel must be closed by some other mechanism.</span></span> <span data-ttu-id="e52cf-132">この場合は、カスタム セッション シャットダウン ハンドラーを <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers%2A> プロパティに追加する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e52cf-132">In this case, you must add a custom session shutdown handler to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers%2A> property.</span></span>  
  
 <span data-ttu-id="e52cf-133">既定では、クライアントが出力セッションを閉じ、残っているすべてのメッセージの処理をサービスが終了した時点で、サービスはセッションを閉じます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-133">By default when a client closes an output session and the service has finished processing any remaining messages the server closes the session.</span></span> <span data-ttu-id="e52cf-134"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown%2A> を `false` に設定すると、サーバーがセッションを自動的に閉じることはなく、セッションの有効期間のカスタム制御が可能です。</span><span class="sxs-lookup"><span data-stu-id="e52cf-134">Setting <xref:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown%2A> to `false` prevents the server from automatically closing the session and enables custom control of session lifetimes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackClientRuntime">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ClientRuntime CallbackClientRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ClientRuntime CallbackClientRuntime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallbackClientRuntime As ClientRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ClientRuntime ^ CallbackClientRuntime { System::ServiceModel::Dispatcher::ClientRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CallbackClientRuntime : System.ServiceModel.Dispatcher.ClientRuntime" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ClientRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-135">双方向コールバック エンドポイントに対する送信呼び出しに関する Windows Communication Foundation (WCF) への機能拡張のインストール ポイントを表す <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-135">Gets the <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> object that represents the installation point for extensions to Windows Communication Foundation (WCF) for outbound calls to a duplex callback endpoint.</span></span></summary>
        <value><span data-ttu-id="e52cf-136">双方向コントラクトでのランタイム クライアント カスタマイズのインストール ポイントである <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e52cf-136">The <see cref="T:System.ServiceModel.Dispatcher.ClientRuntime" /> object that is the installation point for run-time client customization in duplex contracts.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-137"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A> を使用して、パラメーターの送信メッセージへの変換方法および応答メッセージの戻り値への変換方法を表示または変更する、カスタムの拡張オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-137">Use the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A> to add custom extension objects that view or modify the conversion of parameters to outbound messages and response messages back into return values.</span></span> <span data-ttu-id="e52cf-138">詳細については、「<xref:System.ServiceModel.Dispatcher.ClientRuntime>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e52cf-138">For details, see <xref:System.ServiceModel.Dispatcher.ClientRuntime>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelDispatcher">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ChannelDispatcher ChannelDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ChannelDispatcher ChannelDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelDispatcher As ChannelDispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ChannelDispatcher ^ ChannelDispatcher { System::ServiceModel::Dispatcher::ChannelDispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcher" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ChannelDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-139">このディスパッチ ランタイム オブジェクトの <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-139">Gets the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> for this dispatch run-time object.</span></span></summary>
        <value><span data-ttu-id="e52cf-140">ディスパッチ ランタイム オブジェクトのチャネル ディスパッチャー。</span><span class="sxs-lookup"><span data-stu-id="e52cf-140">The channel dispatcher for the dispatch run-time object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrencyMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ConcurrencyMode ConcurrencyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.ConcurrencyMode ConcurrencyMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.ConcurrencyMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ConcurrencyMode As ConcurrencyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ConcurrencyMode ConcurrencyMode { System::ServiceModel::ConcurrencyMode get(); void set(System::ServiceModel::ConcurrencyMode value); };" />
      <MemberSignature Language="F#" Value="member this.ConcurrencyMode : System.ServiceModel.ConcurrencyMode with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.ConcurrencyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ConcurrencyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-141">サービスのインスタンスがメッセージを順番に処理するか、または同時に処理するかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-141">Gets or sets whether an instance of a service processes messages sequentially or concurrently.</span></span></summary>
        <value><span data-ttu-id="e52cf-142">サービスのインスタンスがメッセージを順番に処理するか、または同時に処理するかを制御する <see cref="T:System.ServiceModel.ConcurrencyMode" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e52cf-142">A <see cref="T:System.ServiceModel.ConcurrencyMode" /> object that controls whether an instance of a service processes messages sequentially or concurrently.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-143">`Multiple` コンカレンシー モードを使用するには、サービスの実装がスレッドセーフである必要があります。</span><span class="sxs-lookup"><span data-stu-id="e52cf-143">The service implementation must be thread-safe to use the `Multiple` concurrency mode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndpointDispatcher">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.EndpointDispatcher EndpointDispatcher" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndpointDispatcher As EndpointDispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::EndpointDispatcher ^ EndpointDispatcher { System::ServiceModel::Dispatcher::EndpointDispatcher ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndpointDispatcher : System.ServiceModel.Dispatcher.EndpointDispatcher" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.EndpointDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-144">このディスパッチ ランタイムの <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-144">Gets the <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> for this dispatch runtime.</span></span></summary>
        <value><span data-ttu-id="e52cf-145">このディスパッチ ランタイムの <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-145">The <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> for this dispatch runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-146"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher%2A> プロパティを使用して、エンドポイント固有の実行を変更またはカスタマイズするために、このディスパッチ ランタイムと関連付けられているエンドポイント ディスパッチャーを取得します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-146">Use the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher%2A> property to obtain the endpoint dispatcher associated with this dispatch runtime to modify or customize endpoint-specific execution.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureOrderedDispatch">
      <MemberSignature Language="C#" Value="public bool EnsureOrderedDispatch { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnsureOrderedDispatch" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.EnsureOrderedDispatch" />
      <MemberSignature Language="VB.NET" Value="Public Property EnsureOrderedDispatch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnsureOrderedDispatch { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnsureOrderedDispatch : bool with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.EnsureOrderedDispatch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-147">メッセージが送信された順序でディスパッチされるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-147">Gets a value that indicates whether messages are to be dispatched in the order they were sent.</span></span></summary>
        <value><span data-ttu-id="e52cf-148">メッセージが、送信された順に配信される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-148"><see langword="true" /> if messages are to be dispatched in the order they were sent; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalAuthorizationPolicies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ExternalAuthorizationPolicies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ExternalAuthorizationPolicies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.ExternalAuthorizationPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalAuthorizationPolicies As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ExternalAuthorizationPolicies { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ get(); void set(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExternalAuthorizationPolicies : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.ExternalAuthorizationPolicies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-149">特定のクレーム セットについて、ユーザーを承認するための一連のルールを定義する外部承認ポリシーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-149">Gets or sets the external authorization policies that define a set of rules for authorizing a user, given a set of claims.</span></span></summary>
        <value><span data-ttu-id="e52cf-150">特定のクレーム セットについて、ユーザーを承認するための一連のルールを定義する <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> オブジェクトの <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-150">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> objects that define a set of rules for authorizing a user, given a set of claims.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-151">このプロパティは、特定のクレーム セットについてユーザーを承認するための一連のルールを定義する <xref:System.IdentityModel.Policy.IAuthorizationPolicy> のカスタム実装を追加するために使用します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-151">Use this property to add a custom implementation of <xref:System.IdentityModel.Policy.IAuthorizationPolicy> that defines a set of rules for authorizing a user, given a set of claims.</span></span> <span data-ttu-id="e52cf-152">このカスタム実装は、サービスが呼び出されるたびに使用されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-152">This custom implementation is used every time the service is called.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreTransactionMessageProperty">
      <MemberSignature Language="C#" Value="public bool IgnoreTransactionMessageProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreTransactionMessageProperty" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.IgnoreTransactionMessageProperty" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreTransactionMessageProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreTransactionMessageProperty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreTransactionMessageProperty : bool with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.IgnoreTransactionMessageProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-153"><see cref="T:System.ServiceModel.Channels.TransactionMessageProperty" /> を無視するかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-153">Gets or sets whether to ignore the <see cref="T:System.ServiceModel.Channels.TransactionMessageProperty" />.</span></span></summary>
        <value><span data-ttu-id="e52cf-154">サービス メソッドを実行するときに <see cref="T:System.ServiceModel.Channels.TransactionMessageProperty" /> を無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-154"><see langword="true" />, the <see cref="T:System.ServiceModel.Channels.TransactionMessageProperty" /> is ignored when executing the service method; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-155"><xref:System.ServiceModel.Channels.TransactionMessageProperty> では、チャネルに独自のトランザクションフローメカニズムを使用するサードパーティのチャネル開発者が、Windows Communication Foundation (WCF) にトランザクションを導入できます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-155">The <xref:System.ServiceModel.Channels.TransactionMessageProperty> allows third-party channel developers who use a proprietary transaction flow mechanism for their channel to introduce their transaction into Windows Communication Foundation (WCF).</span></span> <span data-ttu-id="e52cf-156">このプロパティを `true` に設定すると、サービス メソッドの実行時にトランザクションは無視されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-156">If this property is set to `true`, the transaction is ignored when executing the service method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonateCallerForAllOperations">
      <MemberSignature Language="C#" Value="public bool ImpersonateCallerForAllOperations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImpersonateCallerForAllOperations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonateCallerForAllOperations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImpersonateCallerForAllOperations { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonateCallerForAllOperations : bool with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-157">受信メッセージによって提供される資格情報を使用してサービスが偽装を試みるかどうかを制御する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-157">Gets or sets a value that controls whether the service attempts to impersonate using the credentials provided by the incoming message.</span></span></summary>
        <value><span data-ttu-id="e52cf-158">操作の <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" /> プロパティの値が <see cref="F:System.ServiceModel.ImpersonationOption.Required" /> または <see cref="F:System.ServiceModel.ImpersonationOption.Allowed" /> のときに、メッセージの資格情報に基づいてサービスが偽装を試みる場合は <see langword="true" />、操作の <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" /> プロパティの値が <see cref="F:System.ServiceModel.ImpersonationOption.Required" /> のときにのみサービスが偽装を試みる場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-158"><see langword="true" /> if the service attempts to impersonate based on message credentials when an operation's <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" /> property value is either <see cref="F:System.ServiceModel.ImpersonationOption.Required" /> or <see cref="F:System.ServiceModel.ImpersonationOption.Allowed" />; <see langword="false" /> if the service attempts impersonation only if an operation's <see cref="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" /> property value is <see cref="F:System.ServiceModel.ImpersonationOption.Required" />.</span></span> <span data-ttu-id="e52cf-159">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e52cf-159">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-160"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations%2A> プロパティを使用して、操作の <xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A> プロパティ値が <xref:System.ServiceModel.ImpersonationOption.Allowed> のときに偽装を行うどうかを制御します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-160">Use the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations%2A> property to control whether impersonation is performed when an operation's <xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A> property value is <xref:System.ServiceModel.ImpersonationOption.Allowed>.</span></span> <span data-ttu-id="e52cf-161">このプロパティが `true` であるが、操作の <xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A> プロパティ値は <xref:System.ServiceModel.ImpersonationOption.NotAllowed> の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-161">An exception is thrown if the property is `true` but an operation's <xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A> property value is <xref:System.ServiceModel.ImpersonationOption.NotAllowed>.</span></span>  
  
 <span data-ttu-id="e52cf-162">操作の <xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A> プロパティ値が <xref:System.ServiceModel.ImpersonationOption.Required> の場合は、常に偽装を試みます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-162">If an operation's <xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A> property value is <xref:System.ServiceModel.ImpersonationOption.Required> impersonation is always attempted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonateOnSerializingReply">
      <MemberSignature Language="C#" Value="public bool ImpersonateOnSerializingReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImpersonateOnSerializingReply" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateOnSerializingReply" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonateOnSerializingReply As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImpersonateOnSerializingReply { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ImpersonateOnSerializingReply : bool with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateOnSerializingReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-163">応答操作のシリアル化で偽装が使用されているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-163">Gets a value that indicates whether impersonation is used on serializing reply operation.</span></span></summary>
        <value><span data-ttu-id="e52cf-164">応答操作のシリアル化で偽装が使用される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-164"><see langword="true" /> if impersonation is used on serializing reply operation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputSessionShutdownHandlers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IInputSessionShutdown&gt; InputSessionShutdownHandlers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IInputSessionShutdown&gt; InputSessionShutdownHandlers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputSessionShutdownHandlers As SynchronizedCollection(Of IInputSessionShutdown)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IInputSessionShutdown ^&gt; ^ InputSessionShutdownHandlers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IInputSessionShutdown ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputSessionShutdownHandlers : System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IInputSessionShutdown&gt;" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IInputSessionShutdown&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-165">入力セッションを閉じる方法を制御するためのカスタム ハンドラーの追加に使用できる <see cref="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" /> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-165">Gets a collection of <see cref="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" /> objects that can be used to add a custom handler to control how input sessions are closed.</span></span></summary>
        <value><span data-ttu-id="e52cf-166"><see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 型オブジェクトの <see cref="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-166">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-167">入力セッションのクローズ方法を制御するこのプロパティに、<xref:System.ServiceModel.Dispatcher.IInputSessionShutdown> オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-167">Add an <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown> object to this property to control the manner in which input sessions are closed.</span></span> <span data-ttu-id="e52cf-168"><xref:System.ServiceModel.Channels.IInputChannel.Receive%2A?displayProperty=nameWithType> での <xref:System.ServiceModel.Channels.IDuplexSessionChannel?displayProperty=nameWithType> メソッドの呼び出しが最初に `null` を返す (これは、入力セッションが閉じられていることを示します) と、ディスパッチャーは各 <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown> オブジェクトを呼び出して、<xref:System.ServiceModel.Channels.IDuplexSessionChannel?displayProperty=nameWithType> オブジェクトを渡します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-168">When a call to the <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.Channels.IDuplexSessionChannel?displayProperty=nameWithType> first returns `null`, (which indicates that the input session has been closed), the dispatcher invokes each <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown> object, passing it an <xref:System.ServiceModel.Channels.IDuplexSessionChannel?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="e52cf-169">カスタムの <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown> オブジェクトは、この <xref:System.ServiceModel.Channels.IDuplexSessionChannel> オブジェクトを使用して、各チャネル状態のクリーンアップを実行したり、応答メッセージを送信してからチャネルをクローズしたりできます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-169">Custom <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown> objects can use this <xref:System.ServiceModel.Channels.IDuplexSessionChannel> object to perform clean-up for each channel state or to send a response message before closing the channel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceContextInitializers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IInstanceContextInitializer&gt; InstanceContextInitializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IInstanceContextInitializer&gt; InstanceContextInitializers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstanceContextInitializers As SynchronizedCollection(Of IInstanceContextInitializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IInstanceContextInitializer ^&gt; ^ InstanceContextInitializers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IInstanceContextInitializer ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InstanceContextInitializers : System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IInstanceContextInitializer&gt;" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IInstanceContextInitializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-170"><see cref="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" /> オブジェクトが最初に作成されたときにそれを検査または変更するために使用できる <see cref="T:System.ServiceModel.InstanceContext" /> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-170">Gets a collection of <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" /> objects that can be used to inspect or modify an <see cref="T:System.ServiceModel.InstanceContext" /> object when it is first created.</span></span></summary>
        <value><span data-ttu-id="e52cf-171"><see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 型の <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e52cf-171">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> object of type <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-172"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> プロパティを使用して、<xref:System.ServiceModel.InstanceContext> オブジェクトの作成時に検査または変更できるカスタム初期化子を追加します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-172">Use the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A> property to add a custom initializer that can inspect or modify an <xref:System.ServiceModel.InstanceContext> object when it is first created.</span></span> <span data-ttu-id="e52cf-173"><xref:System.ServiceModel.InstanceContext> オブジェクトが作成される頻度は、<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> プロパティにより制御されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-173">The frequency with which <xref:System.ServiceModel.InstanceContext> objects are created is controlled by the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceContextProvider">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.IInstanceContextProvider InstanceContextProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.IInstanceContextProvider InstanceContextProvider" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceContextProvider As IInstanceContextProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::IInstanceContextProvider ^ InstanceContextProvider { System::ServiceModel::Dispatcher::IInstanceContextProvider ^ get(); void set(System::ServiceModel::Dispatcher::IInstanceContextProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceContextProvider : System.ServiceModel.Dispatcher.IInstanceContextProvider with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IInstanceContextProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-174"><see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> が使用する <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-174">Gets or sets the <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> to be used by the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</span></span></summary>
        <value><span data-ttu-id="e52cf-175"><see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> で使用する <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-175">The <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> to be used by the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstanceProvider">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.IInstanceProvider InstanceProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.IInstanceProvider InstanceProvider" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property InstanceProvider As IInstanceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::IInstanceProvider ^ InstanceProvider { System::ServiceModel::Dispatcher::IInstanceProvider ^ get(); void set(System::ServiceModel::Dispatcher::IInstanceProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstanceProvider : System.ServiceModel.Dispatcher.IInstanceProvider with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IInstanceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-176">サービス オブジェクトの作成と破棄の制御に使用できる <see cref="T:System.ServiceModel.Dispatcher.IInstanceProvider" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-176">Gets or sets an <see cref="T:System.ServiceModel.Dispatcher.IInstanceProvider" /> object that you can use to control the creation and destruction of service objects.</span></span></summary>
        <value><span data-ttu-id="e52cf-177"><see cref="T:System.ServiceModel.Dispatcher.IInstanceProvider" /> オブジェクトに関連付けられたサービス オブジェクトの生成と破棄を制御する <see cref="T:System.ServiceModel.InstanceContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e52cf-177">An <see cref="T:System.ServiceModel.Dispatcher.IInstanceProvider" /> object that controls the creation and destruction of service objects associated with an <see cref="T:System.ServiceModel.InstanceContext" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-178"><xref:System.ServiceModel.Dispatcher.IInstanceProvider> インターフェイスを実装し、<xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A> プロパティに実装を割り当てて、パラメーターなしのコンストラクター以外のコンストラクターを使用してサービス型のインスタンスを制御します。たとえば、インスタンスなどのカスタムインスタンス化モードを実装します。待機.</span><span class="sxs-lookup"><span data-stu-id="e52cf-178">Implement the <xref:System.ServiceModel.Dispatcher.IInstanceProvider> interface and assign the implementation to the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A> property to control instances of the service type using a constructor other than the parameterless constructor, for example, to implement a custom instancing mode such as instance pooling.</span></span>  
  
 <span data-ttu-id="e52cf-179">通常、<xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> メソッドは、<xref:System.ServiceModel.InstanceContext> オブジェクトが最初に生成されたときに、一度だけ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-179">Typically the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> method is invoked once, when the <xref:System.ServiceModel.InstanceContext> object is first created.</span></span> <span data-ttu-id="e52cf-180"><xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> メソッドも、<xref:System.ServiceModel.InstanceContext> がクローズされたときに、一度だけ呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-180">The <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method is also invoked once, when the <xref:System.ServiceModel.InstanceContext> object is closed.</span></span>  
  
 <span data-ttu-id="e52cf-181"><xref:System.ServiceModel.InstanceContext> オブジェクトがクローズされる前にインスタンスを解放するように、サービスを構成することもできます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-181">A service can also be configured to release an instance before the <xref:System.ServiceModel.InstanceContext> object is closed.</span></span> <span data-ttu-id="e52cf-182">それには、<xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> プロパティを使用するか、<xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-182">This can be configured by using the <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A> property or by calling the <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> method.</span></span> <span data-ttu-id="e52cf-183">そうすると、<xref:System.ServiceModel.InstanceContext> オブジェクトは <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-183">If this is done, the <xref:System.ServiceModel.InstanceContext> object calls the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A> method.</span></span> <span data-ttu-id="e52cf-184">インスタンスが解放された後に新しいメッセージが着信すると、<xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> メソッドによって新しいインスタンスが生成されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-184">If a new message arrives after the instance has been released, a new instance is created using the <xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageAuthenticationAuditLevel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.AuditLevel MessageAuthenticationAuditLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.AuditLevel MessageAuthenticationAuditLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageAuthenticationAuditLevel As AuditLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::AuditLevel MessageAuthenticationAuditLevel { System::ServiceModel::AuditLevel get(); void set(System::ServiceModel::AuditLevel value); };" />
      <MemberSignature Language="F#" Value="member this.MessageAuthenticationAuditLevel : System.ServiceModel.AuditLevel with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.AuditLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-185">メッセージ認証成功イベントを <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation" /> で指定されているイベント ログに書き込むかどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-185">Gets or sets a value that specifies whether successful message authentication events are written to the event log specified by <see cref="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation" />.</span></span></summary>
        <value><span data-ttu-id="e52cf-186"><see cref="T:System.ServiceModel.AuditLevel" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e52cf-186">One of the <see cref="T:System.ServiceModel.AuditLevel" /> values.</span></span> <span data-ttu-id="e52cf-187">既定値は、<see cref="F:System.ServiceModel.AuditLevel.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="e52cf-187">The default is <see cref="F:System.ServiceModel.AuditLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-188"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel%2A> プロパティを使用して、メッセージ認証成功イベントをイベント ログに書き出すかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-188">Use the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel%2A> property to specify whether successful message authentication events are written to the event log.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageInspectors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IDispatchMessageInspector&gt; MessageInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IDispatchMessageInspector&gt; MessageInspectors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageInspectors As SynchronizedCollection(Of IDispatchMessageInspector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IDispatchMessageInspector ^&gt; ^ MessageInspectors { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IDispatchMessageInspector ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageInspectors : System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IDispatchMessageInspector&gt;" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IDispatchMessageInspector&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-189">エンドポイントを通過するすべての受信および送信メッセージにカスタム メッセージ インスペクターを結合するために使用できる <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" /> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-189">Gets a collection of <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" /> objects that can be used to attach a custom message inspector for all incoming and outgoing messages across the endpoint.</span></span></summary>
        <value><span data-ttu-id="e52cf-190"><see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 型の <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e52cf-190">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> object of type <see cref="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-191"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A> プロパティを使用して、エンドポイントを通過するすべてのメッセージを検査または変換するカスタムの <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector> オブジェクトを結び付けます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-191">Use the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A> property to attach custom <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector> objects that can inspect or transform all messages that flow through the endpoint.</span></span> <span data-ttu-id="e52cf-192"><xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector> オブジェクトはメッセージへの参照を取得するため、それをバッファーに格納して、メッセージ本文のコピーを調べることができます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-192">Because the <xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector> object gets a reference to the message, you can buffer it and examine a copy of the body.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedKeyedCollection&lt;string,System.ServiceModel.Dispatcher.DispatchOperation&gt; Operations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedKeyedCollection`2&lt;string, class System.ServiceModel.Dispatcher.DispatchOperation&gt; Operations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operations As SynchronizedKeyedCollection(Of String, DispatchOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedKeyedCollection&lt;System::String ^, System::ServiceModel::Dispatcher::DispatchOperation ^&gt; ^ Operations { System::Collections::Generic::SynchronizedKeyedCollection&lt;System::String ^, System::ServiceModel::Dispatcher::DispatchOperation ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Operations : System.Collections.Generic.SynchronizedKeyedCollection&lt;string, System.ServiceModel.Dispatcher.DispatchOperation&gt;" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedKeyedCollection&lt;System.String,System.ServiceModel.Dispatcher.DispatchOperation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-193">特定の操作の実行動作の制御に使用できる <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> オブジェクトのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-193">Gets a collection of <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> objects that can be used to control the execution behavior of a particular operation.</span></span></summary>
        <value><span data-ttu-id="e52cf-194"><see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /> 型および <see cref="T:System.String" /> 型オブジェクトの <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-194">A <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /> of type <see cref="T:System.String" /> and <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-195"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> プロパティを使用して、パラメーターの検査または変更、パラメーターおよび戻り値のシリアル化/逆シリアル化の制御、操作の呼び出しの制御、その他の単一操作による動作の変更を行います。</span><span class="sxs-lookup"><span data-stu-id="e52cf-195">Use the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A> property to inspect or modify parameters, control parameter and return value serialization and deserialization, control operation invocation, and modify other behaviors for a single operation.</span></span> <span data-ttu-id="e52cf-196">詳細については、「<xref:System.ServiceModel.Dispatcher.DispatchOperation>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="e52cf-196">For details, see <xref:System.ServiceModel.Dispatcher.DispatchOperation>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationSelector">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.IDispatchOperationSelector OperationSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.IDispatchOperationSelector OperationSelector" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property OperationSelector As IDispatchOperationSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::IDispatchOperationSelector ^ OperationSelector { System::ServiceModel::Dispatcher::IDispatchOperationSelector ^ get(); void set(System::ServiceModel::Dispatcher::IDispatchOperationSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OperationSelector : System.ServiceModel.Dispatcher.IDispatchOperationSelector with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IDispatchOperationSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-197">特定のメッセージの宛先 <see cref="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" /> の選択を制御する <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> オブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-197">Gets or sets the <see cref="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" /> object that controls the selection of a destination <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> for a particular message.</span></span></summary>
        <value><span data-ttu-id="e52cf-198"><see cref="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e52cf-198">The <see cref="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-199"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector%2A> プロパティを使用して、指定したメッセージを受信する操作を決定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-199">Use the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector%2A> property to decide which operation receives a given message.</span></span> <span data-ttu-id="e52cf-200">既定の操作セレクターは、メッセージのアクション ヘッダーの値を返します。アクション ヘッダーは、正しい <xref:System.ServiceModel.Dispatcher.DispatchOperation> を検索するためのキーとして使用します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-200">The default operation selector returns the value of the action header for the message, which is used as the key to locate the correct <xref:System.ServiceModel.Dispatcher.DispatchOperation>.</span></span> <span data-ttu-id="e52cf-201">一致する操作が見つからない場合は、呼び出しが <xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A> プロパティからの戻り値にディスパッチされます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-201">If no matching operation is found, the invocation is dispatched to the return value from the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreserveMessage">
      <MemberSignature Language="C#" Value="public bool PreserveMessage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreserveMessage" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.PreserveMessage" />
      <MemberSignature Language="VB.NET" Value="Public Property PreserveMessage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreserveMessage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreserveMessage : bool with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.PreserveMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-202">メッセージが保持されるかどうかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-202">Gets or sets whether the message is preserved.</span></span></summary>
        <value><span data-ttu-id="e52cf-203">メッセージが保持される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-203"><see langword="true" /> if message is preserved; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalPermissionMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.PrincipalPermissionMode PrincipalPermissionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Description.PrincipalPermissionMode PrincipalPermissionMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property PrincipalPermissionMode As PrincipalPermissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::PrincipalPermissionMode PrincipalPermissionMode { System::ServiceModel::Description::PrincipalPermissionMode get(); void set(System::ServiceModel::Description::PrincipalPermissionMode value); };" />
      <MemberSignature Language="F#" Value="member this.PrincipalPermissionMode : System.ServiceModel.Description.PrincipalPermissionMode with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-204"><see cref="P:System.Threading.Thread.CurrentPrincipal" /> プロパティの設定方法を指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-204">Gets or sets a value that specifies how the <see cref="P:System.Threading.Thread.CurrentPrincipal" /> property is set.</span></span></summary>
        <value><span data-ttu-id="e52cf-205"><see cref="T:System.ServiceModel.Description.PrincipalPermissionMode" /> 値の 1 つ。既定値は <see cref="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" /> です。</span><span class="sxs-lookup"><span data-stu-id="e52cf-205">One of the <see cref="T:System.ServiceModel.Description.PrincipalPermissionMode" /> values; the default is <see cref="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-206"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode%2A> プロパティが <xref:System.ServiceModel.Description.PrincipalPermissionMode.None> である場合、<xref:System.Threading.Thread.CurrentPrincipal%2A> プロパティは設定されません。</span><span class="sxs-lookup"><span data-stu-id="e52cf-206">When the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode%2A> is <xref:System.ServiceModel.Description.PrincipalPermissionMode.None>, the <xref:System.Threading.Thread.CurrentPrincipal%2A> property is not set.</span></span>  
  
 <span data-ttu-id="e52cf-207">値が <xref:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups> の場合は、受信メッセージのユーザー資格情報に基づいて、<xref:System.Threading.Thread.CurrentPrincipal%2A> プロパティに <xref:System.Security.Principal.WindowsPrincipal> を格納します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-207">When the value is <xref:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups> the <xref:System.Threading.Thread.CurrentPrincipal%2A> property is populated with a <xref:System.Security.Principal.WindowsPrincipal> based on the user credentials of the incoming message.</span></span>  
  
 <span data-ttu-id="e52cf-208">値が <xref:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles> の場合は、<xref:System.Threading.Thread.CurrentPrincipal%2A> のロール情報に基づいて、<xref:System.Security.Principal.IPrincipal> プロパティに [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] オブジェクトが設定されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-208">When the value is <xref:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles> the <xref:System.Threading.Thread.CurrentPrincipal%2A> property is populated with an <xref:System.Security.Principal.IPrincipal> object based on [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] role information.</span></span>  
  
 <span data-ttu-id="e52cf-209">値が <xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom> の場合は、カスタムの <xref:System.Threading.Thread.CurrentPrincipal%2A> の実装によって <xref:System.IdentityModel.Policy.IAuthorizationPolicy> プロパティに値が設定されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-209">When the value is <xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom> the <xref:System.Threading.Thread.CurrentPrincipal%2A> property is populated by a custom <xref:System.IdentityModel.Policy.IAuthorizationPolicy> implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseServiceInstanceOnTransactionComplete">
      <MemberSignature Language="C#" Value="public bool ReleaseServiceInstanceOnTransactionComplete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReleaseServiceInstanceOnTransactionComplete" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete" />
      <MemberSignature Language="VB.NET" Value="Public Property ReleaseServiceInstanceOnTransactionComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReleaseServiceInstanceOnTransactionComplete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReleaseServiceInstanceOnTransactionComplete : bool with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-210">トランザクションが正常に完了した後でサービス オブジェクトをリサイクルするかどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-210">Gets or sets a value that specifies whether the service object is recycled after the transaction successfully completes.</span></span></summary>
        <value><span data-ttu-id="e52cf-211">トランザクションが正常に終了した後、サービス オブジェクトを再利用する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-211"><see langword="true" /> if the service object is recycled after the transaction successfully completes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e52cf-212">既定値は、<see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /> の値です。</span><span class="sxs-lookup"><span data-stu-id="e52cf-212">The default value is the value of <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-213">トランザクションが正常終了したときに、<xref:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete%2A> を使用して、<xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> メソッドが呼び出されるよう指定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-213">Use the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete%2A> to specify that the <xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A> method is called when the transaction successfully completes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleProvider">
      <MemberSignature Language="C#" Value="public System.Web.Security.RoleProvider RoleProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.RoleProvider RoleProvider" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.RoleProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property RoleProvider As RoleProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::RoleProvider ^ RoleProvider { System::Web::Security::RoleProvider ^ get(); void set(System::Web::Security::RoleProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RoleProvider : System.Web.Security.RoleProvider with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.RoleProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.RoleProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-214"><see cref="T:System.Web.Security.RoleProvider" /> が使用するカスタム <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-214">Gets or sets the custom <see cref="T:System.Web.Security.RoleProvider" /> that is used by the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</span></span></summary>
        <value><span data-ttu-id="e52cf-215"><see cref="T:System.Web.Security.RoleProvider" /> が使用しているカスタム <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-215">The custom <see cref="T:System.Web.Security.RoleProvider" /> that is used by the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityAuditLogLocation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.AuditLogLocation SecurityAuditLogLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.AuditLogLocation SecurityAuditLogLocation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityAuditLogLocation As AuditLogLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::AuditLogLocation SecurityAuditLogLocation { System::ServiceModel::AuditLogLocation get(); void set(System::ServiceModel::AuditLogLocation value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityAuditLogLocation : System.ServiceModel.AuditLogLocation with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.AuditLogLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-216">監査ログの場所を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-216">Gets or sets the location of the audit log.</span></span></summary>
        <value><span data-ttu-id="e52cf-217"><see cref="T:System.ServiceModel.AuditLogLocation" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="e52cf-217">One of the <see cref="T:System.ServiceModel.AuditLogLocation" /> values.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceAuthenticationManager">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceAuthenticationManager ServiceAuthenticationManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceAuthenticationManager ServiceAuthenticationManager" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthenticationManager" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceAuthenticationManager As ServiceAuthenticationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceAuthenticationManager ^ ServiceAuthenticationManager { System::ServiceModel::ServiceAuthenticationManager ^ get(); void set(System::ServiceModel::ServiceAuthenticationManager ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceAuthenticationManager : System.ServiceModel.ServiceAuthenticationManager with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthenticationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceAuthenticationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-218">サービス操作の認証プロセスを管理するオブジェクトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-218">Gets or sets the object that manages an authentication process for service operations.</span></span></summary>
        <value><span data-ttu-id="e52cf-219">認証管理オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e52cf-219">An authentication management object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-220">認証によって、メッセージに署名したエンティティの ID が判定されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-220">Authentication determines the identity of the entity that signed a message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceAuthorizationAuditLevel">
      <MemberSignature Language="C#" Value="public System.ServiceModel.AuditLevel ServiceAuthorizationAuditLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.AuditLevel ServiceAuthorizationAuditLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceAuthorizationAuditLevel As AuditLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::AuditLevel ServiceAuthorizationAuditLevel { System::ServiceModel::AuditLevel get(); void set(System::ServiceModel::AuditLevel value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceAuthorizationAuditLevel : System.ServiceModel.AuditLevel with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.AuditLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-221">監査するサービス承認イベントを制御する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-221">Gets or sets a value that controls what service authorization events are audited.</span></span></summary>
        <value><span data-ttu-id="e52cf-222"><see cref="T:System.ServiceModel.AuditLevel" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="e52cf-222">One of the <see cref="T:System.ServiceModel.AuditLevel" /> values.</span></span> <span data-ttu-id="e52cf-223">既定値は、<see cref="F:System.ServiceModel.AuditLevel.None" /> です。</span><span class="sxs-lookup"><span data-stu-id="e52cf-223">The default is <see cref="F:System.ServiceModel.AuditLevel.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-224">既定では、サービス承認イベントは監査されません。</span><span class="sxs-lookup"><span data-stu-id="e52cf-224">In the default case, no service authorization events are audited.</span></span> <span data-ttu-id="e52cf-225"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A> プロパティの値が <xref:System.ServiceModel.AuditLevel.Success> の場合は、<xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A> プロパティによって指定された監査ログに、サービス承認成功イベントだけが出力されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-225">If the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A> value is <xref:System.ServiceModel.AuditLevel.Success>, only successful service authorization events are written to the audit log specified by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A> property.</span></span> <span data-ttu-id="e52cf-226">このプロパティの値が <xref:System.ServiceModel.AuditLevel.Failure> の場合は、<xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A> プロパティによって指定された監査ログに、サービス承認失敗イベントだけが出力されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-226">If this property has a value of <xref:System.ServiceModel.AuditLevel.Failure>, only unsuccessful service authorization events are written to the audit log specified by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A> property.</span></span> <span data-ttu-id="e52cf-227"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A> プロパティの値が <xref:System.ServiceModel.AuditLevel.SuccessOrFailure> の場合は、サービス承認成功イベントとサービス承認失敗イベントの両方が監査ログに出力されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-227">If the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A> value is <xref:System.ServiceModel.AuditLevel.SuccessOrFailure>, both successful and failed service authorization events are written to the audit log.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceAuthorizationManager">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceAuthorizationManager ServiceAuthorizationManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceAuthorizationManager ServiceAuthorizationManager" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceAuthorizationManager As ServiceAuthorizationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceAuthorizationManager ^ ServiceAuthorizationManager { System::ServiceModel::ServiceAuthorizationManager ^ get(); void set(System::ServiceModel::ServiceAuthorizationManager ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceAuthorizationManager : System.ServiceModel.ServiceAuthorizationManager with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceAuthorizationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-228"><see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> に関する承認検査を提供する <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-228">Gets the <see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> that provides authorization checking for the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</span></span></summary>
        <value><span data-ttu-id="e52cf-229"><see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> に関する承認検査を提供する <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-229">A <see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> that provides authorization checking for the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingletonInstanceContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContext SingletonInstanceContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.InstanceContext SingletonInstanceContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.SingletonInstanceContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SingletonInstanceContext As InstanceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::InstanceContext ^ SingletonInstanceContext { System::ServiceModel::InstanceContext ^ get(); void set(System::ServiceModel::InstanceContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SingletonInstanceContext : System.ServiceModel.InstanceContext with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.SingletonInstanceContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-230"><see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> が使用するシングルトン <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-230">Gets or sets the singleton <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> to be used by the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</span></span></summary>
        <value><span data-ttu-id="e52cf-231"><see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> が使用するシングルトン <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-231">The singleton <see cref="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" /> to be used by the <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SuppressAuditFailure">
      <MemberSignature Language="C#" Value="public bool SuppressAuditFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressAuditFailure" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressAuditFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressAuditFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressAuditFailure : bool with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-232">ログ記録処理中に発生した致命的でない例外を抑制するかどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-232">Gets or sets a value that specifies whether to suppress non-critical exceptions that occur during the logging process.</span></span></summary>
        <value><span data-ttu-id="e52cf-233">ログ記録処理中に発生した致命的でない例外を抑制する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-233"><see langword="true" /> if non-critical exceptions that occur during the logging process are suppressed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e52cf-234">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="e52cf-234">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-235">監査ログへの出力中に発生した例外をアプリケーションで再度スローする場合は、<xref:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure%2A> に `false` を設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-235">Set <xref:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure%2A> to `false` if you want exceptions that occur during the course of writing the audit log to be re-thrown to the application.</span></span> <span data-ttu-id="e52cf-236">既定では、監査イベントの出力中に発生した例外のうち、<xref:System.OutOfMemoryException>、<xref:System.StackOverflowException>、<xref:System.Threading.ThreadAbortException>、および <xref:System.ArgumentException> だけがアプリケーションで再度スローされ、その他の例外は抑制されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-236">In the default case, only the <xref:System.OutOfMemoryException>, <xref:System.StackOverflowException>, <xref:System.Threading.ThreadAbortException>, and <xref:System.ArgumentException> exceptions that result from attempts to write audit events are re-thrown to the application; all other exceptions are suppressed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-237">サービス操作の呼び出しに使用される同期コンテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-237">Gets or sets the synchronization context that is used to invoke the service operations.</span></span></summary>
        <value><span data-ttu-id="e52cf-238">サービス操作が呼び出されるスレッドを決定するために使用される <see cref="T:System.Threading.SynchronizationContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e52cf-238">The <see cref="T:System.Threading.SynchronizationContext" /> object used to determine on which thread the service operation is invoked.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-239">戻り値が `null` になる場合もあります。</span><span class="sxs-lookup"><span data-stu-id="e52cf-239">The return value can be `null`.</span></span> <span data-ttu-id="e52cf-240">この値が `null` 以外の場合は、この同期コンテキストを使用して、正しいスレッド上でサービス操作を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-240">If this value is not `null`, then this synchronization context is used to invoke the service operations on the correct thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionAutoCompleteOnSessionClose">
      <MemberSignature Language="C#" Value="public bool TransactionAutoCompleteOnSessionClose { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionAutoCompleteOnSessionClose" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionAutoCompleteOnSessionClose As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionAutoCompleteOnSessionClose { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TransactionAutoCompleteOnSessionClose : bool with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-241">セッションが閉じるときに現在のトランザクションを自動的に完了するかどうかを指定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-241">Gets or sets a value that specifies whether to automatically complete the current transaction when the session closes.</span></span></summary>
        <value><span data-ttu-id="e52cf-242">セッションのクローズ時に自動的にトランザクションを完了する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-242"><see langword="true" /> if transactions automatically complete when the session closes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e52cf-243">既定値は、<see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /> によって指定された値です。</span><span class="sxs-lookup"><span data-stu-id="e52cf-243">The default is the value specified by <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-244"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose%2A> が `true` で、かつアクティブなトランザクションが存在する場合、そのトランザクションはセッションが閉じると完了します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-244">If <xref:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose%2A> is `true` and there is an active transaction, the transaction is completed when the session closes.</span></span> <span data-ttu-id="e52cf-245"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose%2A> が `false` の場合、アクティブなトランザクションは完了せず、最終的には中止されます。</span><span class="sxs-lookup"><span data-stu-id="e52cf-245">If <xref:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose%2A> is `false`, active transactions are not completed and are eventually aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-246">コントラクトの型を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-246">Gets or sets the contract type.</span></span></summary>
        <value><span data-ttu-id="e52cf-247">コントラクトの型。</span><span class="sxs-lookup"><span data-stu-id="e52cf-247">The type of the contract.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledDispatchOperation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.DispatchOperation UnhandledDispatchOperation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.DispatchOperation UnhandledDispatchOperation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation" />
      <MemberSignature Language="VB.NET" Value="Public Property UnhandledDispatchOperation As DispatchOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::DispatchOperation ^ UnhandledDispatchOperation { System::ServiceModel::Dispatcher::DispatchOperation ^ get(); void set(System::ServiceModel::Dispatcher::DispatchOperation ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UnhandledDispatchOperation : System.ServiceModel.Dispatcher.DispatchOperation with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.DispatchOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-248">認識されないメッセージをディスパッチする操作を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-248">Gets or sets the operation to which unrecognized messages are dispatched.</span></span></summary>
        <value><span data-ttu-id="e52cf-249">認識されなかったメッセージがディスパッチされる <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" />。</span><span class="sxs-lookup"><span data-stu-id="e52cf-249">The <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> to which unrecognized messages are dispatched.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-250"><xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A> で返される操作は、<xref:System.ServiceModel.OperationContractAttribute.Action%2A> プロパティで "\*" (アスタリスク) を使用して示されている操作です。</span><span class="sxs-lookup"><span data-stu-id="e52cf-250">The operation return by the <xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A> is the operation indicated by the use of the "\*" (asterisk) in the <xref:System.ServiceModel.OperationContractAttribute.Action%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMustUnderstand">
      <MemberSignature Language="C#" Value="public bool ValidateMustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateMustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateMustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateMustUnderstand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateMustUnderstand : bool with get, set" Usage="System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e52cf-251"><see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" /> の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-251">Gets or sets the value of <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" />.</span></span></summary>
        <value><span data-ttu-id="e52cf-252"><see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" /> の値。</span><span class="sxs-lookup"><span data-stu-id="e52cf-252">The value of <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e52cf-253">予期しないメッセージのヘッダーがエラー状態の原因であるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e52cf-253">Determines whether unexpected message headers cause an error condition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
