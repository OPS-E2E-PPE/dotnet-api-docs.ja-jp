<Type Name="IInteractiveChannelInitializer" FullName="System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0cc37a2ac99aea5697ca48865f20395fc29a425d" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78744521" /></Metadata><TypeSignature Language="C#" Value="public interface IInteractiveChannelInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInteractiveChannelInitializer" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInteractiveChannelInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInteractiveChannelInitializer" />
  <TypeSignature Language="F#" Value="type IInteractiveChannelInitializer = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
  </TypeForwardingChain>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2f6e0-101">クライアント アプリケーションがチャネルを作成する前に ID 情報を収集するためのユーザー インターフェイスを表示できるようにするメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-101">Defines the methods that enable a client application to display a user interface to collect identity information prior to creating the channel.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f6e0-102"><xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> インターフェイスを実装し、チャネルを開く前にアプリケーションのユーザーが資格情報を作成または選択できるユーザー インターフェイスを、クライアント アプリケーションが表示できるようにします。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-102">Implement the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> interface to enable a client application to display a user interface that enables the user of the application to create or select the credentials prior to opening a channel.</span></span>  
  
 <span data-ttu-id="2f6e0-103"><xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> を実装するには、<xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType> 内で次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-103">To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:</span></span>  
  
1.  <span data-ttu-id="2f6e0-104">ユーザーに入力を求めて、適切な <xref:System.Net.NetworkCredential?displayProperty=nameWithType> を取得します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-104">Prompt the user and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.</span></span>  
  
2.  <span data-ttu-id="2f6e0-105"><xref:System.ServiceModel.IClientChannel> オブジェクトに対して、<xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType> の型パラメーターを引数として <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> メソッドを呼び出したときに返されるコレクションに、カスタムのチャネル パラメーター オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-105">Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2f6e0-106">このチャネル パラメーター オブジェクトをカスタムの <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> で使用して、チャネル用のセキュリティ トークンを確立します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-106">This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> to establish the security tokens for the channel.</span></span>  
  
3.  <span data-ttu-id="2f6e0-107">返します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-107">Return.</span></span>  
  
 <span data-ttu-id="2f6e0-108"><xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> を挿入するには :</span><span class="sxs-lookup"><span data-stu-id="2f6e0-108">To insert <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>:</span></span>  
  
1.  <span data-ttu-id="2f6e0-109"><xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> クラスの <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-109">Override the <xref:System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.Description.ClientCredentials?displayProperty=nameWithType> class.</span></span>  
  
2.  <span data-ttu-id="2f6e0-110">そのメソッドで、エンドポイントに <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> が必要かどうかを判定し、必要な場合は、<xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> を <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType> コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-110">In that method, determine whether the endpoint requires an <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> and if so, add the <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A?displayProperty=nameWithType> collection.</span></span>  
  
 <span data-ttu-id="2f6e0-111">アプリケーション開発者は、挿入された <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> を 2 つの方法で利用できます。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-111">There are two ways application developers can make use of an inserted <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>.</span></span> <span data-ttu-id="2f6e0-112">クライアントアプリケーションは、チャネルを開く前 (*明示的*な方法)、または単に最初の操作 (*暗黙的*な方法) を呼び出す前に、<xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> または <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (または非同期バージョン) のいずれかを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-112">The client application can call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (or an asynchronous version) prior to opening the channel (the *explicit* approach) or simply call the first operation (the *implicit* approach).</span></span>  
  
 <span data-ttu-id="2f6e0-113">暗黙的方法を使用する場合、アプリケーションは最初の操作を <xref:System.ServiceModel.ClientBase%601> または <xref:System.ServiceModel.IClientChannel> 拡張に対して呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-113">If using the implicit approach, the application must call the first operation on an <xref:System.ServiceModel.ClientBase%601> or <xref:System.ServiceModel.IClientChannel> extension.</span></span> <span data-ttu-id="2f6e0-114">アプリケーションが最初の操作以外の何かを呼び出した場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-114">If it calls anything other than the first operation, an exception is thrown.</span></span>  
  
 <span data-ttu-id="2f6e0-115">明示的方法を使用する場合、アプリケーションで次の手順を順番に実行する必要があります。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-115">If using the explicit approach, the application must perform the following steps in order:</span></span>  
  
1.  <span data-ttu-id="2f6e0-116"><xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> または <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (または非同期バージョン) を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-116">Call either <xref:System.ServiceModel.ClientBase%601.DisplayInitializationUI%2A?displayProperty=nameWithType> or <xref:System.ServiceModel.IClientChannel.DisplayInitializationUI%2A?displayProperty=nameWithType> (or an asynchronous version).</span></span>  
  
2.  <span data-ttu-id="2f6e0-117">初期化子が返された場合は、<xref:System.ServiceModel.ICommunicationObject.Open%2A> オブジェクトまたは <xref:System.ServiceModel.IClientChannel> プロパティで返された <xref:System.ServiceModel.IClientChannel> オブジェクトの <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-117">When the initializers have returned, call either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> method on the <xref:System.ServiceModel.IClientChannel> object or on the <xref:System.ServiceModel.IClientChannel> object returned from the <xref:System.ServiceModel.ClientBase%601.InnerChannel%2A?displayProperty=nameWithType> property.</span></span>  
  
3.  <span data-ttu-id="2f6e0-118">操作を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-118">Call operations.</span></span>  
  
 <span data-ttu-id="2f6e0-119">製品品質のアプリケーションで、明示的方法を採用し、ユーザー インターフェイス処理を制御することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-119">It is recommended that production-quality applications control of the user-interface process by adopting the explicit approach.</span></span>  
  
 <span data-ttu-id="2f6e0-120">暗黙的な方法を使用するアプリケーションでは、ユーザー インターフェイス初期化子が呼び出されますが、このアプリケーションのユーザーがバインディングの送信タイムアウト期間内に応答できない場合、ユーザー インターフェイスが復帰すると例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-120">Applications that use the implicit approach invoke the user-interface initializers, but if the user of the application fails to respond within the send timeout period of the binding, an exception is thrown when the user interface returns.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginDisplayInitializationUI (System.ServiceModel.IClientChannel channel, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDisplayInitializationUI(class System.ServiceModel.IClientChannel channel, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginDisplayInitializationUI (channel As IClientChannel, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginDisplayInitializationUI(System::ServiceModel::IClientChannel ^ channel, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDisplayInitializationUI : System.ServiceModel.IClientChannel * AsyncCallback * obj -&gt; IAsyncResult" Usage="iInteractiveChannelInitializer.BeginDisplayInitializationUI (channel, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="channel"><span data-ttu-id="2f6e0-121">クライアント チャネル。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-121">The client channel.</span></span></param>
        <param name="callback"><span data-ttu-id="2f6e0-122">コールバック オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-122">The callback object.</span></span></param>
        <param name="state"><span data-ttu-id="2f6e0-123">任意の状態データ。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-123">Any state data.</span></span></param>
        <summary><span data-ttu-id="2f6e0-124">資格情報を取得するユーザー インターフェイスの使用を開始するための非同期呼び出し。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-124">An asynchronous call to begin using a user interface to obtain credential information.</span></span></summary>
        <returns><span data-ttu-id="2f6e0-125">処理が完了したときにコールバックするために使用される <see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-125">The <see cref="T:System.IAsyncResult" /> to use to call back when processing has completed.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2f6e0-126"><xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer> を実装するには、<xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType> 内で次の手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-126">To implement <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer>, perform the following steps in <xref:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI%2A?displayProperty=nameWithType>:</span></span>  
  
1.  <span data-ttu-id="2f6e0-127">適当な方法でユーザーに入力を求め、適切な <xref:System.Net.NetworkCredential?displayProperty=nameWithType> を取得します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-127">Prompt the user in what way you see fit and obtain an appropriate <xref:System.Net.NetworkCredential?displayProperty=nameWithType>.</span></span>  
  
2.  <span data-ttu-id="2f6e0-128"><xref:System.ServiceModel.IClientChannel> オブジェクトに対して、<xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType> の型パラメーターを引数として <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> メソッドを呼び出したときに返されるコレクションに、カスタムのチャネル パラメーター オブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-128">Add a custom channel parameter object to the collection returned by the <xref:System.ServiceModel.Channels.IChannel.GetProperty%2A?displayProperty=nameWithType> method on the <xref:System.ServiceModel.IClientChannel> object with a type parameter of <xref:System.ServiceModel.Channels.ChannelParameterCollection?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2f6e0-129">このチャネル パラメーター オブジェクトをカスタムの <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> で使用して、チャネル用のセキュリティ トークンを確立します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-129">This channel parameter object is used by the custom <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager?displayProperty=nameWithType> to establish the security tokens for the channel.</span></span>  
  
3.  <span data-ttu-id="2f6e0-130">返します。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-130">Return.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisplayInitializationUI">
      <MemberSignature Language="C#" Value="public void EndDisplayInitializationUI (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisplayInitializationUI(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisplayInitializationUI (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisplayInitializationUI(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDisplayInitializationUI : IAsyncResult -&gt; unit" Usage="iInteractiveChannelInitializer.EndDisplayInitializationUI result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="2f6e0-131"><see cref="T:System.IAsyncResult" />。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-131">The <see cref="T:System.IAsyncResult" />.</span></span></param>
        <summary><span data-ttu-id="2f6e0-132"><see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> が終了すると、呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="2f6e0-132">Called when the <see cref="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" /> has finished.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
