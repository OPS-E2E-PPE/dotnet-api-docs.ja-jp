<Type Name="MessageFilter" FullName="System.ServiceModel.Dispatcher.MessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="96f0a5c4c89fcc17668b79b5f6068a459c42c22b" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78744339" /></Metadata><TypeSignature Language="C#" Value="public abstract class MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageFilter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageFilter abstract" />
  <TypeSignature Language="F#" Value="type MessageFilter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchNoneMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.ActionMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.MatchAllMessageFilter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.Serialization.KnownType(typeof(System.ServiceModel.Dispatcher.XPathMessageFilter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="01c62-101">メッセージの照会に使用するさまざまなクラスのフィルターに対する <see langword="abstract" /> 基本クラス。</span><span class="sxs-lookup"><span data-stu-id="01c62-101"><see langword="abstract" /> base class for different classes of filters used to query messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01c62-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> クラスの `abstract` を実装することで、メッセージの検査に使用する基準を指定できます。</span><span class="sxs-lookup"><span data-stu-id="01c62-102"><xref:System.ServiceModel.Dispatcher.MessageFilter> is an `abstract` class that developers implement in order to specify the criteria to use for inspecting messages.</span></span> <span data-ttu-id="01c62-103">通常、フィルターは、メッセージの一部分の検査に基づいてメッセージに対する処理を決定するために、エンドポイント アプリケーションによって使用されます。</span><span class="sxs-lookup"><span data-stu-id="01c62-103">Typically, filters are used by an endpoint application to determine what to do with a message based on an examination of some part of the message.</span></span> <span data-ttu-id="01c62-104">たとえば、キュー プロセスでは、XPath 1.0 クエリを使用して既知のヘッダー優先度要素をチェックし、メッセージをキューの先頭に移動するべきかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="01c62-104">A queuing process, for example, can use an XPath 1.0 query to check the priority element of a known header to determine whether to move a message to the front of the queue.</span></span>  
  
 <span data-ttu-id="01c62-105">フィルターは、<xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> を実装するフィルター テーブルに格納されます。</span><span class="sxs-lookup"><span data-stu-id="01c62-105">Filters are stored in a filter table that implements <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>.</span></span> <span data-ttu-id="01c62-106">テーブル内の各フィルターは特定のフィルター データに関連付けられており、フィルター データを使用して、メッセージがフィルターに一致した場合に実行するアクションを示すことができます。</span><span class="sxs-lookup"><span data-stu-id="01c62-106">Each filter in the table is associated with specified filter data that can be used to indicate what actions to take if a message matches the filter.</span></span> <span data-ttu-id="01c62-107">メッセージがフィルターの一致条件を満たしているかどうかを判定するには、<xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="01c62-107">The <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> methods are used to determine if a message satisfies a filter.</span></span>  
  
 <span data-ttu-id="01c62-108">フィルター テーブルには変更を検出する手段がないため、フィルターの作成後にはフィルターが使用する基準を変更できません。</span><span class="sxs-lookup"><span data-stu-id="01c62-108">The criteria used by a filter cannot be changed once the filter is constructed because the filter tables have no way to detect a change.</span></span> <span data-ttu-id="01c62-109">フィルターの基準を変更する唯一の方法は、新しいフィルターを作成して既存のフィルターを削除することです。</span><span class="sxs-lookup"><span data-stu-id="01c62-109">The only way to modify the criteria of a filter is to construct a new one and delete the existing filter.</span></span>  
  
 <span data-ttu-id="01c62-110">次のクラスは、`abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> クラスを実装しています。</span><span class="sxs-lookup"><span data-stu-id="01c62-110">The following classes implement the `abstract`<xref:System.ServiceModel.Dispatcher.MessageFilter> class:</span></span>  
  
-   <span data-ttu-id="01c62-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> は、XPath 1.0 の式を使用して、一致の基準を指定します。</span><span class="sxs-lookup"><span data-stu-id="01c62-111"><xref:System.ServiceModel.Dispatcher.XPathMessageFilter> uses an XPath 1.0 expression to specify the criteria for a match.</span></span>  
  
-   <span data-ttu-id="01c62-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> は、すべてのメッセージに一致します。</span><span class="sxs-lookup"><span data-stu-id="01c62-112"><xref:System.ServiceModel.Dispatcher.MatchAllMessageFilter> matches all messages.</span></span>  
  
-   <span data-ttu-id="01c62-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> は、どのメッセージとも一致しません。</span><span class="sxs-lookup"><span data-stu-id="01c62-113"><xref:System.ServiceModel.Dispatcher.MatchNoneMessageFilter> matches none of the messages.</span></span>  
  
-   <span data-ttu-id="01c62-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> は、メッセージのアクションが、指定されている一連のアクションの 1 つであるかどうかを検査します。</span><span class="sxs-lookup"><span data-stu-id="01c62-114"><xref:System.ServiceModel.Dispatcher.ActionMessageFilter> tests whether the action of a message is one of a specified set of actions.</span></span>  
  
-   <span data-ttu-id="01c62-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> は、メッセージが指定されているエンドポイント アドレスを満たすかどうかを検査します。</span><span class="sxs-lookup"><span data-stu-id="01c62-115"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter> tests whether a message satisfies a specified endpoint address.</span></span>  
  
 <span data-ttu-id="01c62-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> は、キューを使用しないリスナーの作成に使用できる `abstract` 基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="01c62-116"><xref:System.ServiceModel.Channels.ChannelListenerBase%601> is an `abstract` base class that you can use for writing non-queuing listeners.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageFilter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageFilter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01c62-117">派生クラスで呼び出されると、<see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="01c62-117">When called in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01c62-118"><xref:System.ServiceModel.Dispatcher.MessageFilter> から派生するフィルターだけをインスタンス化できるよう、コンストラクターは保護されています。</span><span class="sxs-lookup"><span data-stu-id="01c62-118">The constructor is protected so that only filters that derive from <xref:System.ServiceModel.Dispatcher.MessageFilter> can be instantiated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal virtual System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; virtual System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;&#xA;override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="messageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="01c62-119">テーブル内のフィルターに関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="01c62-119">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="01c62-120">指定した型のデータが関連付けられるフィルターのフィルター テーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="01c62-120">Creates a filter table for a filter that has a specified type of data associated with it.</span></span></summary>
        <returns><span data-ttu-id="01c62-121"><see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> に関連付けられたフィルターを追加できる <paramref name="FilterData" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="01c62-121">An <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> object to which filters associated with <paramref name="FilterData" /> can be added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01c62-122">このメソッドは、<xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> によって呼び出されることを想定しています。</span><span class="sxs-lookup"><span data-stu-id="01c62-122">This method is intended to be called by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="01c62-123">ユーザーは、フィルター テーブルのコンストラクターを呼び出してフィルター テーブルを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="01c62-123">Users should create a filter table by calling a constructor for the filter table.</span></span> <span data-ttu-id="01c62-124">このメソッドの既定の実装は、各フィルターの <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> メソッドを順番に呼び出すフィルター テーブルを返します。</span><span class="sxs-lookup"><span data-stu-id="01c62-124">The default implementation of this method returns a filter table that calls the <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> method of each filter sequentially.</span></span> <span data-ttu-id="01c62-125">フィルターを実装するときに、カスタム フィルター テーブルを関連付けるには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="01c62-125">Override this method to associate a custom filter table when implementing a filter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01c62-126">派生クラスでオーバーライドされると、メッセージまたはバッファー内のメッセージがフィルターの基準を満たすかどうかを検査します。</span><span class="sxs-lookup"><span data-stu-id="01c62-126">When overridden in a derived class, tests whether a message or a buffered message satisfies the criteria of a filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01c62-127">この 2 つのオーバーロードの違いは、一方は <xref:System.ServiceModel.Channels.Message> パラメーターを受け取り、メッセージ本文を調べることを許可されていないことです。</span><span class="sxs-lookup"><span data-stu-id="01c62-127">The difference between the two overloads is that one takes a <xref:System.ServiceModel.Channels.Message> parameter and is not permitted to examine the body.</span></span> <span data-ttu-id="01c62-128">他方は <xref:System.ServiceModel.Channels.MessageBuffer> パラメーターを受け取り、メッセージの任意の部分を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="01c62-128">The other takes a <xref:System.ServiceModel.Channels.MessageBuffer> parameter and can examine any part of the message.</span></span> <span data-ttu-id="01c62-129">メッセージ ヘッダーは自動的にバッファーに格納され、フィルターはその内容を取り込まずに調べることができます。</span><span class="sxs-lookup"><span data-stu-id="01c62-129">Message headers are automatically buffered and can be inspected by a filter without being consumed.</span></span> <span data-ttu-id="01c62-130">ただし、フィルターがメッセージ本文を調べる場合は、メッセージ全体がバッファーに格納されている必要があります。バッファーに格納されていないメッセージ本文は、クエリによって取り込まれ、その内容が破壊される可能性があるためです。</span><span class="sxs-lookup"><span data-stu-id="01c62-130">But if the body is to be inspected by a filter, then the entire message must be buffered because an unbuffered message body can be consumed by a query and its contents destroyed.</span></span>  
  
 <span data-ttu-id="01c62-131">メッセージ本文を調べる必要がない場合は、<xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="01c62-131">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the body is not required.</span></span> <span data-ttu-id="01c62-132">メッセージ本文を調べる必要がある場合は、<xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> を使用します。</span><span class="sxs-lookup"><span data-stu-id="01c62-132">Use <xref:System.ServiceModel.Dispatcher.MessageFilter.Match%2A> if examination of the message body is required.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="01c62-133">
            <see langword="Null" /> メッセージは無効であり、<see cref="T:System.ArgumentNullException" /> をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="01c62-133">
            <see langword="Null" /> messages are invalid, and should cause an <see cref="T:System.ArgumentNullException" /> to be thrown.</span></span></para></block>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Match (message As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="messageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="01c62-134">テスト対象の <see cref="T:System.ServiceModel.Channels.Message" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="01c62-134">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span></span></param>
        <summary><span data-ttu-id="01c62-135">派生クラスでオーバーライドされると、メッセージがフィルター基準を満たすかどうかを検査します。</span><span class="sxs-lookup"><span data-stu-id="01c62-135">When overridden in a derived class, tests whether a message satisfies the filter criteria.</span></span> <span data-ttu-id="01c62-136">本文は検査できません。</span><span class="sxs-lookup"><span data-stu-id="01c62-136">The body cannot be examined.</span></span></summary>
        <returns><span data-ttu-id="01c62-137"><see langword="true" /> オブジェクトがフィルター条件を満たす場合は <see cref="T:System.ServiceModel.Channels.Message" />、そうでない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01c62-137"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01c62-138">このメソッドは、メッセージ本文の内容は検査できません。</span><span class="sxs-lookup"><span data-stu-id="01c62-138">This method cannot inspect the contents of the message body.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="01c62-139">バッファーに格納されていないメッセージの本文の検査をフィルターが試みる場合、フィルターは <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" /> をスローする必要があります。</span><span class="sxs-lookup"><span data-stu-id="01c62-139">If the filter attempts to examine the body of an unbuffered message, then the filter must throw an <see cref="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />.</span></span> <span data-ttu-id="01c62-140"><see langword="false" /> を返すことはできません。</span><span class="sxs-lookup"><span data-stu-id="01c62-140">It should not return <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public abstract bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="messageFilter.Match buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="01c62-141">テスト対象の <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="01c62-141">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span></span></param>
        <summary><span data-ttu-id="01c62-142">派生クラスでオーバーライドされると、バッファー内のメッセージがフィルターの基準を満たすかどうかを検査します。</span><span class="sxs-lookup"><span data-stu-id="01c62-142">When overridden in a derived class, tests whether a buffered message satisfies the criteria of a filter.</span></span></summary>
        <returns><span data-ttu-id="01c62-143"><see langword="true" /> オブジェクトがフィルター条件を満たす場合は <see cref="T:System.ServiceModel.Channels.MessageBuffer" />、そうでない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01c62-143"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the filter criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01c62-144">フィルターで本文を検査する場合は、メッセージが完全にバッファーに格納されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="01c62-144">The message must be fully buffered if the body is to be inspected by the filter.</span></span> <span data-ttu-id="01c62-145"><xref:System.ServiceModel.Channels.MessageBuffer> の本文は完全にバッファーに格納されているため、フィルターで検査できます。</span><span class="sxs-lookup"><span data-stu-id="01c62-145">The body of the <xref:System.ServiceModel.Channels.MessageBuffer> is fully buffered and therefore can be inspected by a filter.</span></span> <span data-ttu-id="01c62-146">完全にバッファーに格納されていない <xref:System.ServiceModel.Channels.Message> の本文は、フィルター検査で破壊される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="01c62-146">The body of a <xref:System.ServiceModel.Channels.Message> that has not been fully buffered may be consumed by the filter inspection.</span></span> <span data-ttu-id="01c62-147"><xref:System.ServiceModel.Channels.Message> のヘッダー要素は自動的にバッファーに格納されるため、取り込まずに検査できます。</span><span class="sxs-lookup"><span data-stu-id="01c62-147">The header element of a <xref:System.ServiceModel.Channels.Message> is automatically buffered and therefore can be inspected without being consumed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
