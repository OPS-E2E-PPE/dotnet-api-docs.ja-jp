<Type Name="Network" FullName="Microsoft.VisualBasic.Devices.Network">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f49335f9b427b88d5ccc1f9e879ac72bfe57b20f" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77231851" /></Metadata><TypeSignature Language="C#" Value="public class Network" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Network extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Network" />
  <TypeSignature Language="VB.NET" Value="Public Class Network" />
  <TypeSignature Language="C++ CLI" Value="public ref class Network" />
  <TypeSignature Language="F#" Value="type Network = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>コンピューターの接続先ネットワークと対話するためのプロパティ、イベント、およびメソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、`My.Computer.Network` オブジェクトに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをアップロードする|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
|ファイルをダウンロードする|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
|接続の状態を確認する|[方法 : 接続ステータスをチェックする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 この例では、ファイル `Order.txt` を `http://www.cohowinery.com/uploads`にアップロードします。  
  
 [!code-vb[VbVbalrMyNetwork#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Network ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Network();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Devices.Network" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DownloadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
        <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
        <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コピー先のファイルが既に存在する場合、`DownloadFile` メソッドは既存のファイルを上書きしません。 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> メソッドの他のオーバーロードのいずれかを使用して、既存のファイルを上書きしたり、ユーザーの資格情報を入力したり、特定のタイムアウト値を指定したりするように指示することができます。  
  
 アプリケーションでネットワークトレースを有効にすると、`DownloadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは、省略可能な HTTP ヘッダーを送信しません。 オプションのユーザーエージェントヘッダーがない場合、サーバーによっては 500 (内部サーバーエラー) が返されることがあります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient> クラスを使用して要求を作成する必要があります。  
  
 次の表に、`My.Computer.Network.DownloadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをダウンロードする|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例では、`http://www.cohowinery.com/downloads` からファイル `WineList.txt` をダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例では、`http://www.cohowinery.com/downloads` から `WineList.txt` ファイルをダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存して、タイムアウト間隔を500ミリ秒に指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
        <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
        <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
        <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コピー先のファイルが既に存在する場合、`DownloadFile` メソッドは既存のファイルを上書きしません。 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> メソッドの他のオーバーロードのいずれかを使用して、既存のファイルを上書きしたり、ユーザーの資格情報を入力したり、特定のタイムアウト値を指定したりするように指示することができます。 アプリケーションでネットワークトレースを有効にすると、`DownloadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは、省略可能な HTTP ヘッダーを送信しません。 オプションのユーザーエージェントヘッダーがない場合、サーバーによっては 500 (内部サーバーエラー) が返されることがあります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient> クラスを使用して要求を作成する必要があります。  
  
 次の表に、`My.Computer.Network.DownloadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをダウンロードする|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例では、`http://www.cohowinery.com/downloads` からファイル `WineList.txt` をダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例では、`http://www.cohowinery.com/downloads` から `WineList.txt` ファイルをダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存して、タイムアウト間隔を500ミリ秒に指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
        <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
        <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列 ("") です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列 ("") です。</param>
        <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コピー先のファイルが既に存在する場合、`DownloadFile` メソッドは既存のファイルを上書きしません。 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> メソッドの他のオーバーロードのいずれかを使用して、既存のファイルを上書きしたり、特定のタイムアウト値を指定したりするように指示することができます。  
  
 アプリケーションでネットワークトレースを有効にすると、`DownloadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは、省略可能な HTTP ヘッダーを送信しません。 オプションのユーザーエージェントヘッダーがない場合、サーバーによっては 500 (内部サーバーエラー) が返されることがあります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient> クラスを使用して要求を作成する必要があります。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.DownloadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをダウンロードする|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例では、`http://www.cohowinery.com/downloads` からファイル `WineList.txt` をダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例では、`http://www.cohowinery.com/downloads` から `WineList.txt` ファイルをダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存して、タイムアウト間隔を500ミリ秒に指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
        <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
        <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列 ("") です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列 ("") です。</param>
        <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コピー先のファイルが既に存在する場合、`DownloadFile` メソッドは既存のファイルを上書きしません。 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A> メソッドの他のオーバーロードのいずれかを使用して、既存のファイルを上書きしたり、特定のタイムアウト値を指定したりするように指示することができます。  
  
 アプリケーションでネットワークトレースを有効にすると、`DownloadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは、省略可能な HTTP ヘッダーを送信しません。 オプションのユーザーエージェントヘッダーがない場合、サーバーによっては 500 (内部サーバーエラー) が返されることがあります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient> クラスを使用して要求を作成する必要があります。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.DownloadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをダウンロードする|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例では、`http://www.cohowinery.com/downloads` からファイル `WineList.txt` をダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例では、`http://www.cohowinery.com/downloads` から `WineList.txt` ファイルをダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存して、タイムアウト間隔を500ミリ秒に指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
        <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><see langword="String" /> または <see cref="T:System.Uri" />。 ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
        <param name="destinationFileName">[https://login.microsoftonline.com/consumers/](<see langword="String" />) ダウンロード ファイルの名前およびパス。</param>
        <param name="networkCredentials">[https://login.microsoftonline.com/consumers/](<see cref="T:System.Net.ICredentials" />) 指定される資格情報。</param>
        <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
        <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `showUI` が `True`に設定されている場合は、操作の進行状況を示すダイアログボックスが表示されます。ダイアログボックスには、操作を取り消すために使用できる **[キャンセル**] ボタンがあります。 ダイアログボックスはモーダルではないため、プログラム内の他のウィンドウへのユーザー入力をブロックしません。  
  
 指定された `connectionTimeout`内でサーバーが応答しない場合、操作は取り消され、例外がスローされます。  
  
 アプリケーションでネットワークトレースを有効にすると、`DownloadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは、省略可能な HTTP ヘッダーを送信しません。 オプションのユーザーエージェントヘッダーがない場合、サーバーによっては 500 (内部サーバーエラー) が返されることがあります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient> クラスを使用して要求を作成する必要があります。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.DownloadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをダウンロードする|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例では、`http://www.cohowinery.com/downloads` からファイル `WineList.txt` をダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例では、`http://www.cohowinery.com/downloads` から `WineList.txt` ファイルをダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存して、タイムアウト間隔を500ミリ秒に指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> が <see langword="False" /> に設定されていますが、コピー先のファイルが既に存在します。</exception>
        <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
        <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列 ("") です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列 ("") です。</param>
        <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">[https://login.microsoftonline.com/consumers/](<see cref="T:System.Int32" />) タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
        <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `showUI` が `True`に設定されている場合は、操作の進行状況を示すダイアログボックスが表示されます。ダイアログボックスには、操作を取り消すために使用できる **[キャンセル**] ボタンがあります。 ダイアログボックスはモーダルではないため、プログラム内の他のウィンドウへのユーザー入力をブロックしません。  
  
 指定された `connectionTimeout`内でサーバーが応答しない場合、操作は取り消され、例外がスローされます。  
  
 アプリケーションでネットワークトレースを有効にすると、`DownloadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは、省略可能な HTTP ヘッダーを送信しません。 オプションのユーザーエージェントヘッダーがない場合、サーバーによっては 500 (内部サーバーエラー) が返されることがあります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient> クラスを使用して要求を作成する必要があります。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.DownloadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをダウンロードする|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例では、`http://www.cohowinery.com/downloads` からファイル `WineList.txt` をダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例では、`http://www.cohowinery.com/downloads` から `WineList.txt` ファイルをダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存して、タイムアウト間隔を500ミリ秒に指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> が <see langword="False" /> に設定されていますが、コピー先のファイルが既に存在します。</exception>
        <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * System.Net.ICredentials * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, networkCredentials, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
        <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
        <param name="networkCredentials">指定される資格情報。</param>
        <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
        <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="onUserCancel">** が ** に設定された場合に表示されるダイアログ ボックスで、ユーザーが **[キャンセル]** または <paramref name="showUI" />[いいえ]<see langword="True" /> をクリックしたときの動作を指定します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
        <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `showUI` が `True`に設定されている場合は、操作の進行状況を示すダイアログボックスが表示されます。ダイアログボックスには、操作を取り消すために使用できる **[キャンセル**] ボタンがあります。 ダイアログボックスはモーダルではないため、プログラム内の他のウィンドウへのユーザー入力をブロックしません。  
  
 指定された `connectionTimeout`内でサーバーが応答しない場合、操作は取り消され、例外がスローされます。  
  
 アプリケーションでネットワークトレースを有効にすると、`DownloadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは、省略可能な HTTP ヘッダーを送信しません。 オプションのユーザーエージェントヘッダーがない場合、サーバーによっては 500 (内部サーバーエラー) が返されることがあります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient> クラスを使用して要求を作成する必要があります。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.DownloadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをダウンロードする|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例では、`http://www.cohowinery.com/downloads` からファイル `WineList.txt` をダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例では、`http://www.cohowinery.com/downloads` から `WineList.txt` ファイルをダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存して、タイムアウト間隔を500ミリ秒に指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> が <see langword="False" /> に設定されていますが、コピー先のファイルが既に存在します。</exception>
        <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
        <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列 ("") です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列 ("") です。</param>
        <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
        <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `showUI` が `True`に設定されている場合は、操作の進行状況を示すダイアログボックスが表示されます。ダイアログボックスには、操作を取り消すために使用できる **[キャンセル**] ボタンがあります。 ダイアログボックスはモーダルではないため、プログラム内の他のウィンドウへのユーザー入力をブロックしません。  
  
 指定された `connectionTimeout`内でサーバーが応答しない場合、操作は取り消され、例外がスローされます。  
  
 アプリケーションでネットワークトレースを有効にすると、`DownloadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは、省略可能な HTTP ヘッダーを送信しません。 オプションのユーザーエージェントヘッダーがない場合、サーバーによっては 500 (内部サーバーエラー) が返されることがあります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient> クラスを使用して要求を作成する必要があります。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.DownloadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをダウンロードする|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例では、`http://www.cohowinery.com/downloads` からファイル `WineList.txt` をダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例では、`http://www.cohowinery.com/downloads` から `WineList.txt` ファイルをダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存して、タイムアウト間隔を500ミリ秒に指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> が <see langword="False" /> に設定されていますが、コピー先のファイルが既に存在します。</exception>
        <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(string address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As String, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(System::String ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : string * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
        <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列 ("") です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列 ("") です。</param>
        <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
        <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="onUserCancel">**ShowUI** が ** に設定された場合に表示されるダイアログ ボックスで、ユーザーが **[キャンセル]<c> または </c>[いいえ]<see langword="True" /> をクリックしたときの動作を指定します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
        <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `showUI` が `True`に設定されている場合は、操作の進行状況を示すダイアログボックスが表示されます。ダイアログボックスには、操作を取り消すために使用できる **[キャンセル**] ボタンがあります。 ダイアログボックスはモーダルではないため、プログラム内の他のウィンドウへのユーザー入力をブロックしません。  
  
 指定された `connectionTimeout`内でサーバーが応答しない場合、操作は取り消され、例外がスローされます。  
  
 アプリケーションでネットワークトレースを有効にすると、`DownloadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは、省略可能な HTTP ヘッダーを送信しません。 オプションのユーザーエージェントヘッダーがない場合、サーバーによっては 500 (内部サーバーエラー) が返されることがあります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient> クラスを使用して要求を作成する必要があります。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.DownloadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをダウンロードする|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例では、`http://www.cohowinery.com/downloads` からファイル `WineList.txt` をダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例では、`http://www.cohowinery.com/downloads` から `WineList.txt` ファイルをダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存して、タイムアウト間隔を500ミリ秒に指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> が <see langword="False" /> に設定されていますが、コピー先のファイルが既に存在します。</exception>
        <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="DownloadFile">
      <MemberSignature Language="C#" Value="public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void DownloadFile(class System.Uri address, string destinationFileName, string userName, string password, bool showUI, int32 connectionTimeout, bool overwrite, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DownloadFile (address As Uri, destinationFileName As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, overwrite As Boolean, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DownloadFile(Uri ^ address, System::String ^ destinationFileName, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, bool overwrite, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.DownloadFile : Uri * string * string * string * bool * int * bool * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.DownloadFile (address, destinationFileName, userName, password, showUI, connectionTimeout, overwrite, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="overwrite" Type="System.Boolean" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="address">ダウンロードするファイルのパス (ファイル名とホスト アドレスを含む)。</param>
        <param name="destinationFileName">ダウンロード ファイルの名前およびパス。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列 ("") です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列 ("") です。</param>
        <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
        <param name="overwrite">既存のファイルを上書きする場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="onUserCancel">**ShowUI** が ** に設定された場合に表示されるダイアログ ボックスで、ユーザーが **[キャンセル]<c> または </c>[いいえ]<see langword="True" /> をクリックしたときの動作を指定します。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
        <summary>指定されたリモート ファイルをダウンロードし、指定された場所に保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `showUI` が `True`に設定されている場合は、操作の進行状況を示すダイアログボックスが表示されます。ダイアログボックスには、操作を取り消すために使用できる **[キャンセル**] ボタンがあります。 ダイアログボックスはモーダルではないため、プログラム内の他のウィンドウへのユーザー入力をブロックしません。  
  
 指定された `connectionTimeout`内でサーバーが応答しない場合、操作は取り消され、例外がスローされます。  
  
 アプリケーションでネットワークトレースを有効にすると、`DownloadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  `DownloadFile` メソッドは、省略可能な HTTP ヘッダーを送信しません。 オプションのユーザーエージェントヘッダーがない場合、サーバーによっては 500 (内部サーバーエラー) が返されることがあります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient> クラスを使用して要求を作成する必要があります。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.DownloadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをダウンロードする|[方法 : ファイルをダウンロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md)|  
  
   
  
## Examples  
 この例では、`http://www.cohowinery.com/downloads` からファイル `WineList.txt` をダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存します。  
  
 [!code-vb[VbVbalrMyNetwork#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#7)]  
  
 この例では、`http://www.cohowinery.com/downloads` から `WineList.txt` ファイルをダウンロードし、`C:\Documents and Settings\All Users\Documents`に保存して、タイムアウト間隔を500ミリ秒に指定します。  
  
 [!code-vb[VbVbalrMyNetwork#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="destinationFileName" /> がスラッシュで終わっています。</exception>
        <exception cref="T:System.IO.IOException"><paramref name="overwrite" /> が <see langword="False" /> に設定されていますが、コピー先のファイルが既に存在します。</exception>
        <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.VisualBasic.Devices.Network.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンピューターがネットワークに接続されているかどうかを示します。</summary>
        <value>コンピューターがネットワークに接続されている場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `IsAvailable` は、`Click Once` アプリケーションから呼び出された場合、またはユーザーに <xref:System.Net.NetworkInformation.NetworkInformationPermission>がない場合、常に `False` を返します。  
  
 次の表は、`My.Computer.Network.IsAvailable` プロパティに関連するタスクの例を示しています。  
  
|目的|参照先|  
|-|-|  
|コンピューターがネットワークに接続されているかどうかを確認する|[方法 : 接続ステータスをチェックする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-check-connection-status.md)|  
  
   
  
## Examples  
 この例では、プロパティの状態を確認し、それを報告します。  
  
 [!code-vb[VbVbalrMyNetwork#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="NetworkAvailabilityChanged">
      <MemberSignature Language="C#" Value="public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NetworkAvailabilityChanged As NetworkAvailableEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event Microsoft::VisualBasic::Devices::NetworkAvailableEventHandler ^ NetworkAvailabilityChanged;" />
      <MemberSignature Language="F#" Value="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " Usage="member this.NetworkAvailabilityChanged : Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ネットワークの可用性が変更されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションでは、ネットワークの可用性が変更されるたびに、`NetworkAvailabilityChanged` イベントが発生します。 `e` パラメーターの <xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A> プロパティを使用して、ネットワーク接続の新しい状態を取得できます。 ネットワーク接続の現在の状態を取得するには、<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A> プロパティを使用します。  
  
 Windows フォームアプリケーションでは、このイベントは、他のユーザーインターフェイスイベントと共にアプリケーションのメインスレッドで発生します。 これにより、イベントハンドラーがアプリケーションのユーザーインターフェイスに直接アクセスできるようになります。 ただし、このイベントが発生したときに、アプリケーションが別のユーザーインターフェイスイベントを処理中である場合、このイベントは、他のイベントハンドラーが終了するか、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A> メソッドを呼び出すまで処理できません。  
  
 `Handles` ステートメントを使用して、`NetworkAvailabilityChanged` イベントを処理することはできません。`AddHandler` ステートメントを使用する必要があります。  
  
 Windows フォームアプリケーションでは、`MyApplication` オブジェクトは、このイベントと同じ機能を提供する `NetworkAvailabilityChanged` イベントを公開しますが、`Handles` ステートメントで処理することができます。  
  
> [!NOTE]
>  多くのネットワークハブは、ハブが大規模なネットワークから切断されている場合でも、ネットワーク接続を提供します。 その結果、ワイヤード (有線) 接続の場合、このイベントは、コンピューターとハブ間の接続が変更されたことを示します。  
  
## Examples  
 この例では、`My.Computer.Network.NetworkAvailabilityChanged` イベントを使用して、フォームまたはコントロールのユーザーインターフェイスを更新します。  
  
 このコードは、`Label1`という名前の <xref:System.Windows.Forms.Label> を持つフォームまたはコントロール内に存在する必要があります。  
  
 [!code-vb[VbVbalrMyApplication#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyApplication/VB/Form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Network" />
        <altmember cref="N:Microsoft.VisualBasic.Devices" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler" />
        <altmember cref="T:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ping">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定したサーバーに対して ping を実行します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress);" />
      <MemberSignature Language="F#" Value="member this.Ping : string -&gt; bool" Usage="network.Ping hostNameOrAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ping の送信先サーバーの URL、コンピューター名、または IP アドレス。</param>
        <summary>指定したサーバーに対して ping を実行します。</summary>
        <returns>操作が正常に終了した場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` 方法は、リモートコンピューターの可用性を判断するための緊急時の方法ではありません。ターゲットコンピューターの ping ポートが無効になっているか、ファイアウォールまたはルーターによって ping 要求がブロックされている可能性があります。  
  
 `Ping` メソッドに渡すアドレスは、DNS で解決可能である必要があり、前に "http://" を付けることはできません。  
  
   
  
## Examples  
 この例では、`Ping` メソッドが `True`を返すかどうかを判断して、サーバーを ping できるかどうかを報告します。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 `"198.01.01.01"` を、ping を行うサーバーの IP アドレス、URL、またはコンピューター名に置き換えます。  
  
 この例では、`Ping` メソッドが `True` 返されたかどうかを判断し、1000ミリ秒のタイムアウト間隔を指定することによって、サーバーを ping できるかどうかを報告します。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 `"www.cohowinery.com"` を、ping を行うサーバーの IP アドレス、URL、またはコンピューター名に置き換えます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ネットワーク接続が利用できません。</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL が有効でない場合。</exception>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri -&gt; bool" Usage="network.Ping address" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="address">ping の送信先サーバーの URI。</param>
        <summary>指定したサーバーに対して ping を実行します。</summary>
        <returns>操作が正常に終了した場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` 方法は、リモートコンピューターの可用性を判断するための緊急時の方法ではありません。ターゲットコンピューターの ping ポートが無効になっているか、ファイアウォールまたはルーターによって ping 要求がブロックされている可能性があります。  
  
 `Ping` メソッドに渡すアドレスは、DNS で解決可能である必要があり、前に "http://" を付けることはできません。  
  
   
  
## Examples  
 この例では、`Ping` メソッドが `True`を返すかどうかを判断して、サーバーを ping できるかどうかを報告します。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 `"198.01.01.01"` を、ping を行うサーバーの IP アドレス、URL、またはコンピューター名に置き換えます。  
  
 この例では、`Ping` メソッドが `True` 返されたかどうかを判断し、1000ミリ秒のタイムアウト間隔を指定することによって、サーバーを ping できるかどうかを報告します。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 `"www.cohowinery.com"` を、ping を行うサーバーの IP アドレス、URL、またはコンピューター名に置き換えます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ネットワーク接続が利用できません。</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL が有効でない場合。</exception>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (string hostNameOrAddress, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(string hostNameOrAddress, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (hostNameOrAddress As String, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(System::String ^ hostNameOrAddress, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : string * int -&gt; bool" Usage="network.Ping (hostNameOrAddress, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostNameOrAddress" Type="System.String" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostNameOrAddress">ping の送信先サーバーの URL、コンピューター名、または IP アドレス。</param>
        <param name="timeout">接続先からの応答を待機する時間のしきい値 (ミリ秒)。 既定値は 500 です。</param>
        <summary>指定したサーバーに対して ping を実行します。</summary>
        <returns>操作が正常に終了した場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` 方法は、リモートコンピューターの可用性を判断するための緊急時の方法ではありません。ターゲットコンピューターの ping ポートが無効になっているか、ファイアウォールまたはルーターによって ping 要求がブロックされている可能性があります。  
  
 `Ping` メソッドに渡すアドレスは、DNS で解決可能である必要があり、前に "http://" を付けることはできません。  
  
   
  
## Examples  
 この例では、`Ping` メソッドが `True`を返すかどうかを判断して、サーバーを ping できるかどうかを報告します。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 `"198.01.01.01"` を、ping を行うサーバーの IP アドレス、URL、またはコンピューター名に置き換えます。  
  
 この例では、`Ping` メソッドが `True` 返されたかどうかを判断し、1000ミリ秒のタイムアウト間隔を指定することによって、サーバーを ping できるかどうかを報告します。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 `"www.cohowinery.com"` を、ping を行うサーバーの IP アドレス、URL、またはコンピューター名に置き換えます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ネットワーク接続が利用できません。</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL が有効でない場合。</exception>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="Ping">
      <MemberSignature Language="C#" Value="public bool Ping (Uri address, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Ping(class System.Uri address, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Ping (address As Uri, timeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Ping(Uri ^ address, int timeout);" />
      <MemberSignature Language="F#" Value="member this.Ping : Uri * int -&gt; bool" Usage="network.Ping (address, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">ping の送信先サーバーの URI。</param>
        <param name="timeout">接続先からの応答を待機する時間のしきい値 (ミリ秒)。 既定値は 500 です。</param>
        <summary>指定したサーバーに対して ping を実行します。</summary>
        <returns>操作が正常に終了した場合は <see langword="True" />。それ以外の場合は <see langword="False" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Ping` 方法は、リモートコンピューターの可用性を判断するための緊急時の方法ではありません。ターゲットコンピューターの ping ポートが無効になっているか、ファイアウォールまたはルーターによって ping 要求がブロックされている可能性があります。  
  
 `Ping` メソッドに渡すアドレスは、DNS で解決可能である必要があり、前に "http://" を付けることはできません。  
  
   
  
## Examples  
 この例では、`Ping` メソッドが `True`を返すかどうかを判断して、サーバーを ping できるかどうかを報告します。  
  
 [!code-vb[VbVbalrMyNetwork#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#4)]  
  
 `"198.01.01.01"` を、ping を行うサーバーの IP アドレス、URL、またはコンピューター名に置き換えます。  
  
 この例では、`Ping` メソッドが `True` 返されたかどうかを判断し、1000ミリ秒のタイムアウト間隔を指定することによって、サーバーを ping できるかどうかを報告します。  
  
 [!code-vb[VbVbalrMyNetwork#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#5)]  
  
 `"www.cohowinery.com"` を、ping を行うサーバーの IP アドレス、URL、またはコンピューター名に置き換えます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ネットワーク接続が利用できません。</exception>
        <exception cref="T:System.Net.NetworkInformation.PingException">URL が有効でない場合。</exception>
        <altmember cref="T:System.Uri" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="UploadFile">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
        <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
        <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> メソッドの他のオーバーロードのいずれかを使用して、ユーザーの資格情報を指定したり、特定のタイムアウト値を指定したりすることができます。  
  
 アプリケーションでネットワークトレースを有効にすると、`My.Computer.Network.UploadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
 次の表に、`My.Computer.Network.UploadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをアップロードする|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例では、ファイル `Order.txt` を `http://www.cohowinery.com/uploads`にアップロードします。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ソース ファイルのパスが無効です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> にファイル名が含まれていません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri -&gt; unit" Usage="network.UploadFile (sourceFileName, address)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
        <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
        <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> メソッドの他のオーバーロードのいずれかを使用して、ユーザーの資格情報を指定したり、特定のタイムアウト値を指定したりすることができます。  
  
 アプリケーションでネットワークトレースを有効にすると、`My.Computer.Network.UploadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
 次の表に、`My.Computer.Network.UploadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをアップロードする|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例では、ファイル `Order.txt` を `http://www.cohowinery.com/uploads`にアップロードします。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">ソース ファイルのパスが無効です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> にファイル名が含まれていません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
        <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列 <c>""</c> です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列 <c>""</c> です。</param>
        <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> メソッドの他のオーバーロードのいずれかを使用して、特定のタイムアウト値を指定できます。  
  
 アプリケーションでネットワークトレースを有効にすると、`My.Computer.Network.UploadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.UploadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをアップロードする|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例では、ファイル `Order.txt` を `http://www.cohowinery.com/uploads`にアップロードします。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> にファイル名が含まれていません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
        <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列 <c>""</c> です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列 <c>""</c> です。</param>
        <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A> メソッドの他のオーバーロードのいずれかを使用して、特定のタイムアウト値を指定できます。  
  
 アプリケーションでネットワークトレースを有効にすると、`My.Computer.Network.UploadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.UploadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをアップロードする|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例では、ファイル `Order.txt` を `http://www.cohowinery.com/uploads`にアップロードします。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> にファイル名が含まれていません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">既定のタイムアウト時間 (100 秒) 内にサーバーが応答しません。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
        <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
        <param name="networkCredentials">認証用の資格情報。</param>
        <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
        <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `showUI` が `True`に設定されている場合、ダイアログボックスに操作の進行状況が表示され、ユーザーがクリックして操作を取り消すことができる **[キャンセル]** ボタンが表示されます。 ダイアログボックスはモーダルではないため、プログラム内の他のウィンドウへのユーザー入力をブロックしません。  
  
 サーバーが `connectionTimeout`で指定された間隔内に応答しない場合、操作は取り消され、例外がスローされます。  
  
 アプリケーションでネットワークトレースを有効にすると、`My.Computer.Network.UploadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.UploadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをアップロードする|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例では、ファイル `Order.txt` を `http://www.cohowinery.com/uploads`にアップロードします。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> にファイル名が含まれていません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
        <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列 <c>""</c> です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列 <c>""</c> です。</param>
        <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
        <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `showUI` が `True`に設定されている場合、ダイアログボックスに操作の進行状況が表示され、ユーザーがクリックして操作を取り消すことができる **[キャンセル]** ボタンが表示されます。 ダイアログボックスはモーダルではないため、プログラム内の他のウィンドウへのユーザー入力をブロックしません。  
  
 サーバーが `connectionTimeout`で指定された間隔内に応答しない場合、操作は取り消され、例外がスローされます。  
  
 アプリケーションでネットワークトレースを有効にすると、`My.Computer.Network.UploadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.UploadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをアップロードする|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例では、ファイル `Order.txt` を `http://www.cohowinery.com/uploads`にアップロードします。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> にファイル名が含まれていません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, class System.Net.ICredentials networkCredentials, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, networkCredentials As ICredentials, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::Net::ICredentials ^ networkCredentials, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * System.Net.ICredentials * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, networkCredentials, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="networkCredentials" Type="System.Net.ICredentials" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
        <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
        <param name="networkCredentials">認証用の資格情報。</param>
        <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
        <param name="onUserCancel">ユーザーが **[キャンセル]** をクリックしたときに実行されるアクション。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
        <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `showUI` が `True`に設定されている場合、ダイアログボックスに操作の進行状況が表示され、ユーザーがクリックして操作を取り消すことができる **[キャンセル]** ボタンが表示されます。 ダイアログボックスはモーダルではないため、プログラム内の他のウィンドウへのユーザー入力をブロックしません。  
  
 サーバーが `connectionTimeout`で指定された間隔内に応答しない場合、操作は取り消され、例外がスローされます。  
  
 アプリケーションでネットワークトレースを有効にすると、`My.Computer.Network.UploadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.UploadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをアップロードする|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例では、ファイル `Order.txt` を `http://www.cohowinery.com/uploads`にアップロードします。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> にファイル名が含まれていません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
        <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列 <c>""</c> です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列 <c>""</c> です。</param>
        <param name="showUI">操作の進行状況を表示する場合は <see langword="True" />。それ以外の場合は <see langword="False" />。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
        <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `showUI` が `True`に設定されている場合、ダイアログボックスに操作の進行状況が表示され、ユーザーがクリックして操作を取り消すことができる **[キャンセル]** ボタンが表示されます。 ダイアログボックスはモーダルではないため、プログラム内の他のウィンドウへのユーザー入力をブロックしません。  
  
 サーバーが `connectionTimeout`で指定された間隔内に応答しない場合、操作は取り消され、例外がスローされます。  
  
 アプリケーションでネットワークトレースを有効にすると、`My.Computer.Network.UploadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.UploadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをアップロードする|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例では、ファイル `Order.txt` を `http://www.cohowinery.com/uploads`にアップロードします。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> にファイル名が含まれていません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, string address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As String, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, System::String ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * string * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
        <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列 <c>""</c> です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列 <c>""</c> です。</param>
        <param name="showUI">操作の進行状況を表示するかどうか。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
        <param name="onUserCancel">ユーザーが **[キャンセル]** をクリックしたときに実行されるアクション。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
        <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `showUI` が `True`に設定されている場合、ダイアログボックスに操作の進行状況が表示され、ユーザーがクリックして操作を取り消すことができる **[キャンセル]** ボタンが表示されます。 ダイアログボックスはモーダルではないため、プログラム内の他のウィンドウへのユーザー入力をブロックしません。  
  
 サーバーが `connectionTimeout`で指定された間隔内に応答しない場合、操作は取り消され、例外がスローされます。  
  
 アプリケーションでネットワークトレースを有効にすると、`My.Computer.Network.UploadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.UploadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをアップロードする|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例では、ファイル `Order.txt` を `http://www.cohowinery.com/uploads`にアップロードします。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> にファイル名が含まれていません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
    <Member MemberName="UploadFile">
      <MemberSignature Language="C#" Value="public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void UploadFile(string sourceFileName, class System.Uri address, string userName, string password, bool showUI, int32 connectionTimeout, valuetype Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UploadFile (sourceFileName As String, address As Uri, userName As String, password As String, showUI As Boolean, connectionTimeout As Integer, onUserCancel As UICancelOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UploadFile(System::String ^ sourceFileName, Uri ^ address, System::String ^ userName, System::String ^ password, bool showUI, int connectionTimeout, Microsoft::VisualBasic::FileIO::UICancelOption onUserCancel);" />
      <MemberSignature Language="F#" Value="member this.UploadFile : string * Uri * string * string * bool * int * Microsoft.VisualBasic.FileIO.UICancelOption -&gt; unit" Usage="network.UploadFile (sourceFileName, address, userName, password, showUI, connectionTimeout, onUserCancel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="showUI" Type="System.Boolean" />
        <Parameter Name="connectionTimeout" Type="System.Int32" />
        <Parameter Name="onUserCancel" Type="Microsoft.VisualBasic.FileIO.UICancelOption" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">アップロードするファイルのパスと名前。</param>
        <param name="address">送信先サーバーの URL、IP アドレス、または URI。</param>
        <param name="userName">認証するユーザー名。 既定値は空の文字列 <c>""</c> です。</param>
        <param name="password">認証するパスワード。 既定値は空の文字列 <c>""</c> です。</param>
        <param name="showUI">操作の進行状況を表示するかどうか。 既定値は <see langword="False" /> です。</param>
        <param name="connectionTimeout">タイムアウト間隔 (ミリ秒単位)。 既定値は 100 秒です。</param>
        <param name="onUserCancel">ユーザーが **[キャンセル]** をクリックしたときに実行されるアクション。 既定値は <see cref="F:Microsoft.VisualBasic.FileIO.UICancelOption.ThrowException" /> です。</param>
        <summary>指定されたファイルを指定されたホスト アドレスに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `showUI` が `True`に設定されている場合、ダイアログボックスに操作の進行状況が表示され、ユーザーがクリックして操作を取り消すことができる **[キャンセル]** ボタンが表示されます。 ダイアログボックスはモーダルではないため、プログラム内の他のウィンドウへのユーザー入力をブロックしません。  
  
 サーバーが `connectionTimeout`で指定された間隔内に応答しない場合、操作は取り消され、例外がスローされます。  
  
 アプリケーションでネットワークトレースを有効にすると、`My.Computer.Network.UploadFile` はトレース情報を出力します。 詳細については、「[ネットワークのトレースの有効化](~/docs/framework/network-programming/enabling-network-tracing.md)」を参照してください。  
  
> [!NOTE]
>  FTP プロトコルは、パスワードを含む情報をプレーンテキストで送信します。機密情報の送信には使用しないでください。  
  
 次の表に、`My.Computer.Network.UploadFile` メソッドに関連するタスクの例を示します。  
  
|目的|参照先|  
|-|-|  
|ファイルをアップロードする|[方法 : ファイルをアップロードする](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-upload-a-file.md)|  
  
   
  
## Examples  
 この例では、ファイル `Order.txt` を `http://www.cohowinery.com/uploads`にアップロードします。  
  
 [!code-vb[VbVbalrMyNetwork#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#2)]  
  
 この例では、`Order.txt` ファイルを `http://www.cohowinery.com/uploads` にアップロードします。ユーザー名やパスワードは指定せず、アップロードの進行状況を表示し、タイムアウト間隔は 500 ミリ秒に設定しています。  
  
 [!code-vb[VbVbalrMyNetwork#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyNetwork/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="connectionTimeout" /> が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="address" /> にファイル名が含まれていません。</exception>
        <exception cref="T:System.Security.SecurityException">ユーザーは、ネットワーク操作を実行するために必要なアクセス許可を持っていません。</exception>
        <exception cref="T:System.TimeoutException">指定した <paramref name="connectionTimeout" /> 内にサーバーが応答しない場合。</exception>
        <exception cref="T:System.Net.WebException">要求は対象の Web サーバーで拒否されました。</exception>
        <altmember cref="T:System.Uri" />
        <altmember cref="T:System.Net.ICredentials" />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.UICancelOption" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-download-a-file.md">方法 : Visual Basic でファイルをダウンロードする</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-parse-file-paths.md">方法: Visual Basic でファイル パスを解析する</related>
      </Docs>
    </Member>
  </Members>
</Type>
