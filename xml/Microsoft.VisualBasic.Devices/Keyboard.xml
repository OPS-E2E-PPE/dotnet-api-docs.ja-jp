<Type Name="Keyboard" FullName="Microsoft.VisualBasic.Devices.Keyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ad83337783a4a5deb0f7a4e6f80e4d722bbf81d" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73377436" /></Metadata><TypeSignature Language="C#" Value="public class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Devices.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>現在どのキーが押されているかなど、キーボードの現在の状態にアクセスするためのプロパティを提供します。また、キーストロークを作業中のウィンドウに送るメソッドを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard` オブジェクトは、コンピューターのキーボードにインターフェイスを提供します。 `My.Computer.Keyboard` のプロパティは、いくつかの特殊なキーの状態に関する情報を提供します。 `My.Computer.Keyboard.SendKeys` メソッドを使用すると、キーボードで入力されているかのように、アクティブウィンドウにキーを送信できます。  
  
## <a name="tasks"></a>タスク  
 次の表に、`My.Computer.Keyboard` オブジェクトに関連するタスクの例を示します。  
  
|終了|解決方法については、|  
|-|-|  
|アプリケーションにキーストロークを送信する|[方法: アプリケーションを起動してキーストロークを送る (Visual Basic)](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-start-an-application-and-send-it-keystrokes.md)|  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Computer.Keyboard.CtrlKeyDown` プロパティを使用して、コンピューターの CTRL キーが押されているかどうかを判断します。  
  
 [!code-vb[VbVbalrMyComputer#36](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#36)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
    <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">キーボードへのアクセス</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Keyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Keyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:Microsoft.VisualBasic.Devices.Keyboard" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">キーボードへのアクセス</related>
      </Docs>
    </Member>
    <Member MemberName="AltKeyDown">
      <MemberSignature Language="C#" Value="public bool AltKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AltKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AltKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AltKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AltKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.AltKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ALT キーが押されているかどうかを示す値を取得します。</summary>
        <value>ALT キーが押されている場合は <see langword="True" /> します。それ以外の場合は、<see langword="False" />ます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard.AltKeyDown` プロパティは、<xref:System.Windows.Forms.Control.ModifierKeys%2A> プロパティと同様の機能を提供します。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Computer.Keyboard.AltKeyDown` プロパティを使用して、コンピューターの ALT キーが押されているかどうかを確認します。  
  
 [!code-vb[VbVbalrMyComputer#23](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#23)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">キーボードへのアクセス</related>
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CapsLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.CapsLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CapsLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CapsLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CapsLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.CapsLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CapsLock キーがオンになっているかどうかを示す値を取得します。</summary>
        <value><see langword="Boolean" /> 値: CAPSLOCK がオンになっている場合は <see langword="True" />。それ以外の場合は、<see langword="False" />ます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 CAPS LOCK の状態のみが返されます。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Computer.Keyboard.CapsLock` プロパティを使用して、コンピューターの CAPS ロックがオンになっているかどうかを確認します。  
  
 [!code-vb[VbVbalrMyComputer#50](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#50)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">キーボードへのアクセス</related>
      </Docs>
    </Member>
    <Member MemberName="CtrlKeyDown">
      <MemberSignature Language="C#" Value="public bool CtrlKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtrlKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtrlKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtrlKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CtrlKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.CtrlKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>CTRL キーが押されているかどうかを示す値を取得します。</summary>
        <value>CTRL キーが押されている場合は <see langword="True" />それ以外の場合は、<see langword="False" />ます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard.CtrlKeyDown` プロパティは、<xref:System.Windows.Forms.Control.ModifierKeys%2A> プロパティと同様の機能を提供します。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Computer.Keyboard.CtrlKeyDown` プロパティを使用して、コンピューターの CTRL キーが押されているかどうかを判断します。  
  
 [!code-vb[VbVbalrMyComputer#34](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#34)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">キーボードへのアクセス</related>
      </Docs>
    </Member>
    <Member MemberName="NumLock">
      <MemberSignature Language="C#" Value="public bool NumLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NumLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.NumLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NumLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NumLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.NumLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>NumLock キーがオンになっているかどうかを示す値を取得します。</summary>
        <value>NUMLOCK がオンの場合は <see langword="True" />それ以外の場合は、<see langword="False" />ます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 NUMLOCK キーの状態だけが返されます。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Computer.Keyboard.NumLock` プロパティを使用して、コンピューターの NUMLOCK キーがオンになっているかどうかを確認します。  
  
 [!code-vb[VbVbalrMyComputer#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">キーボードへのアクセス</related>
      </Docs>
    </Member>
    <Member MemberName="ScrollLock">
      <MemberSignature Language="C#" Value="public bool ScrollLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollLock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.ScrollLock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScrollLock As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScrollLock { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScrollLock : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.ScrollLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ScrollLock キーがオンになっているかどうかを示す <see langword="Boolean" /> 値を取得します。</summary>
        <value>スクロールロックがオンの場合に <see langword="True" /> します。それ以外の場合は、<see langword="False" />ます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スクロールロックキーの状態だけが返されます。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Computer.Keyboard.ScrollLock` プロパティを使用して、コンピューターのスクロールロックキーがオンになっているかどうかを確認します。  
  
 [!code-vb[VbVbalrMyComputer#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#31)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">キーボードへのアクセス</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendKeys">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>キーボードから入力する感覚で、1 つまたは複数のキーストロークをアクティブ ウィンドウに送信します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SendKeys(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (keys As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendKeys(System::String ^ keys);" />
      <MemberSignature Language="F#" Value="member this.SendKeys : string -&gt; unit" Usage="keyboard.SendKeys keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">送信するキーを定義する <see langword="String" />。</param>
        <summary>キーボードから入力する感覚で、1 つまたは複数のキーストロークをアクティブ ウィンドウに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard.SendKeys` メソッドは、<xref:System.Windows.Forms.SendKeys.Send%2A> および <xref:System.Windows.Forms.SendKeys.SendWait%2A> メソッドと同様の機能を提供します。  
  
 `wait` 引数は、アプリケーションを続行する前に他のアプリケーションを終了する必要がある場合に便利です。  
  
> [!NOTE]
>  別のアプリケーションをアクティブ化するマネージメソッドがないため、現在のアプリケーション内でこのクラスを使用するか、キーを送信するウィンドウを手動で選択するか、または `FindWindow` や `SetForegroundWindow`などの Windows API メソッドを使用して他のアプリケーションにフォーカスを強制的に適用することができます。プログラム. 詳細については、「[チュートリアル: Windows api の呼び出し](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)」を参照してください。  
  
 `keys` 引数には、任意の1つのキー、または ALT、CTRL、SHIFT (またはこれらのキーの任意の組み合わせ) と組み合わせた任意のキーを指定できます。 各キーは、文字 "a" の `a`、ENTER キーの `{ENTER}` など、1つ以上の文字で表されます。  
  
 キーを SHIFT と結合するには、キーコードの前に `+` (正符号) を付けます。 CTRL キーを組み合わせるには、キーコードの前に `^` (キャレット) を付けます。 キーを ALT と結合するには、キーコードの前に `%` (パーセント記号) を付けます。 繰り返しキーを指定するには、フォーム `{`*キー番号*`}`を使用します。 *キー*と*数値*の間にスペースを入れる必要があります。 たとえば、`{LEFT 42}` は、"左矢印キーを42回押す" を意味します。`{h 10}` とは、"h" を10回押すことを意味します。  
  
 次の表に、対応するキー (ENTER や TAB など) を押したときに表示されない文字を指定するために使用できるコードを示します。  
  
|キー|コード|  
|-|-|  
|行頭|{BACKSPACE} または {BS}|  
|改|改|  
|キャップス ロックです|CAPSLOCK|  
|クリア|クリア|  
|Del|{DELETE} または {DEL}|  
|↓|ダウン|  
|End|エンド|  
|ENTER (テンキー)|を入力し|  
|Enter|~|  
|ESC|{ESCAPE} または {ESC}|  
|ヘルプ|方法|  
|ホーム|出張|  
|挿入|INSERT|  
|←|左側|  
|NUMLOCK|NUMLOCK|  
|PageDown|PAGEDOWN|  
|PageUp|PAGEUP|  
|RETURN|返し|  
|→|直角|  
|スクロールロック|{SCROLLLOCK}|  
|Tab|タブ|  
|↑|設定|  
|F1 ~ F15|{F1} から {F15} まで|  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Computer.Keyboard.SendKeys` メソッドを使用して、`Shell` 関数によって開始された、電卓アプリケーションである外部アプリケーションにキーストロークを送信します。  
  
 [!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]  
  
 要求されたプロセス ID のアプリケーションが見つからない場合には、<xref:System.ArgumentException> 例外が発生します。  
  
 `Shell` 関数の呼び出しには完全な信頼が必要です (<xref:System.Security.SecurityException> クラス)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">ユーザーが部分的に信頼されており、必要なアクセス許可を持っていません。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.SendKeys.Send(System.String)" />
        <altmember cref="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">キーボードへのアクセス</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9280ca96-7a93-47a3-8d01-6d01be0657cb">チュートリアル : Windows API の呼び出し</related>
      </Docs>
    </Member>
    <Member MemberName="SendKeys">
      <MemberSignature Language="C#" Value="public void SendKeys (string keys, bool wait);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SendKeys(string keys, bool wait) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Devices.Keyboard.SendKeys(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendKeys (keys As String, wait As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendKeys(System::String ^ keys, bool wait);" />
      <MemberSignature Language="F#" Value="member this.SendKeys : string * bool -&gt; unit" Usage="keyboard.SendKeys (keys, wait)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="wait" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keys">送信するキーを定義する <see langword="String" />。</param>
        <param name="wait">任意。 キーストロークの処理が完了するまで待って、アプリケーションの処理を続行するかどうかを指定する <see langword="Boolean" /> 値。 既定では <see langword="True" /> です。</param>
        <summary>キーボードから入力する感覚で、1 つまたは複数のキーストロークをアクティブ ウィンドウに送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard.SendKeys` メソッドは、<xref:System.Windows.Forms.SendKeys.Send%2A> および <xref:System.Windows.Forms.SendKeys.SendWait%2A> メソッドと同様の機能を提供します。  
  
 `wait` 引数は、アプリケーションを続行する前に他のアプリケーションを終了する必要がある場合に便利です。  
  
> [!NOTE]
>  別のアプリケーションをアクティブ化するマネージメソッドがないため、現在のアプリケーション内でこのクラスを使用するか、キーを送信するウィンドウを手動で選択するか、または `FindWindow` や `SetForegroundWindow`などの Windows API メソッドを使用して他のアプリケーションにフォーカスを強制的に適用することができます。プログラム. 詳細については、「[チュートリアル: Windows api の呼び出し](~/docs/visual-basic/programming-guide/com-interop/walkthrough-calling-windows-apis.md)」を参照してください。  
  
 `keys` 引数には、任意の1つのキー、または ALT、CTRL、SHIFT (またはこれらのキーの任意の組み合わせ) と組み合わせた任意のキーを指定できます。 各キーは、文字 "a" の `a`、ENTER キーの `{ENTER}` など、1つ以上の文字で表されます。  
  
 キーを SHIFT と結合するには、キーコードの前に `+` (正符号) を付けます。 CTRL キーを組み合わせるには、キーコードの前に `^` (キャレット) を付けます。 キーを ALT と結合するには、キーコードの前に `%` (パーセント記号) を付けます。 繰り返しキーを指定するには、フォーム `{`*キー番号*`}`を使用します。 *キー*と*数値*の間にスペースを入れる必要があります。 たとえば、`{LEFT 42}` は、"左矢印キーを42回押す" を意味します。`{h 10}` とは、"h" を10回押すことを意味します。  
  
 次の表に、対応するキー (ENTER や TAB など) を押したときに表示されない文字を指定するために使用できるコードを示します。  
  
|キー|コード|  
|-|-|  
|行頭|{BACKSPACE} または {BS}|  
|改|改|  
|キャップス ロックです|CAPSLOCK|  
|クリア|クリア|  
|Del|{DELETE} または {DEL}|  
|↓|ダウン|  
|End|エンド|  
|ENTER (テンキー)|を入力し|  
|Enter|~|  
|ESC|{ESCAPE} または {ESC}|  
|ヘルプ|方法|  
|ホーム|出張|  
|挿入|INSERT|  
|←|左側|  
|NUMLOCK|NUMLOCK|  
|PageDown|PAGEDOWN|  
|PageUp|PAGEUP|  
|RETURN|返し|  
|→|直角|  
|スクロールロック|{SCROLLLOCK}|  
|Tab|タブ|  
|↑|設定|  
|F1 ~ F15|{F1} から {F15} まで|  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Computer.Keyboard.SendKeys` メソッドを使用して、`Shell` 関数によって開始された、電卓アプリケーションである外部アプリケーションにキーストロークを送信します。  
  
 [!code-vb[VbVbalrMyComputer#25](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#25)]  
  
 要求されたプロセス ID のアプリケーションが見つからない場合には、<xref:System.ArgumentException> 例外が発生します。  
  
 `Shell` 関数の呼び出しには完全な信頼が必要です (<xref:System.Security.SecurityException> クラス)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">ユーザーが部分的に信頼されており、必要なアクセス許可を持っていません。</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">ファイルとフォルダーにアクセスする機能を制御します。 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> (関連する列挙体)</permission>
        <permission cref="T:System.Security.Permissions.UIPermission">ユーザーインターフェイスとクリップボードに関連するアクセス許可を制御します。 <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /> (関連する列挙体)</permission>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="M:System.Windows.Forms.SendKeys.Send(System.String)" />
        <altmember cref="M:System.Windows.Forms.SendKeys.SendWait(System.String)" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">キーボードへのアクセス</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9280ca96-7a93-47a3-8d01-6d01be0657cb">チュートリアル : Windows API の呼び出し</related>
      </Docs>
    </Member>
    <Member MemberName="ShiftKeyDown">
      <MemberSignature Language="C#" Value="public bool ShiftKeyDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShiftKeyDown" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShiftKeyDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShiftKeyDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShiftKeyDown : bool" Usage="Microsoft.VisualBasic.Devices.Keyboard.ShiftKeyDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Shift キーが押されているかどうかを示す値を取得します。</summary>
        <value>SHIFT キーが押されているかどうかを <see langword="True" /> します。それ以外の場合は、<see langword="False" />ます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `My.Computer.Keyboard.ShiftKeyDown` プロパティは、<xref:System.Windows.Forms.Control.ModifierKeys%2A> プロパティと同様の機能を提供します。  
  
## <a name="availability-by-project-type"></a>プロジェクトの種類別の可用性  
  
|プロジェクトの種類|使用可能|  
|-|-|  
|Windows アプリケーション|**はい**|  
|クラス ライブラリ|**はい**|  
|コンソール アプリケーション|**はい**|  
|Windows コントロールライブラリ|**はい**|  
|Web コントロールライブラリ|いいえ|  
|Windows サービス|**はい**|  
|Web サイト|いいえ|  
  
   
  
## Examples  
 この例では、`My.Computer.Keyboard.ShiftKeyDown` プロパティを使用して、コンピューターの SHIFT キーが押されているかどうかを判断します。  
  
 [!code-vb[VbVbalrMyComputer#47](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyComputer/VB/Class2.vb#47)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Devices.Computer" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">オブジェクト (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/aa37d54c-5c98-4b44-b98a-c26d2a03c038">キーボードへのアクセス</related>
      </Docs>
    </Member>
  </Members>
</Type>
