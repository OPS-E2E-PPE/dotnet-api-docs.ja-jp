<Type Name="BufferedGraphicsContext" FullName="System.Drawing.BufferedGraphicsContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="80755f6fdb5ad2fea75212edbeb06bd124394209" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77226416" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphicsContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphicsContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphicsContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphicsContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphicsContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphicsContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a8418-101">ダブル バッファリングに使用できるグラフィックス バッファーを作成するためのメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a8418-101">Provides methods for creating graphics buffers that can be used for double buffering.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8418-102"><xref:System.Drawing.BufferedGraphicsContext> クラスを使用すると、グラフィックスのカスタムダブルバッファリングを実装できます。</span><span class="sxs-lookup"><span data-stu-id="a8418-102">The <xref:System.Drawing.BufferedGraphicsContext> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="a8418-103">ダブルバッファリングを使用するグラフィックスは、表示サーフェイスの再描画によって引き起こされるちらつきを軽減または除去できます。</span><span class="sxs-lookup"><span data-stu-id="a8418-103">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8418-104">ダブルバッファリングを使用する最も簡単な方法は、<xref:System.Windows.Forms.Control.SetStyle%2A> メソッドを使用してコントロールの <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> コントロールスタイルフラグを設定することです。</span><span class="sxs-lookup"><span data-stu-id="a8418-104">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="a8418-105">コントロールの <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> コントロールスタイルフラグを設定すると、コントロールのすべての描画が既定のグラフィックスバッファーを介してリダイレクトされます。追加のコードは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="a8418-105">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="a8418-106">既定では、このフラグは `true` に設定されています。</span><span class="sxs-lookup"><span data-stu-id="a8418-106">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="a8418-107"><xref:System.Drawing.BufferedGraphicsContext> クラスには、グラフィックスバッファーを作成および構成するためのメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="a8418-107">The <xref:System.Drawing.BufferedGraphicsContext> class provides methods for creating and configuring a graphics buffer.</span></span> <span data-ttu-id="a8418-108"><xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> メソッドは、<xref:System.Drawing.BufferedGraphics>を作成します。これは、グラフィックスバッファーのラッパーであり、バッファーへの書き込みとその内容を出力デバイスにレンダリングするために使用できるメソッドも提供します。</span><span class="sxs-lookup"><span data-stu-id="a8418-108">The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="a8418-109">"静的 <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType>" プロパティから、現在のアプリケーションドメインの <xref:System.Drawing.BufferedGraphicsContext> を取得できます。</span><span class="sxs-lookup"><span data-stu-id="a8418-109">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="a8418-110">アニメーションなどのグラフィックを多用するアプリケーションでは、コンストラクターを使用して専用の <xref:System.Drawing.BufferedGraphicsContext> を作成できますが、ほとんどのアプリケーションでは、<xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> のプロパティで十分です。</span><span class="sxs-lookup"><span data-stu-id="a8418-110">For graphically intensive applications such as animation, you can create a dedicated <xref:System.Drawing.BufferedGraphicsContext> using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property will be sufficient.</span></span>  
  
 <span data-ttu-id="a8418-111">バッファリングされたグラフィックスとカスタムバッファリング実装の描画の詳細については、「[ダブルバッファリング](~/docs/framework/winforms/advanced/double-buffered-graphics.md)されたグラフィックス」と「[方法: バッファリングされたグラフィックスを手動で管理する](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a8418-111">For more information on drawing buffered graphics and custom buffering implementations, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md) and [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8418-112">次のコード例は、現在のアプリケーションドメインの <xref:System.Drawing.BufferedGraphicsContext> を取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a8418-112">The following code example demonstrates how to acquire the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain.</span></span> <span data-ttu-id="a8418-113">このコードは、<xref:System.Drawing.BufferedGraphics> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="a8418-113">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]
 [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]
 [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.BufferedGraphics" />
    <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
    <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="a8418-114">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="a8418-114">Double Buffered Graphics</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedGraphicsContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8418-115"><see cref="T:System.Drawing.BufferedGraphicsContext" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a8418-115">Initializes a new instance of the <see cref="T:System.Drawing.BufferedGraphicsContext" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8418-116">アニメーションなどのグラフィックを多用するアプリケーションの場合、<xref:System.Drawing.BufferedGraphicsManager>によって提供される既定のインスタンスの代わりに専用の <xref:System.Drawing.BufferedGraphicsContext> を使用すると、パフォーマンスを向上させることができます。</span><span class="sxs-lookup"><span data-stu-id="a8418-116">For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>.</span></span> <span data-ttu-id="a8418-117">これにより、グラフィックスバッファーを個別に作成および管理できます。</span><span class="sxs-lookup"><span data-stu-id="a8418-117">This allows you to create and manage graphics buffers individually.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8418-118">専用の <xref:System.Drawing.BufferedGraphicsContext>の使用が完了したら、常に <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8418-118">You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
 <span data-ttu-id="a8418-119">専用のグラフィックスバッファーの詳細については、「[方法: バッファリングされたグラフィックスを手動で管理する](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a8418-119">For more information about dedicated graphics buffers, see [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="a8418-120">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="a8418-120">Double Buffered Graphics</span></span></related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md"><span data-ttu-id="a8418-121">方法 : バッファリングされたグラフィックスを手動で管理する</span><span class="sxs-lookup"><span data-stu-id="a8418-121">How to: Manually Manage Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Allocate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8418-122">グラフィックス バッファーを作成します。</span><span class="sxs-lookup"><span data-stu-id="a8418-122">Creates a graphics buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(class System.Drawing.Graphics targetGraphics, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetGraphics As Graphics, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(System::Drawing::Graphics ^ targetGraphics, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetGraphics, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetGraphics" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetGraphics"><span data-ttu-id="a8418-123">新しいバッファーのピクセル形式を一致させる <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="a8418-123">The <see cref="T:System.Drawing.Graphics" /> to match the pixel format for the new buffer to.</span></span></param>
        <param name="targetRectangle"><span data-ttu-id="a8418-124">作成するバッファーのサイズを示す <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="a8418-124">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</span></span></param>
        <summary><span data-ttu-id="a8418-125">指定した <see cref="T:System.Drawing.Graphics" /> のピクセル形式を使用して、指定したサイズのグラフィックス バッファーを作成します。</span><span class="sxs-lookup"><span data-stu-id="a8418-125">Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="a8418-126">指定したサイズのバッファーに描画するために使用できる <see cref="T:System.Drawing.BufferedGraphics" />。</span><span class="sxs-lookup"><span data-stu-id="a8418-126">A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8418-127">サイズが <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> プロパティの値を超える四角形を使用して <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> メソッドを呼び出すと、バッファーを割り当て、バッファーの一時的なコンテキストを提供するための一時 <xref:System.Drawing.BufferedGraphicsContext> が作成されます。</span><span class="sxs-lookup"><span data-stu-id="a8418-127">When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer.</span></span> <span data-ttu-id="a8418-128">新しい <xref:System.Drawing.BufferedGraphicsContext> は、アプリケーションドメインの <xref:System.Drawing.BufferedGraphicsContext> とは異なり、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> メソッドによって返された <xref:System.Drawing.BufferedGraphics> が破棄されると、自動的に破棄されます。</span><span class="sxs-lookup"><span data-stu-id="a8418-128">The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8418-129"><xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> メソッドを使用してグラフィックスバッファーを作成するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="a8418-129">The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="a8418-130">このコードは、<xref:System.Drawing.BufferedGraphics> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="a8418-130">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#3)]
 [!code-csharp[BufferingExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#3)]
 [!code-vb[BufferingExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="a8418-131">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="a8418-131">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(native int targetDC, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetDC As IntPtr, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(IntPtr targetDC, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : nativeint * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetDC, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetDC"><span data-ttu-id="a8418-132">新しいバッファーのピクセル形式を一致させるデバイス コンテキストの <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="a8418-132">An <see cref="T:System.IntPtr" /> to a device context to match the pixel format of the new buffer to.</span></span></param>
        <param name="targetRectangle"><span data-ttu-id="a8418-133">作成するバッファーのサイズを示す <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="a8418-133">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</span></span></param>
        <summary><span data-ttu-id="a8418-134">指定した <see cref="T:System.Drawing.Graphics" /> のピクセル形式を使用して、指定したサイズのグラフィックス バッファーを作成します。</span><span class="sxs-lookup"><span data-stu-id="a8418-134">Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="a8418-135">指定したサイズのバッファーに描画するために使用できる <see cref="T:System.Drawing.BufferedGraphics" />。</span><span class="sxs-lookup"><span data-stu-id="a8418-135">A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8418-136">サイズが <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> プロパティの値を超える四角形を使用して <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> メソッドを呼び出すと、バッファーを割り当て、バッファーの一時的なコンテキストを提供するための一時 <xref:System.Drawing.BufferedGraphicsContext> が作成されます。</span><span class="sxs-lookup"><span data-stu-id="a8418-136">When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer.</span></span> <span data-ttu-id="a8418-137">新しい <xref:System.Drawing.BufferedGraphicsContext> は、アプリケーションドメインの <xref:System.Drawing.BufferedGraphicsContext> とは異なり、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> メソッドによって返された <xref:System.Drawing.BufferedGraphics> が破棄されると、自動的に破棄されます。</span><span class="sxs-lookup"><span data-stu-id="a8418-137">The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8418-138"><xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> メソッドを使用してグラフィックスバッファーを作成するコード例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="a8418-138">The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="a8418-139">このコードは、<xref:System.Drawing.BufferedGraphics> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="a8418-139">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#4)]
 [!code-csharp[BufferingExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#4)]
 [!code-vb[BufferingExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.IntPtr" />
        <altmember cref="T:System.Drawing.Rectangle" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="a8418-140">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="a8418-140">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphicsContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8418-141"><see cref="T:System.Drawing.BufferedGraphicsContext" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="a8418-141">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphicsContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8418-142"><xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> を使い終わったら、<xref:System.Drawing.BufferedGraphicsContext>を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="a8418-142">Call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="a8418-143"><xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>メソッドによって、<xref:System.Drawing.BufferedGraphicsContext> は使用不可の状態になります。</span><span class="sxs-lookup"><span data-stu-id="a8418-143">The <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state.</span></span> <span data-ttu-id="a8418-144"><xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>呼び出し後は、<xref:System.Drawing.BufferedGraphicsContext>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Drawing.BufferedGraphicsContext> へのすべての参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a8418-144">After calling <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying.</span></span> <span data-ttu-id="a8418-145">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="a8418-145">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8418-146"><xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>への最後の参照を解放する前に、必ず<xref:System.Drawing.BufferedGraphicsContext>を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="a8418-146">Always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="a8418-147">そうしないと、ガベージコレクターが <xref:System.Drawing.BufferedGraphicsContext>の <xref:System.Object.Finalize%2A> メソッドを呼び出すまで、使用しているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="a8418-147">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="a8418-148">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="a8418-148">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphicsContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphicsContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8418-149">オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="a8418-149">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="bufferedGraphicsContext.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8418-150">バッファーが割り当てられていてまだ破棄されていない場合に、現在のグラフィックス バッファーを破棄します。</span><span class="sxs-lookup"><span data-stu-id="a8418-150">Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8418-151">グラフィックスバッファーが使用中である場合、そのバッファーは解放されるとすぐに破棄対象としてマークされます。それ以外の場合は、直ちに破棄されます。</span><span class="sxs-lookup"><span data-stu-id="a8418-151">If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="a8418-152">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="a8418-152">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MaximumBuffer">
      <MemberSignature Language="C#" Value="public System.Drawing.Size MaximumBuffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumBuffer As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size MaximumBuffer { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumBuffer : System.Drawing.Size with get, set" Usage="System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8418-153">使用するバッファーの最大サイズを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="a8418-153">Gets or sets the maximum size of the buffer to use.</span></span></summary>
        <value><span data-ttu-id="a8418-154">バッファーの最大サイズを示す <see cref="T:System.Drawing.Size" />。</span><span class="sxs-lookup"><span data-stu-id="a8418-154">A <see cref="T:System.Drawing.Size" /> indicating the maximum size of the buffer dimensions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8418-155">このプロパティを使用すると、メモリに保持する必要があるバッファーの最大サイズを取得または設定できます。</span><span class="sxs-lookup"><span data-stu-id="a8418-155">This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.</span></span> <span data-ttu-id="a8418-156">任意のサイズのバッファーを割り当てることができますが、<xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> サイズを超えるディメンションを持つバッファーは一時的に使用され、<xref:System.Drawing.BufferedGraphics> オブジェクトが解放されると破棄されます。</span><span class="sxs-lookup"><span data-stu-id="a8418-156">You can allocate a buffer of any size, however any buffer with dimensions greater than the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8418-157">次の例は、<xref:System.Drawing.BufferedGraphicsContext>のバッファーの最大サイズを設定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="a8418-157">The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="a8418-158">このコードは、<xref:System.Drawing.BufferedGraphics> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="a8418-158">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#2)]
 [!code-csharp[BufferingExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#2)]
 [!code-vb[BufferingExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8418-159">サイズの高さまたは幅が 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="a8418-159">The height or width of the size is less than or equal to zero.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="a8418-160">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="a8418-160">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
