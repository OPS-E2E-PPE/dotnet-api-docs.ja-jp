<Type Name="BufferedGraphics" FullName="System.Drawing.BufferedGraphics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="626205fd4abe46be508bde925786572574530190" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75134949" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphics : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphics extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphics&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphics sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphics = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ad748-101">ダブル バッファリングのためのグラフィックス バッファーを提供します。</span><span class="sxs-lookup"><span data-stu-id="ad748-101">Provides a graphics buffer for double buffering.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad748-102"><xref:System.Drawing.BufferedGraphics> クラスを使用すると、グラフィックスのカスタムダブルバッファリングを実装できます。</span><span class="sxs-lookup"><span data-stu-id="ad748-102">The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="ad748-103">これは、グラフィックスバッファーのラッパーと、バッファーに書き込んでその内容を出力デバイスにレンダリングするために使用できるメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="ad748-103">It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="ad748-104">ダブルバッファリングを使用するグラフィックスは、表示サーフェイスの再描画によって引き起こされるちらつきを軽減または除去できます。</span><span class="sxs-lookup"><span data-stu-id="ad748-104">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span> <span data-ttu-id="ad748-105">ダブルバッファリングを使用すると、更新されたグラフィックスは最初にメモリ内のバッファーに描画され、次に、このバッファーの内容が、表示されている表面の一部またはすべてにすぐに書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="ad748-105">When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</span></span> <span data-ttu-id="ad748-106">通常は、表示されているグラフィックスを比較的簡単に上書きすることで、グラフィックスが更新されたときに発生する可能性のあるちらつきを軽減または除去します。</span><span class="sxs-lookup"><span data-stu-id="ad748-106">This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ad748-107">ダブルバッファリングを使用する最も簡単な方法は、<xref:System.Windows.Forms.Control.SetStyle%2A> メソッドを使用してコントロールの <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> コントロールスタイルフラグを設定することです。</span><span class="sxs-lookup"><span data-stu-id="ad748-107">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="ad748-108">コントロールの <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> フラグを設定すると、コントロールのすべての描画が既定のグラフィックスバッファーを介してリダイレクトされます。追加のコードは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="ad748-108">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="ad748-109">既定では、このフラグは `true` に設定されています。</span><span class="sxs-lookup"><span data-stu-id="ad748-109">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="ad748-110"><xref:System.Drawing.BufferedGraphics> クラスにはパブリックコンストラクターがなく、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> メソッドを使用して、アプリケーションドメインの <xref:System.Drawing.BufferedGraphicsContext> によって作成される必要があります。</span><span class="sxs-lookup"><span data-stu-id="ad748-110">The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="ad748-111">"静的 <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType>" プロパティから、現在のアプリケーションドメインの <xref:System.Drawing.BufferedGraphicsContext> を取得できます。</span><span class="sxs-lookup"><span data-stu-id="ad748-111">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="ad748-112"><xref:System.Drawing.BufferedGraphics.Graphics%2A> プロパティは、グラフィックスバッファーに描画するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="ad748-112">The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer.</span></span> <span data-ttu-id="ad748-113">このプロパティは、この <xref:System.Drawing.BufferedGraphics> オブジェクトに割り当てられたグラフィックスバッファーに描画する <xref:System.Drawing.Graphics> オブジェクトへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="ad748-113">This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 <span data-ttu-id="ad748-114">引数を指定せずに <xref:System.Drawing.BufferedGraphics.Render%2A> メソッドは、バッファーが割り当てられたときに指定されたサーフェイスにグラフィックスバッファーの内容を描画します。</span><span class="sxs-lookup"><span data-stu-id="ad748-114">The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</span></span> <span data-ttu-id="ad748-115"><xref:System.Drawing.BufferedGraphics.Render%2A> メソッドの他のオーバーロードを使用すると、グラフィックスバッファーの内容の描画先のデバイスコンテキストを指す <xref:System.Drawing.Graphics> オブジェクトまたは <xref:System.IntPtr> オブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ad748-115">Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.</span></span>  
  
 <span data-ttu-id="ad748-116">ダブルバッファリングされたグラフィックスの描画の詳細については、「[ダブルバッファリング](~/docs/framework/winforms/advanced/double-buffered-graphics.md)されたグラフィックス」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ad748-116">For more information about drawing double-buffered graphics, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad748-117">次のコード例では、<xref:System.Drawing.BufferedGraphics> オブジェクトを使用して、複数の種類のバッファリング実装を使用してグラフィックスを描画する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="ad748-117">The following code example demonstrates using a <xref:System.Drawing.BufferedGraphics> object to draw graphics using several types of buffering implementations.</span></span> <span data-ttu-id="ad748-118">フォームをクリックすると、描画の更新を引き起こすタイマーが開始および停止されます。</span><span class="sxs-lookup"><span data-stu-id="ad748-118">Clicking the form alternately starts and stops a timer that causes draw updates.</span></span> <span data-ttu-id="ad748-119">描画の更新により、ダブルバッファリングの効果を観察できます。</span><span class="sxs-lookup"><span data-stu-id="ad748-119">The draw updates allow you to observe the effect of double buffering.</span></span> <span data-ttu-id="ad748-120">フォームを右クリックすると、次の描画モードが切り替わります。</span><span class="sxs-lookup"><span data-stu-id="ad748-120">Right-clicking the form cycles through the following drawing modes:</span></span>  
  
-   <span data-ttu-id="ad748-121"><xref:System.Windows.Forms.Form>の <xref:System.Windows.Forms.Control.Handle%2A> に直接描画します。</span><span class="sxs-lookup"><span data-stu-id="ad748-121">Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.</span></span>  
  
-   <span data-ttu-id="ad748-122"><xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> コントロールスタイルを使用して <xref:System.Windows.Forms.Form.OnPaint%2A> メソッドをオーバーライドすることによって描画します。</span><span class="sxs-lookup"><span data-stu-id="ad748-122">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
-   <span data-ttu-id="ad748-123"><xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> コントロールスタイルを使用せずにフォームメソッドの <xref:System.Windows.Forms.Form.OnPaint%2A> メソッドをオーバーライドして描画します。</span><span class="sxs-lookup"><span data-stu-id="ad748-123">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
 <span data-ttu-id="ad748-124">各モードでは、現在のモードを識別するテキストが描画され、それぞれのマウスボタンが押されたときに発生する動作を説明します。</span><span class="sxs-lookup"><span data-stu-id="ad748-124">In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</span></span>  
  
 [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]
 [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]
 [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ad748-125"><see cref="T:System.Drawing.BufferedGraphics" /> クラスはスレッド セーフではありません。</span><span class="sxs-lookup"><span data-stu-id="ad748-125">The <see cref="T:System.Drawing.BufferedGraphics" /> class is not thread safe.</span></span> <span data-ttu-id="ad748-126">別のスレッドからグラフィックスバッファーにアクセスする場合は、スレッドアクセス制御機構を使用して競合を防ぐことが重要です。</span><span class="sxs-lookup"><span data-stu-id="ad748-126">When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</span></span></threadsafe>
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="ad748-127">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="ad748-127">Double Buffered Graphics</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphics.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad748-128">この <see cref="T:System.Drawing.BufferedGraphics" /> オブジェクトによって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="ad748-128">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphics" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad748-129"><xref:System.Drawing.BufferedGraphics> オブジェクトの使用が終了したら、<xref:System.Drawing.BufferedGraphics.Dispose%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ad748-129">Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="ad748-130"><xref:System.Drawing.BufferedGraphics.Dispose%2A> メソッドは、<xref:System.Drawing.BufferedGraphics> オブジェクトを使用できない状態のままにします。</span><span class="sxs-lookup"><span data-stu-id="ad748-130">The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state.</span></span> <span data-ttu-id="ad748-131"><xref:System.Drawing.BufferedGraphics.Dispose%2A>を呼び出した後、<xref:System.Drawing.BufferedGraphics> オブジェクトへのすべての参照を解放して、ガベージコレクターが <xref:System.Drawing.BufferedGraphics> オブジェクトが占有していたメモリを再利用できるようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ad748-131">After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying.</span></span> <span data-ttu-id="ad748-132">詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ad748-132">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ad748-133"><xref:System.Drawing.BufferedGraphics> オブジェクトへの最後の参照を解放する前に、常に <xref:System.Drawing.BufferedGraphics.Dispose%2A> を呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="ad748-133">Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="ad748-134">そうしないと、ガベージ コレクターが <xref:System.Drawing.BufferedGraphics> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。</span><span class="sxs-lookup"><span data-stu-id="ad748-134">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="ad748-135">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="ad748-135">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphics ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphics.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad748-136">オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="ad748-136">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphics.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Drawing.BufferedGraphics.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ad748-137">グラフィックス バッファーに出力する <see cref="T:System.Drawing.Graphics" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="ad748-137">Gets a <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span></span></summary>
        <value><span data-ttu-id="ad748-138">グラフィックス バッファーに出力する <see cref="T:System.Drawing.Graphics" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ad748-138">A <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad748-139">このプロパティは、この <xref:System.Drawing.BufferedGraphics> オブジェクトに割り当てられたグラフィックスバッファーに描画する <xref:System.Drawing.Graphics> オブジェクトを提供します。</span><span class="sxs-lookup"><span data-stu-id="ad748-139">This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="ad748-140">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="ad748-140">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Render">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ad748-141">グラフィックス バッファーの内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ad748-141">Writes the contents of the graphics buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render();" />
      <MemberSignature Language="F#" Value="member this.Render : unit -&gt; unit" Usage="bufferedGraphics.Render " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ad748-142">グラフィックス バッファーの内容を既定のデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ad748-142">Writes the contents of the graphics buffer to the default device.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad748-143">このメソッドは、この <xref:System.Drawing.BufferedGraphics> オブジェクトの作成に使用された <xref:System.Drawing.BufferedGraphicsContext> の <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> メソッドを呼び出すことによって、グラフィックスバッファーの内容を指定されたデバイスに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ad748-143">This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="ad748-144">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="ad748-144">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Drawing.Graphics target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Drawing.Graphics target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (target As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Drawing::Graphics ^ target);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Drawing.Graphics -&gt; unit" Usage="bufferedGraphics.Render target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="ad748-145">グラフィックス バッファーの内容を書き込む <see cref="T:System.Drawing.Graphics" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ad748-145">A <see cref="T:System.Drawing.Graphics" /> object to which to write the contents of the graphics buffer.</span></span></param>
        <summary><span data-ttu-id="ad748-146">グラフィックス バッファーの内容を指定された <see cref="T:System.Drawing.Graphics" /> オブジェクトに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ad748-146">Writes the contents of the graphics buffer to the specified <see cref="T:System.Drawing.Graphics" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad748-147">このメソッドは、指定された <xref:System.Drawing.Graphics> オブジェクトにグラフィックスバッファーの内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ad748-147">This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad748-148">次のコード例は、指定された <xref:System.Drawing.Graphics> オブジェクトにグラフィックスバッファーの内容を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ad748-148">The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="ad748-149">このコードは、<xref:System.Drawing.BufferedGraphics> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="ad748-149">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]
 [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]
 [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="ad748-150">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="ad748-150">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (IntPtr targetDC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(native int targetDC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (targetDC As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(IntPtr targetDC);" />
      <MemberSignature Language="F#" Value="member this.Render : nativeint -&gt; unit" Usage="bufferedGraphics.Render targetDC" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="targetDC"><span data-ttu-id="ad748-151">グラフィックス バッファーの内容の書き込み先のデバイス コンテキストを指す <see cref="T:System.IntPtr" />。</span><span class="sxs-lookup"><span data-stu-id="ad748-151">An <see cref="T:System.IntPtr" /> that points to the device context to which to write the contents of the graphics buffer.</span></span></param>
        <summary><span data-ttu-id="ad748-152">グラフィックス バッファーの内容を、指定した <see cref="T:System.IntPtr" /> ハンドルに関連付けられているデバイス コンテキストに書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ad748-152">Writes the contents of the graphics buffer to the device context associated with the specified <see cref="T:System.IntPtr" /> handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad748-153">このメソッドは、指定された <xref:System.IntPtr> ハンドルに関連付けられているデバイスコンテキストにグラフィックスバッファーの内容を書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ad748-153">This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad748-154">次のコード例は、指定されたデバイスコンテキストに `grafx` グラフィックスバッファーの内容を表示する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ad748-154">The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context.</span></span> <span data-ttu-id="ad748-155">このコードは、<xref:System.Drawing.BufferedGraphics> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="ad748-155">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]
 [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]
 [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="ad748-156">アンマネージコードへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="ad748-156">for access to unmanaged code.</span></span> <span data-ttu-id="ad748-157">関連する列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="ad748-157">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <altmember cref="T:System.IntPtr" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="ad748-158">ダブル バッファリングされたグラフィックス</span><span class="sxs-lookup"><span data-stu-id="ad748-158">Double Buffered Graphics</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
