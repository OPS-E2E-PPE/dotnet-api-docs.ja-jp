<Type Name="BufferedGraphicsManager" FullName="System.Drawing.BufferedGraphicsManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d101b9621ae66a899bf52890c288eaf9e84d702" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75134923" /></Metadata><TypeSignature Language="C#" Value="public sealed class BufferedGraphicsManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BufferedGraphicsManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphicsManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphicsManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphicsManager sealed" />
  <TypeSignature Language="F#" Value="type BufferedGraphicsManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="beafd-101">メインのバッファー内グラフィックス コンテキスト オブジェクトへのアクセスをアプリケーション ドメインに提供します。</span><span class="sxs-lookup"><span data-stu-id="beafd-101">Provides access to the main buffered graphics context object for the application domain.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beafd-102"><xref:System.Drawing.BufferedGraphicsManager> クラスを使用すると、グラフィックスのカスタムダブルバッファリングを実装できます。</span><span class="sxs-lookup"><span data-stu-id="beafd-102">The <xref:System.Drawing.BufferedGraphicsManager> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="beafd-103">ダブルバッファリングを使用するグラフィックスは、表示サーフェイスの再描画によって引き起こされるちらつきを軽減または除去できます。</span><span class="sxs-lookup"><span data-stu-id="beafd-103">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span>  
  
 <span data-ttu-id="beafd-104">このクラスには、<xref:System.Drawing.BufferedGraphicsManager.Current%2A>、現在のアプリケーションドメインのメイン <xref:System.Drawing.BufferedGraphicsContext> を返す静的プロパティが1つあります。</span><span class="sxs-lookup"><span data-stu-id="beafd-104">This class has one static property, <xref:System.Drawing.BufferedGraphicsManager.Current%2A>, which returns the main <xref:System.Drawing.BufferedGraphicsContext> for the current application domain.</span></span> <span data-ttu-id="beafd-105"><xref:System.Drawing.BufferedGraphicsContext> クラスは、バッファーされたグラフィックスを描画するために使用できる <xref:System.Drawing.BufferedGraphics> インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="beafd-105">The <xref:System.Drawing.BufferedGraphicsContext> class creates <xref:System.Drawing.BufferedGraphics> instances that can be used to draw buffered graphics.</span></span>  
  
 <span data-ttu-id="beafd-106"><xref:System.Drawing.BufferedGraphics> クラスにはパブリックコンストラクターがなく、<xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> メソッドを使用して、アプリケーションドメインの <xref:System.Drawing.BufferedGraphicsContext> オブジェクトによって作成される必要があります。</span><span class="sxs-lookup"><span data-stu-id="beafd-106">The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> object for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="beafd-107">"静的 <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType>" プロパティから、現在のアプリケーションドメインの <xref:System.Drawing.BufferedGraphicsContext> オブジェクトを取得できます。</span><span class="sxs-lookup"><span data-stu-id="beafd-107">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> object for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="beafd-108">ダブルバッファリングの詳細については、「ダブルバッファリングされた[グラフィックス](~/docs/framework/winforms/advanced/double-buffered-graphics.md)、<xref:System.Drawing.BufferedGraphics>、および <xref:System.Drawing.BufferedGraphicsContext>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="beafd-108">For more information on double buffering, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md), <xref:System.Drawing.BufferedGraphics>, and <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beafd-109">次のコード例は、現在のアプリケーションドメインの <xref:System.Drawing.BufferedGraphicsContext> を取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="beafd-109">The following code example demonstrates acquiring the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain.</span></span>  
  
 [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]
 [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]
 [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.BufferedGraphicsContext" />
    <altmember cref="T:System.Drawing.BufferedGraphics" />
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md"><span data-ttu-id="beafd-110">[&lt;topic://vbconDoubleBuffering&gt;]</span><span class="sxs-lookup"><span data-stu-id="beafd-110">[&lt;topic://vbconDoubleBuffering&gt;]</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Drawing.BufferedGraphicsContext Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.BufferedGraphicsContext Current" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphicsManager.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As BufferedGraphicsContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::BufferedGraphicsContext ^ Current { System::Drawing::BufferedGraphicsContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Drawing.BufferedGraphicsContext" Usage="System.Drawing.BufferedGraphicsManager.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphicsContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="beafd-111">現在のアプリケーション ドメインの <see cref="T:System.Drawing.BufferedGraphicsContext" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="beafd-111">Gets the <see cref="T:System.Drawing.BufferedGraphicsContext" /> for the current application domain.</span></span></summary>
        <value><span data-ttu-id="beafd-112">現在のアプリケーション ドメインに対する <see cref="T:System.Drawing.BufferedGraphicsContext" />。</span><span class="sxs-lookup"><span data-stu-id="beafd-112">The <see cref="T:System.Drawing.BufferedGraphicsContext" /> for the current application domain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="beafd-113">アプリケーション内では、<xref:System.Drawing.BufferedGraphicsManager.Current%2A> プロパティは常に同じ <xref:System.Drawing.BufferedGraphicsContext> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="beafd-113">Within an application the <xref:System.Drawing.BufferedGraphicsManager.Current%2A> property always returns the same <xref:System.Drawing.BufferedGraphicsContext> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="beafd-114">次のコード例は、現在のアプリケーションドメインの <xref:System.Drawing.BufferedGraphicsContext> を取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="beafd-114">The following code example demonstrates acquiring the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain.</span></span>  
  
 [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]
 [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]
 [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphicsContext" />
        <altmember cref="T:System.Drawing.BufferedGraphics" />
      </Docs>
    </Member>
  </Members>
</Type>
