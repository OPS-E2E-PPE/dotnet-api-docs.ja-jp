<Type Name="Graphics" FullName="System.Drawing.Graphics">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b5c1d3af0ff00acdee9e69d1e59dff50fe8fe80c" /><Meta Name="ms.sourcegitcommit" Value="8dc7427b3f8ede13c290b671feeb1dc33978e582" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/06/2020" /><Meta Name="ms.locfileid" Value="77039621" /></Metadata><TypeSignature Language="C#" Value="public sealed class Graphics : MarshalByRefObject, IDisposable, System.Drawing.IDeviceContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Graphics extends System.MarshalByRefObject implements class System.Drawing.IDeviceContext, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Graphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Graphics&#xA;Inherits MarshalByRefObject&#xA;Implements IDeviceContext, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Graphics sealed : MarshalByRefObject, IDisposable, System::Drawing::IDeviceContext" />
  <TypeSignature Language="F#" Value="type Graphics = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable&#xA;    interface IDeviceContext" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Drawing.IDeviceContext</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b889f-101">GDI+ 描画サーフェイスをカプセル化します。</span><span class="sxs-lookup"><span data-stu-id="b889f-101">Encapsulates a GDI+ drawing surface.</span></span> <span data-ttu-id="b889f-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="b889f-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-103"><xref:System.Drawing.Graphics> クラスには、オブジェクトをディスプレイデバイスに描画するためのメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="b889f-103">The <xref:System.Drawing.Graphics> class provides methods for drawing objects to the display device.</span></span> <span data-ttu-id="b889f-104"><xref:System.Drawing.Graphics> は、特定のデバイスコンテキストに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="b889f-104">A <xref:System.Drawing.Graphics> is associated with a specific device context.</span></span>  
  
 <span data-ttu-id="b889f-105"><xref:System.Drawing.Graphics> オブジェクトを取得するには、<xref:System.Windows.Forms.Control?displayProperty=nameWithType>から継承するオブジェクトで <xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=nameWithType> メソッドを呼び出すか、コントロールの <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> イベントを処理し、<xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> クラスの <xref:System.Windows.Forms.PaintEventArgs?displayProperty=nameWithType> プロパティにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="b889f-105">You can obtain a <xref:System.Drawing.Graphics> object by calling the <xref:System.Windows.Forms.Control.CreateGraphics%2A?displayProperty=nameWithType> method on an object that inherits from <xref:System.Windows.Forms.Control?displayProperty=nameWithType>, or by handling a control's <xref:System.Windows.Forms.Control.Paint?displayProperty=nameWithType> event and accessing the <xref:System.Windows.Forms.PaintEventArgs.Graphics%2A> property of the <xref:System.Windows.Forms.PaintEventArgs?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="b889f-106">また、<xref:System.Drawing.Graphics.FromImage%2A> メソッドを使用して、イメージから <xref:System.Drawing.Graphics> オブジェクトを作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="b889f-106">You can also create a <xref:System.Drawing.Graphics> object from an image by using the <xref:System.Drawing.Graphics.FromImage%2A> method.</span></span> <span data-ttu-id="b889f-107"><xref:System.Drawing.Graphics> オブジェクトの作成の詳細については、「[方法: 描画用のグラフィックスオブジェクトを作成する](~/docs/framework/winforms/advanced/how-to-create-graphics-objects-for-drawing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-107">For more information about creating a <xref:System.Drawing.Graphics> object, see [How to: Create Graphics Objects for Drawing](~/docs/framework/winforms/advanced/how-to-create-graphics-objects-for-drawing.md).</span></span>  
  
 <span data-ttu-id="b889f-108"><xref:System.Drawing.Graphics> オブジェクトを使用して、さまざまな図形や線を描画できます。</span><span class="sxs-lookup"><span data-stu-id="b889f-108">You can draw many different shapes and lines by using a <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="b889f-109">線と形状を描画する方法の詳細については、描画する線または形状の特定の `Draw`*Graphの要素*メソッドを参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-109">For more information about how to draw lines and shapes, see the specific `Draw`*GraphicalElement* method for the line or shape you want to draw.</span></span> <span data-ttu-id="b889f-110">これらのメソッドには、<xref:System.Drawing.Graphics.DrawLine%2A>、<xref:System.Drawing.Graphics.DrawArc%2A>、<xref:System.Drawing.Graphics.DrawClosedCurve%2A>、<xref:System.Drawing.Graphics.DrawPolygon%2A>、<xref:System.Drawing.Graphics.DrawRectangle%2A>が含まれます。</span><span class="sxs-lookup"><span data-stu-id="b889f-110">These methods include <xref:System.Drawing.Graphics.DrawLine%2A>, <xref:System.Drawing.Graphics.DrawArc%2A>, <xref:System.Drawing.Graphics.DrawClosedCurve%2A>, <xref:System.Drawing.Graphics.DrawPolygon%2A>, and <xref:System.Drawing.Graphics.DrawRectangle%2A>.</span></span> <span data-ttu-id="b889f-111">直線と形状を描画する方法の詳細については、「[ペンを使用した直線と図形の描画](~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md)」と「ブラシを使用し[た図形の塗りつぶし](~/docs/framework/winforms/advanced/using-a-brush-to-fill-shapes.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-111">For more information about how to draw lines and shapes, see [Using a Pen to Draw Lines and Shapes](~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md) and [Using a Brush to Fill Shapes](~/docs/framework/winforms/advanced/using-a-brush-to-fill-shapes.md).</span></span>  
  
 <span data-ttu-id="b889f-112">また、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドと <xref:System.Drawing.Graphics.DrawIcon%2A> メソッドを使用して、イメージやアイコンを描画することもできます。</span><span class="sxs-lookup"><span data-stu-id="b889f-112">You can also draw images and icons by using the <xref:System.Drawing.Graphics.DrawImage%2A> and <xref:System.Drawing.Graphics.DrawIcon%2A> methods, respectively.</span></span> <span data-ttu-id="b889f-113">画面から <xref:System.Drawing.Graphics> オブジェクトの描画サーフェイスまでのカラーデータのビットブロック転送を実行するには、「<xref:System.Drawing.Graphics.CopyFromScreen%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-113">To perform a bit-block transfer of color data from the screen to the drawing surface of the <xref:System.Drawing.Graphics> object, see <xref:System.Drawing.Graphics.CopyFromScreen%2A>.</span></span> <span data-ttu-id="b889f-114"><xref:System.Drawing.Graphics> オブジェクトを使用してイメージを描画する方法の詳細については、「[イメージ、ビットマップ、アイコン、およびメタファイルの操作](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-114">For more information about how to draw images with a <xref:System.Drawing.Graphics> object, see [Working with Images, Bitmaps, Icons, and Metafiles](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md).</span></span>  
  
 <span data-ttu-id="b889f-115">さらに、<xref:System.Drawing.Graphics> オブジェクトによって使用される座標系を操作できます。</span><span class="sxs-lookup"><span data-stu-id="b889f-115">In addition, you can manipulate the coordinate system used by the <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="b889f-116">座標系とその操作方法の詳細については、「[座標系と変換](~/docs/framework/winforms/advanced/coordinate-systems-and-transformations.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-116">For more information on the coordinate system and how to manipulate it, see [Coordinate Systems and Transformations](~/docs/framework/winforms/advanced/coordinate-systems-and-transformations.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-117">次のコード例は、Windows フォームで使用するように設計されており、<xref:System.Windows.Forms.PaintEventArgs> オブジェクトが必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-117">The following code example is designed for use with Windows Forms and requires a <xref:System.Windows.Forms.PaintEventArgs> object.</span></span> <span data-ttu-id="b889f-118"><xref:System.Windows.Forms.PaintEventArgs> オブジェクトの名前は `e` で、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="b889f-118">The <xref:System.Windows.Forms.PaintEventArgs> object is named `e` and is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-119">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-119">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-120">JPEG ファイルからイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-120">Creates an image from a JPEG file.</span></span> <span data-ttu-id="b889f-121">このファイルは SampImag という名前で、この例のフォルダーにあります。</span><span class="sxs-lookup"><span data-stu-id="b889f-121">The file is named SampImag.jpg and is located in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-122">イメージの左上隅を描画するポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-122">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="b889f-123"><xref:System.Drawing.Graphics> オブジェクトを使用して、スケールされていないイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-123">Draws the unscaled image to the screen by using a <xref:System.Drawing.Graphics> object.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#40)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#40)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#40)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/winforms/advanced/how-to-create-graphics-objects-for-drawing.md"><span data-ttu-id="b889f-124">方法 : 描画する Graphics オブジェクトを作成する</span><span class="sxs-lookup"><span data-stu-id="b889f-124">How to: Create Graphics Objects for Drawing</span></span></related>
    <related type="Article" href="~/docs/framework/winforms/advanced/getting-started-with-graphics-programming.md"><span data-ttu-id="b889f-125">グラフィックス プログラミングについて</span><span class="sxs-lookup"><span data-stu-id="b889f-125">Getting Started with Graphics Programming</span></span></related>
    <related type="Article" href="~/docs/framework/winforms/advanced/managing-the-state-of-a-graphics-object.md"><span data-ttu-id="b889f-126">Graphics オブジェクトの状態の管理</span><span class="sxs-lookup"><span data-stu-id="b889f-126">Managing the State of a Graphics Object</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddMetafileComment">
      <MemberSignature Language="C#" Value="public void AddMetafileComment (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMetafileComment(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.AddMetafileComment(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddMetafileComment (data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddMetafileComment(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.AddMetafileComment : byte[] -&gt; unit" Usage="graphics.AddMetafileComment data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="b889f-127">コメントが含まれているバイトの配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-127">Array of bytes that contains the comment.</span></span></param>
        <summary><span data-ttu-id="b889f-128">現在の <see cref="T:System.Drawing.Imaging.Metafile" /> にコメントを追加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-128">Adds a comment to the current <see cref="T:System.Drawing.Imaging.Metafile" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-129">このメソッドは、この <xref:System.Drawing.Graphics> が <xref:System.Drawing.Imaging.Metafile>に関連付けられている場合にのみ有効です。</span><span class="sxs-lookup"><span data-stu-id="b889f-129">This method is valid only if this <xref:System.Drawing.Graphics> is associated with a <xref:System.Drawing.Imaging.Metafile>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-130">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターであり、`thisForm`の例の <xref:System.Windows.Forms.Form> である <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-130">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example.</span></span> <span data-ttu-id="b889f-131">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-131">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-132">メタファイルを作成し、そのデバイスコンテキストをハンドルする `hdc`を取得するための一時 <xref:System.Drawing.Graphics> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-132">Creates a temporary <xref:System.Drawing.Graphics> for creating the metafile and gets an `hdc`, a handle to its device context.</span></span>  
  
-   <span data-ttu-id="b889f-133">`hdc`を使用して新しいメタファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-133">Creates a new metafile using the `hdc`.</span></span>  
  
-   <span data-ttu-id="b889f-134"><xref:System.Drawing.Imaging.Metafile>からメタファイルを表示するための <xref:System.Drawing.Graphics> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-134">Creates a <xref:System.Drawing.Graphics> for display of the metafile from the <xref:System.Drawing.Imaging.Metafile>.</span></span>  
  
-   <span data-ttu-id="b889f-135">メタファイルに四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-135">Draws a rectangle to the metafile.</span></span>  
  
-   <span data-ttu-id="b889f-136">メタファイルにコメントを追加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-136">Adds a comment to the metafile.</span></span>  
  
-   <span data-ttu-id="b889f-137">メタファイルを閉じるメタファイルの <xref:System.Drawing.Graphics> を破棄します。</span><span class="sxs-lookup"><span data-stu-id="b889f-137">Disposes the <xref:System.Drawing.Graphics> for the metafile-which closes the metafile.</span></span>  
  
-   <span data-ttu-id="b889f-138">メタファイルを破棄します。</span><span class="sxs-lookup"><span data-stu-id="b889f-138">Disposes the metafile.</span></span>  
  
-   <span data-ttu-id="b889f-139">一時 `hdc`を解放します。</span><span class="sxs-lookup"><span data-stu-id="b889f-139">Releases the temporary `hdc`.</span></span>  
  
-   <span data-ttu-id="b889f-140">一時 <xref:System.Drawing.Graphics>を破棄します。</span><span class="sxs-lookup"><span data-stu-id="b889f-140">Disposes the temporary <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="b889f-141">以前に作成したファイルから2番目のメタファイルを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-141">Creates a second metafile from the previously created file.</span></span>  
  
-   <span data-ttu-id="b889f-142">メタファイルを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-142">Draws the metafile to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-143">メタファイルを破棄します。</span><span class="sxs-lookup"><span data-stu-id="b889f-143">Disposes the metafile.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginContainer">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-144">この <see cref="T:System.Drawing.Graphics" /> の現在の状態でグラフィックス コンテナーを保存し、新しいグラフィックス コンテナーを開いて使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-144">Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginContainer">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.GraphicsContainer BeginContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.GraphicsContainer BeginContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.BeginContainer" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginContainer () As GraphicsContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::GraphicsContainer ^ BeginContainer();" />
      <MemberSignature Language="F#" Value="member this.BeginContainer : unit -&gt; System.Drawing.Drawing2D.GraphicsContainer" Usage="graphics.BeginContainer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.GraphicsContainer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b889f-145">この <see cref="T:System.Drawing.Graphics" /> の現在の状態でグラフィックス コンテナーを保存し、新しいグラフィックス コンテナーを開いて使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-145">Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container.</span></span></summary>
        <returns><span data-ttu-id="b889f-146">このメソッドは、メソッドが呼び出された時点での <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> の状態を表す <see cref="T:System.Drawing.Graphics" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-146">This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the state of this <see cref="T:System.Drawing.Graphics" /> at the time of the method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-147">このメソッドを <xref:System.Drawing.Graphics.EndContainer%2A> メソッドと共に使用して、入れ子になったグラフィックスコンテナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-147">Use this method with the <xref:System.Drawing.Graphics.EndContainer%2A> method to create nested graphics containers.</span></span> <span data-ttu-id="b889f-148">グラフィックスコンテナーは、変換、クリッピング領域、レンダリングプロパティなどのグラフィックスの状態を保持します。</span><span class="sxs-lookup"><span data-stu-id="b889f-148">Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</span></span>  
  
 <span data-ttu-id="b889f-149"><xref:System.Drawing.Graphics>の <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics> の状態を保持する情報ブロックがスタックに配置されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-149">When you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="b889f-150"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドは、その情報ブロックを識別する <xref:System.Drawing.Drawing2D.GraphicsContainer> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-150">The <xref:System.Drawing.Graphics.BeginContainer%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsContainer> that identifies that information block.</span></span> <span data-ttu-id="b889f-151">識別オブジェクトを <xref:System.Drawing.Graphics.EndContainer%2A> メソッドに渡すと、情報ブロックがスタックから削除され、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出し時の状態に <xref:System.Drawing.Graphics> を復元するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-151">When you pass the identifying object to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="b889f-152">コンテナーは入れ子にすることができます。つまり、<xref:System.Drawing.Graphics.EndContainer%2A> メソッドを呼び出す前に、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-152">Containers can be nested; that is, you can call the <xref:System.Drawing.Graphics.BeginContainer%2A> method several times before you call the <xref:System.Drawing.Graphics.EndContainer%2A> method.</span></span> <span data-ttu-id="b889f-153"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを呼び出すたびに、情報ブロックがスタックに配置され、情報ブロックの <xref:System.Drawing.Drawing2D.GraphicsContainer> を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="b889f-153">Each time you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsContainer> for the information block.</span></span> <span data-ttu-id="b889f-154">これらのオブジェクトのいずれかを <xref:System.Drawing.Graphics.EndContainer%2A> メソッドに渡すと、その <xref:System.Drawing.Graphics> は、その特定の <xref:System.Drawing.Drawing2D.GraphicsContainer>を返した <xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出し時の状態に戻ります。</span><span class="sxs-lookup"><span data-stu-id="b889f-154">When you pass one of those objects to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span></span> <span data-ttu-id="b889f-155"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しによってスタックに配置された情報ブロックがスタックから削除され、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しの後にそのスタックに配置されたすべての情報ブロックも削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-155">The information block placed on the stack by that <xref:System.Drawing.Graphics.BeginContainer%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.BeginContainer%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="b889f-156"><xref:System.Drawing.Graphics.Save%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドの呼び出しと同じスタックに情報ブロックが配置されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-156">Calls to the <xref:System.Drawing.Graphics.Save%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method.</span></span> <span data-ttu-id="b889f-157"><xref:System.Drawing.Graphics.EndContainer%2A> メソッド呼び出しが <xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しとペアになっているのと同様に、<xref:System.Drawing.Graphics.Restore%2A> メソッド呼び出しは <xref:System.Drawing.Graphics.Save%2A> メソッド呼び出しとペアになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-157">Just as an <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call, a <xref:System.Drawing.Graphics.Restore%2A> method call is paired with a <xref:System.Drawing.Graphics.Save%2A> method call.</span></span>  
  
 <span data-ttu-id="b889f-158"><xref:System.Drawing.Graphics.EndContainer%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドへの対応する呼び出しがスタックから削除された後に、(<xref:System.Drawing.Graphics.Save%2A> メソッドまたは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって) スタックに配置されたすべての情報ブロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-158">When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span> <span data-ttu-id="b889f-159">同様に、<xref:System.Drawing.Graphics.Restore%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.Save%2A> メソッドへの対応する呼び出しがスタックから削除された後に、(<xref:System.Drawing.Graphics.Save%2A> メソッドまたは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって) スタックに配置されたすべての情報ブロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-159">Likewise, when you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span>  
  
 <span data-ttu-id="b889f-160"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって確立されるグラフィックスの状態には、既定のグラフィックスの状態の表示品質が含まれます。メソッドの呼び出し時に既存のレンダリング品質の状態が変化した場合は、既定値にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-160">The graphics state established by the <xref:System.Drawing.Graphics.BeginContainer%2A> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-161">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-161">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-162">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-162">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-163">新しいグラフィックスコンテナーを開き、古いコンテナーを保存します。</span><span class="sxs-lookup"><span data-stu-id="b889f-163">Opens a new graphics container and saves the old container.</span></span>  
  
-   <span data-ttu-id="b889f-164">コンテナー内のワールド座標を変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-164">Translates the world coordinates in the container.</span></span>  
  
-   <span data-ttu-id="b889f-165">新しいコンテナーの (平行移動された座標) の赤い四角形に塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-165">Fills a red rectangle in the (translated coordinates of the) new container.</span></span>  
  
-   <span data-ttu-id="b889f-166">新しいコンテナーを閉じ、保存されたコンテナーを復元します。</span><span class="sxs-lookup"><span data-stu-id="b889f-166">Closes the new container and restores the saved container.</span></span>  
  
-   <span data-ttu-id="b889f-167">保存されたコンテナーの緑の四角形 (平行変換されていない座標) に塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-167">Fills a green rectangle (to the untranslated coordinates) of the saved container.</span></span>  
  
 <span data-ttu-id="b889f-168">結果は、同じサイズの赤い四角形を overlies する緑色の四角形です。</span><span class="sxs-lookup"><span data-stu-id="b889f-168">The result is a green rectangle that overlies a red rectangle of the same size.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginContainer">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.Rectangle dstrect, System.Drawing.Rectangle srcrect, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.GraphicsContainer BeginContainer(valuetype System.Drawing.Rectangle dstrect, valuetype System.Drawing.Rectangle srcrect, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginContainer (dstrect As Rectangle, srcrect As Rectangle, unit As GraphicsUnit) As GraphicsContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::GraphicsContainer ^ BeginContainer(System::Drawing::Rectangle dstrect, System::Drawing::Rectangle srcrect, System::Drawing::GraphicsUnit unit);" />
      <MemberSignature Language="F#" Value="member this.BeginContainer : System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit -&gt; System.Drawing.Drawing2D.GraphicsContainer" Usage="graphics.BeginContainer (dstrect, srcrect, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.GraphicsContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dstrect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcrect" Type="System.Drawing.Rectangle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="dstrect"><span data-ttu-id="b889f-169"><see cref="T:System.Drawing.Rectangle" /> パラメーターと共にコンテナーのスケール変換を指定する <paramref name="srcrect" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-169"><see cref="T:System.Drawing.Rectangle" /> structure that, together with the <paramref name="srcrect" /> parameter, specifies a scale transformation for the container.</span></span></param>
        <param name="srcrect"><span data-ttu-id="b889f-170"><see cref="T:System.Drawing.Rectangle" /> パラメーターと共にコンテナーのスケール変換を指定する <paramref name="dstrect" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-170"><see cref="T:System.Drawing.Rectangle" /> structure that, together with the <paramref name="dstrect" /> parameter, specifies a scale transformation for the container.</span></span></param>
        <param name="unit"><span data-ttu-id="b889f-171">コンテナーの長さの単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-171">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure for the container.</span></span></param>
        <summary><span data-ttu-id="b889f-172">この <see cref="T:System.Drawing.Graphics" /> の現在の状態でグラフィックス コンテナーを保存し、指定したスケール変換を行った新しいグラフィックス コンテナーを開いて使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-172">Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container with the specified scale transformation.</span></span></summary>
        <returns><span data-ttu-id="b889f-173">このメソッドは、メソッドが呼び出された時点での <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> の状態を表す <see cref="T:System.Drawing.Graphics" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-173">This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the state of this <see cref="T:System.Drawing.Graphics" /> at the time of the method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-174">このメソッドを <xref:System.Drawing.Graphics.EndContainer%2A> メソッドと共に使用して、入れ子になったグラフィックスコンテナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-174">Use this method with the <xref:System.Drawing.Graphics.EndContainer%2A> method to create nested graphics containers.</span></span> <span data-ttu-id="b889f-175">グラフィックスコンテナーは、変換、クリッピング領域、レンダリングプロパティなどのグラフィックスの状態を保持します。</span><span class="sxs-lookup"><span data-stu-id="b889f-175">Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</span></span>  
  
 <span data-ttu-id="b889f-176"><xref:System.Drawing.Graphics>の <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics> の状態を保持する情報ブロックがスタックに配置されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-176">When you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="b889f-177"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドは、その情報ブロックを識別する <xref:System.Drawing.Drawing2D.GraphicsContainer> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-177">The <xref:System.Drawing.Graphics.BeginContainer%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsContainer> that identifies that information block.</span></span> <span data-ttu-id="b889f-178">識別オブジェクトを <xref:System.Drawing.Graphics.EndContainer%2A> メソッドに渡すと、情報ブロックがスタックから削除され、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出し時の状態に <xref:System.Drawing.Graphics> を復元するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-178">When you pass the identifying object to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="b889f-179">コンテナーは入れ子にすることができます。つまり、<xref:System.Drawing.Graphics.EndContainer%2A> メソッドを呼び出す前に、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-179">Containers can be nested; that is, you can call the <xref:System.Drawing.Graphics.BeginContainer%2A> method several times before you call the <xref:System.Drawing.Graphics.EndContainer%2A> method.</span></span> <span data-ttu-id="b889f-180"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを呼び出すたびに、情報ブロックがスタックに配置され、情報ブロックの <xref:System.Drawing.Drawing2D.GraphicsContainer> を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="b889f-180">Each time you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsContainer> for the information block.</span></span> <span data-ttu-id="b889f-181">これらのオブジェクトのいずれかを <xref:System.Drawing.Graphics.EndContainer%2A> メソッドに渡すと、その <xref:System.Drawing.Graphics> は、その特定の <xref:System.Drawing.Drawing2D.GraphicsContainer>を返した <xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出し時の状態に戻ります。</span><span class="sxs-lookup"><span data-stu-id="b889f-181">When you pass one of those objects to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span></span> <span data-ttu-id="b889f-182"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しによってスタックに配置された情報ブロックがスタックから削除され、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しの後にそのスタックに配置されたすべての情報ブロックも削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-182">The information block placed on the stack by that <xref:System.Drawing.Graphics.BeginContainer%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.BeginContainer%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="b889f-183"><xref:System.Drawing.Graphics.Save%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドの呼び出しと同じスタックに情報ブロックが配置されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-183">Calls to the <xref:System.Drawing.Graphics.Save%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method.</span></span> <span data-ttu-id="b889f-184"><xref:System.Drawing.Graphics.EndContainer%2A> メソッド呼び出しが <xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しとペアになっているのと同様に、<xref:System.Drawing.Graphics.Restore%2A> メソッド呼び出しは <xref:System.Drawing.Graphics.Save%2A> メソッド呼び出しとペアになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-184">Just as an <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call, a <xref:System.Drawing.Graphics.Restore%2A> method call is paired with a <xref:System.Drawing.Graphics.Save%2A> method call.</span></span>  
  
 <span data-ttu-id="b889f-185"><xref:System.Drawing.Graphics.EndContainer%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドへの対応する呼び出しがスタックから削除された後に、(<xref:System.Drawing.Graphics.Save%2A> メソッドまたは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって) スタックに配置されたすべての情報ブロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-185">When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span> <span data-ttu-id="b889f-186">同様に、<xref:System.Drawing.Graphics.Restore%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.Save%2A> メソッドへの対応する呼び出しがスタックから削除された後に、(<xref:System.Drawing.Graphics.Save%2A> メソッドまたは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって) スタックに配置されたすべての情報ブロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-186">Likewise, when you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span>  
  
 <span data-ttu-id="b889f-187">このメソッドは、`dstrect` および `srcrect` パラメーターを使用して、新しいグラフィックスコンテナーのスケール変換を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-187">This method specifies a scale transformation for the new graphics container with the `dstrect` and `srcrect` parameters.</span></span> <span data-ttu-id="b889f-188">小数点以下桁数は変換に相当し、`srcrect`に適用すると `dstrect`になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-188">The scale is equal to the transformation that, when applied to `srcrect`, results in `dstrect`.</span></span>  
  
 <span data-ttu-id="b889f-189"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって確立されるグラフィックスの状態には、既定のグラフィックスの状態の表示品質が含まれます。メソッドの呼び出し時に既存のレンダリング品質の状態が変化した場合は、既定値にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-189">The graphics state established by the <xref:System.Drawing.Graphics.BeginContainer%2A> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-190">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-190">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-191">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-191">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-192">新しいコンテナーのスケール変換を指定する2つの四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-192">Creates two rectangles to specify a scale transformation for the new container.</span></span>  
  
-   <span data-ttu-id="b889f-193">新しいグラフィックスコンテナーを開き、古いコンテナーを保存します。</span><span class="sxs-lookup"><span data-stu-id="b889f-193">Opens the new graphics container and saves the old container.</span></span>  
  
-   <span data-ttu-id="b889f-194">新しいコンテナーの (スケールされた座標) の赤い四角形に塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-194">Fills a red rectangle in the (scaled coordinates of the) new container.</span></span>  
  
-   <span data-ttu-id="b889f-195">新しいコンテナーを閉じ、保存されたコンテナーを復元します。</span><span class="sxs-lookup"><span data-stu-id="b889f-195">Closes the new container and restores the saved container.</span></span>  
  
-   <span data-ttu-id="b889f-196">保存されたコンテナーの緑の四角形 (スケールなしの座標) に塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-196">Fills a green rectangle (to the unscaled coordinates) of the saved container.</span></span>  
  
 <span data-ttu-id="b889f-197">結果は、小さな赤い四角形を overlies 緑色の四角形になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-197">The result is a green rectangle that overlies a smaller red rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginContainer">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.GraphicsContainer BeginContainer (System.Drawing.RectangleF dstrect, System.Drawing.RectangleF srcrect, System.Drawing.GraphicsUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.GraphicsContainer BeginContainer(valuetype System.Drawing.RectangleF dstrect, valuetype System.Drawing.RectangleF srcrect, valuetype System.Drawing.GraphicsUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginContainer (dstrect As RectangleF, srcrect As RectangleF, unit As GraphicsUnit) As GraphicsContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::GraphicsContainer ^ BeginContainer(System::Drawing::RectangleF dstrect, System::Drawing::RectangleF srcrect, System::Drawing::GraphicsUnit unit);" />
      <MemberSignature Language="F#" Value="member this.BeginContainer : System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit -&gt; System.Drawing.Drawing2D.GraphicsContainer" Usage="graphics.BeginContainer (dstrect, srcrect, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.GraphicsContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dstrect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcrect" Type="System.Drawing.RectangleF" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="dstrect"><span data-ttu-id="b889f-198"><see cref="T:System.Drawing.RectangleF" /> パラメーターと共に新しいグラフィックス コンテナーのスケール変換を指定する <paramref name="srcrect" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-198"><see cref="T:System.Drawing.RectangleF" /> structure that, together with the <paramref name="srcrect" /> parameter, specifies a scale transformation for the new graphics container.</span></span></param>
        <param name="srcrect"><span data-ttu-id="b889f-199"><see cref="T:System.Drawing.RectangleF" /> パラメーターと共に新しいグラフィックス コンテナーのスケール変換を指定する <paramref name="dstrect" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-199"><see cref="T:System.Drawing.RectangleF" /> structure that, together with the <paramref name="dstrect" /> parameter, specifies a scale transformation for the new graphics container.</span></span></param>
        <param name="unit"><span data-ttu-id="b889f-200">コンテナーの長さの単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-200">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure for the container.</span></span></param>
        <summary><span data-ttu-id="b889f-201">この <see cref="T:System.Drawing.Graphics" /> の現在の状態でグラフィックス コンテナーを保存し、指定したスケール変換を行った新しいグラフィックス コンテナーを開いて使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-201">Saves a graphics container with the current state of this <see cref="T:System.Drawing.Graphics" /> and opens and uses a new graphics container with the specified scale transformation.</span></span></summary>
        <returns><span data-ttu-id="b889f-202">このメソッドは、メソッドが呼び出された時点での <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> の状態を表す <see cref="T:System.Drawing.Graphics" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-202">This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the state of this <see cref="T:System.Drawing.Graphics" /> at the time of the method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-203">このメソッドを <xref:System.Drawing.Graphics.EndContainer%2A> メソッドと共に使用して、入れ子になったグラフィックスコンテナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-203">Use this method with the <xref:System.Drawing.Graphics.EndContainer%2A> method to create nested graphics containers.</span></span> <span data-ttu-id="b889f-204">グラフィックスコンテナーは、変換、クリッピング領域、レンダリングプロパティなどのグラフィックスの状態を保持します。</span><span class="sxs-lookup"><span data-stu-id="b889f-204">Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</span></span>  
  
 <span data-ttu-id="b889f-205"><xref:System.Drawing.Graphics>の <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics> の状態を保持する情報ブロックがスタックに配置されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-205">When you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="b889f-206"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドは、その情報ブロックを識別する <xref:System.Drawing.Drawing2D.GraphicsContainer> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-206">The <xref:System.Drawing.Graphics.BeginContainer%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsContainer> that identifies that information block.</span></span> <span data-ttu-id="b889f-207">識別オブジェクトを <xref:System.Drawing.Graphics.EndContainer%2A> メソッドに渡すと、情報ブロックがスタックから削除され、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出し時の状態に <xref:System.Drawing.Graphics> を復元するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-207">When you pass the identifying object to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="b889f-208">コンテナーは入れ子にすることができます。つまり、<xref:System.Drawing.Graphics.EndContainer%2A> メソッドを呼び出す前に、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-208">Containers can be nested; that is, you can call the <xref:System.Drawing.Graphics.BeginContainer%2A> method several times before you call the <xref:System.Drawing.Graphics.EndContainer%2A> method.</span></span> <span data-ttu-id="b889f-209"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを呼び出すたびに、情報ブロックがスタックに配置され、情報ブロックの <xref:System.Drawing.Drawing2D.GraphicsContainer> を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="b889f-209">Each time you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsContainer> for the information block.</span></span> <span data-ttu-id="b889f-210">これらのオブジェクトのいずれかを <xref:System.Drawing.Graphics.EndContainer%2A> メソッドに渡すと、その <xref:System.Drawing.Graphics> は、その特定の <xref:System.Drawing.Drawing2D.GraphicsContainer>を返した <xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出し時の状態に戻ります。</span><span class="sxs-lookup"><span data-stu-id="b889f-210">When you pass one of those objects to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span></span> <span data-ttu-id="b889f-211"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しによってスタックに配置された情報ブロックがスタックから削除され、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しの後にそのスタックに配置されたすべての情報ブロックも削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-211">The information block placed on the stack by that <xref:System.Drawing.Graphics.BeginContainer%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.BeginContainer%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="b889f-212"><xref:System.Drawing.Graphics.Save%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドの呼び出しと同じスタックに情報ブロックが配置されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-212">Calls to the <xref:System.Drawing.Graphics.Save%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method.</span></span> <span data-ttu-id="b889f-213"><xref:System.Drawing.Graphics.EndContainer%2A> メソッド呼び出しが <xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しとペアになっているのと同様に、<xref:System.Drawing.Graphics.Restore%2A> メソッド呼び出しは <xref:System.Drawing.Graphics.Save%2A> メソッド呼び出しとペアになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-213">Just as an <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call, a <xref:System.Drawing.Graphics.Restore%2A> method call is paired with a <xref:System.Drawing.Graphics.Save%2A> method call.</span></span>  
  
 <span data-ttu-id="b889f-214"><xref:System.Drawing.Graphics.EndContainer%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドへの対応する呼び出しがスタックから削除された後に、(`Save` メソッドまたは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって) スタックに配置されたすべての情報ブロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-214">When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the `Save` method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span> <span data-ttu-id="b889f-215">同様に、<xref:System.Drawing.Graphics.Restore%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.Save%2A> メソッドへの対応する呼び出しがスタックから削除された後に、(<xref:System.Drawing.Graphics.Save%2A> メソッドまたは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって) スタックに配置されたすべての情報ブロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-215">Likewise, when you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span>  
  
 <span data-ttu-id="b889f-216">このメソッドは、`dstrect` および `srcrect` パラメーターを使用して、新しいグラフィックスコンテナーのスケール変換を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-216">This method specifies a scale transformation for the new graphics container with the `dstrect` and `srcrect` parameters.</span></span> <span data-ttu-id="b889f-217">小数点以下桁数は変換に相当し、`srcrect`に適用すると `dstrect`になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-217">The scale is equal to the transformation that, when applied to `srcrect`, results in `dstrect`.</span></span>  
  
 <span data-ttu-id="b889f-218"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって確立されるグラフィックスの状態には、既定のグラフィックスの状態の表示品質が含まれます。メソッドの呼び出し時に既存のレンダリング品質の状態が変化した場合は、既定値にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-218">The graphics state established by the <xref:System.Drawing.Graphics.BeginContainer%2A> method includes the rendering qualities of the default graphics state; any rendering-quality state changes existing when the method is called are reset to the default values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-219">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-219">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-220">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-220">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-221">新しいコンテナーのスケール変換を指定する2つの四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-221">Creates two rectangles to specify a scale transformation for the new container.</span></span>  
  
-   <span data-ttu-id="b889f-222">新しいグラフィックスコンテナーを開き、古いコンテナーを保存します。</span><span class="sxs-lookup"><span data-stu-id="b889f-222">Opens the new graphics container and saves the old container.</span></span>  
  
-   <span data-ttu-id="b889f-223">新しいコンテナーの (スケールされた座標) の赤い四角形に塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-223">Fills a red rectangle in the (scaled coordinates of the) new container.</span></span>  
  
-   <span data-ttu-id="b889f-224">新しいコンテナーを閉じ、保存されたコンテナーを復元します。</span><span class="sxs-lookup"><span data-stu-id="b889f-224">Closes the new container and restores the saved container.</span></span>  
  
-   <span data-ttu-id="b889f-225">保存されたコンテナーの緑の四角形 (スケールなしの座標) に塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-225">Fills a green rectangle (to the unscaled coordinates) of the saved container.</span></span>  
  
 <span data-ttu-id="b889f-226">結果は、小さな赤い四角形を overlies 緑色の四角形になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-226">The result is a green rectangle that overlies a smaller red rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear(valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Clear(System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear(System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.Clear : System.Drawing.Color -&gt; unit" Usage="graphics.Clear color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color"><span data-ttu-id="b889f-227">描画サーフェイスの背景色を表す <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-227"><see cref="T:System.Drawing.Color" /> structure that represents the background color of the drawing surface.</span></span></param>
        <summary><span data-ttu-id="b889f-228">描画サーフェイス全体を消去し、指定した背景色で塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-228">Clears the entire drawing surface and fills it with the specified background color.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-229"><xref:System.Drawing.Graphics.Clear%2A> メソッドは、グラフィックスオブジェクトの状態をクリアします。グラフィックスオブジェクトを更新できない場合には呼び出さないでください。</span><span class="sxs-lookup"><span data-stu-id="b889f-229">The <xref:System.Drawing.Graphics.Clear%2A> method clears the state of the graphics object and should not be called when the graphics object cannot be updated.</span></span> <span data-ttu-id="b889f-230">たとえば、ターミナルサーバーセッションのセキュリティで保護されたデスクトップで <xref:System.Drawing.Graphics.Clear%2A> メソッドが呼び出されると、<xref:System.Runtime.InteropServices.ExternalException> が発生し、<xref:System.Drawing.Graphics> オブジェクトが不整合な状態のままになることがあります。</span><span class="sxs-lookup"><span data-stu-id="b889f-230">For example, if the <xref:System.Drawing.Graphics.Clear%2A> method is called on a secure desktop in a terminal server session, an <xref:System.Runtime.InteropServices.ExternalException> may occur, leaving the <xref:System.Drawing.Graphics> object in an inconsistent state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-231">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-231">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-232">このコードにより、<xref:System.Drawing.Graphics> の描画サーフェイスがクリアされ、背景色がシステム定義の青緑の色に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-232">The code clears the drawing surface of the <xref:System.Drawing.Graphics> and sets the background color to the system-defined teal color.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public System.Drawing.Region Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Region Clip" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Property Clip As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Region ^ Clip { System::Drawing::Region ^ get(); void set(System::Drawing::Region ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Clip : System.Drawing.Region with get, set" Usage="System.Drawing.Graphics.Clip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-233">この <see cref="T:System.Drawing.Region" /> の描画領域を限定する <see cref="T:System.Drawing.Graphics" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-233">Gets or sets a <see cref="T:System.Drawing.Region" /> that limits the drawing region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-234">この <see cref="T:System.Drawing.Region" /> のうち、現在描画に使用できる部分を限定する <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-234">A <see cref="T:System.Drawing.Region" /> that limits the portion of this <see cref="T:System.Drawing.Graphics" /> that is currently available for drawing.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-235"><xref:System.Drawing.Graphics.Clip%2A> プロパティによって返される <xref:System.Drawing.Region> オブジェクトを変更しても、<xref:System.Drawing.Graphics> オブジェクトを使用した後続の描画には影響しません。</span><span class="sxs-lookup"><span data-stu-id="b889f-235">Modifying the <xref:System.Drawing.Region> object returned by the <xref:System.Drawing.Graphics.Clip%2A> property does not affect subsequent drawing with the <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="b889f-236">クリップ領域を変更するには、<xref:System.Drawing.Graphics.Clip%2A> プロパティの値を新しい <xref:System.Drawing.Region> オブジェクトに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="b889f-236">To change the clip region, replace the <xref:System.Drawing.Graphics.Clip%2A> property value with a new <xref:System.Drawing.Region> object.</span></span> <span data-ttu-id="b889f-237">クリッピング領域が無限であるかどうかを判断するには、<xref:System.Drawing.Graphics.Clip%2A> プロパティを取得し、その <xref:System.Drawing.Region.IsInfinite%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b889f-237">To determine whether the clipping region is infinite, retrieve the <xref:System.Drawing.Graphics.Clip%2A> property and call its <xref:System.Drawing.Region.IsInfinite%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-238">次のコード例は、<xref:System.Drawing.Graphics.Clip%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b889f-238">The following code example demonstrates the use of the <xref:System.Drawing.Graphics.Clip%2A> property.</span></span> <span data-ttu-id="b889f-239">この例は、Windows フォームと共に使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b889f-239">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="b889f-240">フォームにコードを貼り付けて、フォームの <xref:System.Windows.Forms.Control.Paint> イベントを処理するときに `SetAndFillClip` メソッドを呼び出し、`e` を <xref:System.Windows.Forms.PaintEventArgs>として渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-240">Paste the code into a form and call the `SetAndFillClip` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.GraphicsProperties#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#4)]
 [!code-vb[System.Drawing.GraphicsProperties#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF ClipBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF ClipBounds" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.ClipBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClipBounds As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF ClipBounds { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.ClipBounds : System.Drawing.RectangleF" Usage="System.Drawing.Graphics.ClipBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-241">この <see cref="T:System.Drawing.RectangleF" /> オブジェクトのクリッピング領域に外接する <see cref="T:System.Drawing.Graphics" /> 構造体を取得します。</span><span class="sxs-lookup"><span data-stu-id="b889f-241">Gets a <see cref="T:System.Drawing.RectangleF" /> structure that bounds the clipping region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-242">この <see cref="T:System.Drawing.RectangleF" /> のクリッピング領域に外接する四角形を表す <see cref="T:System.Drawing.Graphics" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-242">A <see cref="T:System.Drawing.RectangleF" /> structure that represents a bounding rectangle for the clipping region of this <see cref="T:System.Drawing.Graphics" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-243">結果として得られる四角形の単位は、<xref:System.Drawing.Graphics.PageUnit%2A> プロパティによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-243">The unit for resulting rectangle is designated by the <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span> <span data-ttu-id="b889f-244">既定の単位はピクセルです。</span><span class="sxs-lookup"><span data-stu-id="b889f-244">The default unit is pixels.</span></span> <span data-ttu-id="b889f-245">通常、<xref:System.Drawing.Graphics> はコントロールに関連付けられており、四角形の原点は、そのコントロールのクライアント領域に対して相対的になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-245">A <xref:System.Drawing.Graphics> is typically associated with a control and the origin of the rectangle will be relative to the client area of that control.</span></span>  
  
 <span data-ttu-id="b889f-246">クリッピング領域が無限の場合、<xref:System.Drawing.Graphics.ClipBounds%2A> プロパティは、意味のない大きな四角形を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-246">If the clipping region is infinite, the <xref:System.Drawing.Graphics.ClipBounds%2A> property returns a meaningless large rectangle.</span></span> <span data-ttu-id="b889f-247">クリッピング領域が無限であるかどうかを判断するには、<xref:System.Drawing.Graphics.Clip%2A> プロパティを取得し、その <xref:System.Drawing.Region.IsInfinite%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b889f-247">To determine whether the clipping region is infinite, retrieve the <xref:System.Drawing.Graphics.Clip%2A> property and call its <xref:System.Drawing.Region.IsInfinite%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositingMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CompositingMode CompositingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.CompositingMode CompositingMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.CompositingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CompositingMode As CompositingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CompositingMode CompositingMode { System::Drawing::Drawing2D::CompositingMode get(); void set(System::Drawing::Drawing2D::CompositingMode value); };" />
      <MemberSignature Language="F#" Value="member this.CompositingMode : System.Drawing.Drawing2D.CompositingMode with get, set" Usage="System.Drawing.Graphics.CompositingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CompositingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-248">この <see cref="T:System.Drawing.Graphics" /> への複合イメージの描画方法を指定する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b889f-248">Gets a value that specifies how composited images are drawn to this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-249">このプロパティは、<see cref="T:System.Drawing.Drawing2D.CompositingMode" /> 列挙体のメンバーを指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-249">This property specifies a member of the <see cref="T:System.Drawing.Drawing2D.CompositingMode" /> enumeration.</span></span> <span data-ttu-id="b889f-250">既定では、 <see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" />です。</span><span class="sxs-lookup"><span data-stu-id="b889f-250">The default is <see cref="F:System.Drawing.Drawing2D.CompositingMode.SourceOver" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-251">合成モードでは、ソースイメージのピクセルを上書きするか、または背景ピクセルと組み合わせて使用するかを決定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-251">The compositing mode determines whether pixels from a source image overwrite or are combined with background pixels.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b889f-252"><xref:System.Drawing.Graphics.TextRenderingHint%2A> プロパティが <xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit>に設定されている場合、<xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy> の <xref:System.Drawing.Graphics.CompositingMode%2A> プロパティ値は使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="b889f-252">You should not use a <xref:System.Drawing.Graphics.CompositingMode%2A> property value of <xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy> when the <xref:System.Drawing.Graphics.TextRenderingHint%2A> property is set to <xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit>.</span></span> <span data-ttu-id="b889f-253">例外が発生したか、イメージが正しく表示されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-253">An exception could occur or the image may not render correctly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositingQuality">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.CompositingQuality CompositingQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.CompositingQuality CompositingQuality" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.CompositingQuality" />
      <MemberSignature Language="VB.NET" Value="Public Property CompositingQuality As CompositingQuality" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::CompositingQuality CompositingQuality { System::Drawing::Drawing2D::CompositingQuality get(); void set(System::Drawing::Drawing2D::CompositingQuality value); };" />
      <MemberSignature Language="F#" Value="member this.CompositingQuality : System.Drawing.Drawing2D.CompositingQuality with get, set" Usage="System.Drawing.Graphics.CompositingQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.CompositingQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-254">この <see cref="T:System.Drawing.Graphics" /> に描画する複合イメージのレンダリング品質を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-254">Gets or sets the rendering quality of composited images drawn to this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-255">このプロパティは、<see cref="T:System.Drawing.Drawing2D.CompositingQuality" /> 列挙体のメンバーを指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-255">This property specifies a member of the <see cref="T:System.Drawing.Drawing2D.CompositingQuality" /> enumeration.</span></span> <span data-ttu-id="b889f-256">既定では、 <see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" />です。</span><span class="sxs-lookup"><span data-stu-id="b889f-256">The default is <see cref="F:System.Drawing.Drawing2D.CompositingQuality.Default" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-257">合成品質は、複合画像のレンダリング品質レベルを決定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-257">The compositing quality determines the rendering quality level of composited images.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyFromScreen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-258">画面から <see cref="T:System.Drawing.Graphics" /> の描画サーフェイスへの、色データのビット ブロック転送を実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-258">Performs a bit-block transfer of color data from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyFromScreen">
      <MemberSignature Language="C#" Value="public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFromScreen(valuetype System.Drawing.Point upperLeftSource, valuetype System.Drawing.Point upperLeftDestination, valuetype System.Drawing.Size blockRegionSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFromScreen (upperLeftSource As Point, upperLeftDestination As Point, blockRegionSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFromScreen(System::Drawing::Point upperLeftSource, System::Drawing::Point upperLeftDestination, System::Drawing::Size blockRegionSize);" />
      <MemberSignature Language="F#" Value="member this.CopyFromScreen : System.Drawing.Point * System.Drawing.Point * System.Drawing.Size -&gt; unit" Usage="graphics.CopyFromScreen (upperLeftSource, upperLeftDestination, blockRegionSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upperLeftSource" Type="System.Drawing.Point" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="upperLeftDestination" Type="System.Drawing.Point" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="blockRegionSize" Type="System.Drawing.Size" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="upperLeftSource"><span data-ttu-id="b889f-259">転送元の四角形の左上隅の点。</span><span class="sxs-lookup"><span data-stu-id="b889f-259">The point at the upper-left corner of the source rectangle.</span></span></param>
        <param name="upperLeftDestination"><span data-ttu-id="b889f-260">転送先の四角形の左上隅の点。</span><span class="sxs-lookup"><span data-stu-id="b889f-260">The point at the upper-left corner of the destination rectangle.</span></span></param>
        <param name="blockRegionSize"><span data-ttu-id="b889f-261">転送される領域のサイズ。</span><span class="sxs-lookup"><span data-stu-id="b889f-261">The size of the area to be transferred.</span></span></param>
        <summary><span data-ttu-id="b889f-262">画面から <see cref="T:System.Drawing.Graphics" /> の描画サーフェイスへの、ピクセルの四角形に対応する色データのビット ブロック転送を実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-262">Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-263"><xref:System.Drawing.Graphics.CopyFromScreen%2A> メソッドは、別のイメージの上に1つのイメージを重ねる場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="b889f-263">The <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods are useful for layering one image on top of another.</span></span> <span data-ttu-id="b889f-264">コピー元とコピー先の色をブレンドする方法を指定するには、<xref:System.Drawing.CopyPixelOperation> パラメーターを受け取る <xref:System.Drawing.Graphics.CopyFromScreen%2A> メソッドのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-264">To specify how the source and destination colors are blended, use one of the <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods that takes a <xref:System.Drawing.CopyPixelOperation> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-265"><xref:System.Drawing.Graphics.CopyFromScreen%2A> メソッドの使用方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-265">The following example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> method.</span></span> <span data-ttu-id="b889f-266">この例を実行するには、Windows フォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b889f-266">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="b889f-267">フォームの <xref:System.Windows.Forms.Control.Paint> イベントを処理し、<xref:System.Windows.Forms.Control.Paint> イベント処理メソッドから `CopyPixels1` メソッドを呼び出して、`e` を <xref:System.Windows.Forms.PaintEventArgs>として渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-267">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels1` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#4)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b889f-268">操作が失敗しました。</span><span class="sxs-lookup"><span data-stu-id="b889f-268">The operation failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="b889f-269">すべてのウィンドウにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b889f-269">for access to all windows.</span></span> <span data-ttu-id="b889f-270">関連する列挙型: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-270">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-print-a-windows-form.md"><span data-ttu-id="b889f-271">方法 : Windows フォームを印刷する</span><span class="sxs-lookup"><span data-stu-id="b889f-271">How to: Print a Windows Form</span></span></related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-copy-pixels-for-reducing-flicker-in-windows-forms.md"><span data-ttu-id="b889f-272">方法: ピクセルをコピーして Windows フォームのちらつきを軽減する</span><span class="sxs-lookup"><span data-stu-id="b889f-272">How to: Copy Pixels For Reducing Flicker in Windows Forms</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyFromScreen">
      <MemberSignature Language="C#" Value="public void CopyFromScreen (System.Drawing.Point upperLeftSource, System.Drawing.Point upperLeftDestination, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFromScreen(valuetype System.Drawing.Point upperLeftSource, valuetype System.Drawing.Point upperLeftDestination, valuetype System.Drawing.Size blockRegionSize, valuetype System.Drawing.CopyPixelOperation copyPixelOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFromScreen(System::Drawing::Point upperLeftSource, System::Drawing::Point upperLeftDestination, System::Drawing::Size blockRegionSize, System::Drawing::CopyPixelOperation copyPixelOperation);" />
      <MemberSignature Language="F#" Value="member this.CopyFromScreen : System.Drawing.Point * System.Drawing.Point * System.Drawing.Size * System.Drawing.CopyPixelOperation -&gt; unit" Usage="graphics.CopyFromScreen (upperLeftSource, upperLeftDestination, blockRegionSize, copyPixelOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upperLeftSource" Type="System.Drawing.Point" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="upperLeftDestination" Type="System.Drawing.Point" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="blockRegionSize" Type="System.Drawing.Size" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="copyPixelOperation" Type="System.Drawing.CopyPixelOperation" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="upperLeftSource"><span data-ttu-id="b889f-273">転送元の四角形の左上隅の点。</span><span class="sxs-lookup"><span data-stu-id="b889f-273">The point at the upper-left corner of the source rectangle.</span></span></param>
        <param name="upperLeftDestination"><span data-ttu-id="b889f-274">転送先の四角形の左上隅の点。</span><span class="sxs-lookup"><span data-stu-id="b889f-274">The point at the upper-left corner of the destination rectangle.</span></span></param>
        <param name="blockRegionSize"><span data-ttu-id="b889f-275">転送される領域のサイズ。</span><span class="sxs-lookup"><span data-stu-id="b889f-275">The size of the area to be transferred.</span></span></param>
        <param name="copyPixelOperation"><span data-ttu-id="b889f-276"><see cref="T:System.Drawing.CopyPixelOperation" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="b889f-276">One of the <see cref="T:System.Drawing.CopyPixelOperation" /> values.</span></span></param>
        <summary><span data-ttu-id="b889f-277">画面から <see cref="T:System.Drawing.Graphics" /> の描画サーフェイスへの、ピクセルの四角形に対応する色データのビット ブロック転送を実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-277">Performs a bit-block transfer of color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-278"><xref:System.Drawing.Graphics.CopyFromScreen%2A> メソッドは、別のイメージの上に1つのイメージを重ねる場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="b889f-278">The <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods are useful for layering one image on top of another.</span></span> <span data-ttu-id="b889f-279">`copyPixelOperation` パラメーターを使用すると、コピー元の色をコピー先の領域の色とブレンドするかどうかと方法を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b889f-279">The `copyPixelOperation` parameter allows you to specify if and how the source colors should be blended with the colors in the destination area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-280"><xref:System.Drawing.Graphics.CopyFromScreen%2A> メソッドの使用方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-280">The following example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> method.</span></span> <span data-ttu-id="b889f-281">この例を実行するには、Windows フォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b889f-281">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="b889f-282">フォームの <xref:System.Windows.Forms.Control.Paint> イベントを処理し、<xref:System.Windows.Forms.Control.Paint> イベント処理メソッドから `CopyPixels2` メソッドを呼び出して、`e` を <xref:System.Windows.Forms.PaintEventArgs>として渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-282">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels2` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#5)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b889f-283"><paramref name="copyPixelOperation" /> が <see cref="T:System.Drawing.CopyPixelOperation" /> のメンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="b889f-283"><paramref name="copyPixelOperation" /> is not a member of <see cref="T:System.Drawing.CopyPixelOperation" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b889f-284">操作が失敗しました。</span><span class="sxs-lookup"><span data-stu-id="b889f-284">The operation failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="b889f-285">すべてのウィンドウにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b889f-285">for access to all windows.</span></span> <span data-ttu-id="b889f-286">関連する列挙型: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-286">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-print-a-windows-form.md"><span data-ttu-id="b889f-287">方法 : Windows フォームを印刷する</span><span class="sxs-lookup"><span data-stu-id="b889f-287">How to: Print a Windows Form</span></span></related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-copy-pixels-for-reducing-flicker-in-windows-forms.md"><span data-ttu-id="b889f-288">方法: ピクセルをコピーして Windows フォームのちらつきを軽減する</span><span class="sxs-lookup"><span data-stu-id="b889f-288">How to: Copy Pixels For Reducing Flicker in Windows Forms</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyFromScreen">
      <MemberSignature Language="C#" Value="public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFromScreen(int32 sourceX, int32 sourceY, int32 destinationX, int32 destinationY, valuetype System.Drawing.Size blockRegionSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFromScreen (sourceX As Integer, sourceY As Integer, destinationX As Integer, destinationY As Integer, blockRegionSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFromScreen(int sourceX, int sourceY, int destinationX, int destinationY, System::Drawing::Size blockRegionSize);" />
      <MemberSignature Language="F#" Value="member this.CopyFromScreen : int * int * int * int * System.Drawing.Size -&gt; unit" Usage="graphics.CopyFromScreen (sourceX, sourceY, destinationX, destinationY, blockRegionSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceX" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sourceY" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationX" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationY" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="blockRegionSize" Type="System.Drawing.Size" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceX"><span data-ttu-id="b889f-289">転送元の四角形の左上隅の点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-289">The x-coordinate of the point at the upper-left corner of the source rectangle.</span></span></param>
        <param name="sourceY"><span data-ttu-id="b889f-290">転送元の四角形の左上隅の点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-290">The y-coordinate of the point at the upper-left corner of the source rectangle.</span></span></param>
        <param name="destinationX"><span data-ttu-id="b889f-291">転送先の四角形の左上隅の点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-291">The x-coordinate of the point at the upper-left corner of the destination rectangle.</span></span></param>
        <param name="destinationY"><span data-ttu-id="b889f-292">転送先の四角形の左上隅の点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-292">The y-coordinate of the point at the upper-left corner of the destination rectangle.</span></span></param>
        <param name="blockRegionSize"><span data-ttu-id="b889f-293">転送される領域のサイズ。</span><span class="sxs-lookup"><span data-stu-id="b889f-293">The size of the area to be transferred.</span></span></param>
        <summary><span data-ttu-id="b889f-294">画面から <see cref="T:System.Drawing.Graphics" /> の描画サーフェイスへの、ピクセルの四角形に対応する色データのビット ブロック転送を実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-294">Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-295"><xref:System.Drawing.Graphics.CopyFromScreen%2A> メソッドは、別のイメージの上に1つのイメージを重ねる場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="b889f-295">The <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods are useful for layering one image on top of another.</span></span> <span data-ttu-id="b889f-296">コピー元とコピー先の色をブレンドする方法を指定するには、<xref:System.Drawing.CopyPixelOperation> パラメーターを受け取る <xref:System.Drawing.Graphics.CopyFromScreen%2A> メソッドのいずれかを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-296">To specify how the source and destination colors are blended, use one of the <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods that takes a <xref:System.Drawing.CopyPixelOperation> parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-297">次のコード例は、現在のフォームのコピーを印刷するために <xref:System.Drawing.Graphics.CopyFromScreen%2A> を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b889f-297">The following code example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> for printing a copy of the current form.</span></span>  
  
 [!code-csharp[System.Drawing.Graphics.CopyFromScreen#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Graphics.CopyFromScreen/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Graphics.CopyFromScreen#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Graphics.CopyFromScreen/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b889f-298">操作が失敗しました。</span><span class="sxs-lookup"><span data-stu-id="b889f-298">The operation failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="b889f-299">すべてのウィンドウにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b889f-299">for access to all windows.</span></span> <span data-ttu-id="b889f-300">関連する列挙型: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-300">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-print-a-windows-form.md"><span data-ttu-id="b889f-301">方法 : Windows フォームを印刷する</span><span class="sxs-lookup"><span data-stu-id="b889f-301">How to: Print a Windows Form</span></span></related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-copy-pixels-for-reducing-flicker-in-windows-forms.md"><span data-ttu-id="b889f-302">方法: ピクセルをコピーして Windows フォームのちらつきを軽減する</span><span class="sxs-lookup"><span data-stu-id="b889f-302">How to: Copy Pixels For Reducing Flicker in Windows Forms</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CopyFromScreen">
      <MemberSignature Language="C#" Value="public void CopyFromScreen (int sourceX, int sourceY, int destinationX, int destinationY, System.Drawing.Size blockRegionSize, System.Drawing.CopyPixelOperation copyPixelOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFromScreen(int32 sourceX, int32 sourceY, int32 destinationX, int32 destinationY, valuetype System.Drawing.Size blockRegionSize, valuetype System.Drawing.CopyPixelOperation copyPixelOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFromScreen(int sourceX, int sourceY, int destinationX, int destinationY, System::Drawing::Size blockRegionSize, System::Drawing::CopyPixelOperation copyPixelOperation);" />
      <MemberSignature Language="F#" Value="member this.CopyFromScreen : int * int * int * int * System.Drawing.Size * System.Drawing.CopyPixelOperation -&gt; unit" Usage="graphics.CopyFromScreen (sourceX, sourceY, destinationX, destinationY, blockRegionSize, copyPixelOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceX" Type="System.Int32" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sourceY" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationX" Type="System.Int32" Index="2" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="destinationY" Type="System.Int32" Index="3" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="blockRegionSize" Type="System.Drawing.Size" Index="4" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="copyPixelOperation" Type="System.Drawing.CopyPixelOperation" Index="5" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceX"><span data-ttu-id="b889f-303">転送元の四角形の左上隅の点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-303">The x-coordinate of the point at the upper-left corner of the source rectangle.</span></span></param>
        <param name="sourceY"><span data-ttu-id="b889f-304">転送元の四角形の左上隅の点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-304">The y-coordinate of the point at the upper-left corner of the source rectangle</span></span></param>
        <param name="destinationX"><span data-ttu-id="b889f-305">転送先の四角形の左上隅の点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-305">The x-coordinate of the point at the upper-left corner of the destination rectangle.</span></span></param>
        <param name="destinationY"><span data-ttu-id="b889f-306">転送先の四角形の左上隅の点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-306">The y-coordinate of the point at the upper-left corner of the destination rectangle.</span></span></param>
        <param name="blockRegionSize"><span data-ttu-id="b889f-307">転送される領域のサイズ。</span><span class="sxs-lookup"><span data-stu-id="b889f-307">The size of the area to be transferred.</span></span></param>
        <param name="copyPixelOperation"><span data-ttu-id="b889f-308"><see cref="T:System.Drawing.CopyPixelOperation" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="b889f-308">One of the <see cref="T:System.Drawing.CopyPixelOperation" /> values.</span></span></param>
        <summary><span data-ttu-id="b889f-309">画面から <see cref="T:System.Drawing.Graphics" /> の描画サーフェイスへの、ピクセルの四角形に対応する色データのビット ブロック転送を実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-309">Performs a bit-block transfer of the color data, corresponding to a rectangle of pixels, from the screen to the drawing surface of the <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-310"><xref:System.Drawing.Graphics.CopyFromScreen%2A> メソッドは、別のイメージの上に1つのイメージを重ねる場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="b889f-310">The <xref:System.Drawing.Graphics.CopyFromScreen%2A> methods are useful for layering one image on top of another.</span></span> <span data-ttu-id="b889f-311">`copyPixelOperation` パラメーターを使用すると、コピー元の色をコピー先の領域の色とブレンドするかどうかと方法を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b889f-311">The `copyPixelOperation` parameter allows you to specify if and how the source colors should be blended with the colors in the destination area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-312"><xref:System.Drawing.Graphics.CopyFromScreen%2A> メソッドの使用方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-312">The following example demonstrates how to use the <xref:System.Drawing.Graphics.CopyFromScreen%2A> method.</span></span> <span data-ttu-id="b889f-313">この例を実行するには、Windows フォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b889f-313">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="b889f-314">フォームの <xref:System.Windows.Forms.Control.Paint> イベントを処理し、<xref:System.Windows.Forms.Control.Paint> イベント処理メソッドから `CopyPixels4` メソッドを呼び出して、`e` を <xref:System.Windows.Forms.PaintEventArgs>として渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-314">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `CopyPixels4` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#7)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b889f-315"><paramref name="copyPixelOperation" /> が <see cref="T:System.Drawing.CopyPixelOperation" /> のメンバーではありません。</span><span class="sxs-lookup"><span data-stu-id="b889f-315"><paramref name="copyPixelOperation" /> is not a member of <see cref="T:System.Drawing.CopyPixelOperation" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="b889f-316">操作が失敗しました。</span><span class="sxs-lookup"><span data-stu-id="b889f-316">The operation failed.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="b889f-317">すべてのウィンドウにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="b889f-317">for access to all windows.</span></span> <span data-ttu-id="b889f-318">関連する列挙型: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-318">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span></span></permission>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-print-a-windows-form.md"><span data-ttu-id="b889f-319">方法 : Windows フォームを印刷する</span><span class="sxs-lookup"><span data-stu-id="b889f-319">How to: Print a Windows Form</span></span></related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-copy-pixels-for-reducing-flicker-in-windows-forms.md"><span data-ttu-id="b889f-320">方法: ピクセルをコピーして Windows フォームのちらつきを軽減する</span><span class="sxs-lookup"><span data-stu-id="b889f-320">How to: Copy Pixels For Reducing Flicker in Windows Forms</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphics.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b889f-321">この <see cref="T:System.Drawing.Graphics" /> によって使用されているすべてのリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b889f-321">Releases all resources used by this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-322"><xref:System.Drawing.Graphics.Dispose%2A> を呼び出すと、この <xref:System.Drawing.Graphics> で使用されるリソースを他の目的で再割り当てできます。</span><span class="sxs-lookup"><span data-stu-id="b889f-322">Calling <xref:System.Drawing.Graphics.Dispose%2A> allows the resources used by this <xref:System.Drawing.Graphics> to be reallocated for other purposes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-323">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-323">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-324">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-324">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-325">サンプルディレクトリのグラフィックファイル SampImag から <xref:System.Drawing.Image> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-325">Creates an <xref:System.Drawing.Image> from a graphics file SampImag.jpg in the example directory.</span></span>  
  
-   <span data-ttu-id="b889f-326"><xref:System.Drawing.Image>から <xref:System.Drawing.Graphics> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-326">Creates a <xref:System.Drawing.Graphics> from the <xref:System.Drawing.Image>.</span></span>  
  
-   <span data-ttu-id="b889f-327">イメージ内の四角形を塗りつぶすことによって、イメージを変更します。</span><span class="sxs-lookup"><span data-stu-id="b889f-327">Alters the image by filling a rectangle within it.</span></span>  
  
-   <span data-ttu-id="b889f-328"><xref:System.Drawing.Image> を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-328">Draws the <xref:System.Drawing.Image> to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-329">作成された <xref:System.Drawing.Graphics>を解放します。</span><span class="sxs-lookup"><span data-stu-id="b889f-329">Releases the created <xref:System.Drawing.Graphics>.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiX">
      <MemberSignature Language="C#" Value="public float DpiX { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DpiX" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.DpiX" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DpiX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DpiX { float get(); };" />
      <MemberSignature Language="F#" Value="member this.DpiX : single" Usage="System.Drawing.Graphics.DpiX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-330">この <see cref="T:System.Drawing.Graphics" /> の水平方向の解像度を取得します。</span><span class="sxs-lookup"><span data-stu-id="b889f-330">Gets the horizontal resolution of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-331">この <see cref="T:System.Drawing.Graphics" /> でサポートされる水平方向の解像度の値 (dpi)。</span><span class="sxs-lookup"><span data-stu-id="b889f-331">The value, in dots per inch, for the horizontal resolution supported by this <see cref="T:System.Drawing.Graphics" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-332">高解像度アプリケーションの作成の詳細については、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-332">For more information about creating high-resolution applications, see</span></span>  
  
 <span data-ttu-id="b889f-333">[高 DPI](https://go.microsoft.com/fwlink/?LinkId=159804)。</span><span class="sxs-lookup"><span data-stu-id="b889f-333">[High DPI](https://go.microsoft.com/fwlink/?LinkId=159804).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-334">次のメソッドは、<xref:System.Drawing.Graphics.DpiX%2A> プロパティと <xref:System.Drawing.Graphics.DpiY%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b889f-334">The following method shows the use of the <xref:System.Drawing.Graphics.DpiX%2A> and <xref:System.Drawing.Graphics.DpiY%2A> properties.</span></span> <span data-ttu-id="b889f-335">この例は、Windows フォームで使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b889f-335">This example is designed for use with a Windows Form.</span></span> <span data-ttu-id="b889f-336">この例を実行するには、listBox1 という名前の <xref:System.Windows.Forms.ListBox> を含むフォームに貼り付け、フォームのコンストラクターからこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b889f-336">To run this example, paste it into a form that contains a <xref:System.Windows.Forms.ListBox> named listBox1 and call this method from the form's constructor.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.MiscExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.MiscExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=159804"><span data-ttu-id="b889f-337">高 DPI</span><span class="sxs-lookup"><span data-stu-id="b889f-337">High DPI</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DpiY">
      <MemberSignature Language="C#" Value="public float DpiY { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DpiY" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.DpiY" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DpiY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DpiY { float get(); };" />
      <MemberSignature Language="F#" Value="member this.DpiY : single" Usage="System.Drawing.Graphics.DpiY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-338">この <see cref="T:System.Drawing.Graphics" /> の垂直方向の解像度を取得します。</span><span class="sxs-lookup"><span data-stu-id="b889f-338">Gets the vertical resolution of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-339">この <see cref="T:System.Drawing.Graphics" /> でサポートされる垂直方向の解像度の値 (dpi)。</span><span class="sxs-lookup"><span data-stu-id="b889f-339">The value, in dots per inch, for the vertical resolution supported by this <see cref="T:System.Drawing.Graphics" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-340">高解像度アプリケーションの作成の詳細については、「」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-340">For more information about creating high-resolution applications, see</span></span>  
  
 <span data-ttu-id="b889f-341">[高 DPI](https://go.microsoft.com/fwlink/?LinkId=159804)。</span><span class="sxs-lookup"><span data-stu-id="b889f-341">[High DPI](https://go.microsoft.com/fwlink/?LinkId=159804).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-342">次のメソッドは、<xref:System.Drawing.Graphics.DpiX%2A> プロパティと <xref:System.Drawing.Graphics.DpiY%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b889f-342">The following method shows the use of the <xref:System.Drawing.Graphics.DpiX%2A> and <xref:System.Drawing.Graphics.DpiY%2A> properties.</span></span> <span data-ttu-id="b889f-343">この例は、Windows フォームで使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b889f-343">This example is designed for use with a Windows Form.</span></span> <span data-ttu-id="b889f-344">この例を実行するには、listBox1 という名前の <xref:System.Windows.Forms.ListBox> を含むフォームに貼り付け、フォームのコンストラクターからこのメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b889f-344">To run this example, paste it into a form that contains a <xref:System.Windows.Forms.ListBox> named listBox1 and call this method from the form's constructor.</span></span>  
  
 [!code-cpp[System.Drawing.MiscExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.MiscExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.MiscExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=159804"><span data-ttu-id="b889f-345">高 DPI</span><span class="sxs-lookup"><span data-stu-id="b889f-345">High DPI</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-346">座標ペア、幅、および高さで指定された楕円の一部を表す円弧を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-346">Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawArc">
      <MemberSignature Language="C#" Value="public void DrawArc (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawArc(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawArc(System::Drawing::Pen ^ pen, System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawArc : System.Drawing.Pen * System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphics.DrawArc (pen, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-347">円弧の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-347"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-348">楕円の境界を定義する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-348"><see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b889f-349">x 軸から円弧の開始点まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-349">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b889f-350"><paramref name="startAngle" /> パラメーターから円弧の終了点まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-350">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</span></span></param>
        <summary><span data-ttu-id="b889f-351"><see cref="T:System.Drawing.Rectangle" /> 構造体によって指定される楕円の一部を表す円弧を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-351">Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-352">このメソッドは、楕円の境界の一部である円弧を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-352">This method draws an arc that is a portion of the perimeter of an ellipse.</span></span> <span data-ttu-id="b889f-353">楕円は、四角形の境界によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-353">The ellipse is defined by the boundaries of a rectangle.</span></span> <span data-ttu-id="b889f-354">弧は、`startAngle` パラメーターと `startAngle` + `sweepAngle` パラメーターとの間の楕円の境界の部分です。</span><span class="sxs-lookup"><span data-stu-id="b889f-354">The arc is the portion of the perimeter of the ellipse between the `startAngle` parameter and the `startAngle` + `sweepAngle` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-355">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-355">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-356">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-356">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-357">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-357">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-358">楕円にバインドする四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-358">Creates a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-359">開始 (45 °) とスイープ (270 °) の角度を定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-359">Defines the start (45 degrees) and sweep (270 degrees) angles.</span></span>  
  
-   <span data-ttu-id="b889f-360">楕円の円弧を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-360">Draws the elliptical arc to the screen.</span></span>  
  
 <span data-ttu-id="b889f-361">結果は、x 軸の + ~-45 °の間にセグメントがない部分楕円です。</span><span class="sxs-lookup"><span data-stu-id="b889f-361">The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-362"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-362"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawArc">
      <MemberSignature Language="C#" Value="public void DrawArc (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawArc(class System.Drawing.Pen pen, valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawArc(System::Drawing::Pen ^ pen, System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawArc : System.Drawing.Pen * System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphics.DrawArc (pen, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-363">円弧の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-363"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-364">楕円の境界を定義する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-364"><see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b889f-365">x 軸から円弧の開始点まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-365">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b889f-366"><paramref name="startAngle" /> パラメーターから円弧の終了点まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-366">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</span></span></param>
        <summary><span data-ttu-id="b889f-367"><see cref="T:System.Drawing.RectangleF" /> 構造体によって指定される楕円の一部を表す円弧を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-367">Draws an arc representing a portion of an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-368">このメソッドは、楕円の境界の一部である円弧を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-368">This method draws an arc that is a portion of the perimeter of an ellipse.</span></span> <span data-ttu-id="b889f-369">楕円は、四角形の境界によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-369">The ellipse is defined by the boundaries of a rectangle.</span></span> <span data-ttu-id="b889f-370">弧は、`startAngle` パラメーターと `startAngle` + `sweepAngle` パラメーターとの間の楕円の境界の部分です。</span><span class="sxs-lookup"><span data-stu-id="b889f-370">The arc is the portion of the perimeter of the ellipse between the `startAngle` parameter and the `startAngle` + `sweepAngle` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-371">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-371">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-372">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-372">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-373">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-373">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-374">楕円にバインドする四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-374">Creates a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-375">開始 (45 °) とスイープ (270 °) の角度を定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-375">Defines the start (45 degrees) and sweep (270 degrees) angles.</span></span>  
  
-   <span data-ttu-id="b889f-376">楕円の円弧を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-376">Draws the elliptical arc to the screen.</span></span>  
  
 <span data-ttu-id="b889f-377">結果は、x 軸の + ~-45 °の間にセグメントがない部分楕円です。</span><span class="sxs-lookup"><span data-stu-id="b889f-377">The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-378"><paramref name="pen" /> は <see langword="null" /> です</span><span class="sxs-lookup"><span data-stu-id="b889f-378"><paramref name="pen" /> is <see langword="null" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawArc">
      <MemberSignature Language="C#" Value="public void DrawArc (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawArc(class System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height, int32 startAngle, int32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawArc(System::Drawing::Pen ^ pen, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawArc : System.Drawing.Pen * int * int * int * int * int * int -&gt; unit" Usage="graphics.DrawArc (pen, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Int32" />
        <Parameter Name="sweepAngle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-379">円弧の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-379"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-380">楕円を定義する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-380">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-381">楕円を定義する四角形の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-381">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-382">楕円を定義する四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-382">Width of the rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-383">楕円を定義する四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-383">Height of the rectangle that defines the ellipse.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b889f-384">x 軸から円弧の開始点まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-384">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b889f-385"><paramref name="startAngle" /> パラメーターから円弧の終了点まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-385">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</span></span></param>
        <summary><span data-ttu-id="b889f-386">座標ペア、幅、および高さで指定された楕円の一部を表す円弧を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-386">Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-387">このメソッドは、楕円の境界の一部である円弧を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-387">This method draws an arc that is a portion of the perimeter of an ellipse.</span></span> <span data-ttu-id="b889f-388">楕円は、四角形の境界によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-388">The ellipse is defined by the boundaries of a rectangle.</span></span> <span data-ttu-id="b889f-389">弧は、`startAngle` パラメーターと `startAngle` + `sweepAngle` パラメーターとの間の楕円の境界の部分です。</span><span class="sxs-lookup"><span data-stu-id="b889f-389">The arc is the portion of the perimeter of the ellipse between the `startAngle` parameter and the `startAngle` + `sweepAngle` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-390">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-390">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-391">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-391">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-392">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-392">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-393">楕円にバインドする四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-393">Creates the position and size of a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-394">開始 (45 °) とスイープ (270 °) の角度を定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-394">Defines the start (45 degrees) and sweep (270 degrees) angles.</span></span>  
  
-   <span data-ttu-id="b889f-395">楕円の円弧を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-395">Draws the elliptical arc to the screen.</span></span>  
  
 <span data-ttu-id="b889f-396">結果は、x 軸の + ~-45 °の間にセグメントがない部分楕円です。</span><span class="sxs-lookup"><span data-stu-id="b889f-396">The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-397"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-397"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawArc">
      <MemberSignature Language="C#" Value="public void DrawArc (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawArc(class System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawArc(System::Drawing::Pen ^ pen, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawArc : System.Drawing.Pen * single * single * single * single * single * single -&gt; unit" Usage="graphics.DrawArc (pen, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-398">円弧の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-398"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the arc.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-399">楕円を定義する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-399">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-400">楕円を定義する四角形の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-400">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-401">楕円を定義する四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-401">Width of the rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-402">楕円を定義する四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-402">Height of the rectangle that defines the ellipse.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b889f-403">x 軸から円弧の開始点まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-403">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b889f-404"><paramref name="startAngle" /> パラメーターから円弧の終了点まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-404">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</span></span></param>
        <summary><span data-ttu-id="b889f-405">座標ペア、幅、および高さで指定された楕円の一部を表す円弧を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-405">Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-406">このメソッドは、楕円の境界の一部である円弧を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-406">This method draws an arc that is a portion of the perimeter of an ellipse.</span></span> <span data-ttu-id="b889f-407">楕円は、四角形の境界によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-407">The ellipse is defined by the boundaries of a rectangle.</span></span> <span data-ttu-id="b889f-408">弧は、`startAngle` パラメーターと `startAngle` + `sweepAngle` パラメーターとの間の楕円の境界の部分です。</span><span class="sxs-lookup"><span data-stu-id="b889f-408">The arc is the portion of the perimeter of the ellipse between the `startAngle` parameter and the `startAngle` + `sweepAngle` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-409">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-409">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-410">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-410">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-411">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-411">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-412">楕円にバインドする四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-412">Creates the position and size of a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-413">開始 (45 °) とスイープ (270 °) の角度を定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-413">Defines the start (45 degrees) and sweep (270 degrees) angles.</span></span>  
  
-   <span data-ttu-id="b889f-414">楕円の円弧を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-414">Draws the elliptical arc to the screen.</span></span>  
  
 <span data-ttu-id="b889f-415">結果は、x 軸の + ~-45 °の間にセグメントがない部分楕円です。</span><span class="sxs-lookup"><span data-stu-id="b889f-415">The result is a partial ellipse missing a segment between + and - 45 degrees of the x axis.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-416"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-416"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-417">4 つの <see cref="T:System.Drawing.Point" /> 構造体で定義されるベジエ スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-417">Draws a Bézier spline defined by four <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBezier">
      <MemberSignature Language="C#" Value="public void DrawBezier (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBezier(class System.Drawing.Pen pen, valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBezier(System::Drawing::Pen ^ pen, System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.DrawBezier : System.Drawing.Pen * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphics.DrawBezier (pen, pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-418">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-418"><see cref="T:System.Drawing.Pen" /> structure that determines the color, width, and style of the curve.</span></span></param>
        <param name="pt1"><span data-ttu-id="b889f-419">曲線の開始点を表す <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-419"><see cref="T:System.Drawing.Point" /> structure that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="b889f-420">曲線の最初の制御点を表す <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-420"><see cref="T:System.Drawing.Point" /> structure that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="b889f-421">曲線の 2 番目の制御点を表す <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-421"><see cref="T:System.Drawing.Point" /> structure that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="b889f-422">曲線の終了点を表す <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-422"><see cref="T:System.Drawing.Point" /> structure that represents the ending point of the curve.</span></span></param>
        <summary><span data-ttu-id="b889f-423">4 つの <see cref="T:System.Drawing.Point" /> 構造体で定義されるベジエ スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-423">Draws a Bézier spline defined by four <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-424">ベジエ曲線は、最初の点から4番目の点まで描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-424">The Bézier curve is drawn from the first point to the fourth point.</span></span> <span data-ttu-id="b889f-425">2番目と3番目のポイントは、曲線の形状を決定する制御点です。</span><span class="sxs-lookup"><span data-stu-id="b889f-425">The second and third points are control points that determine the shape of the curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-426">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-426">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-427">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-427">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-428">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-428">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-429">曲線の開始、終了、および2つの制御点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-429">Creates the start, end, and two control points for the curve.</span></span>  
  
-   <span data-ttu-id="b889f-430">ベジエ曲線を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-430">Draws the Bézier curve to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-431"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-431"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBezier">
      <MemberSignature Language="C#" Value="public void DrawBezier (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBezier(class System.Drawing.Pen pen, valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBezier(System::Drawing::Pen ^ pen, System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.DrawBezier : System.Drawing.Pen * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphics.DrawBezier (pen, pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-432">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-432"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="pt1"><span data-ttu-id="b889f-433">曲線の開始点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-433"><see cref="T:System.Drawing.PointF" /> structure that represents the starting point of the curve.</span></span></param>
        <param name="pt2"><span data-ttu-id="b889f-434">曲線の最初の制御点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-434"><see cref="T:System.Drawing.PointF" /> structure that represents the first control point for the curve.</span></span></param>
        <param name="pt3"><span data-ttu-id="b889f-435">曲線の 2 番目の制御点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-435"><see cref="T:System.Drawing.PointF" /> structure that represents the second control point for the curve.</span></span></param>
        <param name="pt4"><span data-ttu-id="b889f-436">曲線の終了点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-436"><see cref="T:System.Drawing.PointF" /> structure that represents the ending point of the curve.</span></span></param>
        <summary><span data-ttu-id="b889f-437">4 つの <see cref="T:System.Drawing.PointF" /> 構造体で定義されるベジエ スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-437">Draws a Bézier spline defined by four <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-438">ベジエスプラインは、最初のポイントから4番目のポイントまで描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-438">The Bézier spline is drawn from the first point to the fourth point.</span></span> <span data-ttu-id="b889f-439">2番目と3番目のポイントは、曲線の形状を決定する制御点です。</span><span class="sxs-lookup"><span data-stu-id="b889f-439">The second and third points are control points that determine the shape of the curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-440">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-440">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-441">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-441">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-442">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-442">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-443">曲線の開始、終了、および2つの制御点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-443">Creates the start, end, and two control points for the curve.</span></span>  
  
-   <span data-ttu-id="b889f-444">ベジエ曲線を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-444">Draws the Bézier curve to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-445"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-445"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBezier">
      <MemberSignature Language="C#" Value="public void DrawBezier (System.Drawing.Pen pen, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBezier(class System.Drawing.Pen pen, float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBezier(System::Drawing::Pen ^ pen, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.DrawBezier : System.Drawing.Pen * single * single * single * single * single * single * single * single -&gt; unit" Usage="graphics.DrawBezier (pen, x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-446">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-446"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="x1"><span data-ttu-id="b889f-447">曲線の開始点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-447">The x-coordinate of the starting point of the curve.</span></span></param>
        <param name="y1"><span data-ttu-id="b889f-448">曲線の開始点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-448">The y-coordinate of the starting point of the curve.</span></span></param>
        <param name="x2"><span data-ttu-id="b889f-449">曲線の最初の制御点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-449">The x-coordinate of the first control point of the curve.</span></span></param>
        <param name="y2"><span data-ttu-id="b889f-450">曲線の最初の制御点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-450">The y-coordinate of the first control point of the curve.</span></span></param>
        <param name="x3"><span data-ttu-id="b889f-451">曲線の 2 番目の制御点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-451">The x-coordinate of the second control point of the curve.</span></span></param>
        <param name="y3"><span data-ttu-id="b889f-452">曲線の 2 番目の制御点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-452">The y-coordinate of the second control point of the curve.</span></span></param>
        <param name="x4"><span data-ttu-id="b889f-453">曲線の終了点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-453">The x-coordinate of the ending point of the curve.</span></span></param>
        <param name="y4"><span data-ttu-id="b889f-454">曲線の終了点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-454">The y-coordinate of the ending point of the curve.</span></span></param>
        <summary><span data-ttu-id="b889f-455">各点を表す 4 つの順序付けられた座標ペアで定義されるベジエ スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-455">Draws a Bézier spline defined by four ordered pairs of coordinates that represent points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-456">ベジエスプラインは、最初のポイントから4番目のポイントまで描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-456">The Bézier spline is drawn from the first point to the fourth point.</span></span> <span data-ttu-id="b889f-457">2番目と3番目のポイントは、曲線の形状を決定する制御点です。</span><span class="sxs-lookup"><span data-stu-id="b889f-457">The second and third points are control points that determine the shape of the curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-458">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-458">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-459">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-459">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-460">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-460">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-461">曲線の開始位置、終了位置、および2つの制御点の座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-461">Creates the coordinates of the start, end, and two control points for the curve.</span></span>  
  
-   <span data-ttu-id="b889f-462">ベジエ曲線を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-462">Draws the Bézier curve to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-463"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-463"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-464"><see cref="T:System.Drawing.Point" /> 構造体の配列から一連のベジエ スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-464">Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawBeziers">
      <MemberSignature Language="C#" Value="public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBeziers(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBeziers(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawBeziers : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawBeziers (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-465">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-465"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-466">曲線を決定する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-466">Array of <see cref="T:System.Drawing.Point" /> structures that represent the points that determine the curve.</span></span> <span data-ttu-id="b889f-467">配列内の点の数は、3 の倍数に 1 を加算した数 (4、7、10 など) である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-467">The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</span></span></param>
        <summary><span data-ttu-id="b889f-468"><see cref="T:System.Drawing.Point" /> 構造体の配列から一連のベジエ スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-468">Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-469">配列内の点の数は、3 + 1 の倍数である必要があります。これは、最初のスプラインには4つの点が必要であり、その他のすべてのスプラインには3つのポイントが必要であるためです。</span><span class="sxs-lookup"><span data-stu-id="b889f-469">The number of points in the array should be a multiple of 3 plus 1 because the first spline requires 4 points and any other splines require 3 points each.</span></span> <span data-ttu-id="b889f-470">最初のベジエスプラインは、ポイント配列の最初の点から4番目の点まで描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-470">The first Bézier spline is drawn from the first point to the fourth point in the point array.</span></span> <span data-ttu-id="b889f-471">2番目と3番目のポイントは、曲線の形状を決定する制御点です。</span><span class="sxs-lookup"><span data-stu-id="b889f-471">The second and third points are control points that determine the shape of the curve.</span></span> <span data-ttu-id="b889f-472">後続の各曲線には、さらに3つのポイント (さらに2つの制御点と終了点) が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-472">Each subsequent curve needs exactly three more points: two more control points and an ending point.</span></span> <span data-ttu-id="b889f-473">前の曲線の終了点は、追加の各曲線の開始点として使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-473">The ending point of the previous curve is used as the starting point for each additional curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-474">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-474">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-475">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-475">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-476">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-476">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-477">最初の曲線とエンドポイントの開始、終了、および2つの制御点、および2番目の曲線の2つの制御点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-477">Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.</span></span>  
  
-   <span data-ttu-id="b889f-478">連続するベジエ曲線を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-478">Draws the successive Bézier curves to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-479"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-479"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-480">または</span><span class="sxs-lookup"><span data-stu-id="b889f-480">-or-</span></span> 
 <span data-ttu-id="b889f-481"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-481"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawBeziers">
      <MemberSignature Language="C#" Value="public void DrawBeziers (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawBeziers(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawBeziers(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawBeziers : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawBeziers (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-482">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-482"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-483">曲線を決定する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-483">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points that determine the curve.</span></span> <span data-ttu-id="b889f-484">配列内の点の数は、3 の倍数に 1 を加算した数 (4、7、10 など) である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-484">The number of points in the array should be a multiple of 3 plus 1, such as 4, 7, or 10.</span></span></param>
        <summary><span data-ttu-id="b889f-485"><see cref="T:System.Drawing.PointF" /> 構造体の配列から一連のベジエ スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-485">Draws a series of Bézier splines from an array of <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-486">配列内の点の数は、3 + 1 の倍数である必要があります。これは、最初のスプラインには4つの点が必要であり、その他のすべてのスプラインには3つのポイントが必要であるためです。</span><span class="sxs-lookup"><span data-stu-id="b889f-486">The number of points in the array should be a multiple of 3 plus 1 because the first spline requires 4 points and any other splines require 3 points each.</span></span> <span data-ttu-id="b889f-487">最初のベジエ曲線は、ポイント配列の最初の点から4番目の点まで描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-487">The first Bézier curve is drawn from the first point to the fourth point in the point array.</span></span> <span data-ttu-id="b889f-488">2番目と3番目のポイントは、曲線の形状を決定する制御点です。</span><span class="sxs-lookup"><span data-stu-id="b889f-488">The second and third points are control points that determine the shape of the curve.</span></span> <span data-ttu-id="b889f-489">後続の各曲線には、さらに3つのポイント (さらに2つの制御点と終了点) が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-489">Each subsequent curve needs exactly three more points: two more control points and an ending point.</span></span> <span data-ttu-id="b889f-490">前の曲線の終了点は、追加の各曲線の開始点として使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-490">The ending point of the previous curve is used as the starting point for each additional curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-491">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-491">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-492">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-492">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-493">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-493">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-494">最初の曲線とエンドポイントの開始、終了、および2つの制御点、および2番目の曲線の2つの制御点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-494">Creates the start, end, and two control points for a first curve and endpoint and two control points for a second curve.</span></span>  
  
-   <span data-ttu-id="b889f-495">連続するベジエ曲線を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-495">Draws the successive Bézier curves to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-496"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-496"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-497">または</span><span class="sxs-lookup"><span data-stu-id="b889f-497">-or-</span></span> 
 <span data-ttu-id="b889f-498"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-498"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-499"><see cref="T:System.Drawing.Point" /> 構造体の配列で定義された、閉じたカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-499">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawClosedCurve">
      <MemberSignature Language="C#" Value="public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawClosedCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawClosedCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawClosedCurve : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawClosedCurve (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-500">曲線の色、幅、および高さを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-500"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-501">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-501">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <summary><span data-ttu-id="b889f-502"><see cref="T:System.Drawing.Point" /> 構造体の配列で定義された、閉じたカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-502">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-503">このメソッドは、配列内の各点を通過する閉じたカーディナルスプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-503">This method draws a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="b889f-504">最後の点が最初の点と一致しない場合、図を閉じるために、最後の点から最初の点までの追加の曲線セグメントが追加されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-504">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close the figure.</span></span>  
  
 <span data-ttu-id="b889f-505">点の配列には、少なくとも4つの <xref:System.Drawing.Point> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-505">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="b889f-506">このメソッドは、0.5 の既定のテンションを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-506">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-507">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-507">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-508">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-508">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-509">赤と緑のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-509">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="b889f-510">曲線を定義する7つのポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-510">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="b889f-511">7つの点の間に7つの赤い直線を描画して、閉じた多角形を形成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-511">Draws seven red straight lines between the seven points to form a closed polygon.</span></span>  
  
-   <span data-ttu-id="b889f-512">7つの点を通る緑の閉じた曲線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-512">Draws a green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="b889f-513">メソッドでは、0.5 の既定のテンションが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-513">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-514"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-514"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-515">または</span><span class="sxs-lookup"><span data-stu-id="b889f-515">-or-</span></span> 
 <span data-ttu-id="b889f-516"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-516"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawClosedCurve">
      <MemberSignature Language="C#" Value="public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawClosedCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawClosedCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawClosedCurve : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawClosedCurve (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-517">曲線の色、幅、および高さを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-517"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-518">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-518">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <summary><span data-ttu-id="b889f-519"><see cref="T:System.Drawing.PointF" /> 構造体の配列で定義された、閉じたカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-519">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-520">このメソッドは、配列内の各点を通過する閉じたカーディナルスプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-520">This method draws a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="b889f-521">最後の点が最初の点と一致しない場合は、最後の点から最初の点まで追加の曲線セグメントを追加して閉じます。</span><span class="sxs-lookup"><span data-stu-id="b889f-521">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="b889f-522">点の配列には、少なくとも4つの <xref:System.Drawing.PointF> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-522">The array of points must contain at least four <xref:System.Drawing.PointF> structures.</span></span>  
  
 <span data-ttu-id="b889f-523">このメソッドは、0.5 の既定のテンションを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-523">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-524">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-524">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-525">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-525">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-526">赤と緑のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-526">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="b889f-527">曲線を定義する7つのポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-527">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="b889f-528">7つの点の間に7つの赤い直線を描画して、閉じた多角形を形成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-528">Draws seven red straight lines between the seven points to form a closed polygon.</span></span>  
  
-   <span data-ttu-id="b889f-529">7つの点を通る緑の閉じた曲線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-529">Draws a green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="b889f-530">メソッドでは、0.5 の既定のテンションが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-530">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-531"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-531"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-532">または</span><span class="sxs-lookup"><span data-stu-id="b889f-532">-or-</span></span> 
 <span data-ttu-id="b889f-533"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-533"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawClosedCurve">
      <MemberSignature Language="C#" Value="public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawClosedCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points, float32 tension, valuetype System.Drawing.Drawing2D.FillMode fillmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawClosedCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points, float tension, System::Drawing::Drawing2D::FillMode fillmode);" />
      <MemberSignature Language="F#" Value="member this.DrawClosedCurve : System.Drawing.Pen * System.Drawing.Point[] * single * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.DrawClosedCurve (pen, points, tension, fillmode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-534">曲線の色、幅、および高さを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-534"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-535">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-535">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <param name="tension"><span data-ttu-id="b889f-536">曲線のテンションを指定する 0.0F 以上の値。</span><span class="sxs-lookup"><span data-stu-id="b889f-536">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <param name="fillmode"><span data-ttu-id="b889f-537">曲線を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-537">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span></span> <span data-ttu-id="b889f-538">このパラメーターは必須ですが、無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-538">This parameter is required but ignored.</span></span></param>
        <summary><span data-ttu-id="b889f-539">指定したテンションを使用して、<see cref="T:System.Drawing.Point" /> 構造体の配列で定義された、閉じたカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-539">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-540">このメソッドは、配列内の各点を通過する閉じたカーディナルスプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-540">This method draws a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="b889f-541">最後の点が最初の点と一致しない場合は、最後の点から最初の点まで追加の曲線セグメントを追加して閉じます。</span><span class="sxs-lookup"><span data-stu-id="b889f-541">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="b889f-542">点の配列には、少なくとも4つの <xref:System.Drawing.Point> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-542">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="b889f-543">`tension` パラメーターによって、スプラインの形状が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-543">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="b889f-544">`tension` パラメーターの値が 0.0 F の場合、このメソッドは直線セグメントを描画して点を接続します。</span><span class="sxs-lookup"><span data-stu-id="b889f-544">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="b889f-545">通常、`tension` パラメーターは 1.0 F 以下です。</span><span class="sxs-lookup"><span data-stu-id="b889f-545">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="b889f-546">1.0 F を超える値を指定すると、異常な結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-546">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-547">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-547">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-548">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-548">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-549">赤と緑のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-549">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="b889f-550">曲線を定義する7つの点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-550">Creates seven points to define the curve.</span></span>  
  
-   <span data-ttu-id="b889f-551">多角形を形成する7つの点の間に赤い赤い直線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-551">Draws seven red straight lines between the seven points to form a polygon.</span></span>  
  
-   <span data-ttu-id="b889f-552">テンションおよびフィルモードの設定を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-552">Creates tension and fill mode settings.</span></span>  
  
-   <span data-ttu-id="b889f-553">7つの点を通る緑の閉じた曲線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-553">Draws a green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="b889f-554">このメソッドは、1.0 のテンションを使用して、fill モードを `FillMode.Alternate`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-554">The method uses a tension of 1.0 and sets the fill mode to `FillMode.Alternate`.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-555"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-555"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-556">または</span><span class="sxs-lookup"><span data-stu-id="b889f-556">-or-</span></span> 
 <span data-ttu-id="b889f-557"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-557"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawClosedCurve">
      <MemberSignature Language="C#" Value="public void DrawClosedCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension, System.Drawing.Drawing2D.FillMode fillmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawClosedCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points, float32 tension, valuetype System.Drawing.Drawing2D.FillMode fillmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawClosedCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension, System::Drawing::Drawing2D::FillMode fillmode);" />
      <MemberSignature Language="F#" Value="member this.DrawClosedCurve : System.Drawing.Pen * System.Drawing.PointF[] * single * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.DrawClosedCurve (pen, points, tension, fillmode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-558">曲線の色、幅、および高さを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-558"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-559">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-559">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <param name="tension"><span data-ttu-id="b889f-560">曲線のテンションを指定する 0.0F 以上の値。</span><span class="sxs-lookup"><span data-stu-id="b889f-560">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <param name="fillmode"><span data-ttu-id="b889f-561">曲線を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-561">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span></span> <span data-ttu-id="b889f-562">このパラメーターは必須ですが、無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-562">This parameter is required but is ignored.</span></span></param>
        <summary><span data-ttu-id="b889f-563">指定したテンションを使用して、<see cref="T:System.Drawing.PointF" /> 構造体の配列で定義された、閉じたカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-563">Draws a closed cardinal spline defined by an array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-564">このメソッドは、配列内の各点を通過する閉じたカーディナルスプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-564">This method draws a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="b889f-565">最後の点が最初の点と一致しない場合は、最後の点から最初の点まで追加の曲線セグメントを追加して閉じます。</span><span class="sxs-lookup"><span data-stu-id="b889f-565">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="b889f-566">点の配列には、少なくとも4つの <xref:System.Drawing.PointF> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-566">The array of points must contain at least four <xref:System.Drawing.PointF> structures.</span></span>  
  
 <span data-ttu-id="b889f-567">`tension` パラメーターによって、スプラインの形状が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-567">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="b889f-568">`tension` パラメーターの値が 0.0 F の場合、このメソッドは直線セグメントを描画して点を接続します。</span><span class="sxs-lookup"><span data-stu-id="b889f-568">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="b889f-569">通常、`tension` パラメーターは 1.0 F 以下です。</span><span class="sxs-lookup"><span data-stu-id="b889f-569">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="b889f-570">1.0 F を超える値を指定すると、異常な結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-570">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-571">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-571">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-572">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-572">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-573">赤と緑のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-573">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="b889f-574">曲線を定義する7つの点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-574">Creates seven points to define the curve.</span></span>  
  
-   <span data-ttu-id="b889f-575">多角形を形成する7つの点の間に赤い赤い直線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-575">Draws seven red straight lines between the seven points to form a polygon.</span></span>  
  
-   <span data-ttu-id="b889f-576">テンションおよびフィルモードの設定を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-576">Creates tension and fill mode settings.</span></span>  
  
-   <span data-ttu-id="b889f-577">7つの点を通る緑の閉じた曲線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-577">Draws a green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="b889f-578">このメソッドは、1.0 のテンションを使用して、fill モードを `FillMode.Alternate`に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-578">The method uses a tension of 1.0 and sets the fill mode to `FillMode.Alternate`.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-579"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-579"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-580">または</span><span class="sxs-lookup"><span data-stu-id="b889f-580">-or-</span></span> 
 <span data-ttu-id="b889f-581"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-581"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-582">指定した <see cref="T:System.Drawing.Point" /> 構造体の配列を通過するカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-582">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawCurve (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-583">曲線の色、幅、および高さを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-583"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and height of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-584">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-584">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <summary><span data-ttu-id="b889f-585">指定した <see cref="T:System.Drawing.Point" /> 構造体の配列を通過するカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-585">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-586">このメソッドは、配列内の各点を通過するカーディナルスプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-586">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="b889f-587">点の配列には、曲線を描画するために少なくとも3つの <xref:System.Drawing.Point> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-587">The array of points must contain at least three <xref:System.Drawing.Point> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="b889f-588">このメソッドは、0.5 の既定のテンションを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-588">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-589">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-589">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-590">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-590">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-591">赤と緑のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-591">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="b889f-592">曲線を定義する7つのポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-592">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="b889f-593">7つのポイントの間に6つの赤い直線を描画して、不完全な多角形を形成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-593">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="b889f-594">7つのポイントを介して、開いている緑の曲線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-594">Draws an open green curve through the seven points.</span></span>  
  
 <span data-ttu-id="b889f-595">メソッドでは、0.5 の既定のテンションが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-595">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-596"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-596"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-597">または</span><span class="sxs-lookup"><span data-stu-id="b889f-597">-or-</span></span> 
 <span data-ttu-id="b889f-598"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-598"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawCurve (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-599">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-599"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-600">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-600">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <summary><span data-ttu-id="b889f-601">指定した <see cref="T:System.Drawing.PointF" /> 構造体の配列を通過するカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-601">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-602">このメソッドは、配列内の各点を通過するカーディナルスプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-602">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="b889f-603">点の配列には、曲線を描画するために少なくとも3つの <xref:System.Drawing.PointF> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-603">The array of points must contain at least three <xref:System.Drawing.PointF> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="b889f-604">このメソッドは、0.5 の既定のテンションを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-604">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-605">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-605">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-606">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-606">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-607">赤と緑のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-607">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="b889f-608">曲線を定義する7つのポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-608">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="b889f-609">7つのポイントの間に6つの赤い直線を描画して、不完全な多角形を形成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-609">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="b889f-610">7つのポイントを介して、開いている緑の曲線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-610">Draws an open green curve through the seven points.</span></span>  
  
 <span data-ttu-id="b889f-611">メソッドでは、0.5 の既定のテンションが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-611">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-612"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-612"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-613">または</span><span class="sxs-lookup"><span data-stu-id="b889f-613">-or-</span></span> 
 <span data-ttu-id="b889f-614"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-614"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.Point[] * single -&gt; unit" Usage="graphics.DrawCurve (pen, points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-615">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-615"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-616">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-616">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <param name="tension"><span data-ttu-id="b889f-617">曲線のテンションを指定する 0.0F 以上の値。</span><span class="sxs-lookup"><span data-stu-id="b889f-617">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <summary><span data-ttu-id="b889f-618">指定したテンションを使用して、指定した <see cref="T:System.Drawing.Point" /> 構造体の配列を通過するカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-618">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-619">このメソッドは、配列内の各点を通過するカーディナルスプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-619">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="b889f-620">点の配列には、曲線を描画するために少なくとも3つの <xref:System.Drawing.Point> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-620">The array of points must contain at least three <xref:System.Drawing.Point> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="b889f-621">`tension` パラメーターによって、スプラインの形状が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-621">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="b889f-622">`tension` パラメーターの値が 0.0 F の場合、このメソッドは直線セグメントを描画して点を接続します。</span><span class="sxs-lookup"><span data-stu-id="b889f-622">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="b889f-623">通常、`tension` パラメーターは 1.0 F 以下です。</span><span class="sxs-lookup"><span data-stu-id="b889f-623">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="b889f-624">1.0 F を超える値を指定すると、異常な結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-624">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-625">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-625">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-626">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-626">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-627">赤と緑のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-627">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="b889f-628">曲線を定義する7つの点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-628">Creates seven points to define the curve.</span></span>  
  
-   <span data-ttu-id="b889f-629">7つのポイントの間に6つの赤い直線を描画して、不完全な多角形を形成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-629">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="b889f-630">テンション設定を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-630">Creates a tension setting.</span></span>  
  
-   <span data-ttu-id="b889f-631">7つのポイントを介して、開いている緑の閉じた曲線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-631">Draws an open green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="b889f-632">このメソッドは、1.0 のテンションを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-632">The method uses a tension of 1.0.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-633"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-633"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-634">または</span><span class="sxs-lookup"><span data-stu-id="b889f-634">-or-</span></span> 
 <span data-ttu-id="b889f-635"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-635"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.PointF[] * single -&gt; unit" Usage="graphics.DrawCurve (pen, points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-636">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-636"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-637">曲線を定義する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-637">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points that define the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="b889f-638">曲線のテンションを指定する 0.0F 以上の値。</span><span class="sxs-lookup"><span data-stu-id="b889f-638">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <summary><span data-ttu-id="b889f-639">指定したテンションを使用して、指定した <see cref="T:System.Drawing.PointF" /> 構造体の配列を通過するカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-639">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-640">このメソッドは、配列内の各点を通過するカーディナルスプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-640">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="b889f-641">点の配列には、曲線を描画するために少なくとも3つの <xref:System.Drawing.PointF> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-641">The array of points must contain at least three <xref:System.Drawing.PointF> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="b889f-642">`tension` パラメーターによって、スプラインの形状が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-642">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="b889f-643">`tension` パラメーターの値が 0.0 F の場合、このメソッドは直線セグメントを描画して点を接続します。</span><span class="sxs-lookup"><span data-stu-id="b889f-643">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="b889f-644">通常、`tension` パラメーターは 1.0 F 以下です。</span><span class="sxs-lookup"><span data-stu-id="b889f-644">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="b889f-645">1.0 F を超える値を指定すると、異常な結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-645">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-646">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-646">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-647">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-647">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-648">赤と緑のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-648">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="b889f-649">曲線を定義する7つの点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-649">Creates seven points to define the curve.</span></span>  
  
-   <span data-ttu-id="b889f-650">7つのポイントの間に6つの赤い直線を描画して、不完全な多角形を形成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-650">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="b889f-651">テンション設定を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-651">Creates a tension setting.</span></span>  
  
-   <span data-ttu-id="b889f-652">7つのポイントを介して、開いている緑の閉じた曲線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-652">Draws an open green closed curve through the seven points.</span></span>  
  
 <span data-ttu-id="b889f-653">このメソッドは、1.0 のテンションを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-653">The method uses a tension of 1.0.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-654"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-654"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-655">または</span><span class="sxs-lookup"><span data-stu-id="b889f-655">-or-</span></span> 
 <span data-ttu-id="b889f-656"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-656"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.PointF[] * int * int -&gt; unit" Usage="graphics.DrawCurve (pen, points, offset, numberOfSegments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-657">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-657"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-658">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-658">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <param name="offset"><span data-ttu-id="b889f-659"><paramref name="points" /> パラメーターの配列の最初の要素から曲線の開始点までのオフセット。</span><span class="sxs-lookup"><span data-stu-id="b889f-659">Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="b889f-660">曲線に含める開始点以降のセグメント数。</span><span class="sxs-lookup"><span data-stu-id="b889f-660">Number of segments after the starting point to include in the curve.</span></span></param>
        <summary><span data-ttu-id="b889f-661">指定した <see cref="T:System.Drawing.PointF" /> 構造体の配列を通過するカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-661">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures.</span></span> <span data-ttu-id="b889f-662">この描画は、配列の先頭からのオフセットから開始されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-662">The drawing begins offset from the beginning of the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-663">このメソッドは、配列内の各点を通過するカーディナルスプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-663">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="b889f-664">点の配列には、曲線を描画するために少なくとも3つの <xref:System.Drawing.PointF> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-664">The array of points must contain at least three <xref:System.Drawing.PointF> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="b889f-665">`offset` パラメーターの値は、配列内でスキップする要素の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-665">The value of the `offset` parameter specifies the number of elements to skip in the array.</span></span> <span data-ttu-id="b889f-666">スキップされた要素の後の最初の要素は、曲線の開始点を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-666">The first element after the skipped elements represents the starting point of the curve.</span></span>  
  
 <span data-ttu-id="b889f-667">`numberOfSegments` パラメーターの値は、曲線に描画するセグメントの数を開始点の後に指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-667">The value of the `numberOfSegments` parameter specifies the number of segments, after the starting point, to draw in the curve.</span></span> <span data-ttu-id="b889f-668">`numberOfSegments` パラメーターの値は1以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-668">The value of the `numberOfSegments` parameter must be at least 1.</span></span> <span data-ttu-id="b889f-669">`offset` パラメーターの値に `numberOfSegments` パラメーターの値を足した値は、`points` パラメーターの配列内の要素の数より小さくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-669">The value of the `offset` parameter plus the value of the `numberOfSegments` parameter must be less than the number of elements in the array of the `points` parameter.</span></span>  
  
 <span data-ttu-id="b889f-670">このメソッドは、0.5 の既定のテンションを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-670">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-671">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-671">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-672">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-672">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-673">赤と緑のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-673">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="b889f-674">曲線を定義する7つのポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-674">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="b889f-675">7つのポイントの間に6つの赤い直線を描画して、不完全な多角形を形成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-675">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="b889f-676">開始点のオフセットとセグメントの数を定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-676">Defines the starting point offset and number of segments.</span></span>  
  
-   <span data-ttu-id="b889f-677">最後の5つの点を通じて、開いている緑の曲線 (3 番目の点から開始) を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-677">Draws an open green curve (starting at the third point) through the last five points.</span></span>  
  
 <span data-ttu-id="b889f-678">メソッドでは、0.5 の既定のテンションが使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-678">The method uses a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-679"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-679"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-680">または</span><span class="sxs-lookup"><span data-stu-id="b889f-680">-or-</span></span> 
 <span data-ttu-id="b889f-681"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-681"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphics.DrawCurve (pen, points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-682">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-682"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-683">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-683">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <param name="offset"><span data-ttu-id="b889f-684"><paramref name="points" /> パラメーターの配列の最初の要素から曲線の開始点までのオフセット。</span><span class="sxs-lookup"><span data-stu-id="b889f-684">Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="b889f-685">曲線に含める開始点以降のセグメント数。</span><span class="sxs-lookup"><span data-stu-id="b889f-685">Number of segments after the starting point to include in the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="b889f-686">曲線のテンションを指定する 0.0F 以上の値。</span><span class="sxs-lookup"><span data-stu-id="b889f-686">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <summary><span data-ttu-id="b889f-687">指定したテンションを使用して、指定した <see cref="T:System.Drawing.Point" /> 構造体の配列を通過するカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-687">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.Point" /> structures using a specified tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-688">このメソッドは、配列内の各点を通過するカーディナルスプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-688">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="b889f-689">点の配列には、曲線を描画するために少なくとも3つの <xref:System.Drawing.Point> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-689">The array of points must contain at least three <xref:System.Drawing.Point> structures for a curve to be drawn.</span></span>  
  
 <span data-ttu-id="b889f-690">`offset` パラメーターの値は、配列内でスキップする要素の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-690">The value of the `offset` parameter specifies the number of elements to skip in the array.</span></span> <span data-ttu-id="b889f-691">スキップされた要素の後の最初の要素は、曲線の開始点を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-691">The first element after the skipped elements represents the starting point of the curve.</span></span>  
  
 <span data-ttu-id="b889f-692">`numberOfSegments` パラメーターの値は、曲線に描画するセグメントの数を開始点の後に指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-692">The value of the `numberOfSegments` parameter specifies the number of segments, after the starting point, to draw in the curve.</span></span> <span data-ttu-id="b889f-693">`numberOfSegments` パラメーターの値は1以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-693">The value of the `numberOfSegments` parameter must be at least 1.</span></span> <span data-ttu-id="b889f-694">`offset` パラメーターの値に `numberOfSegments` パラメーターの値を足した値は、`points` パラメーターの配列内の要素の数より小さくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-694">The value of the `offset` parameter plus the value of the `numberOfSegments` parameter must be less than the number of elements in the array of the `points` parameter.</span></span>  
  
 <span data-ttu-id="b889f-695">`tension` パラメーターによって、スプラインの形状が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-695">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="b889f-696">`tension` パラメーターの値が 0.0 F の場合、このメソッドは直線セグメントを描画して点を接続します。</span><span class="sxs-lookup"><span data-stu-id="b889f-696">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="b889f-697">通常、`tension` パラメーターは 1.0 F 以下です。</span><span class="sxs-lookup"><span data-stu-id="b889f-697">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="b889f-698">1.0 F を超える値を指定すると、異常な結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-698">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-699">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-699">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-700">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-700">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-701">赤と緑のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-701">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="b889f-702">曲線を定義する7つのポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-702">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="b889f-703">7つのポイントの間に6つの赤い直線を描画して、不完全な多角形を形成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-703">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="b889f-704">開始点のオフセットとセグメントの数を定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-704">Defines the starting point offset and number of segments.</span></span>  
  
-   <span data-ttu-id="b889f-705">テンションを定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-705">Defines the tension.</span></span>  
  
-   <span data-ttu-id="b889f-706">最後の5つの点を通じて、開いている緑の曲線 (3 番目の点から開始) を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-706">Draws an open green curve (starting at the third point) through the last five points.</span></span>  
  
 <span data-ttu-id="b889f-707">メソッドは、テンションを1.0 に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-707">The method sets the tension to 1.0.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-708"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-708"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-709">または</span><span class="sxs-lookup"><span data-stu-id="b889f-709">-or-</span></span> 
 <span data-ttu-id="b889f-710"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-710"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawCurve">
      <MemberSignature Language="C#" Value="public void DrawCurve (System.Drawing.Pen pen, System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawCurve(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawCurve(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.DrawCurve : System.Drawing.Pen * System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphics.DrawCurve (pen, points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-711">曲線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-711"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the curve.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-712">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-712">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <param name="offset"><span data-ttu-id="b889f-713"><paramref name="points" /> パラメーターの配列の最初の要素から曲線の開始点までのオフセット。</span><span class="sxs-lookup"><span data-stu-id="b889f-713">Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.</span></span></param>
        <param name="numberOfSegments"><span data-ttu-id="b889f-714">曲線に含める開始点以降のセグメント数。</span><span class="sxs-lookup"><span data-stu-id="b889f-714">Number of segments after the starting point to include in the curve.</span></span></param>
        <param name="tension"><span data-ttu-id="b889f-715">曲線のテンションを指定する 0.0F 以上の値。</span><span class="sxs-lookup"><span data-stu-id="b889f-715">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <summary><span data-ttu-id="b889f-716">指定したテンションを使用して、指定した <see cref="T:System.Drawing.PointF" /> 構造体の配列を通過するカーディナル スプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-716">Draws a cardinal spline through a specified array of <see cref="T:System.Drawing.PointF" /> structures using a specified tension.</span></span> <span data-ttu-id="b889f-717">この描画は、配列の先頭からのオフセットから開始されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-717">The drawing begins offset from the beginning of the array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-718">このメソッドは、配列内の各点を通過するカーディナルスプラインを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-718">This method draws a cardinal spline that passes through each point in the array.</span></span>  
  
 <span data-ttu-id="b889f-719">点の配列には、曲線を描画するために少なくとも3つの <xref:System.Drawing.PointF> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-719">The array of points must contain at least three <xref:System.Drawing.PointF> structures for curve to be drawn.</span></span>  
  
 <span data-ttu-id="b889f-720">`offset` パラメーターの値は、配列内でスキップする要素の数を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-720">The value of the `offset` parameter specifies the number of elements to skip in the array.</span></span> <span data-ttu-id="b889f-721">スキップされた要素の後の最初の要素は、曲線の開始点を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-721">The first element after the skipped elements represents the starting point of the curve.</span></span>  
  
 <span data-ttu-id="b889f-722">`numberOfSegments` パラメーターの値は、曲線に描画するセグメントの数を開始点の後に指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-722">The value of the `numberOfSegments` parameter specifies the number of segments, after the starting point, to draw in the curve.</span></span> <span data-ttu-id="b889f-723">`numberOfSegments` パラメーターの値は1以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-723">The value of the `numberOfSegments` parameter must be at least 1.</span></span> <span data-ttu-id="b889f-724">`offset` パラメーターの値に `numberOfSegments` パラメーターの値を足した値は、`points` パラメーターの配列内の要素の数より小さくする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-724">The value of the `offset` parameter plus the value of the `numberOfSegments` parameter must be less than the number of elements in the array of the `points` parameter.</span></span>  
  
 <span data-ttu-id="b889f-725">`tension` パラメーターによって、スプラインの形状が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-725">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="b889f-726">`tension` パラメーターの値が 0.0 F の場合、このメソッドは直線セグメントを描画して点を接続します。</span><span class="sxs-lookup"><span data-stu-id="b889f-726">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="b889f-727">通常、`tension` パラメーターは 1.0 F 以下です。</span><span class="sxs-lookup"><span data-stu-id="b889f-727">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="b889f-728">1.0 F を超える値を指定すると、異常な結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-728">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-729">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-729">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-730">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-730">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-731">赤と緑のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-731">Creates red and green pens.</span></span>  
  
-   <span data-ttu-id="b889f-732">曲線を定義する7つのポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-732">Creates seven points to define a curve.</span></span>  
  
-   <span data-ttu-id="b889f-733">7つのポイントの間に6つの赤い直線を描画して、不完全な多角形を形成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-733">Draws six red straight lines between the seven points to form an incomplete polygon.</span></span>  
  
-   <span data-ttu-id="b889f-734">開始点のオフセットとセグメントの数を定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-734">Defines the starting point offset and number of segments.</span></span>  
  
-   <span data-ttu-id="b889f-735">テンションを定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-735">Defines the tension.</span></span>  
  
-   <span data-ttu-id="b889f-736">最後の5つの点を通じて、開いている緑の曲線 (3 番目の点から開始) を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-736">Draws an open green curve (starting at the third point) through the last five points.</span></span>  
  
 <span data-ttu-id="b889f-737">メソッドは、テンションを1.0 に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-737">The method sets the tension to 1.0.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-738"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-738"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-739">または</span><span class="sxs-lookup"><span data-stu-id="b889f-739">-or-</span></span> 
 <span data-ttu-id="b889f-740"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-740"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-741">座標ペア、高さ、および幅で指定された外接する四角形によって定義される楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-741">Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawEllipse">
      <MemberSignature Language="C#" Value="public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawEllipse(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawEllipse(System::Drawing::Pen ^ pen, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawEllipse : System.Drawing.Pen * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawEllipse (pen, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-742">楕円の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-742"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-743">楕円の境界を定義する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-743"><see cref="T:System.Drawing.Rectangle" /> structure that defines the boundaries of the ellipse.</span></span></param>
        <summary><span data-ttu-id="b889f-744">外接する <see cref="T:System.Drawing.Rectangle" /> 構造体で指定された楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-744">Draws an ellipse specified by a bounding <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-745">このメソッドは、`rect` パラメーターによって指定された外接する四角形によって定義される楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-745">This method draws an ellipse that is defined by the bounding rectangle specified by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-746">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-746">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-747">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-747">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-748">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-748">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-749">楕円にバインドする四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-749">Creates a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-750">楕円を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-750">Draws the ellipse to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-751"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-751"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEllipse">
      <MemberSignature Language="C#" Value="public void DrawEllipse (System.Drawing.Pen pen, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawEllipse(class System.Drawing.Pen pen, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawEllipse(System::Drawing::Pen ^ pen, System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.DrawEllipse : System.Drawing.Pen * System.Drawing.RectangleF -&gt; unit" Usage="graphics.DrawEllipse (pen, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-752">楕円の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-752"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-753">楕円の境界を定義する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-753"><see cref="T:System.Drawing.RectangleF" /> structure that defines the boundaries of the ellipse.</span></span></param>
        <summary><span data-ttu-id="b889f-754">外接する <see cref="T:System.Drawing.RectangleF" /> で定義された楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-754">Draws an ellipse defined by a bounding <see cref="T:System.Drawing.RectangleF" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-755">このメソッドは、`rect` パラメーターによって指定された外接する四角形によって定義される楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-755">This method draws an ellipse that is defined by the bounding rectangle specified by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-756">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-756">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-757">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-757">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-758">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-758">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-759">楕円にバインドする四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-759">Creates a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-760">楕円を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-760">Draws the ellipse to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-761"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-761"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEllipse">
      <MemberSignature Language="C#" Value="public void DrawEllipse (System.Drawing.Pen pen, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawEllipse(class System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawEllipse(System::Drawing::Pen ^ pen, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.DrawEllipse : System.Drawing.Pen * int * int * int * int -&gt; unit" Usage="graphics.DrawEllipse (pen, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-762">楕円の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-762"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-763">楕円を定義する外接する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-763">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-764">楕円を定義する外接する四角形の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-764">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-765">楕円を定義する外接する四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-765">Width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-766">楕円を定義する外接する四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-766">Height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="b889f-767">四角形の左上隅の座標、高さ、および幅によって指定される外接する四角形によって定義される楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-767">Draws an ellipse defined by a bounding rectangle specified by coordinates for the upper-left corner of the rectangle, a height, and a width.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-768">このメソッドは、`x`、`y`、`width`、および `height` パラメーターで表される外接する四角形によって定義される楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-768">This method draws an ellipse that is defined by the bounding rectangle described by the `x`, `y`, `width`, and `height` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-769">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-769">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-770">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-770">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-771">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-771">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-772">楕円にバインドする四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-772">Creates the position and size of a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-773">楕円を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-773">Draws the ellipse to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-774"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-774"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawEllipse">
      <MemberSignature Language="C#" Value="public void DrawEllipse (System.Drawing.Pen pen, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawEllipse(class System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawEllipse(System::Drawing::Pen ^ pen, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.DrawEllipse : System.Drawing.Pen * single * single * single * single -&gt; unit" Usage="graphics.DrawEllipse (pen, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-775">楕円の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-775"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the ellipse.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-776">楕円を定義する外接する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-776">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-777">楕円を定義する外接する四角形の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-777">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-778">楕円を定義する外接する四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-778">Width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-779">楕円を定義する外接する四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-779">Height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="b889f-780">座標ペア、高さ、および幅で指定された外接する四角形によって定義される楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-780">Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-781">このメソッドは、`x`、`y`、`width`、および `height` パラメーターで表される外接する四角形によって定義される楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-781">This method draws an ellipse that is defined by the bounding rectangle described by the `x`, `y`, `width`, and `height` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-782">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-782">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-783">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-783">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-784">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-784">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-785">楕円にバインドする四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-785">Creates the position and size of a rectangle to bound an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-786">楕円を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-786">Draws the ellipse to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-787"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-787"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawIcon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-788">指定した <see cref="T:System.Drawing.Icon" /> によって表されるイメージを指定した座標に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-788">Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> at the specified coordinates.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawIcon">
      <MemberSignature Language="C#" Value="public void DrawIcon (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawIcon(class System.Drawing.Icon icon, valuetype System.Drawing.Rectangle targetRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawIcon(System::Drawing::Icon ^ icon, System::Drawing::Rectangle targetRect);" />
      <MemberSignature Language="F#" Value="member this.DrawIcon : System.Drawing.Icon * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawIcon (icon, targetRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Drawing.Icon" />
        <Parameter Name="targetRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="icon"><span data-ttu-id="b889f-789">描画する <see cref="T:System.Drawing.Icon" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-789"><see cref="T:System.Drawing.Icon" /> to draw.</span></span></param>
        <param name="targetRect"><span data-ttu-id="b889f-790">ディスプレイ表面における生成イメージの場所とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-790"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the resulting image on the display surface.</span></span> <span data-ttu-id="b889f-791"><paramref name="icon" /> パラメーターに含まれるイメージは、この四角形領域の大きさに合わせてスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-791">The image contained in the <paramref name="icon" /> parameter is scaled to the dimensions of this rectangular area.</span></span></param>
        <summary><span data-ttu-id="b889f-792"><see cref="T:System.Drawing.Icon" /> 構造体で指定された領域内の指定した <see cref="T:System.Drawing.Rectangle" /> によって表されるイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-792">Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> within the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-793">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-793">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-794">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-794">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-795">サンプルフォルダー内の標準の Windows アイコンファイル Samを持つアイコンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-795">Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.</span></span>  
  
-   <span data-ttu-id="b889f-796">アイコンを描画する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-796">Creates a rectangle in which to draw the icon.</span></span>  
  
-   <span data-ttu-id="b889f-797">アイコンを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-797">Draws the icon to the screen.</span></span>  
  
 <span data-ttu-id="b889f-798">四角形の位置によって画面上のアイコンが検索され、四角形のサイズによって描画アイコンの拡大縮小が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-798">The position of the rectangle locates the icon on the screen, and the size of the rectangle determines the scaling of the drawn icon.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#31](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#31)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#31](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#31)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#31](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-799"><paramref name="icon" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-799"><paramref name="icon" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawIcon">
      <MemberSignature Language="C#" Value="public void DrawIcon (System.Drawing.Icon icon, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawIcon(class System.Drawing.Icon icon, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawIcon(System::Drawing::Icon ^ icon, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.DrawIcon : System.Drawing.Icon * int * int -&gt; unit" Usage="graphics.DrawIcon (icon, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Drawing.Icon" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="icon"><span data-ttu-id="b889f-800">描画する <see cref="T:System.Drawing.Icon" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-800"><see cref="T:System.Drawing.Icon" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-801">描画イメージの左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-801">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-802">描画イメージの左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-802">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-803">指定した <see cref="T:System.Drawing.Icon" /> によって表されるイメージを指定した座標に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-803">Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> at the specified coordinates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-804">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-804">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-805">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-805">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-806">サンプルフォルダー内の標準の Windows アイコンファイル Samを持つアイコンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-806">Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.</span></span>  
  
-   <span data-ttu-id="b889f-807">アイコンを描画する左上隅の座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-807">Creates the coordinates of the upper-left corner at which to draw the icon.</span></span>  
  
-   <span data-ttu-id="b889f-808">アイコンを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-808">Draws the icon to the screen.</span></span>  
  
 <span data-ttu-id="b889f-809">描画アイコンがスケールされていません。</span><span class="sxs-lookup"><span data-stu-id="b889f-809">The drawn icon is unscaled.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#32](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#32)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#32](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#32)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#32](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-810"><paramref name="icon" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-810"><paramref name="icon" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawIconUnstretched">
      <MemberSignature Language="C#" Value="public void DrawIconUnstretched (System.Drawing.Icon icon, System.Drawing.Rectangle targetRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawIconUnstretched(class System.Drawing.Icon icon, valuetype System.Drawing.Rectangle targetRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawIconUnstretched(System::Drawing::Icon ^ icon, System::Drawing::Rectangle targetRect);" />
      <MemberSignature Language="F#" Value="member this.DrawIconUnstretched : System.Drawing.Icon * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawIconUnstretched (icon, targetRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="System.Drawing.Icon" />
        <Parameter Name="targetRect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="icon"><span data-ttu-id="b889f-811">描画する <see cref="T:System.Drawing.Icon" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-811"><see cref="T:System.Drawing.Icon" /> to draw.</span></span></param>
        <param name="targetRect"><span data-ttu-id="b889f-812">生成イメージの場所とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-812"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the resulting image.</span></span> <span data-ttu-id="b889f-813">イメージはこの四角形に合わせてスケーリングされず、元のサイズが保持されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-813">The image is not scaled to fit this rectangle, but retains its original size.</span></span> <span data-ttu-id="b889f-814">イメージが四角形より大きい場合は、その四角形に収まるようにクリッピングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-814">If the image is larger than the rectangle, it is clipped to fit inside it.</span></span></param>
        <summary><span data-ttu-id="b889f-815">指定した <see cref="T:System.Drawing.Icon" /> によって表されるイメージをスケーリングしないで描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-815">Draws the image represented by the specified <see cref="T:System.Drawing.Icon" /> without scaling the image.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-816">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-816">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-817">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-817">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-818">サンプルフォルダー内の標準の Windows アイコンファイル Samを持つアイコンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-818">Creates an icon from a standard Windows icon file SampIcon.ico in the example folder.</span></span>  
  
-   <span data-ttu-id="b889f-819">アイコンを描画する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-819">Creates a rectangle in which to draw the icon.</span></span>  
  
-   <span data-ttu-id="b889f-820">アイコンを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-820">Draws the icon to the screen.</span></span>  
  
 <span data-ttu-id="b889f-821">四角形の位置によって画面上のアイコンが検索されます。描画アイコンは、スケーリングとクリッピングがありません。</span><span class="sxs-lookup"><span data-stu-id="b889f-821">The position of the rectangle locates the icon on the screen, and the drawn icon is unscaled and unclipped.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#33](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#33)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#33](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#33)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#33](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#33)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-822"><paramref name="icon" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-822"><paramref name="icon" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawImage">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-823">指定した位置に元のサイズで、指定した <see cref="T:System.Drawing.Image" /> を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-823">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the original size.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point -&gt; unit" Usage="graphics.DrawImage (image, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-824">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-824"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="point"><span data-ttu-id="b889f-825">描画イメージの左上隅の位置を表す <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-825"><see cref="T:System.Drawing.Point" /> structure that represents the location of the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-826">指定した位置に、指定した <see cref="T:System.Drawing.Image" /> を元の物理サイズで描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-826">Draws the specified <see cref="T:System.Drawing.Image" />, using its original physical size, at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-827"><xref:System.Drawing.Image> には、ピクセル幅の値と横方向の解像度 (ドット/インチ) の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-827">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="b889f-828">イメージの物理的な幅 (インチ単位) は、ピクセル幅を水平方向の解像度で割ったものです。</span><span class="sxs-lookup"><span data-stu-id="b889f-828">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="b889f-829">たとえば、ピクセル幅が216で水平方向の解像度が72ドット/インチのイメージの物理的な幅は3インチです。</span><span class="sxs-lookup"><span data-stu-id="b889f-829">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="b889f-830">同様の解説は、ピクセルの高さと物理的な高さに適用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-830">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="b889f-831">このメソッドは、物理サイズを使用してイメージを描画します。そのため、ディスプレイデバイスの解像度 (1 インチあたりのドット数) に関係なく、イメージのサイズは正確にインチ単位になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-831">This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="b889f-832">たとえば、イメージの幅が216で、水平方向の解像度が72ドット/インチであるとします。</span><span class="sxs-lookup"><span data-stu-id="b889f-832">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="b889f-833">このメソッドを呼び出して、1インチあたり96ドットの解像度を持つデバイス上にイメージを描画する場合、レンダリングされるイメージのピクセル幅は (216/72) \* 96 = 288 になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-833">If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-834">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-834">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-835">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-835">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-836">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-836">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-837">イメージの左上隅を描画するポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-837">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="b889f-838">スケーリングされていないイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-838">Draws the unscaled image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#34](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#34)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#34](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#34)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#34](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#34)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-839"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-839"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-840">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-840">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawImage (image, destPoints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-841">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-841"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-842">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-842">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.</span></span></param>
        <summary><span data-ttu-id="b889f-843">指定した <see cref="T:System.Drawing.Image" /> を指定した場所に指定した形状とサイズで描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-843">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified shape and size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-844">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-844">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-845">3つの <xref:System.Drawing.Point> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-845">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-846">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-846">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-847">`image` パラメーターによって表されるイメージは、`destPoints` パラメーターによって指定された平行四辺形の形状に合わせて拡大縮小され、傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-847">The image represented by the `image` parameter is scaled and sheared to fit the shape of the parallelogram specified by the `destPoints` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-848">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-848">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-849">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-849">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-850">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-850">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-851">イメージを描画するための平行四辺形を定義する点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-851">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-852">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-852">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-853">平行四辺形の位置によって、画面上のイメージが検索されます。また、元のイメージのサイズと平行四辺形のサイズおよび形状によって、描画イメージのスケーリングと傾斜が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-853">The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#35](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#35)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#35](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#35)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#35](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#35)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-854"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-854"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-855">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-855">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF -&gt; unit" Usage="graphics.DrawImage (image, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-856">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-856"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="point"><span data-ttu-id="b889f-857">描画イメージの左上隅を表す <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-857"><see cref="T:System.Drawing.PointF" /> structure that represents the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-858">指定した位置に、指定した <see cref="T:System.Drawing.Image" /> を元の物理サイズで描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-858">Draws the specified <see cref="T:System.Drawing.Image" />, using its original physical size, at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-859"><xref:System.Drawing.Image> には、ピクセル幅の値と横方向の解像度 (ドット/インチ) の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-859">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="b889f-860">イメージの物理的な幅 (インチ単位) は、ピクセル幅を水平方向の解像度で割ったものです。</span><span class="sxs-lookup"><span data-stu-id="b889f-860">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="b889f-861">たとえば、ピクセル幅が216で水平方向の解像度が72ドット/インチのイメージの物理的な幅は3インチです。</span><span class="sxs-lookup"><span data-stu-id="b889f-861">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="b889f-862">同様の解説は、ピクセルの高さと物理的な高さに適用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-862">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="b889f-863">このメソッドは、物理サイズを使用してイメージを描画します。そのため、ディスプレイデバイスの解像度 (1 インチあたりのドット数) に関係なく、イメージのサイズは正確にインチ単位になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-863">This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="b889f-864">たとえば、イメージの幅が216で、水平方向の解像度が72ドット/インチであるとします。</span><span class="sxs-lookup"><span data-stu-id="b889f-864">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="b889f-865">このメソッドを呼び出して、1インチあたり96ドットの解像度を持つデバイス上にイメージを描画する場合、レンダリングされるイメージのピクセル幅は (216/72) \* 96 = 288 になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-865">If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-866">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-866">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-867">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-867">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-868">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-868">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-869">イメージの左上隅を描画するポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-869">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="b889f-870">スケーリングされていないイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-870">Draws the unscaled image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#40)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#40)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-871"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-871"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-872">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-872">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawImage (image, destPoints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-873">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-873"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-874">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-874">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <summary><span data-ttu-id="b889f-875">指定した <see cref="T:System.Drawing.Image" /> を指定した場所に指定した形状とサイズで描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-875">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified shape and size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-876">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-876">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-877">3つの <xref:System.Drawing.PointF> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-877">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-878">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-878">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-879">`image` オブジェクトによって表されるイメージは、`destPoints` パラメーターで指定された平行四辺形の形状に合わせて拡大縮小され、傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-879">The image represented by the `image` object is scaled and sheared to fit the shape of the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-880">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-880">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-881">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-881">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-882">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-882">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-883">イメージを描画するための平行四辺形を定義する点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-883">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-884">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-884">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-885">平行四辺形の位置によって、画面上のイメージが検索されます。また、元のイメージのサイズと平行四辺形のサイズおよび形状によって、描画イメージのスケーリングと傾斜が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-885">The position of the parallelogram locates the image on the screen, and the size of the original image and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#41](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#41)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#41](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#41)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#41](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-886"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-886"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-887">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-887">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawImage (image, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-888">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-888"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-889">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-889"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-890">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-890">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-891">`image` オブジェクトによって表される画像は、`rect` 四角形の大きさにスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-891">The image represented by the `image` object is scaled to the dimensions of the `rect` rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-892">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-892">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-893">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-893">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-894">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-894">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-895">イメージを描画する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-895">Creates a rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-896">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-896">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-897">四角形の位置によって画面上のイメージが検索され、元のイメージのサイズと四角形のサイズによって描画イメージのスケーリングが決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-897">The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#46](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#46)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#46](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#46)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#46](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#46)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-898"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-898"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-899">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-899">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.RectangleF -&gt; unit" Usage="graphics.DrawImage (image, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-900">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-900"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-901">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-901"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-902">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-902">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-903">`image` オブジェクトによって表される画像は、`rect` 四角形の大きさにスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-903">The image represented by the `image` object is scaled to the dimensions of the `rect` rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-904">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-904">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-905">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-905">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-906">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-906">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-907">イメージを描画する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-907">Creates a rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-908">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-908">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-909">四角形の位置によって画面上のイメージが検索され、イメージの元のサイズと四角形のサイズによって描画イメージのスケーリングが決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-909">The position of the rectangle locates the image on the screen, and the original size of the image and the size of the rectangle determines the scaling of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#56](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#56)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#56](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#56)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#56](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#56)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-910"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-910"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-911">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-911">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * int * int -&gt; unit" Usage="graphics.DrawImage (image, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-912">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-912"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-913">描画イメージの左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-913">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-914">描画イメージの左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-914">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-915">指定したイメージを座標ペアで指定された位置に元の物理サイズで描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-915">Draws the specified image, using its original physical size, at the location specified by a coordinate pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-916"><xref:System.Drawing.Image> には、ピクセル幅の値と横方向の解像度 (ドット/インチ) の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-916">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="b889f-917">イメージの物理的な幅 (インチ単位) は、ピクセル幅を水平方向の解像度で割ったものです。</span><span class="sxs-lookup"><span data-stu-id="b889f-917">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="b889f-918">たとえば、ピクセル幅が216で水平方向の解像度が72ドット/インチのイメージの物理的な幅は3インチです。</span><span class="sxs-lookup"><span data-stu-id="b889f-918">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="b889f-919">同様の解説は、ピクセルの高さと物理的な高さに適用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-919">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="b889f-920"><xref:System.Drawing.Graphics.DrawImage%2A> メソッドは、物理サイズを使用してイメージを描画します。そのため、ディスプレイデバイスの解像度 (1 インチあたりのドット数) に関係なく、イメージはインチ単位で正しいサイズになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-920">The <xref:System.Drawing.Graphics.DrawImage%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="b889f-921">たとえば、イメージの幅が216で、水平方向の解像度が72ドット/インチであるとします。</span><span class="sxs-lookup"><span data-stu-id="b889f-921">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="b889f-922"><xref:System.Drawing.Graphics.DrawImage%2A> を呼び出して、1インチあたり96ドットの解像度を持つデバイス上にそのイメージを描画する場合、レンダリングされるイメージのピクセル幅は (216/72) \* 96 = 288 になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-922">If you call <xref:System.Drawing.Graphics.DrawImage%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-923">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-923">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-924">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-924">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-925">例のフォルダーにある SampImag の例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-925">Creates an image from a JPEG file SampImag.jpg in the folder of the example SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-926">イメージの左上隅を描画するポイントの座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-926">Creates the coordinates of a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="b889f-927">スケーリングされていないイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-927">Draws the unscaled image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#58](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#58)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#58](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#58)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#58](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#58)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-928"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-928"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-929">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-929">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, float x, float y);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * single * single -&gt; unit" Usage="graphics.DrawImage (image, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-930">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-930"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-931">描画イメージの左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-931">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-932">描画イメージの左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-932">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-933">指定した位置に、指定した <see cref="T:System.Drawing.Image" /> を元の物理サイズで描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-933">Draws the specified <see cref="T:System.Drawing.Image" />, using its original physical size, at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-934"><xref:System.Drawing.Image> には、ピクセル幅の値と横方向の解像度 (ドット/インチ) の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-934">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="b889f-935">イメージの物理的な幅 (インチ単位) は、ピクセル幅を水平方向の解像度で割ったものです。</span><span class="sxs-lookup"><span data-stu-id="b889f-935">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="b889f-936">たとえば、ピクセル幅が216で水平方向の解像度が72ドット/インチのイメージの物理的な幅は3インチです。</span><span class="sxs-lookup"><span data-stu-id="b889f-936">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="b889f-937">同様の解説は、ピクセルの高さと物理的な高さに適用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-937">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="b889f-938">このメソッドは、物理サイズを使用してイメージを描画します。そのため、ディスプレイデバイスの解像度 (1 インチあたりのドット数) に関係なく、イメージのサイズは正確にインチ単位になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-938">This method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="b889f-939">たとえば、イメージの幅が216で、水平方向の解像度が72ドット/インチであるとします。</span><span class="sxs-lookup"><span data-stu-id="b889f-939">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="b889f-940">このメソッドを呼び出して、1インチあたり96ドットの解像度を持つデバイス上にイメージを描画する場合、レンダリングされるイメージのピクセル幅は (216/72) \* 96 = 288 になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-940">If you call this method to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-941">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-941">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-942">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-942">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-943">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-943">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-944">イメージの左上隅を描画するポイントの座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-944">Creates the coordinates of a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="b889f-945">スケーリングされていないイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-945">Draws the unscaled image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#61](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#61)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#61](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#61)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#61](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#61)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-946"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-946"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-947">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-947">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-948">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-948"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-949">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-949">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-950">描画する <see cref="T:System.Drawing.Rectangle" /> オブジェクトの部分を指定する <paramref name="image" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-950"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-951"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで使用する単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-951">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-952">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-952">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-953">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-953">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-954">3つの <xref:System.Drawing.Point> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-954">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-955">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-955">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-956">`srcRect` パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-956">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="b889f-957">この部分は、`destPoints` パラメーターによって指定された平行四辺形内に収まるようにスケーリングおよび傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-957">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-958">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-958">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-959">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-959">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-960">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-960">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-961">イメージを描画するための平行四辺形を定義する点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-961">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-962">描画するイメージの部分を選択する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-962">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="b889f-963">グラフィックスの描画単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-963">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="b889f-964">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-964">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-965">平行四辺形の位置によって、画面上のイメージが検索され、四角形のサイズと平行四辺形のサイズおよび形状によって、描画イメージのスケーリングと傾斜が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-965">The position of the parallelogram locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#36](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#36)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#36](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#36)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#36](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#36)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-966"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-966"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-967">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-967">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-968">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-968"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-969">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-969">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-970">描画する <see cref="T:System.Drawing.RectangleF" /> オブジェクトの部分を指定する <paramref name="image" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-970"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-971"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで使用する単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-971">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-972">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-972">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-973">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-973">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-974">3つの <xref:System.Drawing.PointF> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-974">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-975">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-975">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-976">`srcRect` パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-976">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="b889f-977">この部分は、`destPoints` パラメーターによって指定された平行四辺形内に収まるようにスケーリングおよび傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-977">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-978">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-978">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-979">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-979">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-980">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-980">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-981">イメージを描画する対象の平行四辺形を定義する点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-981">Creates points that define a destination parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-982">イメージの一部を抽出するソースの四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-982">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="b889f-983">ソースの四角形の測定単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-983">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="b889f-984">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-984">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-985">コピー先の平行四辺形の位置によって、画面上のイメージが検索されます。コピー元の四角形のサイズと描画先の平行四辺形のサイズおよび形状によって、描画イメージの拡大縮小と傾斜が決まり、四角形のサイズによって決まります。元のイメージのどの部分が画面に描画されるか。</span><span class="sxs-lookup"><span data-stu-id="b889f-985">The position of the destination parallelogram locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#42](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#42)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#42](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#42)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#42](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-986"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-986"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-987">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-987">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-988">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-988"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-989">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-989"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="b889f-990">イメージは、四角形に合わせてスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-990">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-991">描画する <see cref="T:System.Drawing.Rectangle" /> オブジェクトの部分を指定する <paramref name="image" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-991"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-992"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで使用する単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-992">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-993">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-993">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-994">`srcRect` パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-994">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="b889f-995">この部分は、`destRect` パラメーターによって指定された四角形の内部に収まるようにスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-995">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-996">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-996">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-997">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-997">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-998">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-998">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-999">イメージを描画する対象の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-999">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1000">イメージの一部を抽出するソースの四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1000">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1001">ソースの四角形の測定単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1001">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="b889f-1002">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1002">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1003">コピー先の四角形の位置によって、画面上のイメージが検索されます。変換元と変換先の四角形のサイズによって描画イメージのスケーリングが決まり、ソース四角形のサイズによって、元のイメージのどの部分が描画されるかが決まります。ウィンドウ.</span><span class="sxs-lookup"><span data-stu-id="b889f-1003">The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#47](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#47)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#47](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#47)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#47](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#47)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1004"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1004"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1005">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1005">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.RectangleF destRect, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::RectangleF destRect, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1006">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1006"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-1007">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1007"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="b889f-1008">イメージは、四角形に合わせてスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1008">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-1009">描画する <see cref="T:System.Drawing.RectangleF" /> オブジェクトの部分を指定する <paramref name="image" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1009"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1010"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで使用する単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1010">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-1011">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1011">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1012">`srcRect` パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1012">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1013">この部分は、`destRect` パラメーターによって指定された四角形の内部に収まるようにスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1013">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1014">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1014">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1015">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1015">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1016">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1016">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1017">イメージを描画する対象の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1017">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1018">イメージの一部を抽出するソースの四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1018">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1019">ソースの四角形の測定単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1019">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="b889f-1020">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1020">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1021">コピー先の四角形の位置によって、画面上のイメージが検索されます。変換元と変換先の四角形のサイズによって描画イメージのスケーリングが決まり、ソース四角形のサイズによって、元のイメージのどの部分が描画されるかが決まります。ウィンドウ.</span><span class="sxs-lookup"><span data-stu-id="b889f-1021">The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#57](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#57)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#57](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#57)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#57](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#57)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1022"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1022"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1023">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1023">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1024">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1024"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-1025">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1025">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-1026">描画する <see cref="T:System.Drawing.Rectangle" /> オブジェクトの部分を指定する <paramref name="image" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1026"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1027"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで使用する単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1027">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-1028"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトのカラー変更情報とガンマ情報を指定する <paramref name="image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1028"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <summary><span data-ttu-id="b889f-1029">指定した位置に、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1029">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1030">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1030">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-1031">3つの <xref:System.Drawing.Point> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1031">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-1032">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1032">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-1033">`srcRect` パラメーターは、描画する`image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1033">The `srcRect` parameter specifies a rectangular portion of the`image` object to draw.</span></span> <span data-ttu-id="b889f-1034">この部分は、`destPoints` パラメーターによって指定された平行四辺形内に収まるようにスケーリングおよび傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1034">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1035">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1035">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1036">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1036">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1037">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1037">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1038">イメージを描画するための平行四辺形を定義する点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1038">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1039">描画するイメージの部分を選択する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1039">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1040">グラフィックスの描画単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1040">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="b889f-1041">元のイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1041">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1042">調整されたイメージを描画するための追加の平行四辺形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1042">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="b889f-1043">調整されたイメージの属性を作成し、通常のガンマ値より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1043">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="b889f-1044">調整されたイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1044">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1045">元の調整されていない平行四辺形の場合、位置は画面上のイメージを検索し、四角形のサイズと平行四辺形のサイズおよび形状によって描画イメージの拡大縮小と傾斜が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1045">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#37](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#37)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#37](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#37)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#37](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#37)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1046"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1046"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1047">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1047">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1048">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1048"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-1049">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1049">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-1050">描画する <see cref="T:System.Drawing.RectangleF" /> オブジェクトの部分を指定する <paramref name="image" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1050"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1051"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで使用する単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1051">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-1052"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトのカラー変更情報とガンマ情報を指定する <paramref name="image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1052"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <summary><span data-ttu-id="b889f-1053">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1053">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1054">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1054">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-1055">3つの <xref:System.Drawing.PointF> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1055">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-1056">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1056">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-1057">`srcRect` パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1057">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1058">この部分は、`destPoints` パラメーターによって指定された平行四辺形内に収まるようにスケーリングおよび傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1058">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1059">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1059">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1060">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1060">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1061">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1061">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1062">イメージを描画する対象の平行四辺形を定義する点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1062">Creates points that define a destination parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1063">イメージの一部を抽出するソースの四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1063">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1064">ソースの四角形の測定単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1064">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="b889f-1065">元のイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1065">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1066">調整されたイメージを描画するための追加の平行四辺形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1066">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="b889f-1067">調整されたイメージの属性を作成し、通常のガンマ値より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1067">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="b889f-1068">調整されたイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1068">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1069">元の調整されていないコピー先の平行四辺形では、位置によって画面上のイメージが検索され、コピー元の四角形のサイズと描画先の平行四辺形のサイズおよび形状によって、描画されたイメージのスケーリングと傾斜、およびのサイズが決まります。四角形によって、元のイメージのどの部分が画面に描画されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1069">For the original, unadjusted destination parallelogram, the position locates the image on the screen, the size of the source rectangle and the size and shape of the destination parallelogram determines the scaling and shearing of the drawn image, and the size of the rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#43](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#43)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#43](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#43)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#43](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1070"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1070"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1071">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1071">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, int x, int y, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, int32 x, int32 y, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, int x, int y, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * int * int * System.Drawing.Rectangle * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, x, y, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1072">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1072"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-1073">描画イメージの左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1073">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-1074">描画イメージの左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1074">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-1075">描画する <see cref="T:System.Drawing.Rectangle" /> オブジェクトの部分を指定する <paramref name="image" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1075"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1076"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで使用する単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1076">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-1077">イメージの一部を指定の位置に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1077">Draws a portion of an image at a specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1078"><xref:System.Drawing.Image> には、ピクセル幅の値と横方向の解像度 (ドット/インチ) の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1078">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="b889f-1079">イメージの物理的な幅 (インチ単位) は、ピクセル幅を水平方向の解像度で割ったものです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1079">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="b889f-1080">たとえば、ピクセル幅が360で水平方向の解像度が72ドット/インチのイメージの物理的な幅は5インチです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1080">For example, an image with a pixel width of 360 and a horizontal resolution of 72 dots per inch has a physical width of 5 inches.</span></span> <span data-ttu-id="b889f-1081">同様の解説は、ピクセルの高さと物理的な高さに適用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1081">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="b889f-1082">このメソッドは、物理サイズを使用してイメージの一部を描画します。そのため、イメージの部分は、ディスプレイデバイスの解像度 (1 インチあたりのドット数) に関係なく、正確なサイズがインチ単位で表示されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1082">This method draws a portion of an image using its physical size, so the image portion will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="b889f-1083">たとえば、イメージ部分の幅が216で、水平方向の解像度が72ドット/インチであるとします。</span><span class="sxs-lookup"><span data-stu-id="b889f-1083">For example, suppose an image portion has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="b889f-1084">このメソッドを呼び出して、1インチあたり96ドットの解像度を持つデバイス上にイメージ部分を描画する場合、レンダリングされるイメージ部分のピクセル幅は (216/72) \* 96 = 288 になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1084">If you call this method to draw that image portion on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image portion will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1085">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1085">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1086">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1086">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1087">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1087">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1088">イメージの左上隅を描画する座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1088">Creates the coordinates at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1089">イメージの一部を抽出するソースの四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1089">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1090">ソースの四角形の測定単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1090">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="b889f-1091">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1091">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1092">コピー元の四角形のサイズによって、スケーリングされていない元のイメージのどの部分が画面に描画されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1092">The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#59](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#59)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#59](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#59)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#59](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#59)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1093"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1093"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1094">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1094">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * int * int * int * int -&gt; unit" Usage="graphics.DrawImage (image, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1095">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1095"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-1096">描画イメージの左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1096">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-1097">描画イメージの左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1097">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-1098">描画イメージの幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1098">Width of the drawn image.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-1099">描画イメージの高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1099">Height of the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-1100">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1100">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1101">`x`、`y`、`width`、および `height` の各パラメーターで定義された四角形によって、描画イメージの位置とサイズが決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1101">The rectangle defined by the `x`, `y`, `width`, and `height` parameters determines the position and size of the drawn image.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1102">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1102">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1103">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1103">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1104">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1104">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1105">イメージを描画する四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1105">Creates the position and size of a rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1106">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1106">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1107">四角形の位置によって画面上のイメージが検索され、元のイメージのサイズと四角形のサイズによって描画イメージのスケーリングが決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1107">The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#60](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#60)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#60](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#60)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#60](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1108"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1108"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1109">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1109">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, float x, float y, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, float32 x, float32 y, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, float x, float y, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * single * single * System.Drawing.RectangleF * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, x, y, srcRect, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1110">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1110"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-1111">描画イメージの左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1111">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-1112">描画イメージの左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1112">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-1113">描画する <see cref="T:System.Drawing.RectangleF" /> の部分を指定する <see cref="T:System.Drawing.Image" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1113"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1114"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで使用する単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1114">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-1115">イメージの一部を指定の位置に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1115">Draws a portion of an image at a specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1116"><xref:System.Drawing.Image> には、ピクセル幅の値と横方向の解像度 (ドット/インチ) の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1116">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="b889f-1117">イメージの物理的な幅 (インチ単位) は、ピクセル幅を水平方向の解像度で割ったものです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1117">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="b889f-1118">たとえば、ピクセル幅が360で水平方向の解像度が72ドット/インチのイメージの物理的な幅は5インチです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1118">For example, an image with a pixel width of 360 and a horizontal resolution of 72 dots per inch has a physical width of 5 inches.</span></span> <span data-ttu-id="b889f-1119">同様の解説は、ピクセルの高さと物理的な高さに適用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1119">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="b889f-1120">このメソッドは、物理サイズを使用してイメージの一部を描画します。そのため、イメージの部分は、ディスプレイデバイスの解像度 (1 インチあたりのドット数) に関係なく、正確なサイズがインチ単位で表示されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1120">This method draws a portion of an image using its physical size, so the image portion will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="b889f-1121">たとえば、イメージ部分の幅が216で、水平方向の解像度が72ドット/インチであるとします。</span><span class="sxs-lookup"><span data-stu-id="b889f-1121">For example, suppose an image portion has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="b889f-1122">このメソッドを呼び出して、1インチあたり96ドットの解像度を持つデバイス上にイメージ部分を描画する場合、レンダリングされるイメージ部分のピクセル幅は (216/72) \* 96 = 288 になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1122">If you call this method to draw that image portion on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image portion will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1123">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1123">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1124">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1124">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1125">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1125">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1126">イメージの左上隅を描画する座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1126">Creates the coordinates at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1127">イメージの一部を抽出するソースの四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1127">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1128">ソースの四角形の測定単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1128">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="b889f-1129">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1129">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1130">コピー元の四角形のサイズによって、スケーリングされていない元のイメージのどの部分が画面に描画されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1130">The size of the source rectangle determines what portion of the unscaled original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#62](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#62)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#62](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#62)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#62](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#62)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1131"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1131"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1132">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1132">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * single * single * single * single -&gt; unit" Usage="graphics.DrawImage (image, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1133">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1133"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-1134">描画イメージの左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1134">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-1135">描画イメージの左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1135">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-1136">描画イメージの幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1136">Width of the drawn image.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-1137">描画イメージの高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1137">Height of the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-1138">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1138">Draws the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1139">`x`、`y`、`width`、および `height` の各パラメーターで定義された四角形によって、描画イメージの位置とサイズが決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1139">The rectangle defined by the `x`, `y`, `width`, and `height` parameters determines the position and size of the drawn image.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1140">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1140">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1141">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1141">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1142">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1142">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1143">イメージを描画する四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1143">Creates the position and size of a rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1144">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1144">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1145">四角形の位置によって画面上のイメージが検索され、元のイメージのサイズと四角形のサイズによって描画イメージのスケーリングが決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1145">The position of the rectangle locates the image on the screen, and the size of the original image and the size of the rectangle determines the scaling of the drawn image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#63](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#63)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#63](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#63)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#63](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#63)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1146"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1146"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1147">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1147">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1148">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1148"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-1149">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1149">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-1150">描画する <see cref="T:System.Drawing.Rectangle" /> オブジェクトの部分を指定する <paramref name="image" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1150"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1151"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで使用する単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1151">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-1152"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトのカラー変更情報とガンマ情報を指定する <paramref name="image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1152"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-1153">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-1153"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="b889f-1154">このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1154">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</span></span></param>
        <summary><span data-ttu-id="b889f-1155">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1155">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1156">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1156">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-1157">3つの <xref:System.Drawing.PointF> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1157">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-1158">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1158">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-1159">`srcRect` パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1159">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1160">この部分は、`destPoints` パラメーターによって指定された平行四辺形内に収まるようにスケーリングおよび傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1160">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
 <span data-ttu-id="b889f-1161">`callback` パラメーターを使用したこのオーバーロードは、アプリケーションによって決定された基準に従ってイメージの描画を開始した後に、イメージの描画を停止する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1161">This overload with the `callback` parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</span></span> <span data-ttu-id="b889f-1162">たとえば、アプリケーションで大きなイメージの描画を開始し、ユーザーが画面からイメージをスクロールすることがあります。この場合、アプリケーションは描画を停止する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1162">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1163">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1163">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1164">このコードでは、最初に <xref:System.Drawing.Graphics.DrawImageAbort> デリゲートのコールバックメソッドを定義します。定義は単純であり、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが null `callBackData` パラメーターを使用してそれを呼び出すかどうかをテストするだけです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1164">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="b889f-1165">この例の本体では、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1165">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1166"><xref:System.Drawing.Graphics.DrawImageAbort> コールバックメソッドのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1166">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method:</span></span>  
  
-   <span data-ttu-id="b889f-1167">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1167">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1168">イメージを描画するための平行四辺形を定義する点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1168">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1169">描画するイメージの部分を選択する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1169">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1170">グラフィックスの描画単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1170">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="b889f-1171">元のイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1171">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1172">調整されたイメージを描画するための追加の平行四辺形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1172">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="b889f-1173">調整されたイメージの属性を作成し、通常のガンマ値より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1173">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="b889f-1174">調整されたイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1174">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1175">元の調整されていない平行四辺形の場合、位置は画面上のイメージを検索し、四角形のサイズと平行四辺形のサイズおよび形状によって描画イメージの拡大縮小と傾斜が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1175">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 <span data-ttu-id="b889f-1176">この例では `callBackData` パラメーターを渡さないオーバーロードを使用しているため、<xref:System.Drawing.Graphics.DrawImageAbort> コールバックは `true`を返します。これにより、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが終了します。この例に含まれている例外処理コードは、イメージを描画するのではなく、例外テキストを出力します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1176">Because this example uses an overload that does not pass a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `true`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#38](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#38)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#38](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#38)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#38](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#38)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1177"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1177"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1178">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1178">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1179">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1179"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-1180">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1180">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-1181">描画する <see cref="T:System.Drawing.RectangleF" /> オブジェクトの部分を指定する <paramref name="image" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1181"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1182"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで使用する単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1182">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-1183"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトのカラー変更情報とガンマ情報を指定する <paramref name="image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1183"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-1184">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-1184"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="b889f-1185">このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1185">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</span></span></param>
        <summary><span data-ttu-id="b889f-1186">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1186">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1187">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1187">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-1188">3つの <xref:System.Drawing.PointF> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1188">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-1189">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1189">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-1190">`srcRect` パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1190">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1191">この部分は、`destPoints` パラメーターによって指定された平行四辺形内に収まるようにスケーリングおよび傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1191">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
 <span data-ttu-id="b889f-1192">`callback` パラメーターを使用したこのオーバーロードは、アプリケーションによって決定された基準に従ってイメージの描画を開始した後に、イメージの描画を停止する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1192">This overload with the `callback` parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</span></span> <span data-ttu-id="b889f-1193">たとえば、アプリケーションで大きなイメージの描画を開始し、ユーザーが画面からイメージをスクロールすることがあります。この場合、アプリケーションは描画を停止する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1193">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1194">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1194">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1195">このコードでは、最初に <xref:System.Drawing.Graphics.DrawImageAbort> デリゲートのコールバックメソッドを定義します。定義は単純であり、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが null `callBackData` パラメーターを使用してそれを呼び出すかどうかをテストするだけです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1195">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="b889f-1196">この例の本体では、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1196">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1197"><xref:System.Drawing.Graphics.DrawImageAbort> コールバックメソッドのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1197">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="b889f-1198">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1198">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1199">イメージを描画するための平行四辺形を定義する点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1199">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1200">描画するイメージの部分を選択する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1200">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1201">グラフィックスの描画単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1201">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="b889f-1202">元のイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1202">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1203">調整されたイメージを描画するための追加の平行四辺形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1203">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="b889f-1204">調整されたイメージの属性を作成し、通常のガンマ値より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1204">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="b889f-1205">調整されたイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1205">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1206">元の調整されていない平行四辺形の場合、位置は画面上のイメージを検索し、四角形のサイズと平行四辺形のサイズおよび形状によって描画イメージの拡大縮小と傾斜が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1206">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 <span data-ttu-id="b889f-1207">この例では `callBackData` パラメーターを渡さないオーバーロードを使用しているため、<xref:System.Drawing.Graphics.DrawImageAbort> コールバックは `true`を返します。これにより、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが終了します。この例に含まれている例外処理コードは、イメージを描画するのではなく、例外テキストを出力します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1207">Because this example uses an overload that does not pass a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `true`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#44](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#44)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#44](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#44)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#44](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#44)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1208"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1208"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1209">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1209">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback, int32 callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback, int callbackData);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort * int -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
        <Parameter Name="callbackData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1210">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1210"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-1211">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1211">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-1212">描画する <see cref="T:System.Drawing.Rectangle" /> オブジェクトの部分を指定する <paramref name="image" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1212"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1213"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで使用する単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1213">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-1214"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトのカラー変更情報とガンマ情報を指定する <paramref name="image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1214"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-1215">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-1215"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="b889f-1216">このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1216">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method according to application-determined criteria.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-1217"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> メソッドの実行を停止するかどうかをチェックするときに使用する、<see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> デリゲートの追加データを指定する値。</span><span class="sxs-lookup"><span data-stu-id="b889f-1217">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method.</span></span></param>
        <summary><span data-ttu-id="b889f-1218">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1218">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1219">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1219">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-1220">3つの <xref:System.Drawing.PointF> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1220">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-1221">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1221">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-1222">`srcRect` パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1222">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1223">この部分は、`destPoints` パラメーターによって指定された平行四辺形内に収まるようにスケーリングおよび傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1223">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
 <span data-ttu-id="b889f-1224">`callback` パラメーターと `callbackData` パラメーターを使用したこのオーバーロードは、アプリケーションによって決定された条件とデータに従ってイメージの描画を停止する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1224">This overload with the `callback` and `callbackData` parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</span></span> <span data-ttu-id="b889f-1225">たとえば、アプリケーションで大きなイメージの描画を開始し、ユーザーが画面からイメージをスクロールすることがあります。この場合、アプリケーションは描画を停止する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1225">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1226">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1226">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1227">このコードでは、最初に <xref:System.Drawing.Graphics.DrawImageAbort> デリゲートのコールバックメソッドを定義します。定義は単純であり、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが null `callBackData` パラメーターを使用してそれを呼び出すかどうかをテストするだけです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1227">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="b889f-1228">この例の本体では、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1228">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1229"><xref:System.Drawing.Graphics.DrawImageAbort> コールバックメソッドのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1229">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="b889f-1230">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1230">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1231">イメージを描画するための平行四辺形を定義する点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1231">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1232">描画するイメージの部分を選択する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1232">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1233">グラフィックスの描画単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1233">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="b889f-1234">元のイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1234">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1235">調整されたイメージを描画するための追加の平行四辺形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1235">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="b889f-1236">調整されたイメージの属性を作成し、通常のガンマ値より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1236">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="b889f-1237">調整されたイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1237">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1238">元の調整されていない平行四辺形の場合、位置は画面上のイメージを検索し、四角形のサイズと平行四辺形のサイズおよび形状によって描画イメージの拡大縮小と傾斜が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1238">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 <span data-ttu-id="b889f-1239">この例では `callBackData` パラメーターを渡すオーバーロードを使用しているため、<xref:System.Drawing.Graphics.DrawImageAbort> コールバックは `false`を返します。これにより、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが続行され、調整されたイメージが画面に描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1239">Because this example uses an overload that passes a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `false`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to continue, and the example draws the adjusted image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#39](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#39)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#39](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#39)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#39](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#39)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1240">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1240">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback, int callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback, int32 callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback, int callbackData);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort * int -&gt; unit" Usage="graphics.DrawImage (image, destPoints, srcRect, srcUnit, imageAttr, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
        <Parameter Name="callbackData" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1241">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1241"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-1242">平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1242">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-1243">描画する <see cref="T:System.Drawing.RectangleF" /> オブジェクトの部分を指定する <paramref name="image" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1243"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the <paramref name="image" /> object to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1244"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで使用する単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1244">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used by the <paramref name="srcRect" /> parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-1245"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトのカラー変更情報とガンマ情報を指定する <paramref name="image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1245"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-1246">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-1246"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="b889f-1247">このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1247">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method according to application-determined criteria.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-1248"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> メソッドの実行を停止するかどうかをチェックするときに使用する、<see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> デリゲートの追加データを指定する値。</span><span class="sxs-lookup"><span data-stu-id="b889f-1248">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)" /> method.</span></span></param>
        <summary><span data-ttu-id="b889f-1249">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1249">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1250">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1250">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-1251">3つの <xref:System.Drawing.PointF> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1251">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-1252">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1252">The fourth point is extrapolated from the first three to form a parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-1253">`srcRect` パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1253">The `srcRect` parameter specifies a rectangular portion of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1254">この部分は、`destPoints` パラメーターによって指定された平行四辺形内に収まるようにスケーリングおよび傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1254">This portion is scaled and sheared to fit inside the parallelogram specified by the `destPoints` parameter.</span></span>  
  
 <span data-ttu-id="b889f-1255">`callback` パラメーターと `callbackData` パラメーターを使用したこのオーバーロードは、アプリケーションによって決定された条件とデータに従ってイメージの描画を停止する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1255">This overload with the `callback` and `callbackData` parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</span></span> <span data-ttu-id="b889f-1256">たとえば、アプリケーションで大きなイメージの描画を開始し、ユーザーが画面からイメージをスクロールすることがあります。この場合、アプリケーションは描画を停止する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1256">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1257">次のコード例は、Windows フォームで使用するように設計されています。また、`Pa`<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1257">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the `Pa`<xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1258">このコードでは、最初に <xref:System.Drawing.Graphics.DrawImageAbort> デリゲートのコールバックメソッドを定義します。定義は単純であり、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが null `callBackData` パラメーターを使用してそれを呼び出すかどうかをテストするだけです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1258">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="b889f-1259">この例の本体では、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1259">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1260"><xref:System.Drawing.Graphics.DrawImageAbort> コールバックメソッドのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1260">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="b889f-1261">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1261">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1262">イメージを描画するための平行四辺形を定義する点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1262">Creates points that define a parallelogram in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1263">描画するイメージの部分を選択する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1263">Creates a rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1264">グラフィックスの描画単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1264">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="b889f-1265">元のイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1265">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1266">調整されたイメージを描画するための追加の平行四辺形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1266">Creates an additional parallelogram in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="b889f-1267">調整されたイメージの属性を作成し、通常のガンマ値より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1267">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="b889f-1268">調整されたイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1268">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1269">元の調整されていない平行四辺形の場合、位置は画面上のイメージを検索し、四角形のサイズと平行四辺形のサイズおよび形状によって描画イメージの拡大縮小と傾斜が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1269">For the original, unadjusted parallelogram, the position locates the image on the screen, and the size of the rectangle and the size and shape of the parallelogram determines the scaling and shearing of the drawn image.</span></span>  
  
 <span data-ttu-id="b889f-1270">この例では `callBackData` パラメーターを渡すオーバーロードを使用しているため、<xref:System.Drawing.Graphics.DrawImageAbort> コールバックは `false`を返します。これにより、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが続行され、調整されたイメージが画面に描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1270">Because this example uses an overload that passes a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `false`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to continue, and the example draws the adjusted image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#45](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#45)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#45](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#45)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#45](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#45)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1271"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1271"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1272">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1272">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * int * int * int * int * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
        <Parameter Name="srcWidth" Type="System.Int32" />
        <Parameter Name="srcHeight" Type="System.Int32" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1273">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1273"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-1274">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1274"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="b889f-1275">イメージは、四角形に合わせてスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1275">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="b889f-1276">描画するソース イメージの一部の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1276">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="b889f-1277">描画するソース イメージの一部の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1277">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="b889f-1278">描画するソース イメージの一部の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1278">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="b889f-1279">描画するソース イメージの一部の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1279">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1280">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1280">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <summary><span data-ttu-id="b889f-1281">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1281">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1282">`srcX`、`srcY`、`srcWidth`、および `srcHeight` の各パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1282">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1283">四角形は、ソースイメージの左上隅を基準としています。</span><span class="sxs-lookup"><span data-stu-id="b889f-1283">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="b889f-1284">この部分は、`destRect` パラメーターによって指定された四角形の内部に収まるようにスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1284">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1285">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1285">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1286">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1286">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1287">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1287">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1288">イメージを描画する対象の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1288">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1289">イメージの一部を抽出するソース四角形の座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1289">Creates the coordinates of a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1290">ソースの四角形の測定単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1290">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="b889f-1291">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1291">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1292">コピー先の四角形の位置は、画面上のイメージを検索します。また、変換元と変換先の四角形のサイズによって描画イメージのスケーリングが決まり、ソースの四角形のサイズによって、元のイメージのどの部分が描画されるかが決まります。ウィンドウ.</span><span class="sxs-lookup"><span data-stu-id="b889f-1292">The position of the destination rectangle locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#48](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#48)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#48)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#48)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1293"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1293"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1294">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1294">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System::Drawing::GraphicsUnit srcUnit);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * single * single * single * single * System.Drawing.GraphicsUnit -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Single" />
        <Parameter Name="srcY" Type="System.Single" />
        <Parameter Name="srcWidth" Type="System.Single" />
        <Parameter Name="srcHeight" Type="System.Single" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1295">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1295"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-1296">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1296"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="b889f-1297">イメージは、四角形に合わせてスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1297">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="b889f-1298">描画するソース イメージの一部の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1298">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="b889f-1299">描画するソース イメージの一部の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1299">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="b889f-1300">描画するソース イメージの一部の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1300">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="b889f-1301">描画するソース イメージの一部の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1301">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1302">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1302">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <summary><span data-ttu-id="b889f-1303">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1303">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1304">`srcX`、`srcY`、`srcWidth`、および `srcHeight` の各パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1304">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1305">四角形は、ソースイメージの左上隅を基準としています。</span><span class="sxs-lookup"><span data-stu-id="b889f-1305">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="b889f-1306">この部分は、`destRect` パラメーターによって指定された四角形の内部に収まるようにスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1306">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1307">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1307">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1308">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1308">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1309">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1309">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1310">イメージを描画する対象の四角形の座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1310">Creates the coordinates of a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1311">イメージの一部を抽出するソースの四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1311">Creates a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1312">ソースの四角形の測定単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1312">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="b889f-1313">画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1313">Draws the image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1314">コピー先の四角形の位置によって、画面上のイメージが検索されます。変換元と変換先の四角形のサイズによって描画イメージのスケーリングが決まり、ソース四角形のサイズによって、元のイメージのどの部分が描画されるかが決まります。ウィンドウ.</span><span class="sxs-lookup"><span data-stu-id="b889f-1314">The position of the destination rectangle locates the image on the screen, the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#52](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#52)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#52](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#52)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#52](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#52)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1315"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1315"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1316">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1316">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * int * int * int * int * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
        <Parameter Name="srcWidth" Type="System.Int32" />
        <Parameter Name="srcHeight" Type="System.Int32" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1317">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1317"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-1318">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1318"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="b889f-1319">イメージは、四角形に合わせてスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1319">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="b889f-1320">描画するソース イメージの一部の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1320">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="b889f-1321">描画するソース イメージの一部の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1321">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="b889f-1322">描画するソース イメージの一部の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1322">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="b889f-1323">描画するソース イメージの一部の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1323">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1324">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1324">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-1325"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトのカラー変更情報とガンマ情報を指定する <paramref name="image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1325"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <summary><span data-ttu-id="b889f-1326">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1326">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1327">`srcX`、`srcY`、`srcWidth`、および `srcHeight` の各パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1327">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1328">四角形は、ソースイメージの左上隅を基準としています。</span><span class="sxs-lookup"><span data-stu-id="b889f-1328">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="b889f-1329">この部分は、`destRect` パラメーターによって指定された四角形の内部に収まるようにスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1329">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1330">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1330">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1331">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1331">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1332">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1332">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1333">イメージを描画する対象の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1333">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1334">イメージの一部を抽出するソース四角形の座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1334">Creates the coordinates of a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1335">ソースの四角形の測定単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1335">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="b889f-1336">元のイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1336">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1337">調整されたイメージを描画するための追加の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1337">Creates an additional rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="b889f-1338">調整されたイメージの属性を作成し、通常のガンマ値より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1338">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="b889f-1339">調整されたイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1339">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1340">元の未調整の移動先の四角形の場合、画面上の位置によってイメージが検索され、変換元と変換先の四角形のサイズによって描画イメージのスケーリングが決まります。また、ソース四角形のサイズによって、元のイメージが画面に描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1340">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#49](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#49)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#49](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#49)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#49](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#49)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1341"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1341"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1342">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1342">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttrs);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * single * single * single * single * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Single" />
        <Parameter Name="srcY" Type="System.Single" />
        <Parameter Name="srcWidth" Type="System.Single" />
        <Parameter Name="srcHeight" Type="System.Single" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttrs" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1343">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1343"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-1344">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1344"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="b889f-1345">イメージは、四角形に合わせてスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1345">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="b889f-1346">描画するソース イメージの一部の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1346">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="b889f-1347">描画するソース イメージの一部の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1347">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="b889f-1348">描画するソース イメージの一部の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1348">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="b889f-1349">描画するソース イメージの一部の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1349">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1350">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1350">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <param name="imageAttrs"><span data-ttu-id="b889f-1351"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトのカラー変更情報とガンマ情報を指定する <paramref name="image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1351"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <summary><span data-ttu-id="b889f-1352">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1352">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1353">`srcX`、`srcY`、`srcWidth`、および `srcHeight` の各パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1353">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1354">四角形は、ソースイメージの左上隅を基準としています。</span><span class="sxs-lookup"><span data-stu-id="b889f-1354">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="b889f-1355">この部分は、`destRect` パラメーターによって指定された四角形の内部に収まるようにスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1355">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1356">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1356">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1357">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1357">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1358">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1358">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1359">イメージを描画する対象の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1359">Creates a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1360">イメージの一部を抽出するソース四角形の座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1360">Creates the coordinates of a source rectangle from which to extract a portion of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1361">ソースの四角形の測定単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1361">Sets the unit of measure of the source rectangle to pixels.</span></span>  
  
-   <span data-ttu-id="b889f-1362">元のイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1362">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1363">調整されたイメージを描画するための追加の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1363">Creates an additional rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="b889f-1364">調整されたイメージの属性を作成し、通常のガンマ値より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1364">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="b889f-1365">調整されたイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1365">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1366">元の未調整の移動先の四角形の場合、画面上の位置によってイメージが検索され、変換元と変換先の四角形のサイズによって描画イメージのスケーリングが決まります。また、ソース四角形のサイズによって、元のイメージが画面に描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1366">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the sizes of the source and destination rectangles determine the scaling of the drawn image, and the size of the source rectangle determines what portion of the original image is drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#53](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#53)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#53](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#53)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#53](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1367"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1367"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1368">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1368">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttr, System.Drawing.Graphics.DrawImageAbort callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttr, class System.Drawing.Graphics/DrawImageAbort callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttr, System::Drawing::Graphics::DrawImageAbort ^ callback);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * int * int * int * int * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttr, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
        <Parameter Name="srcWidth" Type="System.Int32" />
        <Parameter Name="srcHeight" Type="System.Int32" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1369">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1369"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-1370">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1370"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="b889f-1371">イメージは、四角形に合わせてスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1371">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="b889f-1372">描画するソース イメージの一部の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1372">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="b889f-1373">描画するソース イメージの一部の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1373">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="b889f-1374">描画するソース イメージの一部の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1374">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="b889f-1375">描画するソース イメージの一部の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1375">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1376">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1376">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-1377"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> のカラー変更情報とガンマ情報を指定する <paramref name="image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1377"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for <paramref name="image" />.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-1378">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-1378"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="b889f-1379">このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1379">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</span></span></param>
        <summary><span data-ttu-id="b889f-1380">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1380">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1381">`srcX`、`srcY`、`srcWidth`、および `srcHeight` の各パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1381">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1382">四角形は、ソースイメージの左上隅を基準としています。</span><span class="sxs-lookup"><span data-stu-id="b889f-1382">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="b889f-1383">この部分は、`destRect` オブジェクトによって指定された四角形の内部に収まるようにスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1383">This portion is scaled to fit inside the rectangle specified by the `destRect` object.</span></span>  
  
 <span data-ttu-id="b889f-1384">`callback` パラメーターを使用したこのオーバーロードは、アプリケーションによって決定された基準に従ってイメージの描画を開始した後に、イメージの描画を停止する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1384">This overload with the `callback` parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</span></span> <span data-ttu-id="b889f-1385">たとえば、アプリケーションで大きなイメージの描画を開始し、ユーザーが画面からイメージをスクロールすることがあります。この場合、アプリケーションは描画を停止する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1385">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1386">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1386">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1387">このコードでは、最初に <xref:System.Drawing.Graphics.DrawImageAbort> デリゲートのコールバックメソッドを定義します。定義は単純であり、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが null `callBackData` パラメーターを使用してそれを呼び出すかどうかをテストするだけです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1387">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="b889f-1388">この例の本体では、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1388">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1389"><xref:System.Drawing.Graphics.DrawImageAbort> コールバックメソッドのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1389">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="b889f-1390">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1390">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1391">イメージを描画する対象の四角形を定義するポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1391">Creates points that define a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1392">描画するイメージの部分を選択するソース四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1392">Creates a source rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1393">グラフィックスの描画単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1393">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="b889f-1394">元のイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1394">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1395">調整されたイメージを描画するための追加のコピー先の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1395">Creates an additional destination rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="b889f-1396">調整されたイメージの属性を作成し、通常のガンマ値より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1396">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="b889f-1397">調整されたイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1397">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1398">元の未調整の移動先の四角形では、位置が画面上のイメージを検索し、コピー元の四角形のサイズと変換先の四角形のサイズおよび形状によって描画イメージの拡大縮小が決定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1398">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</span></span>  
  
 <span data-ttu-id="b889f-1399">この例では `callBackData` パラメーターを渡さないオーバーロードを使用しているため、<xref:System.Drawing.Graphics.DrawImageAbort> コールバックは `true`を返します。これにより、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが終了します。この例に含まれている例外処理コードは、イメージを描画するのではなく、例外テキストを出力します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1399">Because this example uses an overload that does not pass a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `true`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#50](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#50)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#50](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#50)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#50](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#50)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1400"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1400"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1401">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1401">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttrs, class System.Drawing.Graphics/DrawImageAbort callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttrs, System::Drawing::Graphics::DrawImageAbort ^ callback);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * single * single * single * single * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Single" />
        <Parameter Name="srcY" Type="System.Single" />
        <Parameter Name="srcWidth" Type="System.Single" />
        <Parameter Name="srcHeight" Type="System.Single" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttrs" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1402">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1402"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-1403">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1403"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="b889f-1404">イメージは、四角形に合わせてスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1404">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="b889f-1405">描画するソース イメージの一部の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1405">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="b889f-1406">描画するソース イメージの一部の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1406">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="b889f-1407">描画するソース イメージの一部の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1407">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="b889f-1408">描画するソース イメージの一部の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1408">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1409">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1409">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <param name="imageAttrs"><span data-ttu-id="b889f-1410"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトのカラー変更情報とガンマ情報を指定する <paramref name="image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1410"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-1411">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-1411"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="b889f-1412">このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1412">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)" /> method according to application-determined criteria.</span></span></param>
        <summary><span data-ttu-id="b889f-1413">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1413">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1414">`srcX`、`srcY`、`srcWidth`、および `srcHeight` の各パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1414">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1415">四角形は、ソースイメージの左上隅を基準としています。</span><span class="sxs-lookup"><span data-stu-id="b889f-1415">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="b889f-1416">この部分は、`destRect` パラメーターによって指定された四角形の内部に収まるようにスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1416">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
 <span data-ttu-id="b889f-1417">`callback` パラメーターを使用したこのオーバーロードは、アプリケーションによって決定された基準に従ってイメージの描画を開始した後に、イメージの描画を停止する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1417">This overload with the `callback` parameter provides the means to stop the drawing of an image once it starts according to criteria determined by the application.</span></span> <span data-ttu-id="b889f-1418">たとえば、アプリケーションで大きなイメージの描画を開始し、ユーザーが画面からイメージをスクロールすることがあります。この場合、アプリケーションは描画を停止する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1418">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1419">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1419">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1420">このコードでは、最初に <xref:System.Drawing.Graphics.DrawImageAbort> デリゲートのコールバックメソッドを定義します。定義は単純であり、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが null `callBackData` パラメーターを使用してそれを呼び出すかどうかをテストするだけです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1420">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="b889f-1421">この例の本体では、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1421">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1422"><xref:System.Drawing.Graphics.DrawImageAbort> コールバックメソッドのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1422">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="b889f-1423">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1423">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1424">イメージを描画する対象の四角形を定義するポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1424">Creates points that define a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1425">描画するイメージの部分を選択するソース四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1425">Creates a source rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1426">グラフィックスの描画単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1426">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="b889f-1427">元のイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1427">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1428">調整されたイメージを描画するための追加のコピー先の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1428">Creates an additional destination rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="b889f-1429">調整されたイメージの属性を作成し、通常のガンマ値より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1429">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="b889f-1430">調整されたイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1430">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1431">元の未調整の移動先の四角形では、位置が画面上のイメージを検索し、コピー元の四角形のサイズと変換先の四角形のサイズおよび形状によって描画イメージの拡大縮小が決定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1431">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</span></span>  
  
 <span data-ttu-id="b889f-1432">この例では `callBackData` パラメーターを渡さないオーバーロードを使用しているため、<xref:System.Drawing.Graphics.DrawImageAbort> コールバックは `true`を返します。これにより、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが終了します。この例に含まれている例外処理コードは、イメージを描画するのではなく、例外テキストを出力します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1432">Because this example uses an overload that does not pass a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `true`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to end, and the exception-handling code included in the example prints out the exception text rather than drawing the image.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#54](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#54)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#54)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#54)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1433"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1433"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1434">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1434">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, int32 srcX, int32 srcY, int32 srcWidth, int32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttrs, class System.Drawing.Graphics/DrawImageAbort callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, int srcX, int srcY, int srcWidth, int srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttrs, System::Drawing::Graphics::DrawImageAbort ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * int * int * int * int * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort * nativeint -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Int32" />
        <Parameter Name="srcY" Type="System.Int32" />
        <Parameter Name="srcWidth" Type="System.Int32" />
        <Parameter Name="srcHeight" Type="System.Int32" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttrs" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1435">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1435"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-1436">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1436"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="b889f-1437">イメージは、四角形に合わせてスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1437">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="b889f-1438">描画するソース イメージの一部の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1438">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="b889f-1439">描画するソース イメージの一部の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1439">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="b889f-1440">描画するソース イメージの一部の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1440">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="b889f-1441">描画するソース イメージの一部の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1441">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1442">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1442">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <param name="imageAttrs"><span data-ttu-id="b889f-1443"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトのカラー変更情報とガンマ情報を指定する <paramref name="image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1443"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-1444">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-1444"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="b889f-1445">このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1445">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> method according to application-determined criteria.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-1446"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> メソッドの実行を停止するかどうかをチェックするときに使用する、<see langword="DrawImage" /> デリゲートの追加データを指定する値。</span><span class="sxs-lookup"><span data-stu-id="b889f-1446">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.</span></span></param>
        <summary><span data-ttu-id="b889f-1447">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1447">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1448">`srcX`、`srcY`、`srcWidth`、および `srcHeight` の各パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1448">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1449">四角形は、ソースイメージの左上隅を基準としています。</span><span class="sxs-lookup"><span data-stu-id="b889f-1449">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="b889f-1450">この部分は、`destRect` パラメーターによって指定された四角形の内部に収まるようにスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1450">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
 <span data-ttu-id="b889f-1451">`callback` パラメーターと `callbackData` パラメーターを使用したこのオーバーロードは、アプリケーションによって決定された条件とデータに従ってイメージの描画を停止する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1451">This overload with the `callback` and `callbackData` parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</span></span> <span data-ttu-id="b889f-1452">たとえば、アプリケーションで大きなイメージの描画を開始し、ユーザーが画面からイメージをスクロールすることがあります。この場合、アプリケーションは描画を停止する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1452">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1453">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1453">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1454">このコードでは、最初に <xref:System.Drawing.Graphics.DrawImageAbort> デリゲートのコールバックメソッドを定義します。定義は単純であり、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが null `callBackData` パラメーターを使用してそれを呼び出すかどうかをテストするだけです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1454">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="b889f-1455">この例の本体では、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1455">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1456"><xref:System.Drawing.Graphics.DrawImageAbort> コールバックメソッドのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1456">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="b889f-1457">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1457">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1458">イメージを描画する対象の四角形を定義するポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1458">Creates points that define a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1459">描画するイメージの部分を選択するソース四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1459">Creates a source rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1460">グラフィックスの描画単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1460">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="b889f-1461">元のイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1461">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1462">調整されたイメージを描画するための追加のコピー先の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1462">Creates an additional destination rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="b889f-1463">調整されたイメージの属性を作成し、通常のガンマ値より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1463">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="b889f-1464">調整されたイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1464">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1465">元の未調整の移動先の四角形では、位置が画面上のイメージを検索し、コピー元の四角形のサイズと変換先の四角形のサイズおよび形状によって描画イメージの拡大縮小が決定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1465">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</span></span>  
  
 <span data-ttu-id="b889f-1466">この例では `callBackData` パラメーターを渡すオーバーロードを使用しているため、<xref:System.Drawing.Graphics.DrawImageAbort> コールバックは `false`を返します。これにより、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが続行され、調整されたイメージが画面に描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1466">Because this example uses an overload that passes a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `false`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to continue, and the example draws the adjusted image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples#51](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CPP/form1.cpp#51)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples#51](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/CS/form1.cs#51)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples#51](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples/VB/form1.vb#51)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1467"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1467"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1468">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1468">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawImage">
      <MemberSignature Language="C#" Value="public void DrawImage (System.Drawing.Image image, System.Drawing.Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Imaging.ImageAttributes imageAttrs, System.Drawing.Graphics.DrawImageAbort callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImage(class System.Drawing.Image image, valuetype System.Drawing.Rectangle destRect, float32 srcX, float32 srcY, float32 srcWidth, float32 srcHeight, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Imaging.ImageAttributes imageAttrs, class System.Drawing.Graphics/DrawImageAbort callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImage(System::Drawing::Image ^ image, System::Drawing::Rectangle destRect, float srcX, float srcY, float srcWidth, float srcHeight, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Imaging::ImageAttributes ^ imageAttrs, System::Drawing::Graphics::DrawImageAbort ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.DrawImage : System.Drawing.Image * System.Drawing.Rectangle * single * single * single * single * System.Drawing.GraphicsUnit * System.Drawing.Imaging.ImageAttributes * System.Drawing.Graphics.DrawImageAbort * nativeint -&gt; unit" Usage="graphics.DrawImage (image, destRect, srcX, srcY, srcWidth, srcHeight, srcUnit, imageAttrs, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcX" Type="System.Single" />
        <Parameter Name="srcY" Type="System.Single" />
        <Parameter Name="srcWidth" Type="System.Single" />
        <Parameter Name="srcHeight" Type="System.Single" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="imageAttrs" Type="System.Drawing.Imaging.ImageAttributes" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+DrawImageAbort" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1469">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1469"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-1470">描画イメージの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1470"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn image.</span></span> <span data-ttu-id="b889f-1471">イメージは、四角形に合わせてスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1471">The image is scaled to fit the rectangle.</span></span></param>
        <param name="srcX"><span data-ttu-id="b889f-1472">描画するソース イメージの一部の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1472">The x-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcY"><span data-ttu-id="b889f-1473">描画するソース イメージの一部の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1473">The y-coordinate of the upper-left corner of the portion of the source image to draw.</span></span></param>
        <param name="srcWidth"><span data-ttu-id="b889f-1474">描画するソース イメージの一部の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1474">Width of the portion of the source image to draw.</span></span></param>
        <param name="srcHeight"><span data-ttu-id="b889f-1475">描画するソース イメージの一部の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1475">Height of the portion of the source image to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-1476">抽出元の四角形を決定するために使用する単位を指定する <see cref="T:System.Drawing.GraphicsUnit" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-1476">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the units of measure used to determine the source rectangle.</span></span></param>
        <param name="imageAttrs"><span data-ttu-id="b889f-1477"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> オブジェクトのカラー変更情報とガンマ情報を指定する <paramref name="image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1477"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies recoloring and gamma information for the <paramref name="image" /> object.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-1478">イメージの描画時に呼び出すメソッドを指定する <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-1478"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate that specifies a method to call during the drawing of the image.</span></span> <span data-ttu-id="b889f-1479">このメソッドは、アプリケーションにより決定された基準に従って実行された <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> メソッドを停止するかどうかをチェックするため頻繁に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1479">This method is called frequently to check whether to stop execution of the <see cref="M:System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)" /> method according to application-determined criteria.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-1480"><see cref="T:System.Drawing.Graphics.DrawImageAbort" /> メソッドの実行を停止するかどうかをチェックするときに使用する、<see langword="DrawImage" /> デリゲートの追加データを指定する値。</span><span class="sxs-lookup"><span data-stu-id="b889f-1480">Value specifying additional data for the <see cref="T:System.Drawing.Graphics.DrawImageAbort" /> delegate to use when checking whether to stop execution of the <see langword="DrawImage" /> method.</span></span></param>
        <summary><span data-ttu-id="b889f-1481">指定した位置に指定したサイズで、指定した <see cref="T:System.Drawing.Image" /> の指定した部分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1481">Draws the specified portion of the specified <see cref="T:System.Drawing.Image" /> at the specified location and with the specified size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1482">`srcX`、`srcY`、`srcWidth`、および `srcHeight` の各パラメーターは、描画する `image` オブジェクトの四角形の部分を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1482">The `srcX`, `srcY`, `srcWidth`, and `srcHeight` parameters specify a rectangular portion, of the `image` object to draw.</span></span> <span data-ttu-id="b889f-1483">四角形は、ソースイメージの左上隅を基準としています。</span><span class="sxs-lookup"><span data-stu-id="b889f-1483">The rectangle is relative to the upper-left corner of the source image.</span></span> <span data-ttu-id="b889f-1484">この部分は、`destRect` パラメーターによって指定された四角形の内部に収まるようにスケーリングされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1484">This portion is scaled to fit inside the rectangle specified by the `destRect` parameter.</span></span>  
  
 <span data-ttu-id="b889f-1485">`callback` パラメーターと `callbackData` パラメーターを使用したこのオーバーロードは、アプリケーションによって決定された条件とデータに従ってイメージの描画を停止する手段を提供します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1485">This overload with the `callback` and `callbackData` parameters provides the means to stop the drawing of an image once it starts according to criteria and data determined by the application.</span></span> <span data-ttu-id="b889f-1486">たとえば、アプリケーションで大きなイメージの描画を開始し、ユーザーが画面からイメージをスクロールすることがあります。この場合、アプリケーションは描画を停止する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1486">For example, an application could start drawing a large image and the user might scroll the image off the screen, in which case the application could stop the drawing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1487">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1487">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1488">このコードでは、最初に <xref:System.Drawing.Graphics.DrawImageAbort> デリゲートのコールバックメソッドを定義します。定義は単純であり、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが null `callBackData` パラメーターを使用してそれを呼び出すかどうかをテストするだけです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1488">The code first defines a callback method for the <xref:System.Drawing.Graphics.DrawImageAbort> delegate; the definition is simplistic and merely tests to see whether the <xref:System.Drawing.Graphics.DrawImage%2A> method calls it with a null `callBackData` parameter.</span></span> <span data-ttu-id="b889f-1489">この例の本体では、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1489">The main body of the example performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1490"><xref:System.Drawing.Graphics.DrawImageAbort> コールバックメソッドのインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1490">Creates an instance of the <xref:System.Drawing.Graphics.DrawImageAbort> callback method.</span></span>  
  
-   <span data-ttu-id="b889f-1491">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1491">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1492">イメージを描画する対象の四角形を定義するポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1492">Creates points that define a destination rectangle in which to draw the image.</span></span>  
  
-   <span data-ttu-id="b889f-1493">描画するイメージの部分を選択するソース四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1493">Creates a source rectangle to select the portion of the image to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1494">グラフィックスの描画単位をピクセルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1494">Sets the graphics drawing unit to pixel.</span></span>  
  
-   <span data-ttu-id="b889f-1495">元のイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1495">Draws the original image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1496">調整されたイメージを描画するための追加のコピー先の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1496">Creates an additional destination rectangle in which to draw an adjusted image.</span></span>  
  
-   <span data-ttu-id="b889f-1497">調整されたイメージの属性を作成し、通常のガンマ値より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1497">Creates and sets the attributes of the adjusted image to have a larger-than-usual gamma value.</span></span>  
  
-   <span data-ttu-id="b889f-1498">調整されたイメージを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1498">Draws the adjusted image to the screen.</span></span>  
  
 <span data-ttu-id="b889f-1499">元の未調整の移動先の四角形では、位置が画面上のイメージを検索し、コピー元の四角形のサイズと変換先の四角形のサイズおよび形状によって描画イメージの拡大縮小が決定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1499">For the original, unadjusted destination rectangle, the position locates the image on the screen, and the size of the source rectangle and the size and shape of the destination rectangle determines the scaling of the drawn image.</span></span>  
  
 <span data-ttu-id="b889f-1500">この例では `callBackData` パラメーターを渡すオーバーロードを使用しているため、<xref:System.Drawing.Graphics.DrawImageAbort> コールバックは `false`を返します。これにより、<xref:System.Drawing.Graphics.DrawImage%2A> メソッドが続行され、調整されたイメージが画面に描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1500">Because this example uses an overload that passes a `callBackData` parameter, the <xref:System.Drawing.Graphics.DrawImageAbort> callback returns `false`, which causes the <xref:System.Drawing.Graphics.DrawImage%2A> method to continue, and the example draws the adjusted image to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#55](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#55)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#55)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#55)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1501"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1501"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1502">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1502">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawImageUnscaled">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-1503">指定したイメージを座標ペアで指定された位置に元の物理サイズで描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1503">Draws the specified image using its original physical size at the location specified by a coordinate pair.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawImageUnscaled">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaled(class System.Drawing.Image image, valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaled(System::Drawing::Image ^ image, System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaled : System.Drawing.Image * System.Drawing.Point -&gt; unit" Usage="graphics.DrawImageUnscaled (image, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1504">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1504"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="point"><span data-ttu-id="b889f-1505">描画するイメージの左上隅を指定する <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1505"><see cref="T:System.Drawing.Point" /> structure that specifies the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-1506">指定した位置に、指定したイメージを元の物理サイズで描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1506">Draws a specified image using its original physical size at a specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1507"><xref:System.Drawing.Image> には、ピクセル幅の値と横方向の解像度 (ドット/インチ) の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1507">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="b889f-1508">イメージの物理的な幅 (インチ単位) は、ピクセル幅を水平方向の解像度で割ったものです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1508">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="b889f-1509">たとえば、ピクセル幅が216で水平方向の解像度が72ドット/インチのイメージの物理的な幅は3インチです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1509">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="b889f-1510">同様の解説は、ピクセルの高さと物理的な高さに適用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1510">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="b889f-1511"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A> メソッドは、物理サイズを使用してイメージを描画します。そのため、ディスプレイデバイスの解像度 (1 インチあたりのドット数) に関係なく、イメージはインチ単位で正しいサイズになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1511">The <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="b889f-1512">たとえば、イメージの幅が216で、水平方向の解像度が72ドット/インチであるとします。</span><span class="sxs-lookup"><span data-stu-id="b889f-1512">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="b889f-1513"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A> を呼び出して、1インチあたり96ドットの解像度を持つデバイス上にそのイメージを描画する場合、レンダリングされるイメージのピクセル幅は (216/72) \* 96 = 288 になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1513">If you call <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1514">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1514">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1515">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1515">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1516">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1516">Creates an image from a JPEG file SampImag.jpg in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1517">イメージの左上隅を描画するポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1517">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1518">物理的なサイズを使用してイメージ全体を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1518">Draws the entire image using its physical size.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#64](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#64)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#64](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#64)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#64](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#64)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1519"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1519"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImageUnscaled">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaled (System.Drawing.Image image, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaled(class System.Drawing.Image image, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaled(System::Drawing::Image ^ image, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaled : System.Drawing.Image * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawImageUnscaled (image, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1520">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1520"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-1521">描画するイメージの左上隅を指定する <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1521"><see cref="T:System.Drawing.Rectangle" /> that specifies the upper-left corner of the drawn image.</span></span> <span data-ttu-id="b889f-1522">四角形の X プロパティおよび Y プロパティは、左上隅を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1522">The X and Y properties of the rectangle specify the upper-left corner.</span></span> <span data-ttu-id="b889f-1523">Width プロパティおよび Height プロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1523">The Width and Height properties are ignored.</span></span></param>
        <summary><span data-ttu-id="b889f-1524">指定した位置に、指定したイメージを元の物理サイズで描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1524">Draws a specified image using its original physical size at a specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1525"><xref:System.Drawing.Image> には、ピクセル幅の値と横方向の解像度 (ドット/インチ) の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1525">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="b889f-1526">イメージの物理的な幅 (インチ単位) は、ピクセル幅を水平方向の解像度で割ったものです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1526">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="b889f-1527">たとえば、ピクセル幅が216で水平方向の解像度が72ドット/インチのイメージの物理的な幅は3インチです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1527">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="b889f-1528">同様の解説は、ピクセルの高さと物理的な高さに適用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1528">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="b889f-1529"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A> メソッドは、物理サイズを使用してイメージを描画します。そのため、ディスプレイデバイスの解像度 (1 インチあたりのドット数) に関係なく、イメージはインチ単位で正しいサイズになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1529">The <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="b889f-1530">たとえば、イメージの幅が216で、水平方向の解像度が72ドット/インチであるとします。</span><span class="sxs-lookup"><span data-stu-id="b889f-1530">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="b889f-1531"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A> を呼び出して、1インチあたり96ドットの解像度を持つデバイス上にそのイメージを描画する場合、レンダリングされるイメージのピクセル幅は (216/72) \* 96 = 288 になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1531">If you call <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1532"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1532"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImageUnscaled">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaled (System.Drawing.Image image, int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaled(class System.Drawing.Image image, int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaled(System::Drawing::Image ^ image, int x, int y);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaled : System.Drawing.Image * int * int -&gt; unit" Usage="graphics.DrawImageUnscaled (image, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1533">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1533"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-1534">描画イメージの左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1534">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-1535">描画イメージの左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1535">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-1536">指定したイメージを座標ペアで指定された位置に元の物理サイズで描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1536">Draws the specified image using its original physical size at the location specified by a coordinate pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1537"><xref:System.Drawing.Image> には、ピクセル幅の値と横方向の解像度 (ドット/インチ) の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1537">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="b889f-1538">イメージの物理的な幅 (インチ単位) は、ピクセル幅を水平方向の解像度で割ったものです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1538">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="b889f-1539">たとえば、ピクセル幅が216で水平方向の解像度が72ドット/インチのイメージの物理的な幅は3インチです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1539">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="b889f-1540">同様の解説は、ピクセルの高さと物理的な高さに適用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1540">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="b889f-1541"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A> メソッドは、物理サイズを使用してイメージを描画します。そのため、ディスプレイデバイスの解像度 (1 インチあたりのドット数) に関係なく、イメージはインチ単位で正しいサイズになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1541">The <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="b889f-1542">たとえば、イメージの幅が216で、水平方向の解像度が72ドット/インチであるとします。</span><span class="sxs-lookup"><span data-stu-id="b889f-1542">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="b889f-1543"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A> を呼び出して、1インチあたり96ドットの解像度を持つデバイス上にそのイメージを描画する場合、レンダリングされるイメージのピクセル幅は (216/72) \* 96 = 288 になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1543">If you call <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1544">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1544">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1545">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1545">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1546">例のフォルダーにある JPEG ファイル SampImag からイメージを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1546">Creates an image from a JPEG file, SampImag.jpg, in the folder of the example.</span></span>  
  
-   <span data-ttu-id="b889f-1547">イメージの左上隅を描画するポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1547">Creates a point at which to draw the upper-left corner of the image.</span></span>  
  
-   <span data-ttu-id="b889f-1548">物理的なサイズを使用してイメージ全体を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1548">Draws the entire image using its physical size.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#65](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#65)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#65](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#65)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#65](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#65)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1549"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1549"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImageUnscaled">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaled (System.Drawing.Image image, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaled(class System.Drawing.Image image, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaled(System::Drawing::Image ^ image, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaled : System.Drawing.Image * int * int * int * int -&gt; unit" Usage="graphics.DrawImageUnscaled (image, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1550">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1550"><see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-1551">描画イメージの左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1551">The x-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-1552">描画イメージの左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1552">The y-coordinate of the upper-left corner of the drawn image.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-1553">使用されていません。</span><span class="sxs-lookup"><span data-stu-id="b889f-1553">Not used.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-1554">使用されていません。</span><span class="sxs-lookup"><span data-stu-id="b889f-1554">Not used.</span></span></param>
        <summary><span data-ttu-id="b889f-1555">指定した位置に、指定したイメージを元の物理サイズで描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1555">Draws a specified image using its original physical size at a specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1556"><xref:System.Drawing.Image> には、ピクセル幅の値と横方向の解像度 (ドット/インチ) の値が格納されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1556">An <xref:System.Drawing.Image> stores a value for pixel width and a value for horizontal resolution (dots per inch).</span></span> <span data-ttu-id="b889f-1557">イメージの物理的な幅 (インチ単位) は、ピクセル幅を水平方向の解像度で割ったものです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1557">The physical width, measured in inches, of an image is the pixel width divided by the horizontal resolution.</span></span> <span data-ttu-id="b889f-1558">たとえば、ピクセル幅が216で水平方向の解像度が72ドット/インチのイメージの物理的な幅は3インチです。</span><span class="sxs-lookup"><span data-stu-id="b889f-1558">For example, an image with a pixel width of 216 and a horizontal resolution of 72 dots per inch has a physical width of 3 inches.</span></span> <span data-ttu-id="b889f-1559">同様の解説は、ピクセルの高さと物理的な高さに適用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1559">Similar remarks apply to pixel height and physical height.</span></span>  
  
 <span data-ttu-id="b889f-1560"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A> メソッドは、物理サイズを使用してイメージを描画します。そのため、ディスプレイデバイスの解像度 (1 インチあたりのドット数) に関係なく、イメージはインチ単位で正しいサイズになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1560">The <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> method draws an image using its physical size, so the image will have its correct size in inches regardless of the resolution (dots per inch) of the display device.</span></span> <span data-ttu-id="b889f-1561">たとえば、イメージの幅が216で、水平方向の解像度が72ドット/インチであるとします。</span><span class="sxs-lookup"><span data-stu-id="b889f-1561">For example, suppose an image has a pixel width of 216 and a horizontal resolution of 72 dots per inch.</span></span> <span data-ttu-id="b889f-1562"><xref:System.Drawing.Graphics.DrawImageUnscaled%2A> を呼び出して、1インチあたり96ドットの解像度を持つデバイス上にそのイメージを描画する場合、レンダリングされるイメージのピクセル幅は (216/72) \* 96 = 288 になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1562">If you call <xref:System.Drawing.Graphics.DrawImageUnscaled%2A> to draw that image on a device that has a resolution of 96 dots per inch, the pixel width of the rendered image will be (216/72)\*96 = 288.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1563"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1563"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawImageUnscaledAndClipped">
      <MemberSignature Language="C#" Value="public void DrawImageUnscaledAndClipped (System.Drawing.Image image, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawImageUnscaledAndClipped(class System.Drawing.Image image, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawImageUnscaledAndClipped(System::Drawing::Image ^ image, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawImageUnscaledAndClipped : System.Drawing.Image * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawImageUnscaledAndClipped (image, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-1564">描画する <see cref="T:System.Drawing.Image" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1564">The <see cref="T:System.Drawing.Image" /> to draw.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-1565">イメージを描画する <see cref="T:System.Drawing.Rectangle" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1565">The <see cref="T:System.Drawing.Rectangle" /> in which to draw the image.</span></span></param>
        <summary><span data-ttu-id="b889f-1566">指定されたイメージをスケーリングせずに描画します。必要に応じて、指定された四角形内に収まるようにイメージをクリップします。</span><span class="sxs-lookup"><span data-stu-id="b889f-1566">Draws the specified image without scaling and clips it, if necessary, to fit in the specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-1567"><xref:System.Drawing.Graphics.DrawImageUnscaledAndClipped%2A> メソッドの使用方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1567">The following example demonstrates how to use the <xref:System.Drawing.Graphics.DrawImageUnscaledAndClipped%2A> method.</span></span> <span data-ttu-id="b889f-1568">この例を実行するには、Windows フォームに貼り付けます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1568">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="b889f-1569">フォームの <xref:System.Windows.Forms.Control.Paint> イベントを処理し、<xref:System.Windows.Forms.Control.Paint> イベント処理メソッドから `DrawImageUnscaled` メソッドを呼び出して、`e` を <xref:System.Windows.Forms.PaintEventArgs>として渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1569">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the `DrawImageUnscaled` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#8)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1570"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1570"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-1571">座標ペアで指定された 2 つの点を結ぶ直線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1571">Draws a line connecting the two points specified by the coordinate pairs.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawLine">
      <MemberSignature Language="C#" Value="public void DrawLine (System.Drawing.Pen pen, System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLine(class System.Drawing.Pen pen, valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLine(System::Drawing::Pen ^ pen, System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.DrawLine : System.Drawing.Pen * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphics.DrawLine (pen, pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1572">直線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1572"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</span></span></param>
        <param name="pt1"><span data-ttu-id="b889f-1573">接続する最初の点を表す <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1573"><see cref="T:System.Drawing.Point" /> structure that represents the first point to connect.</span></span></param>
        <param name="pt2"><span data-ttu-id="b889f-1574">接続する 2 番目の点を表す <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1574"><see cref="T:System.Drawing.Point" /> structure that represents the second point to connect.</span></span></param>
        <summary><span data-ttu-id="b889f-1575">2 つの <see cref="T:System.Drawing.Point" /> 構造体を接続する直線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1575">Draws a line connecting two <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-1576">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1576">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1577">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1577">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1578">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1578">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1579">線の端点の点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1579">Creates points for the endpoints of the line.</span></span>  
  
-   <span data-ttu-id="b889f-1580">画面に線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1580">Draws the line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#66](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#66)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#66](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#66)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#66](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#66)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1581"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1581"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md"><span data-ttu-id="b889f-1582">ペンを使用した直線と図形の描画</span><span class="sxs-lookup"><span data-stu-id="b889f-1582">Using a Pen to Draw Lines and Shapes</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawLine">
      <MemberSignature Language="C#" Value="public void DrawLine (System.Drawing.Pen pen, System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLine(class System.Drawing.Pen pen, valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLine(System::Drawing::Pen ^ pen, System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.DrawLine : System.Drawing.Pen * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphics.DrawLine (pen, pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1583">直線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1583"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</span></span></param>
        <param name="pt1"><span data-ttu-id="b889f-1584">接続する最初の点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1584"><see cref="T:System.Drawing.PointF" /> structure that represents the first point to connect.</span></span></param>
        <param name="pt2"><span data-ttu-id="b889f-1585">接続する 2 番目の点を表す <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1585"><see cref="T:System.Drawing.PointF" /> structure that represents the second point to connect.</span></span></param>
        <summary><span data-ttu-id="b889f-1586">2 つの <see cref="T:System.Drawing.PointF" /> 構造体を接続する直線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1586">Draws a line connecting two <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1587">このメソッドは、`pt1` パラメーターと p`2` パラメーターで指定された2つの点を結ぶ線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1587">This method draws a line connecting the two points specified by the `pt1` and p`2` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1588">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1588">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1589">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1589">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1590">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1590">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1591">線の端点の点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1591">Creates points for the endpoints of the line.</span></span>  
  
-   <span data-ttu-id="b889f-1592">画面に線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1592">Draws the line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#67](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#67)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#67)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#67)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1593"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1593"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md"><span data-ttu-id="b889f-1594">ペンを使用した直線と図形の描画</span><span class="sxs-lookup"><span data-stu-id="b889f-1594">Using a Pen to Draw Lines and Shapes</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawLine">
      <MemberSignature Language="C#" Value="public void DrawLine (System.Drawing.Pen pen, int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLine(class System.Drawing.Pen pen, int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLine(System::Drawing::Pen ^ pen, int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.DrawLine : System.Drawing.Pen * int * int * int * int -&gt; unit" Usage="graphics.DrawLine (pen, x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1595">直線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1595"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</span></span></param>
        <param name="x1"><span data-ttu-id="b889f-1596">最初の点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1596">The x-coordinate of the first point.</span></span></param>
        <param name="y1"><span data-ttu-id="b889f-1597">最初の点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1597">The y-coordinate of the first point.</span></span></param>
        <param name="x2"><span data-ttu-id="b889f-1598">2 番目の点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1598">The x-coordinate of the second point.</span></span></param>
        <param name="y2"><span data-ttu-id="b889f-1599">2 番目の点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1599">The y-coordinate of the second point.</span></span></param>
        <summary><span data-ttu-id="b889f-1600">座標ペアで指定された 2 つの点を結ぶ直線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1600">Draws a line connecting the two points specified by the coordinate pairs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1601">このメソッドは、`x1`、`y1`、`x2`、および `y2` の各パラメーターで指定された2つの点を結ぶ線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1601">This method draws a line connecting the two points specified by the `x1`, `y1`, `x2`, and `y2` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1602">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1602">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1603">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1603">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1604">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1604">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1605">線の端点の座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1605">Creates the coordinates of the endpoints of the line.</span></span>  
  
-   <span data-ttu-id="b889f-1606">画面に線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1606">Draws the line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#68](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#68)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#68](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#68)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#68](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#68)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1607"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1607"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md"><span data-ttu-id="b889f-1608">ペンを使用した直線と図形の描画</span><span class="sxs-lookup"><span data-stu-id="b889f-1608">Using a Pen to Draw Lines and Shapes</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawLine">
      <MemberSignature Language="C#" Value="public void DrawLine (System.Drawing.Pen pen, float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLine(class System.Drawing.Pen pen, float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLine(System::Drawing::Pen ^ pen, float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.DrawLine : System.Drawing.Pen * single * single * single * single -&gt; unit" Usage="graphics.DrawLine (pen, x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1609">直線の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1609"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line.</span></span></param>
        <param name="x1"><span data-ttu-id="b889f-1610">最初の点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1610">The x-coordinate of the first point.</span></span></param>
        <param name="y1"><span data-ttu-id="b889f-1611">最初の点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1611">The y-coordinate of the first point.</span></span></param>
        <param name="x2"><span data-ttu-id="b889f-1612">2 番目の点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1612">The x-coordinate of the second point.</span></span></param>
        <param name="y2"><span data-ttu-id="b889f-1613">2 番目の点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1613">The y-coordinate of the second point.</span></span></param>
        <summary><span data-ttu-id="b889f-1614">座標ペアで指定された 2 つの点を結ぶ直線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1614">Draws a line connecting the two points specified by the coordinate pairs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1615">このメソッドは、`x1`、`y1`、`x2`、および `y2` の各パラメーターで指定された2つの点を結ぶ線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1615">This method draws a line connecting the two points specified by the `x1`, `y1`, `x2`, and `y2` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1616">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1616">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1617">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1617">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1618">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1618">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1619">線の端点の座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1619">Creates the coordinates of the endpoints of the line.</span></span>  
  
-   <span data-ttu-id="b889f-1620">画面に線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1620">Draws the line to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#69](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#69)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#69](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#69)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#69](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#69)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1621"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1621"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/using-a-pen-to-draw-lines-and-shapes.md"><span data-ttu-id="b889f-1622">ペンを使用した直線と図形の描画</span><span class="sxs-lookup"><span data-stu-id="b889f-1622">Using a Pen to Draw Lines and Shapes</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-1623"><see cref="T:System.Drawing.Point" /> 構造体の配列を接続する一連の線分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1623">Draws a series of line segments that connect an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawLines">
      <MemberSignature Language="C#" Value="public void DrawLines (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLines(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLines(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawLines : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawLines (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1624">線分の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1624"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line segments.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-1625">接続する複数の点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1625">Array of <see cref="T:System.Drawing.Point" /> structures that represent the points to connect.</span></span></param>
        <summary><span data-ttu-id="b889f-1626"><see cref="T:System.Drawing.Point" /> 構造体の配列を接続する一連の線分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1626">Draws a series of line segments that connect an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1627">このメソッドは、終了点の配列をつなぐ一連の線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1627">This method draws a series of lines connecting an array of ending points.</span></span> <span data-ttu-id="b889f-1628">配列内の最初の2つの点は、最初の行を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1628">The first two points in the array specify the first line.</span></span> <span data-ttu-id="b889f-1629">各追加ポイントは、開始点が前の線分の終点である線分の終点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1629">Each additional point specifies the end of a line segment whose starting point is the ending point of the previous line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1630">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1630">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1631">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1631">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1632">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1632">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1633">直線のセグメントのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1633">Creates an array of points of segments of the line.</span></span>  
  
-   <span data-ttu-id="b889f-1634">接続された線分を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1634">Draws the connected line segments to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#70](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#70)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#70](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#70)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#70](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#70)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1635"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1635"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-1636">または</span><span class="sxs-lookup"><span data-stu-id="b889f-1636">-or-</span></span> 
 <span data-ttu-id="b889f-1637"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1637"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawLines">
      <MemberSignature Language="C#" Value="public void DrawLines (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawLines(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawLines(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawLines : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawLines (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1638">線分の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1638"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the line segments.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-1639">接続する複数の点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1639">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points to connect.</span></span></param>
        <summary><span data-ttu-id="b889f-1640"><see cref="T:System.Drawing.PointF" /> 構造体の配列を接続する一連の線分を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1640">Draws a series of line segments that connect an array of <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1641">このメソッドは、終了点の配列をつなぐ一連の線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1641">This method draws a series of lines connecting an array of ending points.</span></span> <span data-ttu-id="b889f-1642">配列内の最初の2つの点は、最初の行を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1642">The first two points in the array specify the first line.</span></span> <span data-ttu-id="b889f-1643">各追加ポイントは、開始点が前の線分の終点である線分の終点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1643">Each additional point specifies the end of a line segment whose starting point is the ending point of the previous line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1644">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1644">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1645">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1645">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1646">コードは、黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1646">Code creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1647">直線のセグメントのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1647">Creates an array of points of segments of the line.</span></span>  
  
-   <span data-ttu-id="b889f-1648">接続された線分を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1648">Draws the connected line segments to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#71](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#71)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#71](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#71)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#71](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#71)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1649"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1649"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-1650">または</span><span class="sxs-lookup"><span data-stu-id="b889f-1650">-or-</span></span> 
 <span data-ttu-id="b889f-1651"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1651"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPath">
      <MemberSignature Language="C#" Value="public void DrawPath (System.Drawing.Pen pen, System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPath(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPath(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.DrawPath : System.Drawing.Pen * System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="graphics.DrawPath (pen, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1652">パスの色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1652"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the path.</span></span></param>
        <param name="path"><span data-ttu-id="b889f-1653">描画する <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1653"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to draw.</span></span></param>
        <summary><span data-ttu-id="b889f-1654"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1654">Draws a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1655">グラフィックコンテキストの現在の変換は、描画される前に <xref:System.Drawing.Drawing2D.GraphicsPath> に適用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1655">The current transformation in the graphic context is applied to the <xref:System.Drawing.Drawing2D.GraphicsPath> before it is drawn.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1656">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1656">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1657">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1657">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1658">グラフィックスパスオブジェクトを作成し、楕円を追加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1658">Creates a graphics path object and adds an ellipse to it.</span></span>  
  
-   <span data-ttu-id="b889f-1659">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1659">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1660">グラフィックスパスを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1660">Draws the graphics path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#72](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#72)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#72](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#72)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#72](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#72)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1661"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1661"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-1662">または</span><span class="sxs-lookup"><span data-stu-id="b889f-1662">-or-</span></span> 
 <span data-ttu-id="b889f-1663"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1663"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-1664">座標ペア、幅、および高さで指定された楕円と 2 本の半径によって定義される扇形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1664">Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawPie">
      <MemberSignature Language="C#" Value="public void DrawPie (System.Drawing.Pen pen, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPie(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPie(System::Drawing::Pen ^ pen, System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawPie : System.Drawing.Pen * System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphics.DrawPie (pen, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1665">扇形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1665"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-1666">扇形の形状の元となる楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1666"><see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b889f-1667">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-1667">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b889f-1668"><paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-1668">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</span></span></param>
        <summary><span data-ttu-id="b889f-1669"><see cref="T:System.Drawing.Rectangle" /> 構造体と 2 本の半径によって指定された楕円で定義される扇形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1669">Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.Rectangle" /> structure and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1670">このメソッドは、楕円の円弧と、円弧の終点と交差する2つの放射状線で定義される扇形を描画します。楕円は、外接する四角形によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1670">This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="b889f-1671">円グラフは、`startAngle` と `sweepAngle` パラメーターで定義された2つの放射状線と、それらの放射状線と楕円の交差部分との間の弧で構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1671">The pie shape consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="b889f-1672">`sweepAngle` パラメーターが360°を超えるか、-360 度より小さい場合、それぞれが360度または-360 度であるかのように処理されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1672">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1673">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1673">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1674">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1674">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1675">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1675">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1676">完全な楕円の境界となる四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1676">Creates a rectangle that bounds a complete ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-1677">(X 軸を基準として) 描画を開始する角度を定義します。これにより、(両方とも時計回りの方向に) 描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1677">Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="b889f-1678">円のセグメントを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1678">Draws the pie segment to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#73](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#73)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#73](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#73)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#73](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#73)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1679"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1679"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPie">
      <MemberSignature Language="C#" Value="public void DrawPie (System.Drawing.Pen pen, System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPie(class System.Drawing.Pen pen, valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPie(System::Drawing::Pen ^ pen, System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawPie : System.Drawing.Pen * System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphics.DrawPie (pen, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1680">扇形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1680"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-1681">扇形の形状の元となる楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1681"><see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b889f-1682">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-1682">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b889f-1683"><paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-1683">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</span></span></param>
        <summary><span data-ttu-id="b889f-1684"><see cref="T:System.Drawing.RectangleF" /> 構造体と 2 本の半径によって指定された楕円で定義される扇形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1684">Draws a pie shape defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1685">このメソッドは、楕円の円弧と、円弧の終点と交差する2つの放射状線で定義される扇形を描画します。楕円は、外接する四角形によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1685">This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="b889f-1686">円グラフは、`startAngle` と `sweepAngle` パラメーターで定義された2つの放射状線と、それらの放射状線と楕円の交差部分との間の弧で構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1686">The pie shape consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="b889f-1687">`sweepAngle` パラメーターが360°を超えるか、-360 度より小さい場合、それぞれが360度または-360 度であるかのように処理されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1687">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1688">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1688">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1689">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1689">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1690">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1690">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1691">完全な楕円の境界となる四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1691">Creates a rectangle that bounds a complete ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-1692">(X 軸を基準として) 描画を開始する角度を定義します。これにより、(両方とも時計回りの方向に) 描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1692">Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="b889f-1693">円のセグメントを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1693">Draws the pie segment to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#74](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#74)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#74](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#74)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#74](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#74)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1694"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1694"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPie">
      <MemberSignature Language="C#" Value="public void DrawPie (System.Drawing.Pen pen, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPie(class System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height, int32 startAngle, int32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPie(System::Drawing::Pen ^ pen, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawPie : System.Drawing.Pen * int * int * int * int * int * int -&gt; unit" Usage="graphics.DrawPie (pen, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Int32" />
        <Parameter Name="sweepAngle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1695">扇形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1695"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-1696">扇形の形状の元となる楕円を定義する外接する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1696">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-1697">扇形の形状の元となる楕円を定義する外接する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1697">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-1698">扇形の形状の元となる楕円を定義する外接する四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1698">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-1699">扇形の形状の元となる楕円を定義する外接する四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1699">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b889f-1700">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-1700">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b889f-1701"><paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-1701">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</span></span></param>
        <summary><span data-ttu-id="b889f-1702">座標ペア、幅、および高さで指定された楕円と 2 本の半径によって定義される扇形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1702">Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1703">このメソッドは、楕円の円弧と、円弧の終点と交差する2つの放射状線で定義される扇形を描画します。楕円は、`x`、`y`、`width`、および `height` パラメーターで表される外接する四角形によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1703">This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle described by the `x`, `y`, `width`, and `height` parameters.</span></span> <span data-ttu-id="b889f-1704">円グラフは、`startAngle` と `sweepAngle` パラメーターで定義された2つの放射状線と、それらの放射状線と楕円の交差部分との間の弧で構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1704">The pie shape consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="b889f-1705">`sweepAngle` パラメーターが360°を超えるか、-360 度より小さい場合、それぞれが360度または-360 度であるかのように処理されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1705">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1706">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1706">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1707">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1707">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1708">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1708">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1709">完全な楕円の境界となる四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1709">Creates the position and size of a rectangle that bounds a complete ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-1710">(X 軸を基準として) 描画を開始する角度を定義します。これにより、(両方とも時計回りの方向に) 描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1710">Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="b889f-1711">円の形状を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1711">Draws the pie shape to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#75](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#75)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#75](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#75)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#75](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#75)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1712"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1712"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPie">
      <MemberSignature Language="C#" Value="public void DrawPie (System.Drawing.Pen pen, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPie(class System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPie(System::Drawing::Pen ^ pen, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.DrawPie : System.Drawing.Pen * single * single * single * single * single * single -&gt; unit" Usage="graphics.DrawPie (pen, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1713">扇形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1713"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the pie shape.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-1714">扇形の形状の元となる楕円を定義する外接する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1714">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-1715">扇形の形状の元となる楕円を定義する外接する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1715">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-1716">扇形の形状の元となる楕円を定義する外接する四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1716">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-1717">扇形の形状の元となる楕円を定義する外接する四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1717">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b889f-1718">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-1718">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b889f-1719"><paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-1719">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</span></span></param>
        <summary><span data-ttu-id="b889f-1720">座標ペア、幅、および高さで指定された楕円と 2 本の半径によって定義される扇形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1720">Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1721">このメソッドは、楕円の円弧と、円弧の終点と交差する2つの放射状線で定義される扇形を描画します。楕円は、`x`、`y`、`width`、および `height` パラメーターで表される外接する四角形によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1721">This method draws a pie shape defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle described by the `x`, `y`, `width`, and `height` parameters.</span></span> <span data-ttu-id="b889f-1722">円グラフは、`startAngle` と `sweepAngle` パラメーターで定義された2つの放射状線と、それらの放射状線と楕円の交差部分との間の弧で構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1722">The pie shape consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="b889f-1723">`sweepAngle` パラメーターが360°を超えるか、-360 度より小さい場合、それぞれが360度または-360 度であるかのように処理されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1723">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1724">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1724">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1725">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1725">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1726">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1726">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1727">完全な楕円の境界となる四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1727">Creates the position and size of a rectangle that bounds a complete ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-1728">(X 軸を基準として) 描画を開始する角度を定義します。これにより、(両方とも時計回りの方向に) 描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1728">Defines the angles at which to start drawing (relative to the x axis) and through which to draw (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="b889f-1729">円のセグメントを画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1729">Draws the pie segment to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#76](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#76)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#76](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#76)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#76](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#76)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1730"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1730"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-1731"><see cref="T:System.Drawing.Point" /> 構造体の配列で定義された多角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1731">Draws a polygon defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawPolygon">
      <MemberSignature Language="C#" Value="public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPolygon(class System.Drawing.Pen pen, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPolygon(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawPolygon : System.Drawing.Pen * System.Drawing.Point[] -&gt; unit" Usage="graphics.DrawPolygon (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1732">多角形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1732"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the polygon.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-1733">多角形の頂点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1733">Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon.</span></span></param>
        <summary><span data-ttu-id="b889f-1734"><see cref="T:System.Drawing.Point" /> 構造体の配列で定義された多角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1734">Draws a polygon defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1735">配列内の2つの連続するポイントのすべてのペアは、多角形の辺を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1735">Every pair of two consecutive points in the array specifies a side of the polygon.</span></span> <span data-ttu-id="b889f-1736">また、配列の最後のポイントと最初のポイントが一致しない場合は、多角形の最後の辺を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1736">In addition, if the last point and the first point of the array do not coincide, they specify the last side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1737">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1737">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1738">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1738">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1739">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1739">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1740">多角形の頂点の7つのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1740">Creates an array of seven points for the vertices of the polygon.</span></span>  
  
-   <span data-ttu-id="b889f-1741">多角形を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1741">Draws the polygon to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#78](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#78)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#78](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#78)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#78](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#78)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1742"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1742"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawPolygon">
      <MemberSignature Language="C#" Value="public void DrawPolygon (System.Drawing.Pen pen, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawPolygon(class System.Drawing.Pen pen, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawPolygon(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.DrawPolygon : System.Drawing.Pen * System.Drawing.PointF[] -&gt; unit" Usage="graphics.DrawPolygon (pen, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1743">多角形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1743"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the polygon.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-1744">多角形の頂点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1744">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon.</span></span></param>
        <summary><span data-ttu-id="b889f-1745"><see cref="T:System.Drawing.PointF" /> 構造体の配列で定義された多角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1745">Draws a polygon defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1746">配列内の2つの連続するポイントのすべてのペアは、多角形の辺を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1746">Every pair of two consecutive points in the array specifies a side of the polygon.</span></span> <span data-ttu-id="b889f-1747">さらに、最後の点と配列の最初のポイントが一致しない場合は、多角形の最後の辺を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1747">In addition, if the last point and the first of the array point do not coincide, they specify the last side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1748">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1748">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1749">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1749">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1750">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1750">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1751">多角形の頂点の7つのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1751">Creates an array of seven points for the vertices of the polygon.</span></span>  
  
-   <span data-ttu-id="b889f-1752">多角形を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1752">Draws the polygon to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#77](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#77)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#77](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#77)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#77](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#77)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1753"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1753"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-1754">または</span><span class="sxs-lookup"><span data-stu-id="b889f-1754">-or-</span></span> 
 <span data-ttu-id="b889f-1755"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1755"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-1756">座標ペア、幅、および高さで指定された四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1756">Draws a rectangle specified by a coordinate pair, a width, and a height.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawRectangle">
      <MemberSignature Language="C#" Value="public void DrawRectangle (System.Drawing.Pen pen, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangle(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangle(System::Drawing::Pen ^ pen, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangle : System.Drawing.Pen * System.Drawing.Rectangle -&gt; unit" Usage="graphics.DrawRectangle (pen, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1757">四角形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1757">A <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the rectangle.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-1758">描画する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1758">A <see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to draw.</span></span></param>
        <summary><span data-ttu-id="b889f-1759"><see cref="T:System.Drawing.Rectangle" /> 構造体で指定された四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1759">Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1760"><xref:System.Drawing.RectangleF>の描画方法の詳細については、「<xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-1760">For information about how to draw a <xref:System.Drawing.RectangleF>, see <xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1761">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1761">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1762">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1762">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1763">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1763">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1764">四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1764">Creates a rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-1765">四角形を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1765">Draws the rectangle to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#79](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#79)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#79](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#79)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#79](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#79)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1766"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1766"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawRectangle">
      <MemberSignature Language="C#" Value="public void DrawRectangle (System.Drawing.Pen pen, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangle(class System.Drawing.Pen pen, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangle(System::Drawing::Pen ^ pen, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangle : System.Drawing.Pen * int * int * int * int -&gt; unit" Usage="graphics.DrawRectangle (pen, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1767">四角形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1767"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the rectangle.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-1768">描画する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1768">The x-coordinate of the upper-left corner of the rectangle to draw.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-1769">描画する四角形の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1769">The y-coordinate of the upper-left corner of the rectangle to draw.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-1770">描画する四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1770">Width of the rectangle to draw.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-1771">描画する四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1771">Height of the rectangle to draw.</span></span></param>
        <summary><span data-ttu-id="b889f-1772">座標ペア、幅、および高さで指定された四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1772">Draws a rectangle specified by a coordinate pair, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1773"><xref:System.Drawing.RectangleF>の描画方法の詳細については、「<xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-1773">For information about how to draw a <xref:System.Drawing.RectangleF>, see <xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1774">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1774">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1775">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1775">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1776">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1776">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1777">四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1777">Creates the position and size of a rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-1778">四角形を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1778">Draws the rectangle to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#80](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#80)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#80](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#80)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#80](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#80)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1779"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1779"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawRectangle">
      <MemberSignature Language="C#" Value="public void DrawRectangle (System.Drawing.Pen pen, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangle(class System.Drawing.Pen pen, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangle(System::Drawing::Pen ^ pen, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangle : System.Drawing.Pen * single * single * single * single -&gt; unit" Usage="graphics.DrawRectangle (pen, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1780">四角形の色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1780">A <see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the rectangle.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-1781">描画する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1781">The x-coordinate of the upper-left corner of the rectangle to draw.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-1782">描画する四角形の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1782">The y-coordinate of the upper-left corner of the rectangle to draw.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-1783">描画する四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-1783">The width of the rectangle to draw.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-1784">描画する四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-1784">The height of the rectangle to draw.</span></span></param>
        <summary><span data-ttu-id="b889f-1785">座標ペア、幅、および高さで指定された四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1785">Draws a rectangle specified by a coordinate pair, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1786"><xref:System.Drawing.RectangleF>の描画方法の詳細については、「<xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-1786">For information about how to draw a <xref:System.Drawing.RectangleF>, see <xref:System.Drawing.Graphics.DrawRectangles%28System.Drawing.Pen%2CSystem.Drawing.RectangleF%5B%5D%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1787">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1787">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1788">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1788">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1789">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1789">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1790">四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1790">Creates the position and size of a rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-1791">四角形を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1791">Draws the rectangle to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#81](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#81)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#81](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#81)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#81](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#81)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1792"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1792"><paramref name="pen" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-1793"><see cref="T:System.Drawing.Rectangle" /> 構造体で指定された一連の四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1793">Draws a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawRectangles">
      <MemberSignature Language="C#" Value="public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangles(class System.Drawing.Pen pen, valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangles(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangles : System.Drawing.Pen * System.Drawing.Rectangle[] -&gt; unit" Usage="graphics.DrawRectangles (pen, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1794">四角形のアウトラインの色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1794"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the outlines of the rectangles.</span></span></param>
        <param name="rects"><span data-ttu-id="b889f-1795">描画する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1795">Array of <see cref="T:System.Drawing.Rectangle" /> structures that represent the rectangles to draw.</span></span></param>
        <summary><span data-ttu-id="b889f-1796"><see cref="T:System.Drawing.Rectangle" /> 構造体で指定された一連の四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1796">Draws a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-1797">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1797">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1798">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1798">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1799">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1799">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1800">3つの四角形の配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1800">Creates an array of three rectangles.</span></span>  
  
-   <span data-ttu-id="b889f-1801">四角形を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1801">Draws the rectangles to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#82](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#82)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#82](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#82)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#82](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#82)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1802"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1802"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-1803">または</span><span class="sxs-lookup"><span data-stu-id="b889f-1803">-or-</span></span> 
 <span data-ttu-id="b889f-1804"><paramref name="rects" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1804"><paramref name="rects" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b889f-1805"><paramref name="rects" /> は長さゼロの配列です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1805"><paramref name="rects" /> is a zero-length array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DrawRectangles">
      <MemberSignature Language="C#" Value="public void DrawRectangles (System.Drawing.Pen pen, System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawRectangles(class System.Drawing.Pen pen, valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawRectangles(System::Drawing::Pen ^ pen, cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.DrawRectangles : System.Drawing.Pen * System.Drawing.RectangleF[] -&gt; unit" Usage="graphics.DrawRectangles (pen, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="pen"><span data-ttu-id="b889f-1806">四角形のアウトラインの色、幅、およびスタイルを決定する <see cref="T:System.Drawing.Pen" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1806"><see cref="T:System.Drawing.Pen" /> that determines the color, width, and style of the outlines of the rectangles.</span></span></param>
        <param name="rects"><span data-ttu-id="b889f-1807">描画する四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1807">Array of <see cref="T:System.Drawing.RectangleF" /> structures that represent the rectangles to draw.</span></span></param>
        <summary><span data-ttu-id="b889f-1808"><see cref="T:System.Drawing.RectangleF" /> 構造体で指定された一連の四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1808">Draws a series of rectangles specified by <see cref="T:System.Drawing.RectangleF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-1809">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1809">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1810">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1810">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1811">黒のペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1811">Creates a black pen.</span></span>  
  
-   <span data-ttu-id="b889f-1812">3つの四角形の配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1812">Creates an array of three rectangles.</span></span>  
  
-   <span data-ttu-id="b889f-1813">四角形を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1813">Draws the rectangles to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#83](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#83)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#83](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#83)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#83](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#83)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1814"><paramref name="pen" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1814"><paramref name="pen" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-1815">または</span><span class="sxs-lookup"><span data-stu-id="b889f-1815">-or-</span></span> 
 <span data-ttu-id="b889f-1816"><paramref name="rects" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1816"><paramref name="rects" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b889f-1817"><paramref name="rects" /> は長さゼロの配列です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1817"><paramref name="rects" /> is a zero-length array.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DrawString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-1818">指定した位置に、指定した <see cref="T:System.Drawing.Brush" /> オブジェクトと <see cref="T:System.Drawing.Font" /> オブジェクトで、指定した文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1818">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * System.Drawing.PointF -&gt; unit" Usage="graphics.DrawString (s, font, brush, point)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b889f-1819">描画する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1819">String to draw.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-1820">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1820"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="brush"><span data-ttu-id="b889f-1821">描画するテキストの色とテクスチャを決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1821"><see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span></span></param>
        <param name="point"><span data-ttu-id="b889f-1822">描画するテキストの左上隅を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1822"><see cref="T:System.Drawing.PointF" /> structure that specifies the upper-left corner of the drawn text.</span></span></param>
        <summary><span data-ttu-id="b889f-1823">指定した位置に、指定した <see cref="T:System.Drawing.Brush" /> オブジェクトと <see cref="T:System.Drawing.Font" /> オブジェクトで、指定した文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1823">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-1824">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1824">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1825">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1825">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1826">描画するテキスト文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1826">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1827">フォントを Arial (16pt) として定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1827">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="b889f-1828">描画する塗りつぶされた黒のブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1828">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="b889f-1829">テキストを描画する左上隅の点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1829">Creates a point for the upper-left corner at which to draw the text.</span></span>  
  
-   <span data-ttu-id="b889f-1830">フォント、ブラシ、および変換先ポイントを使用して、文字列を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1830">Draws the string to the screen using the font, brush, and destination point.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#84](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#84)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#84](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#84)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#84](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#84)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1831"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1831"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-1832">または</span><span class="sxs-lookup"><span data-stu-id="b889f-1832">-or-</span></span> 
 <span data-ttu-id="b889f-1833"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1833"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-1834">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-1834">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF layoutRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, System::Drawing::RectangleF layoutRectangle);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * System.Drawing.RectangleF -&gt; unit" Usage="graphics.DrawString (s, font, brush, layoutRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b889f-1835">描画する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1835">String to draw.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-1836">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1836"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="brush"><span data-ttu-id="b889f-1837">描画するテキストの色とテクスチャを決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1837"><see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span></span></param>
        <param name="layoutRectangle"><span data-ttu-id="b889f-1838">描画するテキストの位置を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1838"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.</span></span></param>
        <summary><span data-ttu-id="b889f-1839">指定した <see cref="T:System.Drawing.Brush" /> オブジェクトと <see cref="T:System.Drawing.Font" /> オブジェクトで、指定した文字列を指定した四角形内に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1839">Draws the specified text string in the specified rectangle with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1840">`s` パラメーターによって表されるテキストは、`layoutRectangle` パラメーターで表される四角形の内部に描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1840">The text represented by the `s` parameter is drawn inside the rectangle represented by the `layoutRectangle` parameter.</span></span> <span data-ttu-id="b889f-1841">テキストが四角形内に収まっていない場合は、最も近い単語で切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1841">If the text does not fit inside the rectangle, it is truncated at the nearest word.</span></span> <span data-ttu-id="b889f-1842">四角形内での文字列の描画方法をさらに操作するには、<xref:System.Drawing.StringFormat>を受け取る <xref:System.Drawing.Graphics.DrawString%2A> オーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1842">To further manipulate how the string is drawn inside the rectangle use the <xref:System.Drawing.Graphics.DrawString%2A> overload that takes a <xref:System.Drawing.StringFormat>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1843">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1843">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1844">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1844">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1845">描画するテキスト文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1845">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1846">フォントを Arial (16pt) として定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1846">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="b889f-1847">描画する塗りつぶされた黒のブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1847">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="b889f-1848">テキストを描画する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1848">Creates a rectangle in which to draw the text.</span></span>  
  
-   <span data-ttu-id="b889f-1849">四角形を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1849">Draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1850">フォント、ブラシ、および変換先の四角形を使用して、文字列を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1850">Draws the string to the screen using the font, brush, and destination rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#86](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#86)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#86](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#86)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#86](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#86)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1851"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1851"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-1852">または</span><span class="sxs-lookup"><span data-stu-id="b889f-1852">-or-</span></span> 
 <span data-ttu-id="b889f-1853"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1853"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-1854">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-1854">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.PointF point, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, valuetype System.Drawing.PointF point, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, System::Drawing::PointF point, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphics.DrawString (s, font, brush, point, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b889f-1855">描画する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1855">String to draw.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-1856">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1856"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="brush"><span data-ttu-id="b889f-1857">描画するテキストの色とテクスチャを決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1857"><see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span></span></param>
        <param name="point"><span data-ttu-id="b889f-1858">描画するテキストの左上隅を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1858"><see cref="T:System.Drawing.PointF" /> structure that specifies the upper-left corner of the drawn text.</span></span></param>
        <param name="format"><span data-ttu-id="b889f-1859">描画するテキストに適用する行間や配置などの書式属性を指定する <see cref="T:System.Drawing.StringFormat" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1859"><see cref="T:System.Drawing.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</span></span></param>
        <summary><span data-ttu-id="b889f-1860">指定した <see cref="T:System.Drawing.Brush" /> の書式属性を使用して、指定した <see cref="T:System.Drawing.Font" /> オブジェクトおよび <see cref="T:System.Drawing.StringFormat" /> オブジェクトで、指定した位置に指定した文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1860">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-1861">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1861">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1862">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1862">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1863">描画するテキスト文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1863">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1864">フォントを Arial (16pt) として定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1864">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="b889f-1865">描画する塗りつぶされた黒のブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1865">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="b889f-1866">テキストを描画する左上隅の点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1866">Creates a point for the upper-left corner at which to draw the text.</span></span>  
  
-   <span data-ttu-id="b889f-1867">垂直方向に描画する文字列の形式を設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1867">Sets the format of the string to draw vertically.</span></span>  
  
-   <span data-ttu-id="b889f-1868">フォント、ブラシ、ターゲットポイント、および形式を使用して、文字列を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1868">Draws the string to the screen using the font, brush, destination point, and format.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#85](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#85)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#85](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#85)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#85](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#85)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1869"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1869"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-1870">または</span><span class="sxs-lookup"><span data-stu-id="b889f-1870">-or-</span></span> 
 <span data-ttu-id="b889f-1871"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1871"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-1872">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-1872">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, System.Drawing.RectangleF layoutRectangle, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF layoutRectangle, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, System::Drawing::RectangleF layoutRectangle, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphics.DrawString (s, font, brush, layoutRectangle, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="layoutRectangle" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b889f-1873">描画する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1873">String to draw.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-1874">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1874"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="brush"><span data-ttu-id="b889f-1875">描画するテキストの色とテクスチャを決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1875"><see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span></span></param>
        <param name="layoutRectangle"><span data-ttu-id="b889f-1876">描画するテキストの位置を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1876"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.</span></span></param>
        <param name="format"><span data-ttu-id="b889f-1877">描画するテキストに適用する行間や配置などの書式属性を指定する <see cref="T:System.Drawing.StringFormat" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1877"><see cref="T:System.Drawing.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</span></span></param>
        <summary><span data-ttu-id="b889f-1878">指定した <see cref="T:System.Drawing.Brush" /> の書式属性を使用して、指定した <see cref="T:System.Drawing.Font" /> オブジェクトおよび <see cref="T:System.Drawing.StringFormat" /> オブジェクトで、指定した四角形に指定した文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1878">Draws the specified text string in the specified rectangle with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1879">`s` パラメーターによって表されるテキストは、`layoutRectangle` パラメーターで表される四角形の内部に描画されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1879">The text represented by the `s` parameter is drawn inside the rectangle represented by the `layoutRectangle` parameter.</span></span> <span data-ttu-id="b889f-1880">テキストが四角形内に収まっていない場合は、`format` パラメーターで指定しない限り、最も近い単語で切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1880">If the text does not fit inside the rectangle, it is truncated at the nearest word, unless otherwise specified with the `format` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1881">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1881">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1882">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1882">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1883">描画するテキスト文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1883">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1884">フォントを Arial (16pt) として定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1884">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="b889f-1885">描画する塗りつぶされた黒のブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1885">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="b889f-1886">テキストを描画する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1886">Creates a rectangle in which to draw the text.</span></span>  
  
-   <span data-ttu-id="b889f-1887">四角形を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1887">Draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-1888">四角形内の中央に配置する文字列の形式を設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1888">Sets the format of the string to center it within the rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-1889">フォント、ブラシ、および変換先の四角形を使用して、文字列を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1889">Draws the string to the screen using the font, brush, and destination rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#87](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#87)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#87](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#87)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#87](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#87)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1890"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1890"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-1891">または</span><span class="sxs-lookup"><span data-stu-id="b889f-1891">-or-</span></span> 
 <span data-ttu-id="b889f-1892"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1892"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-1893">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-1893">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, float x, float y);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * single * single -&gt; unit" Usage="graphics.DrawString (s, font, brush, x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b889f-1894">描画する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1894">String to draw.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-1895">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1895"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="brush"><span data-ttu-id="b889f-1896">描画するテキストの色とテクスチャを決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1896"><see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-1897">描画するテキストの左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1897">The x-coordinate of the upper-left corner of the drawn text.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-1898">描画するテキストの左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1898">The y-coordinate of the upper-left corner of the drawn text.</span></span></param>
        <summary><span data-ttu-id="b889f-1899">指定した位置に、指定した <see cref="T:System.Drawing.Brush" /> オブジェクトと <see cref="T:System.Drawing.Font" /> オブジェクトで、指定した文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1899">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-1900">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1900">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1901">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1901">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1902">描画するテキスト文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1902">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1903">フォントを Arial (16pt) として定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1903">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="b889f-1904">描画する黒の塗りつぶしブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1904">Creates a solid black brush to draw with.</span></span>  
  
-   <span data-ttu-id="b889f-1905">テキストを描画する左上隅の点を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1905">Creates a point for the upper-left corner at which to draw the text.</span></span>  
  
-   <span data-ttu-id="b889f-1906">フォント、ブラシ、および変換先ポイントを使用して、文字列を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1906">Draws the string to the screen using the font, brush, and destination point.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#88](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#88)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#88](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#88)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#88](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#88)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1907"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1907"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-1908">または</span><span class="sxs-lookup"><span data-stu-id="b889f-1908">-or-</span></span> 
 <span data-ttu-id="b889f-1909"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1909"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-1910">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-1910">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DrawString">
      <MemberSignature Language="C#" Value="public void DrawString (string s, System.Drawing.Font font, System.Drawing.Brush brush, float x, float y, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawString(string s, class System.Drawing.Font font, class System.Drawing.Brush brush, float32 x, float32 y, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawString(System::String ^ s, System::Drawing::Font ^ font, System::Drawing::Brush ^ brush, float x, float y, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.DrawString : string * System.Drawing.Font * System.Drawing.Brush * single * single * System.Drawing.StringFormat -&gt; unit" Usage="graphics.DrawString (s, font, brush, x, y, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="b889f-1911">描画する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1911">String to draw.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-1912">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1912"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="brush"><span data-ttu-id="b889f-1913">描画するテキストの色とテクスチャを決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1913"><see cref="T:System.Drawing.Brush" /> that determines the color and texture of the drawn text.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-1914">描画するテキストの左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1914">The x-coordinate of the upper-left corner of the drawn text.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-1915">描画するテキストの左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-1915">The y-coordinate of the upper-left corner of the drawn text.</span></span></param>
        <param name="format"><span data-ttu-id="b889f-1916">描画するテキストに適用する行間や配置などの書式属性を指定する <see cref="T:System.Drawing.StringFormat" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1916"><see cref="T:System.Drawing.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</span></span></param>
        <summary><span data-ttu-id="b889f-1917">指定した <see cref="T:System.Drawing.Brush" /> の書式属性を使用して、指定した <see cref="T:System.Drawing.Font" /> オブジェクトおよび <see cref="T:System.Drawing.StringFormat" /> オブジェクトで、指定した位置に指定した文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1917">Draws the specified text string at the specified location with the specified <see cref="T:System.Drawing.Brush" /> and <see cref="T:System.Drawing.Font" /> objects using the formatting attributes of the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-1918">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1918">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1919">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1919">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1920">描画するテキスト文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1920">Creates a text string to draw.</span></span>  
  
-   <span data-ttu-id="b889f-1921">フォントを Arial (16pt) として定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1921">Defines the font as Arial (16pt).</span></span>  
  
-   <span data-ttu-id="b889f-1922">描画する塗りつぶされた黒のブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1922">Creates a solid, black brush to draw with.</span></span>  
  
-   <span data-ttu-id="b889f-1923">テキストを描画する左上隅の点の座標を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1923">Creates the coordinates of a point for the upper-left corner at which to draw the text.</span></span>  
  
-   <span data-ttu-id="b889f-1924">文字列の書式を垂直方向に描画するように設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1924">Sets the format of the string to draw vertically</span></span>  
  
-   <span data-ttu-id="b889f-1925">フォント、ブラシ、ターゲットポイント、および形式を使用して、文字列を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1925">Draws the string to the screen using the font, brush, destination point, and format.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#89](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#89)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#89](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#89)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#89](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#89)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-1926"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1926"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-1927">または</span><span class="sxs-lookup"><span data-stu-id="b889f-1927">-or-</span></span> 
 <span data-ttu-id="b889f-1928"><paramref name="s" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1928"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-1929">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-1929">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EndContainer">
      <MemberSignature Language="C#" Value="public void EndContainer (System.Drawing.Drawing2D.GraphicsContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndContainer(class System.Drawing.Drawing2D.GraphicsContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndContainer (container As GraphicsContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndContainer(System::Drawing::Drawing2D::GraphicsContainer ^ container);" />
      <MemberSignature Language="F#" Value="member this.EndContainer : System.Drawing.Drawing2D.GraphicsContainer -&gt; unit" Usage="graphics.EndContainer container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Drawing.Drawing2D.GraphicsContainer" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="b889f-1930">このメソッドで復元されるコンテナーを表す <see cref="T:System.Drawing.Drawing2D.GraphicsContainer" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1930"><see cref="T:System.Drawing.Drawing2D.GraphicsContainer" /> that represents the container this method restores.</span></span></param>
        <summary><span data-ttu-id="b889f-1931">現在のグラフィックス コンテナーを閉じ、この <see cref="T:System.Drawing.Graphics" /> の状態を、<see cref="M:System.Drawing.Graphics.BeginContainer" /> メソッドを呼び出すことによって保存されていた状態に復元します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1931">Closes the current graphics container and restores the state of this <see cref="T:System.Drawing.Graphics" /> to the state saved by a call to the <see cref="M:System.Drawing.Graphics.BeginContainer" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1932">このメソッドを <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドと共に使用して、入れ子になったグラフィックスコンテナーを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1932">Use this method with the <xref:System.Drawing.Graphics.BeginContainer%2A> method to create nested graphics containers.</span></span> <span data-ttu-id="b889f-1933">グラフィックスコンテナーは、変換、クリッピング領域、レンダリングプロパティなどのグラフィックスの状態を保持します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1933">Graphics containers retain graphics state, such as transformation, clipping region, and rendering properties.</span></span>  
  
 <span data-ttu-id="b889f-1934"><xref:System.Drawing.Graphics>の <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics> の状態を保持する情報ブロックがスタックに配置されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1934">When you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="b889f-1935"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドは、その情報ブロックを識別する <xref:System.Drawing.Drawing2D.GraphicsContainer> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1935">The <xref:System.Drawing.Graphics.BeginContainer%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsContainer> that identifies that information block.</span></span> <span data-ttu-id="b889f-1936">識別オブジェクトを <xref:System.Drawing.Graphics.EndContainer%2A> メソッドに渡すと、情報ブロックがスタックから削除され、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出し時の状態に <xref:System.Drawing.Graphics> を復元するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1936">When you pass the identifying object to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="b889f-1937">コンテナーは入れ子にすることができます。つまり、<xref:System.Drawing.Graphics.EndContainer%2A> メソッドを呼び出す前に、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1937">Containers can be nested; that is, you can call the <xref:System.Drawing.Graphics.BeginContainer%2A> method several times before you call the <xref:System.Drawing.Graphics.EndContainer%2A> method.</span></span> <span data-ttu-id="b889f-1938"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを呼び出すたびに、情報ブロックがスタックに配置され、情報ブロックの <xref:System.Drawing.Drawing2D.GraphicsContainer> を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1938">Each time you call the <xref:System.Drawing.Graphics.BeginContainer%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsContainer> for the information block.</span></span> <span data-ttu-id="b889f-1939">これらのオブジェクトのいずれかを <xref:System.Drawing.Graphics.EndContainer%2A> メソッドに渡すと、その <xref:System.Drawing.Graphics> は、その特定の <xref:System.Drawing.Drawing2D.GraphicsContainer>を返した <xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出し時の状態に戻ります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1939">When you pass one of those objects to the <xref:System.Drawing.Graphics.EndContainer%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.BeginContainer%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsContainer>.</span></span> <span data-ttu-id="b889f-1940"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しによってスタックに配置された情報ブロックがスタックから削除され、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しの後にそのスタックに配置されたすべての情報ブロックも削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1940">The information block placed on the stack by that <xref:System.Drawing.Graphics.BeginContainer%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.BeginContainer%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="b889f-1941"><xref:System.Drawing.Graphics.Save%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドの呼び出しと同じスタックに情報ブロックが配置されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1941">Calls to the <xref:System.Drawing.Graphics.Save%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method.</span></span> <span data-ttu-id="b889f-1942"><xref:System.Drawing.Graphics.EndContainer%2A> メソッド呼び出しが <xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しとペアになっているのと同様に、<xref:System.Drawing.Graphics.Restore%2A> メソッド呼び出しは <xref:System.Drawing.Graphics.Save%2A> メソッド呼び出しとペアになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1942">Just as an <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call, a <xref:System.Drawing.Graphics.Restore%2A> method call is paired with a <xref:System.Drawing.Graphics.Save%2A> method call.</span></span>  
  
 <span data-ttu-id="b889f-1943"><xref:System.Drawing.Graphics.EndContainer%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドへの対応する呼び出しがスタックから削除された後に、(<xref:System.Drawing.Graphics.Save%2A> メソッドまたは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって) スタックに配置されたすべての情報ブロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1943">When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span> <span data-ttu-id="b889f-1944">同様に、<xref:System.Drawing.Graphics.Restore%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.Save%2A> メソッドへの対応する呼び出しがスタックから削除された後に、(<xref:System.Drawing.Graphics.Save%2A> メソッドまたは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって) スタックに配置されたすべての情報ブロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1944">Likewise, when you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1945">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1945">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-1946">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1946">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-1947">新しいグラフィックスコンテナーを開き、古いコンテナーを保存します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1947">Opens a new graphics container and saves the old container.</span></span>  
  
-   <span data-ttu-id="b889f-1948">コンテナー内のワールド座標を変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1948">Translates the world coordinates in the container.</span></span>  
  
-   <span data-ttu-id="b889f-1949">新しいコンテナーの (平行移動された座標) の赤い四角形に塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-1949">Fills a red rectangle in the (translated coordinates of the) new container.</span></span>  
  
-   <span data-ttu-id="b889f-1950">新しいコンテナーを閉じ、保存されたコンテナーを復元します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1950">Closes the new container and restores the saved container.</span></span>  
  
-   <span data-ttu-id="b889f-1951">保存されたコンテナーの緑の四角形 (平行変換されていない座標) に塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-1951">Fills a green rectangle (to the untranslated coordinates) of the saved container.</span></span>  
  
 <span data-ttu-id="b889f-1952">結果は、同じサイズの赤い四角形を overlies する緑色の四角形です。</span><span class="sxs-lookup"><span data-stu-id="b889f-1952">The result is a green rectangle that overlies a red rectangle of the same size.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#90](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#90)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#90](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#90)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#90](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#90)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnumerateMetafile">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-1953">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1953">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-1954">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1954"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="b889f-1955">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1955"><see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-1956">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-1956"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="b889f-1957">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1957">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1958">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1958">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-1959">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1959">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-1960">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1960">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-1961">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1961">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1962">次のコード例では、プライベートメンバーの1つとして <xref:System.Drawing.Imaging.Metafile> を持つフォームを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1962">The following code example creates a form that has a <xref:System.Drawing.Imaging.Metafile> as one of its private members.</span></span> <span data-ttu-id="b889f-1963"><xref:System.Windows.Forms.Control.OnPaint%2A> メソッドは <xref:System.Drawing.Graphics.EnumerateMetafile%2A>を呼び出します。これにより、メタファイル内の各レコードに対してフォームの `MetafileCallback` メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1963">The <xref:System.Windows.Forms.Control.OnPaint%2A> method calls <xref:System.Drawing.Graphics.EnumerateMetafile%2A>, which calls the form's `MetafileCallback` method for each record in the metafile.</span></span> <span data-ttu-id="b889f-1964">`MetafileCallback` メソッドは <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1964">The `MetafileCallback` method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method.</span></span> <span data-ttu-id="b889f-1965">`MetafileCallback` メソッドはレコードデータを <xref:System.IntPtr>として受け取ることに注意してくださいが、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドでは、レコードデータがバイト配列であることが想定されています。</span><span class="sxs-lookup"><span data-stu-id="b889f-1965">Notice that the `MetafileCallback` method receives the record data as an <xref:System.IntPtr>, but the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method expects the record data to be a byte array.</span></span> <span data-ttu-id="b889f-1966"><xref:System.Runtime.InteropServices.Marshal.Copy%2A> を呼び出すと、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>に渡すことができるように、レコードデータがバイト配列にコピーされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1966">The call to <xref:System.Runtime.InteropServices.Marshal.Copy%2A> copies the record data to a byte array so that it can be passed to <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>.</span></span>  
  
 [!code-csharp[System.Drawing.Graphics.EnumerateMetafile#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Graphics.EnumerateMetafile/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Graphics.EnumerateMetafile#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Graphics.EnumerateMetafile/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1967">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1967">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-1968">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1968"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-1969">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1969">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-1970">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-1970"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="b889f-1971">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1971">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1972">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1972">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-1973">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1973">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-1974">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1974">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-1975">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1975">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1976">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-1976">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1977">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1977">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-1978">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1978"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="b889f-1979">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-1979"><see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-1980">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-1980"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="b889f-1981">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1981">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1982">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1982">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-1983">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1983">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-1984">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1984">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-1985">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1985">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-1986">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-1986">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-1987">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-1987">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-1988">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-1988"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-1989">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-1989">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-1990">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-1990"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="b889f-1991">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1991">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-1992">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1992">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-1993">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1993">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-1994">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1994">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-1995">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-1995">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-1996">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1996">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-1997">3つの <xref:System.Drawing.PointF> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-1997">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-1998">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1998">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="b889f-1999">描画されたメタファイルは、平行四辺形に合わせて拡大縮小および傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-1999">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2000">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2000">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2001">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2001">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2002">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2002"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-2003">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2003"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2004">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2004"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="b889f-2005">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2005">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2006">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2006">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2007">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2007">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2008">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2008">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2009">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2009">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2010">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2010">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2011">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2011">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2012">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2012"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-2013">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2013"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2014">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2014"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="b889f-2015">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2015">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2016">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2016">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2017">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2017">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2018">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2018">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2019">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2019">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2020">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2020">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2021">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2021">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2022">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2022"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="b889f-2023">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2023"><see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2024">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2024"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2025">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2025">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2026">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2026">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-2027">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2027">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2028">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2028">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2029">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2029">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2030">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2030">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2031">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2031">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2032">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2032">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2033">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2033">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2034">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2034"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-2035">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2035">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2036">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2036"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2037">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2037">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2038">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2038">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-2039">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2039">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2040">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2040">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2041">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2041">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2042">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2042">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2043">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2043">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2044">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2044">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2045">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2045"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="b889f-2046">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2046"><see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2047">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2047"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2048">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2048">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2049">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2049">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-2050">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2050">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2051">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2051">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2052">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2052">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2053">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2053">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2054">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2054">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2055">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2055">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2056">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2056">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2057">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2057"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-2058">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2058">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2059">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2059"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2060">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2060">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2061">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2061">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-2062">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2062">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2063">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2063">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2064">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2064">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2065">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2065">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2066">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2066">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2067">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2067">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-2068">3つの <xref:System.Drawing.PointF> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2068">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-2069">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2069">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="b889f-2070">描画されたメタファイルは、平行四辺形に合わせて拡大縮小および傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2070">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2071">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2071">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2072">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2072">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2073">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2073"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-2074">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2074"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2075">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2075"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2076">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2076">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2077">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2077">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-2078">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2078">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2079">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2079">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2080">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2080">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2081">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2081">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2082">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2082">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2083">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2083">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2084">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2084">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2085">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2085"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-2086">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2086"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2087">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2087"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2088">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2088">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2089">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2089">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-2090">指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2090">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2091">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2091">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2092">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2092">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2093">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2093">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2094">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2094">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2095">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2095">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2096">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2096">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2097">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2097"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="b889f-2098">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2098"><see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2099">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2099"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2100">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2100">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2101">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2101">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-2102">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2102"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-2103">指定したイメージ属性を使用して、指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2103">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2104">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2104">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2105">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2105">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2106">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2106">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2107">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2107">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2108">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2108">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2109">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2109">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2110">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2110"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="b889f-2111">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2111"><see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2112">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2112"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-2113"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2113">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2114">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2114"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="b889f-2115"><see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2115">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2116">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2116">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2117">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2117">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2118">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2118">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2119">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2119">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2120">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2120">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2121">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2121"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-2122">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2122">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2123">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2123"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2124">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2124">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2125">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2125">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-2126">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2126"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-2127">指定したイメージ属性を使用して、指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2127">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2128">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2128">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2129">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2129">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2130">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2130">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2131">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2131">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2132">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2132">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-2133">3つの <xref:System.Drawing.Point> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2133">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-2134">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2134">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="b889f-2135">描画されたメタファイルは、平行四辺形に合わせて拡大縮小および傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2135">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-2136">`imageAttr` パラメーターによって指定されたイメージ属性は、メタファイルが書き込まれたときに指定された属性を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2136">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2137">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2137">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2138">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2138">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2139">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2139"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-2140">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2140">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2141">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2141"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-2142"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2142">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2143">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2143"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="b889f-2144"><see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2144">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2145">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2145">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2146">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2146">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2147">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2147">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2148">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2148">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2149">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2149">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-2150">3つの <xref:System.Drawing.Point> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2150">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-2151">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2151">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="b889f-2152">描画されたメタファイルは、平行四辺形に合わせて拡大縮小および傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2152">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-2153">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2153">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2154">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2154">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2155">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2155"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="b889f-2156">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2156"><see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2157">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2157"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2158">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2158">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2159">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2159">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-2160">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2160"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-2161">指定したイメージ属性を使用して、指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2161">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2162">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2162">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2163">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2163">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2164">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2164">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2165">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> のメソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2165">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2166">`imageAttr` パラメーターによって指定されたイメージ属性は、メタファイルが書き込まれたときに指定された属性を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2166">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2167">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2167">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2168">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2168">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2169">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2169"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="b889f-2170">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2170"><see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2171">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2171"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-2172"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2172">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2173">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2173"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="b889f-2174"><see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2174">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2175">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2175">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2176">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2176">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2177">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2177">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2178">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2178">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2179">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2179">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2180">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2180">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2181">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2181"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-2182">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2182">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2183">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2183"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2184">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2184">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2185">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2185">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-2186">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2186"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-2187">指定したイメージ属性を使用して、指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2187">Sends the records in the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2188">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2188">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2189">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2189">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2190">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2190">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2191">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2191">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2192">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2192">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-2193">3つの <xref:System.Drawing.PointF> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2193">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-2194">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2194">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="b889f-2195">描画されたメタファイルは、平行四辺形に合わせて拡大縮小および傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2195">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-2196">`imageAttr` パラメーターによって指定されたイメージ属性は、メタファイルが書き込まれたときに指定された属性を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2196">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2197">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2197">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2198">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2198">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2199">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2199"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-2200">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2200">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2201">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2201"><see cref="T:System.Drawing.RectangleF" /> structures that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-2202"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2202">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2203">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2203"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="b889f-2204"><see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2204">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2205">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2205">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2206">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2206">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2207">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2207">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2208">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2208">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2209">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2209">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-2210">3つの <xref:System.Drawing.Point> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2210">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-2211">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2211">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="b889f-2212">描画されたメタファイルは、平行四辺形に合わせて拡大縮小および傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2212">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-2213">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2213">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2214">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2214">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2215">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2215">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2216">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2216"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-2217">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2217"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2218">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2218"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2219">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2219">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2220">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2220">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-2221">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2221"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-2222">指定したイメージ属性を使用して、指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2222">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2223">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2223">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2224">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2224">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2225">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2225">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2226">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2226">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2227">`imageAttr` パラメーターによって指定されたイメージ属性は、メタファイルが書き込まれたときに指定された属性を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2227">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2228">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2228">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2229">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2229">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2230">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2230"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-2231">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2231"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2232">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2232"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-2233"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2233">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2234">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2234"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="b889f-2235"><see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2235">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2236">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2236">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2237">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2237">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2238">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2238">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2239">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2239">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2240">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2240">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2241">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2241">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2242">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2242">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2243">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2243"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-2244">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2244"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2245">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2245"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2246">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2246">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2247">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2247">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-2248">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2248"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-2249">指定したイメージ属性を使用して、指定した <see cref="T:System.Drawing.Imaging.Metafile" /> のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2249">Sends the records of the specified <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2250">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2250">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2251">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2251">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2252">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2252">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2253">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2253">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2254">`imageAttr` パラメーターによって指定されたイメージ属性は、メタファイルが書き込まれたときに指定された属性を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2254">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2255">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2255">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2256">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2256">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, srcUnit, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2257">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2257"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-2258">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2258"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2259">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2259"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-2260"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2260">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2261">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2261"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <summary><span data-ttu-id="b889f-2262"><see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2262">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2263">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2263">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2264">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2264">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2265">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2265">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2266">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2266">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2267">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2267">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2268">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2268">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2269">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2269">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2270">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2270"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="b889f-2271">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2271"><see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2272">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2272"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-2273"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2273">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2274">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2274"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2275">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2275">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2276">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2276">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-2277"><see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2277">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2278">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2278">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2279">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2279">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2280">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2280">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2281">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2281">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2282">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2282">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2283">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2283">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2284">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2284"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-2285">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2285">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2286">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2286"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-2287"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2287">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2288">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2288"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2289">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2289">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2290">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2290">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-2291"><see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2291">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2292">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2292">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2293">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2293">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2294">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2294">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2295">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2295">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2296">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2296">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-2297">3つの <xref:System.Drawing.Point> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2297">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-2298">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2298">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="b889f-2299">描画されたメタファイルは、平行四辺形に合わせて拡大縮小および傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2299">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-2300">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2300">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2301">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2301">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2302">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2302">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2303">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2303"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="b889f-2304">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2304"><see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2305">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2305"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-2306"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2306">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2307">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2307"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2308">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2308">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2309">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2309">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-2310"><see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2310">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2311">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2311">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2312">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2312">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2313">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2313">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2314">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2314">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2315">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2315">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2316">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2316">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2317">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2317">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2318">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2318"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-2319">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2319">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2320">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2320"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-2321"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2321">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2322">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2322"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2323">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2323">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2324">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2324">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-2325"><see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2325">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2326">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2326">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2327">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2327">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2328">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2328">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2329">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2329">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2330">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2330">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-2331">3つの <xref:System.Drawing.PointF> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2331">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-2332">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2332">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="b889f-2333">描画されたメタファイルは、平行四辺形に合わせて拡大縮小および傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2333">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-2334">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2334">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2335">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2335">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2336">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2336">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2337">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2337"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-2338">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2338"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2339">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2339"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-2340"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2340">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2341">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2341"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2342">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2342">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2343">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2343">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-2344"><see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2344">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2345">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2345">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2346">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2346">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2347">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2347">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2348">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2348">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2349">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2349">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2350">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2350">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2351">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2351">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit srcUnit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit srcUnit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit srcUnit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, srcUnit, callback, callbackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcUnit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2352">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2352"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-2353">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2353"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2354">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2354"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="srcUnit"><span data-ttu-id="b889f-2355"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2355">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2356">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2356"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2357">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2357">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2358">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2358">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <summary><span data-ttu-id="b889f-2359"><see cref="T:System.Drawing.Imaging.Metafile" /> から選択した四角形内のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2359">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2360">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2360">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2361">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2361">Each record is individually sent to a callback method specified by the`callback` parameter.</span></span> <span data-ttu-id="b889f-2362">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2362">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2363">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2363">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2364">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2364">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2365">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2365">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2366">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2366">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point destPoint, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point destPoint, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Point destPoint, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.Point" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2367">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2367"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="b889f-2368">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2368"><see cref="T:System.Drawing.Point" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2369">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2369"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="unit"><span data-ttu-id="b889f-2370"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2370">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2371">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2371"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2372">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2372">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2373">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2373">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-2374">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2374"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-2375">指定したイメージ属性を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> から選択された四角形のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2375">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2376">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2376">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2377">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2377">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2378">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2378">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2379">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2379">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2380">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2380">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Point[] destPoints, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Point[] destPoints, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::Point&gt; ^ destPoints, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Point[] * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.Point[]" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2381">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2381"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-2382">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2382">Array of three <see cref="T:System.Drawing.Point" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2383">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2383"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="unit"><span data-ttu-id="b889f-2384"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2384">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2385">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2385"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2386">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2386">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2387">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2387">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-2388">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2388"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-2389">指定したイメージ属性を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> から選択された四角形のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2389">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2390">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2390">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2391">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2391">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2392">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2392">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2393">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2393">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2394">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2394">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-2395">3つの <xref:System.Drawing.Point> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2395">The three <xref:System.Drawing.Point> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-2396">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2396">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="b889f-2397">描画されたメタファイルは、平行四辺形に合わせて拡大縮小および傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2397">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-2398">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2398">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="b889f-2399">`imageAttr` パラメーターによって指定されたイメージ属性は、メタファイルが書き込まれたときに指定された属性を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2399">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2400">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2400">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2401">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2401">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF destPoint, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF destPoint, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::PointF destPoint, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoint, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoint" Type="System.Drawing.PointF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2402">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2402"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoint"><span data-ttu-id="b889f-2403">描画するメタファイルの左上隅の位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2403"><see cref="T:System.Drawing.PointF" /> structure that specifies the location of the upper-left corner of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2404">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2404"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="unit"><span data-ttu-id="b889f-2405"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2405">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2406">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2406"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2407">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2407">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2408">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2408">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-2409">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2409"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-2410">指定したイメージ属性を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> から選択された四角形のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した点に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2410">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display at a specified point using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2411">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2411">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2412">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2412">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2413">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2413">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2414">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2414">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2415">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2415">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="b889f-2416">`imageAttr` パラメーターによって指定されたイメージ属性は、メタファイルが書き込まれたときに指定された属性を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2416">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2417">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2417">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destPoints, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2418">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2418"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destPoints"><span data-ttu-id="b889f-2419">描画するメタファイルのサイズと位置を決定する平行四辺形を定義する 3 つの <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2419">Array of three <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram that determines the size and location of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2420">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2420"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="unit"><span data-ttu-id="b889f-2421"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2421">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2422">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2422"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2423">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2423">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2424">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2424">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-2425">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2425"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-2426">指定したイメージ属性を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> から選択された四角形のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した平行四辺形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2426">Sends the records in a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified parallelogram using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2427">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2427">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2428">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2428">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2429">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2429">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2430">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2430">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2431">`destPoints` パラメーターは、平行四辺形の3つの点を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2431">The `destPoints` parameter specifies three points of a parallelogram.</span></span> <span data-ttu-id="b889f-2432">3つの <xref:System.Drawing.PointF> 構造体は、平行四辺形の左上、右上、左下の各角を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2432">The three <xref:System.Drawing.PointF> structures represent the upper-left, upper-right, and lower-left corners of the parallelogram.</span></span> <span data-ttu-id="b889f-2433">4番目のポイントは、平行四辺形を形成するために最初の3から推定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2433">The fourth point is extrapolated from the first three to form a parallelogram.</span></span> <span data-ttu-id="b889f-2434">描画されたメタファイルは、平行四辺形に合わせて拡大縮小および傾斜されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2434">The drawn metafile is scaled and sheared to fit the parallelogram.</span></span>  
  
 <span data-ttu-id="b889f-2435">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2435">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="b889f-2436">`imageAttr` パラメーターによって指定されたイメージ属性は、メタファイルが書き込まれたときに指定された属性を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2436">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2437">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2437">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2438">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2438">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.Rectangle destRect, System.Drawing.Rectangle srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.Rectangle destRect, valuetype System.Drawing.Rectangle srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::Rectangle destRect, System::Drawing::Rectangle srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.Rectangle * System.Drawing.Rectangle * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="srcRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2439">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2439"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-2440">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2440"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2441">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2441"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="unit"><span data-ttu-id="b889f-2442"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2442">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2443">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2443"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2444">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2444">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2445">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2445">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-2446">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2446"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-2447">指定したイメージ属性を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> から選択された四角形のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2447">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2448">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2448">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2449">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2449">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2450">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2450">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2451">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2451">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2452">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2452">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="b889f-2453">`imageAttr` パラメーターによって指定されたイメージ属性は、メタファイルが書き込まれたときに指定された属性を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2453">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2454">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2454">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2455">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2455">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnumerateMetafile">
      <MemberSignature Language="C#" Value="public void EnumerateMetafile (System.Drawing.Imaging.Metafile metafile, System.Drawing.RectangleF destRect, System.Drawing.RectangleF srcRect, System.Drawing.GraphicsUnit unit, System.Drawing.Graphics.EnumerateMetafileProc callback, IntPtr callbackData, System.Drawing.Imaging.ImageAttributes imageAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnumerateMetafile(class System.Drawing.Imaging.Metafile metafile, valuetype System.Drawing.RectangleF destRect, valuetype System.Drawing.RectangleF srcRect, valuetype System.Drawing.GraphicsUnit unit, class System.Drawing.Graphics/EnumerateMetafileProc callback, native int callbackData, class System.Drawing.Imaging.ImageAttributes imageAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumerateMetafile(System::Drawing::Imaging::Metafile ^ metafile, System::Drawing::RectangleF destRect, System::Drawing::RectangleF srcRect, System::Drawing::GraphicsUnit unit, System::Drawing::Graphics::EnumerateMetafileProc ^ callback, IntPtr callbackData, System::Drawing::Imaging::ImageAttributes ^ imageAttr);" />
      <MemberSignature Language="F#" Value="member this.EnumerateMetafile : System.Drawing.Imaging.Metafile * System.Drawing.RectangleF * System.Drawing.RectangleF * System.Drawing.GraphicsUnit * System.Drawing.Graphics.EnumerateMetafileProc * nativeint * System.Drawing.Imaging.ImageAttributes -&gt; unit" Usage="graphics.EnumerateMetafile (metafile, destRect, srcRect, unit, callback, callbackData, imageAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metafile" Type="System.Drawing.Imaging.Metafile" />
        <Parameter Name="destRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="unit" Type="System.Drawing.GraphicsUnit" />
        <Parameter Name="callback" Type="System.Drawing.Graphics+EnumerateMetafileProc" />
        <Parameter Name="callbackData" Type="System.IntPtr" />
        <Parameter Name="imageAttr" Type="System.Drawing.Imaging.ImageAttributes" />
      </Parameters>
      <Docs>
        <param name="metafile"><span data-ttu-id="b889f-2456">列挙する <see cref="T:System.Drawing.Imaging.Metafile" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2456"><see cref="T:System.Drawing.Imaging.Metafile" /> to enumerate.</span></span></param>
        <param name="destRect"><span data-ttu-id="b889f-2457">描画するメタファイルの位置とサイズを指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2457"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the location and size of the drawn metafile.</span></span></param>
        <param name="srcRect"><span data-ttu-id="b889f-2458">左上隅を基準に相対的に、描画するメタファイルの部分を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2458"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the portion of the metafile, relative to its upper-left corner, to draw.</span></span></param>
        <param name="unit"><span data-ttu-id="b889f-2459"><see cref="T:System.Drawing.GraphicsUnit" /> パラメーターで指定された四角形に含まれるメタファイルの部分の決定に使用される単位を指定する <paramref name="srcRect" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2459">Member of the <see cref="T:System.Drawing.GraphicsUnit" /> enumeration that specifies the unit of measure used to determine the portion of the metafile that the rectangle specified by the <paramref name="srcRect" /> parameter contains.</span></span></param>
        <param name="callback"><span data-ttu-id="b889f-2460">メタファイル レコードの送信先のメソッドを指定する <see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> デリゲート。</span><span class="sxs-lookup"><span data-stu-id="b889f-2460"><see cref="T:System.Drawing.Graphics.EnumerateMetafileProc" /> delegate that specifies the method to which the metafile records are sent.</span></span></param>
        <param name="callbackData"><span data-ttu-id="b889f-2461">必須だが無視される内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2461">Internal pointer that is required, but ignored.</span></span> <span data-ttu-id="b889f-2462">このパラメーターには、<see cref="F:System.IntPtr.Zero" /> を渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2462">You can pass <see cref="F:System.IntPtr.Zero" /> for this parameter.</span></span></param>
        <param name="imageAttr"><span data-ttu-id="b889f-2463">描画イメージのイメージ属性情報を指定する <see cref="T:System.Drawing.Imaging.ImageAttributes" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2463"><see cref="T:System.Drawing.Imaging.ImageAttributes" /> that specifies image attribute information for the drawn image.</span></span></param>
        <summary><span data-ttu-id="b889f-2464">指定したイメージ属性を使用して、<see cref="T:System.Drawing.Imaging.Metafile" /> から選択された四角形のレコードをコールバック メソッドに一度に 1 つずつ送信して、指定した四角形内に表示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2464">Sends the records of a selected rectangle from a <see cref="T:System.Drawing.Imaging.Metafile" />, one at a time, to a callback method for display in a specified rectangle using specified image attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2465">このメソッドは、指定したメタファイルに格納されているレコードを列挙します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2465">This method enumerates the records contained in the specified metafile.</span></span> <span data-ttu-id="b889f-2466">各レコードは、`callback` パラメーターによって指定されたコールバックメソッドに個別に送信されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2466">Each record is individually sent to a callback method specified by the `callback` parameter.</span></span> <span data-ttu-id="b889f-2467">通常、コールバックメソッドは、<xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出して、レコードを "再生" または描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2467">Typically, the callback method calls the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method to "play back", or draw, the record.</span></span>  
  
 <span data-ttu-id="b889f-2468">コールバックメソッドが <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>を呼び出す場合は、列挙されている特定の <xref:System.Drawing.Imaging.Metafile> の <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> メソッドを呼び出すことによって呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2468">If the callback method calls <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A>, it must do so by calling the <xref:System.Drawing.Imaging.Metafile.PlayRecord%2A> method of the specific <xref:System.Drawing.Imaging.Metafile> that is being enumerated.</span></span>  
  
 <span data-ttu-id="b889f-2469">`srcRect` パラメーターで指定された四角形の外側で実行される描画はすべて無視されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2469">Any drawing that takes place outside of the rectangle specified by the `srcRect` parameter is ignored.</span></span>  
  
 <span data-ttu-id="b889f-2470">`imageAttr` パラメーターによって指定されたイメージ属性は、メタファイルが書き込まれたときに指定された属性を置き換えます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2470">The image attributes specified by the `imageAttr` parameter replace those specified when the metafile was written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2471">コード例については、「<xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2471">For a code example, see <xref:System.Drawing.Graphics.EnumerateMetafile%28System.Drawing.Imaging.Metafile%2CSystem.Drawing.Point%2CSystem.Drawing.Graphics.EnumerateMetafileProc%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/images-bitmaps-and-metafiles.md"><span data-ttu-id="b889f-2472">イメージ、ビットマップ、およびメタファイル</span><span class="sxs-lookup"><span data-stu-id="b889f-2472">Images, Bitmaps, and Metafiles</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExcludeClip">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-2473"><see cref="T:System.Drawing.Graphics" /> 構造体で指定された領域が除外されるように、この <see cref="T:System.Drawing.Rectangle" /> のクリップ領域を更新します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2473">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to exclude the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExcludeClip">
      <MemberSignature Language="C#" Value="public void ExcludeClip (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExcludeClip(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExcludeClip (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExcludeClip(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.ExcludeClip : System.Drawing.Rectangle -&gt; unit" Usage="graphics.ExcludeClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b889f-2474">クリップ領域から除外する四角形を指定する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2474"><see cref="T:System.Drawing.Rectangle" /> structure that specifies the rectangle to exclude from the clip region.</span></span></param>
        <summary><span data-ttu-id="b889f-2475"><see cref="T:System.Drawing.Graphics" /> 構造体で指定された領域が除外されるように、この <see cref="T:System.Drawing.Rectangle" /> のクリップ領域を更新します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2475">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to exclude the area specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2476">このメソッドは、現在のクリップ領域から `rect` パラメーターによって指定された領域を除外し、結果として得られる領域をこの <xref:System.Drawing.Graphics>の <xref:System.Drawing.Graphics.Clip%2A> プロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2476">This method excludes the area specified by the `rect` parameter from the current clip region and assigns the resulting area to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2477">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2477">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2478">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2478">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2479">左上隅が座標 (100、100) にある100ピクセル×100ピクセルの四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2479">Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).</span></span>  
  
-   <span data-ttu-id="b889f-2480">四角形によって定義された領域を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2480">Creates a region defined by the rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-2481">四角形領域を除外するようにクリッピング領域を設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2481">Sets the clipping region to exclude the rectangular region.</span></span>  
  
-   <span data-ttu-id="b889f-2482">左上隅が座標 (0, 0) に固定された青のブラシで、300ピクセル分の300ピクセルの四角形を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2482">Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.</span></span>  
  
 <span data-ttu-id="b889f-2483">結果は青い四角形で、右下隅に四角形の領域があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2483">The result is a blue rectangle with a square region toward its lower-right corner missing.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#92](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#92)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#92](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#92)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#92](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#92)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludeClip">
      <MemberSignature Language="C#" Value="public void ExcludeClip (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExcludeClip(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ExcludeClip(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExcludeClip(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.ExcludeClip : System.Drawing.Region -&gt; unit" Usage="graphics.ExcludeClip region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region"><span data-ttu-id="b889f-2484">クリップ領域から除外する領域を指定する <see cref="T:System.Drawing.Region" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2484"><see cref="T:System.Drawing.Region" /> that specifies the region to exclude from the clip region.</span></span></param>
        <summary><span data-ttu-id="b889f-2485"><see cref="T:System.Drawing.Graphics" /> で指定された領域が除外されるように、この <see cref="T:System.Drawing.Region" /> のクリップ領域を更新します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2485">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to exclude the area specified by a <see cref="T:System.Drawing.Region" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2486">このメソッドは、現在のクリップ領域から `region` パラメーターによって指定された領域を除外し、結果として得られる領域をこの <xref:System.Drawing.Graphics>の <xref:System.Drawing.Graphics.Clip%2A> プロパティに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2486">This method excludes the area specified by the `region` parameter from the current clip region and assigns the resulting area to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2487">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2487">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2488">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2488">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2489">左上隅が座標 (100、100) にある100ピクセル×100ピクセルの四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2489">Creates a 100 pixel by 100 pixel rectangle whose upper-left corner is at the coordinate (100, 100).</span></span>  
  
-   <span data-ttu-id="b889f-2490">四角形を除外するクリッピング領域を設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2490">Sets the clipping region to exclude the rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-2491">左上隅が座標 (0, 0) に固定された青のブラシで、300ピクセル分の300ピクセルの四角形を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2491">Fills a 300 pixel by 300 pixel rectangle whose upper-left corner is at the coordinate (0, 0) with a solid blue brush.</span></span>  
  
 <span data-ttu-id="b889f-2492">結果は青い四角形で、右下隅には四角形の領域がありません。</span><span class="sxs-lookup"><span data-stu-id="b889f-2492">The result is a blue rectangle with a square area toward its lower-right corner missing.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#91](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#91)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#91](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#91)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#91](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#91)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-2493"><see cref="T:System.Drawing.Point" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2493">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.Point[] -&gt; unit" Usage="graphics.FillClosedCurve (brush, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2494">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2494"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-2495">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2495">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <summary><span data-ttu-id="b889f-2496"><see cref="T:System.Drawing.Point" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2496">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2497">このメソッドは、配列内の各点を通過する閉じたカーディナルスプラインの内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2497">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="b889f-2498">最後の点が最初の点と一致しない場合は、最後の点から最初の点まで追加の曲線セグメントを追加して閉じます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2498">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="b889f-2499">点の配列には、少なくとも4つの <xref:System.Drawing.Point> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2499">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="b889f-2500">このメソッドは、0.5 の既定のテンションを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2500">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2501">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2501">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2502">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2502">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2503">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2503">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2504">スプラインを定義する4つのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2504">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="b889f-2505">画面上の曲線を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2505">Fills the curve on the screen.</span></span>  
  
 <span data-ttu-id="b889f-2506">曲線の既定のテンションは0.5 です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2506">The curve has a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#93](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#93)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#93](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#93)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#93](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#93)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2507"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2507"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2508">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2508">-or-</span></span> 
 <span data-ttu-id="b889f-2509"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2509"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.PointF[] -&gt; unit" Usage="graphics.FillClosedCurve (brush, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2510">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2510"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-2511">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2511">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <summary><span data-ttu-id="b889f-2512"><see cref="T:System.Drawing.PointF" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2512">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2513">このメソッドは、配列内の各点を通過する閉じたカーディナルスプラインの内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2513">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="b889f-2514">最後の点が最初の点と一致しない場合は、最後の点から最初の点まで追加の曲線セグメントを追加して閉じます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2514">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="b889f-2515">点の配列には、少なくとも4つの <xref:System.Drawing.PointF> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2515">The array of points must contain at least four <xref:System.Drawing.PointF> structures.</span></span>  
  
 <span data-ttu-id="b889f-2516">このメソッドは、0.5 の既定のテンションを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2516">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2517">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2517">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2518">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2518">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2519">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2519">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2520">スプラインを定義する4つのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2520">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="b889f-2521">画面上の曲線を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2521">Fills the curve on the screen.</span></span>  
  
 <span data-ttu-id="b889f-2522">曲線の既定のテンションは0.5 です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2522">The curve has a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#96](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#96)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#96](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#96)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#96](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#96)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2523"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2523"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2524">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2524">-or-</span></span> 
 <span data-ttu-id="b889f-2525"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2525"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points, valuetype System.Drawing.Drawing2D.FillMode fillmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points, System::Drawing::Drawing2D::FillMode fillmode);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.Point[] * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.FillClosedCurve (brush, points, fillmode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2526">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2526"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-2527">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2527">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <param name="fillmode"><span data-ttu-id="b889f-2528">曲線を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2528">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span></span></param>
        <summary><span data-ttu-id="b889f-2529"><see cref="T:System.Drawing.Point" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を指定の塗りつぶしモードで塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2529">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures using the specified fill mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2530">このメソッドは、配列内の各点を通過する閉じたカーディナルスプラインの内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2530">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="b889f-2531">最後の点が最初の点と一致しない場合は、最後の点から最初の点まで追加の曲線セグメントを追加して閉じます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2531">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="b889f-2532">点の配列には、少なくとも4つの <xref:System.Drawing.Point> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2532">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="b889f-2533">このメソッドは、0.5 の既定のテンションを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2533">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2534">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2534">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2535">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2535">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2536">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2536">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2537">スプラインを定義する4つのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2537">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="b889f-2538">Fill モードを <xref:System.Drawing.Drawing2D.FillMode.Winding>に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2538">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="b889f-2539">画面上の曲線を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2539">Fills the curve on the screen.</span></span>  
  
 <span data-ttu-id="b889f-2540">曲線の既定のテンションは0.5 です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2540">The curve has a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#94](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#94)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#94](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#94)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#94](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#94)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2541"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2541"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2542">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2542">-or-</span></span> 
 <span data-ttu-id="b889f-2543"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2543"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points, valuetype System.Drawing.Drawing2D.FillMode fillmode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points, System::Drawing::Drawing2D::FillMode fillmode);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.PointF[] * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.FillClosedCurve (brush, points, fillmode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2544">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2544"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-2545">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2545">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <param name="fillmode"><span data-ttu-id="b889f-2546">曲線を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2546">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span></span></param>
        <summary><span data-ttu-id="b889f-2547"><see cref="T:System.Drawing.PointF" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を指定の塗りつぶしモードで塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2547">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2548">このメソッドは、配列内の各点を通過する閉じたカーディナルスプラインの内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2548">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="b889f-2549">最後の点が最初の点と一致しない場合は、最後の点から最初の点まで追加の曲線セグメントを追加して閉じます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2549">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="b889f-2550">点の配列には、少なくとも4つの <xref:System.Drawing.Point> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2550">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="b889f-2551">このメソッドは、0.5 の既定のテンションを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2551">This method uses a default tension of 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2552">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2552">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2553">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2553">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2554">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2554">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2555">スプラインを定義する4つのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2555">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="b889f-2556">Fill モードを <xref:System.Drawing.Drawing2D.FillMode.Winding>に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2556">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="b889f-2557">画面上の曲線を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2557">Fills the curve on the screen.</span></span>  
  
 <span data-ttu-id="b889f-2558">曲線の既定のテンションは0.5 です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2558">The curve has a default tension of 0.5.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#97](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#97)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#97](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#97)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#97](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#97)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2559"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2559"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2560">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2560">-or-</span></span> 
 <span data-ttu-id="b889f-2561"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2561"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points, valuetype System.Drawing.Drawing2D.FillMode fillmode, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points, System::Drawing::Drawing2D::FillMode fillmode, float tension);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.Point[] * System.Drawing.Drawing2D.FillMode * single -&gt; unit" Usage="graphics.FillClosedCurve (brush, points, fillmode, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2562">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2562"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-2563">スプラインを定義する <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2563">Array of <see cref="T:System.Drawing.Point" /> structures that define the spline.</span></span></param>
        <param name="fillmode"><span data-ttu-id="b889f-2564">曲線を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2564">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span></span></param>
        <param name="tension"><span data-ttu-id="b889f-2565">曲線のテンションを指定する 0.0F 以上の値。</span><span class="sxs-lookup"><span data-stu-id="b889f-2565">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <summary><span data-ttu-id="b889f-2566"><see cref="T:System.Drawing.Point" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を指定の塗りつぶしモードおよびテンションで塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2566">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.Point" /> structures using the specified fill mode and tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2567">このメソッドは、配列内の各点を通過する閉じたカーディナルスプラインの内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2567">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="b889f-2568">最後の点が最初の点と一致しない場合は、最後の点から最初の点まで追加の曲線セグメントを追加して閉じます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2568">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="b889f-2569">点の配列には、少なくとも4つの <xref:System.Drawing.Point> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2569">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="b889f-2570">`tension` パラメーターによって、スプラインの形状が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2570">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="b889f-2571">`tension` パラメーターの値が 0.0 F の場合、このメソッドは直線セグメントを描画して点を接続します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2571">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="b889f-2572">通常、`tension` パラメーターは 1.0 F 以下です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2572">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="b889f-2573">1.0 F を超える値を指定すると、異常な結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2573">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2574">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2574">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2575">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2575">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2576">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2576">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2577">スプラインを定義する4つのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2577">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="b889f-2578">Fill モードを <xref:System.Drawing.Drawing2D.FillMode.Winding>に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2578">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="b889f-2579">テンションを1.0 に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2579">Sets the tension to 1.0.</span></span>  
  
-   <span data-ttu-id="b889f-2580">画面上の曲線を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2580">Fills the curve on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#95](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#95)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#95](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#95)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#95](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#95)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2581"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2581"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2582">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2582">-or-</span></span> 
 <span data-ttu-id="b889f-2583"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2583"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillClosedCurve">
      <MemberSignature Language="C#" Value="public void FillClosedCurve (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillmode, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillClosedCurve(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points, valuetype System.Drawing.Drawing2D.FillMode fillmode, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillClosedCurve(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points, System::Drawing::Drawing2D::FillMode fillmode, float tension);" />
      <MemberSignature Language="F#" Value="member this.FillClosedCurve : System.Drawing.Brush * System.Drawing.PointF[] * System.Drawing.Drawing2D.FillMode * single -&gt; unit" Usage="graphics.FillClosedCurve (brush, points, fillmode, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="fillmode" Type="System.Drawing.Drawing2D.FillMode" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2584">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2584">A <see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-2585">スプラインを定義する <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2585">Array of <see cref="T:System.Drawing.PointF" /> structures that define the spline.</span></span></param>
        <param name="fillmode"><span data-ttu-id="b889f-2586">曲線を塗りつぶす方法を決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2586">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the curve is filled.</span></span></param>
        <param name="tension"><span data-ttu-id="b889f-2587">曲線のテンションを指定する 0.0F 以上の値。</span><span class="sxs-lookup"><span data-stu-id="b889f-2587">Value greater than or equal to 0.0F that specifies the tension of the curve.</span></span></param>
        <summary><span data-ttu-id="b889f-2588"><see cref="T:System.Drawing.PointF" /> 構造体の配列で定義される、閉じたカーディナル スプライン曲線の内部を指定の塗りつぶしモードおよびテンションで塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2588">Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode and tension.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2589">このメソッドは、配列内の各点を通過する閉じたカーディナルスプラインの内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2589">This method fills the interior of a closed cardinal spline that passes through each point in the array.</span></span> <span data-ttu-id="b889f-2590">最後の点が最初の点と一致しない場合は、最後の点から最初の点まで追加の曲線セグメントを追加して閉じます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2590">If the last point does not match the first point, an additional curve segment is added from the last point to the first point to close it.</span></span>  
  
 <span data-ttu-id="b889f-2591">点の配列には、少なくとも4つの <xref:System.Drawing.Point> 構造体が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2591">The array of points must contain at least four <xref:System.Drawing.Point> structures.</span></span>  
  
 <span data-ttu-id="b889f-2592">`tension` パラメーターによって、スプラインの形状が決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2592">The `tension` parameter determines the shape of the spline.</span></span> <span data-ttu-id="b889f-2593">`tension` パラメーターの値が 0.0 F の場合、このメソッドは直線セグメントを描画して点を接続します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2593">If the value of the `tension` parameter is 0.0F, this method draws straight line segments to connect the points.</span></span> <span data-ttu-id="b889f-2594">通常、`tension` パラメーターは 1.0 F 以下です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2594">Usually, the `tension` parameter is less than or equal to 1.0F.</span></span> <span data-ttu-id="b889f-2595">1.0 F を超える値を指定すると、異常な結果が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2595">Values over 1.0F produce unusual results.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2596">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2596">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2597">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2597">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2598">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2598">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2599">スプラインを定義する4つのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2599">Creates an array of four points to define a spline.</span></span>  
  
-   <span data-ttu-id="b889f-2600">Fill モードを <xref:System.Drawing.Drawing2D.FillMode.Winding>に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2600">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="b889f-2601">テンションを1.0 に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2601">Sets the tension to 1.0.</span></span>  
  
-   <span data-ttu-id="b889f-2602">画面上の曲線を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2602">Fills the curve on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#98](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#98)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#98](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#98)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#98](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#98)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2603"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2603"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2604">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2604">-or-</span></span> 
 <span data-ttu-id="b889f-2605"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2605"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-2606">座標ペア、高さ、および幅で指定された外接する四角形によって定義される楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2606">Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillEllipse">
      <MemberSignature Language="C#" Value="public void FillEllipse (System.Drawing.Brush brush, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillEllipse(class System.Drawing.Brush brush, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillEllipse(System::Drawing::Brush ^ brush, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.FillEllipse : System.Drawing.Brush * System.Drawing.Rectangle -&gt; unit" Usage="graphics.FillEllipse (brush, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2607">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2607"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-2608">楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2608"><see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="b889f-2609"><see cref="T:System.Drawing.Rectangle" /> 構造体で指定された外接する四角形によって定義される楕円の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2609">Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2610">このメソッドは、楕円の内部を <xref:System.Drawing.Brush>で塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2610">This method fills the interior of an ellipse with a <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="b889f-2611">楕円は、`rect` パラメーターによって表される外接する四角形によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2611">The ellipse is defined by the bounding rectangle represented by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2612">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2612">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2613">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2613">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2614">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2614">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2615">楕円の境界となる四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2615">Creates a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-2616">画面上の楕円を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2616">Fills the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#99](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#99)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#99](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#99)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#99](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2617"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2617"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillEllipse">
      <MemberSignature Language="C#" Value="public void FillEllipse (System.Drawing.Brush brush, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillEllipse(class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillEllipse(System::Drawing::Brush ^ brush, System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.FillEllipse : System.Drawing.Brush * System.Drawing.RectangleF -&gt; unit" Usage="graphics.FillEllipse (brush, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2618">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2618"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-2619">楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2619"><see cref="T:System.Drawing.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="b889f-2620"><see cref="T:System.Drawing.RectangleF" /> 構造体で指定された外接する四角形によって定義される楕円の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2620">Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2621">このメソッドは、楕円の内部を <xref:System.Drawing.Brush>で塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2621">This method fills the interior of an ellipse with a <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="b889f-2622">楕円は、`rect` パラメーターによって表される外接する四角形によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2622">The ellipse is defined by the bounding rectangle represented by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2623">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2623">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2624">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2624">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2625">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2625">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2626">楕円の境界となる四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2626">Creates a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-2627">画面上の楕円を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2627">Fills the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#100](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#100)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#100)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#100)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2628"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2628"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillEllipse">
      <MemberSignature Language="C#" Value="public void FillEllipse (System.Drawing.Brush brush, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillEllipse(class System.Drawing.Brush brush, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillEllipse(System::Drawing::Brush ^ brush, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.FillEllipse : System.Drawing.Brush * int * int * int * int -&gt; unit" Usage="graphics.FillEllipse (brush, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2629">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2629"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-2630">楕円を定義する外接する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-2630">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-2631">楕円を定義する外接する四角形の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-2631">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-2632">楕円を定義する外接する四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-2632">Width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-2633">楕円を定義する外接する四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-2633">Height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="b889f-2634">座標ペア、高さ、および幅で指定された外接する四角形によって定義される楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2634">Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2635">このメソッドは、楕円の内部を <xref:System.Drawing.Brush>で塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2635">This method fills the interior of an ellipse with a <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="b889f-2636">楕円は、`x`、`y`、`width`、および `height` パラメーターで表される外接する四角形によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2636">The ellipse is defined by the bounding rectangle represented by the `x`, `y`, `width`, and `height` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2637">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2637">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2638">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2638">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2639">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2639">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2640">楕円の境界となる四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2640">Creates the location and size of a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-2641">画面上の楕円を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2641">Fills the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#101](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#101)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#101](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#101)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#101](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2642"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2642"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillEllipse">
      <MemberSignature Language="C#" Value="public void FillEllipse (System.Drawing.Brush brush, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillEllipse(class System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillEllipse(System::Drawing::Brush ^ brush, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.FillEllipse : System.Drawing.Brush * single * single * single * single -&gt; unit" Usage="graphics.FillEllipse (brush, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2643">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2643"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-2644">楕円を定義する外接する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-2644">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-2645">楕円を定義する外接する四角形の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-2645">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-2646">楕円を定義する外接する四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-2646">Width of the bounding rectangle that defines the ellipse.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-2647">楕円を定義する外接する四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-2647">Height of the bounding rectangle that defines the ellipse.</span></span></param>
        <summary><span data-ttu-id="b889f-2648">座標ペア、高さ、および幅で指定された外接する四角形によって定義される楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2648">Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2649">このメソッドは、楕円の内部を <xref:System.Drawing.Brush>で塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2649">This method fills the interior of an ellipse with a <xref:System.Drawing.Brush>.</span></span> <span data-ttu-id="b889f-2650">楕円は、`x`、`y`、`width`、および `height` パラメーターで表される外接する四角形によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2650">The ellipse is defined by the bounding rectangle represented by the `x`, `y`, `width`, and `height` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2651">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2651">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2652">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2652">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2653">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2653">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2654">楕円の境界となる四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2654">Creates the location and size of a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-2655">画面上の楕円を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2655">Fills the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#102](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#102)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#102](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#102)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#102](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#102)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2656"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2656"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillPath">
      <MemberSignature Language="C#" Value="public void FillPath (System.Drawing.Brush brush, System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPath(class System.Drawing.Brush brush, class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPath(System::Drawing::Brush ^ brush, System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.FillPath : System.Drawing.Brush * System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="graphics.FillPath (brush, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2657">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2657"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="path"><span data-ttu-id="b889f-2658">塗りつぶし対象のパスを表す <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2658"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that represents the path to fill.</span></span></param>
        <summary><span data-ttu-id="b889f-2659"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2659">Fills the interior of a <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2660"><xref:System.Drawing.Drawing2D.GraphicsPath> は、一連の線と曲線のセグメントで構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2660">A <xref:System.Drawing.Drawing2D.GraphicsPath> consists of a series of line and curve segments.</span></span> <span data-ttu-id="b889f-2661">`path` パラメーターによって表されるパスが閉じられていない場合は、パスを閉じるために、最後のポイントから最初のポイントまで追加のセグメントが追加されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2661">If the path represented by the `path` parameter is not closed, an additional segment is added from the last point to the first point to close the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2662">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2662">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2663">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2663">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2664">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2664">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2665">グラフィックスパスオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2665">Creates a graphics path object.</span></span>  
  
-   <span data-ttu-id="b889f-2666">グラフィックスパスに楕円を追加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2666">Adds an ellipse to the graphics path.</span></span>  
  
-   <span data-ttu-id="b889f-2667">画面上のパスを入力します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2667">Fills the path on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#103](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#103)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#103](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#103)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#103](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2668"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2668"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2669">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2669">-or-</span></span> 
 <span data-ttu-id="b889f-2670"><paramref name="path" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2670"><paramref name="path" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-2671">座標ペア、幅、および高さで指定された楕円と 2 本の半径によって定義される扇形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2671">Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillPie">
      <MemberSignature Language="C#" Value="public void FillPie (System.Drawing.Brush brush, System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPie(class System.Drawing.Brush brush, valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPie(System::Drawing::Brush ^ brush, System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.FillPie : System.Drawing.Brush * System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphics.FillPie (brush, rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2672">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2672"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-2673">扇形の元となる楕円を定義する外接する四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2673"><see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b889f-2674">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-2674">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b889f-2675"><paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-2675">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</span></span></param>
        <summary><span data-ttu-id="b889f-2676"><see cref="T:System.Drawing.RectangleF" /> 構造体と 2 本の半径によって指定された楕円で定義される扇形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2676">Fills the interior of a pie section defined by an ellipse specified by a <see cref="T:System.Drawing.RectangleF" /> structure and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2677">このメソッドは、楕円の円弧と、円弧の終点と交差する2つの放射状線で定義される扇形の内部を塗りつぶします。楕円は、外接する四角形によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2677">This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="b889f-2678">円のセクションは、`startAngle` と `sweepAngle` のパラメーターで定義された2つの放射状線と、それらの放射状直線と楕円の交差部分の間の弧で構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2678">The pie section consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="b889f-2679">`sweepAngle` パラメーターが360°を超えるか、-360 度より小さい場合、それぞれが360度または-360 度であるかのように処理されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2679">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2680">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2680">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2681">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2681">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2682">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2682">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2683">楕円の境界となる四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2683">Creates a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-2684">開始角度 (x 軸を基準とする) とスイープ角度 (両方とも時計回り方向) を定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2684">Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="b889f-2685">画面上の楕円の円の形の領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2685">Fills the pie-shaped area of the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#104](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#104)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#104](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#104)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#104](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#104)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2686"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2686"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillPie">
      <MemberSignature Language="C#" Value="public void FillPie (System.Drawing.Brush brush, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPie(class System.Drawing.Brush brush, int32 x, int32 y, int32 width, int32 height, int32 startAngle, int32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPie(System::Drawing::Brush ^ brush, int x, int y, int width, int height, int startAngle, int sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.FillPie : System.Drawing.Brush * int * int * int * int * int * int -&gt; unit" Usage="graphics.FillPie (brush, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Int32" />
        <Parameter Name="sweepAngle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2687">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2687"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-2688">扇形の元となる楕円を定義する外接する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-2688">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-2689">扇形の元となる楕円を定義する外接する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-2689">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-2690">扇形の元となる楕円を定義する外接する四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-2690">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-2691">扇形の元となる楕円を定義する外接する四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-2691">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b889f-2692">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-2692">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b889f-2693"><paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-2693">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</span></span></param>
        <summary><span data-ttu-id="b889f-2694">座標ペア、幅、および高さで指定された楕円と 2 本の半径によって定義される扇形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2694">Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2695">このメソッドは、楕円の円弧と、円弧の終点と交差する2つの放射状線で定義される扇形の内部を塗りつぶします。楕円は、外接する四角形によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2695">This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="b889f-2696">円のセクションは、`startAngle` と `sweepAngle` のパラメーターで定義された2つの放射状線と、それらの放射状直線と楕円の交差部分の間の弧で構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2696">The pie section consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="b889f-2697">`sweepAngle` パラメーターが360°を超えるか、-360 度より小さい場合、それぞれが360度または-360 度であるかのように処理されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2697">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2698">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2698">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2699">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2699">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2700">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2700">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2701">楕円の境界となる四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2701">Creates the location and size of a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-2702">開始角度 (x 軸を基準とする) とスイープ角度 (両方とも時計回り方向) を定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2702">Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="b889f-2703">画面上の楕円の円の形の領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2703">Fills the pie-shaped area of the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#105](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#105)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#105](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#105)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#105](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#105)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2704"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2704"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillPie">
      <MemberSignature Language="C#" Value="public void FillPie (System.Drawing.Brush brush, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPie(class System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPie(System::Drawing::Brush ^ brush, float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.FillPie : System.Drawing.Brush * single * single * single * single * single * single -&gt; unit" Usage="graphics.FillPie (brush, x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2705">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2705"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-2706">扇形の元となる楕円を定義する外接する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-2706">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-2707">扇形の元となる楕円を定義する外接する四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-2707">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-2708">扇形の元となる楕円を定義する外接する四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-2708">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-2709">扇形の元となる楕円を定義する外接する四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-2709">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</span></span></param>
        <param name="startAngle"><span data-ttu-id="b889f-2710">x 軸から扇形の最初の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-2710">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</span></span></param>
        <param name="sweepAngle"><span data-ttu-id="b889f-2711"><paramref name="startAngle" /> パラメーターから扇形の 2 番目の辺まで、時計回りに測定した角度 (度単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-2711">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</span></span></param>
        <summary><span data-ttu-id="b889f-2712">座標ペア、幅、および高さで指定された楕円と 2 本の半径によって定義される扇形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2712">Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2713">このメソッドは、楕円の円弧と、円弧の終点と交差する2つの放射状線で定義される扇形の内部を塗りつぶします。楕円は、外接する四角形によって定義されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2713">This method fills the interior of a pie section defined by an arc of an ellipse and the two radial lines that intersect with the endpoints of the arc. The ellipse is defined by the bounding rectangle.</span></span> <span data-ttu-id="b889f-2714">円のセクションは、`startAngle` と `sweepAngle` のパラメーターで定義された2つの放射状線と、それらの放射状線と楕円の交差部分の間の弧で構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2714">The pie section consists of the two radial lines defined by the `startAngle` and `sweepAngle` parameters, and the arc between the intersections of those radial lines with the ellipse.</span></span>  
  
 <span data-ttu-id="b889f-2715">`sweepAngle` パラメーターが360°を超えるか、-360 度より小さい場合、それぞれが360度または-360 度であるかのように処理されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2715">If the `sweepAngle` parameter is greater than 360 degrees or less than -360 degrees, it is treated as if it were 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2716">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2716">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2717">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2717">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2718">赤の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2718">Creates a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-2719">楕円の境界となる四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2719">Creates the location and size of a rectangle that bounds an ellipse.</span></span>  
  
-   <span data-ttu-id="b889f-2720">開始角度 (x 軸を基準とする) とスイープ角度 (両方とも時計回り方向) を定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2720">Defines the start angle (relative to the x axis) and the sweep angle (both in a clockwise direction).</span></span>  
  
-   <span data-ttu-id="b889f-2721">画面上の楕円の円の形の領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2721">Fills the pie-shaped area of the ellipse on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#106](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#106)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#106](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#106)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#106](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2722"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2722"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-2723"><see cref="T:System.Drawing.Point" /> 構造体で指定された点の配列によって定義される多角形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2723">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillPolygon">
      <MemberSignature Language="C#" Value="public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPolygon(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPolygon(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.FillPolygon : System.Drawing.Brush * System.Drawing.Point[] -&gt; unit" Usage="graphics.FillPolygon (brush, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2724">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2724"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-2725">塗りつぶす多角形の頂点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2725">Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon to fill.</span></span></param>
        <summary><span data-ttu-id="b889f-2726"><see cref="T:System.Drawing.Point" /> 構造体で指定された点の配列によって定義される多角形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2726">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2727">配列内の2つの連続する各点は、多角形の辺を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2727">Every two consecutive points in the array specify a side of the polygon.</span></span> <span data-ttu-id="b889f-2728">また、最後のポイントと最初のポイントが一致しない場合は、多角形の終わり側を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2728">In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2729">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2729">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2730">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2730">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2731">青の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2731">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-2732">多角形を定義する7つのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2732">Creates an array of seven points to define a polygon.</span></span>  
  
-   <span data-ttu-id="b889f-2733">画面の多角形領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2733">Fills the polygonal area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#107](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#107)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#107](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#107)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#107](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#107)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2734"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2734"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2735">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2735">-or-</span></span> 
 <span data-ttu-id="b889f-2736"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2736"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillPolygon">
      <MemberSignature Language="C#" Value="public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPolygon(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPolygon(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.FillPolygon : System.Drawing.Brush * System.Drawing.PointF[] -&gt; unit" Usage="graphics.FillPolygon (brush, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2737">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2737"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-2738">塗りつぶす多角形の頂点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2738">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon to fill.</span></span></param>
        <summary><span data-ttu-id="b889f-2739"><see cref="T:System.Drawing.PointF" /> 構造体で指定された点の配列によって定義される多角形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2739">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.PointF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2740">配列内の2つの連続する各点は、多角形の辺を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2740">Every two consecutive points in the array specify a side of the polygon.</span></span> <span data-ttu-id="b889f-2741">また、最後のポイントと最初のポイントが一致しない場合は、多角形の終わり側を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2741">In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2742">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2742">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2743">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2743">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2744">青の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2744">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-2745">多角形を定義する7つのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2745">Creates an array of seven points to define a polygon.</span></span>  
  
-   <span data-ttu-id="b889f-2746">画面の多角形領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2746">Fills the polygonal area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#109](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#109)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#109](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#109)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#109](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#109)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2747"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2747"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2748">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2748">-or-</span></span> 
 <span data-ttu-id="b889f-2749"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2749"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillPolygon">
      <MemberSignature Language="C#" Value="public void FillPolygon (System.Drawing.Brush brush, System.Drawing.Point[] points, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPolygon(class System.Drawing.Brush brush, valuetype System.Drawing.Point[] points, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPolygon(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Point&gt; ^ points, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="member this.FillPolygon : System.Drawing.Brush * System.Drawing.Point[] * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.FillPolygon (brush, points, fillMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2750">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2750"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-2751">塗りつぶす多角形の頂点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2751">Array of <see cref="T:System.Drawing.Point" /> structures that represent the vertices of the polygon to fill.</span></span></param>
        <param name="fillMode"><span data-ttu-id="b889f-2752">塗りつぶしのスタイルを決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2752">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines the style of the fill.</span></span></param>
        <summary><span data-ttu-id="b889f-2753"><see cref="T:System.Drawing.Point" /> 構造体で指定された点の配列によって定義される多角形の内部を指定の塗りつぶしモードで塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2753">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.Point" /> structures using the specified fill mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2754">配列内の2つの連続する各点は、多角形の辺を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2754">Every two consecutive points in the array specify a side of the polygon.</span></span> <span data-ttu-id="b889f-2755">また、最後のポイントと最初のポイントが一致しない場合は、多角形の終わり側を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2755">In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2756">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2756">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2757">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2757">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2758">青の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2758">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-2759">多角形を定義する7つのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2759">Creates an array of seven points to define a polygon.</span></span>  
  
-   <span data-ttu-id="b889f-2760">Fill モードを <xref:System.Drawing.Drawing2D.FillMode.Winding>に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2760">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="b889f-2761">画面の多角形領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2761">Fills the polygonal area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#108](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#108)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#108](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#108)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#108](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#108)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2762"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2762"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2763">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2763">-or-</span></span> 
 <span data-ttu-id="b889f-2764"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2764"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillPolygon">
      <MemberSignature Language="C#" Value="public void FillPolygon (System.Drawing.Brush brush, System.Drawing.PointF[] points, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillPolygon(class System.Drawing.Brush brush, valuetype System.Drawing.PointF[] points, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillPolygon(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::PointF&gt; ^ points, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="member this.FillPolygon : System.Drawing.Brush * System.Drawing.PointF[] * System.Drawing.Drawing2D.FillMode -&gt; unit" Usage="graphics.FillPolygon (brush, points, fillMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2765">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2765"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="points"><span data-ttu-id="b889f-2766">塗りつぶす多角形の頂点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2766">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the vertices of the polygon to fill.</span></span></param>
        <param name="fillMode"><span data-ttu-id="b889f-2767">塗りつぶしのスタイルを決定する <see cref="T:System.Drawing.Drawing2D.FillMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2767">Member of the <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines the style of the fill.</span></span></param>
        <summary><span data-ttu-id="b889f-2768"><see cref="T:System.Drawing.PointF" /> 構造体で指定された点の配列によって定義される多角形の内部を指定の塗りつぶしモードで塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2768">Fills the interior of a polygon defined by an array of points specified by <see cref="T:System.Drawing.PointF" /> structures using the specified fill mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2769">配列内の2つの連続する各点は、多角形の辺を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2769">Every two consecutive points in the array specify a side of the polygon.</span></span> <span data-ttu-id="b889f-2770">また、最後のポイントと最初のポイントが一致しない場合は、多角形の終わり側を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2770">In addition, if the last point and the first point do not coincide, they specify the closing side of the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2771">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2771">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2772">このコードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2772">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="b889f-2773">青の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2773">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-2774">多角形を定義する7つのポイントの配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2774">Creates an array of seven points to define a polygon.</span></span>  
  
-   <span data-ttu-id="b889f-2775">Fill モードを <xref:System.Drawing.Drawing2D.FillMode.Winding>に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2775">Sets the fill mode to <xref:System.Drawing.Drawing2D.FillMode.Winding>.</span></span>  
  
-   <span data-ttu-id="b889f-2776">画面の多角形領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2776">Fills the polygonal area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples2#110](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CPP/form1.cpp#110)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples2#110](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/CS/form1.cs#110)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples2#110](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples2/VB/form1.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2777"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2777"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2778">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2778">-or-</span></span> 
 <span data-ttu-id="b889f-2779"><paramref name="points" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2779"><paramref name="points" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-2780">座標ペア、幅、および高さで指定された四角形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2780">Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillRectangle">
      <MemberSignature Language="C#" Value="public void FillRectangle (System.Drawing.Brush brush, System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangle(class System.Drawing.Brush brush, valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangle(System::Drawing::Brush ^ brush, System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.FillRectangle : System.Drawing.Brush * System.Drawing.Rectangle -&gt; unit" Usage="graphics.FillRectangle (brush, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2781">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2781"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-2782">塗りつぶす四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2782"><see cref="T:System.Drawing.Rectangle" /> structure that represents the rectangle to fill.</span></span></param>
        <summary><span data-ttu-id="b889f-2783"><see cref="T:System.Drawing.Rectangle" /> 構造体で指定された四角形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2783">Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2784">このメソッドは、`rect` パラメーターによって定義された四角形の内部を塗りつぶします。これには、指定した左上隅と、計算された下端と下端までを含めます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2784">This method fills the interior of the rectangle defined by the `rect` parameter, including the specified upper-left corner and up to the calculated lower and bottom edges.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2785">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2785">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2786">このコードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2786">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="b889f-2787">青の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2787">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-2788">四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2788">Creates a rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-2789">画面上の四角形の領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2789">Fills the rectangular area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#111](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#111)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#111](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#111)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#111](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#111)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2790"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2790"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillRectangle">
      <MemberSignature Language="C#" Value="public void FillRectangle (System.Drawing.Brush brush, System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangle(class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangle(System::Drawing::Brush ^ brush, System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.FillRectangle : System.Drawing.Brush * System.Drawing.RectangleF -&gt; unit" Usage="graphics.FillRectangle (brush, rect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2791">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2791"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rect"><span data-ttu-id="b889f-2792">塗りつぶす四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2792"><see cref="T:System.Drawing.RectangleF" /> structure that represents the rectangle to fill.</span></span></param>
        <summary><span data-ttu-id="b889f-2793"><see cref="T:System.Drawing.RectangleF" /> 構造体で指定された四角形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2793">Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2794">このメソッドは、`rect` パラメーターによって定義された四角形の内部を塗りつぶします。これには、指定した左上隅と、計算された下端と下端までを含めます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2794">This method fills the interior of the rectangle defined by the `rect` parameter, including the specified upper-left corner and up to the calculated lower and bottom edges.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2795">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2795">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2796">このコードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2796">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="b889f-2797">青の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2797">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-2798">四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2798">Creates a rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-2799">画面上の四角形の領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2799">Fills the rectangular area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#112](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#112)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#112](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#112)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#112](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#112)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2800"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2800"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillRectangle">
      <MemberSignature Language="C#" Value="public void FillRectangle (System.Drawing.Brush brush, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangle(class System.Drawing.Brush brush, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangle(System::Drawing::Brush ^ brush, int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.FillRectangle : System.Drawing.Brush * int * int * int * int -&gt; unit" Usage="graphics.FillRectangle (brush, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2801">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2801"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-2802">塗りつぶす四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-2802">The x-coordinate of the upper-left corner of the rectangle to fill.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-2803">塗りつぶす四角形の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-2803">The y-coordinate of the upper-left corner of the rectangle to fill.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-2804">塗りつぶす四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-2804">Width of the rectangle to fill.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-2805">塗りつぶす四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-2805">Height of the rectangle to fill.</span></span></param>
        <summary><span data-ttu-id="b889f-2806">座標ペア、幅、および高さで指定された四角形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2806">Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2807">このメソッドは、`x`、`y`、`width`、および `height` の各パラメーターで定義された四角形の内部を塗りつぶします。これには、指定した左上隅と、計算された下と下のエッジが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2807">This method fills the interior of the rectangle defined by the`x`, `y`, `width`, and `height` parameters, including the specified upper-left corner and up to the calculated lower and bottom edges.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2808">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2808">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2809">このコードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2809">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="b889f-2810">青の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2810">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-2811">四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2811">Creates the location and size of a rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-2812">画面上の四角形の領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2812">Fills the rectangular area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#113](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#113)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#113](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#113)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#113](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#113)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2813"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2813"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillRectangle">
      <MemberSignature Language="C#" Value="public void FillRectangle (System.Drawing.Brush brush, float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangle(class System.Drawing.Brush brush, float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangle(System::Drawing::Brush ^ brush, float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.FillRectangle : System.Drawing.Brush * single * single * single * single -&gt; unit" Usage="graphics.FillRectangle (brush, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2814">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2814"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="x"><span data-ttu-id="b889f-2815">塗りつぶす四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-2815">The x-coordinate of the upper-left corner of the rectangle to fill.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-2816">塗りつぶす四角形の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-2816">The y-coordinate of the upper-left corner of the rectangle to fill.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-2817">塗りつぶす四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-2817">Width of the rectangle to fill.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-2818">塗りつぶす四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-2818">Height of the rectangle to fill.</span></span></param>
        <summary><span data-ttu-id="b889f-2819">座標ペア、幅、および高さで指定された四角形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2819">Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2820">このメソッドは、`x`、`y`、`width`、および `height` の各パラメーターで定義された四角形の内部を塗りつぶします。これには、指定した左上隅と、計算された下と下のエッジが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2820">This method fills the interior of the rectangle defined by the `x`, `y`, `width`, and `height` parameters, including the specified upper-left corner and up to the calculated lower and bottom edges.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2821">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2821">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2822">このコードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2822">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="b889f-2823">青の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2823">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-2824">四角形の位置とサイズを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2824">Creates the location and size of a rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-2825">画面上の四角形の領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2825">Fills the rectangular area on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#114](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#114)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#114](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#114)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#114](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#114)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2826"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2826"><paramref name="brush" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FillRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-2827"><see cref="T:System.Drawing.Rectangle" /> 構造体で指定された一連の四角形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2827">Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FillRectangles">
      <MemberSignature Language="C#" Value="public void FillRectangles (System.Drawing.Brush brush, System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangles(class System.Drawing.Brush brush, valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangles(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.FillRectangles : System.Drawing.Brush * System.Drawing.Rectangle[] -&gt; unit" Usage="graphics.FillRectangles (brush, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2828">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2828"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rects"><span data-ttu-id="b889f-2829">塗りつぶす四角形を表す <see cref="T:System.Drawing.Rectangle" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2829">Array of <see cref="T:System.Drawing.Rectangle" /> structures that represent the rectangles to fill.</span></span></param>
        <summary><span data-ttu-id="b889f-2830"><see cref="T:System.Drawing.Rectangle" /> 構造体で指定された一連の四角形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2830">Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.Rectangle" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-2831">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2831">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2832">このコードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2832">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="b889f-2833">青の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2833">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-2834">3つの四角形の配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2834">Creates an array of three rectangles.</span></span>  
  
-   <span data-ttu-id="b889f-2835">画面上の3つの四角形領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2835">Fills the three rectangular areas on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#115](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#115)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#115](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#115)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#115](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#115)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2836"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2836"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2837">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2837">-or-</span></span> 
 <span data-ttu-id="b889f-2838"><paramref name="rects" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2838"><paramref name="rects" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b889f-2839"><paramref name="rects" /> は長さゼロの配列です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2839"><paramref name="rects" /> is a zero-length array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillRectangles">
      <MemberSignature Language="C#" Value="public void FillRectangles (System.Drawing.Brush brush, System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRectangles(class System.Drawing.Brush brush, valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRectangles(System::Drawing::Brush ^ brush, cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.FillRectangles : System.Drawing.Brush * System.Drawing.RectangleF[] -&gt; unit" Usage="graphics.FillRectangles (brush, rects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2840">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2840"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="rects"><span data-ttu-id="b889f-2841">塗りつぶす四角形を表す <see cref="T:System.Drawing.RectangleF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-2841">Array of <see cref="T:System.Drawing.RectangleF" /> structures that represent the rectangles to fill.</span></span></param>
        <summary><span data-ttu-id="b889f-2842"><see cref="T:System.Drawing.RectangleF" /> 構造体で指定された一連の四角形の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2842">Fills the interiors of a series of rectangles specified by <see cref="T:System.Drawing.RectangleF" /> structures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-2843">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2843">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2844">このコードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2844">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="b889f-2845">青の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2845">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-2846">3つの四角形の配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2846">Creates an array of three rectangles.</span></span>  
  
-   <span data-ttu-id="b889f-2847">画面上の3つの四角形領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2847">Fills the three rectangular areas on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#116](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#116)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#116](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#116)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#116](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#116)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2848"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2848"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2849">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2849">-or-</span></span> 
 <span data-ttu-id="b889f-2850"><paramref name="rects" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2850"><paramref name="rects" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b889f-2851"><paramref name="Rects" /> は長さゼロの配列です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2851"><paramref name="Rects" /> is a zero-length array.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FillRegion">
      <MemberSignature Language="C#" Value="public void FillRegion (System.Drawing.Brush brush, System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FillRegion(class System.Drawing.Brush brush, class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FillRegion(System::Drawing::Brush ^ brush, System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.FillRegion : System.Drawing.Brush * System.Drawing.Region -&gt; unit" Usage="graphics.FillRegion (brush, region)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="brush" Type="System.Drawing.Brush" />
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="brush"><span data-ttu-id="b889f-2852">塗りつぶしの特性を決定する <see cref="T:System.Drawing.Brush" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2852"><see cref="T:System.Drawing.Brush" /> that determines the characteristics of the fill.</span></span></param>
        <param name="region"><span data-ttu-id="b889f-2853">塗りつぶす領域を表す <see cref="T:System.Drawing.Region" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2853"><see cref="T:System.Drawing.Region" /> that represents the area to fill.</span></span></param>
        <summary><span data-ttu-id="b889f-2854"><see cref="T:System.Drawing.Region" /> の内部を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2854">Fills the interior of a <see cref="T:System.Drawing.Region" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2855"><xref:System.Drawing.Region> は、四角形とパスで構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2855">A <xref:System.Drawing.Region> is composed of rectangles and paths.</span></span> <span data-ttu-id="b889f-2856">領域が閉じられていない場合は、最後のポイントから最初のポイントまで追加のセグメントを追加して閉じます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2856">If the region is not closed, an additional segment is added from the last point to the first point to close it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2857">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2857">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2858">このコードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2858">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="b889f-2859">青の実線ブラシを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2859">Creates a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-2860">四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2860">Creates a rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-2861">四角形の領域を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2861">Creates a rectangular region.</span></span>  
  
-   <span data-ttu-id="b889f-2862">画面上の四角形の領域を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2862">Fills the rectangular region on the screen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#117](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#117)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#117](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#117)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#117](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#117)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2863"><paramref name="brush" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2863"><paramref name="brush" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="b889f-2864">または</span><span class="sxs-lookup"><span data-stu-id="b889f-2864">-or-</span></span> 
 <span data-ttu-id="b889f-2865"><paramref name="region" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2865"><paramref name="region" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Graphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Graphics ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphics.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b889f-2866">オブジェクトが、ガベージ コレクションによって収集される前に、リソースの解放とその他のクリーンアップ操作の実行を試みることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2866">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flush">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-2867">保留中のグラフィックス操作をすべて強制実行し、操作の終了を待機せずにすぐに制御を戻します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2867">Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="graphics.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b889f-2868">保留中のグラフィックス操作をすべて強制実行し、操作の終了を待機せずにすぐに制御を戻します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2868">Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2869">このメソッドは、現在実行中のグラフィックス操作が終了するのを待たずに、フラッシュを開始し、すぐに制御を戻します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2869">This method starts a flush and returns immediately without waiting for any currently executing graphics operation to finish.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush (System.Drawing.Drawing2D.FlushIntention intention);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush(valuetype System.Drawing.Drawing2D.FlushIntention intention) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Flush(System.Drawing.Drawing2D.FlushIntention)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush (intention As FlushIntention)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush(System::Drawing::Drawing2D::FlushIntention intention);" />
      <MemberSignature Language="F#" Value="member this.Flush : System.Drawing.Drawing2D.FlushIntention -&gt; unit" Usage="graphics.Flush intention" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intention" Type="System.Drawing.Drawing2D.FlushIntention" />
      </Parameters>
      <Docs>
        <param name="intention"><span data-ttu-id="b889f-2870">メソッドがすぐに制御を戻すか、既存の操作が終了するまで待機するかを指定する、<see cref="T:System.Drawing.Drawing2D.FlushIntention" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-2870">Member of the <see cref="T:System.Drawing.Drawing2D.FlushIntention" /> enumeration that specifies whether the method returns immediately or waits for any existing operations to finish.</span></span></param>
        <summary><span data-ttu-id="b889f-2871">メソッドが保留中のグラフィックス操作を待機しているかどうかにかかわらず、すべての保留中のグラフィックス操作を指定どおりに強制実行し、操作が終了する前に制御を戻します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2871">Forces execution of all pending graphics operations with the method waiting or not waiting, as specified, to return before the operations finish.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2872">`intention` パラメーターの値 <xref:System.Drawing.Drawing2D.FlushIntention.Flush> は、メソッドがフラッシュを開始した直後に戻ることを指定します。また、<xref:System.Drawing.Drawing2D.FlushIntention.Sync> の値は、既存の操作が完了するまでメソッドが待機するように指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2872">A value of <xref:System.Drawing.Drawing2D.FlushIntention.Flush> for the `intention` parameter specifies that the method return immediately after beginning the flush, while a value of <xref:System.Drawing.Drawing2D.FlushIntention.Sync> specifies that the method wait before returning until any existing operations finish.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromHdc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-2873">デバイス コンテキストを識別する指定のハンドルから新しい <see cref="T:System.Drawing.Graphics" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2873">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a device context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromHdc">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHdc (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHdc(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHdc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdc (hdc As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHdc(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="static member FromHdc : nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHdc hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc"><span data-ttu-id="b889f-2874">デバイス コンテキストを識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="b889f-2874">Handle to a device context.</span></span></param>
        <summary><span data-ttu-id="b889f-2875">デバイス コンテキストを識別する指定のハンドルから新しい <see cref="T:System.Drawing.Graphics" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2875">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a device context.</span></span></summary>
        <returns><span data-ttu-id="b889f-2876">このメソッドは、指定のデバイス コンテキストの新しい <see cref="T:System.Drawing.Graphics" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2876">This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified device context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2877"><xref:System.Drawing.Graphics.FromHdc%2A> メソッドによって作成された <xref:System.Drawing.Graphics> および関連リソースを解放するには、常に <xref:System.Drawing.Graphics.Dispose%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2877">You should always call the <xref:System.Drawing.Graphics.Dispose%2A> method to release the <xref:System.Drawing.Graphics> and related resources created by the <xref:System.Drawing.Graphics.FromHdc%2A> method.</span></span>  
  
 <span data-ttu-id="b889f-2878">ディスプレイデバイスに ICM カラープロファイルが関連付けられている場合でも、既定では [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] はそのプロファイルを使用しません。</span><span class="sxs-lookup"><span data-stu-id="b889f-2878">Even if the display device has an associated ICM color profile, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] will not use that profile by default.</span></span> <span data-ttu-id="b889f-2879"><xref:System.Drawing.Graphics>に対して ICM を有効にするには、HDC (および ICM_ON) を `SetICMMode` 関数に渡した後で、HDC から <xref:System.Drawing.Graphics> を構築します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2879">To enable ICM for a <xref:System.Drawing.Graphics>, construct the <xref:System.Drawing.Graphics> from an HDC after you pass the HDC (and ICM_ON) to the `SetICMMode` function.</span></span> <span data-ttu-id="b889f-2880">その後、<xref:System.Drawing.Graphics> によって実行されるすべての描画は、ディスプレイデバイスに関連付けられている ICM プロファイルに従って調整されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2880">Then any drawing done by the <xref:System.Drawing.Graphics> will be adjusted according to the ICM profile associated with the display device.</span></span> <span data-ttu-id="b889f-2881">ICM を有効にすると、パフォーマンスが低下します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2881">Enabling ICM will result in slower performance.</span></span>  
  
 <span data-ttu-id="b889f-2882"><xref:System.Drawing.Graphics.FromHdc%2A> を呼び出すときのデバイスコンテキストの状態 (マッピングモード、論理ユニット、および同様) は、<xref:System.Drawing.Graphics>によって行われたレンダリングに影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2882">The state of the device context (mapping mode, logical unit, and the like) at the time you call <xref:System.Drawing.Graphics.FromHdc%2A> can affect rendering done by the <xref:System.Drawing.Graphics>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2883">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2883">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2884">このコードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2884">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="b889f-2885">`hdc` 内部ポインター型の変数を作成し、フォームのグラフィックスオブジェクトのデバイスコンテキストを指すハンドルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2885">Creates an internal pointer type variable `hdc` and sets it to the handle to the device context of the graphics object of the form.</span></span>  
  
-   <span data-ttu-id="b889f-2886">`hdc`を使用して新しいグラフィックスオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2886">Creates a new graphics object using `hdc`.</span></span>  
  
-   <span data-ttu-id="b889f-2887">新しいグラフィックスオブジェクト (画面上) で四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2887">Draws a rectangle with the new graphics object (on the screen).</span></span>  
  
-   <span data-ttu-id="b889f-2888">`hdc`を使用して新しいグラフィックスオブジェクトを解放します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2888">Releases the new graphics object using `hdc`.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#118](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#118)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#118](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#118)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#118](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#118)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHdc">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHdc (IntPtr hdc, IntPtr hdevice);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHdc(native int hdc, native int hdevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHdc(System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdc (hdc As IntPtr, hdevice As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHdc(IntPtr hdc, IntPtr hdevice);" />
      <MemberSignature Language="F#" Value="static member FromHdc : nativeint * nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHdc (hdc, hdevice)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
        <Parameter Name="hdevice" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc"><span data-ttu-id="b889f-2889">デバイス コンテキストを識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="b889f-2889">Handle to a device context.</span></span></param>
        <param name="hdevice"><span data-ttu-id="b889f-2890">デバイスを識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="b889f-2890">Handle to a device.</span></span></param>
        <summary><span data-ttu-id="b889f-2891">デバイス コンテキストを識別する指定のハンドルと、デバイスを識別する指定のハンドルから、新しい <see cref="T:System.Drawing.Graphics" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2891">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a device context and handle to a device.</span></span></summary>
        <returns><span data-ttu-id="b889f-2892">このメソッドは、指定のデバイス コンテキストおよびデバイスの新しい <see cref="T:System.Drawing.Graphics" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2892">This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified device context and device.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2893"><xref:System.Drawing.Graphics.FromHdc%2A> メソッドによって作成された <xref:System.Drawing.Graphics> および関連リソースを解放するには、常に <xref:System.Drawing.Graphics.Dispose%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2893">You should always call the <xref:System.Drawing.Graphics.Dispose%2A> method to release the <xref:System.Drawing.Graphics> and related resources created by the <xref:System.Drawing.Graphics.FromHdc%2A> method.</span></span>  
  
 <span data-ttu-id="b889f-2894">ディスプレイデバイスに ICM カラープロファイルが関連付けられている場合でも、既定では [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] はそのプロファイルを使用しません。</span><span class="sxs-lookup"><span data-stu-id="b889f-2894">Even if the display device has an associated ICM color profile, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] will not use that profile by default.</span></span> <span data-ttu-id="b889f-2895"><xref:System.Drawing.Graphics>に対して ICM を有効にするには、HDC (および ICM_ON) を `SetICMMode` 関数に渡した後で、HDC から <xref:System.Drawing.Graphics> を構築します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2895">To enable ICM for a <xref:System.Drawing.Graphics>, construct the <xref:System.Drawing.Graphics> from an HDC after you pass the HDC (and ICM_ON) to the `SetICMMode` function.</span></span> <span data-ttu-id="b889f-2896">その後、<xref:System.Drawing.Graphics> によって実行されるすべての描画は、ディスプレイデバイスに関連付けられている ICM プロファイルに従って調整されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2896">Then any drawing done by the <xref:System.Drawing.Graphics> will be adjusted according to the ICM profile associated with the display device.</span></span> <span data-ttu-id="b889f-2897">ICM を有効にすると、パフォーマンスが低下します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2897">Enabling ICM will result in slower performance.</span></span>  
  
 <span data-ttu-id="b889f-2898"><xref:System.Drawing.Graphics.FromHdc%2A> を呼び出すときのデバイスコンテキストの状態 (マッピングモード、論理ユニット、および同様) は、<xref:System.Drawing.Graphics>によって行われたレンダリングに影響を与える可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2898">The state of the device context (mapping mode, logical unit, and the like) at the time you call <xref:System.Drawing.Graphics.FromHdc%2A> can affect rendering done by the <xref:System.Drawing.Graphics>.</span></span>  
  
 <span data-ttu-id="b889f-2899">デバイスハンドルは、通常、特定のプリンターの機能を照会するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2899">The device handle is typically used to query specific printer capabilities.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b889f-2900">アンマネージコードへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2900">for access to unmanaged code.</span></span> <span data-ttu-id="b889f-2901">関連する列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2901">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FromHdcInternal">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHdcInternal (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHdcInternal(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHdcInternal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHdcInternal (hdc As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHdcInternal(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="static member FromHdcInternal : nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHdcInternal hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc"><span data-ttu-id="b889f-2902">デバイス コンテキストを識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="b889f-2902">Handle to a device context.</span></span></param>
        <summary><span data-ttu-id="b889f-2903">指定したデバイス コンテキストの <see cref="T:System.Drawing.Graphics" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2903">Returns a <see cref="T:System.Drawing.Graphics" /> for the specified device context.</span></span></summary>
        <returns><span data-ttu-id="b889f-2904">指定したデバイス コンテキストの <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2904">A <see cref="T:System.Drawing.Graphics" /> for the specified device context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2905">このメソッドは使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2905">This method should not be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHwnd">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHwnd (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHwnd(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHwnd(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHwnd (hwnd As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHwnd(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHwnd : nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHwnd hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd"><span data-ttu-id="b889f-2906">ウィンドウを識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="b889f-2906">Handle to a window.</span></span></param>
        <summary><span data-ttu-id="b889f-2907">ウィンドウを識別する指定のハンドルから新しい <see cref="T:System.Drawing.Graphics" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2907">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified handle to a window.</span></span></summary>
        <returns><span data-ttu-id="b889f-2908">このメソッドは、指定のウィンドウ ハンドルの新しい <see cref="T:System.Drawing.Graphics" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2908">This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified window handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2909"><xref:System.Drawing.Graphics.FromHwnd%2A> メソッドによって作成された <xref:System.Drawing.Graphics> および関連リソースを解放するには、常に <xref:System.Drawing.Graphics.Dispose%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2909">You should always call the <xref:System.Drawing.Graphics.Dispose%2A> method to release the <xref:System.Drawing.Graphics> and related resources created by the <xref:System.Drawing.Graphics.FromHwnd%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2910">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターであり、`thisForm`の例の <xref:System.Windows.Forms.Form> である <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2910">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example.</span></span> <span data-ttu-id="b889f-2911">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2911">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2912">新しい内部ポインター変数 `hwnd` を作成し、その変数を例のフォームのハンドルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2912">Creates a new internal pointer variable `hwnd` and sets it to the handle of the example's form.</span></span>  
  
-   <span data-ttu-id="b889f-2913">ハンドルから新しい <xref:System.Drawing.Graphics> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2913">Creates a new <xref:System.Drawing.Graphics> from the handle.</span></span>  
  
-   <span data-ttu-id="b889f-2914">赤いペンを使用して、新しい <xref:System.Drawing.Graphics> に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2914">Draws a rectangle to the new <xref:System.Drawing.Graphics> using a red pen.</span></span>  
  
-   <span data-ttu-id="b889f-2915">新しい <xref:System.Drawing.Graphics>を破棄します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2915">Disposes the new <xref:System.Drawing.Graphics>.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#119](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#119)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#119](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#119)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#119](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#119)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b889f-2916">アンマネージコードへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2916">for access to unmanaged code.</span></span> <span data-ttu-id="b889f-2917">関連する列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2917">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FromHwndInternal">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromHwndInternal (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromHwndInternal(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromHwndInternal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHwndInternal (hwnd As IntPtr) As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromHwndInternal(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHwndInternal : nativeint -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromHwndInternal hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd"><span data-ttu-id="b889f-2918">ウィンドウを識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="b889f-2918">Handle to a window.</span></span></param>
        <summary><span data-ttu-id="b889f-2919">指定したウィンドウ ハンドルに新しい <see cref="T:System.Drawing.Graphics" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2919">Creates a new <see cref="T:System.Drawing.Graphics" /> for the specified windows handle.</span></span></summary>
        <returns><span data-ttu-id="b889f-2920">指定したウィンドウ ハンドルの <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2920">A <see cref="T:System.Drawing.Graphics" /> for the specified window handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2921">このメソッドは使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="b889f-2921">This method should not be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromImage">
      <MemberSignature Language="C#" Value="public static System.Drawing.Graphics FromImage (System.Drawing.Image image);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Graphics FromImage(class System.Drawing.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.FromImage(System.Drawing.Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Graphics ^ FromImage(System::Drawing::Image ^ image);" />
      <MemberSignature Language="F#" Value="static member FromImage : System.Drawing.Image -&gt; System.Drawing.Graphics" Usage="System.Drawing.Graphics.FromImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="image"><span data-ttu-id="b889f-2922">新しい <see cref="T:System.Drawing.Image" /> の作成元の <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2922"><see cref="T:System.Drawing.Image" /> from which to create the new <see cref="T:System.Drawing.Graphics" />.</span></span></param>
        <summary><span data-ttu-id="b889f-2923">指定した <see cref="T:System.Drawing.Graphics" /> の新しい <see cref="T:System.Drawing.Image" /> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2923">Creates a new <see cref="T:System.Drawing.Graphics" /> from the specified <see cref="T:System.Drawing.Image" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-2924">このメソッドは、指定した <see cref="T:System.Drawing.Graphics" /> の新しい <see cref="T:System.Drawing.Image" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2924">This method returns a new <see cref="T:System.Drawing.Graphics" /> for the specified <see cref="T:System.Drawing.Image" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2925">イメージにインデックス付きピクセル形式がある場合、このメソッドは例外をスローします。 "インデックス付きピクセル形式のイメージからグラフィックスオブジェクトを作成することはできません" というメッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2925">If the image has an indexed pixel format, this method throws an exception with the message, "A Graphics object cannot be created from an image that has an indexed pixel format."</span></span> <span data-ttu-id="b889f-2926">インデックス付きピクセル形式を次の一覧に示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2926">The indexed pixel formats are shown in the following list.</span></span>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format1bppIndexed>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format4bppIndexed>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format8bppIndexed>  
  
 <span data-ttu-id="b889f-2927"><xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29> メソッドを使用して、インデックス付きのイメージを別の形式で保存した後、新しいイメージの <xref:System.Drawing.Graphics> オブジェクトを取得できます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2927">You can save the indexed image as another format by using the <xref:System.Drawing.Image.Save%28System.String%2CSystem.Drawing.Imaging.ImageFormat%29> method and then retrieve a <xref:System.Drawing.Graphics> object for the new image.</span></span>  
  
 <span data-ttu-id="b889f-2928">このメソッドは、イメージに次のいずれかのピクセル形式がある場合にも例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2928">This method also throws an exception if the image has any of the following pixel formats.</span></span>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Undefined>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.DontCare>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format16bppArgb1555>  
  
-   <xref:System.Drawing.Imaging.PixelFormat.Format16bppGrayScale>  
  
 <span data-ttu-id="b889f-2929"><xref:System.Drawing.Graphics.FromImage%2A> メソッドによって作成された <xref:System.Drawing.Graphics> および関連リソースを解放するには、常に <xref:System.Drawing.Graphics.Dispose%2A> メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2929">You should always call the <xref:System.Drawing.Graphics.Dispose%2A> method to release the <xref:System.Drawing.Graphics> and related resources created by the <xref:System.Drawing.Graphics.FromImage%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2930">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2930">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2931">このコードは、次のアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2931">The code performs the following action:</span></span>  
  
-   <span data-ttu-id="b889f-2932">サンプルフォルダー内のグラフィックスファイル SampImag から <xref:System.Drawing.Image> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2932">Creates an <xref:System.Drawing.Image> from a graphics file SampImag.jpg in the example folder.</span></span>  
  
-   <span data-ttu-id="b889f-2933"><xref:System.Drawing.Image>から <xref:System.Drawing.Graphics> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2933">Creates a <xref:System.Drawing.Graphics> from the <xref:System.Drawing.Image>.</span></span>  
  
-   <span data-ttu-id="b889f-2934">イメージ内の四角形を塗りつぶすことによって、イメージを変更します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2934">Alters the image by filling a rectangle within it.</span></span>  
  
-   <span data-ttu-id="b889f-2935"><xref:System.Drawing.Image> を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2935">Draws the <xref:System.Drawing.Image> to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-2936">作成された <xref:System.Drawing.Graphics>を解放します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2936">Releases the created <xref:System.Drawing.Graphics>.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#120](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#120)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#120](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#120)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#120](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b889f-2937"><paramref name="image" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2937"><paramref name="image" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="b889f-2938"><paramref name="image" /> がインデックス付きのピクセル形式であるか、またはその形式が未定義です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2938"><paramref name="image" /> has an indexed pixel format or its format is undefined.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-create-a-bitmap-at-run-time.md"><span data-ttu-id="b889f-2939">方法 : 実行時にビットマップを作成する</span><span class="sxs-lookup"><span data-stu-id="b889f-2939">How to: Create a Bitmap at Run Time</span></span></related>
        <related type="Article" href="~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md"><span data-ttu-id="b889f-2940">イメージ、ビットマップ、アイコン、およびメタファイルの操作</span><span class="sxs-lookup"><span data-stu-id="b889f-2940">Working with Images, Bitmaps, Icons, and Metafiles</span></span></related>
        <related type="Article" href="~/docs/framework/winforms/advanced/how-to-create-graphics-objects-for-drawing.md"><span data-ttu-id="b889f-2941">方法 : 描画する Graphics オブジェクトを作成する</span><span class="sxs-lookup"><span data-stu-id="b889f-2941">How to: Create Graphics Objects for Drawing</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetContextInfo">
      <MemberSignature Language="C#" Value="public object GetContextInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetContextInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.GetContextInfo" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextInfo () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetContextInfo();" />
      <MemberSignature Language="F#" Value="member this.GetContextInfo : unit -&gt; obj" Usage="graphics.GetContextInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b889f-2942">累積的なグラフィックス コンテキストを取得します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2942">Gets the cumulative graphics context.</span></span></summary>
        <returns><span data-ttu-id="b889f-2943">累積的なグラフィックス コンテキストを表す <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2943">An <see cref="T:System.Object" /> representing the cumulative graphics context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2944">戻り値は、最初の要素に累積クリップ領域が含まれ、2番目の要素に累積平行移動/変換行列が格納されているオブジェクト配列です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2944">The return value is an object array where the first element contains the cumulative clip region and the second element contains the cumulative translate/transform matrix.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHalftonePalette">
      <MemberSignature Language="C#" Value="public static IntPtr GetHalftonePalette ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int GetHalftonePalette() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.GetHalftonePalette" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetHalftonePalette () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr GetHalftonePalette();" />
      <MemberSignature Language="F#" Value="static member GetHalftonePalette : unit -&gt; nativeint" Usage="System.Drawing.Graphics.GetHalftonePalette " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b889f-2945">現在の Windows ハーフトーン パレットを識別するハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2945">Gets a handle to the current Windows halftone palette.</span></span></summary>
        <returns><span data-ttu-id="b889f-2946">パレットを識別するハンドルを指定する内部ポインター。</span><span class="sxs-lookup"><span data-stu-id="b889f-2946">Internal pointer that specifies the handle to the palette.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2947"><xref:System.Drawing.Graphics.GetHalftonePalette%2A> メソッドの目的は、ディスプレイで8ビット/ピクセルが使用されている場合に [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] が品質ハーフトーンを向上できるようにすることです。</span><span class="sxs-lookup"><span data-stu-id="b889f-2947">The purpose of the <xref:System.Drawing.Graphics.GetHalftonePalette%2A> method is to enable [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] to produce a better quality halftone when the display uses 8 bits per pixel.</span></span> <span data-ttu-id="b889f-2948">ハーフトーンパレットを使用してイメージを表示するには、次の手順を使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2948">To display an image using the halftone palette, use the following procedure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2949">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2949">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2950">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2950">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2951">Windows DLL ファイル gdi32 の相互運用性 <xref:System.Runtime.InteropServices.DllImportAttribute> 属性を定義します。このファイルには、必要な [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 関数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b889f-2951">Defines interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attributes for the Windows DLL file gdi32.dll, which contains the necessary [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] functions.</span></span>  
  
-   <span data-ttu-id="b889f-2952">DLL 内の `SelectPalette` および `RealizePalette` 関数を外部として定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2952">Defines the `SelectPalette` and `RealizePalette` functions in that DLL as external.</span></span>  
  
-   <span data-ttu-id="b889f-2953">既存のイメージファイル SampImag (例のコードファイルと同じフォルダーに存在する必要があります) からイメージを作成し、画面にイメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2953">Creates an image from an existing image file SampImag.jpg (which must be in the same folder as the example code file) and draws the image to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-2954">内部ポインター型の変数を作成し、それぞれの値をグラフィックスオブジェクトと現在の Windows ハーフトーンパレットへのハンドルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2954">Creates internal pointer type variables and sets their values to the handle to the graphics object and to the current Windows halftone palette, respectively.</span></span>  
  
-   <span data-ttu-id="b889f-2955">ハーフトーンパレットを選択して認識します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2955">Selects and realizes the halftone palette.</span></span>  
  
-   <span data-ttu-id="b889f-2956">`hdc` パラメーターを使用して、新しいグラフィックスオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2956">Creates a new graphics object using the `hdc` parameter.</span></span>  
  
-   <span data-ttu-id="b889f-2957">もう一度イメージを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2957">Draws the image again.</span></span>  
  
-   <span data-ttu-id="b889f-2958">デバイスコンテキストのハンドルを解放します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2958">Releases the handle to the device context.</span></span>  
  
 <span data-ttu-id="b889f-2959">結果として、サンプルイメージの2つのレンダリングが生成されます。1つは16ビットパレット、もう1つは8ビットパレットです。</span><span class="sxs-lookup"><span data-stu-id="b889f-2959">The result is two renderings of the sample image: one with the 16-bit palette and one with the 8-bit palette.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#121](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#121)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#121](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#121)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#121](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#121)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHdc">
      <MemberSignature Language="C#" Value="public IntPtr GetHdc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetHdc() cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.GetHdc" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHdc () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IntPtr GetHdc();" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetHdc : unit -&gt; nativeint&#xA;override this.GetHdc : unit -&gt; nativeint" Usage="graphics.GetHdc " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHdc() cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHdc();" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.GetHdc : unit -&gt; nativeint" Usage="graphics.GetHdc " FrameworkAlternate="netframework-1.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Drawing.IDeviceContext.GetHdc</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b889f-2960">この <see cref="T:System.Drawing.Graphics" /> に関連付けられているデバイス コンテキストを識別するハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2960">Gets the handle to the device context associated with this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-2961">この <see cref="T:System.Drawing.Graphics" /> に関連付けられているデバイス コンテキストを識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="b889f-2961">Handle to the device context associated with this <see cref="T:System.Drawing.Graphics" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2962">デバイスコンテキストは、グラフィカルオブジェクトとそれらに関連付けられている属性のセット、および出力に影響を与えるグラフィカルモードを定義する [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] に基づく Windows 構造です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2962">The device context is a Windows structure based on [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] that defines a set of graphical objects and their associated attributes, as well as the graphical modes that affect output.</span></span> <span data-ttu-id="b889f-2963">このメソッドは、フォントを除き、そのデバイスコンテキストを返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2963">This method returns that device context with the exception of a font.</span></span> <span data-ttu-id="b889f-2964">フォントが選択されていないため、<xref:System.Drawing.Graphics.GetHdc%2A> メソッドから返されたハンドルを使用して <xref:System.Drawing.Font.FromHdc%2A> メソッドを呼び出すと失敗します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2964">Because a font is not selected, calls to the <xref:System.Drawing.Font.FromHdc%2A> method using a handle returned from the <xref:System.Drawing.Graphics.GetHdc%2A> method will fail.</span></span>  
  
 <span data-ttu-id="b889f-2965"><xref:System.Drawing.Graphics.GetHdc%2A> および <xref:System.Drawing.Graphics.ReleaseHdc%2A> メソッドの呼び出しは、ペアで記述する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2965">Calls to the <xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> methods must appear in pairs.</span></span> <span data-ttu-id="b889f-2966"><xref:System.Drawing.Graphics.GetHdc%2A> と <xref:System.Drawing.Graphics.ReleaseHdc%2A> メソッドのペアのスコープでは、通常、[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 関数の呼び出しのみを行います。</span><span class="sxs-lookup"><span data-stu-id="b889f-2966">During the scope of a <xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> method pair, you usually make only calls to [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] functions.</span></span> <span data-ttu-id="b889f-2967">`hdc` パラメーターを生成した <xref:System.Drawing.Graphics> の [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] メソッドに対して行われたそのスコープ内の呼び出しは、`ObjectBusy` エラーが発生して失敗します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2967">Calls in that scope made to [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] methods of the <xref:System.Drawing.Graphics> that produced the `hdc` parameter fail with an `ObjectBusy` error.</span></span> <span data-ttu-id="b889f-2968">また、[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] は、後続の操作で `hdc` パラメーターの <xref:System.Drawing.Graphics> に加えられた状態の変更を無視します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2968">Also, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] ignores any state changes made to the <xref:System.Drawing.Graphics> of the `hdc` parameter in subsequent operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-2969">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2969">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2970">この例では、Windows [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 関数を呼び出して、[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> メソッドと同じタスクを実行する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2970">The example illustrates calling a Windows [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] function to perform the same task as a [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> method.</span></span> <span data-ttu-id="b889f-2971">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2971">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2972">Windows DLL ファイル gdi32 の相互運用性 <xref:System.Runtime.InteropServices.DllImportAttribute> 属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2972">Defines the interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attribute for the Windows DLL file gdi32.dll.</span></span> <span data-ttu-id="b889f-2973">この DLL には、目的の [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 関数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b889f-2973">This DLL contains the desired [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] function.</span></span>  
  
-   <span data-ttu-id="b889f-2974">DLL 内の <xref:System.Drawing.Rectangle> 関数を外部として定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2974">Defines the <xref:System.Drawing.Rectangle> function in that DLL as external.</span></span>  
  
-   <span data-ttu-id="b889f-2975">赤いペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2975">Creates a red pen.</span></span>  
  
-   <span data-ttu-id="b889f-2976">ペンを使用して、[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> メソッドを使用して画面に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2976">With the pen, draws a rectangle to the screen using the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> method.</span></span>  
  
-   <span data-ttu-id="b889f-2977">`hdc` 内部ポインター型の変数を定義し、その値をフォームのデバイスコンテキストを指すハンドルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2977">Defines an internal pointer type variable `hdc` and sets its value to the handle to the device context of the form.</span></span>  
  
-   <span data-ttu-id="b889f-2978">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> 関数を使用して、画面に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2978">Draws a rectangle to the screen using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> function.</span></span>  
  
-   <span data-ttu-id="b889f-2979">`hdc` パラメーターによって表されるデバイスコンテキストを解放します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2979">Releases the device context represented by the `hdc` parameter.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#122](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#122)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#122](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#122)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#122](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#122)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b889f-2980">アンマネージコードへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2980">for access to unmanaged code.</span></span> <span data-ttu-id="b889f-2981">関連する列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-2981">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetNearestColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetNearestColor (System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetNearestColor(valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.GetNearestColor(System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetNearestColor(System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.GetNearestColor : System.Drawing.Color -&gt; System.Drawing.Color" Usage="graphics.GetNearestColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="color"><span data-ttu-id="b889f-2982">一致する対象を検索する <see cref="T:System.Drawing.Color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2982"><see cref="T:System.Drawing.Color" /> structure for which to find a match.</span></span></param>
        <summary><span data-ttu-id="b889f-2983">指定した <see cref="T:System.Drawing.Color" /> 構造体に最も近い色を取得します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2983">Gets the nearest color to the specified <see cref="T:System.Drawing.Color" /> structure.</span></span></summary>
        <returns><span data-ttu-id="b889f-2984"><see cref="T:System.Drawing.Color" /> パラメーターで指定された色に最も近い色を表す <paramref name="color" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2984">A <see cref="T:System.Drawing.Color" /> structure that represents the nearest color to the one specified with the <paramref name="color" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-2985">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2985">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-2986">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2986">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-2987">ARGB 座標 (255、165、63、136) を使用して任意の色を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2987">Creates an arbitrary color with ARGB coordinates (255, 165, 63, 136).</span></span>  
  
-   <span data-ttu-id="b889f-2988">純色のブラシを作成し、その色を指定した色に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2988">Creates a solid brush and sets its color to the specified color.</span></span>  
  
-   <span data-ttu-id="b889f-2989">任意の色を使用して楕円を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2989">Fills an ellipse using the arbitrary color.</span></span>  
  
-   <span data-ttu-id="b889f-2990">2番目の色を作成し、その値を最も近いシステム ARGB 色に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2990">Creates a second color and sets its value to the nearest system ARGB color.</span></span>  
  
-   <span data-ttu-id="b889f-2991">2番目の楕円をこの色で塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-2991">Fills a second ellipse with this color.</span></span>  
  
 <span data-ttu-id="b889f-2992">結果は、2つの省略記号 (任意の指定色で描画された最初の楕円) と、指定した色に最も近いシステムカラーで描画された2つの楕円です。</span><span class="sxs-lookup"><span data-stu-id="b889f-2992">The result is two ellipses: the first drawn with the arbitrary specified color and the second drawn with the system color nearest the specified color.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#123](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#123)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#123](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#123)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#123](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#123)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterpolationMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.InterpolationMode InterpolationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.InterpolationMode InterpolationMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.InterpolationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property InterpolationMode As InterpolationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::InterpolationMode InterpolationMode { System::Drawing::Drawing2D::InterpolationMode get(); void set(System::Drawing::Drawing2D::InterpolationMode value); };" />
      <MemberSignature Language="F#" Value="member this.InterpolationMode : System.Drawing.Drawing2D.InterpolationMode with get, set" Usage="System.Drawing.Graphics.InterpolationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.InterpolationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-2993">この <see cref="T:System.Drawing.Graphics" /> に関連付けられている補間モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2993">Gets or sets the interpolation mode associated with this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-2994"><see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="b889f-2994">One of the <see cref="T:System.Drawing.Drawing2D.InterpolationMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2995">補間モードによって、2つのエンドポイント間の中間値がどのように計算されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="b889f-2995">The interpolation mode determines how intermediate values between two endpoints are calculated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IntersectClip">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-2996">この <see cref="T:System.Drawing.Graphics" /> のクリップ領域を現在のクリップ領域と指定した <see cref="T:System.Drawing.Rectangle" /> 構造体との交差部分に更新します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2996">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IntersectClip">
      <MemberSignature Language="C#" Value="public void IntersectClip (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IntersectClip(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IntersectClip (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IntersectClip(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectClip : System.Drawing.Rectangle -&gt; unit" Usage="graphics.IntersectClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b889f-2997">現在のクリップ領域と交差する <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-2997"><see cref="T:System.Drawing.Rectangle" /> structure to intersect with the current clip region.</span></span></param>
        <summary><span data-ttu-id="b889f-2998">この <see cref="T:System.Drawing.Graphics" /> のクリップ領域を現在のクリップ領域と指定した <see cref="T:System.Drawing.Rectangle" /> 構造体との交差部分に更新します。</span><span class="sxs-lookup"><span data-stu-id="b889f-2998">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-2999">このメソッドは、現在のクリップ領域と `rect` パラメーターによって指定された四角形の交差部分によって表される領域 <xref:System.Drawing.Graphics> このの <xref:System.Drawing.Graphics.Clip%2A> プロパティに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="b889f-2999">This method assigns to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics> the area represented by the intersection of the current clip region and the rectangle specified by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3000">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3000">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3001">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3001">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3002">左上隅が (0, 0) の四角形を作成し、クリッピング領域をこの四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3002">Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-3003">左上隅が (100, 100) の2番目の四角形を作成し、この四角形と現在のクリッピング領域 (最初の四角形) の交差部分にクリッピング領域を設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3003">Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).</span></span>  
  
-   <span data-ttu-id="b889f-3004">前の四角形と単色の青のブラシの両方を含む大きな四角形を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3004">Fills a large rectangle that includes both previous rectangles with a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-3005">クリッピング領域を無限にリセットします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3005">Resets the clipping region to infinite.</span></span>  
  
-   <span data-ttu-id="b889f-3006">2つのクリッピング領域の周囲に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3006">Draws rectangles around the two clipping regions.</span></span> <span data-ttu-id="b889f-3007">最初のクリッピング四角形には黒のペンを使用し、2番目のクリッピング領域には赤いペンを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3007">It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.</span></span>  
  
 <span data-ttu-id="b889f-3008">結果として、2つの四角形の交差部分のみが青で塗りつぶされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3008">The result is that only the intersection of the two rectangles is filled with blue.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#124](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#124)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#124](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#124)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#124](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#124)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectClip">
      <MemberSignature Language="C#" Value="public void IntersectClip (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IntersectClip(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IntersectClip(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IntersectClip (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IntersectClip(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.IntersectClip : System.Drawing.RectangleF -&gt; unit" Usage="graphics.IntersectClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b889f-3009">現在のクリップ領域と交差する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3009"><see cref="T:System.Drawing.RectangleF" /> structure to intersect with the current clip region.</span></span></param>
        <summary><span data-ttu-id="b889f-3010">この <see cref="T:System.Drawing.Graphics" /> のクリップ領域を現在のクリップ領域と指定した <see cref="T:System.Drawing.RectangleF" /> 構造体との交差部分に更新します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3010">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.RectangleF" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3011">このメソッドは、現在のクリップ領域と `rect` パラメーターによって指定された四角形の交差部分によって表される領域 <xref:System.Drawing.Graphics> このの <xref:System.Drawing.Graphics.Clip%2A> プロパティに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3011">This method assigns to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics> the area represented by the intersection of the current clip region and the rectangle specified by the `rect` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3012">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3012">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3013">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3013">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3014">左上隅が (0, 0) の四角形を作成し、クリッピング領域をこの四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3014">Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-3015">左上隅が (100, 100) の2番目の四角形を作成し、この四角形と現在のクリッピング領域 (最初の四角形) の交差部分にクリッピング領域を設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3015">Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).</span></span>  
  
-   <span data-ttu-id="b889f-3016">前の四角形と単色の青のブラシの両方を含む大きな四角形を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3016">Fills a large rectangle that includes both previous rectangles with a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-3017">クリッピング領域を無限にリセットします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3017">Resets the clipping region to infinite.</span></span>  
  
-   <span data-ttu-id="b889f-3018">2つのクリッピング領域の周囲に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3018">Draws rectangles around the two clipping regions.</span></span> <span data-ttu-id="b889f-3019">最初のクリッピング四角形には黒のペンを使用し、2番目のクリッピング領域には赤いペンを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3019">It uses a black pen for the first clipping rectangle and a red pen for the second clipping region.</span></span>  
  
 <span data-ttu-id="b889f-3020">結果として、2つの四角形の交差部分のみが青で塗りつぶされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3020">The result is that only the intersection of the two rectangles is filled with blue.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#125](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#125)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#125](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#125)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#125](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#125)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntersectClip">
      <MemberSignature Language="C#" Value="public void IntersectClip (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IntersectClip(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IntersectClip(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IntersectClip(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.IntersectClip : System.Drawing.Region -&gt; unit" Usage="graphics.IntersectClip region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region"><span data-ttu-id="b889f-3021">現在の領域と交差する <see cref="T:System.Drawing.Region" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3021"><see cref="T:System.Drawing.Region" /> to intersect with the current region.</span></span></param>
        <summary><span data-ttu-id="b889f-3022">この <see cref="T:System.Drawing.Graphics" /> のクリップ領域を現在のクリップ領域と指定した <see cref="T:System.Drawing.Region" /> との交差部分に更新します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3022">Updates the clip region of this <see cref="T:System.Drawing.Graphics" /> to the intersection of the current clip region and the specified <see cref="T:System.Drawing.Region" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3023">このメソッドは、現在のクリップ領域と `region` パラメーターによって指定された領域の交差部分によって表される領域 <xref:System.Drawing.Graphics> このの <xref:System.Drawing.Graphics.Clip%2A> プロパティに割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3023">This method assigns to the <xref:System.Drawing.Graphics.Clip%2A> property of this <xref:System.Drawing.Graphics> the area represented by the intersection of the current clip region and the region specified by the `region` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3024">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3024">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3025">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3025">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3026">左上隅が (0, 0) の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3026">Creates a rectangle with upper-left corner at (0, 0).</span></span>  
  
-   <span data-ttu-id="b889f-3027">領域を作成し、その領域を四角形に設定し、クリッピング領域をこの領域に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3027">Creates a region and sets it to the rectangle, and sets the clipping region to this region.</span></span>  
  
-   <span data-ttu-id="b889f-3028">左上隅が (100, 100) の2番目の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3028">Creates a second rectangle with upper-left corner at (100, 100).</span></span>  
  
-   <span data-ttu-id="b889f-3029">領域を作成し、それを2番目の四角形に設定し、<xref:System.Drawing.Drawing2D.CombineMode.Replace>の結合モードを使用して、この領域と現在のクリッピング領域 (最初の四角形) の交差部分にクリッピング領域を設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3029">Creates a region and sets it to the second rectangle, and sets the clipping region to the intersection of this region and the current clipping region (the first rectangle) using a combine mode of <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="b889f-3030">前の領域と単色の青のブラシを含む大きな四角形を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3030">Fills a large rectangle that includes both previous regions with a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-3031">クリッピング領域を無限にリセットします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3031">Resets the clipping region to infinite.</span></span>  
  
-   <span data-ttu-id="b889f-3032">2つのクリッピング領域の周囲に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3032">Draws rectangles around the two clipping regions.</span></span> <span data-ttu-id="b889f-3033">最初のクリッピング領域には黒のペンを使用し、2番目のクリッピング領域には赤いペンを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3033">It uses a black pen for the first clipping region and a red pen for the second clipping region.</span></span>  
  
 <span data-ttu-id="b889f-3034">結果として、2つの地域の交差部分のみが青で塗りつぶされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3034">The result is that only the intersection of the two regions is filled with blue.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#126](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#126)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#126](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#126)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#126](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#126)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClipEmpty">
      <MemberSignature Language="C#" Value="public bool IsClipEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClipEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.IsClipEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClipEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClipEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClipEmpty : bool" Usage="System.Drawing.Graphics.IsClipEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-3035">この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域が空かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3035">Gets a value indicating whether the clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty.</span></span></summary>
        <value><span data-ttu-id="b889f-3036">この <see langword="true" /> のクリッピング領域が空の場合は <see cref="T:System.Drawing.Graphics" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3036"><see langword="true" /> if the clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-3037">座標ペアで指定された点が、この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内にあるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3037">Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphics.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="b889f-3038">表示可能範囲をテストする <see cref="T:System.Drawing.Point" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3038"><see cref="T:System.Drawing.Point" /> structure to test for visibility.</span></span></param>
        <summary><span data-ttu-id="b889f-3039">この <see cref="T:System.Drawing.Point" /> の表示クリップ領域内に、指定した <see cref="T:System.Drawing.Graphics" /> 構造体が含まれるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3039">Indicates whether the specified <see cref="T:System.Drawing.Point" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3040"><see langword="true" /> パラメーターで指定された点がこの <paramref name="point" /> の表示クリップ領域内に含まれる場合は <see cref="T:System.Drawing.Graphics" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3040"><see langword="true" /> if the point specified by the <paramref name="point" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3041">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3041">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3042">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3042">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3043">四角形のクリッピング領域を作成し、<xref:System.Drawing.Drawing2D.CombineMode.Replace>を使用してフォームのグラフィックスオブジェクトのクリッピング領域として設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3043">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="b889f-3044">2つの点を作成します (1 つはクリッピング領域内、もう1つは外側)。</span><span class="sxs-lookup"><span data-stu-id="b889f-3044">Creates two points, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="b889f-3045">各点の可視性をテストし、表示されているものだけを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3045">Tests each of the points for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="b889f-3046">結果は、クリップ領域内にある小さな赤い円の1つです。</span><span class="sxs-lookup"><span data-stu-id="b889f-3046">The result is one small red circle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#127](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#127)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#127](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#127)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#127](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#127)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphics.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="b889f-3047">表示可能範囲をテストする <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3047"><see cref="T:System.Drawing.PointF" /> structure to test for visibility.</span></span></param>
        <summary><span data-ttu-id="b889f-3048">この <see cref="T:System.Drawing.PointF" /> の表示クリップ領域内に、指定した <see cref="T:System.Drawing.Graphics" /> 構造体が含まれるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3048">Indicates whether the specified <see cref="T:System.Drawing.PointF" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3049"><see langword="true" /> パラメーターで指定された点がこの <paramref name="point" /> の表示クリップ領域内に含まれる場合は <see cref="T:System.Drawing.Graphics" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3049"><see langword="true" /> if the point specified by the <paramref name="point" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3050">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3050">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3051">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3051">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3052">四角形のクリッピング領域を作成し、<xref:System.Drawing.Drawing2D.CombineMode.Replace>を使用してフォームのグラフィックスのクリッピング領域として設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3052">Creates a rectangular clipping region and sets it as the clipping region for the graphics of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="b889f-3053">2つの点を作成します (1 つはクリッピング領域内、もう1つは外側)。</span><span class="sxs-lookup"><span data-stu-id="b889f-3053">Creates two points, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="b889f-3054">各点の可視性をテストし、表示されているものだけを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3054">Tests each of the points for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="b889f-3055">結果は、クリップ領域内にある小さな赤い円の1つです。</span><span class="sxs-lookup"><span data-stu-id="b889f-3055">The result is one small red circle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#128](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#128)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#128](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#128)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#128](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#128)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As Rectangle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Rectangle -&gt; bool" Usage="graphics.IsVisible rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b889f-3056">表示可能範囲をテストする <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3056"><see cref="T:System.Drawing.Rectangle" /> structure to test for visibility.</span></span></param>
        <summary><span data-ttu-id="b889f-3057">この <see cref="T:System.Drawing.Rectangle" /> の表示クリップ領域内に、<see cref="T:System.Drawing.Graphics" /> 構造体で指定された四角形が含まれるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3057">Indicates whether the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3058"><see langword="true" /> パラメーターで指定された四角形がこの <paramref name="rect" /> の表示クリップ領域内に含まれる場合は <see cref="T:System.Drawing.Graphics" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3058"><see langword="true" /> if the rectangle specified by the <paramref name="rect" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3059">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3059">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3060">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3060">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3061">四角形のクリッピング領域を作成し、<xref:System.Drawing.Drawing2D.CombineMode.Replace>を使用してフォームのグラフィックスオブジェクトのクリッピング領域として設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3061">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="b889f-3062">2つの四角形の位置とサイズを作成します (1 つはクリッピング領域内、もう1つは外側)。</span><span class="sxs-lookup"><span data-stu-id="b889f-3062">Creates the location and size of two rectangles, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="b889f-3063">各四角形の可視性をテストし、表示されているものだけを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3063">Tests each of the rectangles for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="b889f-3064">その結果、クリップ領域内にある小さな赤い四角形が1つになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3064">The result is one small red rectangle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#129](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#129)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#129](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#129)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#129](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#129)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As RectangleF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.RectangleF -&gt; bool" Usage="graphics.IsVisible rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b889f-3065">表示可能範囲をテストする <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3065"><see cref="T:System.Drawing.RectangleF" /> structure to test for visibility.</span></span></param>
        <summary><span data-ttu-id="b889f-3066">この <see cref="T:System.Drawing.RectangleF" /> の表示クリップ領域内に、<see cref="T:System.Drawing.Graphics" /> 構造体で指定された四角形が含まれるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3066">Indicates whether the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3067"><see langword="true" /> パラメーターで指定された四角形がこの <paramref name="rect" /> の表示クリップ領域内に含まれる場合は <see cref="T:System.Drawing.Graphics" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3067"><see langword="true" /> if the rectangle specified by the <paramref name="rect" /> parameter is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3068">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3068">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3069">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3069">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3070">四角形のクリッピング領域を作成し、<xref:System.Drawing.Drawing2D.CombineMode.Replace>を使用してフォームのグラフィックスオブジェクトのクリッピング領域として設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3070">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="b889f-3071">2つの四角形を1つのクリッピング領域内に1つ、外側に1つ作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3071">Creates two rectangles, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="b889f-3072">各四角形の可視性をテストし、表示されているものだけを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3072">Tests each of the rectangles for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="b889f-3073">その結果、クリップ領域内にある小さな赤い四角形が1つになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3073">The result is one small red rectangle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#130](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#130)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#130](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#130)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#130](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphics.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b889f-3074">表示可能かどうかをテストする点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3074">The x-coordinate of the point to test for visibility.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-3075">表示可能かどうかをテストする点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3075">The y-coordinate of the point to test for visibility.</span></span></param>
        <summary><span data-ttu-id="b889f-3076">座標ペアで指定された点が、この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内にあるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3076">Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3077"><see langword="true" /> パラメーターと <paramref name="x" /> パラメーターで定義された点がこの <paramref name="y" /> の表示クリップ領域内に含まれる場合は <see cref="T:System.Drawing.Graphics" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3077"><see langword="true" /> if the point defined by the <paramref name="x" /> and <paramref name="y" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3078">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3078">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3079">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3079">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3080">四角形のクリッピング領域を作成し、<xref:System.Drawing.Drawing2D.CombineMode.Replace>を使用してフォームのグラフィックスオブジェクトのクリッピング領域として設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3080">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="b889f-3081">2つの点を作成します (1 つはクリッピング領域内、もう1つは外側)。</span><span class="sxs-lookup"><span data-stu-id="b889f-3081">Creates two points, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="b889f-3082">各点の可視性をテストし、表示されているものだけを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3082">Tests each of the points for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="b889f-3083">結果は、クリップ領域内にある小さな赤い円の1つです。</span><span class="sxs-lookup"><span data-stu-id="b889f-3083">The result is one small red circle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#131](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#131)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#131](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#131)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#131](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#131)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphics.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b889f-3084">表示可能かどうかをテストする点の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3084">The x-coordinate of the point to test for visibility.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-3085">表示可能かどうかをテストする点の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3085">The y-coordinate of the point to test for visibility.</span></span></param>
        <summary><span data-ttu-id="b889f-3086">座標ペアで指定された点が、この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内にあるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3086">Indicates whether the point specified by a pair of coordinates is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3087"><see langword="true" /> パラメーターと <paramref name="x" /> パラメーターで定義された点がこの <paramref name="y" /> の表示クリップ領域内に含まれる場合は <see cref="T:System.Drawing.Graphics" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3087"><see langword="true" /> if the point defined by the <paramref name="x" /> and <paramref name="y" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3088">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3088">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3089">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3089">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3090">四角形のクリッピング領域を作成し、<xref:System.Drawing.Drawing2D.CombineMode.Replace>を使用してフォームのグラフィックスオブジェクトのクリッピング領域として設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3090">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="b889f-3091">2つの点を作成します (1 つはクリッピング領域内、もう1つは外側)。</span><span class="sxs-lookup"><span data-stu-id="b889f-3091">Creates two points, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="b889f-3092">各点の可視性をテストし、表示されているものだけを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3092">Tests each of the points for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="b889f-3093">結果は、クリップ領域内にある小さな赤い円の1つです。</span><span class="sxs-lookup"><span data-stu-id="b889f-3093">The result is one small red circle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#133](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#133)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#133](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#133)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#133](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#133)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer, width As Integer, height As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * int * int -&gt; bool" Usage="graphics.IsVisible (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b889f-3094">表示可能かどうかをテストする四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3094">The x-coordinate of the upper-left corner of the rectangle to test for visibility.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-3095">表示可能かどうかをテストする四角形の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3095">The y-coordinate of the upper-left corner of the rectangle to test for visibility.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-3096">表示可能範囲をテストする四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-3096">Width of the rectangle to test for visibility.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-3097">表示可能範囲をテストする四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-3097">Height of the rectangle to test for visibility.</span></span></param>
        <summary><span data-ttu-id="b889f-3098">この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に、座標ペア、幅、および高さで指定された四角形が含まれるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3098">Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3099"><see langword="true" />、<paramref name="x" />、<paramref name="y" />、<paramref name="width" /> の各パラメーターで定義された四角形がこの <paramref name="height" /> の表示クリップ領域内に含まれる場合は <see cref="T:System.Drawing.Graphics" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3099"><see langword="true" /> if the rectangle defined by the <paramref name="x" />, <paramref name="y" />, <paramref name="width" />, and <paramref name="height" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3100">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3100">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3101">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3101">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3102">四角形のクリッピング領域を作成し、<xref:System.Drawing.Drawing2D.CombineMode.Replace>を使用してフォームのグラフィックスオブジェクトのクリッピング領域として設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3102">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="b889f-3103">2つの四角形の位置とサイズを作成します (1 つはクリッピング領域内、もう1つは外側)。</span><span class="sxs-lookup"><span data-stu-id="b889f-3103">Creates the location and size of two rectangles, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="b889f-3104">各四角形の可視性をテストし、表示されているものだけを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3104">Tests each of the rectangles for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="b889f-3105">その結果、クリップ領域内にある小さな赤い四角形が1つになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3105">The result is one small red rectangle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#132](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#132)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#132](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#132)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#132](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#132)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.IsVisible(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single, width As Single, height As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * single * single -&gt; bool" Usage="graphics.IsVisible (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="b889f-3106">表示可能かどうかをテストする四角形の左上隅の x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3106">The x-coordinate of the upper-left corner of the rectangle to test for visibility.</span></span></param>
        <param name="y"><span data-ttu-id="b889f-3107">表示可能かどうかをテストする四角形の左上隅の y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3107">The y-coordinate of the upper-left corner of the rectangle to test for visibility.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-3108">表示可能範囲をテストする四角形の幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-3108">Width of the rectangle to test for visibility.</span></span></param>
        <param name="height"><span data-ttu-id="b889f-3109">表示可能範囲をテストする四角形の高さ。</span><span class="sxs-lookup"><span data-stu-id="b889f-3109">Height of the rectangle to test for visibility.</span></span></param>
        <summary><span data-ttu-id="b889f-3110">この <see cref="T:System.Drawing.Graphics" /> の表示クリップ領域内に、座標ペア、幅、および高さで指定された四角形が含まれるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3110">Indicates whether the rectangle specified by a pair of coordinates, a width, and a height is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3111"><see langword="true" />、<paramref name="x" />、<paramref name="y" />、<paramref name="width" /> の各パラメーターで定義された四角形がこの <paramref name="height" /> の表示クリップ領域内に含まれる場合は <see cref="T:System.Drawing.Graphics" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3111"><see langword="true" /> if the rectangle defined by the <paramref name="x" />, <paramref name="y" />, <paramref name="width" />, and <paramref name="height" /> parameters is contained within the visible clip region of this <see cref="T:System.Drawing.Graphics" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3112">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3112">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3113">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3113">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3114">四角形のクリッピング領域を作成し、<xref:System.Drawing.Drawing2D.CombineMode.Replace>を使用してフォームのグラフィックスオブジェクトのクリッピング領域として設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3114">Creates a rectangular clipping region and sets it as the clipping region for the graphics object of the form using <xref:System.Drawing.Drawing2D.CombineMode.Replace>.</span></span>  
  
-   <span data-ttu-id="b889f-3115">2つの四角形の位置とサイズを作成します (1 つはクリッピング領域内、もう1つは外側)。</span><span class="sxs-lookup"><span data-stu-id="b889f-3115">Creates the location and size of two rectangles, one inside the clipping region and one outside.</span></span>  
  
-   <span data-ttu-id="b889f-3116">各四角形の可視性をテストし、表示されているものだけを描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3116">Tests each of the rectangles for visibility and draws only the visible one.</span></span>  
  
 <span data-ttu-id="b889f-3117">その結果、クリップ領域内にある小さな赤い四角形が1つになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3117">The result is one small red rectangle, which is within the clip region.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#134](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#134)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#134](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#134)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#134](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#134)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleClipEmpty">
      <MemberSignature Language="C#" Value="public bool IsVisibleClipEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisibleClipEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.IsVisibleClipEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisibleClipEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisibleClipEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisibleClipEmpty : bool" Usage="System.Drawing.Graphics.IsVisibleClipEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-3118">この <see cref="T:System.Drawing.Graphics" /> の表示クリッピング領域が空かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3118">Gets a value indicating whether the visible clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty.</span></span></summary>
        <value><span data-ttu-id="b889f-3119">この <see langword="true" /> のクリッピング領域の表示部分が空の場合は <see cref="T:System.Drawing.Graphics" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3119"><see langword="true" /> if the visible portion of the clipping region of this <see cref="T:System.Drawing.Graphics" /> is empty; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3120">表示されるクリッピング領域は、この `Graphics` のクリッピング領域とウィンドウのクリッピング領域の交差部分です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3120">The visible clipping region is the intersection of the clipping region of this `Graphics` and the clipping region of the window.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCharacterRanges">
      <MemberSignature Language="C#" Value="public System.Drawing.Region[] MeasureCharacterRanges (string text, System.Drawing.Font font, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat stringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Region[] MeasureCharacterRanges(string text, class System.Drawing.Font font, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat stringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Drawing::Region ^&gt; ^ MeasureCharacterRanges(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ stringFormat);" />
      <MemberSignature Language="F#" Value="member this.MeasureCharacterRanges : string * System.Drawing.Font * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; System.Drawing.Region[]" Usage="graphics.MeasureCharacterRanges (text, font, layoutRect, stringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Region[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="stringFormat" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b889f-3121">計測する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-3121">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-3122">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3122"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="layoutRect"><span data-ttu-id="b889f-3123">文字列のレイアウト四角形を指定する <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3123"><see cref="T:System.Drawing.RectangleF" /> structure that specifies the layout rectangle for the string.</span></span></param>
        <param name="stringFormat"><span data-ttu-id="b889f-3124">行間など、文字列の書式情報を表す <see cref="T:System.Drawing.StringFormat" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3124"><see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span></span></param>
        <summary><span data-ttu-id="b889f-3125">指定した文字列内の文字位置の範囲にそれぞれが外接する <see cref="T:System.Drawing.Region" /> オブジェクトの配列を取得します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3125">Gets an array of <see cref="T:System.Drawing.Region" /> objects, each of which bounds a range of character positions within the specified string.</span></span></summary>
        <returns><span data-ttu-id="b889f-3126">このメソッドは、指定した文字列内の文字位置の範囲にそれぞれが外接する <see cref="T:System.Drawing.Region" /> オブジェクトの配列を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3126">This method returns an array of <see cref="T:System.Drawing.Region" /> objects, each of which bounds a range of character positions within the specified string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3127">このメソッドによって返される領域は解決に依存しているため、ある解像度でメタファイルに文字列が記録され、後で別の解像度で再生される場合、精度がわずかに低下する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3127">The regions returned by this method are resolution-dependent, so there might be a slight loss of accuracy if strings are recorded in a metafile at one resolution and later played back at a different resolution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3128">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3128">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3129">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3129">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3130">文字列 "最初と2番目の範囲" と、文字列を表示するためのフォント ("Times New Roman"、16ポイント) を設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3130">Sets a string "First and Second ranges" and a font for display of the string ("Times New Roman", 16 point).</span></span>  
  
-   <span data-ttu-id="b889f-3131">文字列内に2文字の範囲を設定します (単語 "First" と "Second" に対応します)。</span><span class="sxs-lookup"><span data-stu-id="b889f-3131">Sets two character ranges within the string (which correspond to the words "First" and "Second").</span></span>  
  
-   <span data-ttu-id="b889f-3132">文字列を表示する四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3132">Creates a rectangle in which to display the string.</span></span>  
  
-   <span data-ttu-id="b889f-3133">2文字の範囲を含む文字列3/4 の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3133">Sets the formatting of the string ¾ including the two character ranges.</span></span>  
  
-   <span data-ttu-id="b889f-3134">文字列を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3134">Draws the string to the screen.</span></span>  
  
-   <span data-ttu-id="b889f-3135">文字範囲を測定し、指定した2つの範囲をバインドした四角形を決定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3135">Measures the character ranges, determines rectangles that bound the two specified ranges.</span></span>  
  
-   <span data-ttu-id="b889f-3136">2つの四角形を画面に描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3136">Draws the two rectangles to the screen.</span></span>  
  
 <span data-ttu-id="b889f-3137">結果として、表示される文字列には、最初の範囲 ("First") が赤い四角形で、2番目の範囲 ("Second") が青い四角形で囲まれたものが含まれます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3137">The result is the displayed string with the first range ("First") bounded by a red rectangle and the second range ("Second") bounded by a blue rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#135](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#135)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#135](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#135)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#135](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#135)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)" />
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-3138">指定した <see cref="T:System.Drawing.Font" /> で描画した場合の、指定した文字列を計測します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3138">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b889f-3139">計測する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-3139">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-3140">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3140"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <summary><span data-ttu-id="b889f-3141">指定した <see cref="T:System.Drawing.Font" /> で描画した場合の、指定した文字列を計測します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3141">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3142">このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターに指定された文字列のサイズを <see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位で表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターで描画されたとおりに返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3142">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3143"><xref:System.Drawing.Graphics.MeasureString%2A> メソッドは、個々の文字列と共に使用するように設計されており、グリフの突出を許容する文字列の前後に少量の余分なスペースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3143">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="b889f-3144">また、<xref:System.Drawing.Graphics.DrawString%2A> メソッドは、グリフポイントを調整して表示品質を最適化し、<xref:System.Drawing.Graphics.MeasureString%2A>によって報告された文字列の幅が狭くなることがあります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3144">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="b889f-3145">レイアウト内の隣接する文字列に適したメトリックを取得するには (書式設定されたテキストを実装する場合など)、<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> メソッド、または <xref:System.Drawing.StringFormat>を受け取る <xref:System.Drawing.Graphics.MeasureString%2A> メソッドの1つを使用して、<xref:System.Drawing.StringFormat.GenericTypographic%2A>を渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3145">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="b889f-3146">また、<xref:System.Drawing.Graphics> の <xref:System.Drawing.Graphics.TextRenderingHint%2A> が <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>ていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3146">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3147">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3147">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3148">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3148">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3149">測定する文字列を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3149">Creates a string to measure.</span></span>  
  
-   <span data-ttu-id="b889f-3150">フォントオブジェクトを作成し、Arial (16 ポイント) に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3150">Creates a font object and sets it to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="b889f-3151">サイズオブジェクトを作成し、それを使用して、文字列のサイズを測定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3151">Creates a size object and uses it and the font object to measure the size of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3152">文字列の測定されたサイズを使用して、赤い四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3152">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3153">描画された四角形内に文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3153">Draws the string within the drawn rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#136](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#136)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#136](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#136)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#136](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#136)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b889f-3154"><paramref name="font" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3154"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-3155">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-3155">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, valuetype System.Drawing.SizeF layoutArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::SizeF layoutArea);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * System.Drawing.SizeF -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, layoutArea)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="layoutArea" Type="System.Drawing.SizeF" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b889f-3156">計測する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-3156">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-3157">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3157"><see cref="T:System.Drawing.Font" /> defines the text format of the string.</span></span></param>
        <param name="layoutArea"><span data-ttu-id="b889f-3158">テキストの最大レイアウト領域を指定する <see cref="T:System.Drawing.SizeF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3158"><see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.</span></span></param>
        <summary><span data-ttu-id="b889f-3159">指定したレイアウト領域内に指定した <see cref="T:System.Drawing.Font" /> で描画した場合の、指定した文字列を計測します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3159">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> within the specified layout area.</span></span></summary>
        <returns><span data-ttu-id="b889f-3160">このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターに指定された文字列のサイズを <see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位で表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターで描画されたとおりに返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3160">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3161"><xref:System.Drawing.Graphics.MeasureString%2A> メソッドは、個々の文字列と共に使用するように設計されており、グリフの突出を許容する文字列の前後に少量の余分なスペースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3161">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="b889f-3162">また、<xref:System.Drawing.Graphics.DrawString%2A> メソッドは、グリフポイントを調整して表示品質を最適化し、<xref:System.Drawing.Graphics.MeasureString%2A>によって報告された文字列の幅が狭くなることがあります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3162">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="b889f-3163">レイアウト内の隣接する文字列に適したメトリックを取得するには (書式設定されたテキストを実装する場合など)、<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> メソッド、または <xref:System.Drawing.StringFormat>を受け取る <xref:System.Drawing.Graphics.MeasureString%2A> メソッドの1つを使用して、<xref:System.Drawing.StringFormat.GenericTypographic%2A>を渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3163">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="b889f-3164">また、<xref:System.Drawing.Graphics> の <xref:System.Drawing.Graphics.TextRenderingHint%2A> が <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>ていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3164">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3165">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3165">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3166">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3166">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3167">測定対象の文字列と Arial (16 ポイント) に設定されたフォントオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3167">Creates a string to measure and a font object set to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="b889f-3168">文字列のレイアウトの最大サイズを設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3168">Sets the maximum layout size of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3169">サイズオブジェクトを作成し、そのオブジェクト、フォントオブジェクト、および最大レイアウトサイズを使用して、文字列のサイズを測定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3169">Creates a size object and uses it, the font object, and the maximum layout size to measure the size of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3170">文字列の測定されたサイズを使用して、赤い四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3170">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3171">描画された四角形内に文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3171">Draws the string within the drawn rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#138](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#138)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#138](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#138)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#138](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#138)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b889f-3172"><paramref name="font" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3172"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-3173">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-3173">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, int32 width) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, int width);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * int -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, width)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="width" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b889f-3174">計測する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-3174">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-3175">文字列の書式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3175"><see cref="T:System.Drawing.Font" /> that defines the format of the string.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-3176">文字列の最大幅 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="b889f-3176">Maximum width of the string in pixels.</span></span></param>
        <summary><span data-ttu-id="b889f-3177">指定した <see cref="T:System.Drawing.Font" /> で描画した場合の、指定した文字列を計測します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3177">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3178">このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターに指定された文字列のサイズを <see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位で表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターで描画されたとおりに返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3178">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3179">`width` パラメーターは、返された <xref:System.Drawing.SizeF> 構造 (<xref:System.Drawing.SizeF.Width%2A>) の幅コンポーネントの最大値を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3179">The `width` parameter specifies the maximum value of the width component of the returned <xref:System.Drawing.SizeF> structure (<xref:System.Drawing.SizeF.Width%2A>).</span></span> <span data-ttu-id="b889f-3180">`width` パラメーターが文字列の実際の幅よりも小さい場合、返される <xref:System.Drawing.SizeF.Width%2A> コンポーネントは、指定された幅に収まる最大文字数を表す値に切り捨てられます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3180">If the `width` parameter is less than the actual width of the string, the returned <xref:System.Drawing.SizeF.Width%2A> component is truncated to a value representing the maximum number of characters that will fit within the specified width.</span></span> <span data-ttu-id="b889f-3181">文字列全体を格納するために、返された <xref:System.Drawing.SizeF.Height%2A> コンポーネントは、文字列を文字の折り返しで表示できる値に調整されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3181">To accommodate the entire string, the returned <xref:System.Drawing.SizeF.Height%2A> component is adjusted to a value that allows displaying the string with character wrap.</span></span>  
  
 <span data-ttu-id="b889f-3182"><xref:System.Drawing.Graphics.MeasureString%2A> メソッドは、個々の文字列と共に使用するように設計されており、グリフの突出を許容する文字列の前後に少量の余分なスペースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3182">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="b889f-3183">また、<xref:System.Drawing.Graphics.DrawString%2A> メソッドは、グリフポイントを調整して表示品質を最適化し、<xref:System.Drawing.Graphics.MeasureString%2A>によって報告された文字列の幅が狭くなることがあります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3183">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="b889f-3184">レイアウト内の隣接する文字列に適したメトリックを取得するには (書式設定されたテキストを実装する場合など)、<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> メソッド、または <xref:System.Drawing.StringFormat>を受け取る <xref:System.Drawing.Graphics.MeasureString%2A> メソッドの1つを使用して、<xref:System.Drawing.StringFormat.GenericTypographic%2A>を渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3184">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="b889f-3185">また、<xref:System.Drawing.Graphics> の <xref:System.Drawing.Graphics.TextRenderingHint%2A> が <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>ていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3185">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3186">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3186">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3187">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3187">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3188">測定対象の文字列と Arial (16 ポイント) に設定されたフォントオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3188">Creates a string to measure and a font object set to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="b889f-3189">文字列の最大の幅を設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3189">Sets the maximum width of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3190">サイズオブジェクトを作成し、それを使用して、フォントオブジェクトと最大文字列幅を使用して、文字列のサイズを測定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3190">Creates a size object and uses it, the font object, and the maximum string width to measure the size of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3191">文字列の測定されたサイズを使用して、赤い四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3191">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3192">描画された四角形内に文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3192">Draws the string within the drawn rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#141](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#141)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#141](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#141)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#141](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#141)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b889f-3193"><paramref name="font" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3193"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-3194">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-3194">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.PointF origin, System.Drawing.StringFormat stringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat stringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::PointF origin, System::Drawing::StringFormat ^ stringFormat);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * System.Drawing.PointF * System.Drawing.StringFormat -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, origin, stringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="stringFormat" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b889f-3195">計測する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-3195">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-3196">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3196"><see cref="T:System.Drawing.Font" /> defines the text format of the string.</span></span></param>
        <param name="origin"><span data-ttu-id="b889f-3197">文字列の左上隅を表す <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3197"><see cref="T:System.Drawing.PointF" /> structure that represents the upper-left corner of the string.</span></span></param>
        <param name="stringFormat"><span data-ttu-id="b889f-3198">行間など、文字列の書式情報を表す <see cref="T:System.Drawing.StringFormat" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3198"><see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span></span></param>
        <summary><span data-ttu-id="b889f-3199">指定した <see cref="T:System.Drawing.Font" /> を使用し、指定した <see cref="T:System.Drawing.StringFormat" /> で書式指定して描画した場合の、指定した文字列を計測します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3199">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3200">このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターに指定された文字列のサイズを <see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位で表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターおよび <paramref name="stringFormat" /> パラメーターで描画されたとおりに返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3200">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified by the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3201"><xref:System.Drawing.Graphics.MeasureString%2A> メソッドは、個々の文字列と共に使用するように設計されており、グリフの突出を許容する文字列の前後に少量の余分なスペースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3201">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="b889f-3202">また、<xref:System.Drawing.Graphics.DrawString%2A> メソッドは、グリフポイントを調整して表示品質を最適化し、<xref:System.Drawing.Graphics.MeasureString%2A>によって報告された文字列の幅が狭くなることがあります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3202">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="b889f-3203">レイアウト内の隣接する文字列に適したメトリックを取得するには (書式設定されたテキストを実装する場合など)、<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> メソッド、または <xref:System.Drawing.StringFormat>を受け取る <xref:System.Drawing.Graphics.MeasureString%2A> メソッドの1つを使用して、<xref:System.Drawing.StringFormat.GenericTypographic%2A>を渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3203">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="b889f-3204">また、<xref:System.Drawing.Graphics> の <xref:System.Drawing.Graphics.TextRenderingHint%2A> が <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>ていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3204">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3205">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3205">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3206">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3206">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3207">測定する文字列を作成し、Arial (16 ポイント) に設定されたフォントオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3207">Creates a string to measure and a font object set to Arial (16 point)</span></span>  
  
-   <span data-ttu-id="b889f-3208">文字列の左上隅を検索するポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3208">Creates a point to locate the upper-left corner of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3209">文字列書式オブジェクトを作成し、その書式設定フラグを <xref:System.Drawing.StringFormatFlags.DirectionVertical>に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3209">Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags.DirectionVertical>.</span></span>  
  
-   <span data-ttu-id="b889f-3210">文字列を測定するサイズオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3210">Creates a size object to measure the string.</span></span>  
  
-   <span data-ttu-id="b889f-3211">文字列、フォントオブジェクト、検索ポイント、および文字列形式を使用して、文字列のサイズを測定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3211">Measures the size of the string, using the string, the font object, the locating point, and the string format.</span></span>  
  
-   <span data-ttu-id="b889f-3212">検索ポイントと文字列の測定サイズを使用して、赤い四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3212">Draws a red rectangle using the locating point and the measured size of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3213">描画された四角形内に文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3213">Draws the string within the drawn rectangle.</span></span>  
  
 <span data-ttu-id="b889f-3214">結果は、垂直方向の文字列を囲む垂直方向の四角形です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3214">The result is a vertical rectangle enclosing a vertical string.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#137](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#137)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#137](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#137)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#137](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#137)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b889f-3215"><paramref name="font" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3215"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-3216">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-3216">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, valuetype System.Drawing.SizeF layoutArea, class System.Drawing.StringFormat stringFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::SizeF layoutArea, System::Drawing::StringFormat ^ stringFormat);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * System.Drawing.SizeF * System.Drawing.StringFormat -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, layoutArea, stringFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="layoutArea" Type="System.Drawing.SizeF" />
        <Parameter Name="stringFormat" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b889f-3217">計測する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-3217">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-3218">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3218"><see cref="T:System.Drawing.Font" /> defines the text format of the string.</span></span></param>
        <param name="layoutArea"><span data-ttu-id="b889f-3219">テキストの最大レイアウト領域を指定する <see cref="T:System.Drawing.SizeF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3219"><see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.</span></span></param>
        <param name="stringFormat"><span data-ttu-id="b889f-3220">行間など、文字列の書式情報を表す <see cref="T:System.Drawing.StringFormat" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3220"><see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span></span></param>
        <summary><span data-ttu-id="b889f-3221">指定した <see cref="T:System.Drawing.Font" /> を使用し、指定した <see cref="T:System.Drawing.StringFormat" /> で書式指定して描画した場合の、指定した文字列を計測します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3221">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3222">このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターで指定された文字列のサイズ (<see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位) を表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターと <paramref name="stringFormat" /> パラメーターで描画されたようにして返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3222">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3223"><xref:System.Drawing.Graphics.MeasureString%2A> メソッドは、個々の文字列と共に使用するように設計されており、グリフの突出を許容する文字列の前後に少量の余分なスペースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3223">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="b889f-3224">また、<xref:System.Drawing.Graphics.DrawString%2A> メソッドは、グリフポイントを調整して表示品質を最適化し、<xref:System.Drawing.Graphics.MeasureString%2A>によって報告された文字列の幅が狭くなることがあります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3224">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="b889f-3225">レイアウト内の隣接する文字列に適したメトリックを取得するには (書式設定されたテキストを実装する場合など)、<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> メソッド、または <xref:System.Drawing.StringFormat>を受け取る <xref:System.Drawing.Graphics.MeasureString%2A> メソッドの1つを使用して、<xref:System.Drawing.StringFormat.GenericTypographic%2A>を渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3225">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="b889f-3226">また、<xref:System.Drawing.Graphics> の <xref:System.Drawing.Graphics.TextRenderingHint%2A> が <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>ていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3226">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3227">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3227">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3228">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3228">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3229">測定対象の文字列と Arial (16 ポイント) に設定されたフォントオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3229">Creates a string to measure and a font object set to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="b889f-3230">文字列の最大レイアウトサイズを設定し、文字列を測定するサイズオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3230">Sets the maximum layout size of the string, creating a size object to measure the string.</span></span>  
  
-   <span data-ttu-id="b889f-3231">文字列書式オブジェクトを作成し、その書式設定フラグを <xref:System.Drawing.StringFormatFlags.DirectionVertical>に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3231">Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags.DirectionVertical>.</span></span>  
  
-   <span data-ttu-id="b889f-3232">文字列、フォントオブジェクト、最大レイアウトサイズ、および文字列形式を使用して、文字列のサイズを測定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3232">Measures the size of the string, using the string, the font object, the maximum layout size, and the string format.</span></span>  
  
-   <span data-ttu-id="b889f-3233">文字列の測定されたサイズを使用して、赤い四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3233">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3234">描画された四角形内に文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3234">Draws the string within the drawn rectangle.</span></span>  
  
 <span data-ttu-id="b889f-3235">結果は、垂直方向の文字列を囲む垂直方向の四角形です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3235">The result is a vertical rectangle enclosing a vertical string.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#139](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#139)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#139](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#139)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#139](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#139)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b889f-3236"><paramref name="font" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3236"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-3237">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-3237">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, int width, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, int32 width, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, int width, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * int * System.Drawing.StringFormat -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, width, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b889f-3238">計測する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-3238">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-3239">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3239"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="width"><span data-ttu-id="b889f-3240">文字列の最大幅。</span><span class="sxs-lookup"><span data-stu-id="b889f-3240">Maximum width of the string.</span></span></param>
        <param name="format"><span data-ttu-id="b889f-3241">行間など、文字列の書式情報を表す <see cref="T:System.Drawing.StringFormat" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3241"><see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span></span></param>
        <summary><span data-ttu-id="b889f-3242">指定した <see cref="T:System.Drawing.Font" /> を使用し、指定した <see cref="T:System.Drawing.StringFormat" /> で書式指定して描画した場合の、指定した文字列を計測します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3242">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3243">このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターで指定された文字列のサイズ (<see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位) を表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターと <paramref name="stringFormat" /> パラメーターで描画されたようにして返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3243">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the string specified in the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3244"><xref:System.Drawing.Graphics.MeasureString%2A> メソッドは、個々の文字列と共に使用するように設計されており、グリフの突出を許容する文字列の前後に少量の余分なスペースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3244">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="b889f-3245">また、<xref:System.Drawing.Graphics.DrawString%2A> メソッドは、グリフポイントを調整して表示品質を最適化し、<xref:System.Drawing.Graphics.MeasureString%2A>によって報告された文字列の幅が狭くなることがあります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3245">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="b889f-3246">レイアウト内の隣接する文字列に適したメトリックを取得するには (書式設定されたテキストを実装する場合など)、<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> メソッド、または <xref:System.Drawing.StringFormat>を受け取る <xref:System.Drawing.Graphics.MeasureString%2A> メソッドの1つを使用して、<xref:System.Drawing.StringFormat.GenericTypographic%2A>を渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3246">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat>, and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="b889f-3247">また、<xref:System.Drawing.Graphics> の <xref:System.Drawing.Graphics.TextRenderingHint%2A> が <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>ていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3247">Also, ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3248">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3248">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3249">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3249">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3250">測定する文字列を作成し、フォントオブジェクトを Arial (16 ポイント) に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3250">Creates a string to measure and a font object set it to Arial (16 point).</span></span>  
  
-   <span data-ttu-id="b889f-3251">文字列の最大の幅を設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3251">Sets the maximum width of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3252">文字列書式オブジェクトを作成し、その書式設定フラグを <xref:System.Drawing.StringFormatFlags.DirectionVertical>に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3252">Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags.DirectionVertical>.</span></span>  
  
-   <span data-ttu-id="b889f-3253">文字列を測定するサイズオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3253">Creates a size object to measure the string.</span></span>  
  
-   <span data-ttu-id="b889f-3254">文字列、フォントオブジェクト、最大幅、および文字列の書式を使用して、文字列のサイズを測定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3254">Measures the size of the string, using the string, the font object, the maximum width, and the string format.</span></span>  
  
-   <span data-ttu-id="b889f-3255">文字列の測定されたサイズを使用して、赤い四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3255">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3256">描画された四角形内に文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3256">Draws the string within the drawn rectangle.</span></span>  
  
 <span data-ttu-id="b889f-3257">結果は、垂直方向の文字列を囲む垂直方向の四角形です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3257">The result is a vertical rectangle enclosing a vertical string.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#142](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#142)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#142](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#142)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#142](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#142)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b889f-3258"><paramref name="font" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3258"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-3259">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-3259">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MeasureString">
      <MemberSignature Language="C#" Value="public System.Drawing.SizeF MeasureString (string text, System.Drawing.Font font, System.Drawing.SizeF layoutArea, System.Drawing.StringFormat stringFormat, out int charactersFitted, out int linesFilled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.SizeF MeasureString(string text, class System.Drawing.Font font, valuetype System.Drawing.SizeF layoutArea, class System.Drawing.StringFormat stringFormat, [out] int32&amp; charactersFitted, [out] int32&amp; linesFilled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::SizeF MeasureString(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::SizeF layoutArea, System::Drawing::StringFormat ^ stringFormat, [Runtime::InteropServices::Out] int % charactersFitted, [Runtime::InteropServices::Out] int % linesFilled);" />
      <MemberSignature Language="F#" Value="member this.MeasureString : string * System.Drawing.Font * System.Drawing.SizeF * System.Drawing.StringFormat * int * int -&gt; System.Drawing.SizeF" Usage="graphics.MeasureString (text, font, layoutArea, stringFormat, charactersFitted, linesFilled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.SizeF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="layoutArea" Type="System.Drawing.SizeF" />
        <Parameter Name="stringFormat" Type="System.Drawing.StringFormat" />
        <Parameter Name="charactersFitted" Type="System.Int32" RefType="out" />
        <Parameter Name="linesFilled" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b889f-3260">計測する文字列。</span><span class="sxs-lookup"><span data-stu-id="b889f-3260">String to measure.</span></span></param>
        <param name="font"><span data-ttu-id="b889f-3261">文字列のテキスト形式を定義する <see cref="T:System.Drawing.Font" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3261"><see cref="T:System.Drawing.Font" /> that defines the text format of the string.</span></span></param>
        <param name="layoutArea"><span data-ttu-id="b889f-3262">テキストの最大レイアウト領域を指定する <see cref="T:System.Drawing.SizeF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3262"><see cref="T:System.Drawing.SizeF" /> structure that specifies the maximum layout area for the text.</span></span></param>
        <param name="stringFormat"><span data-ttu-id="b889f-3263">行間など、文字列の書式情報を表す <see cref="T:System.Drawing.StringFormat" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3263"><see cref="T:System.Drawing.StringFormat" /> that represents formatting information, such as line spacing, for the string.</span></span></param>
        <param name="charactersFitted"><span data-ttu-id="b889f-3264">文字列の文字数。</span><span class="sxs-lookup"><span data-stu-id="b889f-3264">Number of characters in the string.</span></span></param>
        <param name="linesFilled"><span data-ttu-id="b889f-3265">文字列のテキスト行数。</span><span class="sxs-lookup"><span data-stu-id="b889f-3265">Number of text lines in the string.</span></span></param>
        <summary><span data-ttu-id="b889f-3266">指定した <see cref="T:System.Drawing.Font" /> を使用し、指定した <see cref="T:System.Drawing.StringFormat" /> で書式指定して描画した場合の、指定した文字列を計測します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3266">Measures the specified string when drawn with the specified <see cref="T:System.Drawing.Font" /> and formatted with the specified <see cref="T:System.Drawing.StringFormat" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3267">このメソッドは、<see cref="T:System.Drawing.SizeF" /> パラメーターに指定された文字列のサイズを <see cref="P:System.Drawing.Graphics.PageUnit" /> プロパティで指定された単位で表す <paramref name="text" /> 構造体を、<paramref name="font" /> パラメーターおよび <paramref name="stringFormat" /> パラメーターで描画されたとおりに返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3267">This method returns a <see cref="T:System.Drawing.SizeF" /> structure that represents the size of the string, in the units specified by the <see cref="P:System.Drawing.Graphics.PageUnit" /> property, of the <paramref name="text" /> parameter as drawn with the <paramref name="font" /> parameter and the <paramref name="stringFormat" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3268"><xref:System.Drawing.Graphics.MeasureString%2A> メソッドは、個々の文字列と共に使用するように設計されており、グリフの突出を許容する文字列の前後に少量の余分なスペースが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3268">The <xref:System.Drawing.Graphics.MeasureString%2A> method is designed for use with individual strings and includes a small amount of extra space before and after the string to allow for overhanging glyphs.</span></span> <span data-ttu-id="b889f-3269">また、<xref:System.Drawing.Graphics.DrawString%2A> メソッドは、グリフポイントを調整して表示品質を最適化し、<xref:System.Drawing.Graphics.MeasureString%2A>によって報告された文字列の幅が狭くなることがあります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3269">Also, the <xref:System.Drawing.Graphics.DrawString%2A> method adjusts glyph points to optimize display quality and might display a string narrower than reported by <xref:System.Drawing.Graphics.MeasureString%2A>.</span></span> <span data-ttu-id="b889f-3270">レイアウト内の隣接する文字列に適したメトリックを取得するには (書式設定されたテキストを実装する場合など)、<xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> メソッドを使用するか、<xref:System.Drawing.StringFormat> を受け取る <xref:System.Drawing.Graphics.MeasureString%2A> メソッドの1つを使用して <xref:System.Drawing.StringFormat.GenericTypographic%2A>を渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3270">To obtain metrics suitable for adjacent strings in layout (for example, when implementing formatted text), use the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method or one of the <xref:System.Drawing.Graphics.MeasureString%2A> methods that takes a <xref:System.Drawing.StringFormat> and pass <xref:System.Drawing.StringFormat.GenericTypographic%2A>.</span></span> <span data-ttu-id="b889f-3271">また、<xref:System.Drawing.Graphics> の <xref:System.Drawing.Graphics.TextRenderingHint%2A> が <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>ていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3271">Also ensure the <xref:System.Drawing.Graphics.TextRenderingHint%2A> for the <xref:System.Drawing.Graphics> is <xref:System.Drawing.Text.TextRenderingHint.AntiAlias>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3272">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3272">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3273">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3273">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3274">測定する文字列を作成し、Arial (16 ポイント) に設定されたフォントオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3274">Creates a string to measure and a font object set to Arial (16 point)</span></span>  
  
-   <span data-ttu-id="b889f-3275">文字列のレイアウトの最大サイズを設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3275">Sets the maximum layout size of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3276">文字列書式オブジェクトを作成し、その書式設定フラグを <xref:System.Drawing.StringFormatFlags.DirectionVertical>に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3276">Creates a string format object and sets its format flags to <xref:System.Drawing.StringFormatFlags.DirectionVertical>.</span></span>  
  
-   <span data-ttu-id="b889f-3277">整数変数 `charactersFitted` および `linesFilled` と、文字列を測定するサイズオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3277">Creates the integer variables `charactersFitted` and `linesFilled` and a size object to measure the string.</span></span>  
  
-   <span data-ttu-id="b889f-3278">文字列のサイズを測定し、文字列、フォントオブジェクト、最大レイアウトサイズ、および文字列形式を使用して、文字の幅と行数を決定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3278">Measures the size of the string and determines the number of characters fitted and lines filled, using the string, the font object, the maximum layout size, and the string format.</span></span>  
  
-   <span data-ttu-id="b889f-3279">文字列の測定されたサイズを使用して、赤い四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3279">Draws a red rectangle using the measured size of the string.</span></span>  
  
-   <span data-ttu-id="b889f-3280">描画された四角形内に文字列を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3280">Draws the string within the drawn rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-3281">適合した文字数と入力された行の値を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3281">Draws the values of the number of characters fitted and lines filled.</span></span>  
  
 <span data-ttu-id="b889f-3282">結果は、垂直方向の文字列を囲む垂直方向の四角形です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3282">The result is a vertical rectangle enclosing a vertical string.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#140](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#140)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#140](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#140)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#140](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#140)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b889f-3283"><paramref name="font" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3283"><paramref name="font" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
        <altmember cref="M:System.Drawing.Graphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
        <related type="Article" href="~/docs/framework/winforms/advanced/using-fonts-and-text.md"><span data-ttu-id="b889f-3284">フォントとテキストの使用</span><span class="sxs-lookup"><span data-stu-id="b889f-3284">Using Fonts and Text</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="MultiplyTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-3285">この <see cref="T:System.Drawing.Graphics" /> と指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> のワールド変換を乗算します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3285">Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphics.MultiplyTransform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="b889f-3286">ワールド変換を乗算する 4 x 4 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3286">4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" /> that multiplies the world transformation.</span></span></param>
        <summary><span data-ttu-id="b889f-3287">この <see cref="T:System.Drawing.Graphics" /> と指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> のワールド変換を乗算します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3287">Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3288">このメソッドは、結果が x ワールド変換 `matrix` されるように、`matrix` パラメーターで指定された行列を前に付加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3288">This method prepends the matrix specified by the `matrix` parameter, so that the result is `matrix` x world transformation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3289">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3289">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3290">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3290">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3291">`transformMatrix` 行列を作成します (2 つの id 行列とゼロ平行移動ベクター)。</span><span class="sxs-lookup"><span data-stu-id="b889f-3291">Creates a `transformMatrix` matrix (a two by two identity matrix plus a zero-translation vector).</span></span>  
  
-   <span data-ttu-id="b889f-3292">ベクター (200, 100) で変換行列を変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3292">Translates the transform matrix by a vector (200, 100).</span></span>  
  
-   <span data-ttu-id="b889f-3293">Windows フォームのワールド変換行列を30°回転させ、回転行列の前に30°を変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3293">Rotates the world transformation matrix of the Windows Form by 30 degrees, prepends the rotation matrix for 30 degrees to the form's transformation matrix.</span></span>  
  
-   <span data-ttu-id="b889f-3294">回転したワールド変換行列を翻訳された `transformMatrix`で乗算し、`transformMatrix` の前にワールド変換行列を付加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3294">Multiplies the rotated world transformation matrix by the translated `transformMatrix`, and prepends the `transformMatrix` to the world transformation matrix.</span></span>  
  
-   <span data-ttu-id="b889f-3295">回転変換された楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3295">Draws a rotated, translated ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#143](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#143)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#143](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#143)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#143](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#143)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/matrix-representation-of-transformations.md"><span data-ttu-id="b889f-3296">変換の行列表現</span><span class="sxs-lookup"><span data-stu-id="b889f-3296">Matrix Representation of Transformations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="MultiplyTransform">
      <MemberSignature Language="C#" Value="public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MultiplyTransform(class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MultiplyTransform(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.MultiplyTransform : System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="graphics.MultiplyTransform (matrix, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="matrix"><span data-ttu-id="b889f-3297">ワールド変換を乗算する 4 x 4 <see cref="T:System.Drawing.Drawing2D.Matrix" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3297">4x4 <see cref="T:System.Drawing.Drawing2D.Matrix" /> that multiplies the world transformation.</span></span></param>
        <param name="order"><span data-ttu-id="b889f-3298">乗算の順序を決定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3298">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that determines the order of the multiplication.</span></span></param>
        <summary><span data-ttu-id="b889f-3299">この <see cref="T:System.Drawing.Graphics" /> と指定した <see cref="T:System.Drawing.Drawing2D.Matrix" /> のワールド変換を指定した順序で乗算します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3299">Multiplies the world transformation of this <see cref="T:System.Drawing.Graphics" /> and specified the <see cref="T:System.Drawing.Drawing2D.Matrix" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3300">`order` パラメーターの値 <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend> は、乗算の順序が x ワールド変換 `matrix` であることを指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3300">A value of <xref:System.Drawing.Drawing2D.MatrixOrder.Prepend> for the `order` parameter specifies that the order of the multiplication is `matrix` x world transformation.</span></span> <span data-ttu-id="b889f-3301">`order` の <xref:System.Drawing.Drawing2D.MatrixOrder.Append> の値は、乗算の順序がワールド変換 x `matrix`であることを指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3301">A value of <xref:System.Drawing.Drawing2D.MatrixOrder.Append> for `order` specifies that the order of the multiplication is world transformation x `matrix`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3302">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3302">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3303">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3303">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3304">`transformMatrix` 行列を作成します (2 つの id 行列とゼロ平行移動ベクター)。</span><span class="sxs-lookup"><span data-stu-id="b889f-3304">Creates a `transformMatrix` matrix (a two by two identity matrix plus a zero-translation vector).</span></span>  
  
-   <span data-ttu-id="b889f-3305">ベクター (200, 100) で変換行列を変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3305">Translates the transform matrix by a vector (200, 100).</span></span>  
  
-   <span data-ttu-id="b889f-3306">Windows フォームのワールド変換行列を30°回転させます。これにより、回転行列は30°でフォームの変換行列に付加されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3306">Rotates the world transformation matrix of the Windows Form by 30 degrees, prepending the rotation matrix for 30 degrees to the form's transformation matrix.</span></span>  
  
-   <span data-ttu-id="b889f-3307">回転したワールド変換行列を翻訳された `transformMatrix`で乗算し、ワールド変換行列に `transformMatrix` を追加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3307">Multiplies the rotated world transformation matrix by the translated `transformMatrix`, appending the `transformMatrix` to the world transformation matrix.</span></span>  
  
-   <span data-ttu-id="b889f-3308">回転変換された楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3308">Draws a rotated, translated ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#144](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#144)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#144](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#144)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#144](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#144)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/matrix-representation-of-transformations.md"><span data-ttu-id="b889f-3309">変換の行列表現</span><span class="sxs-lookup"><span data-stu-id="b889f-3309">Matrix Representation of Transformations</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PageScale">
      <MemberSignature Language="C#" Value="public float PageScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PageScale" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.PageScale" />
      <MemberSignature Language="VB.NET" Value="Public Property PageScale As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float PageScale { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.PageScale : single with get, set" Usage="System.Drawing.Graphics.PageScale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-3310">この <see cref="T:System.Drawing.Graphics" /> のワールド単位とパージ単位の間のスケーリングを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3310">Gets or sets the scaling between world units and page units for this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-3311">このプロパティは、この <see cref="T:System.Drawing.Graphics" /> のワールド単位とパージ単位の間のスケーリングの値を指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3311">This property specifies a value for the scaling between world units and page units for this <see cref="T:System.Drawing.Graphics" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3312">次のコード例は、四角形を描画するときに、<xref:System.Drawing.Graphics.PageScale%2A> メンバーと <xref:System.Drawing.Graphics.TranslateTransform%2A> メンバーを使用してスケールと原点を変更する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3312">The following code example demonstrates how to use the <xref:System.Drawing.Graphics.PageScale%2A> and <xref:System.Drawing.Graphics.TranslateTransform%2A> members to change the scale and origin when you draw a rectangle.</span></span>  
  
 <span data-ttu-id="b889f-3313">この例は、Windows フォームと共に使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3313">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="b889f-3314">フォームにコードを貼り付けて、フォームの <xref:System.Windows.Forms.Control.Paint> イベントを処理するときに `ChangePageScaleAndTranslateTransform` メソッドを呼び出し、`e` を <xref:System.Windows.Forms.PaintEventArgs>として渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3314">Paste the code into a form and call the `ChangePageScaleAndTranslateTransform` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.GraphicsProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#2)]
 [!code-vb[System.Drawing.GraphicsProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/types-of-coordinate-systems.md"><span data-ttu-id="b889f-3315">座標系の種類</span><span class="sxs-lookup"><span data-stu-id="b889f-3315">Types of Coordinate Systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PageUnit">
      <MemberSignature Language="C#" Value="public System.Drawing.GraphicsUnit PageUnit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.GraphicsUnit PageUnit" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.PageUnit" />
      <MemberSignature Language="VB.NET" Value="Public Property PageUnit As GraphicsUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::GraphicsUnit PageUnit { System::Drawing::GraphicsUnit get(); void set(System::Drawing::GraphicsUnit value); };" />
      <MemberSignature Language="F#" Value="member this.PageUnit : System.Drawing.GraphicsUnit with get, set" Usage="System.Drawing.Graphics.PageUnit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.GraphicsUnit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-3316">この <see cref="T:System.Drawing.Graphics" /> のページ座標に使用される長さの単位を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3316">Gets or sets the unit of measure used for page coordinates in this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-3317"><see cref="T:System.Drawing.GraphicsUnit" /> 値の 1 つ (<see cref="F:System.Drawing.GraphicsUnit.World" /> を除く)。</span><span class="sxs-lookup"><span data-stu-id="b889f-3317">One of the <see cref="T:System.Drawing.GraphicsUnit" /> values other than <see cref="F:System.Drawing.GraphicsUnit.World" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3318">グラフィックスユニットは、この <xref:System.Drawing.Graphics>のページ座標に使用される測定単位です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3318">The graphics unit is the unit of measure used for page coordinates in this <xref:System.Drawing.Graphics>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3319">次のコード例は、<xref:System.Drawing.Graphics.PageUnit%2A> プロパティを変更した場合の影響を示しています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3319">The following code example demonstrates the effect of changing the <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span>  
  
 <span data-ttu-id="b889f-3320">この例は、Windows フォームと共に使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3320">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="b889f-3321">フォームにコードを貼り付けて、フォームの <xref:System.Windows.Forms.Control.Paint> イベントを処理するときに `ChangePageUnit` メソッドを呼び出し、`e` を <xref:System.Windows.Forms.PaintEventArgs>として渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3321">Paste the code into a form and call the `ChangePageUnit` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.GraphicsProperties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#3)]
 [!code-vb[System.Drawing.GraphicsProperties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="b889f-3322"><see cref="P:System.Drawing.Graphics.PageUnit" /> が、物理単位ではない <see cref="F:System.Drawing.GraphicsUnit.World" /> に設定されています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3322"><see cref="P:System.Drawing.Graphics.PageUnit" /> is set to <see cref="F:System.Drawing.GraphicsUnit.World" />, which is not a physical unit.</span></span></exception>
        <related type="Article" href="~/docs/framework/winforms/advanced/types-of-coordinate-systems.md"><span data-ttu-id="b889f-3323">座標系の種類</span><span class="sxs-lookup"><span data-stu-id="b889f-3323">Types of Coordinate Systems</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PixelOffsetMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PixelOffsetMode PixelOffsetMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.PixelOffsetMode PixelOffsetMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.PixelOffsetMode" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelOffsetMode As PixelOffsetMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PixelOffsetMode PixelOffsetMode { System::Drawing::Drawing2D::PixelOffsetMode get(); void set(System::Drawing::Drawing2D::PixelOffsetMode value); };" />
      <MemberSignature Language="F#" Value="member this.PixelOffsetMode : System.Drawing.Drawing2D.PixelOffsetMode with get, set" Usage="System.Drawing.Graphics.PixelOffsetMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PixelOffsetMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-3324">この <see cref="T:System.Drawing.Graphics" /> のレンダリング時のピクセルのオフセット方法を指定する値が取得または設定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3324">Gets or sets a value specifying how pixels are offset during rendering of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-3325">このプロパティは、<see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /> 列挙型のメンバーを指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3325">This property specifies a member of the <see cref="T:System.Drawing.Drawing2D.PixelOffsetMode" /> enumeration</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3326">このプロパティを使用して、より高い品質、低速のレンダリング、または品質の低下を指定し、この <xref:System.Drawing.Graphics> オブジェクトの内容をより高速にレンダリングします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3326">Use this property to specify either higher quality, slower rendering, or lower quality, faster rendering of the contents of this <xref:System.Drawing.Graphics> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReleaseHdc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-3327">この <see cref="M:System.Drawing.Graphics.GetHdc" /> の <see cref="T:System.Drawing.Graphics" /> メソッドを前回呼び出したときに取得したデバイス コンテキスト ハンドルを解放します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3327">Releases a device context handle obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReleaseHdc">
      <MemberSignature Language="C#" Value="public void ReleaseHdc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHdc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ReleaseHdc" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHdc ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseHdc();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHdc : unit -&gt; unit&#xA;override this.ReleaseHdc : unit -&gt; unit" Usage="graphics.ReleaseHdc " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Drawing.IDeviceContext.ReleaseHdc</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b889f-3328">この <see cref="M:System.Drawing.Graphics.GetHdc" /> の <see cref="T:System.Drawing.Graphics" /> メソッドを前回呼び出したときに取得したデバイス コンテキスト ハンドルを解放します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3328">Releases a device context handle obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3329"><xref:System.Drawing.Graphics.GetHdc%2A> と <xref:System.Drawing.Graphics.ReleaseHdc%2A> は、Windows デバイスのハンドルを取得して解放できる2つの方法です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3329"><xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows device.</span></span> <span data-ttu-id="b889f-3330">Windows ハンドルの使用が終了したら、<xref:System.Drawing.Graphics.ReleaseHdc%2A> を呼び出すことで、<xref:System.Drawing.Graphics.GetHdc%2A> の呼び出しに常に従う必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3330">You should always follow a call to <xref:System.Drawing.Graphics.GetHdc%2A> with a call to <xref:System.Drawing.Graphics.ReleaseHdc%2A> when you are finished with the Windows handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b889f-3331">アンマネージコードへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3331">for access to unmanaged code.</span></span> <span data-ttu-id="b889f-3332">関連する列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3332">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseHdc">
      <MemberSignature Language="C#" Value="public void ReleaseHdc (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseHdc(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ReleaseHdc(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHdc (hdc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHdc(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="member this.ReleaseHdc : nativeint -&gt; unit" Usage="graphics.ReleaseHdc hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc"><span data-ttu-id="b889f-3333"><see cref="M:System.Drawing.Graphics.GetHdc" /> の <see cref="T:System.Drawing.Graphics" /> メソッドを前回呼び出したときに取得したデバイス コンテキストを識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="b889f-3333">Handle to a device context obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</span></span></param>
        <summary><span data-ttu-id="b889f-3334">この <see cref="M:System.Drawing.Graphics.GetHdc" /> の <see cref="T:System.Drawing.Graphics" /> メソッドを前回呼び出したときに取得したデバイス コンテキスト ハンドルを解放します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3334">Releases a device context handle obtained by a previous call to the <see cref="M:System.Drawing.Graphics.GetHdc" /> method of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3335">デバイスコンテキストは、グラフィカルオブジェクトとそれらに関連付けられている属性のセット、および出力に影響を与えるグラフィカルモードを定義する [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] に基づく Windows 構造です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3335">The device context is a Windows structure based on [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] that defines a set of graphical objects and their associated attributes, as well as the graphical modes that affect output.</span></span>  
  
 <span data-ttu-id="b889f-3336"><xref:System.Drawing.Graphics.GetHdc%2A> および <xref:System.Drawing.Graphics.ReleaseHdc%2A> メソッドの呼び出しは、ペアで記述する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3336">Calls to the <xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> methods must appear in pairs.</span></span> <span data-ttu-id="b889f-3337"><xref:System.Drawing.Graphics.GetHdc%2A> と <xref:System.Drawing.Graphics.ReleaseHdc%2A> メソッドのペアのスコープでは、通常、[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 関数に対してのみ呼び出しを行います。</span><span class="sxs-lookup"><span data-stu-id="b889f-3337">During the scope of a <xref:System.Drawing.Graphics.GetHdc%2A> and <xref:System.Drawing.Graphics.ReleaseHdc%2A> method pair, you usually make calls only to [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] functions.</span></span> <span data-ttu-id="b889f-3338">`hdc` パラメーターを生成した <xref:System.Drawing.Graphics> の [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] メソッドに対して行われたそのスコープ内の呼び出しは、`ObjectBusy` エラーが発生して失敗します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3338">Calls in that scope made to [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] methods of the <xref:System.Drawing.Graphics> that produced the `hdc` parameter fail with an `ObjectBusy` error.</span></span> <span data-ttu-id="b889f-3339">また、[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] は、後続の操作で `hdc` パラメーターの <xref:System.Drawing.Graphics> に加えられた状態の変更を無視します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3339">Also, [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] ignores any state changes made to the <xref:System.Drawing.Graphics> of the `hdc` parameter in subsequent operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3340">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3340">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3341">この例では、Windows [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 関数を呼び出して、[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> メソッドと同じタスクを実行する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3341">The example illustrates calling a Windows [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] function to perform the same task as a [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics> method.</span></span> <span data-ttu-id="b889f-3342">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3342">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3343">Windows DLL ファイル gdi32 の相互運用性 <xref:System.Runtime.InteropServices.DllImportAttribute> 属性を定義します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3343">Defines the interoperability <xref:System.Runtime.InteropServices.DllImportAttribute> attribute for the Windows DLL file gdi32.dll.</span></span> <span data-ttu-id="b889f-3344">この DLL には、目的の [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] 関数が含まれており、その DLL の <xref:System.Drawing.Rectangle> 関数が外部として定義されています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3344">This DLL contains the desired [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] function, and it defines the <xref:System.Drawing.Rectangle> function in that DLL as external.</span></span>  
  
-   <span data-ttu-id="b889f-3345">赤いペンを作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3345">Creates a red pen.</span></span>  
  
-   <span data-ttu-id="b889f-3346">ペンを使用して、[!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> メソッドを使用して画面に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3346">With the pen, draws a rectangle to the screen using the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics.DrawRectangle%2A> method.</span></span>  
  
-   <span data-ttu-id="b889f-3347">`hdc` 内部ポインター型の変数を定義し、その値をフォームのデバイスコンテキストを指すハンドルに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3347">Defines an internal pointer type variable `hdc` and sets its value to the handle to the device context of the form.</span></span>  
  
-   <span data-ttu-id="b889f-3348">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> 関数を使用して、画面に四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3348">Draws a rectangle to the screen using the [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] <xref:System.Drawing.Rectangle> function.</span></span>  
  
-   <span data-ttu-id="b889f-3349">`hdc` パラメーターによって表されるデバイスコンテキストを解放します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3349">Releases the device context represented by the `hdc` parameter.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#145](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#145)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#145](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#145)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#145](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#145)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b889f-3350">アンマネージコードへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3350">for access to unmanaged code.</span></span> <span data-ttu-id="b889f-3351">関連する列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3351">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHdcInternal">
      <MemberSignature Language="C#" Value="public void ReleaseHdcInternal (IntPtr hdc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseHdcInternal(native int hdc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ReleaseHdcInternal(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHdcInternal (hdc As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHdcInternal(IntPtr hdc);" />
      <MemberSignature Language="F#" Value="member this.ReleaseHdcInternal : nativeint -&gt; unit" Usage="graphics.ReleaseHdcInternal hdc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hdc" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hdc"><span data-ttu-id="b889f-3352">デバイス コンテキストを識別するハンドル。</span><span class="sxs-lookup"><span data-stu-id="b889f-3352">Handle to a device context.</span></span></param>
        <summary><span data-ttu-id="b889f-3353">デバイス コンテキストを識別するハンドルを解放します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3353">Releases a handle to a device context.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b889f-3354">アンマネージコードへのアクセスに使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3354">for access to unmanaged code.</span></span> <span data-ttu-id="b889f-3355">関連する列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3355">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RenderingOrigin">
      <MemberSignature Language="C#" Value="public System.Drawing.Point RenderingOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point RenderingOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.RenderingOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderingOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point RenderingOrigin { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.RenderingOrigin : System.Drawing.Point with get, set" Usage="System.Drawing.Graphics.RenderingOrigin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-3356">ディザリングおよびハッチ ブラシに使用する、この <see cref="T:System.Drawing.Graphics" /> のレンダリングの原点を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3356">Gets or sets the rendering origin of this <see cref="T:System.Drawing.Graphics" /> for dithering and for hatch brushes.</span></span></summary>
        <value><span data-ttu-id="b889f-3357">8 ビット/ピクセルおよび 16 ビット/ピクセルのディザリングの原点を表す <see cref="T:System.Drawing.Point" /> 構造体。この構造体は、ハッチ ブラシの原点を設定する場合にも使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3357">A <see cref="T:System.Drawing.Point" /> structure that represents the dither origin for 8-bits-per-pixel and 16-bits-per-pixel dithering and is also used to set the origin for hatch brushes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetClip">
      <MemberSignature Language="C#" Value="public void ResetClip ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetClip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ResetClip" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetClip ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetClip();" />
      <MemberSignature Language="F#" Value="member this.ResetClip : unit -&gt; unit" Usage="graphics.ResetClip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b889f-3358">この <see cref="T:System.Drawing.Graphics" /> のクリップ領域を無制限領域にリセットします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3358">Resets the clip region of this <see cref="T:System.Drawing.Graphics" /> to an infinite region.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3359"><xref:System.Drawing.Graphics> のクリッピング領域が無制限の場合、この <xref:System.Drawing.Graphics> 描画される項目はクリップされません。</span><span class="sxs-lookup"><span data-stu-id="b889f-3359">When the clipping region of a <xref:System.Drawing.Graphics> is infinite, items that this <xref:System.Drawing.Graphics> draws are not clipped.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3360">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3360">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3361">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3361">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3362">左上隅が (0, 0) の四角形を作成し、クリッピング領域をこの四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3362">Creates a rectangle with upper-left corner at (0, 0) and sets the clipping region to this rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-3363">左上隅が (100, 100) の2番目の四角形を作成し、この四角形と現在のクリッピング領域 (最初の四角形) の交差部分にクリッピング領域を設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3363">Creates a second rectangle with upper-left corner at (100, 100) and sets the clipping region to the intersection of this rectangle and the current clipping region (the first rectangle).</span></span>  
  
-   <span data-ttu-id="b889f-3364">前の四角形と単色の青のブラシの両方を含む大きな四角形を塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3364">Fills a large rectangle that includes both previous rectangles with a solid blue brush.</span></span>  
  
-   <span data-ttu-id="b889f-3365">クリッピング領域を無限にリセットします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3365">Resets the clipping region to infinite.</span></span>  
  
-   <span data-ttu-id="b889f-3366">2つのクリッピング領域の周囲に四角形を描画します。最初のクリッピング四角形には黒のペンを使用し、2番目のクリッピング領域には赤いペンを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3366">Draws rectangles around the two clipping regions; it uses a black pen for the first clipping rectangle and a red pen for the second clipping region.</span></span>  
  
 <span data-ttu-id="b889f-3367">結果として、2つの四角形の交差部分のみが青で塗りつぶされます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3367">The result is that only the intersection of the two rectangles is filled with blue.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#146](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#146)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#146](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#146)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#146](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#146)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetTransform">
      <MemberSignature Language="C#" Value="public void ResetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ResetTransform" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetTransform ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetTransform();" />
      <MemberSignature Language="F#" Value="member this.ResetTransform : unit -&gt; unit" Usage="graphics.ResetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b889f-3368">対象の <see cref="T:System.Drawing.Graphics" /> のワールド変換行列を単位行列にリセットします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3368">Resets the world transformation matrix of this <see cref="T:System.Drawing.Graphics" /> to the identity matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3369">Id 行列は、スケーリング、回転、または変換を行わない変換を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3369">The identity matrix represents a transformation with no scaling, rotation, or translation.</span></span> <span data-ttu-id="b889f-3370">この <xref:System.Drawing.Graphics> のワールド変換を id 行列にリセットすると、変換された項目のジオメトリがワールド変換によって変化しないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3370">Resetting the world transformation of this <xref:System.Drawing.Graphics> to the identity matrix means that its world transformation does not change the geometry of transformed items.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3371">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3371">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3372">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3372">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3373">Windows フォームのワールド変換をベクター (100, 0) で変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3373">Translates the world transform of the Windows Form by a vector (100, 0).</span></span>  
  
-   <span data-ttu-id="b889f-3374">フォームのグラフィックスの状態を保存します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3374">Saves the graphics state of the form.</span></span>  
  
-   <span data-ttu-id="b889f-3375">フォームのワールド変換を id にリセットし、四角形に単色の赤いブラシで塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3375">Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-3376">変換されたグラフィックスの状態を復元し、四角形に単色の青のブラシで塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3376">Restores the translated graphics state and fills a rectangle with a solid blue brush.</span></span>  
  
 <span data-ttu-id="b889f-3377">結果は、変換されていない赤で塗りつぶされた四角形と、変換された青で塗りつぶされた四角形になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3377">The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#147](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#147)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#147](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#147)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#147](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#147)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Restore">
      <MemberSignature Language="C#" Value="public void Restore (System.Drawing.Drawing2D.GraphicsState gstate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Restore(class System.Drawing.Drawing2D.GraphicsState gstate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Restore(System.Drawing.Drawing2D.GraphicsState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Restore (gstate As GraphicsState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Restore(System::Drawing::Drawing2D::GraphicsState ^ gstate);" />
      <MemberSignature Language="F#" Value="member this.Restore : System.Drawing.Drawing2D.GraphicsState -&gt; unit" Usage="graphics.Restore gstate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gstate" Type="System.Drawing.Drawing2D.GraphicsState" />
      </Parameters>
      <Docs>
        <param name="gstate"><span data-ttu-id="b889f-3378">この <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> を復元したときの状態を表す <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3378"><see cref="T:System.Drawing.Drawing2D.GraphicsState" /> that represents the state to which to restore this <see cref="T:System.Drawing.Graphics" />.</span></span></param>
        <summary><span data-ttu-id="b889f-3379">この <see cref="T:System.Drawing.Graphics" /> の状態を <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> によって表される状態に復元します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3379">Restores the state of this <see cref="T:System.Drawing.Graphics" /> to the state represented by a <see cref="T:System.Drawing.Drawing2D.GraphicsState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3380"><xref:System.Drawing.Graphics>の <xref:System.Drawing.Graphics.Save%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics> の状態を保持する情報ブロックがスタックに配置されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3380">When you call the <xref:System.Drawing.Graphics.Save%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="b889f-3381"><xref:System.Drawing.Graphics.Save%2A> メソッドは、その情報ブロックを識別する <xref:System.Drawing.Drawing2D.GraphicsState> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3381">The <xref:System.Drawing.Graphics.Save%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsState> that identifies that information block.</span></span> <span data-ttu-id="b889f-3382">識別 <xref:System.Drawing.Drawing2D.GraphicsState> を <xref:System.Drawing.Graphics.Restore%2A> メソッドに渡すと、情報ブロックがスタックから削除され、<xref:System.Drawing.Graphics.Save%2A> メソッド呼び出し時の状態に <xref:System.Drawing.Graphics> を復元するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3382">When you pass the identifying <xref:System.Drawing.Drawing2D.GraphicsState> to the <xref:System.Drawing.Graphics.Restore%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.Save%2A> method call.</span></span> <span data-ttu-id="b889f-3383"><xref:System.Drawing.Graphics.Save%2A> メソッドへの特定の呼び出しによって返される <xref:System.Drawing.Drawing2D.GraphicsState> は、`Restore` メソッドに1回だけ渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3383">Note that the <xref:System.Drawing.Drawing2D.GraphicsState> returned by a given call to the <xref:System.Drawing.Graphics.Save%2A> method can be passed only once to the `Restore` method.</span></span>  
  
 <span data-ttu-id="b889f-3384"><xref:System.Drawing.Graphics.Save%2A> メソッドの呼び出しは入れ子にすることができます。つまり、<xref:System.Drawing.Graphics.Restore%2A> メソッドを呼び出す前に、<xref:System.Drawing.Graphics.Save%2A> メソッドを複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3384">Calls to the <xref:System.Drawing.Graphics.Save%2A> method can be nested; that is, you can call the <xref:System.Drawing.Graphics.Save%2A> method several times before you call the <xref:System.Drawing.Graphics.Restore%2A> method.</span></span> <span data-ttu-id="b889f-3385"><xref:System.Drawing.Graphics.Save%2A> メソッドを呼び出すたびに、情報ブロックがスタックに配置され、情報ブロックの <xref:System.Drawing.Drawing2D.GraphicsState> を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3385">Each time you call the <xref:System.Drawing.Graphics.Save%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsState> for the information block.</span></span> <span data-ttu-id="b889f-3386">これらのオブジェクトのいずれかを <xref:System.Drawing.Graphics.Restore%2A> メソッドに渡すと、その <xref:System.Drawing.Graphics> は、その特定の <xref:System.Drawing.Drawing2D.GraphicsState>を返した <xref:System.Drawing.Graphics.Save%2A> メソッド呼び出し時の状態に戻ります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3386">When you pass one of those objects to the <xref:System.Drawing.Graphics.Restore%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.Save%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsState>.</span></span> <span data-ttu-id="b889f-3387"><xref:System.Drawing.Graphics.Save%2A> メソッド呼び出しによってスタックに配置された情報ブロックがスタックから削除され、<xref:System.Drawing.Graphics.Save%2A> メソッド呼び出しの後にそのスタックに配置されたすべての情報ブロックも削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3387">The information block placed on the stack by that <xref:System.Drawing.Graphics.Save%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.Save%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="b889f-3388"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.Save%2A> メソッドの呼び出しと同じスタックに情報ブロックが配置されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3388">Calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.Save%2A> method.</span></span> <span data-ttu-id="b889f-3389"><xref:System.Drawing.Graphics.Restore%2A> の呼び出しが <xref:System.Drawing.Graphics.Save%2A> 呼び出しとペアになっているのと同様に、<xref:System.Drawing.Graphics.EndContainer%2A> メソッド呼び出しは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しとペアになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3389">Just as a <xref:System.Drawing.Graphics.Restore%2A> call is paired with a <xref:System.Drawing.Graphics.Save%2A> call, a <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="b889f-3390"><xref:System.Drawing.Graphics.Restore%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.Save%2A> メソッドへの対応する呼び出しがスタックから削除された後に、(<xref:System.Drawing.Graphics.Save%2A> メソッドまたは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって) スタックに配置されたすべての情報ブロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3390">When you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span> <span data-ttu-id="b889f-3391">同様に、<xref:System.Drawing.Graphics.EndContainer%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドへの対応する呼び出しがスタックから削除された後に、(<xref:System.Drawing.Graphics.Save%2A> メソッドまたは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって) スタックに配置されたすべての情報ブロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3391">Likewise, when you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3392">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3392">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3393">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3393">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3394">Windows フォームのワールド変換をベクター (100, 0) で変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3394">Translates the world transform of the Windows Form by a vector (100, 0).</span></span>  
  
-   <span data-ttu-id="b889f-3395">フォームのグラフィックスの状態を保存します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3395">Saves the graphics state of the form.</span></span>  
  
-   <span data-ttu-id="b889f-3396">フォームのワールド変換を id にリセットし、四角形に単色の赤いブラシで塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3396">Resets the world transform of the form to an identity and fills a rectangle with a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-3397">変換されたグラフィックスの状態を復元し、2番目の四角形に単色の青のブラシで塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3397">Restores the translated graphics state and fills a second rectangle with a solid blue brush.</span></span>  
  
 <span data-ttu-id="b889f-3398">結果は、変換されていない赤で塗りつぶされた四角形と、変換された青で塗りつぶされた四角形になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3398">The result is an untranslated red-filled rectangle and a translated blue-filled rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#148](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#148)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#148](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#148)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#148](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#148)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RotateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-3399">この <see cref="T:System.Drawing.Graphics" /> の変換行列に、指定した回転を適用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3399">Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.RotateTransform(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single -&gt; unit" Usage="graphics.RotateTransform angle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="b889f-3400">回転角度。</span><span class="sxs-lookup"><span data-stu-id="b889f-3400">Angle of rotation in degrees.</span></span></param>
        <summary><span data-ttu-id="b889f-3401">この <see cref="T:System.Drawing.Graphics" /> の変換行列に、指定した回転を適用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3401">Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3402">回転操作は、`angle` パラメーターから派生した要素を持つ行列によって、変換行列を乗算することで構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3402">The rotation operation consists of multiplying the transformation matrix by a matrix whose elements are derived from the `angle` parameter.</span></span> <span data-ttu-id="b889f-3403">このメソッドは、変換行列に前に付加して回転を適用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3403">This method applies the rotation by prepending it to the transformation matrix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3404">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3404">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3405">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3405">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3406">Windows フォームのワールド変換行列をベクター (100, 0) で変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3406">Translates the world transformation matrix of the Windows Form by the vector (100, 0).</span></span>  
  
-   <span data-ttu-id="b889f-3407">ワールド変換を30度回転させて、回転行列をワールド変換行列の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3407">Rotates the world transformation by an angle of 30 degrees, prepending the rotation matrix to the world transformation matrix.</span></span>  
  
-   <span data-ttu-id="b889f-3408">青いペンを使用して、回転した平行移動楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3408">Draws a rotated, translated ellipse with a blue pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#149](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#149)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#149](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#149)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#149](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#149)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateTransform">
      <MemberSignature Language="C#" Value="public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RotateTransform(float32 angle, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RotateTransform (angle As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RotateTransform(float angle, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.RotateTransform : single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="graphics.RotateTransform (angle, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angle" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="angle"><span data-ttu-id="b889f-3409">回転角度。</span><span class="sxs-lookup"><span data-stu-id="b889f-3409">Angle of rotation in degrees.</span></span></param>
        <param name="order"><span data-ttu-id="b889f-3410">回転が行列変換の後ろに追加されるか前に付加されるかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3410">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the rotation is appended or prepended to the matrix transformation.</span></span></param>
        <summary><span data-ttu-id="b889f-3411">この <see cref="T:System.Drawing.Graphics" /> の変換行列に、指定した回転を指定した順序で適用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3411">Applies the specified rotation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3412">回転操作は、`angle` パラメーターから派生した要素を持つ行列によって、変換行列を乗算することで構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3412">The rotation operation consists of multiplying the transformation matrix by a matrix whose elements are derived from the `angle` parameter.</span></span> <span data-ttu-id="b889f-3413">このメソッドは、`order` パラメーターに従って、回転行列によって <xref:System.Drawing.Graphics> の変換行列を先頭または末尾に追加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3413">This method prepends or appends the transformation matrix of the <xref:System.Drawing.Graphics> by the rotation matrix according to the `order` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3414">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3414">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3415">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3415">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3416">Windows フォームのワールド変換行列をベクター (100, 0) で変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3416">Translates the world transformation matrix of the Windows Form by the vector (100, 0).</span></span>  
  
-   <span data-ttu-id="b889f-3417">ワールド変換を30°の角度で回転させ、回転行列を <xref:System.Drawing.Drawing2D.MatrixOrder.Append>でワールド変換行列に追加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3417">Rotates the world transform by an angle of 30 degrees, appending the rotation matrix to the world transformation matrix with <xref:System.Drawing.Drawing2D.MatrixOrder.Append>.</span></span>  
  
-   <span data-ttu-id="b889f-3418">青いペンを使用して、回転した平行楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3418">Draws a translated, rotated ellipse with a blue pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#150](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#150)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#150](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#150)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#150](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#150)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.GraphicsState Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.GraphicsState Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.Save" />
      <MemberSignature Language="VB.NET" Value="Public Function Save () As GraphicsState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::GraphicsState ^ Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; System.Drawing.Drawing2D.GraphicsState" Usage="graphics.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.GraphicsState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b889f-3419">この <see cref="T:System.Drawing.Graphics" /> の現在の状態を保存し、保存した状態を <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> で識別します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3419">Saves the current state of this <see cref="T:System.Drawing.Graphics" /> and identifies the saved state with a <see cref="T:System.Drawing.Drawing2D.GraphicsState" />.</span></span></summary>
        <returns><span data-ttu-id="b889f-3420">このメソッドは、この <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> の保存状態を表す <see cref="T:System.Drawing.Graphics" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3420">This method returns a <see cref="T:System.Drawing.Drawing2D.GraphicsState" /> that represents the saved state of this <see cref="T:System.Drawing.Graphics" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3421"><xref:System.Drawing.Graphics>の <xref:System.Drawing.Graphics.Save%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics> の状態を保持する情報ブロックがスタックに配置されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3421">When you call the <xref:System.Drawing.Graphics.Save%2A> method of a <xref:System.Drawing.Graphics>, an information block that holds the state of the <xref:System.Drawing.Graphics> is put on a stack.</span></span> <span data-ttu-id="b889f-3422"><xref:System.Drawing.Graphics.Save%2A> メソッドは、その情報ブロックを識別する <xref:System.Drawing.Drawing2D.GraphicsState> を返します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3422">The <xref:System.Drawing.Graphics.Save%2A> method returns a <xref:System.Drawing.Drawing2D.GraphicsState> that identifies that information block.</span></span> <span data-ttu-id="b889f-3423">識別 <xref:System.Drawing.Drawing2D.GraphicsState> を <xref:System.Drawing.Graphics.Restore%2A> メソッドに渡すと、情報ブロックがスタックから削除され、<xref:System.Drawing.Graphics.Save%2A> メソッド呼び出し時の状態に <xref:System.Drawing.Graphics> を復元するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3423">When you pass the identifying <xref:System.Drawing.Drawing2D.GraphicsState> to the <xref:System.Drawing.Graphics.Restore%2A> method, the information block is removed from the stack and is used to restore the <xref:System.Drawing.Graphics> to the state it was in at the time of the <xref:System.Drawing.Graphics.Save%2A> method call.</span></span> <span data-ttu-id="b889f-3424"><xref:System.Drawing.Graphics.Save%2A> メソッドへの特定の呼び出しによって返される <xref:System.Drawing.Drawing2D.GraphicsState> は、<xref:System.Drawing.Graphics.Restore%2A> メソッドに1回だけ渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3424">Note that the <xref:System.Drawing.Drawing2D.GraphicsState> returned by a given call to the <xref:System.Drawing.Graphics.Save%2A> method can be passed only once to the <xref:System.Drawing.Graphics.Restore%2A> method.</span></span>  
  
 <span data-ttu-id="b889f-3425"><xref:System.Drawing.Graphics.Save%2A> メソッドの呼び出しは入れ子にすることができます。つまり、<xref:System.Drawing.Graphics.Restore%2A> メソッドを呼び出す前に、<xref:System.Drawing.Graphics.Save%2A> メソッドを複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3425">Calls to the <xref:System.Drawing.Graphics.Save%2A> method can be nested; that is, you can call the <xref:System.Drawing.Graphics.Save%2A> method several times before you call the <xref:System.Drawing.Graphics.Restore%2A> method.</span></span> <span data-ttu-id="b889f-3426"><xref:System.Drawing.Graphics.Save%2A> メソッドを呼び出すたびに、情報ブロックがスタックに配置され、情報ブロックの <xref:System.Drawing.Drawing2D.GraphicsState> を受け取ります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3426">Each time you call the <xref:System.Drawing.Graphics.Save%2A> method, an information block is put on the stack, and you receive a <xref:System.Drawing.Drawing2D.GraphicsState> for the information block.</span></span> <span data-ttu-id="b889f-3427">これらのオブジェクトのいずれかを <xref:System.Drawing.Graphics.Restore%2A> メソッドに渡すと、その <xref:System.Drawing.Graphics> は、その特定の <xref:System.Drawing.Drawing2D.GraphicsState>を返した <xref:System.Drawing.Graphics.Save%2A> メソッド呼び出し時の状態に戻ります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3427">When you pass one of those objects to the <xref:System.Drawing.Graphics.Restore%2A> method, the <xref:System.Drawing.Graphics> is returned to the state it was in at the time of the <xref:System.Drawing.Graphics.Save%2A> method call that returned that particular <xref:System.Drawing.Drawing2D.GraphicsState>.</span></span> <span data-ttu-id="b889f-3428"><xref:System.Drawing.Graphics.Save%2A> メソッド呼び出しによってスタックに配置された情報ブロックがスタックから削除され、<xref:System.Drawing.Graphics.Save%2A> メソッド呼び出しの後にそのスタックに配置されたすべての情報ブロックも削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3428">The information block placed on the stack by that <xref:System.Drawing.Graphics.Save%2A> method call is removed from the stack, and all information blocks placed on that stack after that <xref:System.Drawing.Graphics.Save%2A> method call are also removed.</span></span>  
  
 <span data-ttu-id="b889f-3429"><xref:System.Drawing.Graphics.BeginContainer%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.Save%2A> メソッドの呼び出しと同じスタックに情報ブロックが配置されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3429">Calls to the <xref:System.Drawing.Graphics.BeginContainer%2A> method place information blocks on the same stack as calls to the <xref:System.Drawing.Graphics.Save%2A> method.</span></span> <span data-ttu-id="b889f-3430"><xref:System.Drawing.Graphics.Restore%2A> の呼び出しが <xref:System.Drawing.Graphics.Save%2A> 呼び出しとペアになっているのと同様に、<xref:System.Drawing.Graphics.EndContainer%2A> メソッド呼び出しは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッド呼び出しとペアになります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3430">Just as a <xref:System.Drawing.Graphics.Restore%2A> call is paired with a <xref:System.Drawing.Graphics.Save%2A> call, a <xref:System.Drawing.Graphics.EndContainer%2A> method call is paired with a <xref:System.Drawing.Graphics.BeginContainer%2A> method call.</span></span>  
  
 <span data-ttu-id="b889f-3431"><xref:System.Drawing.Graphics.Restore%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.Save%2A> メソッドへの対応する呼び出しがスタックから削除された後に、(<xref:System.Drawing.Graphics.Save%2A> メソッドまたは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって) スタックに配置されたすべての情報ブロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3431">When you call the <xref:System.Drawing.Graphics.Restore%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.Save%2A> method are removed from the stack.</span></span> <span data-ttu-id="b889f-3432">同様に、<xref:System.Drawing.Graphics.EndContainer%2A> メソッドを呼び出すと、<xref:System.Drawing.Graphics.BeginContainer%2A> メソッドへの対応する呼び出しがスタックから削除された後に、(<xref:System.Drawing.Graphics.Save%2A> メソッドまたは <xref:System.Drawing.Graphics.BeginContainer%2A> メソッドによって) スタックに配置されたすべての情報ブロックが削除されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3432">Likewise, When you call the <xref:System.Drawing.Graphics.EndContainer%2A> method, all information blocks placed on the stack (by the <xref:System.Drawing.Graphics.Save%2A> method or by the <xref:System.Drawing.Graphics.BeginContainer%2A> method) after the corresponding call to the <xref:System.Drawing.Graphics.BeginContainer%2A> method are removed from the stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3433">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3433">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3434">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3434">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3435">Windows フォームのワールド変換をベクター (100, 0) で変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3435">Translates the world transform of the Windows Form by a vector (100, 0).</span></span>  
  
-   <span data-ttu-id="b889f-3436">フォームのグラフィックスの状態を保存します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3436">Saves the graphics state of the form.</span></span>  
  
-   <span data-ttu-id="b889f-3437">フォームのワールド変換を id にリセットし (2x2 恒等行列と0ベクトル平行移動)、四角形に塗りつぶした赤色のブラシを設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3437">Resets the world transform of the form to an identity (2x2 identity matrix plus a zero-vector translation) and fills a rectangle with a solid red brush.</span></span>  
  
-   <span data-ttu-id="b889f-3438">変換されたグラフィックスの状態を復元し、四角形に単色の青のブラシで塗りつぶします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3438">Restores the translated graphics state and fills a rectangle with a solid blue brush.</span></span>  
  
 <span data-ttu-id="b889f-3439">結果として、左側に平行移動されていない赤で塗りつぶされた四角形と、フォームの右側にある、変換された青い塗りつぶされた四角形が返されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3439">The result is an untranslated red-filled rectangle on the left and a translated blue-filled rectangle on the right of the form.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#151](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#151)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#151](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#151)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#151](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#151)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ScaleTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-3440">この <see cref="T:System.Drawing.Graphics" /> の変換行列の前に指定したスケーリング操作を付加することによって、この変換行列にスケーリング操作を適用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3440">Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> by prepending it to the object's transformation matrix.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single -&gt; unit" Usage="graphics.ScaleTransform (sx, sy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="sx"><span data-ttu-id="b889f-3441">x 方向のスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="b889f-3441">Scale factor in the x direction.</span></span></param>
        <param name="sy"><span data-ttu-id="b889f-3442">y 方向のスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="b889f-3442">Scale factor in the y direction.</span></span></param>
        <summary><span data-ttu-id="b889f-3443">この <see cref="T:System.Drawing.Graphics" /> の変換行列の前に指定したスケーリング操作を付加することによって、この変換行列にスケーリング操作を適用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3443">Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> by prepending it to the object's transformation matrix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3444">スケーリング操作は、変換行列を、要素が (`sx`、`sy`、1) である対角線行列で乗算することで構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3444">The scaling operation consists of multiplying the transformation matrix by a diagonal matrix whose elements are (`sx`, `sy`, 1).</span></span> <span data-ttu-id="b889f-3445">このメソッドは、スケーリング行列によって <xref:System.Drawing.Graphics> の変換行列の前に付加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3445">This method prepends the transformation matrix of the <xref:System.Drawing.Graphics> by the scaling matrix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3446">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3446">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3447">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3447">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3448">Windows フォームのワールド変換行列を30°回転します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3448">Rotates the world transformation matrix of the Windows Form by 30 degrees.</span></span>  
  
-   <span data-ttu-id="b889f-3449">この行列を x 方向に3倍の係数で拡大し、スケーリング変換を前に付加することによって y 方向の係数を1にします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3449">Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by prepending the scaling transformation.</span></span>  
  
-   <span data-ttu-id="b889f-3450">青いペンを使用して、回転した回転した四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3450">Draws a scaled, rotated rectangle with a blue pen.</span></span>  
  
 <span data-ttu-id="b889f-3451">結果はまだ四角形のままです。</span><span class="sxs-lookup"><span data-stu-id="b889f-3451">The result is still a rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#152](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#152)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#152](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#152)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#152](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#152)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleTransform">
      <MemberSignature Language="C#" Value="public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleTransform(float32 sx, float32 sy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleTransform (sx As Single, sy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleTransform(float sx, float sy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.ScaleTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="graphics.ScaleTransform (sx, sy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sx" Type="System.Single" />
        <Parameter Name="sy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="sx"><span data-ttu-id="b889f-3452">x 方向のスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="b889f-3452">Scale factor in the x direction.</span></span></param>
        <param name="sy"><span data-ttu-id="b889f-3453">y 方向のスケール ファクター。</span><span class="sxs-lookup"><span data-stu-id="b889f-3453">Scale factor in the y direction.</span></span></param>
        <param name="order"><span data-ttu-id="b889f-3454">スケーリング操作が変換行列の前に付加されるか後ろに追加されるかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3454">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the scaling operation is prepended or appended to the transformation matrix.</span></span></param>
        <summary><span data-ttu-id="b889f-3455">この <see cref="T:System.Drawing.Graphics" /> の変換行列に、指定したスケーリング操作を指定した順序で適用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3455">Applies the specified scaling operation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3456">スケーリング操作は、変換行列を、要素が (`sx`、`sy`、1) である対角線行列で乗算することで構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3456">The scaling operation consists of multiplying the transformation matrix by a diagonal matrix whose elements are (`sx`, `sy`, 1).</span></span> <span data-ttu-id="b889f-3457">このメソッドは、`order` パラメーターに従って、スケーリング行列によって <xref:System.Drawing.Graphics> の変換行列を先頭または末尾に追加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3457">This method prepends or appends the transformation matrix of the <xref:System.Drawing.Graphics> by the scaling matrix according to the `order` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3458">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3458">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3459">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3459">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3460">Windows フォームのワールド変換行列を30°回転します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3460">Rotates the world transformation matrix of the Windows Form by 30 degrees.</span></span>  
  
-   <span data-ttu-id="b889f-3461">この行列を x 方向の3倍の係数で拡大し、<xref:System.Drawing.Drawing2D.MatrixOrder.Append> メンバーと共にスケーリング変換を追加することで y 方向の係数を1にします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3461">Scales that matrix by a factor of 3 in the x direction and a factor of 1 in the y direction by appending the scaling transformation with the <xref:System.Drawing.Drawing2D.MatrixOrder.Append> member.</span></span>  
  
-   <span data-ttu-id="b889f-3462">青いペンを使用して、回転、拡大縮小された四角形を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3462">Draws a rotated, scaled rectangle with a blue pen.</span></span>  
  
 <span data-ttu-id="b889f-3463">結果は平行四辺形です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3463">The result is a parallelogram.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#153](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#153)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#153](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#153)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#153](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#153)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetClip">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-3464">この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を指定した <see langword="Clip" /> の <see cref="T:System.Drawing.Graphics" /> プロパティに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3464">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the <see langword="Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClip (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="graphics.SetClip path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b889f-3465">新しいクリップ領域を表す <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3465"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> that represents the new clip region.</span></span></param>
        <summary><span data-ttu-id="b889f-3466">この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> オブジェクトに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3466">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3467">`path` パラメーターによって表されるグラフィックスパスが閉じられていない場合は、パスを閉じるために、最後のポイントから最初のポイントまで追加のセグメントが追加されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3467">If the graphics path represented by the `path` parameter is not closed, an additional segment is added from the last point to the first point to close the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3468">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3468">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3469">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3469">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3470">グラフィックスパスを作成し、そのパスに楕円を追加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3470">Creates a graphics path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="b889f-3471">クリッピング領域を楕円のパスに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3471">Sets the clipping region to the elliptical path.</span></span>  
  
-   <span data-ttu-id="b889f-3472">大きな四角形を塗りつぶします。黒いブラシを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3472">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="b889f-3473">結果は、塗りつぶされた黒い楕円です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3473">The result is a filled, black ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#154](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#154)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#154](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#154)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#154](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#154)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClip (g As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Graphics -&gt; unit" Usage="graphics.SetClip g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="b889f-3474">新しいクリップ領域の取得元となる <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3474"><see cref="T:System.Drawing.Graphics" /> from which to take the new clip region.</span></span></param>
        <summary><span data-ttu-id="b889f-3475">この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を指定した <see langword="Clip" /> の <see cref="T:System.Drawing.Graphics" /> プロパティに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3475">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the <see langword="Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3476">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターであり、`thisForm`の例の <xref:System.Windows.Forms.Form> である <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3476">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example.</span></span> <span data-ttu-id="b889f-3477">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3477">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3478">例の `thisForm`<xref:System.Windows.Forms.Form> から一時 <xref:System.Drawing.Graphics> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3478">Creates a temporary <xref:System.Drawing.Graphics> from the `thisForm`<xref:System.Windows.Forms.Form> of the example.</span></span>  
  
-   <span data-ttu-id="b889f-3479">一時 <xref:System.Drawing.Graphics> のクリッピング領域を小さい四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3479">Sets the clipping region of the temporary <xref:System.Drawing.Graphics> to a small square.</span></span>  
  
-   <span data-ttu-id="b889f-3480">フォームのグラフィックオブジェクトのクリッピング領域を、一時的な <xref:System.Drawing.Graphics>に更新します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3480">Updates the clipping region of the form's graphic object to that of the temporary <xref:System.Drawing.Graphics>.</span></span>  
  
-   <span data-ttu-id="b889f-3481">大きな四角形を塗りつぶします。黒いブラシを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3481">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="b889f-3482">結果は、小さな塗りつぶされた黒い正方形になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3482">The result is a small, filled, black square.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#156](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#156)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#156)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#156)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClip (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Rectangle -&gt; unit" Usage="graphics.SetClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b889f-3483">新しいクリップ領域を表す <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3483"><see cref="T:System.Drawing.Rectangle" /> structure that represents the new clip region.</span></span></param>
        <summary><span data-ttu-id="b889f-3484">この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を <see cref="T:System.Drawing.Rectangle" /> 構造体で指定された四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3484">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3485">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3485">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3486">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3486">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3487">クリッピング領域の小さい四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3487">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="b889f-3488">クリッピング領域を四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3488">Sets the clipping region to the rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-3489">大きな四角形を塗りつぶします。黒いブラシを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3489">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="b889f-3490">その結果、黒い四角形が小さくなります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3490">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#158](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#158)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#158](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#158)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#158](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#158)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetClip (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.RectangleF -&gt; unit" Usage="graphics.SetClip rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b889f-3491">新しいクリップ領域を表す <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3491"><see cref="T:System.Drawing.RectangleF" /> structure that represents the new clip region.</span></span></param>
        <summary><span data-ttu-id="b889f-3492">この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を <see cref="T:System.Drawing.RectangleF" /> 構造体で指定された四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3492">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3493">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3493">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3494">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3494">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3495">クリッピング領域の小さい四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3495">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="b889f-3496">クリッピング領域を四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3496">Sets the clipping region to the rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-3497">大きな四角形を塗りつぶします。黒いブラシを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3497">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="b889f-3498">その結果、黒い四角形が小さくなります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3498">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#160](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#160)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#160](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#160)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#160](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#160)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Drawing2D.GraphicsPath path, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Drawing2D.GraphicsPath path, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Drawing2D::GraphicsPath ^ path, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Drawing2D.GraphicsPath * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (path, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="b889f-3499">組み合わせる <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3499"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to combine.</span></span></param>
        <param name="combineMode"><span data-ttu-id="b889f-3500">使用する組み合わせ操作を指定する <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3500">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span></span></param>
        <summary><span data-ttu-id="b889f-3501">この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を、現在のクリップ領域と指定した <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> とを組み合わせる指定の操作の結果に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3501">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3502">`path` パラメーターによって表されるグラフィックスパスが閉じられていない場合は、パスを閉じるために、最後のポイントから最初のポイントまで追加のセグメントが追加されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3502">If the graphics path represented by the `path` parameter is not closed, an additional segment is added from the last point to the first point to close the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3503">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3503">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3504">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3504">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3505">グラフィックスパスを作成し、そのパスに楕円を追加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3505">Creates a graphics path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="b889f-3506">クリッピング領域を、<xref:System.Drawing.Drawing2D.CombineMode.Replace> メンバーを持つ楕円のパスに設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3506">Sets the clipping region to the elliptical path with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="b889f-3507">大きな四角形を塗りつぶします。黒いブラシを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3507">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="b889f-3508">結果は、塗りつぶされた黒い楕円です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3508">The result is a filled, black ellipse.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#155](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#155)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#155](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#155)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#155](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#155)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Graphics g, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Graphics g, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Graphics ^ g, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Graphics * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (g, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="g"><span data-ttu-id="b889f-3509">組み合わせるクリップ領域を指定する <see cref="T:System.Drawing.Graphics" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3509"><see cref="T:System.Drawing.Graphics" /> that specifies the clip region to combine.</span></span></param>
        <param name="combineMode"><span data-ttu-id="b889f-3510">使用する組み合わせ操作を指定する <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3510">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span></span></param>
        <summary><span data-ttu-id="b889f-3511">この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を、現在のクリップ領域と指定した <see cref="P:System.Drawing.Graphics.Clip" /> の <see cref="T:System.Drawing.Graphics" /> プロパティとを組み合わせる指定の操作の結果に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3511">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified combining operation of the current clip region and the <see cref="P:System.Drawing.Graphics.Clip" /> property of the specified <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3512">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターであり、`thisForm`の例の <xref:System.Windows.Forms.Form> である <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3512">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler, as well as `thisForm`, the <xref:System.Windows.Forms.Form> for the example.</span></span> <span data-ttu-id="b889f-3513">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3513">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3514">例の `thisForm`<xref:System.Windows.Forms.Form> から一時 <xref:System.Drawing.Graphics> を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3514">Creates a temporary <xref:System.Drawing.Graphics> from the `thisForm`<xref:System.Windows.Forms.Form> of the example.</span></span>  
  
-   <span data-ttu-id="b889f-3515">一時 <xref:System.Drawing.Graphics> のクリッピング領域を小さい四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3515">Sets the clipping region of the temporary <xref:System.Drawing.Graphics> to a small square.</span></span>  
  
-   <span data-ttu-id="b889f-3516">フォームのグラフィックオブジェクトのクリッピング領域を、<xref:System.Drawing.Drawing2D.CombineMode.Replace> メンバーを持つ新しい <xref:System.Drawing.Graphics> の領域に更新します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3516">Updates the clipping region of the form's graphic object to that of the new <xref:System.Drawing.Graphics> with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="b889f-3517">大きな四角形を塗りつぶします。黒いブラシを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3517">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="b889f-3518">結果は、小さな塗りつぶされた黒い正方形になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3518">The result is a small, filled, black square.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#157](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#157)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#157](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#157)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#157](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#157)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Rectangle rect, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Rectangle rect, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Rectangle * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (rect, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b889f-3519">組み合わせる <see cref="T:System.Drawing.Rectangle" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3519"><see cref="T:System.Drawing.Rectangle" /> structure to combine.</span></span></param>
        <param name="combineMode"><span data-ttu-id="b889f-3520">使用する組み合わせ操作を指定する <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3520">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span></span></param>
        <summary><span data-ttu-id="b889f-3521">この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を現在のクリップ領域と <see cref="T:System.Drawing.Rectangle" /> 構造体で指定された四角形とを組み合わせる指定の操作の結果に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3521">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the rectangle specified by a <see cref="T:System.Drawing.Rectangle" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3522">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3522">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3523">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3523">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3524">クリッピング領域の小さい四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3524">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="b889f-3525">クリッピング領域を <xref:System.Drawing.Drawing2D.CombineMode.Replace> メンバーを持つ四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3525">Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="b889f-3526">大きな四角形を塗りつぶします。黒いブラシを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3526">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="b889f-3527">その結果、黒い四角形が小さくなります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3527">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#159](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#159)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#159](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#159)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#159](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#159)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.RectangleF rect, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::RectangleF rect, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.RectangleF * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (rect, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="rect"><span data-ttu-id="b889f-3528">組み合わせる <see cref="T:System.Drawing.RectangleF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3528"><see cref="T:System.Drawing.RectangleF" /> structure to combine.</span></span></param>
        <param name="combineMode"><span data-ttu-id="b889f-3529">使用する組み合わせ操作を指定する <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3529">Member of the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span></span></param>
        <summary><span data-ttu-id="b889f-3530">この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を現在のクリップ領域と <see cref="T:System.Drawing.RectangleF" /> 構造体で指定された四角形とを組み合わせる指定の操作の結果に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3530">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the rectangle specified by a <see cref="T:System.Drawing.RectangleF" /> structure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3531">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3531">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3532">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3532">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3533">クリッピング領域の小さい四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3533">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="b889f-3534">クリッピング領域を <xref:System.Drawing.Drawing2D.CombineMode.Replace> メンバーを持つ四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3534">Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="b889f-3535">大きな四角形を塗りつぶします。黒いブラシを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3535">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="b889f-3536">その結果、黒い四角形が小さくなります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3536">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#161](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#161)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#161](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#161)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#161](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetClip">
      <MemberSignature Language="C#" Value="public void SetClip (System.Drawing.Region region, System.Drawing.Drawing2D.CombineMode combineMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetClip(class System.Drawing.Region region, valuetype System.Drawing.Drawing2D.CombineMode combineMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetClip(System::Drawing::Region ^ region, System::Drawing::Drawing2D::CombineMode combineMode);" />
      <MemberSignature Language="F#" Value="member this.SetClip : System.Drawing.Region * System.Drawing.Drawing2D.CombineMode -&gt; unit" Usage="graphics.SetClip (region, combineMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="combineMode" Type="System.Drawing.Drawing2D.CombineMode" />
      </Parameters>
      <Docs>
        <param name="region"><span data-ttu-id="b889f-3537">組み合わせる <see cref="T:System.Drawing.Region" />。</span><span class="sxs-lookup"><span data-stu-id="b889f-3537"><see cref="T:System.Drawing.Region" /> to combine.</span></span></param>
        <param name="combineMode"><span data-ttu-id="b889f-3538">使用する組み合わせ操作を指定する <see cref="T:System.Drawing.Drawing2D.CombineMode" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3538">Member from the <see cref="T:System.Drawing.Drawing2D.CombineMode" /> enumeration that specifies the combining operation to use.</span></span></param>
        <summary><span data-ttu-id="b889f-3539">この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を、現在のクリップ領域と指定した <see cref="T:System.Drawing.Region" /> とを組み合わせる指定の操作の結果に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3539">Sets the clipping region of this <see cref="T:System.Drawing.Graphics" /> to the result of the specified operation combining the current clip region and the specified <see cref="T:System.Drawing.Region" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3540">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3540">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3541">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3541">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3542">クリッピング領域の小さい四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3542">Creates a small rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="b889f-3543">クリッピング領域を <xref:System.Drawing.Drawing2D.CombineMode.Replace> メンバーを持つ四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3543">Sets the clipping region to the rectangle with the <xref:System.Drawing.Drawing2D.CombineMode.Replace> member.</span></span>  
  
-   <span data-ttu-id="b889f-3544">大きな四角形を塗りつぶします。黒いブラシを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3544">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="b889f-3545">その結果、黒い四角形が小さくなります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3545">The result is a small, filled, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#162](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#162)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#162](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#162)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#162](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#162)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SmoothingMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.SmoothingMode SmoothingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.SmoothingMode SmoothingMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.SmoothingMode" />
      <MemberSignature Language="VB.NET" Value="Public Property SmoothingMode As SmoothingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::SmoothingMode SmoothingMode { System::Drawing::Drawing2D::SmoothingMode get(); void set(System::Drawing::Drawing2D::SmoothingMode value); };" />
      <MemberSignature Language="F#" Value="member this.SmoothingMode : System.Drawing.Drawing2D.SmoothingMode with get, set" Usage="System.Drawing.Graphics.SmoothingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.SmoothingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-3546">この <see cref="T:System.Drawing.Graphics" /> のレンダリング品質を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3546">Gets or sets the rendering quality for this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-3547"><see cref="T:System.Drawing.Drawing2D.SmoothingMode" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="b889f-3547">One of the <see cref="T:System.Drawing.Drawing2D.SmoothingMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3548">スムージングモードでは、塗りつぶし領域の線、曲線、および端がスムージング (アンチエイリアシングとも呼ばれます) を使用するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3548">The smoothing mode specifies whether lines, curves, and the edges of filled areas use smoothing (also called antialiasing).</span></span> <span data-ttu-id="b889f-3549">1つの例外として、パスグラデーションブラシがスムージングモードに従わないことが挙げられます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3549">One exception is that path gradient brushes do not obey the smoothing mode.</span></span> <span data-ttu-id="b889f-3550"><xref:System.Drawing.Drawing2D.PathGradientBrush> を使用して塗りつぶされた領域は、<xref:System.Drawing.Graphics.SmoothingMode%2A> プロパティに関係なく、同じ方法 (エイリアス) で表示されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3550">Areas filled using a <xref:System.Drawing.Drawing2D.PathGradientBrush> are rendered the same way (aliased) regardless of the <xref:System.Drawing.Graphics.SmoothingMode%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3551">次のメソッドは、<xref:System.Drawing.Pen.DashCap%2A>、<xref:System.Drawing.Pen.DashPattern%2A>、および <xref:System.Drawing.Graphics.SmoothingMode%2A> の各プロパティを設定した場合の効果を示しています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3551">The following method demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.</span></span> <span data-ttu-id="b889f-3552">この例の出力を次の図に示します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3552">The output of the example is shown in the following illustration.</span></span>  
  
 <span data-ttu-id="b889f-3553">![スムージングが適用されていない行。](~/add/media/gdi-smoothingmode.png "スムージングを適用した行と適用していない行")</span><span class="sxs-lookup"><span data-stu-id="b889f-3553">![Lines with and without smoothing applied.](~/add/media/gdi-smoothingmode.png "Lines with and without smoothing applied.")</span></span>  
  
 <span data-ttu-id="b889f-3554">この例は、Windows フォームと共に使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3554">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="b889f-3555">フォームにコードを貼り付けて、フォームの <xref:System.Windows.Forms.Control.Paint> イベントを処理するときに `ShowPensAndSmoothingMode` メソッドを呼び出し、`e` を <xref:System.Windows.Forms.PaintEventArgs>として渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3555">Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.PensExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PensExample/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.PensExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PensExample/CS/form1.cs#3)]
 [!code-vb[System.Drawing.PensExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PensExample/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextContrast">
      <MemberSignature Language="C#" Value="public int TextContrast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextContrast" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.TextContrast" />
      <MemberSignature Language="VB.NET" Value="Public Property TextContrast As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextContrast { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TextContrast : int with get, set" Usage="System.Drawing.Graphics.TextContrast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-3556">レンダリング テキストのガンマ補正値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3556">Gets or sets the gamma correction value for rendering text.</span></span></summary>
        <value><span data-ttu-id="b889f-3557">アンチエイリアス処理されたテキストおよび ClearType テキストを描画するために使用されるガンマ補正値。</span><span class="sxs-lookup"><span data-stu-id="b889f-3557">The gamma correction value used for rendering antialiased and ClearType text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3558">ガンマ補正値は 0 ~ 12 の範囲で指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3558">The gamma correction value must be between 0 and 12.</span></span> <span data-ttu-id="b889f-3559">既定値は 4 です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3559">The default value is 4.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3560">次のコード例は、<xref:System.Drawing.Graphics.TextRenderingHint%2A> と <xref:System.Drawing.Graphics.TextContrast%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3560">The following code example demonstrates the use of the <xref:System.Drawing.Graphics.TextRenderingHint%2A> and <xref:System.Drawing.Graphics.TextContrast%2A> properties.</span></span>  
  
 <span data-ttu-id="b889f-3561">この例は、Windows フォームと共に使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3561">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="b889f-3562">フォームにコードを貼り付けて、フォームの <xref:System.Windows.Forms.Control.Paint> イベントを処理するときに `ChangeTextRenderingHintAndTextContrast` メソッドを呼び出し、`e` を <xref:System.Windows.Forms.PaintEventArgs>として渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3562">Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.GraphicsProperties#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#5)]
 [!code-vb[System.Drawing.GraphicsProperties#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRenderingHint">
      <MemberSignature Language="C#" Value="public System.Drawing.Text.TextRenderingHint TextRenderingHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Text.TextRenderingHint TextRenderingHint" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.TextRenderingHint" />
      <MemberSignature Language="VB.NET" Value="Public Property TextRenderingHint As TextRenderingHint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Text::TextRenderingHint TextRenderingHint { System::Drawing::Text::TextRenderingHint get(); void set(System::Drawing::Text::TextRenderingHint value); };" />
      <MemberSignature Language="F#" Value="member this.TextRenderingHint : System.Drawing.Text.TextRenderingHint with get, set" Usage="System.Drawing.Graphics.TextRenderingHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Text.TextRenderingHint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-3563">この <see cref="T:System.Drawing.Graphics" /> に関連付けられているテキストのレンダリング モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3563">Gets or sets the rendering mode for text associated with this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-3564"><see cref="T:System.Drawing.Text.TextRenderingHint" /> 値のいずれか 1 つです。</span><span class="sxs-lookup"><span data-stu-id="b889f-3564">One of the <see cref="T:System.Drawing.Text.TextRenderingHint" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3565">テキスト表示ヒントは、テキストをアンチエイリアシングで描画するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3565">The text rendering hint specifies whether text renders with antialiasing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b889f-3566"><xref:System.Drawing.Graphics.TextRenderingHint%2A> プロパティが <xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit>に設定されている場合、<xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy> の <xref:System.Drawing.Graphics.CompositingMode%2A> プロパティ値は使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="b889f-3566">You should not use a <xref:System.Drawing.Graphics.CompositingMode%2A> property value of <xref:System.Drawing.Drawing2D.CompositingMode.SourceCopy> when the <xref:System.Drawing.Graphics.TextRenderingHint%2A> property is set to <xref:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit>.</span></span> <span data-ttu-id="b889f-3567">例外が発生したか、イメージが正しく表示されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3567">An exception could occur or the image may not render correctly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3568">次のコード例は、<xref:System.Drawing.Graphics.TextRenderingHint%2A> と <xref:System.Drawing.Graphics.TextContrast%2A> プロパティの使用方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3568">The following code example demonstrates the use of the <xref:System.Drawing.Graphics.TextRenderingHint%2A> and <xref:System.Drawing.Graphics.TextContrast%2A> properties.</span></span>  
  
 <span data-ttu-id="b889f-3569">この例は、Windows フォームと共に使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3569">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="b889f-3570">フォームにコードを貼り付けて、フォームの <xref:System.Windows.Forms.Control.Paint> イベントを処理するときに `ChangeTextRenderingHintAndTextContrast` メソッドを呼び出し、`e` を <xref:System.Windows.Forms.PaintEventArgs>として渡します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3570">Paste the code into a form and call the `ChangeTextRenderingHintAndTextContrast` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.GraphicsProperties#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.GraphicsProperties#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#5)]
 [!code-vb[System.Drawing.GraphicsProperties#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.Matrix Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.Matrix Transform" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::Matrix ^ Transform { System::Drawing::Drawing2D::Matrix ^ get(); void set(System::Drawing::Drawing2D::Matrix ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix with get, set" Usage="System.Drawing.Graphics.Transform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-3571">この <see cref="T:System.Drawing.Graphics" /> のジオメトリック ワールド変換のコピーを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3571">Gets or sets a copy of the geometric world transformation for this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-3572">この <see cref="T:System.Drawing.Drawing2D.Matrix" /> のジオメトリック ワールド変換を表す <see cref="T:System.Drawing.Graphics" /> のコピー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3572">A copy of the <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the geometric world transformation for this <see cref="T:System.Drawing.Graphics" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3573">GDI + では、ワールド、ページ、デバイスという3つの座標空間が使用されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3573">GDI+ uses three coordinate spaces: world, page, and device.</span></span> <span data-ttu-id="b889f-3574">ワールド座標は、特定のグラフィックワールドをモデル化するために使用される座標であり、.NET Framework のメソッドに渡す座標です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3574">World coordinates are the coordinates used to model a particular graphic world and are the coordinates you pass to methods in the .NET Framework.</span></span> <span data-ttu-id="b889f-3575">ページ座標は、フォームやコントロールなど、描画サーフェイスによって使用される座標系を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3575">Page coordinates refer to the coordinate system used by a drawing surface, such as a form or a control.</span></span> <span data-ttu-id="b889f-3576">デバイス座標は、画面やプリンターなど、描画される物理デバイスで使用される座標です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3576">Device coordinates are the coordinates used by the physical device being drawn on, such as a screen or a printer.</span></span> <span data-ttu-id="b889f-3577"><xref:System.Drawing.Graphics.Transform%2A> プロパティは、ワールド座標をページ座標にマップするワールド変換を表します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3577">The <xref:System.Drawing.Graphics.Transform%2A> property represents the world transformation, which maps world coordinates to page coordinates.</span></span>  
  
 <span data-ttu-id="b889f-3578">返されるマトリックスと <xref:System.Drawing.Graphics.Transform%2A> プロパティによって、幾何学的変換のコピーであるため、不要になったらマトリックスを破棄する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3578">Because the matrix returned and by the <xref:System.Drawing.Graphics.Transform%2A> property is a copy of the geometric transform, you should dispose of the matrix when you no longer need it.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/types-of-coordinate-systems.md"><span data-ttu-id="b889f-3579">座標系の種類</span><span class="sxs-lookup"><span data-stu-id="b889f-3579">Types of Coordinate Systems</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TransformPoints">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-3580">この <see cref="T:System.Drawing.Graphics" /> の現在のワールド変換とページ変換を使用して、点の配列をある座標空間から別の座標空間に変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3580">Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.Point[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Drawing2D.CoordinateSpace destSpace, valuetype System.Drawing.Drawing2D.CoordinateSpace srcSpace, valuetype System.Drawing.Point[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (destSpace As CoordinateSpace, srcSpace As CoordinateSpace, pts As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(System::Drawing::Drawing2D::CoordinateSpace destSpace, System::Drawing::Drawing2D::CoordinateSpace srcSpace, cli::array &lt;System::Drawing::Point&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.Drawing2D.CoordinateSpace * System.Drawing.Drawing2D.CoordinateSpace * System.Drawing.Point[] -&gt; unit" Usage="graphics.TransformPoints (destSpace, srcSpace, pts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destSpace" Type="System.Drawing.Drawing2D.CoordinateSpace" />
        <Parameter Name="srcSpace" Type="System.Drawing.Drawing2D.CoordinateSpace" />
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="destSpace"><span data-ttu-id="b889f-3581">変換先の座標空間を指定する <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3581">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the destination coordinate space.</span></span></param>
        <param name="srcSpace"><span data-ttu-id="b889f-3582">変換元の座標空間を指定する <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3582">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the source coordinate space.</span></span></param>
        <param name="pts"><span data-ttu-id="b889f-3583">変換する点を表す <see cref="T:System.Drawing.Point" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-3583">Array of <see cref="T:System.Drawing.Point" /> structures that represents the points to transformation.</span></span></param>
        <summary><span data-ttu-id="b889f-3584">この <see cref="T:System.Drawing.Graphics" /> の現在のワールド変換とページ変換を使用して、点の配列をある座標空間から別の座標空間に変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3584">Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3585">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3585">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3586">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3586">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3587">2つの点を作成し、それらの間に青い線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3587">Creates two points and draws a blue line between them.</span></span>  
  
-   <span data-ttu-id="b889f-3588">ワールド変換を、x 方向の量40と y 方向の30で平行移動するように設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3588">Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.</span></span>  
  
-   <span data-ttu-id="b889f-3589">ワールド座標 (<xref:System.Drawing.Drawing2D.CoordinateSpace.World>) からページ座標 (<xref:System.Drawing.Drawing2D.CoordinateSpace.Page>) への点を変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3589">Transforms the points from world coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace.World>) to page coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace.Page>).</span></span>  
  
-   <span data-ttu-id="b889f-3590">ワールド変換を id にリセットします。</span><span class="sxs-lookup"><span data-stu-id="b889f-3590">Resets the world transformation to the identity.</span></span>  
  
-   <span data-ttu-id="b889f-3591">変換された点の間に赤い線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3591">Draws a red line between the transformed points.</span></span>  
  
 <span data-ttu-id="b889f-3592">結果は青い線になり、その下の赤の線が変換されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3592">The result is a blue line and a translated red line below it.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#163](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#163)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#163](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#163)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#163](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#163)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformPoints">
      <MemberSignature Language="C#" Value="public void TransformPoints (System.Drawing.Drawing2D.CoordinateSpace destSpace, System.Drawing.Drawing2D.CoordinateSpace srcSpace, System.Drawing.PointF[] pts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransformPoints(valuetype System.Drawing.Drawing2D.CoordinateSpace destSpace, valuetype System.Drawing.Drawing2D.CoordinateSpace srcSpace, valuetype System.Drawing.PointF[] pts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransformPoints (destSpace As CoordinateSpace, srcSpace As CoordinateSpace, pts As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransformPoints(System::Drawing::Drawing2D::CoordinateSpace destSpace, System::Drawing::Drawing2D::CoordinateSpace srcSpace, cli::array &lt;System::Drawing::PointF&gt; ^ pts);" />
      <MemberSignature Language="F#" Value="member this.TransformPoints : System.Drawing.Drawing2D.CoordinateSpace * System.Drawing.Drawing2D.CoordinateSpace * System.Drawing.PointF[] -&gt; unit" Usage="graphics.TransformPoints (destSpace, srcSpace, pts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destSpace" Type="System.Drawing.Drawing2D.CoordinateSpace" />
        <Parameter Name="srcSpace" Type="System.Drawing.Drawing2D.CoordinateSpace" />
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="destSpace"><span data-ttu-id="b889f-3593">変換先の座標空間を指定する <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3593">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the destination coordinate space.</span></span></param>
        <param name="srcSpace"><span data-ttu-id="b889f-3594">変換元の座標空間を指定する <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3594">Member of the <see cref="T:System.Drawing.Drawing2D.CoordinateSpace" /> enumeration that specifies the source coordinate space.</span></span></param>
        <param name="pts"><span data-ttu-id="b889f-3595">変換する点を表す <see cref="T:System.Drawing.PointF" /> 構造体の配列。</span><span class="sxs-lookup"><span data-stu-id="b889f-3595">Array of <see cref="T:System.Drawing.PointF" /> structures that represent the points to transform.</span></span></param>
        <summary><span data-ttu-id="b889f-3596">この <see cref="T:System.Drawing.Graphics" /> の現在のワールド変換とページ変換を使用して、点の配列をある座標空間から別の座標空間に変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3596">Transforms an array of points from one coordinate space to another using the current world and page transformations of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3597">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3597">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3598">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3598">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3599">2つの点を作成し、それらの間に青い線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3599">Creates two points and draws a blue line between them.</span></span>  
  
-   <span data-ttu-id="b889f-3600">ワールド変換を、x 方向の量40と y 方向の30で平行移動するように設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3600">Sets the world transform to translate by amounts 40 in the x direction and 30 in the y direction.</span></span>  
  
-   <span data-ttu-id="b889f-3601">ワールド座標 (<xref:System.Drawing.Drawing2D.CoordinateSpace.World>) からページ座標 (<xref:System.Drawing.Drawing2D.CoordinateSpace.Page>) への点を変換します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3601">Transforms the points from world coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace.World>) to page coordinates (<xref:System.Drawing.Drawing2D.CoordinateSpace.Page>).</span></span>  
  
-   <span data-ttu-id="b889f-3602">ワールド変換を id にリセットし、変換された点の間に赤い線を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3602">Resets the world transformation to the identity and draws a red line between the transformed points.</span></span>  
  
 <span data-ttu-id="b889f-3603">結果は青い線になり、その下の赤の線が変換されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3603">The result is a blue line and a translated red line below it.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#164](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#164)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#164](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#164)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#164](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#164)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateClip">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-3604">指定した量だけ水平方向および垂直方向に、この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を平行移動します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3604">Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> by specified amounts in the horizontal and vertical directions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateClip">
      <MemberSignature Language="C#" Value="public void TranslateClip (int dx, int dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateClip(int32 dx, int32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TranslateClip(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateClip (dx As Integer, dy As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateClip(int dx, int dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateClip : int * int -&gt; unit" Usage="graphics.TranslateClip (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="b889f-3605">平行移動する x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3605">The x-coordinate of the translation.</span></span></param>
        <param name="dy"><span data-ttu-id="b889f-3606">平行移動する y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3606">The y-coordinate of the translation.</span></span></param>
        <summary><span data-ttu-id="b889f-3607">指定した量だけ水平方向および垂直方向に、この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を平行移動します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3607">Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> by specified amounts in the horizontal and vertical directions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3608">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3608">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3609">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3609">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3610">クリッピング領域の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3610">Creates a rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="b889f-3611">クリッピング領域を四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3611">Sets the clipping region to the rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-3612">クリッピング領域をベクター (50, 50) で平行移動します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3612">Translates the clipping region by a vector (50, 50).</span></span>  
  
-   <span data-ttu-id="b889f-3613">大きな四角形を塗りつぶします。黒いブラシを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3613">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="b889f-3614">結果は、変換、小、黒の四角形になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3614">The result is a translated, small, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#165](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#165)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#165](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#165)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#165](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#165)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateClip">
      <MemberSignature Language="C#" Value="public void TranslateClip (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateClip(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TranslateClip(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateClip (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateClip(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateClip : single * single -&gt; unit" Usage="graphics.TranslateClip (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="b889f-3615">平行移動する x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3615">The x-coordinate of the translation.</span></span></param>
        <param name="dy"><span data-ttu-id="b889f-3616">平行移動する y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3616">The y-coordinate of the translation.</span></span></param>
        <summary><span data-ttu-id="b889f-3617">指定した量だけ水平方向および垂直方向に、この <see cref="T:System.Drawing.Graphics" /> のクリッピング領域を平行移動します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3617">Translates the clipping region of this <see cref="T:System.Drawing.Graphics" /> by specified amounts in the horizontal and vertical directions.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b889f-3618">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3618">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3619">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3619">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3620">クリッピング領域の四角形を作成します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3620">Creates a rectangle for the clipping region.</span></span>  
  
-   <span data-ttu-id="b889f-3621">クリッピング領域を四角形に設定します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3621">Sets the clipping region to the rectangle.</span></span>  
  
-   <span data-ttu-id="b889f-3622">クリッピング領域をベクター (50.0 F, 50.0 F) で平行移動します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3622">Translates the clipping region by a vector (50.0F, 50.0F).</span></span>  
  
-   <span data-ttu-id="b889f-3623">大きな四角形を塗りつぶします。黒いブラシを使用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3623">Fills a large rectangle with a solid black brush.</span></span>  
  
 <span data-ttu-id="b889f-3624">結果は、変換、小、黒の四角形になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3624">The result is a translated, small, black rectangle.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#166](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#166)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#166](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#166)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#166](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#166)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TranslateTransform">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b889f-3625">この <see cref="T:System.Drawing.Graphics" /> の変換行列の前に指定の平行移動を付加することによって、座標系の原点を変更します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3625">Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single -&gt; unit" Usage="graphics.TranslateTransform (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="b889f-3626">平行移動する x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3626">The x-coordinate of the translation.</span></span></param>
        <param name="dy"><span data-ttu-id="b889f-3627">平行移動する y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3627">The y-coordinate of the translation.</span></span></param>
        <summary><span data-ttu-id="b889f-3628">この <see cref="T:System.Drawing.Graphics" /> の変換行列の前に指定の平行移動を付加することによって、座標系の原点を変更します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3628">Changes the origin of the coordinate system by prepending the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3629">原点は、通常、描画サーフェイスの左上隅にあります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3629">The origin is typically the upper-left-hand corner of the drawing surface.</span></span>  <span data-ttu-id="b889f-3630">変換操作は、変換行列を、変換部分が `dx` および `dy` パラメーターである行列で乗算することで構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3630">The translation operation consists of multiplying the transformation matrix by a matrix whose translation part is the `dx` and `dy` parameters.</span></span> <span data-ttu-id="b889f-3631">このメソッドは、変換行列を変換行列に付加することによって、平行移動を適用します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3631">This method applies the translation by prepending the translation matrix to the transformation matrix.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3632">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3632">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3633">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3633">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3634">Windows フォームのワールド変換行列を 30.0 F 度回転させます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3634">Rotates the world transformation matrix of the Windows Form by 30.0F degrees.</span></span>  
  
-   <span data-ttu-id="b889f-3635"><xref:System.Drawing.Graphics.TranslateTransform%2A>を呼び出して、その変換を変換行列に付加することによって、グラフィックスオブジェクトの原点を移動します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3635">Moves the origin of the graphics object by calling <xref:System.Drawing.Graphics.TranslateTransform%2A>, prepending the translation to the transformation matrix.</span></span>  
  
-   <span data-ttu-id="b889f-3636">青いペンを使用して、回転した平行楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3636">Draws a translated, rotated ellipse with a blue pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#167](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#167)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#167](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#167)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#167](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#167)]  
  
 <span data-ttu-id="b889f-3637">次の図は、前のコード例を実行した場合の出力を示しています。</span><span class="sxs-lookup"><span data-stu-id="b889f-3637">The following illustration shows the output of running the previous code example.</span></span>  
  
 <span data-ttu-id="b889f-3638">![変換および変換された楕円](~/add/media/ndp-tranlatetransform.png "移動および変換された楕円")</span><span class="sxs-lookup"><span data-stu-id="b889f-3638">![Translated and transformed ellipse](~/add/media/ndp-tranlatetransform.png "Translated and transformed ellipse")</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/coordinate-systems-and-transformations.md"><span data-ttu-id="b889f-3639">座標系と変換</span><span class="sxs-lookup"><span data-stu-id="b889f-3639">Coordinate Systems and Transformations</span></span></related>
        <related type="Article" href="~/docs/framework/winforms/advanced/using-transformations-in-managed-gdi.md"><span data-ttu-id="b889f-3640">マネージド GDI+ での変換の使用</span><span class="sxs-lookup"><span data-stu-id="b889f-3640">Using Transformations in Managed GDI+</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TranslateTransform">
      <MemberSignature Language="C#" Value="public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TranslateTransform(float32 dx, float32 dy, valuetype System.Drawing.Drawing2D.MatrixOrder order) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Graphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TranslateTransform (dx As Single, dy As Single, order As MatrixOrder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TranslateTransform(float dx, float dy, System::Drawing::Drawing2D::MatrixOrder order);" />
      <MemberSignature Language="F#" Value="member this.TranslateTransform : single * single * System.Drawing.Drawing2D.MatrixOrder -&gt; unit" Usage="graphics.TranslateTransform (dx, dy, order)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="order" Type="System.Drawing.Drawing2D.MatrixOrder" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="b889f-3641">平行移動する x 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3641">The x-coordinate of the translation.</span></span></param>
        <param name="dy"><span data-ttu-id="b889f-3642">平行移動する y 座標。</span><span class="sxs-lookup"><span data-stu-id="b889f-3642">The y-coordinate of the translation.</span></span></param>
        <param name="order"><span data-ttu-id="b889f-3643">平行移動が変換行列の前に付加されるか後に追加されるかを指定する <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> 列挙体のメンバー。</span><span class="sxs-lookup"><span data-stu-id="b889f-3643">Member of the <see cref="T:System.Drawing.Drawing2D.MatrixOrder" /> enumeration that specifies whether the translation is prepended or appended to the transformation matrix.</span></span></param>
        <summary><span data-ttu-id="b889f-3644">この <see cref="T:System.Drawing.Graphics" /> の変換行列に指定の平行移動を指定の順序で適用することによって、座標系の原点を変更します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3644">Changes the origin of the coordinate system by applying the specified translation to the transformation matrix of this <see cref="T:System.Drawing.Graphics" /> in the specified order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3645">変換操作は、変換行列を、変換部分が `dx` および `dy` パラメーターである行列で乗算することで構成されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3645">The translation operation consists of multiplying the transformation matrix by a matrix whose translation part is the `dx` and `dy` parameters.</span></span> <span data-ttu-id="b889f-3646">このメソッドは、`order` パラメーターに従って、平行移動行列によって <xref:System.Drawing.Graphics> の変換行列を先頭または末尾に追加します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3646">This method prepends or appends the transformation matrix of the <xref:System.Drawing.Graphics> by the translation matrix according to the `order` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b889f-3647">次のコード例は、Windows フォームで使用するように設計されています。また、<xref:System.Windows.Forms.Control.Paint> イベントハンドラーのパラメーターである <xref:System.Windows.Forms.PaintEventArgs>`e`が必要です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3647">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.</span></span> <span data-ttu-id="b889f-3648">このコードで次のアクションが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3648">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="b889f-3649">Windows フォームのワールド変換行列を 30.0 F 度回転させます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3649">Rotates the world transformation matrix of the Windows Form by 30.0F degrees.</span></span>  
  
-   <span data-ttu-id="b889f-3650"><xref:System.Drawing.Graphics.TranslateTransform%2A>を呼び出して、変換をワールド変換行列に追加することによって、グラフィックスオブジェクトの原点を移動します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3650">Moves the graphics object's origin by calling <xref:System.Drawing.Graphics.TranslateTransform%2A>, appending the translation to the world transformation matrix.</span></span>  
  
-   <span data-ttu-id="b889f-3651">青いペンを使用して、回転した平行移動楕円を描画します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3651">Draws a rotated, translated ellipse with a blue pen.</span></span>  
  
 [!code-cpp[System.Drawing.ClassicGraphicsExamples3#168](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CPP/form1.cpp#168)]
 [!code-csharp[System.Drawing.ClassicGraphicsExamples3#168](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/CS/form1.cs#168)]
 [!code-vb[System.Drawing.ClassicGraphicsExamples3#168](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicGraphicsExamples3/VB/form1.vb#168)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/coordinate-systems-and-transformations.md"><span data-ttu-id="b889f-3652">座標系と変換</span><span class="sxs-lookup"><span data-stu-id="b889f-3652">Coordinate Systems and Transformations</span></span></related>
        <related type="Article" href="~/docs/framework/winforms/advanced/using-transformations-in-managed-gdi.md"><span data-ttu-id="b889f-3653">マネージド GDI+ での変換の使用</span><span class="sxs-lookup"><span data-stu-id="b889f-3653">Using Transformations in Managed GDI+</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VisibleClipBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF VisibleClipBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.RectangleF VisibleClipBounds" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Graphics.VisibleClipBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleClipBounds As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::RectangleF VisibleClipBounds { System::Drawing::RectangleF get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleClipBounds : System.Drawing.RectangleF" Usage="System.Drawing.Graphics.VisibleClipBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b889f-3654">この <see cref="T:System.Drawing.Graphics" /> の表示クリッピング領域に外接する四角形を取得します。</span><span class="sxs-lookup"><span data-stu-id="b889f-3654">Gets the bounding rectangle of the visible clipping region of this <see cref="T:System.Drawing.Graphics" />.</span></span></summary>
        <value><span data-ttu-id="b889f-3655">この <see cref="T:System.Drawing.RectangleF" /> の表示クリッピング領域に外接する四角形を表す <see cref="T:System.Drawing.Graphics" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="b889f-3655">A <see cref="T:System.Drawing.RectangleF" /> structure that represents a bounding rectangle for the visible clipping region of this <see cref="T:System.Drawing.Graphics" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b889f-3656">結果として得られる四角形の単位は、<xref:System.Drawing.Graphics.PageUnit%2A> プロパティによって指定されます。</span><span class="sxs-lookup"><span data-stu-id="b889f-3656">The unit for resulting rectangle is designated by the <xref:System.Drawing.Graphics.PageUnit%2A> property.</span></span> <span data-ttu-id="b889f-3657">既定の単位はピクセルです。</span><span class="sxs-lookup"><span data-stu-id="b889f-3657">The default unit is pixels.</span></span> <span data-ttu-id="b889f-3658">通常、<xref:System.Drawing.Graphics> はコントロールに関連付けられており、四角形の原点は、そのコントロールのクライアント領域に対して相対的になります。</span><span class="sxs-lookup"><span data-stu-id="b889f-3658">A <xref:System.Drawing.Graphics> is typically associated with a control and the origin of the rectangle will be relative to the client area of that control.</span></span>  
  
 <span data-ttu-id="b889f-3659">表示されるクリッピング領域は、この <xref:System.Drawing.Graphics> のクリッピング領域とウィンドウのクリッピング領域の交差部分です。</span><span class="sxs-lookup"><span data-stu-id="b889f-3659">The visible clipping region is the intersection of the clipping region of this <xref:System.Drawing.Graphics> and the clipping region of the window.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
