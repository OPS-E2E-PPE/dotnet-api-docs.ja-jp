<Type Name="PointConverter" FullName="System.Drawing.PointConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="27d8dc1a358d490913c1de0fd745a167900674dd" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75134546" /></Metadata><TypeSignature Language="C#" Value="public class PointConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PointConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.PointConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class PointConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PointConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type PointConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e1aac-101"><see cref="T:System.Drawing.Point" /> オブジェクトのデータ型を別のデータ型に変換します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-101">Converts a <see cref="T:System.Drawing.Point" /> object from one data type to another.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1aac-102"><xref:System.Drawing.PointConverter> クラスは通常、<xref:System.Drawing.GraphicsUnit.Point>型のプロパティを持つコントロールに対してデザイン時のエクスペリエンスを作成するために使用されます。また、ポイントをデザイナーに表示するためにポイントを文字列に変換し、デザイナーで入力された文字列を <xref:System.Drawing.GraphicsUnit.Point> オブジェクトに変換するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="e1aac-102">The <xref:System.Drawing.PointConverter> class is typically used for creating a design-time experience for controls that have properties that are of type <xref:System.Drawing.GraphicsUnit.Point>, and is used to convert points to strings for display in a designer and to convert strings entered in a designer to a <xref:System.Drawing.GraphicsUnit.Point> object.</span></span> <span data-ttu-id="e1aac-103"><xref:System.ComponentModel.TypeDescriptor> オブジェクトを通じてこのクラスにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="e1aac-103">Access this class through the <xref:System.ComponentModel.TypeDescriptor> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1aac-104">次のコード例は、<xref:System.Drawing.PointConverter> と <xref:System.Drawing.Point.op_Subtraction%2A> 演算子を使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="e1aac-104">The following code example demonstrates how to use the <xref:System.Drawing.PointConverter> and the <xref:System.Drawing.Point.op_Subtraction%2A> operator.</span></span> <span data-ttu-id="e1aac-105">この例は、Windows フォームと共に使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="e1aac-105">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="e1aac-106">このコードをフォームに貼り付け、フォームの <xref:System.Windows.Forms.Control.Paint> イベントを処理するときに `ShowPointConverter` メソッドを呼び出して、`e` を <xref:System.Windows.Forms.PaintEventArgs> として渡します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-106">Paste this code into a form and call the `ShowPointConverter` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .</span></span>  
  
 [!code-cpp[System.Drawing.Converters#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Converters/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Converters#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Converters/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Converters#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Converters/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PointConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PointConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e1aac-107"><see cref="T:System.Drawing.PointConverter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-107">Initializes a new instance of the <see cref="T:System.Drawing.PointConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="pointConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e1aac-108">フォーマッタ コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="e1aac-108">A formatter context.</span></span> <span data-ttu-id="e1aac-109">このオブジェクトを使用して、このコンバーターを呼び出している環境についての追加情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="e1aac-109">This object can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="e1aac-110">この値は <see langword="null" /> になる場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="e1aac-110">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="e1aac-111">また、コンテキスト オブジェクト上のプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="e1aac-111">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="sourceType"><span data-ttu-id="e1aac-112">変換前の型。</span><span class="sxs-lookup"><span data-stu-id="e1aac-112">The type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="e1aac-113">このコンバーターが、任意の型のオブジェクトをコンバーターのネイティブな型に変換できるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-113">Determines if this converter can convert an object in the given source type to the native type of the converter.</span></span></summary>
        <returns><span data-ttu-id="e1aac-114">このオブジェクトが変換を実行できる場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1aac-114"><see langword="true" /> if this object can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="pointConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e1aac-115">書式指定コンテキストを提供する <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1aac-115">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="e1aac-116">変換後の型を表す <see cref="T:System.Type" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1aac-116">A <see cref="T:System.Type" /> object that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="e1aac-117">このコンバーターが、コンテキストを使用してオブジェクトを特定の目的の型に変換できるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-117">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span></span></summary>
        <returns><span data-ttu-id="e1aac-118">コンバーターが変換を実行できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1aac-118"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1aac-119">`context` パラメーターを使用すると、このコンバーターが呼び出されている環境に関する追加情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="e1aac-119">The `context` parameter can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="e1aac-120">この値は `null` になる場合があるため、必ず確認してください。</span><span class="sxs-lookup"><span data-stu-id="e1aac-120">This can be `null`, so you should always check.</span></span> <span data-ttu-id="e1aac-121">また、コンテキスト オブジェクトのプロパティも `null` を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="e1aac-121">Also, properties on the context object can also return `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="pointConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e1aac-122">フォーマッタ コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="e1aac-122">A formatter context.</span></span> <span data-ttu-id="e1aac-123">このオブジェクトを使用して、このコンバーターを呼び出している環境についての追加情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="e1aac-123">This object can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="e1aac-124">この値は <see langword="null" /> になる場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="e1aac-124">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="e1aac-125">また、コンテキスト オブジェクト上のプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="e1aac-125">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="e1aac-126">特定のカルチャと関連付けられた言語、暦、文化的な慣例などのカルチャ固有の情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1aac-126">An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture.</span></span> <span data-ttu-id="e1aac-127">これは RFC 1766 標準に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="e1aac-127">It is based on the RFC 1766 standard.</span></span></param>
        <param name="value"><span data-ttu-id="e1aac-128">変換対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1aac-128">The object to convert.</span></span></param>
        <summary><span data-ttu-id="e1aac-129">指定のオブジェクトを <see cref="T:System.Drawing.Point" /> オブジェクトに変換します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-129">Converts the specified object to a <see cref="T:System.Drawing.Point" /> object.</span></span></summary>
        <returns><span data-ttu-id="e1aac-130">変換後のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1aac-130">The converted object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e1aac-131">変換を完了できません。</span><span class="sxs-lookup"><span data-stu-id="e1aac-131">The conversion cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="pointConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e1aac-132">フォーマッタ コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="e1aac-132">A formatter context.</span></span> <span data-ttu-id="e1aac-133">このオブジェクトを使用して、このコンバーターを呼び出している環境についての追加情報を取得できます。</span><span class="sxs-lookup"><span data-stu-id="e1aac-133">This object can be used to get additional information about the environment this converter is being called from.</span></span> <span data-ttu-id="e1aac-134">この値は <see langword="null" /> になる場合があるため、常に確認してください。</span><span class="sxs-lookup"><span data-stu-id="e1aac-134">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="e1aac-135">また、コンテキスト オブジェクト上のプロパティも <see langword="null" /> を返す場合があります。</span><span class="sxs-lookup"><span data-stu-id="e1aac-135">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="e1aac-136">特定のカルチャと関連付けられた言語、暦、文化的な慣例などのカルチャ固有の情報を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1aac-136">An object that contains culture specific information, such as the language, calendar, and cultural conventions associated with a specific culture.</span></span> <span data-ttu-id="e1aac-137">これは RFC 1766 標準に準拠しています。</span><span class="sxs-lookup"><span data-stu-id="e1aac-137">It is based on the RFC 1766 standard.</span></span></param>
        <param name="value"><span data-ttu-id="e1aac-138">変換対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1aac-138">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="e1aac-139">オブジェクトの変換後の型。</span><span class="sxs-lookup"><span data-stu-id="e1aac-139">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="e1aac-140">指定したオブジェクトを指定した型に変換します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-140">Converts the specified object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="e1aac-141">変換後のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e1aac-141">The converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1aac-142">変換前後の型として最もよく使用されるのは文字列オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="e1aac-142">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="e1aac-143">オブジェクトが有効で、変換先の型が文字列の場合、既定の実装はオブジェクトの <xref:System.Object.ToString%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-143">The default implementation calls the object's <xref:System.Object.ToString%2A> method if the object is valid and if the destination type is string.</span></span> <span data-ttu-id="e1aac-144">このメソッドが変換先の型に変換できない場合、<xref:System.NotSupportedException> 例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="e1aac-144">If this method cannot convert to the destination type, this will throw a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e1aac-145">変換を完了できません。</span><span class="sxs-lookup"><span data-stu-id="e1aac-145">The conversion cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="pointConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e1aac-146">追加のコンテキストが提供されるときに使用する型記述子。</span><span class="sxs-lookup"><span data-stu-id="e1aac-146">A type descriptor through which additional context can be provided.</span></span></param>
        <param name="propertyValues"><span data-ttu-id="e1aac-147">新しいプロパティ値のディクショナリ。</span><span class="sxs-lookup"><span data-stu-id="e1aac-147">A dictionary of new property values.</span></span> <span data-ttu-id="e1aac-148">ディクショナリは、<see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> から返された各プロパティに 1 つずつある、名前と値の一連の組み合わせを格納しています。</span><span class="sxs-lookup"><span data-stu-id="e1aac-148">The dictionary contains a series of name-value pairs, one for each property returned from <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />.</span></span></param>
        <summary><span data-ttu-id="e1aac-149">オブジェクトのプロパティ値が設定された、この型のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-149">Creates an instance of this type given a set of property values for the object.</span></span></summary>
        <returns><span data-ttu-id="e1aac-150">新しく作成したオブジェクト。オブジェクトを作成できなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="e1aac-150">The newly created object, or <see langword="null" /> if the object could not be created.</span></span> <span data-ttu-id="e1aac-151">既定の実装では、<see langword="null" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="e1aac-151">The default implementation returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1aac-152"><xref:System.Drawing.PointConverter.CreateInstance%2A> は、変更できないものの、変更可能なプロパティを提供する必要があるオブジェクトに役立ちます。</span><span class="sxs-lookup"><span data-stu-id="e1aac-152"><xref:System.Drawing.PointConverter.CreateInstance%2A> is useful for objects that are immutable but still want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="pointConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e1aac-153">追加のコンテキストを指定できる場合に使用する <see cref="T:System.ComponentModel.TypeDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="e1aac-153">A <see cref="T:System.ComponentModel.TypeDescriptor" /> through which additional context can be provided.</span></span></param>
        <summary><span data-ttu-id="e1aac-154">このオブジェクトの値を変更するために、<see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> を呼び出して新しい値を作成する必要があるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-154">Determines if changing a value on this object should require a call to <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> to create a new value.</span></span></summary>
        <returns><span data-ttu-id="e1aac-155">このオブジェクトの 1 つ以上のプロパティを変更するときに、<see langword="true" /> メソッドを呼び出す必要がある場合は <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1aac-155"><see langword="true" /> if the <see cref="M:System.Drawing.PointConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> method should be called when a change is made to one or more properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="pointConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e1aac-156">追加のコンテキストが提供されるときに使用する型記述子。</span><span class="sxs-lookup"><span data-stu-id="e1aac-156">A type descriptor through which additional context can be provided.</span></span></param>
        <param name="value"><span data-ttu-id="e1aac-157">プロパティを取得する対象となるオブジェクトの値。</span><span class="sxs-lookup"><span data-stu-id="e1aac-157">The value of the object to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="e1aac-158">プロパティを説明する <see cref="T:System.Attribute" /> オブジェクトの配列。</span><span class="sxs-lookup"><span data-stu-id="e1aac-158">An array of <see cref="T:System.Attribute" /> objects that describe the properties.</span></span></param>
        <summary><span data-ttu-id="e1aac-159">この型のプロパティ セットを取得します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-159">Retrieves the set of properties for this type.</span></span> <span data-ttu-id="e1aac-160">既定では、型はプロパティを返しません。</span><span class="sxs-lookup"><span data-stu-id="e1aac-160">By default, a type does not return any properties.</span></span></summary>
        <returns><span data-ttu-id="e1aac-161">このデータ型で公開するプロパティ セット。</span><span class="sxs-lookup"><span data-stu-id="e1aac-161">The set of properties that are exposed for this data type.</span></span> <span data-ttu-id="e1aac-162">公開するプロパティがない場合、このメソッドは <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-162">If no properties are exposed, this method might return <see langword="null" />.</span></span> <span data-ttu-id="e1aac-163">既定の実装では、常に <see langword="null" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-163">The default implementation always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1aac-164">このメソッドの単純な実装では、正しいデータ型に対して <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> のみを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="e1aac-164">A simple implementation of this method can just call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.PointConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="pointConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e1aac-165">追加のコンテキストを指定できる場合に使用する <see cref="T:System.ComponentModel.TypeDescriptor" />。</span><span class="sxs-lookup"><span data-stu-id="e1aac-165">A <see cref="T:System.ComponentModel.TypeDescriptor" /> through which additional context can be provided.</span></span></param>
        <summary><span data-ttu-id="e1aac-166">このオブジェクトがプロパティをサポートするかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e1aac-166">Determines if this object supports properties.</span></span> <span data-ttu-id="e1aac-167">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e1aac-167">By default, this is <see langword="false" />.</span></span></summary>
        <returns><span data-ttu-id="e1aac-168">このオブジェクトのプロパティを見つけるために <see langword="true" /> を呼び出す必要がある場合は <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e1aac-168"><see langword="true" /> if <see cref="M:System.Drawing.PointConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
