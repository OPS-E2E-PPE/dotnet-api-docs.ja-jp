<Type Name="InterfaceQueuingAttribute" FullName="System.EnterpriseServices.InterfaceQueuingAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="125819da73b32f4e2f936d4fc1334331b89812df" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83946919" /></Metadata><TypeSignature Language="C#" Value="public sealed class InterfaceQueuingAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InterfaceQueuingAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.InterfaceQueuingAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InterfaceQueuingAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InterfaceQueuingAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InterfaceQueuingAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>マークされたインターフェイスのキュー サポートを有効にします。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインターフェイスでの呼び出しは、メッセージキューを使用してキューに登録されます。  
  
 インターフェイスをキューとしてマークするには、次の構文を使用して、この属性をインターフェイスに適用します: `[InterfaceQueuing]`。  
  
 キューに置かれたインターフェイスのメンバーメソッドは、`out` や `ref` パラメーターを持たないなど、キューに置かれたメソッド呼び出しの要件を満たす必要があります。  
  
 属性の使用方法の詳細については、「[属性](/dotnet/standard/attributes/)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、`InterfaceQueuingAttribute` 属性の使用方法を示しています。  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponent.cpp#2)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponent.cs#2)]  
  
 次のコード例では、`ApplicationQueuing` 属性を使用して、コンパイル時に COM + アプリケーションをキューに登録する方法を示し、`QueueListenerEnabled` を true に設定することによって COM + リスナーを有効にします。  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponent.cpp#1)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponent.cs#1)]  
  
 次のコード例では、`BindToMoniker` を使用して、キューに置かれたモニカーを実行し、レコーダーのインスタンスを取得し、記録されるメソッドを呼び出し、レコーダーオブジェクトのリリースを強制して、メッセージをキューに送信する方法を示します。  
  
 [!code-cpp[System.EnterpriseServices.QueuedComponents#0](~/samples/snippets/cpp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CPP/queuedcomponentclientclass.cpp#0)]
 [!code-csharp[System.EnterpriseServices.QueuedComponents#0](~/samples/snippets/csharp/VS_Snippets_Remoting/System.EnterpriseServices.QueuedComponents/CS/queuedcomponentclientclass.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> クラスの新しいインスタンスを初期化して、キュー サポートを有効にします。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InterfaceQueuingAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InterfaceQueuingAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> クラスの新しいインスタンスを初期化して、<see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" /> プロパティおよび <see cref="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" /> プロパティを既定値に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 次の表に、<xref:System.EnterpriseServices.InterfaceQueuingAttribute>のインスタンスのプロパティの初期値を示します。  
  
|プロパティ|値|  
|--------------|-----------|  
|有効|`true`|  
|インターフェイス|`null`|  
  
   
  
## Examples  
 次のコード例では、新しい <xref:System.EnterpriseServices.InterfaceQueuingAttribute> を作成します。  
  
 [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CPP/class1.cpp#1)]
 [!code-csharp[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CS/class1.cs#1)]
 [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InterfaceQueuingAttribute (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.InterfaceQueuingAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InterfaceQueuingAttribute(bool enabled);" />
      <MemberSignature Language="F#" Value="new System.EnterpriseServices.InterfaceQueuingAttribute : bool -&gt; System.EnterpriseServices.InterfaceQueuingAttribute" Usage="new System.EnterpriseServices.InterfaceQueuingAttribute enabled" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">キュー サポートを有効にする場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</param>
        <summary><see cref="T:System.EnterpriseServices.InterfaceQueuingAttribute" /> クラスの新しいインスタンスを初期化して、オプションでキュー サポートを無効にします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例では、新しい <xref:System.EnterpriseServices.InterfaceQueuingAttribute> を作成します。  
  
 [!code-cpp[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/cpp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CPP/class1.cpp#2)]
 [!code-csharp[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/CS/class1.cs#2)]
 [!code-vb[EnterpriseServicesInterfaceQueuingAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/EnterpriseServicesInterfaceQueuingAttribute/VB/class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.EnterpriseServices.InterfaceQueuingAttribute.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キュー サポートが有効かどうかを示す値を取得または設定します。</summary>
        <value>キュー サポートが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、COM + の `Queuing-Enabled` プロパティに対応しています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interface">
      <MemberSignature Language="C#" Value="public string Interface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Interface" />
      <MemberSignature Language="DocId" Value="P:System.EnterpriseServices.InterfaceQueuingAttribute.Interface" />
      <MemberSignature Language="VB.NET" Value="Public Property Interface As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Interface { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Interface : string with get, set" Usage="System.EnterpriseServices.InterfaceQueuingAttribute.Interface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キューを有効にするインターフェイスの名前を取得または設定します。</summary>
        <value>キューを有効にするインターフェイスの名前。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
