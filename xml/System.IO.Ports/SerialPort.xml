<Type Name="SerialPort" FullName="System.IO.Ports.SerialPort">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc9db31c33859e6ce0da54b715ff794c08c2bbe8" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83532201" /></Metadata><TypeSignature Language="C#" Value="public class SerialPort : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SerialPort extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.IO.Ports.SerialPort" />
  <TypeSignature Language="VB.NET" Value="Public Class SerialPort&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerialPort : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type SerialPort = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.Ports</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinmac-3.0">
      <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.MonitoringDescription("SerialPortDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>シリアル ポート リソースを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクラスを使用して、シリアルポートファイルリソースを制御します。 このクラスは、同期およびイベントドリブン i/o、ピン状態とブレーク状態へのアクセス、およびシリアルドライバーのプロパティへのアクセスを提供します。 また、このクラスの機能は、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティを介してアクセスできる内部 <xref:System.IO.Stream> オブジェクトにラップし、ストリームをラップまたは使用するクラスに渡すことができます。  
  
 <xref:System.IO.Ports.SerialPort> クラスは、<xref:System.Text.ASCIIEncoding>、<xref:System.Text.UTF8Encoding>、<xref:System.Text.UnicodeEncoding>、<xref:System.Text.UTF32Encoding>、および mscorlib.dll で定義されているエンコード (コードページが5万未満またはコードページが 54936) をサポートしています。  代替エンコーディングを使用できますが、<xref:System.IO.Ports.SerialPort.ReadByte%2A> または <xref:System.IO.Ports.SerialPort.Write%2A> メソッドを使用して、自分でエンコードを実行する必要があります。  
  
 現在のコンピューターの有効なポートを取得するには、<xref:System.IO.Ports.SerialPort.GetPortNames%2A> メソッドを使用します。  
  
 読み取り操作中に <xref:System.IO.Ports.SerialPort> オブジェクトがブロックされた場合は、スレッドを中止しないでください。 代わりに、ベースストリームを閉じるか、<xref:System.IO.Ports.SerialPort> オブジェクトの破棄を行います。  
  
   
  
## Examples  
 次のコード例は、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにする方法を示しています。 この例では、チャットする前に、ポート設定とユーザー名の入力を求められます。 この例のすべての機能を実現するには、両方のコンピューターがプログラムを実行している必要があります。  
  
 [!code-cpp[System.IO.Ports.SerialPort#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#10)]
 [!code-csharp[System.IO.Ports.SerialPort#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#10)]
 [!code-vb[System.IO.Ports.SerialPort#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、指定されていない場合、既定のプロパティ値を使用します。 たとえば、<xref:System.IO.Ports.SerialPort.DataBits%2A> プロパティの既定値は8、<xref:System.IO.Ports.SerialPort.Parity%2A> プロパティの既定値は `None` 列挙値、<xref:System.IO.Ports.SerialPort.StopBits%2A> プロパティの既定値は1、既定のポート名は COM1 です。  
  
   
  
## Examples  
 次のコード例は、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにする方法を示しています。 この例では、チャットする前に、ポート設定とユーザー名の入力を求められます。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模なコード例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : System.ComponentModel.IContainer -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container">コンテナーへのインターフェイス。</param>
        <summary>指定した <see cref="T:System.ComponentModel.IContainer" /> オブジェクトを使用して、<see cref="T:System.IO.Ports.SerialPort" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターは、指定されていない場合、既定のプロパティ値を使用します。 たとえば、<xref:System.IO.Ports.SerialPort.DataBits%2A> プロパティの既定値は8、<xref:System.IO.Ports.SerialPort.Parity%2A> プロパティの既定値は `None` 列挙値、<xref:System.IO.Ports.SerialPort.StopBits%2A> プロパティの既定値は1、既定のポート名は COM1 です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">指定したポートが見つからないか、ポートを開くことができませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort portName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="portName">使用するポート (COM1 など)。</param>
        <summary>指定したポート名を使用して、<see cref="T:System.IO.Ports.SerialPort" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ポート名を指定する場合は、このコンストラクターを使用して <xref:System.IO.Ports.SerialPort> クラスの新しいインスタンスを作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">指定したポートが見つからないか、ポートを開くことができませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String, baudRate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string * int -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort (portName, baudRate)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">使用するポート (COM1 など)。</param>
        <param name="baudRate">ボー レート。</param>
        <summary>指定したポート名とボー レートを使用して、<see cref="T:System.IO.Ports.SerialPort" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ポート名とボーレートを指定する場合は、このコンストラクターを使用して <xref:System.IO.Ports.SerialPort> クラスの新しいインスタンスを作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">指定したポートが見つからないか、ポートを開くことができませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String, baudRate As Integer, parity As Parity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string * int * System.IO.Ports.Parity -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort (portName, baudRate, parity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
      </Parameters>
      <Docs>
        <param name="portName">使用するポート (COM1 など)。</param>
        <param name="baudRate">ボー レート。</param>
        <param name="parity"><see cref="P:System.IO.Ports.SerialPort.Parity" /> 値のいずれか 1 つです。</param>
        <summary>指定したポート名、ボー レート、およびパリティ ビットを使用して、<see cref="T:System.IO.Ports.SerialPort" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ポート名、ボーレート、およびパリティビットを指定する場合は、このコンストラクターを使用して <xref:System.IO.Ports.SerialPort> クラスの新しいインスタンスを作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">指定したポートが見つからないか、ポートを開くことができませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String, baudRate As Integer, parity As Parity, dataBits As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string * int * System.IO.Ports.Parity * int -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort (portName, baudRate, parity, dataBits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="portName">使用するポート (COM1 など)。</param>
        <param name="baudRate">ボー レート。</param>
        <param name="parity"><see cref="P:System.IO.Ports.SerialPort.Parity" /> 値のいずれか 1 つです。</param>
        <param name="dataBits">データ ビット値。</param>
        <summary>指定したポート名、ボー レート、パリティ ビット、およびデータ ビットを使用して、<see cref="T:System.IO.Ports.SerialPort" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ポート名、ボーレート、パリティビット、およびデータビットを指定する場合は、このコンストラクターを使用して <xref:System.IO.Ports.SerialPort> クラスの新しいインスタンスを作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">指定したポートが見つからないか、ポートを開くことができませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string portName, int32 baudRate, valuetype System.IO.Ports.Parity parity, int32 dataBits, valuetype System.IO.Ports.StopBits stopBits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.#ctor(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (portName As String, baudRate As Integer, parity As Parity, dataBits As Integer, stopBits As StopBits)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SerialPort(System::String ^ portName, int baudRate, System::IO::Ports::Parity parity, int dataBits, System::IO::Ports::StopBits stopBits);" />
      <MemberSignature Language="F#" Value="new System.IO.Ports.SerialPort : string * int * System.IO.Ports.Parity * int * System.IO.Ports.StopBits -&gt; System.IO.Ports.SerialPort" Usage="new System.IO.Ports.SerialPort (portName, baudRate, parity, dataBits, stopBits)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="portName" Type="System.String" />
        <Parameter Name="baudRate" Type="System.Int32" />
        <Parameter Name="parity" Type="System.IO.Ports.Parity" />
        <Parameter Name="dataBits" Type="System.Int32" />
        <Parameter Name="stopBits" Type="System.IO.Ports.StopBits" />
      </Parameters>
      <Docs>
        <param name="portName">使用するポート (COM1 など)。</param>
        <param name="baudRate">ボー レート。</param>
        <param name="parity"><see cref="P:System.IO.Ports.SerialPort.Parity" /> 値のいずれか 1 つです。</param>
        <param name="dataBits">データ ビット値。</param>
        <param name="stopBits"><see cref="P:System.IO.Ports.SerialPort.StopBits" /> 値のいずれか 1 つです。</param>
        <summary>指定したポート名、ボー レート、パリティ ビット、データ ビット、およびストップ ビットを使用して、<see cref="T:System.IO.Ports.SerialPort" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ポート名、ボーレート、パリティビット、データビット、およびストップビットを指定する場合は、このコンストラクターを使用して <xref:System.IO.Ports.SerialPort> クラスの新しいインスタンスを作成します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">指定したポートが見つからないか、ポートを開くことができませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.IO.Ports.SerialPort.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> オブジェクトの基になる <see cref="T:System.IO.Stream" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.IO.Stream" /> オブジェクトです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、明示的な非同期 i/o 操作や、<xref:System.IO.StreamWriter>などの <xref:System.IO.Stream> ラッパークラスに <xref:System.IO.Ports.SerialPort> オブジェクトを渡すために使用します。  
  
 開いているシリアルポートの <xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティは、抽象 <xref:System.IO.Stream> クラスから派生したオブジェクトを返し、<xref:System.IO.Stream> クラスから継承されたプロトタイプ (<xref:System.IO.Stream.BeginRead%2A>、<xref:System.IO.Stream.BeginWrite%2A>、<xref:System.IO.Stream.Read%2A>、<xref:System.IO.Stream.ReadByte%2A>、<xref:System.IO.Stream.Write%2A>、<xref:System.IO.Stream.WriteByte%2A>) を使用して、読み取りおよび書き込みメソッドを実装します。 これらのメソッドは、ラップされたシリアルリソースを <xref:System.IO.Stream> ラッパークラスに渡すときに便利です。  
  
 ラップされたファイルハンドルの可能性により、<xref:System.IO.Stream.Length%2A> プロパティと <xref:System.IO.Stream.Position%2A> プロパティはサポートされておらず、<xref:System.IO.Stream.Seek%2A> および <xref:System.IO.Stream.SetLength%2A> メソッドはサポートされていません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ストリームは閉じられています。 これは、<see cref="M:System.IO.Ports.SerialPort.Open" /> メソッドが呼び出されていないか、<see cref="M:System.IO.Ports.SerialPort.Close" /> メソッドが呼び出されたことが原因で発生する場合があります。</exception>
        <exception cref="T:System.NotSupportedException">ストリームが .NET Compact Framework アプリケーションにあるときに、次のいずれかのメソッドが呼び出されました。 
 <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /><see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /><see cref="M:System.IO.Stream.EndRead(System.IAsyncResult)" /><see cref="M:System.IO.Stream.EndWrite(System.IAsyncResult)" />  
  
.NET Compact Framework では、基本ストリームとの非同期モデルはサポートされません。</exception>
      </Docs>
    </Member>
    <Member MemberName="BaudRate">
      <MemberSignature Language="C#" Value="public int BaudRate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BaudRate" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BaudRate" />
      <MemberSignature Language="VB.NET" Value="Public Property BaudRate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BaudRate { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BaudRate : int with get, set" Usage="System.IO.Ports.SerialPort.BaudRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(9600)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("BaudRate")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>シリアル ボー レートを取得または設定します。</summary>
        <value>ボー レート。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このボーレートは、ユーザーのシリアルドライバーでサポートされている必要があります。 既定値は9600ビット/秒 (bps) です。  
  
   
  
## Examples  
 次の例では、<xref:System.IO.Ports.SerialPort.BaudRate%2A> プロパティを `9600`に設定する方法を示します。  
  
 [!code-cpp[System.IO.Ports.SerialPort#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#20)]
 [!code-csharp[System.IO.Ports.SerialPort#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#20)]
 [!code-vb[System.IO.Ports.SerialPort#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#20)]  
  
 次の例では、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにします。 この例では、チャットする前に、ポート設定とユーザー名の入力を求められます。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模なコード例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したボー レートが 0 以下か、デバイスの許容最大ボー レートを超えています。</exception>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
      </Docs>
    </Member>
    <Member MemberName="BreakState">
      <MemberSignature Language="C#" Value="public bool BreakState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakState" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BreakState" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.BreakState : bool with get, set" Usage="System.IO.Ports.SerialPort.BreakState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ブレーク シグナルの状態を取得または設定します。</summary>
        <value>ポートがブレーク状態の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中断シグナル状態は、転送が中断され、その行がリリースされるまで中断状態 (すべて低、停止ビット) に配置されると発生します。 中断状態を入力するには、このプロパティを `true`に設定します。 ポートが既にブレーク状態にある場合、このプロパティを再度 `true` に設定しても、例外は発生しません。 <xref:System.IO.Ports.SerialPort.BreakState%2A> を `true`している間は、<xref:System.IO.Ports.SerialPort> オブジェクトに書き込むことはできません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.InvalidOperationException">ストリームは閉じられています。 これは、<see cref="M:System.IO.Ports.SerialPort.Open" /> メソッドが呼び出されていないか、<see cref="M:System.IO.Ports.SerialPort.Close" /> メソッドが呼び出されたことが原因で発生する場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="BytesToRead">
      <MemberSignature Language="C#" Value="public int BytesToRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesToRead" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BytesToRead" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesToRead As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesToRead { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesToRead : int" Usage="System.IO.Ports.SerialPort.BytesToRead" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>受信バッファー内のデータのバイト数を取得します。</summary>
        <value>受信バッファー内のデータのバイト数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 受信バッファーには、シリアルドライバーの受信バッファーだけでなく、<xref:System.IO.Ports.SerialPort> オブジェクト自体の内部バッファリングも含まれます。  
  
 <xref:System.IO.Ports.SerialPort.BytesToRead%2A> プロパティは、<xref:System.IO.Ports.SerialPort> バッファーと Windows によって作成されたバッファーの両方を表すため、Windows で作成されたバッファーのみを表す <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> プロパティよりも大きい値を返すことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">ポートは開いていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="BytesToWrite">
      <MemberSignature Language="C#" Value="public int BytesToWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesToWrite" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.BytesToWrite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BytesToWrite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BytesToWrite { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BytesToWrite : int" Usage="System.IO.Ports.SerialPort.BytesToWrite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>送信バッファー内のデータのバイト数を取得します。</summary>
        <value>送信バッファー内のデータのバイト数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 送信バッファーには、シリアルドライバーの送信バッファーだけでなく、内部バッファリングが <xref:System.IO.Ports.SerialPort> オブジェクト自体に含まれています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。</exception>
        <exception cref="T:System.InvalidOperationException">ストリームは閉じられています。 これは、<see cref="M:System.IO.Ports.SerialPort.Open" /> メソッドが呼び出されていないか、<see cref="M:System.IO.Ports.SerialPort.Close" /> メソッドが呼び出されたことが原因で発生する場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="CDHolding">
      <MemberSignature Language="C#" Value="public bool CDHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CDHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.CDHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CDHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CDHolding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CDHolding : bool" Usage="System.IO.Ports.SerialPort.CDHolding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ポートのキャリア検出ラインの状態を取得します。</summary>
        <value>キャリアが検出された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、ポートのキャリア検出ラインの状態を監視するために使用できます。 通常、通信事業者がいない場合は、受信側が停止していて、運送業者が切断されていることを示します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.InvalidOperationException">ストリームは閉じられています。 これは、<see cref="M:System.IO.Ports.SerialPort.Open" /> メソッドが呼び出されていないか、<see cref="M:System.IO.Ports.SerialPort.Close" /> メソッドが呼び出されたことが原因で発生する場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="serialPort.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ポート接続を閉じ、<see cref="P:System.IO.Ports.SerialPort.IsOpen" /> プロパティを <see langword="false" /> に設定し、内部 <see cref="T:System.IO.Stream" /> オブジェクトを破棄します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを呼び出すと、<xref:System.IO.Ports.SerialPort> オブジェクトが閉じられ、受信バッファーと送信バッファーの両方がクリアされます。 このメソッドは <xref:System.ComponentModel.Component.Dispose?displayProperty=nameWithType> メソッドを呼び出します。このメソッドは、`disposing` パラメーターを `true`に設定して protected <xref:System.IO.Ports.SerialPort.Dispose%28System.Boolean%29?displayProperty=nameWithType> メソッドを呼び出します。  
  
 すべてのアプリケーションのベストプラクティスは、ポートが即座に閉じられない可能性があるため、<xref:System.IO.Ports.SerialPort.Close%2A> メソッドを呼び出した後、<xref:System.IO.Ports.SerialPort.Open%2A> メソッドを呼び出した後にしばらく待つことです。  
  
   
  
## Examples  
 次のコード例は、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにする方法を示しています。 この例では、チャットする前に、ポート設定とユーザー名の入力を求められます。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模なコード例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
      </Docs>
    </Member>
    <Member MemberName="CtsHolding">
      <MemberSignature Language="C#" Value="public bool CtsHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CtsHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.CtsHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CtsHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CtsHolding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CtsHolding : bool" Usage="System.IO.Ports.SerialPort.CtsHolding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Clear To Send ラインの状態を取得します。</summary>
        <value>Clear To Send ラインが検出された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 送信 (RTS/CTS) ハードウェアハンドシェイクを送信/クリアする要求では、[送信] (CTS) 行が使用されます。 CTS 行は、データが送信される前にポートによって照会されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.InvalidOperationException">ストリームは閉じられています。 これは、<see cref="M:System.IO.Ports.SerialPort.Open" /> メソッドが呼び出されていないか、<see cref="M:System.IO.Ports.SerialPort.Close" /> メソッドが呼び出されたことが原因で発生する場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="DataBits">
      <MemberSignature Language="C#" Value="public int DataBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataBits" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DataBits" />
      <MemberSignature Language="VB.NET" Value="Public Property DataBits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataBits { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DataBits : int with get, set" Usage="System.IO.Ports.SerialPort.DataBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(8)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("DataBits")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バイトごとのデータ ビットの標準の長さを取得または設定します。</summary>
        <value>データ ビット長。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの値の範囲は 5 ~ 8 です。 既定値は 8 です。  
  
   
  
## Examples  
 次のコード例は、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにする方法を示しています。 この例では、チャットする前に、ポート設定とユーザー名の入力を求められます。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模なコード例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">データ ビット値が 5 未満か、8 を超えています。</exception>
      </Docs>
    </Member>
    <Member MemberName="DataReceived">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialDataReceivedEventHandler DataReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialDataReceivedEventHandler DataReceived" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.DataReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataReceived As SerialDataReceivedEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialDataReceivedEventHandler ^ DataReceived;" />
      <MemberSignature Language="F#" Value="member this.DataReceived : System.IO.Ports.SerialDataReceivedEventHandler " Usage="member this.DataReceived : System.IO.Ports.SerialDataReceivedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event DataReceived As SerialDataReceivedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("SerialDataReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialDataReceivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> オブジェクトによって表されるポートを介してデータが受信されたことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データイベントは、<xref:System.IO.Ports.SerialData> 列挙のいずれかの項目によって発生することがあります。 オペレーティングシステムは、このイベントを発生させるかどうかを判断するため、すべてのパリティエラーが報告されるとは限りません。  
  
 <xref:System.IO.Ports.SerialPort.DataReceived> イベントは、内部入力バッファーのバイト数と <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> プロパティの値に関係なく、Eof 文字が受信された場合にも発生します。  
  
 <xref:System.IO.Ports.SerialPort.PinChanged>、<xref:System.IO.Ports.SerialPort.DataReceived>、および <xref:System.IO.Ports.SerialPort.ErrorReceived> イベントは、順不同で呼び出されることがあります。また、基になるストリームがエラーを報告してから、イベントハンドラーが実行されるまでにわずかな遅延が発生する可能性があります。 一度に実行できるイベントハンドラーは1つだけです。  
  
 <xref:System.IO.Ports.SerialPort.DataReceived> イベントは、受信したすべてのバイトに対して発生するとは限りません。 <xref:System.IO.Ports.SerialPort.BytesToRead%2A> プロパティを使用して、バッファー内で読み取られるデータの量を決定します。  
  
 <xref:System.IO.Ports.SerialPort> オブジェクトからデータを受信すると、セカンダリスレッドで <xref:System.IO.Ports.SerialPort.DataReceived> イベントが発生します。 このイベントはメインスレッドではなくセカンダリスレッドで発生するため、メインスレッド (UI 要素など) の一部の要素を変更しようとすると、スレッド例外が発生する可能性があります。 メイン <xref:System.Windows.Forms.Form> または <xref:System.Windows.Forms.Control>内の要素を変更する必要がある場合は、<xref:System.Windows.Forms.Control.Invoke%2A>を使用して変更要求を戻します。これにより、適切なスレッドで作業が行われます。  
  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
   
  
## Examples  
 この例では、<xref:System.IO.Ports.SerialDataReceivedEventHandler> を <xref:System.IO.Ports.SerialPort.DataReceived> に追加して、COM1 ポートで受信した使用可能なすべてのデータを読み取ります。 このコードをテストするには、データを送信するハードウェアを COM1 に接続する必要があることに注意してください。  
  
 [!code-cpp[System.IO.Ports.SerialPort#06](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#06)]
 [!code-csharp[System.IO.Ports.SerialPort#06](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#06)]
 [!code-vb[System.IO.Ports.SerialPort#06](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#06)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscardInBuffer">
      <MemberSignature Language="C#" Value="public void DiscardInBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscardInBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.DiscardInBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardInBuffer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardInBuffer();" />
      <MemberSignature Language="F#" Value="member this.DiscardInBuffer : unit -&gt; unit" Usage="serialPort.DiscardInBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>シリアル ドライバーの受信バッファーからデータを破棄します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、次の Visual Basic コードに相当します。 `MSComm1.InBufferCount = 0`。 受信バッファーはクリアされますが、送信バッファーには影響しません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.InvalidOperationException">ストリームは閉じられています。 これは、<see cref="M:System.IO.Ports.SerialPort.Open" /> メソッドが呼び出されていないか、<see cref="M:System.IO.Ports.SerialPort.Close" /> メソッドが呼び出されたことが原因で発生する場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="DiscardNull">
      <MemberSignature Language="C#" Value="public bool DiscardNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DiscardNull" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DiscardNull" />
      <MemberSignature Language="VB.NET" Value="Public Property DiscardNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DiscardNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DiscardNull : bool with get, set" Usage="System.IO.Ports.SerialPort.DiscardNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("DiscardNull")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ポートと受信バッファー間での送信時に、null バイトを無視するかどうかを示す値を取得または設定します。</summary>
        <value>null バイトを無視する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 通常、この値は `false`に設定する必要があります。バイナリ転送の場合は特にそうです。  このプロパティを `true` に設定すると、UTF32 および UTF16 でエンコードされたバイトに対して予期しない結果が発生する可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.InvalidOperationException">ストリームは閉じられています。 これは、<see cref="M:System.IO.Ports.SerialPort.Open" /> メソッドが呼び出されていないか、<see cref="M:System.IO.Ports.SerialPort.Close" /> メソッドが呼び出されたことが原因で発生する場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="DiscardOutBuffer">
      <MemberSignature Language="C#" Value="public void DiscardOutBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DiscardOutBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.DiscardOutBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Sub DiscardOutBuffer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DiscardOutBuffer();" />
      <MemberSignature Language="F#" Value="member this.DiscardOutBuffer : unit -&gt; unit" Usage="serialPort.DiscardOutBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>シリアル ドライバーの送信バッファーからデータを破棄します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、次の Visual Basic コードに相当します。 `MSComm1.OutBufferCount = 0`。 送信バッファーはクリアされますが、受信バッファーには影響しません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.InvalidOperationException">ストリームは閉じられています。 これは、<see cref="M:System.IO.Ports.SerialPort.Open" /> メソッドが呼び出されていないか、<see cref="M:System.IO.Ports.SerialPort.Close" /> メソッドが呼び出されたことが原因で発生する場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="serialPort.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、パブリックな <xref:System.ComponentModel.Component.Dispose%2A> メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。 <xref:System.ComponentModel.Component.Dispose%2A> は、`disposing` パラメーターを `true`に設定して、protected <xref:System.IO.Ports.SerialPort.Dispose%2A> メソッドを呼び出します。 <xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して <xref:System.IO.Ports.SerialPort.Dispose%2A> を呼び出します。  
  
 `disposing` パラメーターが `true` の場合、このメソッドは、この <xref:System.IO.Ports.SerialPort> が参照しているすべてのマネージド オブジェクトによって保持されているリソースをすべて解放します。 このメソッドは、参照される各オブジェクトの <xref:System.ComponentModel.Component.Dispose%2A> メソッドを呼び出します。  
  
 このメソッドは、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティのストリームオブジェクトをフラッシュし、閉じます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.ComponentModel.Component.Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。 <see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" /> をオーバーライドする場合は、以前に <see cref="M:System.ComponentModel.Component.Dispose" /> を呼び出したときに破棄されたオブジェクトを参照しないように注意する必要があります。 <see cref="M:System.IO.Ports.SerialPort.Dispose(System.Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。  
  
<see cref="M:System.ComponentModel.Component.Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」を参照してください。</para></block>
      </Docs>
    </Member>
    <Member MemberName="DsrHolding">
      <MemberSignature Language="C#" Value="public bool DsrHolding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DsrHolding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DsrHolding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DsrHolding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DsrHolding { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DsrHolding : bool" Usage="System.IO.Ports.SerialPort.DsrHolding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>DSR (Data Set Ready) シグナルの状態を取得します。</summary>
        <value>Data Set Ready シグナルがポートに送信された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、Data Set Ready/Data Terminal Ready (DSR/DTR) ハンドシェイクで使用されます。 Data Set Ready (DSR) 信号は、通常、データ転送またはデータ受信の準備ができていることを示すために、モデムによってポートに送信されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.InvalidOperationException">ストリームは閉じられています。 これは、<see cref="M:System.IO.Ports.SerialPort.Open" /> メソッドが呼び出されていないか、<see cref="M:System.IO.Ports.SerialPort.Close" /> メソッドが呼び出されたことが原因で発生する場合があります。</exception>
      </Docs>
    </Member>
    <Member MemberName="DtrEnable">
      <MemberSignature Language="C#" Value="public bool DtrEnable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DtrEnable" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.DtrEnable" />
      <MemberSignature Language="VB.NET" Value="Public Property DtrEnable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DtrEnable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DtrEnable : bool with get, set" Usage="System.IO.Ports.SerialPort.DtrEnable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("DtrEnable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>シリアル通信中に、DTR (Data Terminal Ready) シグナルを有効にする値を取得または設定します。</summary>
        <value>DTR を有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般に、XON/XOFF ソフトウェアハンドシェイク中にデータターミナル対応 (DTR) が有効になり、送信/クリアの要求 (RTS/CTS) ハードウェアハンドシェイク、およびモデム通信が要求されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="System.IO.Ports.SerialPort.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("Encoding")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テキストの伝送前変換と伝送後変換のバイト エンコーディングを取得または設定します。</summary>
        <value><see cref="T:System.Text.Encoding" /> オブジェクトです。 既定では、 <see cref="T:System.Text.ASCIIEncoding" />です。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.IO.Ports.SerialPort.Encoding" /> プロパティが <see langword="null" /> に設定されました。</exception>
        <exception cref="T:System.ArgumentException"><see cref="P:System.IO.Ports.SerialPort.Encoding" /> プロパティに、<see cref="T:System.Text.ASCIIEncoding" />、<see cref="T:System.Text.UTF8Encoding" />、<see cref="T:System.Text.UTF32Encoding" />、<see cref="T:System.Text.UnicodeEncoding" />、Windows の 1 バイト エンコーディングのいずれか、Windows の 2 バイト エンコーディングのいずれか以外のエンコーディングが設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="ErrorReceived">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialErrorReceivedEventHandler ErrorReceived" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.ErrorReceived" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ErrorReceived As SerialErrorReceivedEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialErrorReceivedEventHandler ^ ErrorReceived;" />
      <MemberSignature Language="F#" Value="member this.ErrorReceived : System.IO.Ports.SerialErrorReceivedEventHandler " Usage="member this.ErrorReceived : System.IO.Ports.SerialErrorReceivedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event ErrorReceived As SerialErrorReceivedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("SerialErrorReceived")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialErrorReceivedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> オブジェクトによって表されるポートでエラーが発生したことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 エラーイベントは、<xref:System.IO.Ports.SerialError> 列挙のいずれかの項目によって発生することがあります。 オペレーティングシステムは、このイベントを発生させるかどうかを判断するため、すべてのパリティエラーが報告されるとは限りません。  
  
 <xref:System.IO.Ports.SerialPort.PinChanged>、<xref:System.IO.Ports.SerialPort.DataReceived>、および <xref:System.IO.Ports.SerialPort.ErrorReceived> イベントは、順不同で呼び出されることがあります。また、基になるストリームがエラーを報告してから、イベントハンドラーが実行されたときにコードが実行されるまでにわずかな遅延が発生する可能性があります。 一度に実行できるイベントハンドラーは1つだけです。  
  
 ストリームの末尾のバイトでパリティエラーが発生すると、追加のバイトが値126の入力バッファーに追加されます。  
  
 <xref:System.IO.Ports.SerialPort> オブジェクトからエラーを受信すると、セカンダリスレッドで <xref:System.IO.Ports.SerialPort.ErrorReceived> イベントが発生します。 このイベントはメインスレッドではなくセカンダリスレッドで発生するため、メインスレッド (UI 要素など) の一部の要素を変更しようとすると、スレッド例外が発生する可能性があります。 メイン <xref:System.Windows.Forms.Form> または <xref:System.Windows.Forms.Control>内の要素を変更する必要がある場合は、<xref:System.Windows.Forms.Control.Invoke%2A>を使用して変更要求を戻します。これにより、適切なスレッドで作業が行われます。  
  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPortNames">
      <MemberSignature Language="C#" Value="public static string[] GetPortNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetPortNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.GetPortNames" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPortNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetPortNames();" />
      <MemberSignature Language="F#" Value="static member GetPortNames : unit -&gt; string[]" Usage="System.IO.Ports.SerialPort.GetPortNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在のコンピューターのシリアル ポート名の配列を取得します。</summary>
        <returns>現在のコンピューターのシリアル ポート名の配列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> から返されたポート名の順序が指定されていません。  
  
 <xref:System.IO.Ports.SerialPort.GetPortNames%2A> メソッドを使用して、現在のコンピューターに対して、有効なシリアルポート名の一覧を照会します。 たとえば、この方法を使用して、COM1 と COM2 が現在のコンピューターの有効なシリアルポートであるかどうかを判断できます。  
  
 ポート名はシステムレジストリから取得されます (たとえば、HKEY_LOCAL_MACHINE \HARDWARE\DEVICEMAP\SERIALCOMM)。 レジストリに古いデータや正しくないデータが含まれている場合、<xref:System.IO.Ports.SerialPort.GetPortNames%2A> メソッドは正しくないデータを返します。  
  
   
  
## Examples  
 次のコード例では、<xref:System.IO.Ports.SerialPort.GetPortNames%2A> メソッドを使用して、シリアルポート名をコンソールに表示します。  
  
 [!code-cpp[IO.Ports.GetPortNames#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.Ports.GetPortNames/cpp/example.cpp#1)]
 [!code-csharp[IO.Ports.GetPortNames#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.Ports.GetPortNames/CS/example.cs#1)]
 [!code-vb[IO.Ports.GetPortNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.Ports.GetPortNames/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Win32Exception">シリアル ポート名を照会できませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="Handshake">
      <MemberSignature Language="C#" Value="public System.IO.Ports.Handshake Handshake { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.Handshake Handshake" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Handshake" />
      <MemberSignature Language="VB.NET" Value="Public Property Handshake As Handshake" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::Handshake Handshake { System::IO::Ports::Handshake get(); void set(System::IO::Ports::Handshake value); };" />
      <MemberSignature Language="F#" Value="member this.Handshake : System.IO.Ports.Handshake with get, set" Usage="System.IO.Ports.SerialPort.Handshake" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("Handshake")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Handshake</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.IO.Ports.Handshake" /> からの値を使用したデータのシリアル ポート伝送のハンドシェイク プロトコルを取得または設定します。</summary>
        <value><see cref="T:System.IO.Ports.Handshake" /> 値のいずれか 1 つです。 既定では、 <see langword="None" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ハンドシェイクを使用する場合、<xref:System.IO.Ports.SerialPort> オブジェクトに接続されているデバイスには、バッファー内に少なくとも (<xref:System.IO.Ports.SerialPort.ReadBufferSize%2A>1024) バイトがあるときにデータの送信を停止するように指示されます。 バッファー内のバイト数が1024以下の場合、デバイスはデータの送信を再開するように指示されます。 デバイスが1024バイトを超えるブロックでデータを送信している場合、バッファーがオーバーフローする可能性があります。  
  
 <xref:System.IO.Ports.SerialPort.Handshake%2A> プロパティが <xref:System.IO.Ports.Handshake.RequestToSendXOnXOff> に設定されていて、<xref:System.IO.Ports.SerialPort.CtsHolding%2A> が `false`に設定されている場合、XOff 文字は送信されません。 <xref:System.IO.Ports.SerialPort.CtsHolding%2A> が `true`に設定されている場合は、XOff 文字が送信される前に、より多くのデータを送信する必要があります。  
  
   
  
## Examples  
 次のコード例は、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにする方法を示しています。 この例では、チャットする前に、ポート設定とユーザー名の入力を求められます。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模なコード例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">渡された値は、<see cref="T:System.IO.Ports.Handshake" /> 列挙体の有効値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="InfiniteTimeout">
      <MemberSignature Language="C#" Value="public const int InfiniteTimeout = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 InfiniteTimeout = (-1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.Ports.SerialPort.InfiniteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Const InfiniteTimeout As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int InfiniteTimeout = -1;" />
      <MemberSignature Language="F#" Value="val mutable InfiniteTimeout : int" Usage="System.IO.Ports.SerialPort.InfiniteTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>タイムアウトが発生しないことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この値は、<xref:System.IO.Ports.SerialPort.ReadTimeout%2A> プロパティと <xref:System.IO.Ports.SerialPort.WriteTimeout%2A> プロパティと共に使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool" Usage="System.IO.Ports.SerialPort.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> オブジェクトの開いている状態または閉じた状態を示す値を取得します。</summary>
        <value>シリアル ポートが開いている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.IsOpen%2A> プロパティは、ポートがコンピューター上のアプリケーションによって開かれているかどうかではなく、呼び出し元が使用するためにポートが開いているかどうかを追跡します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">渡される <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> 値は <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">渡される <see cref="P:System.IO.Ports.SerialPort.IsOpen" /> 値は、空の文字列 ("") です。</exception>
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.IO.Ports.SerialPort.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("\n")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("NewLine")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.IO.Ports.SerialPort.ReadLine" /> メソッドと <see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /> メソッドの呼び出しの末尾を解釈する際に使用する値を取得または設定します。</summary>
        <value>行の末尾を表す値。 既定値はラインフィード ("\n" の場合C#は、Visual Basic の場合は <see cref="F:Microsoft.VisualBasic.Constants.vbLf" />) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、<xref:System.IO.Ports.SerialPort.ReadLine%2A> および <xref:System.IO.Ports.SerialPort.WriteLine%2A> メソッドの行の末尾を定義する値 (byte) を決定します。 既定では、行の末尾の値はラインフィード文字 (の`\n` でC#、<xref:Microsoft.VisualBasic.Constants.vbLf?displayProperty=nameWithType> Visual Basic) です。 使用している特定のシリアルデバイスで同じ目的で異なる値が使用されている場合は、これを別の値に変更します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">プロパティ値が空です。</exception>
        <exception cref="T:System.ArgumentNullException">プロパティ値が <see langword="null" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="member this.Open : unit -&gt; unit" Usage="serialPort.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>新しいシリアル ポート接続を開きます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort> オブジェクトごとに存在できる開いている接続は1つだけです。  
  
 すべてのアプリケーションのベストプラクティスは、ポートが即座に閉じられない可能性があるため、<xref:System.IO.Ports.SerialPort.Close%2A> メソッドを呼び出した後、<xref:System.IO.Ports.SerialPort.Open%2A> メソッドを呼び出した後にしばらく待つことです。  
  
   
  
## Examples  
 次のコード例は、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにする方法を示しています。 この例では、チャットする前に、ポート設定とユーザー名の入力を求められます。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模なコード例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException">ポートへのアクセスが拒否されています。  
  
または 
現在のプロセス、またはシステム上の別のプロセスが、<see cref="T:System.IO.Ports.SerialPort" /> インスタンスまたはアンマネージ コードで、指定した COM ポートを既に開いています。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">このインスタンスの 1 つ以上のプロパティが無効です。 たとえば、<see cref="P:System.IO.Ports.SerialPort.Parity" />、<see cref="P:System.IO.Ports.SerialPort.DataBits" />、または <see cref="P:System.IO.Ports.SerialPort.Handshake" /> の各プロパティが有効値ではない、<see cref="P:System.IO.Ports.SerialPort.BaudRate" /> が 0 以下の値である、<see cref="P:System.IO.Ports.SerialPort.ReadTimeout" /> プロパティまたは <see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /> プロパティが 0 未満であり、<see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" /> ではない、などです。</exception>
        <exception cref="T:System.ArgumentException">ポート名が "COM" で始まっていません。  
  
または
  
 ポートのこのファイルの種類はサポートされていません。</exception>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.IO.Ports.SerialPort" /> の現在のインスタンス上の指定されたポートが既に開いています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Parity">
      <MemberSignature Language="C#" Value="public System.IO.Ports.Parity Parity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.Parity Parity" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.Parity" />
      <MemberSignature Language="VB.NET" Value="Public Property Parity As Parity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::Parity Parity { System::IO::Ports::Parity get(); void set(System::IO::Ports::Parity value); };" />
      <MemberSignature Language="F#" Value="member this.Parity : System.IO.Ports.Parity with get, set" Usage="System.IO.Ports.SerialPort.Parity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("Parity")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.Parity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パリティ チェック プロトコルを取得または設定します。</summary>
        <value>パリティ チェック プロトコルを表す列挙値のいずれか。 既定では、 <see cref="F:System.IO.Ports.Parity.None" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パリティとは、エラーを発生させずに転送されるビットの各グループについて、1つの値が常に同じであるか奇数である必要がある、エラーチェックの手順です。 モデムからモデムへの通信では、多くの場合、転送を実行する前にパーティと受信側で合意する必要があるパラメーターの1つがパリティです。  
  
 ストリームの末尾のバイトでパリティエラーが発生すると、追加のバイトが値126の入力バッファーに追加されます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにする方法を示しています。 この例では、チャットする前に、ポート設定とユーザー名の入力を求められます。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模なコード例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">渡された <see cref="P:System.IO.Ports.SerialPort.Parity" /> 値は、<see cref="T:System.IO.Ports.Parity" /> 列挙体の有効値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ParityReplace">
      <MemberSignature Language="C#" Value="public byte ParityReplace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 ParityReplace" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ParityReplace" />
      <MemberSignature Language="VB.NET" Value="Public Property ParityReplace As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte ParityReplace { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.ParityReplace : byte with get, set" Usage="System.IO.Ports.SerialPort.ParityReplace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(63)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ParityReplace")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パリティ エラーの発生時に、データ ストリーム内の無効なバイトを置き換えるバイトを取得または設定します。</summary>
        <value>無効なバイトを置き換えるバイト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値が null 文字に設定されている場合、パリティ置換は無効になります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
      </Docs>
    </Member>
    <Member MemberName="PinChanged">
      <MemberSignature Language="C#" Value="public event System.IO.Ports.SerialPinChangedEventHandler PinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.Ports.SerialPinChangedEventHandler PinChanged" />
      <MemberSignature Language="DocId" Value="E:System.IO.Ports.SerialPort.PinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PinChanged As SerialPinChangedEventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::Ports::SerialPinChangedEventHandler ^ PinChanged;" />
      <MemberSignature Language="F#" Value="member this.PinChanged : System.IO.Ports.SerialPinChangedEventHandler " Usage="member this.PinChanged : System.IO.Ports.SerialPinChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event PinChanged As SerialPinChangedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("SerialPinChanged")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.SerialPinChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>非データ信号イベントが <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトによって表されるポートで発生したことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 シリアル pin によって変更されたイベントは、<xref:System.IO.Ports.SerialPinChange> 列挙のいずれかの項目によって発生することがあります。 オペレーティングシステムは、このイベントを発生させるかどうかを判断するため、すべてのパリティエラーが報告されるとは限りません。 イベントの一部として、pin の新しい値が設定されます。  
  
 <xref:System.IO.Ports.SerialPort.PinChanged> イベントは、<xref:System.IO.Ports.SerialPort> オブジェクトが <xref:System.IO.Ports.SerialPort.BreakState%2A>に入ったときに発生しますが、ポートが <xref:System.IO.Ports.SerialPort.BreakState%2A>を終了したときには発生しません。 この動作は、<xref:System.IO.Ports.SerialPinChange> 列挙型の他の値には適用されません。  
  
 <xref:System.IO.Ports.SerialPort.PinChanged>、<xref:System.IO.Ports.SerialPort.DataReceived>、および <xref:System.IO.Ports.SerialPort.ErrorReceived> イベントは、順不同で呼び出されることがあります。また、基になるストリームがエラーを報告してから、イベントハンドラーが実行されるまでにわずかな遅延が発生する可能性があります。 一度に実行できるイベントハンドラーは1つだけです。  
  
 セカンダリスレッドで <xref:System.IO.Ports.SerialPort.PinChanged> イベントが発生します。 このイベントはメインスレッドではなくセカンダリスレッドで発生するため、メインスレッド (UI 要素など) の一部の要素を変更しようとすると、スレッド例外が発生する可能性があります。 メイン <xref:System.Windows.Forms.Form> または <xref:System.Windows.Forms.Control>内の要素を変更する必要がある場合は、<xref:System.Windows.Forms.Control.Invoke%2A>を使用して変更要求を戻します。これにより、適切なスレッドで作業が行われます。  
  
 イベントの処理の詳細については、「[処理とイベントの発生](~/docs/standard/events/index.md)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PortName">
      <MemberSignature Language="C#" Value="public string PortName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PortName" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.PortName" />
      <MemberSignature Language="VB.NET" Value="Public Property PortName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PortName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PortName : string with get, set" Usage="System.IO.Ports.SerialPort.PortName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("COM1")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("PortName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>通信用のポートを取得または設定します。このポートには、使用可能なすべての COM ポートが含まれますが、これに限定されるわけではありません。</summary>
        <value>通信ポート。 既定値は COM1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有効なポート名の一覧は、<xref:System.IO.Ports.SerialPort.GetPortNames%2A> メソッドを使用して取得できます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにする方法を示しています。 この例では、チャットする前に、ポート設定とユーザー名の入力を求められます。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模なコード例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.IO.Ports.SerialPort.PortName" /> プロパティに長さ 0 の値が設定されました。  
  
または 
<see cref="P:System.IO.Ports.SerialPort.PortName" /> プロパティに、"\\\\" で始まる値が設定されました。  
  
または 
ポート名が有効ではありません。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.IO.Ports.SerialPort.PortName" /> プロパティが <see langword="null" /> に設定されました。</exception>
        <exception cref="T:System.InvalidOperationException">指定したポートは開いています。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> の入力バッファーから読み取ります。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public int Read (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Read(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (buffer As Byte(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Read(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Read : byte[] * int * int -&gt; int" Usage="serialPort.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">入力の書き込み先となるバイト配列。</param>
        <param name="offset">バイトを書き込む <paramref name="buffer" /> 内のオフセット。</param>
        <param name="count">読み取る最大バイト数。 <paramref name="count" /> が入力バッファー内のバイト数よりも大きい場合は、読み取られるバイト数が少なくなります。</param>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> の入力バッファーから複数のバイトを読み取り、読み取ったバイトを指定したオフセットでバイト配列に書き込みます。</summary>
        <returns>読み取るバイト数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テキストの読み取りとストリームからのバイナリデータの読み取りを切り替える必要がある場合は、バイトの手動読み取りやデータのデコードなど、テキストデータとバイナリデータの間の境界を慎重に定義するプロトコルを選択します。  
  
 <xref:System.IO.Ports.SerialPort> クラスはデータをバッファーし、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにはないため、読み取り可能なバイト数について2つの競合が発生する可能性があります。  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> プロパティは、読み取るバイトがあることを示すことができますが、これらのバイトは <xref:System.IO.Ports.SerialPort> クラスにバッファリングされているため、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにはアクセスできない可能性があります。  
  
 <xref:System.IO.Ports.SerialPort.Read%2A> メソッドは、読み取ったバイト数が `count` であるにもかかわらず、シリアルポートで使用可能な未読バイトが残っている場合に、他の操作をブロックしません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">渡されたバッファーが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">指定したポートが開いていません。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> パラメーターまたは <paramref name="count" /> パラメーターが、渡される <paramref name="buffer" /> の有効な領域外です。 <paramref name="offset" /> または <paramref name="count" /> のいずれかが 0 より小さい値です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="offset" /> に <paramref name="count" /> を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
        <exception cref="T:System.TimeoutException">読み取ることができるバイトがありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public int Read (char[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Read(char[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Read (buffer As Char(), offset As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Read(cli::array &lt;char&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Read : char[] * int * int -&gt; int" Usage="serialPort.Read (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">入力の書き込み先となる文字配列。</param>
        <param name="offset">文字を書き込む <paramref name="buffer" /> 内のオフセット。</param>
        <param name="count">読み取る最大文字数。 <paramref name="count" /> が入力バッファー内の文字数よりも大きい場合は、読み取られる文字数が少なくなります。</param>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> の入力バッファーから複数の文字を読み取り、読み取った文字を指定したオフセットで文字配列に書き込みます。</summary>
        <returns>読み取った文字数です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 シリアルポートから文字を読み取るには、このメソッドを使用します。  
  
 テキストの読み取りとストリームからのバイナリデータの読み取りを切り替える必要がある場合は、バイトの手動読み取りやデータのデコードなど、テキストデータとバイナリデータの間の境界を慎重に定義するプロトコルを選択します。  
  
 <xref:System.IO.Ports.SerialPort> クラスはデータをバッファーし、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにはないため、読み取り可能な文字数が競合している可能性があります。  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> プロパティは、読み取る文字があることを示すことができますが、これらの文字は <xref:System.IO.Ports.SerialPort> クラスにバッファリングされているため、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにはアクセスできない可能性があります。  
  
 <xref:System.IO.Ports.SerialPort.Read%2A> メソッドは、読み取ったバイト数が `count` であるにもかかわらず、シリアルポートで使用可能な未読バイトが残っている場合に、他の操作をブロックしません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="offset" /> に <paramref name="count" /> を加算した値が、バッファーの長さを超えています。  
  
または 
 <paramref name="count" /> が 1 であり、バッファーにサロゲート文字が存在しています。</exception>
        <exception cref="T:System.ArgumentNullException">渡された <paramref name="buffer" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> パラメーターまたは <paramref name="count" /> パラメーターが、渡される <paramref name="buffer" /> の有効な領域外です。 <paramref name="offset" /> または <paramref name="count" /> のいずれかが 0 より小さい値です。</exception>
        <exception cref="T:System.InvalidOperationException">指定したポートが開いていません。</exception>
        <exception cref="T:System.TimeoutException">読み取ることができる文字がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadBufferSize">
      <MemberSignature Language="C#" Value="public int ReadBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReadBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadBufferSize : int with get, set" Usage="System.IO.Ports.SerialPort.ReadBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(4096)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ReadBufferSize")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> の入力バッファーのサイズを取得または設定します。</summary>
        <value>バイト単位のバッファー サイズ。 既定値は 4096 です。最大値は正の int、または 2,147, 483,647 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> プロパティでは、4096より小さい値は無視されます。  
  
 <xref:System.IO.Ports.SerialPort.ReadBufferSize%2A> プロパティは Windows で作成されたバッファーのみを表しているため、<xref:System.IO.Ports.SerialPort> バッファーと Windows で作成されたバッファーの両方を表す <xref:System.IO.Ports.SerialPort.BytesToRead%2A> プロパティよりも小さい値を返すことができます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> 値が 0 以下の値に設定されています。</exception>
        <exception cref="T:System.InvalidOperationException">ストリームが開いているときに、<see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> プロパティが設定されました。</exception>
        <exception cref="T:System.IO.IOException"><see cref="P:System.IO.Ports.SerialPort.ReadBufferSize" /> プロパティに奇数の整数値が設定されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadByte">
      <MemberSignature Language="C#" Value="public int ReadByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadByte" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadByte () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadByte();" />
      <MemberSignature Language="F#" Value="member this.ReadByte : unit -&gt; int" Usage="serialPort.ReadByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> の入力バッファーから、同期で 1 バイトを読み取ります。</summary>
        <returns><see cref="T:System.Int32" /> にキャストしたバイト。または、ストリームの末尾が読み取られた場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、1バイトを読み取ります。  
  
 <xref:System.IO.Ports.SerialPort.ReadByte%2A> と <xref:System.IO.Ports.SerialPort.ReadChar%2A> を一緒に使用する場合は注意が必要です。 バイトの読み取りと文字の読み取りを切り替えると、余分なデータが読み込まれたり、その他の意図しない動作が発生したりする可能性があります。 テキストの読み取りとストリームからのバイナリデータの読み取りを切り替える必要がある場合は、バイトの手動読み取りやデータのデコードなど、テキストデータとバイナリデータの間の境界を慎重に定義するプロトコルを選択します。  
  
> [!NOTE]
>  <xref:System.IO.Ports.SerialPort> クラスはデータをバッファーし、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにはないため、読み取り可能なバイト数について2つの競合が発生する可能性があります。  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> プロパティは、読み取るバイトがあることを示すことができますが、これらのバイトは <xref:System.IO.Ports.SerialPort> クラスにバッファリングされているため、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにはアクセスできない可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したポートが開いていません。</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">タイムアウト時間内に操作が完了しませんでした。  
  
または
  
 バイトが読み取られませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadChar">
      <MemberSignature Language="C#" Value="public int ReadChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadChar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadChar" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadChar () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadChar();" />
      <MemberSignature Language="F#" Value="member this.ReadChar : unit -&gt; int" Usage="serialPort.ReadChar " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IO.Ports.SerialPort" /> の入力バッファーから、同期で 1 文字を読み取ります。</summary>
        <returns>読み取られた文字。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、エンコーディングに基づいて1つの完全な文字を読み取ります。  
  
 <xref:System.IO.Ports.SerialPort.ReadByte%2A> と <xref:System.IO.Ports.SerialPort.ReadChar%2A> を一緒に使用する場合は注意が必要です。 バイトの読み取りと文字の読み取りを切り替えると、余分なデータが読み込まれたり、その他の意図しない動作が発生したりする可能性があります。 テキストの読み取りとストリームからのバイナリデータの読み取りを切り替える必要がある場合は、バイトの手動読み取りやデータのデコードなど、テキストデータとバイナリデータの間の境界を慎重に定義するプロトコルを選択します。  
  
> [!NOTE]
>  <xref:System.IO.Ports.SerialPort> クラスはデータをバッファーし、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにはないため、読み取り可能なバイト数について2つの競合が発生する可能性があります。  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> プロパティは、読み取るバイトがあることを示すことができますが、これらのバイトは <xref:System.IO.Ports.SerialPort> クラスにバッファリングされているため、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにはアクセスできない可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したポートが開いていません。</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">タイムアウト時間内に操作が完了しませんでした。  
  
または
  
 割り当てられたタイムアウト時間内に使用できる文字がありませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadExisting">
      <MemberSignature Language="C#" Value="public string ReadExisting ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadExisting() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadExisting" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadExisting () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadExisting();" />
      <MemberSignature Language="F#" Value="member this.ReadExisting : unit -&gt; string" Usage="serialPort.ReadExisting " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ストリームと <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトの入力バッファーの両方で、エンコーディングに基づいて、即座に使用できるすべてのバイトを読み取ります。</summary>
        <returns>ストリームと <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトの入力バッファーの内容。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、ストリームの内容と <xref:System.IO.Ports.SerialPort> オブジェクトの内部バッファーを文字列として返します。 このメソッドは、タイムアウトを使用しません。このメソッドでは、内部バッファーに後続の先行バイトを残すことができます。これにより、<xref:System.IO.Ports.SerialPort.BytesToRead%2A> の値が0より大きい値になります。  
  
 テキストの読み取りとストリームからのバイナリデータの読み取りを切り替える必要がある場合は、バイトの手動読み取りやデータのデコードなど、テキストデータとバイナリデータの間の境界を慎重に定義するプロトコルを選択します。  
  
> [!NOTE]
>  <xref:System.IO.Ports.SerialPort> クラスはデータをバッファーしますが、<xref:System.IO.Ports.SerialPort.BaseStream%2A?displayProperty=nameWithType> プロパティに格納されているストリームオブジェクトはデータをバッファーしません。 そのため、<xref:System.IO.Ports.SerialPort> オブジェクトとストリームオブジェクトは、読み取ることができるバイト数とは異なる場合があります。 バイトが <xref:System.IO.Ports.SerialPort> オブジェクトにバッファリングされる場合、<xref:System.IO.Ports.SerialPort.BytesToRead%2A> プロパティの値にはこれらのバイトが含まれます。ただし、これらのバイトは、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにアクセスできない可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したポートが開いていません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="member this.ReadLine : unit -&gt; string" Usage="serialPort.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>入力バッファー内の <see cref="P:System.IO.Ports.SerialPort.NewLine" /> 値まで読み取ります。</summary>
        <returns><see cref="P:System.IO.Ports.SerialPort.NewLine" /> 値が最初に出現するまでの入力バッファーの内容。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは <xref:System.IO.Ports.SerialPort.NewLine%2A> 値を返さないのに対し、<xref:System.IO.Ports.SerialPort.NewLine%2A> 値は入力バッファーから削除されることに注意してください。  
  
 既定では、<xref:System.IO.Ports.SerialPort.ReadLine%2A> メソッドは、行が受信されるまでブロックします。 この動作が望ましくない場合は、<xref:System.IO.Ports.SerialPort.ReadTimeout%2A> プロパティを0以外の値に設定して、ポートで行が使用できない場合に、<xref:System.IO.Ports.SerialPort.ReadLine%2A> メソッドに強制的に <xref:System.TimeoutException> をスローさせます。  
  
 テキストの読み取りとストリームからのバイナリデータの読み取りを切り替える必要がある場合は、バイトの手動読み取りやデータのデコードなど、テキストデータとバイナリデータの間の境界を慎重に定義するプロトコルを選択します。  
  
> [!NOTE]
>  <xref:System.IO.Ports.SerialPort> クラスはデータをバッファーし、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにはないため、読み取り可能なバイト数について2つの競合が発生する可能性があります。  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> プロパティは、読み取るバイトがあることを示すことができますが、これらのバイトは <xref:System.IO.Ports.SerialPort> クラスにバッファリングされているため、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにはアクセスできない可能性があります。  
  
   
  
## Examples  
 次のコード例は、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにする方法を示しています。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模なコード例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したポートが開いていません。</exception>
        <exception cref="T:System.TimeoutException">タイムアウト時間内に操作が完了しませんでした。  
  
または
  
 バイトが読み取られませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTimeout">
      <MemberSignature Language="C#" Value="public int ReadTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReadTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReadTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReadTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReadTimeout : int with get, set" Usage="System.IO.Ports.SerialPort.ReadTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ReadTimeout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>読み取り操作が完了していないときに、タイムアウトになるまでのミリ秒数を取得または設定します。</summary>
        <value>読み取り操作が完了していないときに、タイムアウトになるまでのミリ秒数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 読み取りタイムアウト値は、最初は Win32 通信 API で500ミリ秒に設定されていました。 このプロパティを使用すると、この値を設定できます。 タイムアウトは、ゼロより大きい値に設定することも <xref:System.IO.Ports.SerialPort.InfiniteTimeout>に設定することもできます。この場合、タイムアウトは発生しません。 <xref:System.IO.Ports.SerialPort.InfiniteTimeout> は既定値です。  
  
> [!NOTE]
>  アンマネージ `COMMTIMEOUTS` 構造体のユーザーは、タイムアウト値を0に設定してタイムアウトを抑制することが想定されている場合があります。 ただし、<xref:System.IO.Ports.SerialPort.ReadTimeout%2A> プロパティを使用してタイムアウトを抑制するには、<xref:System.IO.Ports.SerialPort.InfiniteTimeout>を指定する必要があります。  
  
 このプロパティは、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティによって返されるストリームの <xref:System.IO.Stream.BeginRead%2A> メソッドには影響しません。  
  
   
  
## Examples  
 次のコード例は、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにする方法を示しています。 この例では、チャットする前に、ポート設定とユーザー名の入力を求められます。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模なコード例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">読み取りタイムアウト値が 0 未満であり、<see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" /> と等しくありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadTo">
      <MemberSignature Language="C#" Value="public string ReadTo (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ReadTo(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.ReadTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadTo (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ReadTo(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.ReadTo : string -&gt; string" Usage="serialPort.ReadTo value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">読み取り操作を停止する場所を示す値。</param>
        <summary>入力バッファー内の指定した <paramref name="value" /> まで文字列を読み取ります。</summary>
        <returns>指定した <paramref name="value" /> までの入力バッファーの内容。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、指定された `value`まで文字列を読み取ります。 返された文字列には `value`が含まれていませんが、`value` は入力バッファーから削除されます。  
  
 テキストの読み取りとストリームからのバイナリデータの読み取りを切り替える必要がある場合は、バイトの手動読み取りやデータのデコードなど、テキストデータとバイナリデータの間の境界を慎重に定義するプロトコルを選択します。  
  
> [!NOTE]
>  <xref:System.IO.Ports.SerialPort> クラスはデータをバッファーし、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにはないため、読み取り可能なバイト数について2つの競合が発生する可能性があります。  <xref:System.IO.Ports.SerialPort.BytesToRead%2A> プロパティは、読み取るバイトがあることを示すことができますが、これらのバイトは <xref:System.IO.Ports.SerialPort> クラスにバッファリングされているため、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティに格納されているストリームにはアクセスできない可能性があります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> パラメーターの長さが 0 です。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">指定したポートが開いていません。</exception>
        <exception cref="T:System.TimeoutException">タイムアウト時間内に操作が完了しませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceivedBytesThreshold">
      <MemberSignature Language="C#" Value="public int ReceivedBytesThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceivedBytesThreshold" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceivedBytesThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceivedBytesThreshold { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceivedBytesThreshold : int with get, set" Usage="System.IO.Ports.SerialPort.ReceivedBytesThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Not implemented")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("ReceivedBytesThreshold")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="E:System.IO.Ports.SerialPort.DataReceived" /> イベントが発生する前の、内部入力バッファーのバイト数を取得または設定します。</summary>
        <value><see cref="E:System.IO.Ports.SerialPort.DataReceived" /> イベントが発生する前の内部入力バッファー内のバイト数。 既定値は 1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.DataReceived> イベントは、内部入力バッファーのバイト数と <xref:System.IO.Ports.SerialPort.ReceivedBytesThreshold%2A> プロパティの値に関係なく、<xref:System.IO.Ports.SerialData.Eof> 文字が受信された場合にも発生します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.IO.Ports.SerialPort.ReceivedBytesThreshold" /> 値が 0 以下です。</exception>
      </Docs>
    </Member>
    <Member MemberName="RtsEnable">
      <MemberSignature Language="C#" Value="public bool RtsEnable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RtsEnable" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.RtsEnable" />
      <MemberSignature Language="VB.NET" Value="Public Property RtsEnable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RtsEnable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RtsEnable : bool with get, set" Usage="System.IO.Ports.SerialPort.RtsEnable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("RtsEnable")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>シリアル通信中に、RTS (Request To Send) シグナルが有効かどうかを示す値を取得または設定します。</summary>
        <value>RTS を有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定では、 <see langword="false" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RTS (Request to send) シグナルは、通常、送信 (RTS/CTS) ハードウェアハンドシェイクの送信/クリア要求で使用されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IO.Ports.SerialPort.RtsEnable" /> プロパティに <see cref="P:System.IO.Ports.SerialPort.Handshake" /> 値または <see cref="F:System.IO.Ports.Handshake.RequestToSend" /> 値が設定されているときに、<see cref="F:System.IO.Ports.Handshake.RequestToSendXOnXOff" /> プロパティの値が設定または取得されました。</exception>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
      </Docs>
    </Member>
    <Member MemberName="StopBits">
      <MemberSignature Language="C#" Value="public System.IO.Ports.StopBits StopBits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Ports.StopBits StopBits" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.StopBits" />
      <MemberSignature Language="VB.NET" Value="Public Property StopBits As StopBits" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Ports::StopBits StopBits { System::IO::Ports::StopBits get(); void set(System::IO::Ports::StopBits value); };" />
      <MemberSignature Language="F#" Value="member this.StopBits : System.IO.Ports.StopBits with get, set" Usage="System.IO.Ports.SerialPort.StopBits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("StopBits")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Ports.StopBits</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>バイトごとのストップ ビットの標準の数を取得または設定します。</summary>
        <value><see cref="T:System.IO.Ports.StopBits" /> 値のいずれか 1 つです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.StopBits%2A> の既定値は <xref:System.IO.Ports.StopBits.One> です。  
  
 <xref:System.IO.Ports.StopBits.None?displayProperty=nameWithType> 値はサポートされていません。  
  
   
  
## Examples  
 次の例では、<xref:System.IO.Ports.SerialPort.StopBits%2A> プロパティを `One`に設定する方法を示します。  
  
 [!code-cpp[System.IO.Ports.SerialPort#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/datareceived.cpp#20)]
 [!code-csharp[System.IO.Ports.SerialPort#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/datareceived.cs#20)]
 [!code-vb[System.IO.Ports.SerialPort#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/datareceived.vb#20)]  
  
 次の例では、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにします。 この例では、チャットする前に、ポート設定とユーザー名の入力を求められます。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模な例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.IO.Ports.SerialPort.StopBits" /> 値は <see cref="F:System.IO.Ports.StopBits.None" /> です。</exception>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>シリアル ポートの出力バッファーにデータを書き込みます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (string text);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string text) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (text As String)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ text);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="serialPort.Write text" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void Write (string str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(string str) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (str As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::String ^ str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Write : string -&gt; unit" Usage="serialPort.Write str" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text">出力用の文字列。</param>
        <param name="str">To be added.</param>
        <summary>指定した文字列をシリアル ポートに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、シリアルポートへの出力として文字列を書き込む場合に使用します。  
  
 出力バッファー内のバイト数が多すぎて <xref:System.IO.Ports.SerialPort.Handshake%2A> が <xref:System.IO.Ports.Handshake.XOnXOff> に設定されている場合は、デバイスがより多くのデータを受け入れる準備が整うまで待機している間に、<xref:System.IO.Ports.SerialPort> オブジェクトによって <xref:System.ServiceProcess.TimeoutException> が発生する可能性があります。  
  
 既定では、<xref:System.IO.Ports.SerialPort> は <xref:System.Text.ASCIIEncoding> を使用して文字をエンコードします。 <xref:System.Text.ASCIIEncoding> は、127より大きいすべての文字を (char) 63 または '? ' としてエンコードします。 その範囲の追加の文字をサポートするには、<xref:System.IO.Ports.SerialPort.Encoding%2A> を <xref:System.Text.UTF8Encoding>、<xref:System.Text.UTF32Encoding>、または <xref:System.Text.UnicodeEncoding>に設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定したポートが開いていません。</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">タイムアウト時間内に操作が完了しませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Write : byte[] * int * int -&gt; unit" Usage="serialPort.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">ポートに書き込むデータを格納したバイト配列。</param>
        <param name="offset">ポートへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> パラメーター内のバイト オフセット。インデックス番号は 0 から始まります。</param>
        <param name="count">書き込むバイト数です。</param>
        <summary>バッファーのデータを使用して、指定したバイト数をシリアル ポートに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、シリアルポートへの出力を作成するためにバイトバッファーに書き込む場合に使用します。  
  
 出力バッファー内のバイト数が多すぎて <xref:System.IO.Ports.SerialPort.Handshake%2A> が <xref:System.IO.Ports.Handshake.XOnXOff> に設定されている場合は、デバイスがより多くのデータを受け入れる準備が整うまで待機している間に、<xref:System.IO.Ports.SerialPort> オブジェクトによって <xref:System.ServiceProcess.TimeoutException> が発生する可能性があります。  
  
 既定では、<xref:System.IO.Ports.SerialPort> は <xref:System.Text.ASCIIEncoding> を使用して文字をエンコードします。 <xref:System.Text.ASCIIEncoding> は、127より大きいすべての文字を (char) 63 または '? ' としてエンコードします。 その範囲の追加の文字をサポートするには、<xref:System.IO.Ports.SerialPort.Encoding%2A> を <xref:System.Text.UTF8Encoding>、<xref:System.Text.UTF32Encoding>、または <xref:System.Text.UnicodeEncoding>に設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">渡された <paramref name="buffer" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">指定したポートが開いていません。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> パラメーターまたは <paramref name="count" /> パラメーターが、渡される <paramref name="buffer" /> の有効な領域外です。 <paramref name="offset" /> または <paramref name="count" /> のいずれかが 0 より小さい値です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="offset" /> に <paramref name="count" /> を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">タイムアウト時間内に操作が完了しませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (char[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Write(char[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (buffer As Char(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(cli::array &lt;char&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.Write : char[] * int * int -&gt; unit" Usage="serialPort.Write (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">ポートに書き込むデータを格納した文字配列。</param>
        <param name="offset">ポートへのバイトのコピーを開始する位置を示す <paramref name="buffer" /> パラメーター内のバイト オフセット。インデックス番号は 0 から始まります。</param>
        <param name="count">書き込む文字数。</param>
        <summary>バッファーのデータを使用して、指定した文字数をシリアル ポートに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、シリアルポートへの出力を作成するために文字バッファーに書き込む場合に使用します。  
  
 出力バッファー内のバイト数が多すぎて <xref:System.IO.Ports.SerialPort.Handshake%2A> が <xref:System.IO.Ports.Handshake.XOnXOff> に設定されている場合は、デバイスがより多くのデータを受け入れる準備が整うまで待機している間に、<xref:System.IO.Ports.SerialPort> オブジェクトによって <xref:System.ServiceProcess.TimeoutException> が発生する可能性があります。  
  
 既定では、<xref:System.IO.Ports.SerialPort> は <xref:System.Text.ASCIIEncoding> を使用して文字をエンコードします。 <xref:System.Text.ASCIIEncoding> は、127より大きいすべての文字を (char) 63 または '? ' としてエンコードします。 その範囲の追加の文字をサポートするには、<xref:System.IO.Ports.SerialPort.Encoding%2A> を <xref:System.Text.UTF8Encoding>、<xref:System.Text.UTF32Encoding>、または <xref:System.Text.UnicodeEncoding>に設定します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">渡された <paramref name="buffer" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">指定したポートが開いていません。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> パラメーターまたは <paramref name="count" /> パラメーターが、渡される <paramref name="buffer" /> の有効な領域外です。 <paramref name="offset" /> または <paramref name="count" /> のいずれかが 0 より小さい値です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="offset" /> に <paramref name="count" /> を加算した値が、<paramref name="buffer" /> の長さを超えています。</exception>
        <exception cref="T:System.ServiceProcess.TimeoutException">タイムアウト時間内に操作が完了しませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBufferSize">
      <MemberSignature Language="C#" Value="public int WriteBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.WriteBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WriteBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteBufferSize : int with get, set" Usage="System.IO.Ports.SerialPort.WriteBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(2048)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("WriteBufferSize")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>シリアル ポートの出力バッファーのサイズを取得または設定します。</summary>
        <value>出力バッファーのサイズ。 既定値は 2048 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Ports.SerialPort.WriteBufferSize%2A> プロパティでは、2048より小さい値は無視されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> 値が 0 以下です。</exception>
        <exception cref="T:System.InvalidOperationException">ストリームが開いているときに、<see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> プロパティが設定されました。</exception>
        <exception cref="T:System.IO.IOException"><see cref="P:System.IO.Ports.SerialPort.WriteBufferSize" /> プロパティに奇数の整数値が設定されました。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public void WriteLine (string text);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLine(string text) cil managed" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IO.Ports.SerialPort.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (text As String)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLine(System::String ^ text);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.WriteLine : string -&gt; unit" Usage="serialPort.WriteLine text" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void WriteLine (string str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLine(string str) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLine (str As String)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLine(System::String ^ str);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.WriteLine : string -&gt; unit" Usage="serialPort.WriteLine str" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="str" Type="System.String" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="text">出力バッファーに書き込む文字列。</param>
        <param name="str">To be added.</param>
        <summary>指定した文字列と <see cref="P:System.IO.Ports.SerialPort.NewLine" /> 値を出力バッファーに書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 入力バッファー内のバイト数が多すぎて <xref:System.IO.Ports.SerialPort.Handshake%2A> が <xref:System.IO.Ports.Handshake.XOnXOff> に設定されている場合、<xref:System.IO.Ports.SerialPort> オブジェクトは、デバイスがより多くのデータを受け入れる準備が整うまで待機している間に <xref:System.ServiceProcess.TimeoutException> を発生させる可能性があります。  
  
 書き込まれた出力には、<xref:System.IO.Ports.SerialPort.NewLine%2A> 文字列が含まれます。  
  
   
  
## Examples  
 次のコード例は、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにする方法を示しています。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模なコード例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> パラメーターが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">指定したポートが開いていません。</exception>
        <exception cref="T:System.TimeoutException"><see cref="M:System.IO.Ports.SerialPort.WriteLine(System.String)" /> メソッドは、ストリームに書き込むことができませんでした。</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTimeout">
      <MemberSignature Language="C#" Value="public int WriteTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WriteTimeout" />
      <MemberSignature Language="DocId" Value="P:System.IO.Ports.SerialPort.WriteTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WriteTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WriteTimeout : int with get, set" Usage="System.IO.Ports.SerialPort.WriteTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Ports</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Diagnostics.MonitoringDescription("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.MonitoringDescription("WriteTimeout")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>書き込み操作が完了していないときに、タイムアウトになるまでのミリ秒数を取得または設定します。</summary>
        <value>タイムアウトが発生するまでの時間 (ミリ秒単位)。 既定では、 <see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 書き込みタイムアウト値は、最初は Win32 通信 API で500ミリ秒に設定されていました。 このプロパティを使用すると、この値を設定できます。 タイムアウトは、ゼロより大きい値に設定することも <xref:System.IO.Ports.SerialPort.InfiniteTimeout>に設定することもできます。この場合、タイムアウトは発生しません。 <xref:System.IO.Ports.SerialPort.InfiniteTimeout> は既定値です。  
  
> [!NOTE]
>  アンマネージ `COMMTIMEOUTS` 構造体のユーザーは、タイムアウト値を0に設定してタイムアウトを抑制することが想定されている場合があります。 ただし、<xref:System.IO.Ports.SerialPort.WriteTimeout%2A> プロパティを使用してタイムアウトを抑制するには、<xref:System.IO.Ports.SerialPort.InfiniteTimeout>を指定する必要があります。  
  
 このプロパティは、<xref:System.IO.Ports.SerialPort.BaseStream%2A> プロパティによって返されるストリームの <xref:System.IO.Stream.BeginWrite%2A> メソッドには影響しません。  
  
   
  
## Examples  
 次のコード例は、<xref:System.IO.Ports.SerialPort> クラスを使用して、2人のユーザーが、null モデムケーブルで接続された2台の異なるコンピューターからチャットできるようにする方法を示しています。 この例では、チャットする前に、ポート設定とユーザー名の入力を求められます。 このコード例は、<xref:System.IO.Ports.SerialPort> クラス用に用意されている大規模なコード例の一部です。  
  
 [!code-cpp[System.IO.Ports.SerialPort#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cpp/serialport.cpp#01)]
 [!code-csharp[System.IO.Ports.SerialPort#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/cs/SerialPort.cs#01)]
 [!code-vb[System.IO.Ports.SerialPort#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Ports.SerialPort/vb/SerialPort.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">ポートが無効状態です。  
  
または 
基本ポートの状態を設定しようとしましたが失敗しました。 たとえば、この <see cref="T:System.IO.Ports.SerialPort" /> オブジェクトから渡されたパラメーターが無効であるなどです。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.IO.Ports.SerialPort.WriteTimeout" /> 値が 0 未満であり、<see cref="F:System.IO.Ports.SerialPort.InfiniteTimeout" /> と等しくありません。</exception>
      </Docs>
    </Member>
  </Members>
</Type>
