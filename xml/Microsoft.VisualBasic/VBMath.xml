<Type Name="VBMath" FullName="Microsoft.VisualBasic.VBMath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3b17dc22be52342cb3dce35b16066fa4a90d5490" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83975653" /></Metadata><TypeSignature Language="C#" Value="public sealed class VBMath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VBMath extends System.Object" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.VBMath" />
  <TypeSignature Language="VB.NET" Value="Public Module VBMath" />
  <TypeSignature Language="C++ CLI" Value="public ref class VBMath sealed" />
  <TypeSignature Language="F#" Value="type VBMath = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VBMath extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
    <AssemblyVersion>10.0.5.0</AssemblyVersion>
    <AssemblyVersion>10.0.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.VisualBasic.CompilerServices.StandardModule</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="97381-101"><see langword="VbMath" /> モジュールに含まれるプロシージャを使って、数値演算を実行します。</span><span class="sxs-lookup"><span data-stu-id="97381-101">The <see langword="VbMath" /> module contains procedures used to perform mathematical operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97381-102">このモジュールは、ランダムな数値を生成するための Visual Basic 言語キーワードとランタイムライブラリメンバーをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="97381-102">This module supports the Visual Basic language keywords and run-time library members for generating random numbers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97381-103">この例では、`Rnd` 関数を使用して、1 ~ 6 の範囲内のランダムな整数値を生成します。</span><span class="sxs-lookup"><span data-stu-id="97381-103">This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/math-summary"><span data-ttu-id="97381-104">数値演算の概要</span><span class="sxs-lookup"><span data-stu-id="97381-104">Math Summary</span></span></related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/derived-math-functions"><span data-ttu-id="97381-105">数値演算関数の導出 (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="97381-105">Derived Math Functions (Visual Basic)</span></span></related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/"><span data-ttu-id="97381-106">キーワード (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="97381-106">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="/dotnet/visual-basic/language-reference/runtime-library-members"><span data-ttu-id="97381-107">ランタイムライブラリのメンバーの Visual Basic</span><span class="sxs-lookup"><span data-stu-id="97381-107">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Randomize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97381-108">乱数ジェネレーターを初期化します。</span><span class="sxs-lookup"><span data-stu-id="97381-108">Initializes the random-number generator.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Randomize() cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize();" />
      <MemberSignature Language="F#" Value="static member Randomize : unit -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize " />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97381-109">乱数ジェネレーターを初期化します。</span><span class="sxs-lookup"><span data-stu-id="97381-109">Initializes the random-number generator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97381-110">`Randomize` メソッドのこのオーバーロードは、シード値を受け取りません。</span><span class="sxs-lookup"><span data-stu-id="97381-110">This overload of the `Randomize` method does not take a seed value.</span></span> <span data-ttu-id="97381-111">代わりに、システムタイマーによって返される値は、新しいシード値として使用されます。</span><span class="sxs-lookup"><span data-stu-id="97381-111">Instead, the value returned by the system timer is used as the new seed value.</span></span>  
  
 <span data-ttu-id="97381-112">`Randomize` が使用されていない場合、`Rnd` 関数 (引数なし) は、最初に呼び出されたときにシードと同じ番号を使用し、その後、最後に生成された数値をシード値として使用します。</span><span class="sxs-lookup"><span data-stu-id="97381-112">If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97381-113">乱数のシーケンスを繰り返すには、`Randomize` を数値引数と共に使用する直前に、負の引数を指定して `Rnd` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="97381-113">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="97381-114">`Random` ステートメントと `Rnd` 関数は、シード値で始まり、有限範囲内にある数値を生成するため、結果は、生成に使用されたアルゴリズムを知っている人によって予測可能になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="97381-114">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="97381-115">そのため、`Random` ステートメントと `Rnd` 関数を使用して、暗号化で使用する乱数を生成することはできません。</span><span class="sxs-lookup"><span data-stu-id="97381-115">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span> <span data-ttu-id="97381-116">詳細については、「<xref:System.Security.Cryptography.RandomNumberGenerator>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="97381-116">For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97381-117">この例では、`Randomize` ステートメントを使用して、乱数ジェネレーターを初期化します。</span><span class="sxs-lookup"><span data-stu-id="97381-117">This example uses the `Randomize` statement to initialize the random-number generator.</span></span> <span data-ttu-id="97381-118">Number 引数が省略されているため、`Randomize` は `Timer` 関数からの戻り値を新しいシード値として使用します。</span><span class="sxs-lookup"><span data-stu-id="97381-118">Because the number argument has been omitted, `Randomize` uses the return value from the `Timer` function as the new seed value.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/math-summary"><span data-ttu-id="97381-119">数値演算の概要</span><span class="sxs-lookup"><span data-stu-id="97381-119">Math Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Randomize">
      <MemberSignature Language="C#" Value="public static void Randomize (double Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Randomize(float64 Number) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Randomize(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Randomize (Number As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Randomize(double Number);" />
      <MemberSignature Language="F#" Value="static member Randomize : double -&gt; unit" Usage="Microsoft.VisualBasic.VBMath.Randomize Number" />
      <MemberSignature Language="ILAsm" Value=".method public static void Randomize(float64 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="97381-120">省略可。</span><span class="sxs-lookup"><span data-stu-id="97381-120">Optional.</span></span> <span data-ttu-id="97381-121"><see langword="Object" /> または任意の有効な数式。</span><span class="sxs-lookup"><span data-stu-id="97381-121">An <see langword="Object" /> or any valid numeric expression.</span></span></param>
        <summary><span data-ttu-id="97381-122">乱数ジェネレーターを初期化します。</span><span class="sxs-lookup"><span data-stu-id="97381-122">Initializes the random-number generator.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97381-123">`Randomize` は、`Number` を使用して `Rnd` 関数のランダム番号ジェネレーターを初期化し、新しいシード値を与えます。</span><span class="sxs-lookup"><span data-stu-id="97381-123">`Randomize` uses `Number` to initialize the `Rnd` function's random-number generator, giving it a new seed value.</span></span> <span data-ttu-id="97381-124">`Number`を省略した場合、システムタイマーによって返された値が新しいシード値として使用されます。</span><span class="sxs-lookup"><span data-stu-id="97381-124">If you omit `Number`, the value returned by the system timer is used as the new seed value.</span></span>  
  
 <span data-ttu-id="97381-125">`Randomize` が使用されていない場合、`Rnd` 関数 (引数なし) は、最初に呼び出されたときにシードと同じ番号を使用し、その後、最後に生成された数値をシード値として使用します。</span><span class="sxs-lookup"><span data-stu-id="97381-125">If `Randomize` is not used, the `Rnd` function (with no arguments) uses the same number as a seed the first time it is called, and thereafter uses the last-generated number as a seed value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97381-126">乱数のシーケンスを繰り返すには、`Randomize` を数値引数と共に使用する直前に、負の引数を指定して `Rnd` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="97381-126">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span> <span data-ttu-id="97381-127">`Number` に同じ値を指定して `Randomize` を使用しても、前のシーケンスは繰り返されません。</span><span class="sxs-lookup"><span data-stu-id="97381-127">Using `Randomize` with the same value for `Number` does not repeat the previous sequence.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="97381-128">`Random` ステートメントと `Rnd` 関数は、シード値で始まり、有限範囲内にある数値を生成するため、結果は、生成に使用されたアルゴリズムを知っている人によって予測可能になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="97381-128">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="97381-129">そのため、`Random` ステートメントと `Rnd` 関数を使用して、暗号化で使用する乱数を生成することはできません。</span><span class="sxs-lookup"><span data-stu-id="97381-129">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span> <span data-ttu-id="97381-130">詳細については、「<xref:System.Security.Cryptography.RandomNumberGenerator>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="97381-130">For more information, see <xref:System.Security.Cryptography.RandomNumberGenerator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97381-131">この例では、`Randomize` ステートメントを使用して、乱数ジェネレーターを初期化します。</span><span class="sxs-lookup"><span data-stu-id="97381-131">This example uses the `Randomize` statement to initialize the random-number generator.</span></span> <span data-ttu-id="97381-132">Number 引数が省略されているため、`Randomize` は `Timer` 関数からの戻り値を新しいシード値として使用します。</span><span class="sxs-lookup"><span data-stu-id="97381-132">Because the number argument has been omitted, `Randomize` uses the return value from the `Timer` function as the new seed value.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Rnd" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/math-summary"><span data-ttu-id="97381-133">数値演算の概要</span><span class="sxs-lookup"><span data-stu-id="97381-133">Math Summary</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Rnd">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="97381-134">型 <see cref="T:System.Single" /> の乱数を返します。</span><span class="sxs-lookup"><span data-stu-id="97381-134">Returns a random number of type <see cref="T:System.Single" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Rnd() cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd();" />
      <MemberSignature Language="F#" Value="static member Rnd : unit -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd " />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd() cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="97381-135">型 <see cref="T:System.Single" /> の乱数を返します。</span><span class="sxs-lookup"><span data-stu-id="97381-135">Returns a random number of type <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="97381-136">乱数系列の次の乱数を返します。</span><span class="sxs-lookup"><span data-stu-id="97381-136">The next random number in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97381-137">`Rnd` 関数は、1未満の値を返しますが、0以上です。</span><span class="sxs-lookup"><span data-stu-id="97381-137">The `Rnd` function returns a value less than 1, but greater than or equal to zero.</span></span>  
  
 <span data-ttu-id="97381-138">`Rnd`を呼び出す前に、引数を指定せずに `Randomize` ステートメントを使用して、システムタイマーに基づくシードで乱数ジェネレーターを初期化します。</span><span class="sxs-lookup"><span data-stu-id="97381-138">Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer.</span></span>  
  
 <span data-ttu-id="97381-139">指定された範囲でランダムな整数を生成するには、次の式を使用します。</span><span class="sxs-lookup"><span data-stu-id="97381-139">To produce random integers in a given range, use the following formula.</span></span>  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 <span data-ttu-id="97381-140">ここでは、`upperbound` が範囲内の最大の数値であり、`lowerbound` が範囲内の最小の数値です。</span><span class="sxs-lookup"><span data-stu-id="97381-140">Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97381-141">乱数のシーケンスを繰り返すには、`Randomize` を数値引数と共に使用する直前に、負の引数を指定して `Rnd` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="97381-141">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="97381-142">`Random` ステートメントと `Rnd` 関数は、シード値で始まり、有限範囲内にある数値を生成するため、結果は、生成に使用されたアルゴリズムを知っている人によって予測可能になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="97381-142">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="97381-143">そのため、`Random` ステートメントと `Rnd` 関数を使用して、暗号化で使用する乱数を生成することはできません。</span><span class="sxs-lookup"><span data-stu-id="97381-143">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97381-144">この例では、`Rnd` 関数を使用して、1 ~ 6 の範囲内のランダムな整数値を生成します。</span><span class="sxs-lookup"><span data-stu-id="97381-144">This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/math-summary"><span data-ttu-id="97381-145">数値演算の概要</span><span class="sxs-lookup"><span data-stu-id="97381-145">Math Summary</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Rnd">
      <MemberSignature Language="C#" Value="public static float Rnd (float Number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Rnd(float32 Number) cil managed" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.VBMath.Rnd(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function Rnd (Number As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Rnd(float Number);" />
      <MemberSignature Language="F#" Value="static member Rnd : single -&gt; single" Usage="Microsoft.VisualBasic.VBMath.Rnd Number" />
      <MemberSignature Language="ILAsm" Value=".method public static float32 Rnd(float32 Number) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
        <AssemblyVersion>10.0.5.0</AssemblyVersion>
        <AssemblyVersion>10.0.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="97381-146">省略可。</span><span class="sxs-lookup"><span data-stu-id="97381-146">Optional.</span></span> <span data-ttu-id="97381-147"><see cref="T:System.Single" /> 値または任意の有効な <see cref="T:System.Single" /> 型の式。</span><span class="sxs-lookup"><span data-stu-id="97381-147">A <see cref="T:System.Single" /> value or any valid <see cref="T:System.Single" /> expression.</span></span></param>
        <summary><span data-ttu-id="97381-148">型 <see cref="T:System.Single" /> の乱数を返します。</span><span class="sxs-lookup"><span data-stu-id="97381-148">Returns a random number of type <see cref="T:System.Single" />.</span></span></summary>
        <returns><span data-ttu-id="97381-149">数値が 0 未満の場合、Rnd は <paramref name="Number" /> をシードとして使用して、毎回同じ数値を生成します。</span><span class="sxs-lookup"><span data-stu-id="97381-149">If number is less than zero, Rnd generates the same number every time, using <paramref name="Number" /> as the seed.</span></span> <span data-ttu-id="97381-150">数値が 0 よりも大きい場合、Rnd はシーケンスの次の乱数を生成します。</span><span class="sxs-lookup"><span data-stu-id="97381-150">If number is greater than zero, Rnd generates the next random number in the sequence.</span></span> <span data-ttu-id="97381-151">数値が 0 の場合、Rnd は最後に生成された数値を生成します。</span><span class="sxs-lookup"><span data-stu-id="97381-151">If number is equal to zero, Rnd generates the most recently generated number.</span></span> <span data-ttu-id="97381-152">数値が指定されていない場合、Rnd はシーケンスの次の乱数を生成します。</span><span class="sxs-lookup"><span data-stu-id="97381-152">If number is not supplied, Rnd generates the next random number in the sequence.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97381-153">`Rnd` 関数は、1未満の値を返しますが、0以上です。</span><span class="sxs-lookup"><span data-stu-id="97381-153">The `Rnd` function returns a value less than 1, but greater than or equal to zero.</span></span>  
  
 <span data-ttu-id="97381-154">`Number` の値によって、`Rnd` によってランダムな数値が生成される方法が決まります。</span><span class="sxs-lookup"><span data-stu-id="97381-154">The value of `Number` determines how `Rnd` generates a random number.</span></span>  
  
 <span data-ttu-id="97381-155">特定の初期シードに対しては、`Rnd` 関数を連続して呼び出すたびに、前に生成された数がシーケンス内の次の数値のシードとして使用されるため、同じ番号シーケンスが生成されます。</span><span class="sxs-lookup"><span data-stu-id="97381-155">For any given initial seed, the same number sequence is generated because each successive call to the `Rnd` function uses the previously generated number as a seed for the next number in the sequence.</span></span>  
  
 <span data-ttu-id="97381-156">`Rnd`を呼び出す前に、引数を指定せずに `Randomize` ステートメントを使用して、システムタイマーに基づくシードで乱数ジェネレーターを初期化します。</span><span class="sxs-lookup"><span data-stu-id="97381-156">Before calling `Rnd`, use the `Randomize` statement without an argument to initialize the random-number generator with a seed based on the system timer.</span></span>  
  
 <span data-ttu-id="97381-157">指定された範囲でランダムな整数を生成するには、次の式を使用します。</span><span class="sxs-lookup"><span data-stu-id="97381-157">To produce random integers in a given range, use the following formula.</span></span>  
  
 [!code-vb[VbVbalrMath#30](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#30)]  
  
 <span data-ttu-id="97381-158">ここでは、`upperbound` が範囲内の最大の数値であり、`lowerbound` が範囲内の最小の数値です。</span><span class="sxs-lookup"><span data-stu-id="97381-158">Here, `upperbound` is the highest number in the range, and `lowerbound` is the lowest number in the range.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="97381-159">乱数のシーケンスを繰り返すには、`Randomize` を数値引数と共に使用する直前に、負の引数を指定して `Rnd` を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="97381-159">To repeat sequences of random numbers, call `Rnd` with a negative argument immediately before using `Randomize` with a numeric argument.</span></span> <span data-ttu-id="97381-160">`Number` に同じ値を指定して `Randomize` を使用しても、前のシーケンスは繰り返されません。</span><span class="sxs-lookup"><span data-stu-id="97381-160">Using `Randomize` with the same value for `Number` does not repeat the previous sequence.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="97381-161">`Random` ステートメントと `Rnd` 関数は、シード値で始まり、有限範囲内にある数値を生成するため、結果は、生成に使用されたアルゴリズムを知っている人によって予測可能になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="97381-161">Because the `Random` statement and the `Rnd` function start with a seed value and generate numbers that fall within a finite range, the results may be predictable by someone who knows the algorithm used to generate them.</span></span> <span data-ttu-id="97381-162">そのため、`Random` ステートメントと `Rnd` 関数を使用して、暗号化で使用する乱数を生成することはできません。</span><span class="sxs-lookup"><span data-stu-id="97381-162">Consequently, the `Random` statement and the `Rnd` function should not be used to generate random numbers for use in cryptography.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97381-163">この例では、`Rnd` 関数を使用して、1 ~ 6 の範囲内のランダムな整数値を生成します。</span><span class="sxs-lookup"><span data-stu-id="97381-163">This example uses the `Rnd` function to generate a random integer value in the range from 1 to 6.</span></span>  
  
 [!code-vb[VbVbalrMath#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMath/VB/Class1.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:Microsoft.VisualBasic.VBMath.Randomize" />
        <related type="Article" href="/dotnet/visual-basic/language-reference/keywords/math-summary"><span data-ttu-id="97381-164">数値演算の概要</span><span class="sxs-lookup"><span data-stu-id="97381-164">Math Summary</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
