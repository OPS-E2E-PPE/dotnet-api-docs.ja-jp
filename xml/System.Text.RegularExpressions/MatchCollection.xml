<Type Name="MatchCollection" FullName="System.Text.RegularExpressions.MatchCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4f351077a6ddd34482f8578d71261aedb5a50e9" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83960365" /></Metadata><TypeSignature Language="C#" Value="public class MatchCollection : System.Collections.ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MatchCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.MatchCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class MatchCollection&#xA;Implements ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class MatchCollection : System::Collections::ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type MatchCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public class MatchCollection : System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;, System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;, System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Text.RegularExpressions.Match&gt;, System.Collections.Generic.IReadOnlyList&lt;System.Text.RegularExpressions.Match&gt;, System.Collections.IList" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MatchCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Text.RegularExpressions.Match&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Text.RegularExpressions.Match&gt;, class System.Collections.Generic.IList`1&lt;class System.Text.RegularExpressions.Match&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;class System.Text.RegularExpressions.Match&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Text.RegularExpressions.Match&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class MatchCollection&#xA;Implements ICollection(Of Match), IEnumerable(Of Match), IList, IList(Of Match), IReadOnlyCollection(Of Match), IReadOnlyList(Of Match)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class MatchCollection : System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Match ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Text::RegularExpressions::Match ^&gt;, System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Match ^&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Text::RegularExpressions::Match ^&gt;, System::Collections::Generic::IReadOnlyList&lt;System::Text::RegularExpressions::Match ^&gt;, System::Collections::IList" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type MatchCollection = class&#xA;    interface ICollection&lt;Match&gt;&#xA;    interface seq&lt;Match&gt;&#xA;    interface IEnumerable&#xA;    interface IList&lt;Match&gt;&#xA;    interface IReadOnlyCollection&lt;Match&gt;&#xA;    interface IReadOnlyList&lt;Match&gt;&#xA;    interface ICollection&#xA;    interface IList" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type MatchCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ICollection&lt;Match&gt;&#xA;    interface seq&lt;Match&gt;&#xA;    interface IList&lt;Match&gt;&#xA;    interface IReadOnlyCollection&lt;Match&gt;&#xA;    interface IReadOnlyList&lt;Match&gt;&#xA;    interface IList" FrameworkAlternate="netcore-2.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit MatchCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Text.RegularExpressions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Text.RegularExpressions" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b7b64-101">正規表現パターンを入力文字列に繰り返し適用したときに、パターンに一致した一連の対象を表します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-101">Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.</span></span>  <span data-ttu-id="b7b64-102">コレクションは変更不可 (読み取り専用) であり、パブリック コンストラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="b7b64-102">The collection is immutable (read-only) and has no public constructor.</span></span> <span data-ttu-id="b7b64-103"><see cref="T:System.Text.RegularExpressions.Regex.Matches(System.String)" /> メソッドが <see cref="T:System.Text.RegularExpressions.MatchCollection" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-103">The <see cref="T:System.Text.RegularExpressions.Regex.Matches(System.String)" /> method returns a <see cref="T:System.Text.RegularExpressions.MatchCollection" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7b64-104">コレクションは変更不可 (読み取り専用) であり、パブリック コンストラクターがありません。</span><span class="sxs-lookup"><span data-stu-id="b7b64-104">The collection is immutable (read-only) and has no public constructor.</span></span> <span data-ttu-id="b7b64-105"><xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> メソッドが <xref:System.Text.RegularExpressions.MatchCollection> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-105">The <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> method returns a <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span>  
  
 <span data-ttu-id="b7b64-106">コレクションには、0個以上の <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> オブジェクトが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b7b64-106">The collection contains zero or more <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> objects.</span></span> <span data-ttu-id="b7b64-107">一致が成功した場合は、入力文字列内で見つかった一致ごとに1つの <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> オブジェクトがコレクションに設定されます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-107">If the match is successful, the collection is populated with one <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> object for each match found in the input string.</span></span> <span data-ttu-id="b7b64-108">一致が失敗した場合、コレクションには <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> オブジェクトが含まれず、その <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> プロパティは0になります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-108">If the match is unsuccessful, the collection contains no <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> objects, and its <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property equals zero.</span></span>  
  
 <span data-ttu-id="b7b64-109">正規表現パターンを特定の入力文字列に適用する場合、正規表現エンジンは、次の2つの方法のいずれかを使用して <xref:System.Text.RegularExpressions.MatchCollection> オブジェクトを構築します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-109">When applying a regular expression pattern to a particular input string, the regular expression engine uses either of two techniques to build the <xref:System.Text.RegularExpressions.MatchCollection> object:</span></span>  
  
-   <span data-ttu-id="b7b64-110">直接評価。</span><span class="sxs-lookup"><span data-stu-id="b7b64-110">Direct evaluation.</span></span>  
  
     <span data-ttu-id="b7b64-111"><xref:System.Text.RegularExpressions.MatchCollection> オブジェクトはすべて一度に設定され、<xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> メソッドの特定の呼び出しの結果としてすべての結果が得られます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-111">The <xref:System.Text.RegularExpressions.MatchCollection> object is populated all at once, with all matches resulting from a particular call to the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b7b64-112">この手法は、コレクションの <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> プロパティにアクセスするときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-112">This technique is used when the collection's <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property is accessed.</span></span> <span data-ttu-id="b7b64-113">通常は、コレクションを作成するためのコストが高く、パフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-113">It typically is the more expensive method of populating the collection and entails a greater performance hit.</span></span>  
  
-   <span data-ttu-id="b7b64-114">レイジー評価。</span><span class="sxs-lookup"><span data-stu-id="b7b64-114">Lazy evaluation.</span></span>  
  
     <span data-ttu-id="b7b64-115"><xref:System.Text.RegularExpressions.MatchCollection> オブジェクトは、必要に応じて一致ごとに設定されます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-115">The <xref:System.Text.RegularExpressions.MatchCollection> object is populated as needed on a match-by-match basis.</span></span> <span data-ttu-id="b7b64-116">これは、<xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> メソッドを繰り返し呼び出して、各一致をコレクションに追加する正規表現エンジンに相当します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-116">It is equivalent to the regular expression engine calling the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> method repeatedly and adding each match to the collection.</span></span> <span data-ttu-id="b7b64-117">この手法は、<xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> メソッドを使用してコレクションにアクセスする場合、または `foreach` ステートメント (のC#場合) または `For Each`...`Next` ステートメント (Visual Basic) を使用してアクセスする場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-117">This technique is used when the collection is accessed through its <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> method, or when it is accessed using the `foreach` statement (in C#) or the `For Each`...`Next` statement (in Visual Basic).</span></span>  
  
 <span data-ttu-id="b7b64-118">コレクションのメンバーを反復処理するには、言語によって提供されるコレクションイテレーションコンストラクトを使用する必要がC#あります (の `foreach` や `For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="b7b64-118">To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="b7b64-119">Visual Basic)。 <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> メソッドによって返される列挙子を取得する代わりに。</span><span class="sxs-lookup"><span data-stu-id="b7b64-119">in Visual Basic) instead of retrieving the enumerator that is returned by the <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7b64-120">次の例は、<xref:System.Text.RegularExpressions.MatchCollection> クラスを使用して、一連の <xref:System.Text.RegularExpressions.Match> インスタンスを照会する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b7b64-120">The following example illustrates the use of the <xref:System.Text.RegularExpressions.MatchCollection> class to interrogate a set of <xref:System.Text.RegularExpressions.Match> instances.</span></span>  
  
 [!code-cpp[Regex_Words#0](~/samples/snippets/cpp/VS_Snippets_CLR/Regex_Words/CPP/words.cpp#0)]
 [!code-csharp[Regex_Words#0](~/samples/snippets/csharp/VS_Snippets_CLR/Regex_Words/CS/words.cs#0)]
 [!code-vb[Regex_Words#0](~/samples/snippets/visualbasic/VS_Snippets_CLR/Regex_Words/VB/words.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="matchCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="b7b64-121">コレクションのコピー先の配列。</span><span class="sxs-lookup"><span data-stu-id="b7b64-121">The array the collection is to be copied into.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="b7b64-122">コピーの開始位置を示す、配列内の位置。</span><span class="sxs-lookup"><span data-stu-id="b7b64-122">The position in the array where copying is to begin.</span></span></param>
        <summary><span data-ttu-id="b7b64-123">指定したインデックスを開始位置として、指定した配列にコレクションのすべての要素をコピーします。</span><span class="sxs-lookup"><span data-stu-id="b7b64-123">Copies all the elements of the collection to the given array starting at the given index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7b64-124">コレクションは、指定されたインデックスを開始位置として配列にコピーされるため、コピー先の配列は、少なくともコレクション全体のサイズ以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-124">Because the collection is copied into the array starting at the given index, the destination array must be at least as large as the entire collection.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="b7b64-125">このメンバーは [!INCLUDE[net_portable](~/includes/net-portable-md.md)]に存在しません。</span><span class="sxs-lookup"><span data-stu-id="b7b64-125">This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span></span> <span data-ttu-id="b7b64-126">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]を対象とするアプリケーションを開発している場合は、代わりに <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-126">If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="b7b64-127"><xref:System.Text.RegularExpressions.MatchCollection> オブジェクトは一般にレイジー評価を使用して設定されるため、コレクションを完全に格納する前にコピーしようとすると、<xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-127">Because the <xref:System.Text.RegularExpressions.MatchCollection> object is generally populated by using lazy evaluation, trying to copy the collection before it has been fully populated may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="b7b64-128">この例外は、照合操作のタイムアウト値が有効であり、単一の一致を検索する試みがタイムアウト間隔を超えた場合にスローされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-128">This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a single match exceeds that time-out interval.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b7b64-129"><paramref name="array" /> は、多次元配列です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-129"><paramref name="array" /> is a multi-dimensional array.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b7b64-130"><paramref name="arrayIndex" /> が <paramref name="array" /> の境界の外側にあります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-130"><paramref name="arrayIndex" /> is outside the bounds of <paramref name="array" />.</span></span>  
  
<span data-ttu-id="b7b64-131">または</span><span class="sxs-lookup"><span data-stu-id="b7b64-131">-or-</span></span> 
 <span data-ttu-id="b7b64-132"><paramref name="arrayIndex" /> に <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> を加えた値が <paramref name="array" /> の境界の外側にあります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-132"><paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> is outside the bounds of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="b7b64-133">タイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b7b64-133">A time-out occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Text.RegularExpressions.Match[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Text.RegularExpressions.Match[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Match(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Text::RegularExpressions::Match ^&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Text.RegularExpressions.Match[] * int -&gt; unit&#xA;override this.CopyTo : System.Text.RegularExpressions.Match[] * int -&gt; unit" Usage="matchCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Text.RegularExpressions.Match[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="b7b64-134">コレクションのコピー先となる 1 次元の <see cref="T:System.Array" /> です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-134">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the collection.</span></span> <span data-ttu-id="b7b64-135"><see cref="T:System.Array" /> には、0 から始まるインデックスが設定されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-135">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="b7b64-136"><paramref name="array" /> 内のコピーの開始位置である、0 から始まるインデックスです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-136">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="b7b64-137">コレクションの要素を <see cref="T:System.Array" /> にコピーします。<see cref="T:System.Array" /> の特定のインデックスからコピーが開始されます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-137">Copies the elements of the collection to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Text.RegularExpressions.MatchCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7b64-138">一致の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-138">Gets the number of matches.</span></span></summary>
        <value><span data-ttu-id="b7b64-139">一致の数。</span><span class="sxs-lookup"><span data-stu-id="b7b64-139">The number of matches.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7b64-140">コレクションの <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> プロパティの値を取得することによって <xref:System.Text.RegularExpressions.MatchCollection> オブジェクトの個々のメンバーにアクセスすると、正規表現エンジンは直接評価を使用してコレクションにデータを設定します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-140">Accessing individual members of the <xref:System.Text.RegularExpressions.MatchCollection> object by retrieving the value of the collection's <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property causes the regular expression engine to populate the collection using direct evaluation.</span></span> <span data-ttu-id="b7b64-141">また、<xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> メソッドを呼び出す (またはのC# `foreach` ステートメントを使用して、Visual Basic の `For Each`...`Next` ステートメントを使用すると、正規表現エンジンによって、レイジー評価を使用して必要に応じてコレクションがに設定されます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-141">ln contrast, calling the <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> method (or using the `foreach` statement in C# and the `For Each`...`Next` statement in Visual Basic) causes the regular expression engine to populate the collection on an as needed basis using lazy evaluation.</span></span> <span data-ttu-id="b7b64-142">直接評価は、レイジー評価よりもはるかに負荷の高い方法でコレクションを構築することができます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-142">Direct evaluation can be a much more expensive method of building the collection than lazy evaluation.</span></span>  
  
 <span data-ttu-id="b7b64-143"><xref:System.Text.RegularExpressions.MatchCollection> オブジェクトは一般にレイジー評価を使用して設定されるため、コレクション内の要素の数を完全に設定しようとすると、<xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-143">Because the <xref:System.Text.RegularExpressions.MatchCollection> object is generally populated by using lazy evaluation, trying to determine the number of elements in the collection before it has been fully populated may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="b7b64-144">この例外は、照合操作のタイムアウト値が有効であり、単一の一致を検索する試みがタイムアウト間隔を超えた場合にスローされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-144">This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a single match exceeds that time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7b64-145">次の例では、<xref:System.Text.RegularExpressions.MatchCollection.Count%2A> プロパティを使用して、<xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> メソッドの呼び出しで一致が見つかったかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-145">The following example uses the <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property to determine whether the call to the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> method found any matches.</span></span> <span data-ttu-id="b7b64-146">そうでない場合は、一致する項目が見つからなかったことを示します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-146">If not, it indicates that no matches were found.</span></span> <span data-ttu-id="b7b64-147">それ以外の場合は、一致を列挙し、その値と、その値が見つかった入力文字列内の位置を表示します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-147">Otherwise, it enumerates the matches and displays their value and the position in the input string at which they were found.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.matchcollection.count/cs/countex1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.matchcollection.count/vb/countex1.vb" id="Snippet1":::
  
 <span data-ttu-id="b7b64-148">正規表現パターン `\d+` は、入力文字列内の1つ以上の10進文字に一致します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-148">The regular expression pattern `\d+` matches one or more decimal characters in an input string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="b7b64-149">タイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b7b64-149">A time-out occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="matchCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7b64-150">コレクションを反復処理する列挙子を提供します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-150">Provides an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="b7b64-151"><see cref="T:System.Text.RegularExpressions.Match" /> 内にあるすべての <see cref="T:System.Text.RegularExpressions.MatchCollection" /> オブジェクトを格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b7b64-151">An object that contains all <see cref="T:System.Text.RegularExpressions.Match" /> objects within the <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7b64-152"><xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> メソッドを呼び出して、コレクション内の <xref:System.Text.RegularExpressions.Match> オブジェクトを反復処理できる列挙子を取得するのではなく、グループイテレーション構成 (in C#や `For Each`... `foreach` など) を使用する必要があり`Next`</span><span class="sxs-lookup"><span data-stu-id="b7b64-152">Instead of  calling the <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Match> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="b7b64-153">Visual Basic)。プログラミング言語によって提供されます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-153">in Visual Basic) provided by your programming language.</span></span>  
  
 <span data-ttu-id="b7b64-154"><xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> メソッド (またはのC# `foreach` ステートメント、および`Next` の `For Each`... Visual Basic ステートメント) を使用して <xref:System.Text.RegularExpressions.MatchCollection> オブジェクトのメンバーを反復すると、正規表現エンジンによって、レイジー評価を使用して必要に応じてコレクションにデータが挿入されます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-154">Iterating the members of the <xref:System.Text.RegularExpressions.MatchCollection> object using the <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> method (or the `foreach` statement in C# and the `For Each`...`Next` statement in Visual Basic) causes the regular expression engine to populate the collection on an as needed basis using lazy evaluation.</span></span> <span data-ttu-id="b7b64-155">これは、<xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> メソッドを繰り返し呼び出し、結果として得られる一致を <xref:System.Text.RegularExpressions.MatchCollection> オブジェクトに追加することに似ています。</span><span class="sxs-lookup"><span data-stu-id="b7b64-155">This is analogous to repeatedly calling the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> method, and then adding the resulting match to the <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="b7b64-156">これに対して、正規表現エンジンは、直接評価を使用して、<xref:System.Text.RegularExpressions.MatchCollection.Count%2A> プロパティにアクセスしたときにコレクションをすべて一度に設定します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-156">In contrast, the regular expression engine uses direct evaluation to populate the collection all at once when the <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property is accessed.</span></span> <span data-ttu-id="b7b64-157">これは、レイジー評価よりもはるかに負荷の高い方法でコレクションを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-157">This can be a much more expensive method of building the collection than lazy evaluation.</span></span>  
  
 <span data-ttu-id="b7b64-158"><xref:System.Text.RegularExpressions.MatchCollection> オブジェクトは通常レイジー評価を使用して設定されるため、コレクションの次のメンバーに移動しようとすると、<xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外がスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-158">Because the <xref:System.Text.RegularExpressions.MatchCollection> object is generally populated by using lazy evaluation, trying to navigate to the next member of the collection may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="b7b64-159">この例外は、照合操作のタイムアウト値が有効であり、次の一致を検索する試みがタイムアウト間隔を超えた場合にスローされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-159">This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find the next match exceeds that time-out interval.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="b7b64-160">タイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b7b64-160">A time-out occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Text.RegularExpressions.MatchCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7b64-161">コレクションが読み取り専用かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-161">Gets a value that indicates whether the collection is read only.</span></span></summary>
        <value><span data-ttu-id="b7b64-162">すべてのケースで <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="b7b64-162"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b7b64-163">読み取り専用のコレクションでは、コレクションの作成後に要素を追加または削除することはできません。</span><span class="sxs-lookup"><span data-stu-id="b7b64-163">A collection that is read-only does not allow the addition or removal of elements after the collection is created.</span></span> <span data-ttu-id="b7b64-164">このコンテキストでの読み取り専用は、コレクションの個々の要素を変更できるかどうかを示すものではないことに注意してください。 <xref:System.Collections.Generic.ICollection%601> インターフェイスは、追加と削除の操作のみをサポートするためです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-164">Note that read-only in this context does not indicate whether individual elements of the collection can be modified, since the <xref:System.Collections.Generic.ICollection%601> interface only supports addition and removal operations.</span></span> <span data-ttu-id="b7b64-165">たとえば、<xref:System.Collections.Generic.ICollection%601> オブジェクトにキャストまたは変換される配列の <xref:System.Collections.Generic.ICollection%601.IsReadOnly%2A> プロパティは、個々の配列要素を変更できる場合でも `true`を返します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-165">For example, the <xref:System.Collections.Generic.ICollection%601.IsReadOnly%2A> property of an array that is cast or converted to an <xref:System.Collections.Generic.ICollection%601> object returns `true`, even though individual array elements can be modified.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Text.RegularExpressions.MatchCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7b64-166">コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-166">Gets a value indicating whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="b7b64-167">すべてのケースで <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b7b64-167"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="b7b64-168">このメンバーは [!INCLUDE[net_portable](~/includes/net-portable-md.md)]に存在しません。</span><span class="sxs-lookup"><span data-stu-id="b7b64-168">This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span></span> <span data-ttu-id="b7b64-169">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]を対象とするアプリケーションを開発している場合は、代わりに <xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-169">If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.RegularExpressions.MatchCollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Text.RegularExpressions.Match this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.Match Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(i As Integer) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::RegularExpressions::Match ^ default[int] { System::Text::RegularExpressions::Match ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.MatchCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="b7b64-170"><see cref="T:System.Text.RegularExpressions.Match" /> コレクション内のインデックス。</span><span class="sxs-lookup"><span data-stu-id="b7b64-170">Index into the <see cref="T:System.Text.RegularExpressions.Match" /> collection.</span></span></param>
        <summary><span data-ttu-id="b7b64-171">コレクションの個別のメンバーを取得します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-171">Gets an individual member of the collection.</span></span></summary>
        <value><span data-ttu-id="b7b64-172">コレクション内の <paramref name="i" /> の位置にあるキャプチャされた部分文字列。</span><span class="sxs-lookup"><span data-stu-id="b7b64-172">The captured substring at position <paramref name="i" /> in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7b64-173">でC#は、<xref:System.Text.RegularExpressions.MatchCollection.Item%2A> プロパティはインデクサーです。これはコード内で明示的に参照されませんが、代わりに、配列と同じように <xref:System.Text.RegularExpressions.MatchCollection> コレクションにアクセスすることができます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-173">In C#, the <xref:System.Text.RegularExpressions.MatchCollection.Item%2A> property is an indexer; it is not explicitly referenced in code, but instead allows the <xref:System.Text.RegularExpressions.MatchCollection> collection to be accessed as if it were an array.</span></span>  
  
 <span data-ttu-id="b7b64-174">通常、<xref:System.Text.RegularExpressions.MatchCollection> オブジェクト内の個々の項目は、コレクション内の項目の合計数が <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> プロパティから決定された後にのみ、インデックスによってアクセスされます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-174">Typically, individual items in the <xref:System.Text.RegularExpressions.MatchCollection> object are accessed by their index only after the total number of items in the collection has been determined from the <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property.</span></span> <span data-ttu-id="b7b64-175">ただし、<xref:System.Text.RegularExpressions.MatchCollection.Count%2A> プロパティにアクセスすると、正規表現エンジンは直接評価を使用してコレクションを一度に1つずつビルドします。</span><span class="sxs-lookup"><span data-stu-id="b7b64-175">However, accessing the <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property causes the regular expression engine to use direct evaluation to build the collection all at once.</span></span> <span data-ttu-id="b7b64-176">通常、これは、<xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> メソッド、 C# `foreach` ステートメント、または Visual Basic `For Each`...`Next` ステートメントを使用してコレクションを反復処理するよりもコストが高くなります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-176">This is typically more expensive than iterating the collection using the <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> method, the C# `foreach` statement, or the Visual Basic `For Each`...`Next` statement.</span></span>  
  
 <span data-ttu-id="b7b64-177"><xref:System.Text.RegularExpressions.MatchCollection> オブジェクトは一般にレイジー評価を使用して設定されるため、特定の一致に移動しようとすると、<xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外がスローされる場合があります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-177">Because the <xref:System.Text.RegularExpressions.MatchCollection> object is generally populated by using lazy evaluation, trying to navigate to a specific match may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="b7b64-178">この例外は、照合操作のタイムアウト値が有効で、特定の一致を検索する試みがタイムアウト間隔を超えた場合にスローされることがあります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-178">This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a specific match exceeds that time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7b64-179">次の例では、 *7 つの*Nathaniel Hawthorne の家の最初の文を解析し、大文字または小文字の "h" で始まるすべての単語を含む <xref:System.Text.RegularExpressions.MatchCollection> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-179">The following example parses the first sentence of Nathaniel Hawthorne's *House of the Seven Gables* and returns a <xref:System.Text.RegularExpressions.MatchCollection> object that contains all words that begin with either an uppercase or lowercase "h".</span></span> <span data-ttu-id="b7b64-180">次に、<xref:System.Text.RegularExpressions.MatchCollection.Item%2A> プロパティを使用して各単語を取得し、コンソールに表示します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-180">The <xref:System.Text.RegularExpressions.MatchCollection.Item%2A> property is then used to retrieve each word and display it to the console.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.MatchCollection.Item/cs/RegEx_24804.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.MatchCollection.Item/vb/RegEx_24804.vb" id="Snippet1":::
  
 <span data-ttu-id="b7b64-181">この例では次の出力が生成されます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-181">The example produces the following output:</span></span>  
  
```  
Half  
house  
huge  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b7b64-182"><paramref name="i" /> が 0 未満、または <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> 以上です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-182"><paramref name="i" /> is less than 0 or greater than or equal to <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="b7b64-183">タイムアウトが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b7b64-183">A time-out occurred.</span></span></exception>
        <altmember cref="P:System.Text.RegularExpressions.MatchCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Text.RegularExpressions.MatchCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7b64-184">コレクションへのアクセスを同期するためのオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-184">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="b7b64-185">コレクションへのアクセスの同期に使用できるオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-185">An object that can be used to synchronize access to the collection.</span></span> <span data-ttu-id="b7b64-186">このプロパティは常にオブジェクト自体を返します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-186">This property always returns the object itself.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="b7b64-187">このメンバーは [!INCLUDE[net_portable](~/includes/net-portable-md.md)]に存在しません。</span><span class="sxs-lookup"><span data-stu-id="b7b64-187">This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span></span> <span data-ttu-id="b7b64-188">[!INCLUDE[net_portable](~/includes/net-portable-md.md)]を対象とするアプリケーションを開発している場合は、代わりに <xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-188">If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;Match&gt;.Add (System.Text.RegularExpressions.Match item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Add(class System.Text.RegularExpressions.Match item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Match&gt;#Add(System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As Match) Implements ICollection(Of Match).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Add(System::Text::RegularExpressions::Match ^ item) = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Match ^&gt;::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Add : System.Text.RegularExpressions.Match -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Add : System.Text.RegularExpressions.Match -&gt; unit" Usage="matchCollection.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Match" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b7b64-189">コレクションに追加するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b7b64-189">The object to add to the collection.</span></span></param>
        <summary><span data-ttu-id="b7b64-190">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-190">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7b64-191">コレクションが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-191">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;Match&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Match&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of Match).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Clear() = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Match ^&gt;::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Clear : unit -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Clear : unit -&gt; unit" Usage="matchCollection.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7b64-192">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-192">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b7b64-193"><xref:System.Collections.Generic.ICollection%601.Count%2A> を0に設定し、コレクションの要素から他のオブジェクトへの参照を解放する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-193"><xref:System.Collections.Generic.ICollection%601.Count%2A> must be set to 0, and references to other objects from elements of the collection must be released.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7b64-194">コレクションが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-194">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Match&gt;.Contains (System.Text.RegularExpressions.Match item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Contains(class System.Text.RegularExpressions.Match item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Match&gt;#Contains(System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Match) As Boolean Implements ICollection(Of Match).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Contains(System::Text::RegularExpressions::Match ^ item) = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Match ^&gt;::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Contains : System.Text.RegularExpressions.Match -&gt; bool&#xA;override this.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Contains : System.Text.RegularExpressions.Match -&gt; bool" Usage="matchCollection.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Match" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b7b64-195">コレクション内で検索するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b7b64-195">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="b7b64-196">特定の値がコレクション内に存在するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-196">Determines whether the collection contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="b7b64-197"><paramref name="item" /> がコレクション内に存在する場合は <see langword="true" />、それ以外の場合は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-197"><see langword="true" /> if <paramref name="item" /> is found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Match&gt;.Remove (System.Text.RegularExpressions.Match item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Remove(class System.Text.RegularExpressions.Match item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Match&gt;#Remove(System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As Match) As Boolean Implements ICollection(Of Match).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Remove(System::Text::RegularExpressions::Match ^ item) = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Match ^&gt;::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Remove : System.Text.RegularExpressions.Match -&gt; bool&#xA;override this.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Remove : System.Text.RegularExpressions.Match -&gt; bool" Usage="matchCollection.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Match" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b7b64-198">コレクションから削除するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-198">The object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="b7b64-199">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-199">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="b7b64-200"><paramref name="item" /> がコレクションから正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b7b64-200"><see langword="true" /> if <paramref name="item" /> was successfully removed from the collection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b7b64-201">また、このメソッドは、元のコレクションに <paramref name="item" /> が見つからない場合にも <see langword="false" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-201">This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7b64-202">コレクションが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-202">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Text.RegularExpressions.Match&gt; IEnumerable&lt;Match&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Text.RegularExpressions.Match&gt; System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable&lt;System#Text#RegularExpressions#Match&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Match) Implements IEnumerable(Of Match).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Text::RegularExpressions::Match ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Text::RegularExpressions::Match ^&gt;::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Text.RegularExpressions.Match&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Text.RegularExpressions.Match&gt;" Usage="matchCollection.System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Text.RegularExpressions.Match&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7b64-203">コレクションを反復処理する列挙子を返します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-203">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="b7b64-204">コレクションの繰り返し処理に使用できる列挙子です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-204">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b7b64-205">返される <xref:System.Collections.Generic.IEnumerator%601> は、<xref:System.Collections.Generic.IEnumerator%601.Current%2A> プロパティを公開することによって、コレクションを反復処理する機能を提供します。列挙子を使用してコレクション内のデータを読み取ることはできますが、コレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="b7b64-205">The returned <xref:System.Collections.Generic.IEnumerator%601> provides the ability to iterate through the collection by exposing a <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property .You can use enumerators to read the data in a collection, but not to modify the collection.</span></span>   
 <span data-ttu-id="b7b64-206">最初、列挙子はコレクションの先頭の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-206">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="b7b64-207">この位置では、<xref:System.Collections.Generic.IEnumerator%601.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-207">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="b7b64-208">そのため、<xref:System.Collections.Generic.IEnumerator%601.Current%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.MoveNext%2A> メソッドを呼び出し、列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-208">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>   
 <span data-ttu-id="b7b64-209"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> は、次の要素に <xref:System.Collections.Generic.IEnumerator%601.Current%2A> を設定 <xref:System.Collections.IEnumerator.MoveNext%2A> として <xref:System.Collections.IEnumerator.MoveNext%2A> が再度呼び出されるまで、同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-209"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called again as <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>   
 <span data-ttu-id="b7b64-210"><xref:System.Collections.IEnumerator.MoveNext%2A> がコレクションの末尾を通過した場合、列挙子がコレクション内の最後の要素の後に配置され、<xref:System.Collections.IEnumerator.MoveNext%2A> は `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-210">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="b7b64-211">列挙子がこの位置にある場合、後続の <xref:System.Collections.IEnumerator.MoveNext%2A> 呼び出しも `false` を返します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-211">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="b7b64-212"><xref:System.Collections.IEnumerator.MoveNext%2A> の最後の呼び出しが `false`を返した場合、<xref:System.Collections.Generic.IEnumerator%601.Current%2A> は定義されていません。</span><span class="sxs-lookup"><span data-stu-id="b7b64-212">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="b7b64-213"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> を、再度、コレクションの最初の要素に設定することはできません。列挙子の新しいインスタンスを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-213">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>   <span data-ttu-id="b7b64-214">要素の追加、変更、削除などの変更がコレクションに対して行われた場合、列挙子の動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-214">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>   
 <span data-ttu-id="b7b64-215">列挙子はコレクションに排他的にアクセスできないため、コレクションが変更されていない限り、列挙子は有効なままです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-215">An enumerator does not have exclusive access to the collection so an enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="b7b64-216">要素の追加、変更、削除などの変更がコレクションに対して行われた場合、列挙子は無効になり、予期しない結果が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-216">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is invalidated and you may get unexpected results.</span></span> <span data-ttu-id="b7b64-217">また、コレクションの列挙はスレッドセーフなプロシージャではありません。</span><span class="sxs-lookup"><span data-stu-id="b7b64-217">Also, enumerating a collection is not a thread-safe procedure.</span></span> <span data-ttu-id="b7b64-218">スレッドセーフを保証するには、列挙子の間にコレクションをロックするか、コレクションに対して同期を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-218">To guarantee thread-safety, you should lock the collection during enumerator or implement synchronization on the collection.</span></span>   
 <span data-ttu-id="b7b64-219"><xref:System.Collections.Generic?displayProperty=nameWithType> 名前空間のコレクションの既定の実装は同期されません。</span><span class="sxs-lookup"><span data-stu-id="b7b64-219">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace aren't synchronized.</span></span>   
 
          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7b64-220">コレクションが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-220">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.IndexOf">
      <MemberSignature Language="C#" Value="int IList&lt;Match&gt;.IndexOf (System.Text.RegularExpressions.Match item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.IndexOf(class System.Text.RegularExpressions.Match item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Match&gt;#IndexOf(System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Match) As Integer Implements IList(Of Match).IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.IndexOf(System::Text::RegularExpressions::Match ^ item) = System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Match ^&gt;::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.IndexOf : System.Text.RegularExpressions.Match -&gt; int&#xA;override this.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.IndexOf : System.Text.RegularExpressions.Match -&gt; int" Usage="matchCollection.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Match" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="b7b64-221">コレクション内で検索するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b7b64-221">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="b7b64-222">コレクション内の特定のアイテムのインデックスを示します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-222">Determines the index of a specific item in the collection.</span></span></summary>
        <returns><span data-ttu-id="b7b64-223">リストに存在する場合は <paramref name="item" /> のインデックス。それ以外の場合は -1。</span><span class="sxs-lookup"><span data-stu-id="b7b64-223">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b7b64-224">オブジェクトがリスト内に複数回出現する場合、<xref:System.Collections.Generic.IList%601.IndexOf%2A> メソッドは最初に見つかったものを常に返します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-224">If an object occurs multiple times in the list, the <xref:System.Collections.Generic.IList%601.IndexOf%2A> method always returns the first instance found.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;Match&gt;.Insert (int index, System.Text.RegularExpressions.Match item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Insert(int32 index, class System.Text.RegularExpressions.Match item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Match&gt;#Insert(System.Int32,System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Match) Implements IList(Of Match).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Insert(int index, System::Text::RegularExpressions::Match ^ item) = System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Match ^&gt;::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Insert : int * System.Text.RegularExpressions.Match -&gt; unit&#xA;override this.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Insert : int * System.Text.RegularExpressions.Match -&gt; unit" Usage="matchCollection.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="item" Type="System.Text.RegularExpressions.Match" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b7b64-225"><paramref name="item" /> の挿入先である、0 から始まるインデックスです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-225">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="b7b64-226">コレクションに挿入するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-226">The object to insert into the collection.</span></span></param>
        <summary><span data-ttu-id="b7b64-227">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-227">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7b64-228">コレクションが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-228">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Item">
      <MemberSignature Language="C#" Value="System.Text.RegularExpressions.Match System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.Match System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Match&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Match Implements IList(Of Match).Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Text::RegularExpressions::Match ^ System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Match&gt;::Item[int] { System::Text::RegularExpressions::Match ^ get(int index); void set(int index, System::Text::RegularExpressions::Match ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Item(int) : System.Text.RegularExpressions.Match with get, set" Usage="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b7b64-229">取得する要素の 0 から始まるインデックスです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-229">The zero-based index of the element to get.</span></span></param>
        <summary><span data-ttu-id="b7b64-230">指定されたインデックス位置の要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-230">Gets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="b7b64-231">指定されたインデックス位置の要素です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-231">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b7b64-232">このプロパティは、構文 `myCollection[index]` を使用して、コレクションの特定の要素にアクセスする機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-232">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>   
 <span data-ttu-id="b7b64-233">このC#言語では、<xref:System.Collections.Generic.IList%601.Item%2A> プロパティを実装する代わりに、 [this](/dotnet/csharp/language-reference/keywords/this)キーワードを使用してインデクサーを定義します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-233">The C# language uses the [this](/dotnet/csharp/language-reference/keywords/this) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.IList%601.Item%2A> property.</span></span> <span data-ttu-id="b7b64-234">Visual Basic は、<xref:System.Collections.Generic.IList%601.Item%2A> を[既定のプロパティ](/dotnet/visual-basic/language-reference/modifiers/default)として実装します。これにより、同じインデックス作成機能が提供されます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-234">Visual Basic implements <xref:System.Collections.Generic.IList%601.Item%2A> as a [default property](/dotnet/visual-basic/language-reference/modifiers/default), which provides the same indexing functionality.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;Match&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Match&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of Match).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Match ^&gt;::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.RemoveAt : int -&gt; unit" Usage="matchCollection.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b7b64-235">削除する項目の、0 から始まるインデックスです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-235">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="b7b64-236">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-236">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7b64-237">コレクションが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-237">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, arrayIndex As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="matchCollection.System.Collections.ICollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="b7b64-238">コレクションのコピー先の 1 次元配列。</span><span class="sxs-lookup"><span data-stu-id="b7b64-238">The one-dimensional array the collection is to be copied into.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="b7b64-239">コピーの開始位置となる、配列内の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="b7b64-239">The zero-based index in the array where copying is to begin.</span></span></param>
        <summary><span data-ttu-id="b7b64-240">指定したインデックスを開始位置として、指定した配列にコレクションのすべての要素をコピーします。</span><span class="sxs-lookup"><span data-stu-id="b7b64-240">Copies all the elements of the collection to the specified array starting at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b7b64-241"><paramref name="array" /> は、多次元配列です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-241"><paramref name="array" /> is a multi-dimensional array.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="b7b64-242"><paramref name="arrayIndex" /> が配列の境界の外側にあります。あるいは、<paramref name="arrayIndex" /> に <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> を加えた値が <paramref name="array" /> の境界の外側にあります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-242"><paramref name="arrayIndex" /> is outside the bounds of array.-or-<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> is outside the bounds of <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7b64-243">コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-243">Gets a value that indicates whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="b7b64-244">常に false。</span><span class="sxs-lookup"><span data-stu-id="b7b64-244">false in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b7b64-245">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-245">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b7b64-246">これは、<xref:System.Text.RegularExpressions.MatchCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-246">It can be used only when the <xref:System.Text.RegularExpressions.MatchCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7b64-247">コレクションへのアクセスを同期するためのオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-247">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="b7b64-248">コレクションへのアクセスの同期に使用できるオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-248">An object that can be used to synchronize access to the collection.</span></span> <span data-ttu-id="b7b64-249">このプロパティは常にオブジェクト自体を返します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-249">This property always returns the object itself.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b7b64-250">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-250">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b7b64-251">これは、<xref:System.Text.RegularExpressions.MatchCollection> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-251">It can be used only when the <xref:System.Text.RegularExpressions.MatchCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>
 
           ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="matchCollection.System.Collections.IList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7b64-252">コレクションに追加するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b7b64-252">The object to add to the collection.</span></span></param>
        <summary><span data-ttu-id="b7b64-253">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-253">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="b7b64-254">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-254">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7b64-255">コレクションが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-255">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Clear : unit -&gt; unit&#xA;override this.System.Collections.IList.Clear : unit -&gt; unit" Usage="matchCollection.System.Collections.IList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7b64-256">すべてのアイテムをコレクションから削除します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-256">Removes all items from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b7b64-257">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-257">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b7b64-258">これは、<xref:System.Text.RegularExpressions.MatchCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-258">It can be used only when the <xref:System.Text.RegularExpressions.MatchCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>
 
 
 
 <span data-ttu-id="b7b64-259">このメソッドの実装は、<xref:System.Collections.ICollection.Count%2A?displayProperty=nameWithType> とコレクションの容量をどのように処理するかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="b7b64-259">Implementations of this method can vary in how they handle the <xref:System.Collections.ICollection.Count%2A?displayProperty=nameWithType> and the capacity of a collection.</span></span> <span data-ttu-id="b7b64-260">通常、カウントは0に設定され、コレクションの要素から他のオブジェクトへの参照も解放されます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-260">Typically, the count is set to zero, and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="b7b64-261">容量を0または既定値に設定することも、変更しないままにすることもできます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-261">The capacity can be set to zero or a default value, or it can remain unchanged.</span></span>   
 
          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7b64-262">コレクションが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-262">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="matchCollection.System.Collections.IList.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7b64-263">コレクション内で検索するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b7b64-263">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="b7b64-264">特定の値がコレクション内に存在するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-264">Determines whether the collection contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="b7b64-265"><see cref="T:System.Object" /> がコレクション内で見つかった場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b7b64-265"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b7b64-266">.NET Framework 2.0 以降では、このメソッドは `item` でコレクションのオブジェクトの <xref:System.Object.Equals%2A> と <xref:System.IComparable.CompareTo%2A> メソッドを使用して、項目が存在するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-266">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="b7b64-267">以前のバージョンの .NET Framework では、この決定は、コレクション内のオブジェクトの `item` パラメーターの <xref:System.Object.Equals%2A> メソッドと <xref:System.IComparable.CompareTo%2A> メソッドを使用して行われていました。</span><span class="sxs-lookup"><span data-stu-id="b7b64-267">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>   
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="matchCollection.System.Collections.IList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7b64-268">コレクション内で検索するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b7b64-268">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="b7b64-269">コレクション内の特定のアイテムのインデックスを示します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-269">Determines the index of a specific item in the collection.</span></span></summary>
        <returns><span data-ttu-id="b7b64-270">リストに存在する場合は <paramref name="value" /> のインデックス。それ以外の場合は -1。</span><span class="sxs-lookup"><span data-stu-id="b7b64-270">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b7b64-271">.NET Framework 2.0 以降では、このメソッドは `item` でコレクションのオブジェクトの <xref:System.Object.Equals%2A> と <xref:System.IComparable.CompareTo%2A> メソッドを使用して、項目が存在するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-271">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="b7b64-272">以前のバージョンの .NET Framework では、この決定は、コレクション内のオブジェクトの `item` パラメーターの <xref:System.Object.Equals%2A> メソッドと <xref:System.IComparable.CompareTo%2A> メソッドを使用して行われていました。</span><span class="sxs-lookup"><span data-stu-id="b7b64-272">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>   
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="matchCollection.System.Collections.IList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b7b64-273"><paramref name="value" /> の挿入先である、0 から始まるインデックスです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-273">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="b7b64-274">コレクションに挿入するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-274">The object to insert into the collection.</span></span></param>
        <summary><span data-ttu-id="b7b64-275">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-275">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7b64-276">コレクションが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-276">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7b64-277">コレクションが固定サイズかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-277">Gets a value indicating whether the collection has a fixed size.</span></span></summary>
        <value><span data-ttu-id="b7b64-278">[https://login.microsoftonline.com/consumers/](<see langword="true" />)</span><span class="sxs-lookup"><span data-stu-id="b7b64-278"><see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b7b64-279">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b7b64-280">これは、<xref:System.Text.RegularExpressions.MatchCollection> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-280">It can be used only when the <xref:System.Text.RegularExpressions.MatchCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>
 
 
 
 <span data-ttu-id="b7b64-281">固定サイズのコレクションでは、コレクションの作成後に要素の追加または削除はできませんが、既存の要素の変更はできます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-281">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>   
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b7b64-282">取得する要素の 0 から始まるインデックスです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-282">The zero-based index of the element to get.</span></span></param>
        <summary><span data-ttu-id="b7b64-283">指定されたインデックス位置の要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-283">Gets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="b7b64-284">指定されたインデックス位置の要素です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-284">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="b7b64-285">このプロパティは、構文 `myCollection[index]` を使用して、コレクションの特定の要素にアクセスする機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-285">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>   
 <span data-ttu-id="b7b64-286">このC#言語では、<xref:System.Collections.IList.Item%2A> プロパティを実装する代わりに、 [this](/dotnet/csharp/language-reference/keywords/this)キーワードを使用してインデクサーを定義します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-286">The C# language uses the [this](/dotnet/csharp/language-reference/keywords/this) keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property.</span></span> <span data-ttu-id="b7b64-287">Visual Basic は、<xref:System.Collections.IList.Item%2A> を既定のプロパティとして実装しており、同様のインデックス機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="b7b64-287">Visual Basic implements <xref:System.Collections.IList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>   
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="matchCollection.System.Collections.IList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7b64-288">コレクションから削除するオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-288">The object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="b7b64-289">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-289">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7b64-290">コレクションが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-290">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.IList.RemoveAt : int -&gt; unit" Usage="matchCollection.System.Collections.IList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="b7b64-291">削除する項目の、0 から始まるインデックスです。</span><span class="sxs-lookup"><span data-stu-id="b7b64-291">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="b7b64-292">このメソッドを呼び出すと、必ず <see cref="T:System.NotSupportedException" />がスローされます。</span><span class="sxs-lookup"><span data-stu-id="b7b64-292">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b7b64-293">コレクションが読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="b7b64-293">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
