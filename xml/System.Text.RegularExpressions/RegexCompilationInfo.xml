<Type Name="RegexCompilationInfo" FullName="System.Text.RegularExpressions.RegexCompilationInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0341d43339b5276298b0f1ef5a49aeec5a785135" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75159415" /></Metadata><TypeSignature Language="C#" Value="public class RegexCompilationInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RegexCompilationInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.RegexCompilationInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class RegexCompilationInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegexCompilationInfo" />
  <TypeSignature Language="F#" Value="type RegexCompilationInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="74916-101">正規表現をコンパイルしてスタンドアロン アセンブリを作成するために使用する正規表現についての情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="74916-101">Provides information about a regular expression that is used to compile a regular expression to a stand-alone assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74916-102">アセンブリに含める各正規表現に関する情報を提供するために、<xref:System.Text.RegularExpressions.RegexCompilationInfo> オブジェクトの配列が <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="74916-102">An array of <xref:System.Text.RegularExpressions.RegexCompilationInfo> objects is passed to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method to provide information about each regular expression to be included in the assembly.</span></span> <span data-ttu-id="74916-103">アセンブリに含まれているコンパイル済みの各正規表現は、<xref:System.Text.RegularExpressions.Regex>から派生したクラスとして表されます。</span><span class="sxs-lookup"><span data-stu-id="74916-103">Each compiled regular expression that is included in the assembly is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="74916-104"><xref:System.Text.RegularExpressions.RegexCompilationInfo> 型のプロパティは、正規表現のクラス名、その完全修飾名 (名前空間とその型名)、正規表現パターン、追加オプション (正規表現が大文字と小文字を区別しないかどうかなど)、および正規表現エンジンが一致を検索する期間を指定するタイムアウト間隔を定義します。</span><span class="sxs-lookup"><span data-stu-id="74916-104">The properties of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> type define the regular expression's class name, its fully qualified name (that is, its namespace and its type name), its regular expression pattern, any additional options (such as whether the regular expression is case-insensitive), and a time-out interval that specifies how long the regular expression engine should search for a match.</span></span>  
  
 <span data-ttu-id="74916-105">オーバーロードされたクラスコンストラクターを呼び出すことによって、<xref:System.Text.RegularExpressions.RegexCompilationInfo> オブジェクトをインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="74916-105">You can instantiate a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object by calling its overloaded class constructor.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Text.RegularExpressions.Regex.CompileToAssembly" />
    <related type="Article" href="~/docs/standard/base-types/compilation-and-reuse-in-regular-expressions.md"><span data-ttu-id="74916-106">コンパイルと再利用</span><span class="sxs-lookup"><span data-stu-id="74916-106">Compilation and Reuse</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="74916-107"><see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="74916-107">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class.</span></span></summary>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="74916-108">正規表現言語要素</span><span class="sxs-lookup"><span data-stu-id="74916-108">Regular Expression Language Elements</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexCompilationInfo : string * System.Text.RegularExpressions.RegexOptions * string * string * bool -&gt; System.Text.RegularExpressions.RegexCompilationInfo" Usage="new System.Text.RegularExpressions.RegexCompilationInfo (pattern, options, name, fullnamespace, ispublic)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fullnamespace" Type="System.String" />
        <Parameter Name="ispublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="74916-109">コンパイルする正規表現。</span><span class="sxs-lookup"><span data-stu-id="74916-109">The regular expression to compile.</span></span></param>
        <param name="options"><span data-ttu-id="74916-110">正規表現をコンパイルするときに使用する正規表現オプション。</span><span class="sxs-lookup"><span data-stu-id="74916-110">The regular expression options to use when compiling the regular expression.</span></span></param>
        <param name="name"><span data-ttu-id="74916-111">コンパイル済みの正規表現を表す型の名前。</span><span class="sxs-lookup"><span data-stu-id="74916-111">The name of the type that represents the compiled regular expression.</span></span></param>
        <param name="fullnamespace"><span data-ttu-id="74916-112">新しい型の所属先となる名前空間。</span><span class="sxs-lookup"><span data-stu-id="74916-112">The namespace to which the new type belongs.</span></span></param>
        <param name="ispublic"><span data-ttu-id="74916-113">コンパイルされた正規表現をパブリックに参照できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74916-113"><see langword="true" /> to make the compiled regular expression publicly visible; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="74916-114">アセンブリに含める正規表現についての情報を格納する <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="74916-114">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression to be included in an assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74916-115"><xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> コンストラクターの各パラメーターは、<xref:System.Text.RegularExpressions.RegexCompilationInfo> クラスのプロパティに直接対応します。</span><span class="sxs-lookup"><span data-stu-id="74916-115">Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class.</span></span> <span data-ttu-id="74916-116">すべてのプロパティは読み取り/書き込み可能であるため、それらの値も直接割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="74916-116">Because all properties are read/write, their values can also be assigned directly.</span></span>  
  
 <span data-ttu-id="74916-117"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> メソッドは、コンパイルされた正規表現を含むアセンブリを生成します。</span><span class="sxs-lookup"><span data-stu-id="74916-117">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="74916-118">したがって、`options`の値の1つとして <xref:System.Text.RegularExpressions.RegexOptions.Compiled> を指定しないでください。</span><span class="sxs-lookup"><span data-stu-id="74916-118">Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of `options`.</span></span>  
  
 <span data-ttu-id="74916-119">`ispublic` が `true`場合、コンパイルされた正規表現クラスにはパブリックアクセシビリティが与えられます。</span><span class="sxs-lookup"><span data-stu-id="74916-119">If `ispublic` is `true`, the compiled regular expression class is given public accessibility.</span></span> <span data-ttu-id="74916-120">つまり、任意のアセンブリで実行されるコードからインスタンス化することができます。</span><span class="sxs-lookup"><span data-stu-id="74916-120">That is, it can be instantiated from code that executes in any assembly.</span></span> <span data-ttu-id="74916-121">`ispublic` が `false`場合は、コンパイルされた正規表現クラスに `internal` C#(の場合) または `Friend` (Visual Basic) アクセシビリティが与えられます。</span><span class="sxs-lookup"><span data-stu-id="74916-121">If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility.</span></span> <span data-ttu-id="74916-122">つまり、正規表現クラスと同じアセンブリで実行されるコードからのみインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="74916-122">That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74916-123">次の例では、コンパイルされた正規表現を作成し、2つの手順で使用します。</span><span class="sxs-lookup"><span data-stu-id="74916-123">The following example creates and uses a compiled regular expression in two steps.</span></span>  
  
 <span data-ttu-id="74916-124">最初の手順で、次のコード例をコンパイルして実行します。</span><span class="sxs-lookup"><span data-stu-id="74916-124">In the first step, compile and execute the following code example.</span></span> <span data-ttu-id="74916-125">コード例の <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A> コンストラクターは、コンパイルされた正規表現を定義します。</span><span class="sxs-lookup"><span data-stu-id="74916-125">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%2A> constructor in the code example defines a compiled regular expression.</span></span> <span data-ttu-id="74916-126">コードを実行した結果、`FishRegex`という名前のコンパイルされた正規表現型を含む FishRegex という名前のアセンブリが生成されます。</span><span class="sxs-lookup"><span data-stu-id="74916-126">The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named `FishRegex`.</span></span>  
  
 [!code-csharp[sys.txt.rgxCompInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/genFishRegex.cs#1)]
 [!code-vb[sys.txt.rgxCompInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/genFishRegex.vb#1)]  
  
 <span data-ttu-id="74916-127">2番目の手順では、FishRegex への参照を使用して次のコード例をコンパイルし、生成された実行可能ファイルを実行します。</span><span class="sxs-lookup"><span data-stu-id="74916-127">In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file.</span></span> <span data-ttu-id="74916-128">実行可能ファイルは、`FishRegex` の種類を使用して対象の文字列と一致し、ターゲット文字列内の一致の一致、グループ、キャプチャグループ、およびインデックス位置を表示します。</span><span class="sxs-lookup"><span data-stu-id="74916-128">The executable file matches a target string by using the `FishRegex` type, and displays the match, group, capture group, and index position of the matches in the target string.</span></span>  
  
 [!code-csharp[sys.txt.rgxCompInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/sys.txt.rgxCompInfo/cs/useFishRegex.cs#2)]
 [!code-vb[sys.txt.rgxCompInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/sys.txt.rgxCompInfo/vb/useFishRegex.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="74916-129"><paramref name="name" /> は <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="74916-129"><paramref name="name" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="74916-130"><paramref name="pattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74916-130"><paramref name="pattern" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="74916-131">または</span><span class="sxs-lookup"><span data-stu-id="74916-131">-or-</span></span> 
 <span data-ttu-id="74916-132"><paramref name="name" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74916-132"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="74916-133">または</span><span class="sxs-lookup"><span data-stu-id="74916-133">-or-</span></span> 
 <span data-ttu-id="74916-134"><paramref name="fullnamespace" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74916-134"><paramref name="fullnamespace" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="74916-135">このコンストラクターは、作成されたアプリケーションドメインの既定のタイムアウト値を使用するコンパイル済みの正規表現を作成します。</span><span class="sxs-lookup"><span data-stu-id="74916-135">This constructor creates a compiled regular expression that uses the default time-out value of the application domain in which it is created.</span></span> <span data-ttu-id="74916-136">アプリケーションドメインにタイムアウト値が定義されている場合、コンパイルされた正規表現は <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />値を使用します。これにより、パターン一致操作がタイムアウトするのを防ぐことができます。コンパイル済みの正規表現を作成するために推奨されるコンストラクターは <see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />であり、タイムアウト間隔を設定できます。</span><span class="sxs-lookup"><span data-stu-id="74916-136">If a time-out value is defined for the application domain, the compiled regular expression uses the value <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />, which prevents a pattern-matching operation from timing out. The recommended constructor for creating a compiled regular expression is <see cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />, which lets you set the time-out interval.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, valuetype System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, valuetype System.TimeSpan matchTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String, options As RegexOptions, name As String, fullnamespace As String, ispublic As Boolean, matchTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegexCompilationInfo(System::String ^ pattern, System::Text::RegularExpressions::RegexOptions options, System::String ^ name, System::String ^ fullnamespace, bool ispublic, TimeSpan matchTimeout);" />
      <MemberSignature Language="F#" Value="new System.Text.RegularExpressions.RegexCompilationInfo : string * System.Text.RegularExpressions.RegexOptions * string * string * bool * TimeSpan -&gt; System.Text.RegularExpressions.RegexCompilationInfo" Usage="new System.Text.RegularExpressions.RegexCompilationInfo (pattern, options, name, fullnamespace, ispublic, matchTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="options" Type="System.Text.RegularExpressions.RegexOptions" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="fullnamespace" Type="System.String" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ispublic" Type="System.Boolean" Index="4" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="matchTimeout" Type="System.TimeSpan" Index="5" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="74916-137">コンパイルする正規表現。</span><span class="sxs-lookup"><span data-stu-id="74916-137">The regular expression to compile.</span></span></param>
        <param name="options"><span data-ttu-id="74916-138">正規表現をコンパイルするときに使用する正規表現オプション。</span><span class="sxs-lookup"><span data-stu-id="74916-138">The regular expression options to use when compiling the regular expression.</span></span></param>
        <param name="name"><span data-ttu-id="74916-139">コンパイル済みの正規表現を表す型の名前。</span><span class="sxs-lookup"><span data-stu-id="74916-139">The name of the type that represents the compiled regular expression.</span></span></param>
        <param name="fullnamespace"><span data-ttu-id="74916-140">新しい型の所属先となる名前空間。</span><span class="sxs-lookup"><span data-stu-id="74916-140">The namespace to which the new type belongs.</span></span></param>
        <param name="ispublic"><span data-ttu-id="74916-141">コンパイルされた正規表現をパブリックに参照できるようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74916-141"><see langword="true" /> to make the compiled regular expression publicly visible; otherwise, <see langword="false" />.</span></span></param>
        <param name="matchTimeout"><span data-ttu-id="74916-142">正規表現の既定のタイムアウト間隔。</span><span class="sxs-lookup"><span data-stu-id="74916-142">The default time-out interval for the regular expression.</span></span></param>
        <summary><span data-ttu-id="74916-143">アセンブリに含めるタイムアウト値を指定した正規表現についての情報を格納する <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="74916-143">Initializes a new instance of the <see cref="T:System.Text.RegularExpressions.RegexCompilationInfo" /> class that contains information about a regular expression with a specified time-out value to be included in an assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74916-144"><xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> コンストラクターの各パラメーターは、<xref:System.Text.RegularExpressions.RegexCompilationInfo> クラスのプロパティに直接対応します。</span><span class="sxs-lookup"><span data-stu-id="74916-144">Each parameter of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> constructor directly corresponds to a property of the <xref:System.Text.RegularExpressions.RegexCompilationInfo> class.</span></span> <span data-ttu-id="74916-145">すべてのプロパティは読み取り/書き込み可能であるため、それらの値も直接割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="74916-145">Because all properties are read/write, their values can also be assigned directly.</span></span>  
  
 <span data-ttu-id="74916-146"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> メソッドは、コンパイルされた正規表現を含むアセンブリを生成します。</span><span class="sxs-lookup"><span data-stu-id="74916-146">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="74916-147">したがって、`options`の値の1つとして <xref:System.Text.RegularExpressions.RegexOptions.Compiled> を指定しないでください。</span><span class="sxs-lookup"><span data-stu-id="74916-147">Therefore, you should not specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of `options`.</span></span>  
  
 <span data-ttu-id="74916-148">`ispublic` が `true`場合、コンパイルされた正規表現クラスにはパブリックアクセシビリティが与えられます。</span><span class="sxs-lookup"><span data-stu-id="74916-148">If `ispublic` is `true`, the compiled regular expression class is given public accessibility.</span></span> <span data-ttu-id="74916-149">つまり、任意のアセンブリで実行されるコードからインスタンス化することができます。</span><span class="sxs-lookup"><span data-stu-id="74916-149">That is, it can be instantiated from code that executes in any assembly.</span></span> <span data-ttu-id="74916-150">`ispublic` が `false`場合は、コンパイルされた正規表現クラスに `internal` C#(の場合) または `Friend` (Visual Basic) アクセシビリティが与えられます。</span><span class="sxs-lookup"><span data-stu-id="74916-150">If `ispublic` is `false`, the compiled regular expression class is given `internal` (in C#) or `Friend` (in Visual Basic) accessibility.</span></span> <span data-ttu-id="74916-151">つまり、正規表現クラスと同じアセンブリで実行されるコードからのみインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="74916-151">That is, it can be instantiated only from code that executes in the same assembly as the regular expression class.</span></span>  
  
 <span data-ttu-id="74916-152">`matchTimeout` パラメーターは、コンパイルされた正規表現の既定のタイムアウト間隔を定義します。</span><span class="sxs-lookup"><span data-stu-id="74916-152">The `matchTimeout` parameter defines the default time-out interval for the compiled regular expression.</span></span> <span data-ttu-id="74916-153">この値は、コンパイルされた正規表現オブジェクトが、操作がタイムアウトになる前に1つの一致操作を実行するおおよその時間を表します。この値は、次のタイミングチェックで、正規表現エンジンが <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="74916-153">This value represents the approximate amount of time that a compiled regular expression object will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.</span></span> <span data-ttu-id="74916-154">タイムアウト値の詳細については、「<xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> プロパティ」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="74916-154">For additional information about the time-out value, see the <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="74916-155">コンパイル済みの正規表現には、常に既定のタイムアウト値を設定することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="74916-155">We recommend that you always set a default time-out value for a compiled regular expression.</span></span> <span data-ttu-id="74916-156">正規表現ライブラリのコンシューマーは、このコンストラクターのオーバーロードに新しいタイムアウト間隔を表す <xref:System.TimeSpan> 値を渡すことによって、そのタイムアウト値をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="74916-156">Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to this constructor overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74916-157">次の例では、入力文字列に含まれる同じ文字の複数の出現箇所を識別する `DuplicateChars` という名前の1つのコンパイルされた正規表現を定義します。</span><span class="sxs-lookup"><span data-stu-id="74916-157">The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string.</span></span> <span data-ttu-id="74916-158">コンパイルされた正規表現の既定のタイムアウトは2秒です。</span><span class="sxs-lookup"><span data-stu-id="74916-158">The compiled regular expression has a default time-out of 2 seconds.</span></span> <span data-ttu-id="74916-159">この例を実行すると、コンパイル済みの正規表現を含む RegexLib という名前のクラスライブラリが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74916-159">When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 <span data-ttu-id="74916-160">正規表現パターン `(\w)\1+` は、次の表に示すように定義されています。</span><span class="sxs-lookup"><span data-stu-id="74916-160">The regular expression pattern `(\w)\1+` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="74916-161">[パターン]</span><span class="sxs-lookup"><span data-stu-id="74916-161">Pattern</span></span>|<span data-ttu-id="74916-162">説明</span><span class="sxs-lookup"><span data-stu-id="74916-162">Description</span></span>|  
|-------------|-----------------|  
|`(\w)`|<span data-ttu-id="74916-163">任意の単語文字と一致し、最初のキャプチャグループに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="74916-163">Match any word character and assign it to the first capturing group.</span></span>|  
|`\1+`|<span data-ttu-id="74916-164">最初のキャプチャグループの値の1回以上の出現と一致します。</span><span class="sxs-lookup"><span data-stu-id="74916-164">Match one or more occurrences of the value of the first captured group.</span></span>|  
  
 <span data-ttu-id="74916-165">次の例では、`DuplicatedChars` 正規表現を使用して、文字列配列内の重複する文字を識別します。</span><span class="sxs-lookup"><span data-stu-id="74916-165">The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array.</span></span> <span data-ttu-id="74916-166">`DuplicatedChars` コンストラクターを呼び出すと、タイムアウト間隔が. 5 秒に変更されます。</span><span class="sxs-lookup"><span data-stu-id="74916-166">When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="74916-167"><paramref name="name" /> は <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="74916-167"><paramref name="name" /> is <see cref="F:System.String.Empty" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="74916-168"><paramref name="pattern" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74916-168"><paramref name="pattern" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="74916-169">または</span><span class="sxs-lookup"><span data-stu-id="74916-169">-or-</span></span> 
 <span data-ttu-id="74916-170"><paramref name="name" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74916-170"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="74916-171">または</span><span class="sxs-lookup"><span data-stu-id="74916-171">-or-</span></span> 
 <span data-ttu-id="74916-172"><paramref name="fullnamespace" /> は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74916-172"><paramref name="fullnamespace" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="74916-173"><paramref name="matchTimeout" /> が負の値か、0 か、または約 24 日を超えています。</span><span class="sxs-lookup"><span data-stu-id="74916-173"><paramref name="matchTimeout" /> is negative, zero, or greater than approximately 24 days.</span></span></exception>
        <altmember cref="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.IsPublic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74916-174">コンパイルされた正規表現をパブリックに参照できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="74916-174">Gets or sets a value that indicates whether the compiled regular expression has public visibility.</span></span></summary>
        <value><span data-ttu-id="74916-175">正規表現をパブリックに参照できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="74916-175"><see langword="true" /> if the regular expression has public visibility; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74916-176"><xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A> プロパティが `false`の場合、現在のインスタンスによって定義されている正規表現クラスは、そのクラスを含むアセンブリで実行されているコードによってのみインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="74916-176">If the <xref:System.Text.RegularExpressions.RegexCompilationInfo.IsPublic%2A> property is `false`, the regular expression class defined by the current instance can be instantiated only by code that is executing in the assembly that contains the class.</span></span> <span data-ttu-id="74916-177">ただし、<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType> メソッドはコンパイルされた正規表現のみを含むアセンブリを生成するため、追加のコードを追加することはできません。通常、このプロパティに `false`の値を割り当てる必要はありません。</span><span class="sxs-lookup"><span data-stu-id="74916-177">However, because the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=nameWithType> method generates an assembly that contains only compiled regular expressions and does not allow additional code to be added, there is generally no reason to assign this property a value of `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan MatchTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan MatchTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan MatchTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeout : TimeSpan with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74916-178">正規表現の既定のタイムアウト間隔を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="74916-178">Gets or sets the regular expression's default time-out interval.</span></span></summary>
        <value><span data-ttu-id="74916-179"><see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> がスローされる前にパターン一致操作で経過できる既定の最大時間間隔、またはタイムアウトが無効な場合は <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" />。</span><span class="sxs-lookup"><span data-stu-id="74916-179">The default maximum time interval that can elapse in a pattern-matching operation before a <see cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException" /> is thrown, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout" /> if time-outs are disabled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74916-180"><xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> プロパティは、コンパイルされた正規表現の既定のタイムアウト間隔を定義します。</span><span class="sxs-lookup"><span data-stu-id="74916-180">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A> property defines the default time-out interval for the compiled regular expression.</span></span> <span data-ttu-id="74916-181">この値は、コンパイルされた正規表現が、操作がタイムアウトになる前に単一の一致操作を実行するおおよその時間を表します。この値は、次のタイミングチェックで、正規表現エンジンが <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> 例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="74916-181">This value represents the approximate amount of time that a compiled regular expression will execute a single matching operation before the operation times out and the regular expression engine throws a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception during its next timing check.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="74916-182">コンパイル済みの正規表現には、常に既定のタイムアウト値を設定することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="74916-182">We recommend that you always set a default time-out value for a compiled regular expression.</span></span> <span data-ttu-id="74916-183">正規表現ライブラリのコンシューマーは、新しいタイムアウト間隔を表す <xref:System.TimeSpan> 値を、コンパイルされた正規表現のクラスコンストラクターに渡すことによって、そのタイムアウト値をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="74916-183">Consumers of your regular expression library can override that time-out value by passing a <xref:System.TimeSpan> value that represents the new time-out interval to the compiled regular expression's class constructor.</span></span>  
  
 <span data-ttu-id="74916-184">次のいずれかの方法で、<xref:System.Text.RegularExpressions.RegexCompilationInfo> オブジェクトに既定のタイムアウト値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="74916-184">You can assign a default time-out value to a <xref:System.Text.RegularExpressions.RegexCompilationInfo> object in any of the following ways:</span></span>  
  
-   <span data-ttu-id="74916-185"><xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> メソッドを呼び出し、"REGEX_DEFAULT_MATCH_TIMEOUT" プロパティの <xref:System.TimeSpan> 値の文字列形式を提供する。</span><span class="sxs-lookup"><span data-stu-id="74916-185">By calling the <xref:System.AppDomain.SetData%2A?displayProperty=nameWithType> method and providing the string representation of a <xref:System.TimeSpan> value for the "REGEX_DEFAULT_MATCH_TIMEOUT" property.</span></span>  
  
-   <span data-ttu-id="74916-186"><xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> コンストラクターを呼び出し、`matchTimeout` パラメーターの値を指定します。</span><span class="sxs-lookup"><span data-stu-id="74916-186">By calling the <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29> constructor and providing a value for the `matchTimeout` parameter.</span></span>  
  
-   <span data-ttu-id="74916-187">このプロパティの値を設定します。</span><span class="sxs-lookup"><span data-stu-id="74916-187">By setting the value of this property.</span></span>  
  
 <span data-ttu-id="74916-188">妥当なタイムアウト期間を設定するには、次の要因を考慮してください。</span><span class="sxs-lookup"><span data-stu-id="74916-188">To set a reasonable time-out interval, consider the following factors:</span></span>  
  
-   <span data-ttu-id="74916-189">正規表現パターンの長さと複雑さ。</span><span class="sxs-lookup"><span data-stu-id="74916-189">The length and complexity of the regular expression pattern.</span></span> <span data-ttu-id="74916-190">長くて複雑な正規表現の方が、短くて単純な式よりも多くの時間を必要とします。</span><span class="sxs-lookup"><span data-stu-id="74916-190">Longer and more complex regular expressions require more time than shorter and simpler ones.</span></span>  
  
-   <span data-ttu-id="74916-191">予想されるコンピューター負荷。</span><span class="sxs-lookup"><span data-stu-id="74916-191">The expected machine load.</span></span> <span data-ttu-id="74916-192">CPU とメモリの使用率が高いシステムでは、処理に時間がかかります。</span><span class="sxs-lookup"><span data-stu-id="74916-192">Processing takes more time on systems with high CPU and memory utilization.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74916-193">次の例では、入力文字列に含まれる同じ文字の複数の出現箇所を識別する `DuplicateChars` という名前の1つのコンパイルされた正規表現を定義します。</span><span class="sxs-lookup"><span data-stu-id="74916-193">The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string.</span></span> <span data-ttu-id="74916-194">コンパイルされた正規表現の既定のタイムアウトは2秒です。</span><span class="sxs-lookup"><span data-stu-id="74916-194">The compiled regular expression has a default time-out of 2 seconds.</span></span> <span data-ttu-id="74916-195">この例を実行すると、コンパイル済みの正規表現を含む RegexLib という名前のクラスライブラリが作成されます。</span><span class="sxs-lookup"><span data-stu-id="74916-195">When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1.vb#1)]  
  
 <span data-ttu-id="74916-196">正規表現パターン `(\w)\1+` は、次の表に示すように定義されています。</span><span class="sxs-lookup"><span data-stu-id="74916-196">The regular expression pattern `(\w)\1+` is defined as shown in the following table.</span></span>  
  
|<span data-ttu-id="74916-197">[パターン]</span><span class="sxs-lookup"><span data-stu-id="74916-197">Pattern</span></span>|<span data-ttu-id="74916-198">説明</span><span class="sxs-lookup"><span data-stu-id="74916-198">Description</span></span>|  
|-------------|-----------------|  
|`(\w)`|<span data-ttu-id="74916-199">任意の単語文字と一致し、最初のキャプチャグループに割り当てます。</span><span class="sxs-lookup"><span data-stu-id="74916-199">Match any word character and assign it to the first capturing group.</span></span>|  
|`\1+`|<span data-ttu-id="74916-200">最初のキャプチャグループの値の1回以上の出現と一致します。</span><span class="sxs-lookup"><span data-stu-id="74916-200">Match one or more occurrences of the value of the first captured group.</span></span>|  
  
 <span data-ttu-id="74916-201">次の例では、`DuplicatedChars` 正規表現を使用して、文字列配列内の重複する文字を識別します。</span><span class="sxs-lookup"><span data-stu-id="74916-201">The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array.</span></span> <span data-ttu-id="74916-202">`DuplicatedChars` コンストラクターを呼び出すと、タイムアウト間隔が. 5 秒に変更されます。</span><span class="sxs-lookup"><span data-stu-id="74916-202">When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/cs/example1a.cs#2)]
 [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.regexcompilationinfo.matchtimeout/vb/example1a.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74916-203">コンパイル済みの正規表現を表す型の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="74916-203">Gets or sets the name of the type that represents the compiled regular expression.</span></span></summary>
        <value><span data-ttu-id="74916-204">新しい型の名前。</span><span class="sxs-lookup"><span data-stu-id="74916-204">The name of the new type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74916-205"><xref:System.Text.RegularExpressions.RegexCompilationInfo> クラスは、<xref:System.Text.RegularExpressions.Regex>から派生したクラスとして表されるコンパイル済みの正規表現を定義するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="74916-205">The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="74916-206"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> プロパティは、正規表現の型のクラス名を定義し、<xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> プロパティと <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> プロパティを一緒に定義して、完全修飾名を定義します。</span><span class="sxs-lookup"><span data-stu-id="74916-206">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> property defines the class name of the regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="74916-207">このプロパティの値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74916-207">The value for this property is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="74916-208">このプロパティの値は空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="74916-208">The value for this property is an empty string.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74916-209">新しい型の所属先となる名前空間を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="74916-209">Gets or sets the namespace to which the new type belongs.</span></span></summary>
        <value><span data-ttu-id="74916-210">新しい型の名前空間。</span><span class="sxs-lookup"><span data-stu-id="74916-210">The namespace of the new type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74916-211"><xref:System.Text.RegularExpressions.RegexCompilationInfo> クラスは、<xref:System.Text.RegularExpressions.Regex>から派生したクラスとして表されるコンパイル済みの正規表現を定義するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="74916-211">The <xref:System.Text.RegularExpressions.RegexCompilationInfo> class is used to define a compiled regular expression, which is represented as a class derived from <xref:System.Text.RegularExpressions.Regex>.</span></span> <span data-ttu-id="74916-212"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> プロパティは、コンパイルされた正規表現の型を含む名前空間を定義し、<xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> と <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> のプロパティを一緒に完全修飾名を定義します。</span><span class="sxs-lookup"><span data-stu-id="74916-212">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> property defines the namespace that contains the compiled regular expression type, and the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A> and <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A> properties together define its fully qualified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="74916-213">このプロパティの値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74916-213">The value for this property is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.RegexOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.RegularExpressions.RegexOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As RegexOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::RegexOptions Options { System::Text::RegularExpressions::RegexOptions get(); void set(System::Text::RegularExpressions::RegexOptions value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Text.RegularExpressions.RegexOptions with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.RegexOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74916-214">正規表現をコンパイルするときに使用するオプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="74916-214">Gets or sets the options to use when compiling the regular expression.</span></span></summary>
        <value><span data-ttu-id="74916-215">列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="74916-215">A bitwise combination of the enumeration values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74916-216"><xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> メソッドは、コンパイルされた正規表現を含むアセンブリを生成します。</span><span class="sxs-lookup"><span data-stu-id="74916-216">The <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method generates an assembly that contains compiled regular expressions.</span></span> <span data-ttu-id="74916-217">このため、<xref:System.Text.RegularExpressions.RegexOptions.Compiled> をこのプロパティの値の1つとして指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="74916-217">Therefore, you do not have to specify <xref:System.Text.RegularExpressions.RegexOptions.Compiled> as one of the values of this property.</span></span> <span data-ttu-id="74916-218">存在する場合、<xref:System.Text.RegularExpressions.RegexOptions.Compiled> オプションは無視されます。</span><span class="sxs-lookup"><span data-stu-id="74916-218">If it is present, the <xref:System.Text.RegularExpressions.RegexOptions.Compiled> option is ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : string with get, set" Usage="System.Text.RegularExpressions.RegexCompilationInfo.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74916-219">コンパイルする正規表現を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="74916-219">Gets or sets the regular expression to compile.</span></span></summary>
        <value><span data-ttu-id="74916-220">コンパイルする正規表現。</span><span class="sxs-lookup"><span data-stu-id="74916-220">The regular expression to compile.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74916-221"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> プロパティには、任意の有効な正規表現を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="74916-221">The <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> property can contain any valid regular expression.</span></span> <span data-ttu-id="74916-222"><xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> プロパティの値が構文的に正しい正規表現パターンでない場合、<xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> メソッドを呼び出すと <xref:System.ArgumentException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="74916-222">If the value of the <xref:System.Text.RegularExpressions.RegexCompilationInfo.Pattern%2A> property is not a syntactically correct regular expression pattern, the call to the <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> method throws an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="74916-223">このプロパティの値は <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="74916-223">The value for this property is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/base-types/regular-expressions.md"><span data-ttu-id="74916-224">.NET Framework の正規表現</span><span class="sxs-lookup"><span data-stu-id="74916-224">.NET Framework Regular Expressions</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/regular-expression-language-quick-reference.md"><span data-ttu-id="74916-225">正規表現言語要素</span><span class="sxs-lookup"><span data-stu-id="74916-225">Regular Expression Language Elements</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
