<Type Name="GCSettings" FullName="System.Runtime.GCSettings">
  <Metadata><Meta Name="ms.openlocfilehash" Value="56ff03b6da8a6f0e7248236f465dc815c48ced2b" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83936110" /></Metadata><TypeSignature Language="C#" Value="public static class GCSettings" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit GCSettings extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.GCSettings" />
  <TypeSignature Language="VB.NET" Value="Public Class GCSettings" />
  <TypeSignature Language="C++ CLI" Value="public ref class GCSettings abstract sealed" />
  <TypeSignature Language="F#" Value="type GCSettings = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ce1b4-101">現在のプロセスのガベージ コレクション設定を指定します。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-101">Specifies the garbage collection settings for the current process.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce1b4-102">現在のプロセスに対してサーバーのガベージコレクションを有効にするかどうかを判断するには、<xref:System.Runtime.GCSettings.IsServerGC%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-102">Use the <xref:System.Runtime.GCSettings.IsServerGC%2A> property to determine whether server garbage collection is enabled for the current process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsServerGC">
      <MemberSignature Language="C#" Value="public static bool IsServerGC { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsServerGC" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.GCSettings.IsServerGC" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsServerGC As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsServerGC { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsServerGC : bool" Usage="System.Runtime.GCSettings.IsServerGC" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce1b4-103">サーバーのガベージ コレクションが有効であるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-103">Gets a value that indicates whether server garbage collection is enabled.</span></span></summary>
        <value><span data-ttu-id="ce1b4-104">サーバーのガベージ コレクションが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-104"><see langword="true" /> if server garbage collection is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce1b4-105">サーバーのガベージコレクションの詳細については、「[ガベージコレクションの基礎](/dotnet/standard/garbage-collection/fundamentals)」の「ワークステーションとサーバーのガベージコレクション」セクションを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-105">For information about server garbage collection, see the "Workstation and Server Garbage Collection" section in [Fundamentals of Garbage Collection](/dotnet/standard/garbage-collection/fundamentals).</span></span>  
  
 <span data-ttu-id="ce1b4-106">サーバーのガベージコレクションが有効になっていない場合、ワークステーションのガベージコレクションが有効になります (同時実行コレクションの有無にかかわらず)。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-106">If server garbage collection is not enabled, workstation garbage collection is in effect (with or without concurrent collection).</span></span> <span data-ttu-id="ce1b4-107">サーバーのガベージコレクションは、マルチプロセッサコンピューターでのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-107">Server garbage collection is available only on multiprocessor computers.</span></span>  
  
 <span data-ttu-id="ce1b4-108">管理されていないホストはサーバーのガベージコレクションを要求でき、ホスト要求は構成ファイルの設定よりも優先されます。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-108">An unmanaged host can request server garbage collection, and the host request overrides configuration file settings.</span></span> <span data-ttu-id="ce1b4-109">ホストでガベージコレクションの種類が指定されていない場合は、構成ファイルの設定を使用してサーバーのガベージコレクションを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-109">If the host does not specify the type of garbage collection, you can use a configuration file setting to specify server garbage collection.</span></span> <span data-ttu-id="ce1b4-110">この設定は、コンピューターの構成ファイルではなく、アプリケーション構成ファイルでのみ有効です (「[アプリの構成](/dotnet/framework/configure-apps/)」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-110">This setting is valid only in the application configuration file, not in the machine configuration file (see [Configuring Apps](/dotnet/framework/configure-apps/)).</span></span> <span data-ttu-id="ce1b4-111">次の例は、サーバーのガベージコレクションを有効にするサンプルアプリケーション構成ファイルの内容を示しています。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-111">The following example shows the contents of a sample application configuration file that enables server garbage collection.</span></span>  
  
```  
<configuration>  
  <runtime>  
    <gcServer enabled="true" />  
  </runtime>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="ce1b4-112">次の例は、ホストコンピューターがサーバーまたはワークステーションのガベージコレクションを使用しているかどうかを示しています。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-112">The following example indicates whether the host computer is using server or workstation garbage collection.</span></span>  
  
 [!code-csharp[Environment.IsServerGC#1](~/samples/snippets/csharp/VS_Snippets_CLR/environment.IsServerGC/CS/isg.cs#1)]
 [!code-vb[Environment.IsServerGC#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/environment.IsServerGC/VB/isg.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LargeObjectHeapCompactionMode">
      <MemberSignature Language="C#" Value="public static System.Runtime.GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LargeObjectHeapCompactionMode As GCLargeObjectHeapCompactionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::GCLargeObjectHeapCompactionMode LargeObjectHeapCompactionMode { System::Runtime::GCLargeObjectHeapCompactionMode get(); void set(System::Runtime::GCLargeObjectHeapCompactionMode value); };" />
      <MemberSignature Language="F#" Value="member this.LargeObjectHeapCompactionMode : System.Runtime.GCLargeObjectHeapCompactionMode with get, set" Usage="System.Runtime.GCSettings.LargeObjectHeapCompactionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLargeObjectHeapCompactionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce1b4-113">フル ブロッキング ガベージ コレクションが大きなオブジェクト ヒープ (LOH) を圧縮するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-113">Gets or sets a value that indicates whether a full blocking garbage collection compacts the large object heap (LOH).</span></span></summary>
        <value><span data-ttu-id="ce1b4-114">フル ブロッキング ガベージ コレクションが LOH を圧縮するかどうかを示す、列挙値の 1 つです。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-114">One of the enumeration values that indicates whether a full blocking garbage collection compacts the LOH.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce1b4-115">LOH は、85000バイトを超える必要があるラージオブジェクト (配列など) にメモリを割り当てるために使用されます。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-115">The LOH is used for allocating memory for large objects (such as arrays) that require more than 85,000 bytes.</span></span> <span data-ttu-id="ce1b4-116">大量のメモリブロックをコピーすることによるパフォーマンスへの影響があるため、通常、ガベージコレクターは LOH をスイープします。これには、dead オブジェクトによって占有されていたメモリの場所の一覧を作成し、大きなオブジェクトのメモリ割り当てのために再利用することができます。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-116">Because of the performance impact of copying large blocks of memory, the garbage collector ordinarily sweeps the   LOH, which involves creating a list of the memory locations that were occupied by dead objects and that can be reused to satisfy future requests for allocation of memory for large objects.</span></span> <span data-ttu-id="ce1b4-117">ただし、LOH を広範囲に使用して一時的なオブジェクトを格納するアプリでは、メモリの断片化によってパフォーマンスが低下することもあります。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-117">However, in apps that make extensive use of the LOH to store transient objects, memory fragmentation can also adversely impact performance.</span></span> <span data-ttu-id="ce1b4-118">この場合、<xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> プロパティを使用して、ガベージコレクションの実行中に LOH を単にスイープするのではなく、圧縮することができます。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-118">In this case, it is possible to use the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> property to compact rather than simply sweep the LOH during a garbage collection.</span></span>  
  
 <span data-ttu-id="ce1b4-119"><xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> プロパティの既定値は <xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>です。これは、ガベージコレクション中に LOH が圧縮されないことを示します。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-119">The default value of the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> property is <xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>, which indicates that the LOH is not compacted during garbage collections.</span></span> <span data-ttu-id="ce1b4-120">プロパティに <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>の値を割り当てると、次のフルブロッキングガベージコレクション中に LOH が最適化され、プロパティ値が <xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>にリセットされます。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-120">If you assign the property a value of <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>, the LOH is compacted during the next full blocking garbage collection, and the property value is reset to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ce1b4-121">バックグラウンドガベージコレクションはブロックされていません。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-121">Background garbage collections are not blocking.</span></span> <span data-ttu-id="ce1b4-122">これは、<xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> プロパティを <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>に設定した場合、その後発生するバックグラウンドジェネレーション2のコレクションが LOH を圧縮しないことを意味します。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-122">This means that, if you set the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> property to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>, any background generation 2 collections that occur subsequently do not compact the LOH.</span></span> <span data-ttu-id="ce1b4-123">最初のブロッキングジェネレーション2のコレクションのみが LOH を圧縮します。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-123">Only the first blocking generation 2 collection compacts the LOH.</span></span>  
  
 <span data-ttu-id="ce1b4-124"><xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> プロパティが <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>に設定されると、次のフルブロッキングガベージコレクション (および LOH の圧縮) が、不確定な将来の時刻に発生します。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-124">After the <xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A> property is set to <xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType>, the next full blocking garbage collection (and compaction of the LOH) occurs at an indeterminate future time.</span></span> <span data-ttu-id="ce1b4-125">次のようなコードを使用して、LOH をすぐに圧縮できます。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-125">You can compact the LOH immediately by using code like the following:</span></span>  
  
 [!code-csharp[System.Runtime.GCSettings#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.gcsettings/cs/lohcompactionmode1.cs#1)]
 [!code-vb[System.Runtime.GCSettings#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.gcsettings/vb/lohcompactionmode1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.GCLargeObjectHeapCompactionMode" />
      </Docs>
    </Member>
    <Member MemberName="LatencyMode">
      <MemberSignature Language="C#" Value="public static System.Runtime.GCLatencyMode LatencyMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Runtime.GCLatencyMode LatencyMode" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.GCSettings.LatencyMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LatencyMode As GCLatencyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Runtime::GCLatencyMode LatencyMode { System::Runtime::GCLatencyMode get(); void set(System::Runtime::GCLatencyMode value); };" />
      <MemberSignature Language="F#" Value="member this.LatencyMode : System.Runtime.GCLatencyMode with get, set" Usage="System.Runtime.GCSettings.LatencyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>set: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ce1b4-126">ガベージ コレクションの現在の待機モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-126">Gets or sets the current latency mode for garbage collection.</span></span></summary>
        <value><span data-ttu-id="ce1b4-127">待機モードを指定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-127">One of the enumeration values that specifies the latency mode.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce1b4-128">重要な操作中に <xref:System.Runtime.GCLatencyMode.LowLatency> に <xref:System.Runtime.GCLatencyMode> を設定することによって、アプリケーションでのガベージコレクションの割り込みレベルを下げることができます。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-128">You can reduce the level of intrusiveness of garbage collection in your application by setting the <xref:System.Runtime.GCLatencyMode> to <xref:System.Runtime.GCLatencyMode.LowLatency> during critical operations.</span></span> <span data-ttu-id="ce1b4-129">このような操作が完了したら、より多くのオブジェクトを解放してメモリを増やすことができるように、より高い待機時間モードに戻ります。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-129">After such operations are completed, return to a higher latency mode so that more objects can be reclaimed to increase memory.</span></span>  
  
 <span data-ttu-id="ce1b4-130">通常は、<xref:System.Runtime.GCSettings.LatencyMode%2A> プロパティの値を設定して、ガベージコレクターの待機時間モードを定義します。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-130">Ordinarily, you set the value of the <xref:System.Runtime.GCSettings.LatencyMode%2A> property to define the garbage collector's latency mode.</span></span> <span data-ttu-id="ce1b4-131">ただし、<xref:System.Runtime.GCLatencyMode.NoGCRegion?displayProperty=nameWithType> 列挙値を <xref:System.Runtime.GCSettings.LatencyMode%2A> プロパティに割り当てることによって、GC 領域の無待機モードを設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-131">However, you cannot set the no GC region latency mode by assigning the <xref:System.Runtime.GCLatencyMode.NoGCRegion?displayProperty=nameWithType> enumeration value to the <xref:System.Runtime.GCSettings.LatencyMode%2A> property.</span></span> <span data-ttu-id="ce1b4-132">代わりに、<xref:System.GC.TryStartNoGCRegion%2A?displayProperty=nameWithType> メソッドを呼び出して GC 領域の無待機モードを開始し、<xref:System.GC.EndNoGCRegion%2A?displayProperty=nameWithType> を呼び出して終了します。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-132">Instead, you call the <xref:System.GC.TryStartNoGCRegion%2A?displayProperty=nameWithType> method to begin the no GC region latency mode, and you call the <xref:System.GC.EndNoGCRegion%2A?displayProperty=nameWithType> to end it.</span></span>  
  
 <span data-ttu-id="ce1b4-133">ガベージコレクションのランタイム構成設定が <xref:System.Runtime.GCLatencyMode> 列挙体の既定値に与える影響については、「[待機時間モード](/dotnet/standard/garbage-collection/latency)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-133">See [Latency Modes](/dotnet/standard/garbage-collection/latency) for a discussion of how the runtime configuration settings for garbage collection affect the default value of the <xref:System.Runtime.GCLatencyMode> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="ce1b4-134"><see cref="P:System.Runtime.GCSettings.LatencyMode" /> プロパティが無効な値に設定されています。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-134">The <see cref="P:System.Runtime.GCSettings.LatencyMode" /> property is being set to an invalid value.</span></span>  
  
<span data-ttu-id="ce1b4-135">または</span><span class="sxs-lookup"><span data-stu-id="ce1b4-135">-or-</span></span> 
<span data-ttu-id="ce1b4-136"><see cref="P:System.Runtime.GCSettings.LatencyMode" /> プロパティを <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="ce1b4-136">The <see cref="P:System.Runtime.GCSettings.LatencyMode" /> property cannot be set to <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/96278bb7-6eab-4612-8594-ceebfc887d81"><span data-ttu-id="ce1b4-137">待機モード</span><span class="sxs-lookup"><span data-stu-id="ce1b4-137">Latency Modes</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
