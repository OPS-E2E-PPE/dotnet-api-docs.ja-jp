<Type Name="ProfileOptimization" FullName="System.Runtime.ProfileOptimization">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ea59238f8fe29e285c78794150027e4b42cbb4f7" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77220062" /></Metadata><TypeSignature Language="C#" Value="public static class ProfileOptimization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileOptimization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ProfileOptimization" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileOptimization" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileOptimization abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileOptimization = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9dfed-101">以前のコンパイル中に作成されたプロファイルに基づいて、実行される可能性が高いメソッドをバックグラウンドでコンパイルすることにより、JIT (Just-In-Time) コンパイラを必要とするアプリケーションのアプリケーション ドメインで、起動時のパフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="9dfed-101">Improves the startup performance of application domains in applications that require the just-in-time (JIT) compiler by performing background compilation of methods that are likely to be executed, based on profiles created during previous compilations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9dfed-102">プロファイルの最適化には、マルチコアコンピューターが必要です。</span><span class="sxs-lookup"><span data-stu-id="9dfed-102">Profile optimization requires a multicore computer.</span></span> <span data-ttu-id="9dfed-103">これらのメソッドは、他のコンピューターでは無視されます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-103">The methods are ignored on other computers.</span></span>  
  
 <span data-ttu-id="9dfed-104">アプリケーションドメインでプロファイルの最適化を開始するたびに、前に使用したときに作成されたプロファイルが読み取られます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-104">Each time you initiate profile optimization in an application domain, the profile that was created during the previous use is read.</span></span> <span data-ttu-id="9dfed-105">プロファイルの情報は、起動時に実行される可能性が最も高いメソッドを特定することによって、バックグラウンドコンパイルをガイドするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-105">The information in the profile is used to guide background compilation by identifying the methods that are most likely to be executed during startup.</span></span> <span data-ttu-id="9dfed-106">マルチコアコンピューターでは、メインアプリケーションスレッドが JIT コンパイラを呼び出す必要がないように、必要な時間によってメソッドが既にコンパイルされている可能性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="9dfed-106">On multicore computers, this increases the chances that a method is already compiled by the time it is needed so that the main application thread does not have to call the JIT compiler.</span></span>  
  
 <span data-ttu-id="9dfed-107">プロファイルファイルは使用するたびに上書きされるため、起動時に使用されるメソッドに関する最新の情報が常に格納されます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-107">The profile file is overwritten on each use, so it always contains the most recent information about which methods are used during startup.</span></span>  
  
 <span data-ttu-id="9dfed-108">最適化プロファイルは、アプリケーションドメインの起動に限定されません。</span><span class="sxs-lookup"><span data-stu-id="9dfed-108">Optimization profiles are not restricted to application domain startup.</span></span> <span data-ttu-id="9dfed-109">これらは、JIT コンパイラを多用する必要があるすべてのアクティビティに使用できます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-109">They can be used for any activity that will require heavy use of the JIT compiler.</span></span> <span data-ttu-id="9dfed-110">アプリケーションドメインに対して複数のプロファイルを保持することで、各アクティビティに独自のプロファイルを持たせることができます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-110">You can maintain multiple profiles for an application domain so that each such activity has its own profile.</span></span>  
  
 <span data-ttu-id="9dfed-111">アプリケーションドメインで最適化プロファイルを使用するには、<xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> メソッドを呼び出し、プロファイルが格納されているフォルダーを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="9dfed-111">To use optimization profiles in an application domain, you must call the <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> method and specify the folder where profiles are stored.</span></span> <span data-ttu-id="9dfed-112">フォルダーは既に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="9dfed-112">The folder must already exist.</span></span> <span data-ttu-id="9dfed-113">プロファイルの使用を開始するには、<xref:System.Runtime.ProfileOptimization.StartProfile%2A> メソッドを呼び出し、プロファイルのファイル名を指定します。</span><span class="sxs-lookup"><span data-stu-id="9dfed-113">To begin using a profile, call the <xref:System.Runtime.ProfileOptimization.StartProfile%2A> method and specify the file name of the profile.</span></span> <span data-ttu-id="9dfed-114">ファイルが以前に記録されていない場合は、初めて使用するときに作成されます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-114">If the file was not recorded previously, it is created on first use.</span></span> <span data-ttu-id="9dfed-115">プロファイルを初めて作成したときのパフォーマンス上の利点はありません。</span><span class="sxs-lookup"><span data-stu-id="9dfed-115">There is no performance benefit the first time a profile is created.</span></span>  
  
 <span data-ttu-id="9dfed-116">プロファイルの最適化では、メソッドの実行順序は変更されません。</span><span class="sxs-lookup"><span data-stu-id="9dfed-116">Profile optimization does not change the order in which methods are executed.</span></span> <span data-ttu-id="9dfed-117">メソッドはバックグラウンドスレッドでは実行されません。メソッドがコンパイルされても呼び出されない場合は、単に使用されません。</span><span class="sxs-lookup"><span data-stu-id="9dfed-117">Methods are not executed on the background thread; if a method is compiled but never called, it is simply not used.</span></span> <span data-ttu-id="9dfed-118">プロファイルファイルが壊れているか、指定されたフォルダーに書き込むことができない場合 (たとえば、フォルダーが存在しないため)、プログラムの実行は最適化プロファイリングを行わずに続行されます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-118">If a profile file is corrupt or cannot be written to the specified folder (for example, because the folder does not exist), program execution continues without optimization profiling.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetProfileRoot">
      <MemberSignature Language="C#" Value="public static void SetProfileRoot (string directoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProfileRoot(string directoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetProfileRoot (directoryPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetProfileRoot(System::String ^ directoryPath);" />
      <MemberSignature Language="F#" Value="static member SetProfileRoot : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.SetProfileRoot directoryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directoryPath"><span data-ttu-id="9dfed-119">現在のアプリケーション ドメインのためにプロファイル ファイルが格納されるフォルダーへの完全パス。</span><span class="sxs-lookup"><span data-stu-id="9dfed-119">The full path to the folder where profile files are stored for the current application domain.</span></span></param>
        <summary><span data-ttu-id="9dfed-120">現在のアプリケーション ドメインに対する最適化プロファイルを有効にし、最適化プロファイル ファイルが格納されるフォルダーを設定します。</span><span class="sxs-lookup"><span data-stu-id="9dfed-120">Enables optimization profiling for the current application domain, and sets the folder where the optimization profile files are stored.</span></span> <span data-ttu-id="9dfed-121">シングルコア コンピューターでは、メソッドは無視されます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-121">On a single-core computer, the method is ignored.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dfed-122">現在のアプリケーションドメインで <xref:System.Runtime.ProfileOptimization.StartProfile%2A> メソッドを初めて呼び出すときは、このメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="9dfed-122">You must call this method before you call the <xref:System.Runtime.ProfileOptimization.StartProfile%2A> method for the first time in the current application domain.</span></span> <span data-ttu-id="9dfed-123">同じアプリケーションドメイン内で <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> を複数回呼び出した場合、1番目以降のすべての呼び出しは無視されます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-123">If you call <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> more than once in the same application domain, all calls after the first are ignored.</span></span>  
  
 <span data-ttu-id="9dfed-124">指定されたフォルダーは既に存在している必要があります。</span><span class="sxs-lookup"><span data-stu-id="9dfed-124">The specified folder must already exist.</span></span> <span data-ttu-id="9dfed-125">存在しない場合、このメソッドを呼び出すと、プロファイルは作成されず、プロファイリングは行われません。</span><span class="sxs-lookup"><span data-stu-id="9dfed-125">If it does not exist, calling this method does not create it, and no profiling occurs.</span></span>  
  
 <span data-ttu-id="9dfed-126">複数のコアを持たないコンピューターでは、このメソッドは無視されます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-126">On computers that do not have multiple cores, this method is ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartProfile">
      <MemberSignature Language="C#" Value="public static void StartProfile (string profile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartProfile(string profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.StartProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartProfile (profile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartProfile(System::String ^ profile);" />
      <MemberSignature Language="F#" Value="static member StartProfile : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.StartProfile profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="profile"><span data-ttu-id="9dfed-127">使用するプロファイルのファイル名。</span><span class="sxs-lookup"><span data-stu-id="9dfed-127">The file name of the profile to use.</span></span></param>
        <summary><span data-ttu-id="9dfed-128">バックグラウンド スレッド上で、指定したプロファイル ファイルに前もって記録済みのメソッドの、Just-In-Time (JIT) コンパイラを開始します。</span><span class="sxs-lookup"><span data-stu-id="9dfed-128">Starts just-in-time (JIT) compilation of the methods that were previously recorded in the specified profile file, on a background thread.</span></span> <span data-ttu-id="9dfed-129">指定したプロファイル ファイルをあとで上書きする、現在のメソッド使用の記録処理を開始します。</span><span class="sxs-lookup"><span data-stu-id="9dfed-129">Starts the process of recording current method use, which later overwrites the specified profile file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dfed-130">指定されたプロファイルが <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> メソッドによって指定されたフォルダーに存在する場合、そのプロファイルに含まれる情報は、メソッドがバックグラウンドスレッドでコンパイルされる順序を決定するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-130">If the specified profile exists in the folder specified by the <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> method, the information it contains is used to determine the order in which methods are compiled on the background thread.</span></span> <span data-ttu-id="9dfed-131"><xref:System.Runtime.ProfileOptimization.StartProfile%2A> メソッドは、プロファイルがまだ存在しない場合は作成し、メソッドの使用の記録を開始します。</span><span class="sxs-lookup"><span data-stu-id="9dfed-131">The <xref:System.Runtime.ProfileOptimization.StartProfile%2A> method creates the profile if it does not already exist, and initiates the recording of method use.</span></span>  
  
 <span data-ttu-id="9dfed-132">バックグラウンドスレッドとメインアプリケーションスレッドのどちらでコンパイルされたかに関係なく、実際に呼び出されたメソッドのみが記録されます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-132">Only methods that are actually called are recorded, regardless of whether they were compiled on the background thread or on the main application thread.</span></span> <span data-ttu-id="9dfed-133">バックグラウンドスレッドがコンパイルした前に、アプリケーションでメソッドを呼び出す必要がある場合は、アプリケーションのメインスレッドでメソッドがコンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-133">A method is compiled on the main application thread if the application needs to call it before the background thread has compiled it.</span></span>  
  
 <span data-ttu-id="9dfed-134">記録を実行するコードは、メソッドがコンパイルされる速度を追跡します。これには、バックグラウンドスレッドとメインスレッドの両方でコンパイルされるメソッドが含まれます。</span><span class="sxs-lookup"><span data-stu-id="9dfed-134">The code that performs the recording tracks the rate at which methods are compiled, including methods that are compiled on both the background thread and on the main thread.</span></span> <span data-ttu-id="9dfed-135">レートが事前に定義されたレベルを下回ると、記録が停止します。</span><span class="sxs-lookup"><span data-stu-id="9dfed-135">When the rate falls below a predetermined level, recording stops.</span></span> <span data-ttu-id="9dfed-136">また、JIT コンパイル率が事前に定義された上限を超えた場合にも記録が停止します。</span><span class="sxs-lookup"><span data-stu-id="9dfed-136">Recording also stops if the rate of JIT compilation exceeds a predetermined upper limit.</span></span>  
  
 <span data-ttu-id="9dfed-137"><xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> メソッドが現在のアプリケーションドメインに対して呼び出されていない場合、またはコンピューターに複数のコアがない場合、<xref:System.Runtime.ProfileOptimization.StartProfile%2A> メソッドは無効になります。</span><span class="sxs-lookup"><span data-stu-id="9dfed-137">If the <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> method has not been called for the current application domain, or if the computer does not have multiple cores, the <xref:System.Runtime.ProfileOptimization.StartProfile%2A> method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
