<Type Name="ProfileOptimization" FullName="System.Runtime.ProfileOptimization">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dc4eb4a6f0b443fa56224524d3ed86c4029390b7" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75082234" /></Metadata><TypeSignature Language="C#" Value="public static class ProfileOptimization" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileOptimization extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ProfileOptimization" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileOptimization" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileOptimization abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileOptimization = class" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>以前のコンパイル中に作成されたプロファイルに基づいて、実行される可能性が高いメソッドをバックグラウンドでコンパイルすることにより、JIT (Just-In-Time) コンパイラを必要とするアプリケーションのアプリケーション ドメインで、起動時のパフォーマンスが向上します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  プロファイルの最適化には、マルチコアコンピューターが必要です。 これらのメソッドは、他のコンピューターでは無視されます。  
  
 アプリケーションドメインでプロファイルの最適化を開始するたびに、前に使用したときに作成されたプロファイルが読み取られます。 プロファイルの情報は、起動時に実行される可能性が最も高いメソッドを特定することによって、バックグラウンドコンパイルをガイドするために使用されます。 マルチコアコンピューターでは、メインアプリケーションスレッドが JIT コンパイラを呼び出す必要がないように、必要な時間によってメソッドが既にコンパイルされている可能性が高くなります。  
  
 プロファイルファイルは使用するたびに上書きされるため、起動時に使用されるメソッドに関する最新の情報が常に格納されます。  
  
 最適化プロファイルは、アプリケーションドメインの起動に限定されません。 これらは、JIT コンパイラを多用する必要があるすべてのアクティビティに使用できます。 アプリケーションドメインに対して複数のプロファイルを保持することで、各アクティビティに独自のプロファイルを持たせることができます。  
  
 アプリケーションドメインで最適化プロファイルを使用するには、<xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> メソッドを呼び出し、プロファイルが格納されているフォルダーを指定する必要があります。 フォルダーは既に存在している必要があります。 プロファイルの使用を開始するには、<xref:System.Runtime.ProfileOptimization.StartProfile%2A> メソッドを呼び出し、プロファイルのファイル名を指定します。 ファイルが以前に記録されていない場合は、初めて使用するときに作成されます。 プロファイルを初めて作成したときのパフォーマンス上の利点はありません。  
  
 プロファイルの最適化では、メソッドの実行順序は変更されません。 メソッドはバックグラウンドスレッドでは実行されません。メソッドがコンパイルされても呼び出されない場合は、単に使用されません。 プロファイルファイルが壊れているか、指定されたフォルダーに書き込むことができない場合 (たとえば、フォルダーが存在しないため)、プログラムの実行は最適化プロファイリングを行わずに続行されます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SetProfileRoot">
      <MemberSignature Language="C#" Value="public static void SetProfileRoot (string directoryPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetProfileRoot(string directoryPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetProfileRoot (directoryPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetProfileRoot(System::String ^ directoryPath);" />
      <MemberSignature Language="F#" Value="static member SetProfileRoot : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.SetProfileRoot directoryPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directoryPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="directoryPath">現在のアプリケーション ドメインのためにプロファイル ファイルが格納されるフォルダーへの完全パス。</param>
        <summary>現在のアプリケーション ドメインに対する最適化プロファイルを有効にし、最適化プロファイル ファイルが格納されるフォルダーを設定します。 シングルコア コンピューターでは、メソッドは無視されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 現在のアプリケーションドメインで <xref:System.Runtime.ProfileOptimization.StartProfile%2A> メソッドを初めて呼び出すときは、このメソッドを呼び出す必要があります。 同じアプリケーションドメイン内で <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> を複数回呼び出した場合、1番目以降のすべての呼び出しは無視されます。  
  
 指定されたフォルダーは既に存在している必要があります。 存在しない場合、このメソッドを呼び出すと、プロファイルは作成されず、プロファイリングは行われません。  
  
 複数のコアを持たないコンピューターでは、このメソッドは無視されます。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に完全信頼が必要です。 このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</permission>
      </Docs>
    </Member>
    <Member MemberName="StartProfile">
      <MemberSignature Language="C#" Value="public static void StartProfile (string profile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartProfile(string profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ProfileOptimization.StartProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub StartProfile (profile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void StartProfile(System::String ^ profile);" />
      <MemberSignature Language="F#" Value="static member StartProfile : string -&gt; unit" Usage="System.Runtime.ProfileOptimization.StartProfile profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="profile">使用するプロファイルのファイル名。</param>
        <summary>バックグラウンド スレッド上で、指定したプロファイル ファイルに前もって記録済みのメソッドの、Just-In-Time (JIT) コンパイラを開始します。 指定したプロファイル ファイルをあとで上書きする、現在のメソッド使用の記録処理を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定されたプロファイルが <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> メソッドによって指定されたフォルダーに存在する場合、そのプロファイルに含まれる情報は、メソッドがバックグラウンドスレッドでコンパイルされる順序を決定するために使用されます。 <xref:System.Runtime.ProfileOptimization.StartProfile%2A> メソッドは、プロファイルがまだ存在しない場合は作成し、メソッドの使用の記録を開始します。  
  
 バックグラウンドスレッドとメインアプリケーションスレッドのどちらでコンパイルされたかに関係なく、実際に呼び出されたメソッドのみが記録されます。 バックグラウンドスレッドがコンパイルした前に、アプリケーションでメソッドを呼び出す必要がある場合は、アプリケーションのメインスレッドでメソッドがコンパイルされます。  
  
 記録を実行するコードは、メソッドがコンパイルされる速度を追跡します。これには、バックグラウンドスレッドとメインスレッドの両方でコンパイルされるメソッドが含まれます。 レートが事前に定義されたレベルを下回ると、記録が停止します。 また、JIT コンパイル率が事前に定義された上限を超えた場合にも記録が停止します。  
  
 <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> メソッドが現在のアプリケーションドメインに対して呼び出されていない場合、またはコンピューターに複数のコアがない場合、<xref:System.Runtime.ProfileOptimization.StartProfile%2A> メソッドは無効になります。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に完全信頼が必要です。 このメンバーは、部分的に信頼されているコードまたは透過的なコードでは使用できません。</permission>
      </Docs>
    </Member>
  </Members>
</Type>
