<Type Name="InternalLoggerException" FullName="Microsoft.Build.Exceptions.InternalLoggerException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e00f4661e2432f7439caf9409118d0a16d14adc" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73365953" /></Metadata><TypeSignature Language="C#" Value="public sealed class InternalLoggerException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit InternalLoggerException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Exceptions.InternalLoggerException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalLoggerException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalLoggerException sealed : Exception" />
  <TypeSignature Language="F#" Value="type InternalLoggerException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7e776-101">この例外は、ロガーからのハンドルされない例外をラップするために使用されます。</span><span class="sxs-lookup"><span data-stu-id="7e776-101">This exception is used to wrap an unhandled exception from a logger.</span></span> <span data-ttu-id="7e776-102">この例外はビルドを中止します。この例外をスローできるのは、MSBuild エンジンだけです。</span><span class="sxs-lookup"><span data-stu-id="7e776-102">This exception aborts the build, and it can only be thrown by the MSBuild engine.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e776-103">警告: シリアル化コントラクトでは、ISerializable を実装する--型が変更されないこと、promise の型フィールドつまりこれは使用せずに、[Serializable] 型をマークすることは変更できません。型の次のバージョンの新しいフィールドを追加すると、特別な FX ガイドラインに従わず、前方と後方の両の互換性を損なうことができます。</span><span class="sxs-lookup"><span data-stu-id="7e776-103">WARNING: marking a type [Serializable] without implementing ISerializable imposes a serialization contract -- it is a promise to never change the type's fields i.e. the type is immutable; adding new fields in the next version of the type without following certain special FX guidelines, can break both forward and backward compatibility</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7e776-104">指定したエラー メッセージを使用して、この例外のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="7e776-104">Creates an instance of this exception using the specified error message.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalLoggerException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalLoggerException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e776-105">パラメーターなしのコンストラクター。</span><span class="sxs-lookup"><span data-stu-id="7e776-105">Parameterless constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e776-106">このコンストラクターは、.NET のコーディング ガイドラインを満たすためにのみ存在します。</span><span class="sxs-lookup"><span data-stu-id="7e776-106">This constructor only exists to satisfy .NET coding guidelines.</span></span> <span data-ttu-id="7e776-107">代わりに、豊富なコンストラクターを使用してください。</span><span class="sxs-lookup"><span data-stu-id="7e776-107">Use the rich constructor instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7e776-108">操作が無効です。</span><span class="sxs-lookup"><span data-stu-id="7e776-108">Operation is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalLoggerException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalLoggerException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Exceptions.InternalLoggerException : string -&gt; Microsoft.Build.Exceptions.InternalLoggerException" Usage="new Microsoft.Build.Exceptions.InternalLoggerException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="7e776-109">エラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="7e776-109">The error message.</span></span></param>
        <summary><span data-ttu-id="7e776-110">指定したエラー メッセージを使用して、この例外のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="7e776-110">Creates an instance of this exception using the specified error message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e776-111">このコンストラクターは、.NET のコーディング ガイドラインを満たすためにのみ存在します。</span><span class="sxs-lookup"><span data-stu-id="7e776-111">This constructor only exists to satisfy .NET coding guidelines.</span></span> <span data-ttu-id="7e776-112">代わりに、豊富なコンストラクターを使用してください。</span><span class="sxs-lookup"><span data-stu-id="7e776-112">Use the rich constructor instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7e776-113">操作が無効です。</span><span class="sxs-lookup"><span data-stu-id="7e776-113">Operation is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalLoggerException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalLoggerException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Exceptions.InternalLoggerException : string * Exception -&gt; Microsoft.Build.Exceptions.InternalLoggerException" Usage="new Microsoft.Build.Exceptions.InternalLoggerException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="7e776-114">エラー メッセージ。</span><span class="sxs-lookup"><span data-stu-id="7e776-114">The error message.</span></span></param>
        <param name="innerException"><span data-ttu-id="7e776-115">内部例外。</span><span class="sxs-lookup"><span data-stu-id="7e776-115">The inner exception.</span></span></param>
        <summary><span data-ttu-id="7e776-116">指定したエラー メッセージと内部例外を使用して、この例外のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="7e776-116">Creates an instance of this exception using the specified error message and inner exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e776-117">このコンストラクターは、.NET のコーディング ガイドラインを満たすためにのみ存在します。</span><span class="sxs-lookup"><span data-stu-id="7e776-117">This constructor only exists to satisfy .NET coding guidelines.</span></span> <span data-ttu-id="7e776-118">代わりに、豊富なコンストラクターを使用してください。</span><span class="sxs-lookup"><span data-stu-id="7e776-118">Use the rich constructor instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7e776-119">操作が無効です。</span><span class="sxs-lookup"><span data-stu-id="7e776-119">Operation is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildEventArgs">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.BuildEventArgs BuildEventArgs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.BuildEventArgs BuildEventArgs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InternalLoggerException.BuildEventArgs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BuildEventArgs As BuildEventArgs" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::BuildEventArgs ^ BuildEventArgs { Microsoft::Build::Framework::BuildEventArgs ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BuildEventArgs : Microsoft.Build.Framework.BuildEventArgs" Usage="Microsoft.Build.Exceptions.InternalLoggerException.BuildEventArgs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.BuildEventArgs</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e776-120">ログに記録されたビルド イベントが存在する場合は、その詳細を取得します。</span><span class="sxs-lookup"><span data-stu-id="7e776-120">Gets the details of the build event (if any) that was being logged.</span></span></summary>
        <value><span data-ttu-id="7e776-121">ビルド イベントの引数、または null。</span><span class="sxs-lookup"><span data-stu-id="7e776-121">The build event args, or null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCode">
      <MemberSignature Language="C#" Value="public string ErrorCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InternalLoggerException.ErrorCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorCode { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorCode : string" Usage="Microsoft.Build.Exceptions.InternalLoggerException.ErrorCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e776-122">この例外のメッセージ (内部例外ではありません) に関連付けられているエラー コードを取得します。</span><span class="sxs-lookup"><span data-stu-id="7e776-122">Gets the error code associated with this exception's message (not the inner exception).</span></span></summary>
        <value><span data-ttu-id="7e776-123">エラー コード文字列。</span><span class="sxs-lookup"><span data-stu-id="7e776-123">The error code string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InternalLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="internalLoggerException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="7e776-124">エラー情報。</span><span class="sxs-lookup"><span data-stu-id="7e776-124">The error information.</span></span></param>
        <param name="context"><span data-ttu-id="7e776-125">エラー コンテキスト。</span><span class="sxs-lookup"><span data-stu-id="7e776-125">The error context.</span></span></param>
        <summary><span data-ttu-id="7e776-126">ISerializable のメソッドのオーバーライドです。Exception は ISerializable インターフェイスを実装するため、このメソッドがオーバーライドされます。このクラスに新しいメンバーが追加された場合は、これも更新する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7e776-126">ISerializable method which we must override since Exception implements this interface If we ever add new members to this class, we'll need to update this.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpKeyword">
      <MemberSignature Language="C#" Value="public string HelpKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InternalLoggerException.HelpKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HelpKeyword As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpKeyword { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpKeyword : string" Usage="Microsoft.Build.Exceptions.InternalLoggerException.HelpKeyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e776-127">このエラーに関連付けられているホスト IDE の F1 ヘルプ キーワードを取得します。</span><span class="sxs-lookup"><span data-stu-id="7e776-127">Gets the F1-help keyword associated with this error, for the host IDE.</span></span></summary>
        <value><span data-ttu-id="7e776-128">キーワード文字列。</span><span class="sxs-lookup"><span data-stu-id="7e776-128">The keyword string.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationException">
      <MemberSignature Language="C#" Value="public bool InitializationException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InitializationException" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InternalLoggerException.InitializationException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitializationException As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InitializationException { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InitializationException : bool" Usage="Microsoft.Build.Exceptions.InternalLoggerException.InitializationException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e776-129">ロガーの初期化中に例外が発生した場合に <see langword="true" /> になります。</span><span class="sxs-lookup"><span data-stu-id="7e776-129"><see langword="true" /> if the exception occurred during logger initialization.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
