<Type Name="D3DImage" FullName="System.Windows.Interop.D3DImage">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7e211756111f2b65259f324fd393dd3aa736f628" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75176887" /></Metadata><TypeSignature Language="C#" Value="public class D3DImage : System.Windows.Media.ImageSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi D3DImage extends System.Windows.Media.ImageSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.D3DImage" />
  <TypeSignature Language="VB.NET" Value="Public Class D3DImage&#xA;Inherits ImageSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class D3DImage : System::Windows::Media::ImageSource" />
  <TypeSignature Language="F#" Value="type D3DImage = class&#xA;    inherit ImageSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ImageSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="99543-101">ユーザーが作成した Direct3D サーフェイスを表示する <see cref="T:System.Windows.Media.ImageSource" />。</span><span class="sxs-lookup"><span data-stu-id="99543-101">An <see cref="T:System.Windows.Media.ImageSource" /> that displays a user-created Direct3D surface.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-102"><xref:System.Windows.Interop.D3DImage> クラスを使用して、Windows Presentation Foundation (WPF) アプリケーションで Direct3D コンテンツをホストします。</span><span class="sxs-lookup"><span data-stu-id="99543-102">Use the <xref:System.Windows.Interop.D3DImage> class to host Direct3D content in a Windows Presentation Foundation (WPF) application.</span></span>  
  
 <span data-ttu-id="99543-103"><xref:System.Windows.Interop.D3DImage.Lock%2A> メソッドを呼び出して、<xref:System.Windows.Interop.D3DImage>によって表示される Direct3D コンテンツを変更します。</span><span class="sxs-lookup"><span data-stu-id="99543-103">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the Direct3D content displayed by the <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="99543-104"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> メソッドを呼び出して、<xref:System.Windows.Interop.D3DImage>に Direct3D サーフェイスを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="99543-104">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to a <xref:System.Windows.Interop.D3DImage>.</span></span> <span data-ttu-id="99543-105"><xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> メソッドを呼び出して、Direct3D サーフェイスの更新を追跡します。</span><span class="sxs-lookup"><span data-stu-id="99543-105">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to track updates to the Direct3D surface.</span></span> <span data-ttu-id="99543-106"><xref:System.Windows.Interop.D3DImage.Unlock%2A> メソッドを呼び出して、変更された領域を表示します。</span><span class="sxs-lookup"><span data-stu-id="99543-106">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to display the changed areas.</span></span>  
  
 <span data-ttu-id="99543-107"><xref:System.Windows.Interop.D3DImage> クラスは、*バックバッファー*と*フロントバッファー*と呼ばれる2つの表示バッファーを管理します。</span><span class="sxs-lookup"><span data-stu-id="99543-107">The <xref:System.Windows.Interop.D3DImage> class manages two display buffers, which are called the *back buffer* and the *front buffer*.</span></span> <span data-ttu-id="99543-108">バックバッファーは、Direct3D サーフェイスです。</span><span class="sxs-lookup"><span data-stu-id="99543-108">The back buffer is your Direct3D surface.</span></span>  <span data-ttu-id="99543-109">バックバッファーに対する変更は、<xref:System.Windows.Interop.D3DImage.Unlock%2A> メソッドを呼び出したときにフロントバッファーにコピーされ、ハードウェア上に表示されます。</span><span class="sxs-lookup"><span data-stu-id="99543-109">Changes to the back buffer are copied forward to the front buffer when you call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method, where it is displayed on the hardware.</span></span> <span data-ttu-id="99543-110">場合によっては、フロントバッファーが使用できなくなることがあります。</span><span class="sxs-lookup"><span data-stu-id="99543-110">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="99543-111">この可用性の欠如は、画面のロック、全画面の専用 Direct3D アプリケーション、ユーザー切り替え、またはその他のシステムアクティビティによって発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="99543-111">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="99543-112">このエラーが発生すると、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> イベントを処理することによって、WPF アプリケーションに通知されます。</span><span class="sxs-lookup"><span data-stu-id="99543-112">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="99543-113">アプリケーションがフロントバッファーを使用できなくなった場合の応答は、WPF がソフトウェアレンダリングにフォールバックすることが有効になっているかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="99543-113">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="99543-114"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> メソッドには、WPF がソフトウェアレンダリングにフォールバックするかどうかを指定するパラメーターを受け取るオーバーロードがあります。</span><span class="sxs-lookup"><span data-stu-id="99543-114">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-does-not-fall-back-to-software-rendering"></a><span data-ttu-id="99543-115">WPF がソフトウェアレンダリングにフォールバックしない場合に、使用できないフロントバッファーに応答する</span><span class="sxs-lookup"><span data-stu-id="99543-115">Responding to an Unavailable Front Buffer when WPF Does not Fall Back to Software Rendering</span></span>  
 <span data-ttu-id="99543-116"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> のオーバーロードを呼び出すか、`enableSoftwareFallback` パラメーターを `false`に設定して <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> のオーバーロードを呼び出すと、フロントバッファーが使用できなくなり、何も表示されないときに、レンダリングシステムによってバックバッファーへの参照が解放されます。</span><span class="sxs-lookup"><span data-stu-id="99543-116">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="99543-117">フロントバッファーが再び使用可能になると、レンダリングシステムによって <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> イベントが発生し、WPF アプリケーションに通知されます。</span><span class="sxs-lookup"><span data-stu-id="99543-117">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="99543-118"><xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> イベントのイベントハンドラーを作成して、有効な Direct3D サーフェイスで再び描画を再開することができます。</span><span class="sxs-lookup"><span data-stu-id="99543-118">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="99543-119">レンダリングを再開するには、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="99543-119">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-falls-back-to-software-rendering"></a><span data-ttu-id="99543-120">WPF がソフトウェアレンダリングにフォールバックするときに利用できないフロントバッファーに応答する</span><span class="sxs-lookup"><span data-stu-id="99543-120">Responding to an Unavailable Front Buffer when WPF Falls Back to Software Rendering</span></span>  
 <span data-ttu-id="99543-121">`enableSoftwareFallback` パラメーターを `true`に設定して <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> オーバーロードを呼び出すと、フロントバッファーが使用できなくなったときに、レンダリングシステムはバックバッファーへの参照を保持するため、フロントバッファーが再び使用可能になったときに <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> を呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="99543-121">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="99543-122">場合によっては、ユーザーのデバイスが使用できなくなることがあります。</span><span class="sxs-lookup"><span data-stu-id="99543-122">There may be situations where the user's device becomes unavailable.</span></span>  <span data-ttu-id="99543-123">その場合は、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> を呼び出して、WPF のバックバッファーへの参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="99543-123">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF's reference to the back buffer.</span></span>  <span data-ttu-id="99543-124">デバイスをリセットする必要がある場合は、`backBuffer` パラメーターを `null`に設定して <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> を呼び出し、`backBuffer` を有効な Direct3D サーフェイスに設定して <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> をもう一度呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99543-124">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with the `backBuffer` parameter set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99543-125">パフォーマンスは、Direct3D サーフェイスの設定に大きく左右されます。</span><span class="sxs-lookup"><span data-stu-id="99543-125">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="99543-126">詳細については、「 [Direct3D9 と WPF の相互運用性のパフォーマンスに関する考慮事項](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-126">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99543-127"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> を呼び出し、`enableSoftwareFallback` パラメーターに `true` を指定していない場合、<xref:System.Windows.Interop.D3DImage> クラスは、リモートデスクトップ接続を介して、WPF がソフトウェアでレンダリングするときに Direct3D コンテンツを表示しません。</span><span class="sxs-lookup"><span data-stu-id="99543-127">The <xref:System.Windows.Interop.D3DImage> class does not display Direct3D content when WPF renders in software, such as over a Remote Desktop connection, unless you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> and specify `true` for the `enableSoftwareFallback` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99543-128">次のコード例は、XAML で <xref:System.Windows.Interop.D3DImage> を宣言する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="99543-128">The following code example shows how to declare a <xref:System.Windows.Interop.D3DImage> in XAML.</span></span> <span data-ttu-id="99543-129"><xref:System.Windows.Interop> 名前空間は、既定の XAML 名前空間に含まれていないため、マップする必要があります。</span><span class="sxs-lookup"><span data-stu-id="99543-129">You must map the <xref:System.Windows.Interop> namespace, because it is not included in the default XAML namespaces.</span></span> <span data-ttu-id="99543-130">詳細については、「[チュートリアル: WPF での Direct3D9 コンテンツのホスト](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-130">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-xaml[System.Windows.Interop.D3DImage#10](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99543-131">アンマネージリソースへのアクセスを許可します。</span><span class="sxs-lookup"><span data-stu-id="99543-131">for access to unmanaged resources.</span></span> <span data-ttu-id="99543-132">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。</span><span class="sxs-lookup"><span data-stu-id="99543-132">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span></span> <span data-ttu-id="99543-133">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99543-133">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99543-134"><see cref="T:System.Windows.Interop.D3DImage" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="99543-134">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99543-135"><see cref="T:System.Windows.Interop.D3DImage" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="99543-135">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-136">既定の表示解像度は 1/1/96 インチです。</span><span class="sxs-lookup"><span data-stu-id="99543-136">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99543-137">アンマネージリソースへのアクセスを許可します。</span><span class="sxs-lookup"><span data-stu-id="99543-137">for access to unmanaged resources.</span></span> <span data-ttu-id="99543-138">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="99543-138">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="99543-139">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99543-139">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage (double dpiX, double dpiY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 dpiX, float64 dpiY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dpiX As Double, dpiY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage(double dpiX, double dpiY);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.D3DImage : double * double -&gt; System.Windows.Interop.D3DImage" Usage="new System.Windows.Interop.D3DImage (dpiX, dpiY)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dpiX" Type="System.Double" />
        <Parameter Name="dpiY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dpiX"><span data-ttu-id="99543-140">x 軸の表示解像度。</span><span class="sxs-lookup"><span data-stu-id="99543-140">The display resolution on the x-axis.</span></span></param>
        <param name="dpiY"><span data-ttu-id="99543-141">y 軸の表示解像度。</span><span class="sxs-lookup"><span data-stu-id="99543-141">The display resolution on the y-axis.</span></span></param>
        <summary><span data-ttu-id="99543-142"><see cref="T:System.Windows.Interop.D3DImage" /> クラスの新しいインスタンスを、指定された表示解像度で初期化します。</span><span class="sxs-lookup"><span data-stu-id="99543-142">Initializes a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> class with the specified display resolution.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-143">既定の表示解像度は 1/1/96 インチです。</span><span class="sxs-lookup"><span data-stu-id="99543-143">The default display resolution is 1/96th inch.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="99543-144"><paramref name="dpiX" /> または <paramref name="dpiY" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="99543-144"><paramref name="dpiX" /> or <paramref name="dpiY" /> is less than zero.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99543-145">アンマネージリソースへのアクセスを許可します。</span><span class="sxs-lookup"><span data-stu-id="99543-145">for access to unmanaged resources.</span></span> <span data-ttu-id="99543-146">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="99543-146">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="99543-147">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99543-147">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
      </Docs>
    </Member>
    <Member MemberName="AddDirtyRect">
      <MemberSignature Language="C#" Value="public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDirtyRect(valuetype System.Windows.Int32Rect dirtyRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDirtyRect (dirtyRect As Int32Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDirtyRect(System::Windows::Int32Rect dirtyRect);" />
      <MemberSignature Language="F#" Value="member this.AddDirtyRect : System.Windows.Int32Rect -&gt; unit" Usage="d3DImage.AddDirtyRect dirtyRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirtyRect" Type="System.Windows.Int32Rect" />
      </Parameters>
      <Docs>
        <param name="dirtyRect"><span data-ttu-id="99543-148">変更される領域を表す <see cref="T:System.Windows.Int32Rect" />。</span><span class="sxs-lookup"><span data-stu-id="99543-148">An <see cref="T:System.Windows.Int32Rect" /> that represents the area that changed.</span></span></param>
        <summary><span data-ttu-id="99543-149">変更されるバック バッファーの領域を指定します。</span><span class="sxs-lookup"><span data-stu-id="99543-149">Specifies the area of the back buffer that changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-150"><xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> メソッドを呼び出して、コードがバックバッファーに対して行った変更を示します。</span><span class="sxs-lookup"><span data-stu-id="99543-150">Call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to indicate changes your code has made to the back buffer.</span></span> <span data-ttu-id="99543-151">表示するには、バックバッファーの変更された領域に、<xref:System.Windows.Interop.D3DImage>上の対応する変更された領域が必要です。</span><span class="sxs-lookup"><span data-stu-id="99543-151">To be rendered, the changed area on the back buffer must have a corresponding changed area on the <xref:System.Windows.Interop.D3DImage>.</span></span>  
  
 <span data-ttu-id="99543-152"><xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> メソッドを呼び出す前に、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> および <xref:System.Windows.Interop.D3DImage.Lock%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99543-152">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> and <xref:System.Windows.Interop.D3DImage.Lock%2A> methods before calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="99543-153"><xref:System.Windows.Interop.D3DImage.Unlock%2A> メソッドを呼び出して、変更された領域をフロントバッファーにコピーします。</span><span class="sxs-lookup"><span data-stu-id="99543-153">Call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the changed areas to the front buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99543-154"><xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> メソッドを数回呼び出した後、変更された領域は1つの領域にマージされます。</span><span class="sxs-lookup"><span data-stu-id="99543-154">After a few calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method, the changed areas are merged into a single area.</span></span> <span data-ttu-id="99543-155">つまり、変更された領域の外部に有効なデータが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="99543-155">This means you must have valid data outside of the changed areas.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99543-156">次のコード例は、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> メソッドを呼び出して、バックバッファー内の変更された領域を指定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="99543-156">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method to specify the changed region in the back buffer.</span></span> <span data-ttu-id="99543-157">詳細については、「[チュートリアル: WPF での Direct3D9 コンテンツのホスト](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-157">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="99543-158"><see cref="M:System.Windows.Interop.D3DImage.Lock" /> メソッドまたは <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> メソッドへの呼び出しによりロックされなかったビットマップ。</span><span class="sxs-lookup"><span data-stu-id="99543-158">The bitmap has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span></span>  
  
<span data-ttu-id="99543-159">- または -</span><span class="sxs-lookup"><span data-stu-id="99543-159">-or-</span></span> 
<span data-ttu-id="99543-160"><see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> メソッドへの呼び出しにより割り当てられていないバック バッファー。</span><span class="sxs-lookup"><span data-stu-id="99543-160">The back buffer has not been assigned by a call to the <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> method.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="99543-161">次の条件の 1 つ以上が true であること。</span><span class="sxs-lookup"><span data-stu-id="99543-161">One or more of the following conditions is true.</span></span>  
  
 <span data-ttu-id="99543-162"><paramref name="dirtyRect.X" /> &lt; 0</span><span class="sxs-lookup"><span data-stu-id="99543-162"><paramref name="dirtyRect.X" /> &lt; 0</span></span> 
 <span data-ttu-id="99543-163"><paramref name="dirtyRect.Y" /> &lt; 0</span><span class="sxs-lookup"><span data-stu-id="99543-163"><paramref name="dirtyRect.Y" /> &lt; 0</span></span> 
 <span data-ttu-id="99543-164"><paramref name="dirtyRect.Width" /> &lt; 0 または <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 または <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span><span class="sxs-lookup"><span data-stu-id="99543-164"><paramref name="dirtyRect.Width" /> &lt; 0 or <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 or <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99543-165">アンマネージリソースへのアクセスを許可します。</span><span class="sxs-lookup"><span data-stu-id="99543-165">for access to unmanaged resources.</span></span> <span data-ttu-id="99543-166">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="99543-166">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="99543-167">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99543-167">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Interop.D3DImage" Usage="d3DImage.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99543-168">この <see cref="T:System.Windows.Interop.D3DImage" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの値の詳細コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="99543-168">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's values.</span></span> <span data-ttu-id="99543-169">このメソッドは、依存関係プロパティをコピーするときにリソース参照とデータ バインディングをコピーしますが (ただし、これらは解決されなくなる場合があります)、アニメーションやその現在の値はコピーしません。</span><span class="sxs-lookup"><span data-stu-id="99543-169">When copying dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="99543-170">現在のオブジェクトの変更可能な複製。</span><span class="sxs-lookup"><span data-stu-id="99543-170">A modifiable clone of the current object.</span></span> <span data-ttu-id="99543-171">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティが <see langword="true." /> であった場合でも、<see langword="false" /> になります。</span><span class="sxs-lookup"><span data-stu-id="99543-171">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-172">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="99543-172">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="99543-173">便宜上、このメソッドは、厳密に型指定された実装を使用して、継承されたバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="99543-173">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="99543-174">詳細については、「<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-174">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="99543-175">複製する対象のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="99543-175">The object to clone.</span></span></param>
        <summary><span data-ttu-id="99543-176">基本 (アニメーション化されていない) プロパティ値を使用して、インスタンスを、指定した <see cref="T:System.Windows.Freezable" /> の複製 (詳細コピー) にします。</span><span class="sxs-lookup"><span data-stu-id="99543-176">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Interop.D3DImage" Usage="d3DImage.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99543-177">この <see cref="T:System.Windows.Interop.D3DImage" /> オブジェクトの変更可能な複製を作成し、このオブジェクトの現在値の詳細コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="99543-177">Creates a modifiable clone of this <see cref="T:System.Windows.Interop.D3DImage" /> object, making deep copies of this object's current values.</span></span> <span data-ttu-id="99543-178">リソース参照、データ バインディング、アニメーションはコピーされませんが、それらの現在値はコピーされます。</span><span class="sxs-lookup"><span data-stu-id="99543-178">Resource references, data bindings, and animations are not copied, but their current values are copied.</span></span></summary>
        <returns><span data-ttu-id="99543-179">現在のオブジェクトの変更可能な複製。</span><span class="sxs-lookup"><span data-stu-id="99543-179">A modifiable clone of the current object.</span></span> <span data-ttu-id="99543-180">複製されたオブジェクトの <see cref="P:System.Windows.Freezable.IsFrozen" /> プロパティは、ソースの <see langword="false" /> プロパティが <see cref="P:System.Windows.Freezable.IsFrozen" /> であった場合でも、<see langword="true" /> になります。</span><span class="sxs-lookup"><span data-stu-id="99543-180">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-181">このメソッドを使用して、固定された <xref:System.Windows.Freezable> オブジェクト (または任意の <xref:System.Windows.Freezable> オブジェクト) の変更可能なコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="99543-181">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="99543-182">便宜上、このメソッドは、厳密に型指定された実装を使用して、継承されたバージョンをシャドウします。</span><span class="sxs-lookup"><span data-stu-id="99543-182">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="99543-183">詳細については、「<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-183">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="99543-184">複製する <see cref="T:System.Windows.Freezable" />。</span><span class="sxs-lookup"><span data-stu-id="99543-184">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span></span></param>
        <summary><span data-ttu-id="99543-185">現在のプロパティ値を使用して、インスタンスを、指定した <see cref="T:System.Windows.Freezable" /> の変更可能な複製 (詳細コピー) にします。</span><span class="sxs-lookup"><span data-stu-id="99543-185">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CopyBackBuffer">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Imaging.BitmapSource CopyBackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Imaging.BitmapSource CopyBackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CopyBackBuffer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CopyBackBuffer () As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Imaging::BitmapSource ^ CopyBackBuffer();" />
      <MemberSignature Language="F#" Value="abstract member CopyBackBuffer : unit -&gt; System.Windows.Media.Imaging.BitmapSource&#xA;override this.CopyBackBuffer : unit -&gt; System.Windows.Media.Imaging.BitmapSource" Usage="d3DImage.CopyBackBuffer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99543-186"><see cref="T:System.Windows.Interop.D3DImage" /> のソフトウェア コピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="99543-186">Creates a software copy of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <returns><span data-ttu-id="99543-187">バック バッファーの現在の状態のソフトウェア コピーである <see cref="T:System.Windows.Media.Imaging.BitmapSource" />、バック バッファーを読み込むことができない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="99543-187">A <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> that is a software copy of the current state of the back buffer; otherwise, <see langword="null" /> if the back buffer cannot be read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-188"><xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> メソッドは、印刷システムや <xref:System.Windows.Media.Imaging.RenderTargetBitmap> クラスなどのクライアントによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="99543-188">The <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method is called by clients such as the printing system and the <xref:System.Windows.Media.Imaging.RenderTargetBitmap> class.</span></span>  
  
 <span data-ttu-id="99543-189">必要に応じて、<xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> メソッドをオーバーライドしてカスタムロジックを実装し、別の <xref:System.Windows.Media.Imaging.BitmapSource>を返します。</span><span class="sxs-lookup"><span data-stu-id="99543-189">Optionally override the <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> method to implement custom logic and return a different <xref:System.Windows.Media.Imaging.BitmapSource>.</span></span> <span data-ttu-id="99543-190">たとえば、既定の <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> の実装が `null`を返す場合は、<xref:System.Windows.Media.Imaging.BitmapSource> プレースホルダーを返すことができます。</span><span class="sxs-lookup"><span data-stu-id="99543-190">For example, you can return a placeholder <xref:System.Windows.Media.Imaging.BitmapSource> if the default <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A> implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99543-191">アンマネージリソースへのアクセスを許可します。</span><span class="sxs-lookup"><span data-stu-id="99543-191">for access to unmanaged resources.</span></span> <span data-ttu-id="99543-192">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="99543-192">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="99543-193">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99543-193">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="d3DImage.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99543-194">派生クラスで実装された場合、<see cref="T:System.Windows.Interop.D3DImage" /> 派生クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="99543-194">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Interop.D3DImage" /> derived class.</span></span></summary>
        <returns><span data-ttu-id="99543-195">新しいインスタンス。</span><span class="sxs-lookup"><span data-stu-id="99543-195">The new instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-196"><xref:System.Windows.Interop.D3DImage> クラスから派生する場合は、<xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A> メソッドをオーバーライドして、正しい複製を有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="99543-196">If you derive from the <xref:System.Windows.Interop.D3DImage> class, you must override the <xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A> method to enable correct cloning.</span></span> <span data-ttu-id="99543-197">既定の実装では `return new D3DImage()`が実行されますが、インスタンスが異なるクラスである場合は正しくありません。</span><span class="sxs-lookup"><span data-stu-id="99543-197">The default implementation performs a `return new D3DImage()`, which will not be correct if the instance is a different class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!D3DImage ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="d3DImage.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99543-198"><see cref="T:System.Windows.Interop.D3DImage" /> がガベージ コレクションによって回収される前にリソースを解放し、その他のクリーンアップ操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="99543-198">Frees resources and performs other cleanup operations before the <see cref="T:System.Windows.Interop.D3DImage" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-199">このメソッドは、<xref:System.Object.Finalize%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="99543-199">This method overrides <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="99543-200">アプリケーションコードはこのメソッドを呼び出すことはできません。ガベージコレクターによる終了処理が、<xref:System.GC.SuppressFinalize%2A> メソッドの呼び出しによって無効にされている場合を除き、オブジェクトの `Finalize` メソッドは、ガベージコレクション中に自動的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="99543-200">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="99543-201">詳細については、「 [Finalize メソッドとデストラクター](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))」、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」、および「 [finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-201">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99543-202">アンマネージリソースへのアクセスを許可します。</span><span class="sxs-lookup"><span data-stu-id="99543-202">for access to unmanaged resources.</span></span> <span data-ttu-id="99543-203">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="99543-203">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="99543-204">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99543-204">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override sealed bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="d3DImage.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking"><span data-ttu-id="99543-205">実行されません。</span><span class="sxs-lookup"><span data-stu-id="99543-205">Has no effect.</span></span></param>
        <summary><span data-ttu-id="99543-206"><see cref="T:System.Windows.Interop.D3DImage" /> を変更不可能な状態にするか、変更不可能な状態にできるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="99543-206">Makes the <see cref="T:System.Windows.Interop.D3DImage" /> unmodifiable or determines whether it can be made unmodifiable.</span></span></summary>
        <returns><span data-ttu-id="99543-207">常に <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99543-207"><see langword="false" /> in all cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-208"><xref:System.Windows.Interop.D3DImage> クラスは、フロントバッファーの可用性のために変更が常に可能であるため、固定を許可しません。</span><span class="sxs-lookup"><span data-stu-id="99543-208">The <xref:System.Windows.Interop.D3DImage> class does not allow freezing because changes are always possible due to front buffer availability.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="99543-209">コピーするインスタンス。</span><span class="sxs-lookup"><span data-stu-id="99543-209">The instance to copy.</span></span></param>
        <summary><span data-ttu-id="99543-210">基本プロパティ値 (アニメーション化されていない値) を使用して、インスタンスを、指定した <see cref="T:System.Windows.Freezable" /> の固定された複製にします。</span><span class="sxs-lookup"><span data-stu-id="99543-210">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="d3DImage.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="99543-211">コピーし、固定する <see cref="T:System.Windows.Freezable" />。</span><span class="sxs-lookup"><span data-stu-id="99543-211">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span></span></param>
        <summary><span data-ttu-id="99543-212">現在のインスタンスを、指定した <see cref="T:System.Windows.Freezable" /> の固定された複製にします。</span><span class="sxs-lookup"><span data-stu-id="99543-212">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="99543-213">オブジェクトに、アニメーション化された依存関係プロパティが存在する場合、現在アニメーション化されている値がコピーされます。</span><span class="sxs-lookup"><span data-stu-id="99543-213">If the object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override sealed double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : double" Usage="System.Windows.Interop.D3DImage.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99543-214"><see cref="T:System.Windows.Interop.D3DImage" /> の高さを取得します。</span><span class="sxs-lookup"><span data-stu-id="99543-214">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <value><span data-ttu-id="99543-215"><see cref="T:System.Windows.Interop.D3DImage" /> の高さ (測定単位)。</span><span class="sxs-lookup"><span data-stu-id="99543-215">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span></span> <span data-ttu-id="99543-216">測定単位は 1/96 インチです。</span><span class="sxs-lookup"><span data-stu-id="99543-216">A measure unit is 1/96th inch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-217"><xref:System.Windows.Interop.D3DImage.Height%2A> の値は、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> メソッドの呼び出しによって新しいバックバッファーが割り当てられたときに変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="99543-217">The value of <xref:System.Windows.Interop.D3DImage.Height%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailable">
      <MemberSignature Language="C#" Value="public bool IsFrontBufferAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrontBufferAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrontBufferAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrontBufferAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFrontBufferAvailable : bool" Usage="System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99543-218">フロント バッファーが存在するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="99543-218">Gets a value that indicates whether a front buffer exists.</span></span></summary>
        <value><span data-ttu-id="99543-219">フロント バッファーが存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99543-219"><see langword="true" /> if a front buffer exists; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-220">場合によっては、フロントバッファーが使用できなくなることがあります。</span><span class="sxs-lookup"><span data-stu-id="99543-220">Occasionally, the front buffer becomes unavailable.</span></span> <span data-ttu-id="99543-221">この可用性の欠如は、画面のロック、全画面の専用 Direct3D アプリケーション、ユーザー切り替え、またはその他のシステムアクティビティによって発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="99543-221">This lack of availability can be caused by screen locking, full-screen exclusive Direct3D applications, user-switching, or other system activities.</span></span> <span data-ttu-id="99543-222">このエラーが発生すると、<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> イベントを処理することによって、WPF アプリケーションに通知されます。</span><span class="sxs-lookup"><span data-stu-id="99543-222">When this occurs, your WPF application is notified by handling the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event.</span></span>  <span data-ttu-id="99543-223">アプリケーションがフロントバッファーを使用できなくなった場合の応答は、WPF がソフトウェアレンダリングにフォールバックすることが有効になっているかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="99543-223">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="99543-224"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> メソッドには、WPF がソフトウェアレンダリングにフォールバックするかどうかを指定するパラメーターを受け取るオーバーロードがあります。</span><span class="sxs-lookup"><span data-stu-id="99543-224">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="99543-225">詳細については、<xref:System.Windows.Interop.D3DImage> クラスの解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-225">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
<a name="dependencyPropertyInfo_IsFrontBufferAvailable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="99543-226">依存プロパティ情報</span><span class="sxs-lookup"><span data-stu-id="99543-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="99543-227">識別子フィールド</span><span class="sxs-lookup"><span data-stu-id="99543-227">Identifier field</span></span>|<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty>|  
|<span data-ttu-id="99543-228">メタデータプロパティが `true` に設定される</span><span class="sxs-lookup"><span data-stu-id="99543-228">Metadata properties set to `true`</span></span>|<span data-ttu-id="99543-229">None</span><span class="sxs-lookup"><span data-stu-id="99543-229">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="99543-230">次のコード例は、コンポジションターゲットのレンダリング時に <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A> プロパティを確認する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="99543-230">The following code example shows how to check the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A> property when rendering the composition target.</span></span> <span data-ttu-id="99543-231">詳細については、「[チュートリアル: WPF での Direct3D9 コンテンツのホスト](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-231">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
        <altmember cref="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsFrontBufferAvailableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="F#" Value="member this.IsFrontBufferAvailableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsFrontBufferAvailableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99543-232"><see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> プロパティが変更されたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="99543-232">Occurs when the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-233">フロントバッファーの状態が変化したときに通知されるように <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> を処理します。</span><span class="sxs-lookup"><span data-stu-id="99543-233">Handle the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> to be notified when the status of the front buffer changes.</span></span> <span data-ttu-id="99543-234">アプリケーションがフロントバッファーを使用できなくなった場合の応答は、WPF がソフトウェアレンダリングにフォールバックすることが有効になっているかどうかによって異なります。</span><span class="sxs-lookup"><span data-stu-id="99543-234">How your application responds to the front buffer becoming unavailable depends on whether WPF is enabled to fall back to software rendering.</span></span> <span data-ttu-id="99543-235"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> メソッドには、WPF がソフトウェアレンダリングにフォールバックするかどうかを指定するパラメーターを受け取るオーバーロードがあります。</span><span class="sxs-lookup"><span data-stu-id="99543-235">The <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method has an overload that takes a parameter that specifies whether WPF falls back to software rendering.</span></span> <span data-ttu-id="99543-236">詳細については、<xref:System.Windows.Interop.D3DImage> クラスの解説を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-236">For more information, see the remarks in the <xref:System.Windows.Interop.D3DImage> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFrontBufferAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFrontBufferAvailableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFrontBufferAvailableProperty : System.Windows.DependencyProperty" Usage="System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99543-237"><see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> 依存関係プロパティを識別します。</span><span class="sxs-lookup"><span data-stu-id="99543-237">Identifies the <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Lock();" />
      <MemberSignature Language="F#" Value="member this.Lock : unit -&gt; unit" Usage="d3DImage.Lock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99543-238"><see cref="T:System.Windows.Interop.D3DImage" /> をロックし、バック バッファーでの操作を有効にします。</span><span class="sxs-lookup"><span data-stu-id="99543-238">Locks the <see cref="T:System.Windows.Interop.D3DImage" /> and enables operations on the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-239"><xref:System.Windows.Interop.D3DImage.Lock%2A> メソッドを呼び出して、<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> メソッドと <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> メソッドを呼び出して、バックバッファーを変更します。</span><span class="sxs-lookup"><span data-stu-id="99543-239">Call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to change the back buffer by calling the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> and <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> methods.</span></span> <span data-ttu-id="99543-240"><xref:System.Windows.Interop.D3DImage> がロックされている間、アプリケーションは、バックバッファーに割り当てられた Direct3D サーフェイスにもレンダリングできます。</span><span class="sxs-lookup"><span data-stu-id="99543-240">While the <xref:System.Windows.Interop.D3DImage> is locked, your application can also render to the Direct3D surface assigned to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99543-241"><xref:System.Windows.Interop.D3DImage.Lock%2A> メソッドは、レンダリングシステムがフロントバッファーを更新するためにバックバッファーを読み取っているときにブロックします。</span><span class="sxs-lookup"><span data-stu-id="99543-241">The <xref:System.Windows.Interop.D3DImage.Lock%2A> method blocks when the rendering system is reading the back buffer to update the front buffer.</span></span> <span data-ttu-id="99543-242">無期限にブロックされないようにするには、<xref:System.Windows.Interop.D3DImage.TryLock%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="99543-242">Use the <xref:System.Windows.Interop.D3DImage.TryLock%2A> method to avoid blocking indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99543-243">次のコード例は、<xref:System.Windows.Interop.D3DImage.Lock%2A> メソッドを呼び出して、バックバッファーへの更新を有効にする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="99543-243">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Lock%2A> method to enable updates to the back buffer.</span></span> <span data-ttu-id="99543-244">詳細については、「[チュートリアル: WPF での Direct3D9 コンテンツのホスト](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-244">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="99543-245">ロック カウントが <see cref="F:System.UInt32.MaxValue" /> と等しい。</span><span class="sxs-lookup"><span data-stu-id="99543-245">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.Media.ImageMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Metadata As ImageMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageMetadata ^ Metadata { System::Windows::Media::ImageMetadata ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : System.Windows.Media.ImageMetadata" Usage="System.Windows.Interop.D3DImage.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99543-246">イメージ ソースに関連付けられているメタデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="99543-246">Gets the metadata associated with the image source.</span></span></summary>
        <value><span data-ttu-id="99543-247">常に <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="99543-247"><see langword="null" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelHeight">
      <MemberSignature Language="C#" Value="public int PixelHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelHeight : int" Usage="System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99543-248"><see cref="T:System.Windows.Interop.D3DImage" /> の高さ (ピクセル単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="99543-248">Gets the height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></summary>
        <value><span data-ttu-id="99543-249"><see cref="T:System.Windows.Interop.D3DImage" /> の高さ (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="99543-249">The height of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-250"><xref:System.Windows.Interop.D3DImage.PixelHeight%2A> の値は、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> メソッドの呼び出しによって新しいバックバッファーが割り当てられたときに変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="99543-250">The value of <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99543-251">次のコード例は、<xref:System.Windows.Interop.D3DImage.PixelHeight%2A> プロパティを使用して、バックバッファー内の変更された領域を指定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="99543-251">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelHeight%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="99543-252">詳細については、「[チュートリアル: WPF での Direct3D9 コンテンツのホスト](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-252">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelWidth" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PixelWidth">
      <MemberSignature Language="C#" Value="public int PixelWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PixelWidth : int" Usage="System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99543-253"><see cref="T:System.Windows.Interop.D3DImage" /> の幅 (ピクセル単位) を取得します。</span><span class="sxs-lookup"><span data-stu-id="99543-253">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></summary>
        <value><span data-ttu-id="99543-254"><see cref="T:System.Windows.Interop.D3DImage" /> の幅 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="99543-254">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-255"><xref:System.Windows.Interop.D3DImage.PixelWidth%2A> の値は、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> メソッドの呼び出しによって新しいバックバッファーが割り当てられたときに変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="99543-255">The value of <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99543-256">次のコード例は、<xref:System.Windows.Interop.D3DImage.PixelWidth%2A> プロパティを使用して、バックバッファー内の変更された領域を指定する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="99543-256">The following code example shows how to use the <xref:System.Windows.Interop.D3DImage.PixelWidth%2A> property to specify the changed region in the back buffer.</span></span> <span data-ttu-id="99543-257">詳細については、「[チュートリアル: WPF での Direct3D9 コンテンツのホスト](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-257">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelHeight" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBackBuffer">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99543-258">バック バッファーのソースとして、Direct3D サーフェイスを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="99543-258">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="F#" Value="member this.SetBackBuffer : System.Windows.Interop.D3DResourceType * nativeint -&gt; unit" Usage="d3DImage.SetBackBuffer (backBufferType, backBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="backBufferType"><span data-ttu-id="99543-259">Direct3D サーフェイスの種類です。</span><span class="sxs-lookup"><span data-stu-id="99543-259">The type of Direct3D surface.</span></span> <span data-ttu-id="99543-260">有効な <see cref="T:System.Windows.Interop.D3DResourceType" /> を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="99543-260">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></param>
        <param name="backBuffer"><span data-ttu-id="99543-261">バック バッファーとして割り当てるための Direct3D サーフェイス。</span><span class="sxs-lookup"><span data-stu-id="99543-261">The Direct3D surface to assign as the back buffer.</span></span></param>
        <summary><span data-ttu-id="99543-262">バック バッファーのソースとして、Direct3D サーフェイスを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="99543-262">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-263"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> メソッドを呼び出して、バックバッファーに Direct3D サーフェイスを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="99543-263">Call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface to the back buffer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99543-264">パフォーマンスは、Direct3D サーフェイスの設定に大きく左右されます。</span><span class="sxs-lookup"><span data-stu-id="99543-264">Performance depends greatly on the settings of the Direct3D surface.</span></span> <span data-ttu-id="99543-265">詳細については、「 [Direct3D9 と WPF の相互運用性のパフォーマンスに関する考慮事項](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-265">For more information, see [Performance Considerations for Direct3D9 and WPF Interoperability](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md).</span></span>  
  
 <span data-ttu-id="99543-266"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> のオーバーロードは、`enableSoftwareFallback` パラメーターを `false`に設定して <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> のオーバーロードを呼び出すことと同じです。</span><span class="sxs-lookup"><span data-stu-id="99543-266">Calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload is identical to calling the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`.</span></span> <span data-ttu-id="99543-267"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> を呼び出すか、`enableSoftwareFallback` パラメーターを `false`に設定して <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> を呼び出すと、フロントバッファーが使用できなくなり、何も表示されない場合に、レンダリングシステムによってバックバッファーへの参照が解放されます。</span><span class="sxs-lookup"><span data-stu-id="99543-267">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> or call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="99543-268">フロントバッファーが再び使用可能になると、レンダリングシステムによって <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> イベントが発生し、WPF アプリケーションに通知されます。</span><span class="sxs-lookup"><span data-stu-id="99543-268">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="99543-269"><xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> イベントのイベントハンドラーを作成して、有効な Direct3D サーフェイスで再び描画を再開することができます。</span><span class="sxs-lookup"><span data-stu-id="99543-269">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="99543-270">レンダリングを再開するには、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="99543-270">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="99543-271">次の一覧は、`IDirect3DSurface9` の種類に必要なバックバッファー設定を示しています。</span><span class="sxs-lookup"><span data-stu-id="99543-271">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="99543-272">`D3DFMT_A8R8G8B8` または `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="99543-272">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="99543-273">マルチサンプリングは `IDirect3DSurface9Ex` サーフェイスでのみ許可されます。</span><span class="sxs-lookup"><span data-stu-id="99543-273">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99543-274">次のコード例は、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> メソッドを呼び出して、Direct3D サーフェイスを割り当てる方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="99543-274">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method to assign a Direct3D surface.</span></span> <span data-ttu-id="99543-275">詳細については、「[チュートリアル: WPF での Direct3D9 コンテンツのホスト](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-275">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="99543-276"><see cref="T:System.Windows.Interop.D3DImage" /> は <see cref="M:System.Windows.Interop.D3DImage.Lock" /> メソッドまたは <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> メソッドへの呼び出しにより、ロックされていません。</span><span class="sxs-lookup"><span data-stu-id="99543-276">The <see cref="T:System.Windows.Interop.D3DImage" /> has not been locked by a call to the <see cref="M:System.Windows.Interop.D3DImage.Lock" /> or <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> methods.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="99543-277"><paramref name="backBufferType" /> は有効な <see cref="T:System.Windows.Interop.D3DResourceType" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="99543-277"><paramref name="backBufferType" /> is not a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="99543-278"><paramref name="backBuffer" /> の作成パラメーターが <paramref name="backBufferType" /> の要求を満たしていない、または <paramref name="backBuffer" /> デバイスが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="99543-278">The creation parameters for <paramref name="backBuffer" /> do not meet the requirements for the <paramref name="backBufferType" />-or-The <paramref name="backBuffer" /> device is not valid.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="99543-279">アンマネージリソースへのアクセスを許可します。</span><span class="sxs-lookup"><span data-stu-id="99543-279">for access to unmanaged resources.</span></span> <span data-ttu-id="99543-280">セキュリティアクション: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="99543-280">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="99543-281">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="99543-281">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer, bool enableSoftwareFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr, enableSoftwareFallback As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="F#" Value="member this.SetBackBuffer : System.Windows.Interop.D3DResourceType * nativeint * bool -&gt; unit" Usage="d3DImage.SetBackBuffer (backBufferType, backBuffer, enableSoftwareFallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="backBuffer" Type="System.IntPtr" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="enableSoftwareFallback" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="backBufferType"><span data-ttu-id="99543-282">Direct3D サーフェイスの種類です。</span><span class="sxs-lookup"><span data-stu-id="99543-282">The type of Direct3D surface.</span></span> <span data-ttu-id="99543-283">有効な <see cref="T:System.Windows.Interop.D3DResourceType" /> を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="99543-283">Must be a valid <see cref="T:System.Windows.Interop.D3DResourceType" />.</span></span></param>
        <param name="backBuffer"><span data-ttu-id="99543-284">バック バッファーとして割り当てるための Direct3D サーフェイス。</span><span class="sxs-lookup"><span data-stu-id="99543-284">The Direct3D surface to assign as the back buffer.</span></span></param>
        <param name="enableSoftwareFallback"><span data-ttu-id="99543-285">ソフトウェア レンダリングでフォールバックする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99543-285"><see langword="true" /> to fall back on software rendering; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="99543-286">バック バッファーのソースとして、Direct3D サーフェイスを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="99543-286">Assigns a Direct3D surface as the source of the back buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-287"><xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> のオーバーロードを呼び出すか、`enableSoftwareFallback` パラメーターを `false`に設定して <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> のオーバーロードを呼び出すと、フロントバッファーが使用できなくなり、何も表示されないときに、レンダリングシステムによってバックバッファーへの参照が解放されます。</span><span class="sxs-lookup"><span data-stu-id="99543-287">When you call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29> overload or call the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> overload with the `enableSoftwareFallback` parameter set to `false`, the rendering system releases its reference to the back buffer when the front buffer becomes unavailable and nothing is displayed.</span></span> <span data-ttu-id="99543-288">フロントバッファーが再び使用可能になると、レンダリングシステムによって <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> イベントが発生し、WPF アプリケーションに通知されます。</span><span class="sxs-lookup"><span data-stu-id="99543-288">When the front buffer is available again, the rendering system raises the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to notify your WPF application.</span></span>  <span data-ttu-id="99543-289"><xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> イベントのイベントハンドラーを作成して、有効な Direct3D サーフェイスで再び描画を再開することができます。</span><span class="sxs-lookup"><span data-stu-id="99543-289">You can create an event handler for the <xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged> event to restart rendering again with a valid Direct3D surface.</span></span> <span data-ttu-id="99543-290">レンダリングを再開するには、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="99543-290">To restart rendering, you must call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>.</span></span>  
  
 <span data-ttu-id="99543-291">`enableSoftwareFallback` パラメーターを `true`に設定して <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> を呼び出すと、フロントバッファーが使用できなくなったときに、レンダリングシステムはバックバッファーへの参照を保持するため、フロントバッファーが再び使用可能になったときに <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> を呼び出す必要はありません。</span><span class="sxs-lookup"><span data-stu-id="99543-291">When you call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29> with the `enableSoftwareFallback` parameter set to `true`, the rendering system retains its reference to the back buffer when the front buffer becomes unavailable, so there is no need to call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> when the front buffer is available again.</span></span>  <span data-ttu-id="99543-292">場合によっては、ユーザーのデバイスが使用できなくなることがあります。</span><span class="sxs-lookup"><span data-stu-id="99543-292">There may be situations where the user's device becomes unavailable.</span></span>  <span data-ttu-id="99543-293">その場合は、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> を呼び出して、WPF のバックバッファーへの参照を解放します。</span><span class="sxs-lookup"><span data-stu-id="99543-293">When that occurs, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> to release WPF's reference to the back buffer.</span></span>  <span data-ttu-id="99543-294">デバイスをリセットする必要がある場合は、`backBuffer` を `null`に設定して <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> を呼び出し、`backBuffer` を有効な Direct3D サーフェイスに設定して <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> をもう一度呼び出します。</span><span class="sxs-lookup"><span data-stu-id="99543-294">If you need to reset your device, call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> with `backBuffer` set to `null`, and then call <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> again with `backBuffer` set to a valid Direct3D surface.</span></span>  
  
 <span data-ttu-id="99543-295">次の一覧は、`IDirect3DSurface9` の種類に必要なバックバッファー設定を示しています。</span><span class="sxs-lookup"><span data-stu-id="99543-295">The following list shows the required back buffer settings for the `IDirect3DSurface9` type.</span></span>  
  
-   <span data-ttu-id="99543-296">`D3DFMT_A8R8G8B8` または `D3DFMT_X8R8G8B8`</span><span class="sxs-lookup"><span data-stu-id="99543-296">`D3DFMT_A8R8G8B8` or `D3DFMT_X8R8G8B8`</span></span>  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 <span data-ttu-id="99543-297">マルチサンプリングは `IDirect3DSurface9Ex` サーフェイスでのみ許可されます。</span><span class="sxs-lookup"><span data-stu-id="99543-297">Multisampling is allowed on `IDirect3DSurface9Ex` surfaces only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLock">
      <MemberSignature Language="C#" Value="public bool TryLock (System.Windows.Duration timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryLock(valuetype System.Windows.Duration timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryLock (timeout As Duration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryLock(System::Windows::Duration timeout);" />
      <MemberSignature Language="F#" Value="member this.TryLock : System.Windows.Duration -&gt; bool" Usage="d3DImage.TryLock timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="99543-298">取得したロックを待機する期間。</span><span class="sxs-lookup"><span data-stu-id="99543-298">The duration to wait for the lock to be acquired.</span></span></param>
        <summary><span data-ttu-id="99543-299"><see cref="T:System.Windows.Interop.D3DImage" /> のロックを試行し、指定された期間待機します。</span><span class="sxs-lookup"><span data-stu-id="99543-299">Attempts to lock the <see cref="T:System.Windows.Interop.D3DImage" /> and waits for the specified duration.</span></span></summary>
        <returns><span data-ttu-id="99543-300">ロックが取得された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="99543-300"><see langword="true" /> if the lock was acquired; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="99543-301"><paramref name="timeout" /> が <see cref="P:System.Windows.Duration.Automatic" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="99543-301"><paramref name="timeout" /> is set to <see cref="P:System.Windows.Duration.Automatic" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="99543-302">ロック カウントが <see cref="F:System.UInt32.MaxValue" /> と等しい。</span><span class="sxs-lookup"><span data-stu-id="99543-302">The lock count equals <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public void Unlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Unlock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unlock();" />
      <MemberSignature Language="F#" Value="member this.Unlock : unit -&gt; unit" Usage="d3DImage.Unlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99543-303"><see cref="T:System.Windows.Interop.D3DImage" /> のロック カウントをデクリメントします。</span><span class="sxs-lookup"><span data-stu-id="99543-303">Decrements the lock count for the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-304"><xref:System.Windows.Interop.D3DImage> のロックカウントが0になると、<xref:System.Windows.Interop.D3DImage> は完全にロック解除されます。</span><span class="sxs-lookup"><span data-stu-id="99543-304">When the lock count for the <xref:System.Windows.Interop.D3DImage> reaches zero, the <xref:System.Windows.Interop.D3DImage> is fully unlocked.</span></span> <span data-ttu-id="99543-305"><xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> メソッドの以前の呼び出しで指定された領域がイメージに変更された場合、<xref:System.Windows.Interop.D3DImage> は表示用にマークされます。</span><span class="sxs-lookup"><span data-stu-id="99543-305">The <xref:System.Windows.Interop.D3DImage> is marked for rendering if the image has changed areas that were specified by previous calls to the <xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A> method.</span></span>  
  
 <span data-ttu-id="99543-306">変更がコミットされてレンダリングが発生すると、render スレッドによってバックバッファーの内容がフロントバッファーにコピーされるまで、<xref:System.Windows.Interop.D3DImage.Lock%2A> メソッドへの追加の呼び出しがブロックされます。</span><span class="sxs-lookup"><span data-stu-id="99543-306">When the changes are committed and rendering occurs, additional calls to the <xref:System.Windows.Interop.D3DImage.Lock%2A> method block until the render thread has copied the contents of the back buffer to the front buffer.</span></span> <span data-ttu-id="99543-307">この同期によって、分裂などの表示アイテムが回避されます。</span><span class="sxs-lookup"><span data-stu-id="99543-307">This synchronization avoids display artifacts, such as tearing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99543-308"><xref:System.Windows.Interop.D3DImage> のロックが解除されている間は、Direct3D サーフェイスを更新しないでください。</span><span class="sxs-lookup"><span data-stu-id="99543-308">Do not update the Direct3D surface while the <xref:System.Windows.Interop.D3DImage> is unlocked.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99543-309">次のコード例は、<xref:System.Windows.Interop.D3DImage.Unlock%2A> メソッドを呼び出して、更新されたバックバッファーをフロントバッファーにコピーする方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="99543-309">The following code example shows how to call the <xref:System.Windows.Interop.D3DImage.Unlock%2A> method to copy the updated back buffer to the front buffer.</span></span> <span data-ttu-id="99543-310">詳細については、「[チュートリアル: WPF での Direct3D9 コンテンツのホスト](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="99543-310">For more information, see [Walkthrough: Hosting Direct3D9 Content in WPF](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md).</span></span>  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override sealed double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : double" Usage="System.Windows.Interop.D3DImage.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99543-311"><see cref="T:System.Windows.Interop.D3DImage" /> の幅を取得します。</span><span class="sxs-lookup"><span data-stu-id="99543-311">Gets the width of the <see cref="T:System.Windows.Interop.D3DImage" />.</span></span></summary>
        <value><span data-ttu-id="99543-312"><see cref="T:System.Windows.Interop.D3DImage" /> の幅 (測定単位)。</span><span class="sxs-lookup"><span data-stu-id="99543-312">The width of the <see cref="T:System.Windows.Interop.D3DImage" />, in measure units.</span></span> <span data-ttu-id="99543-313">測定単位は 1/96 インチです。</span><span class="sxs-lookup"><span data-stu-id="99543-313">A measure unit is 1/96th inch.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99543-314"><xref:System.Windows.Interop.D3DImage.Width%2A> の値は、<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> メソッドの呼び出しによって新しいバックバッファーが割り当てられたときに変更される可能性があります。</span><span class="sxs-lookup"><span data-stu-id="99543-314">The value of <xref:System.Windows.Interop.D3DImage.Width%2A> can change when a new back buffer is assigned by a call to the <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
  </Members>
</Type>
