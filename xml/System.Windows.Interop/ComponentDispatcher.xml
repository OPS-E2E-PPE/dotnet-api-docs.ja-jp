<Type Name="ComponentDispatcher" FullName="System.Windows.Interop.ComponentDispatcher">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f8051775d4e879245e9aa448fb674cf455ff27a5" /><Meta Name="ms.sourcegitcommit" Value="2b0967e04b047f6709322418d97215dfcef6a938" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/20/2019" /><Meta Name="ms.locfileid" Value="74235819" /></Metadata><TypeSignature Language="C#" Value="public static class ComponentDispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed ComponentDispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.ComponentDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentDispatcher" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentDispatcher abstract sealed" />
  <TypeSignature Language="F#" Value="type ComponentDispatcher = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="25108-101">相互運用シナリオで、Win32 と WPF の間でメッセージ ポンプの制御を共有できるようにします。</span><span class="sxs-lookup"><span data-stu-id="25108-101">Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25108-102">クラス自体は静的ですが、<xref:System.Windows.Interop.ComponentDispatcher> のすべてのメンバーは特定のスレッドに固有です。</span><span class="sxs-lookup"><span data-stu-id="25108-102">Although the class itself is static, all members of <xref:System.Windows.Interop.ComponentDispatcher> are specific to a particular thread.</span></span> <span data-ttu-id="25108-103">たとえば、2つの異なるスレッドで <xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A> の値を調べると、異なる値が取得される場合があります。</span><span class="sxs-lookup"><span data-stu-id="25108-103">For example, if you examine the value of <xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A> on two different threads, you might get different values.</span></span>  
  
 <span data-ttu-id="25108-104">メソッドは静的ですが、スレッドごとのデータ構造によって支えられています。</span><span class="sxs-lookup"><span data-stu-id="25108-104">The methods are static but they are backed by per-thread data structures.</span></span>  <span data-ttu-id="25108-105">静的メソッドはシングルトンアクセスを許可しますが、<xref:System.Windows.Interop.ComponentDispatcher> はスレッドごとの適切な操作を並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="25108-105">The static methods allow singleton access but the <xref:System.Windows.Interop.ComponentDispatcher> is sorting out the appropriate per-thread operations.</span></span>  
  
 <span data-ttu-id="25108-106">メッセージポンプの所有者は、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 関数[GetMessage](https://msdn.microsoft.com/library/ms644936.aspx)を呼び出すコードによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="25108-106">The owner of the message pump is defined by the code that calls the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] function  [GetMessage](https://msdn.microsoft.com/library/ms644936.aspx).</span></span> <span data-ttu-id="25108-107">所有者は、すべてのキーボードメッセージの <xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="25108-107">The owner calls <xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A> for every keyboard message.</span></span> <span data-ttu-id="25108-108">このメソッドは、イベントデータに格納されているメッセージを使用して、<xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="25108-108">This method raises the <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage> event with the messages contained in the event data.</span></span> <span data-ttu-id="25108-109">このイベントが処理されない場合、所有者は、イベント引数に含まれているメッセージを使用して <xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="25108-109">If that event is not handled, the owner raises the <xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage> event with the messages contained in the event argument.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="25108-110">キーボードメッセージのみがサポートされています。</span><span class="sxs-lookup"><span data-stu-id="25108-110">Only keyboard messages are supported.</span></span>  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="25108-111">このクラスのメンバーにアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="25108-111">to access any member of this class.</span></span> <span data-ttu-id="25108-112">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="25108-112">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
  </Docs>
  <Members>
    <Member MemberName="CurrentKeyboardMessage">
      <MemberSignature Language="C#" Value="public static System.Windows.Interop.MSG CurrentKeyboardMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Interop.MSG CurrentKeyboardMessage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentKeyboardMessage As MSG" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Interop::MSG CurrentKeyboardMessage { System::Windows::Interop::MSG get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentKeyboardMessage : System.Windows.Interop.MSG" Usage="System.Windows.Interop.ComponentDispatcher.CurrentKeyboardMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.MSG</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25108-113">最後に発生したメッセージを取得します。</span><span class="sxs-lookup"><span data-stu-id="25108-113">Gets the last message that was raised.</span></span></summary>
        <value><span data-ttu-id="25108-114">最後のメッセージ。</span><span class="sxs-lookup"><span data-stu-id="25108-114">The last message.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="25108-115">このクラスのメンバーにアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="25108-115">to access any member of this class.</span></span> <span data-ttu-id="25108-116">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="25108-116">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
      </Docs>
    </Member>
    <Member MemberName="EnterThreadModal">
      <MemberSignature Language="C#" Value="public static event EventHandler EnterThreadModal;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnterThreadModal" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event EnterThreadModal As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ EnterThreadModal;" />
      <MemberSignature Language="F#" Value="member this.EnterThreadModal : EventHandler " Usage="member this.EnterThreadModal : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25108-117">スレッドがモーダルになったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="25108-117">Occurs when a thread becomes modal.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="25108-118">このクラスのメンバーにアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="25108-118">to access any member of this class.</span></span> <span data-ttu-id="25108-119">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="25108-119">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadModal">
      <MemberSignature Language="C#" Value="public static bool IsThreadModal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsThreadModal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.ComponentDispatcher.IsThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsThreadModal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsThreadModal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsThreadModal : bool" Usage="System.Windows.Interop.ComponentDispatcher.IsThreadModal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25108-120">スレッドがモーダルかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="25108-120">Gets a value that indicates whether the thread is modal.</span></span></summary>
        <value><span data-ttu-id="25108-121">スレッドがモーダルの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25108-121"><see langword="true" /> if the thread is modal; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="25108-122">このクラスのメンバーにアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="25108-122">to access any member of this class.</span></span> <span data-ttu-id="25108-123">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="25108-123">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      </Docs>
    </Member>
    <Member MemberName="LeaveThreadModal">
      <MemberSignature Language="C#" Value="public static event EventHandler LeaveThreadModal;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LeaveThreadModal" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LeaveThreadModal As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ LeaveThreadModal;" />
      <MemberSignature Language="F#" Value="member this.LeaveThreadModal : EventHandler " Usage="member this.LeaveThreadModal : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25108-124">モーダル スレッドが非モーダルになったときに発生します。</span><span class="sxs-lookup"><span data-stu-id="25108-124">Occurs when a modal thread becomes nonmodal.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="25108-125">このクラスのメンバーにアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="25108-125">to access any member of this class.</span></span> <span data-ttu-id="25108-126">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="25108-126">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      </Docs>
    </Member>
    <Member MemberName="PopModal">
      <MemberSignature Language="C#" Value="public static void PopModal ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PopModal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PopModal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PopModal();" />
      <MemberSignature Language="F#" Value="static member PopModal : unit -&gt; unit" Usage="System.Windows.Interop.ComponentDispatcher.PopModal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25108-127">モーダル スレッドがモーダルでなくなったことを示すために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="25108-127">Called to indicate that a modal thread is no longer modal.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="25108-128">このクラスのメンバーにアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="25108-128">to access any member of this class.</span></span> <span data-ttu-id="25108-129">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="25108-129">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.EnterThreadModal" />
      </Docs>
    </Member>
    <Member MemberName="PushModal">
      <MemberSignature Language="C#" Value="public static void PushModal ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushModal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.PushModal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushModal ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushModal();" />
      <MemberSignature Language="F#" Value="static member PushModal : unit -&gt; unit" Usage="System.Windows.Interop.ComponentDispatcher.PushModal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25108-130">スレッドがモーダルであることを示すために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="25108-130">Called to indicate that the thread is modal.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="25108-131">このクラスのすべてのメンバーには <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> のアクセス許可が必要です。</span><span class="sxs-lookup"><span data-stu-id="25108-131">All members of this class require <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> permission.</span></span></permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.PopModal" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.LeaveThreadModal" />
      </Docs>
    </Member>
    <Member MemberName="RaiseIdle">
      <MemberSignature Language="C#" Value="public static void RaiseIdle ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RaiseIdle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RaiseIdle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RaiseIdle();" />
      <MemberSignature Language="F#" Value="static member RaiseIdle : unit -&gt; unit" Usage="System.Windows.Interop.ComponentDispatcher.RaiseIdle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="25108-132">スレッドがアイドル状態であることを示すために呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="25108-132">Called to indicate that a thread is idle.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="25108-133">このクラスのメンバーにアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="25108-133">to access any member of this class.</span></span> <span data-ttu-id="25108-134">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="25108-134">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle" />
      </Docs>
    </Member>
    <Member MemberName="RaiseThreadMessage">
      <MemberSignature Language="C#" Value="public static bool RaiseThreadMessage (ref System.Windows.Interop.MSG msg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RaiseThreadMessage(valuetype System.Windows.Interop.MSG&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RaiseThreadMessage (ByRef msg As MSG) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RaiseThreadMessage(System::Windows::Interop::MSG % msg);" />
      <MemberSignature Language="F#" Value="static member RaiseThreadMessage : MSG -&gt; bool" Usage="System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="25108-135">メッセージおよびそれに関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="25108-135">The message and its associated data.</span></span></param>
        <summary><span data-ttu-id="25108-136">処理できる新しいメッセージがあることを示します。</span><span class="sxs-lookup"><span data-stu-id="25108-136">Indicates that a new message is available for possible handling.</span></span></summary>
        <returns><span data-ttu-id="25108-137">メッセージ ループをリッスンしているモジュールのいずれかがメッセージを処理した場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="25108-137"><see langword="true" />, if one of the modules listening to the message loop processed the message.</span></span> <span data-ttu-id="25108-138">この場合、メッセージ ループの所有者はこのメッセージを無視します。</span><span class="sxs-lookup"><span data-stu-id="25108-138">The owner of the message loop should ignore the message.</span></span> <span data-ttu-id="25108-139">メッセージが処理されなかった場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="25108-139"><see langword="false" />, if the message was not processed.</span></span> <span data-ttu-id="25108-140">この場合は、メッセージ ポンプの所有者は、Win32 関数 <see href="/windows/win32/api/winuser/nf-winuser-translatemessage">TranslateMessage</see> と、これに続いて <see href="/windows/win32/api/winuser/nf-winuser-dispatchmessage">DispatchMessage</see> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="25108-140">In this case, the owner of the message pump should call the Win32 function <see href="/windows/win32/api/winuser/nf-winuser-translatemessage">TranslateMessage</see> followed by <see href="/windows/win32/api/winuser/nf-winuser-dispatchmessage">DispatchMessage</see>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25108-141">メッセージポンプの所有者は、すべてのキーボードメッセージに対してこのメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="25108-141">The owner of the message pump should call this method for every keyboard message.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="25108-142">このクラスのメンバーにアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="25108-142">to access any member of this class.</span></span> <span data-ttu-id="25108-143">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="25108-143">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      </Docs>
    </Member>
    <Member MemberName="ThreadFilterMessage">
      <MemberSignature Language="C#" Value="public static event System.Windows.Interop.ThreadMessageEventHandler ThreadFilterMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Interop.ThreadMessageEventHandler ThreadFilterMessage" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadFilterMessage As ThreadMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Interop::ThreadMessageEventHandler ^ ThreadFilterMessage;" />
      <MemberSignature Language="F#" Value="member this.ThreadFilterMessage : System.Windows.Interop.ThreadMessageEventHandler " Usage="member this.ThreadFilterMessage : System.Windows.Interop.ThreadMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.ThreadMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25108-144">メッセージ ポンプがキーボード メッセージを受信すると発生します。</span><span class="sxs-lookup"><span data-stu-id="25108-144">Occurs when the message pump receives a keyboard message.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="25108-145">このクラスのメンバーにアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="25108-145">to access any member of this class.</span></span> <span data-ttu-id="25108-146">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="25108-146">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      </Docs>
    </Member>
    <Member MemberName="ThreadIdle">
      <MemberSignature Language="C#" Value="public static event EventHandler ThreadIdle;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThreadIdle" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.ThreadIdle" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadIdle As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ ThreadIdle;" />
      <MemberSignature Language="F#" Value="member this.ThreadIdle : EventHandler " Usage="member this.ThreadIdle : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25108-147">スレッドがアイドル状態のときに発生します。</span><span class="sxs-lookup"><span data-stu-id="25108-147">Occurs when the thread is idle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25108-148">キューにメッセージが存在しない場合、<xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle> イベントによって通知されるアイドル状態は、処理を行うための効率的な時間です。</span><span class="sxs-lookup"><span data-stu-id="25108-148">If there are no messages in the queue, then the idle state announced by the <xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle> event is an efficient time to do processing.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="25108-149">このクラスのメンバーにアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="25108-149">to access any member of this class.</span></span> <span data-ttu-id="25108-150">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="25108-150">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.RaiseIdle" />
      </Docs>
    </Member>
    <Member MemberName="ThreadPreprocessMessage">
      <MemberSignature Language="C#" Value="public static event System.Windows.Interop.ThreadMessageEventHandler ThreadPreprocessMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Interop.ThreadMessageEventHandler ThreadPreprocessMessage" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event ThreadPreprocessMessage As ThreadMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event System::Windows::Interop::ThreadMessageEventHandler ^ ThreadPreprocessMessage;" />
      <MemberSignature Language="F#" Value="member this.ThreadPreprocessMessage : System.Windows.Interop.ThreadMessageEventHandler " Usage="member this.ThreadPreprocessMessage : System.Windows.Interop.ThreadMessageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.ThreadMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="25108-151">メッセージ ポンプがキーボード メッセージを受信すると発生します。</span><span class="sxs-lookup"><span data-stu-id="25108-151">Occurs when the message pump receives a keyboard message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="25108-152">このイベントが処理されない場合は、<xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>後に発生させる必要があります。</span><span class="sxs-lookup"><span data-stu-id="25108-152">This event should be raised after <xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage>, if that event is not handled.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="25108-153">このクラスのメンバーにアクセスする場合は。</span><span class="sxs-lookup"><span data-stu-id="25108-153">to access any member of this class.</span></span> <span data-ttu-id="25108-154">関連付けられた列挙型: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="25108-154">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
        <altmember cref="M:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage(System.Windows.Interop.MSG@)" />
        <altmember cref="E:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage" />
      </Docs>
    </Member>
  </Members>
</Type>
