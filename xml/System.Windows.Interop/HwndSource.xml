<Type Name="HwndSource" FullName="System.Windows.Interop.HwndSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7901e8a36f352be6fe2f1ca438d3bae7e3a64b6" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82296770" /></Metadata><TypeSignature Language="C#" Value="public class HwndSource : System.Windows.PresentationSource, IDisposable, System.Windows.Interop.IKeyboardInputSink, System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HwndSource extends System.Windows.PresentationSource implements class System.IDisposable, class System.Windows.Interop.IKeyboardInputSink, class System.Windows.Interop.IWin32Window" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndSource" />
  <TypeSignature Language="VB.NET" Value="Public Class HwndSource&#xA;Inherits PresentationSource&#xA;Implements IDisposable, IKeyboardInputSink, IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class HwndSource : System::Windows::PresentationSource, IDisposable, System::Windows::Interop::IKeyboardInputSink, System::Windows::Interop::IWin32Window" />
  <TypeSignature Language="F#" Value="type HwndSource = class&#xA;    inherit PresentationSource&#xA;    interface IDisposable&#xA;    interface IKeyboardInputSink&#xA;    interface IWin32Window" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HwndSource extends System.Windows.PresentationSource implements class System.IDisposable, class System.Windows.Interop.IKeyboardInputSink, class System.Windows.Interop.IWin32Window" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type HwndSource = class&#xA;    inherit PresentationSource&#xA;    interface IDisposable&#xA;    interface IWin32Window&#xA;    interface IKeyboardInputSink" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.PresentationSource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IKeyboardInputSink</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8f22d-101">Win32 ウィンドウで Windows Presentation Foundation (WPF) コンテンツを表します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-101">Presents Windows Presentation Foundation (WPF) content in a Win32 window.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-102">このクラスの多くのメンバーは、インターネットセキュリティゾーンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-102">Many members of this class are unavailable in the Internet security zone.</span></span>  
  
 <span data-ttu-id="8f22d-103"><xref:System.Windows.Interop.HwndSource> は、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] コンテンツを含むことができる [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] ウィンドウを実装します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-103">An <xref:System.Windows.Interop.HwndSource> implements a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window that can contain [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span> <span data-ttu-id="8f22d-104">ウィンドウ内の [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] コンテンツは、配置、測定、および表示されます。とは、入力に対して対話型です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-104">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content in the window is arranged, measured, and rendered; and is interactive to input.</span></span> <span data-ttu-id="8f22d-105"><xref:System.Windows.Interop.HwndSource> は [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]と相互運用できるように設計されているため、このクラスはいくつかの低レベルの [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 機能を公開します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-105">Because the <xref:System.Windows.Interop.HwndSource> is specifically designed to interoperate with [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)], this class exposes several low-level [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] features.</span></span> <span data-ttu-id="8f22d-106">このクラスを使用して、次の操作を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-106">You can use this class to do the following:</span></span>  
  
-   <span data-ttu-id="8f22d-107">ウィンドウスタイル、ウィンドウクラススタイル、および拡張ウィンドウスタイルを指定します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-107">Specify window styles, window class styles, and extended window styles.</span></span>  
  
-   <span data-ttu-id="8f22d-108">ウィンドウプロシージャをフックします。</span><span class="sxs-lookup"><span data-stu-id="8f22d-108">Hook the window procedure.</span></span>  
  
-   <span data-ttu-id="8f22d-109">ウィンドウハンドル (HWND) へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-109">Provide access to the window handle (HWND).</span></span>  
  
-   <span data-ttu-id="8f22d-110">ウィンドウを破棄します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-110">Destroy the window.</span></span>  
  
 <span data-ttu-id="8f22d-111"><xref:System.Windows.Interop.HwndSource> クラスは、一般的な相互運用性を実現するように設計されており、マネージ HWND ラッパーとしては設計されていません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-111">The <xref:System.Windows.Interop.HwndSource> class is designed for general interoperability and is not designed as a managed HWND wrapper.</span></span> <span data-ttu-id="8f22d-112">一般に、ウィンドウまたはプロパティを操作してその状態を検査するためのマネージメソッドは提供しません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-112">In general, it does not provide managed methods for manipulating the window or properties for inspecting its state.</span></span> <span data-ttu-id="8f22d-113">代わりに、<xref:System.Windows.Interop.HwndSource> クラスを使用すると、<xref:System.Windows.Interop.HwndSource.Handle%2A> プロパティを介して [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] ウィンドウハンドル (HWND) にアクセスできます。このプロパティは、ウィンドウを操作するために [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] Api に対して PInvoke 手法によって渡すことができます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-113">Instead, the <xref:System.Windows.Interop.HwndSource> class provides access to the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window handle (HWND) through the <xref:System.Windows.Interop.HwndSource.Handle%2A> property, which can be passed by means of PInvoke techniques to [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] APIs in order to manipulate the window.</span></span>  
  
 <span data-ttu-id="8f22d-114">**業**</span><span class="sxs-lookup"><span data-stu-id="8f22d-114">**Construction**</span></span>  
  
 <span data-ttu-id="8f22d-115"><xref:System.Windows.Interop.HwndSource> の多くの要素は、構築時にのみ指定できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-115">Many aspects of the <xref:System.Windows.Interop.HwndSource> can only be specified at construction time.</span></span> <span data-ttu-id="8f22d-116"><xref:System.Windows.Interop.HwndSource>を作成するには、まず <xref:System.Windows.Interop.HwndSourceParameters> 構造体を作成し、必要なパラメーターを設定します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-116">To create an <xref:System.Windows.Interop.HwndSource>, first create an <xref:System.Windows.Interop.HwndSourceParameters> structure and populate it with the desired parameters.</span></span> <span data-ttu-id="8f22d-117">次のようなパラメーターがあります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-117">These parameters include the following:</span></span>  
  
-   <span data-ttu-id="8f22d-118">クラス、ウィンドウ、および拡張ウィンドウスタイル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-118">The class, window, and extended window styles.</span></span> <span data-ttu-id="8f22d-119">ウィンドウの作成後にスタイルを変更するには、PInvoke を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-119">You must use PInvoke to change the styles after the window is created.</span></span> <span data-ttu-id="8f22d-120">すべてのスタイルは、ウィンドウの作成後に変更できるわけではありません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-120">Not all styles can be changed after the window is created.</span></span> <span data-ttu-id="8f22d-121">ウィンドウスタイルを変更する前に、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-121">Consult the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] documentation before changing window styles.</span></span>  
  
-   <span data-ttu-id="8f22d-122">ウィンドウの初期位置。</span><span class="sxs-lookup"><span data-stu-id="8f22d-122">The initial position of the window.</span></span>  
  
-   <span data-ttu-id="8f22d-123">ウィンドウの初期サイズ。サイズが指定されているかどうか、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] コンテンツのサイズによって決まります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-123">The initial size of the window, which includes whether the size is specified or should be determined from the determined size of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span>  
  
-   <span data-ttu-id="8f22d-124">親ウィンドウです。</span><span class="sxs-lookup"><span data-stu-id="8f22d-124">The parent window.</span></span>  
  
-   <span data-ttu-id="8f22d-125">ウィンドウプロシージャチェーンに含める <xref:System.Windows.Interop.HwndSourceHook>。</span><span class="sxs-lookup"><span data-stu-id="8f22d-125">The <xref:System.Windows.Interop.HwndSourceHook> to include in the window procedure chain.</span></span> <span data-ttu-id="8f22d-126">構築時にフックを指定すると、そのフックはウィンドウのすべてのメッセージを受信します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-126">If you specify a hook at construction time, it receives all messages for the window.</span></span> <span data-ttu-id="8f22d-127"><xref:System.Windows.Interop.HwndSource.AddHook%2A> を使用すると、ウィンドウの作成後にフックを追加できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-127">You can use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to add a hook after the window is created.</span></span>  
  
-   <span data-ttu-id="8f22d-128">透明度の設定。</span><span class="sxs-lookup"><span data-stu-id="8f22d-128">The transparency settings.</span></span> <span data-ttu-id="8f22d-129">最上位レベルのウィンドウは、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] コンテンツのピクセルごとの透明度に応じて、デスクトップ上の他のウィンドウとブレンドするように構成できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-129">A top-level window can be configured to blend with the other windows on the desktop according to the per-pixel transparency of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span> <span data-ttu-id="8f22d-130">これを有効にするには、<xref:System.Windows.Interop.HwndSourceParameters> の [<xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A>] プロパティを `true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-130">To enable this, set the <xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> property in the <xref:System.Windows.Interop.HwndSourceParameters> to `true`.</span></span> <span data-ttu-id="8f22d-131">このプロパティは、構築時にのみ指定でき、<xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> コンストラクターシグネチャを通じてのみ指定できます。これにはいくつかの制限があります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-131">This property can only be specified at construction time, and only through the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor signature, and it imposes several limitations.</span></span>  
  
 <span data-ttu-id="8f22d-132"><xref:System.Windows.Interop.HwndSourceParameters> 構造を設定したら、それを <xref:System.Windows.Interop.HwndSource>の <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> コンストラクターに渡します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-132">After you populate the <xref:System.Windows.Interop.HwndSourceParameters> structure, pass it to the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor for the <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 <span data-ttu-id="8f22d-133">**オブジェクトの有効期間**</span><span class="sxs-lookup"><span data-stu-id="8f22d-133">**Object Lifetime**</span></span>  
  
 <span data-ttu-id="8f22d-134"><xref:System.Windows.Interop.HwndSource> は通常の [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] オブジェクトであり、その有効期間はガベージコレクターによって管理されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-134">An <xref:System.Windows.Interop.HwndSource> is a regular [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, and its lifetime is managed by the garbage collector.</span></span> <span data-ttu-id="8f22d-135"><xref:System.Windows.Interop.HwndSource> はアンマネージリソースを表すため、<xref:System.Windows.Interop.HwndSource> は <xref:System.IDisposable>を実装します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-135">Because the <xref:System.Windows.Interop.HwndSource> represents an unmanaged resource, <xref:System.Windows.Interop.HwndSource> implements <xref:System.IDisposable>.</span></span> <span data-ttu-id="8f22d-136">所有者スレッドから呼び出された場合、<xref:System.Windows.Interop.HwndSource.Dispose%2A> を同期的に呼び出すと、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] ウィンドウが直ちに破棄されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-136">Synchronously calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> immediately destroys the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window if called from the owner thread.</span></span> <span data-ttu-id="8f22d-137">別のスレッドから呼び出された場合、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] ウィンドウは非同期に破棄されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-137">If called from another thread, the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window is destroyed asynchronously.</span></span> <span data-ttu-id="8f22d-138">相互運用コードから明示的に <xref:System.Windows.Interop.HwndSource.Dispose%2A> を呼び出すことは、特定の相互運用シナリオで必要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-138">Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios.</span></span>  
  
 <span data-ttu-id="8f22d-139">**ウィンドウプロシージャ**</span><span class="sxs-lookup"><span data-stu-id="8f22d-139">**Window Procedures**</span></span>  
  
 <span data-ttu-id="8f22d-140"><xref:System.Windows.Interop.HwndSource> クラスは、独自のウィンドウプロシージャを実装します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-140">The <xref:System.Windows.Interop.HwndSource> class implements its own window procedure.</span></span> <span data-ttu-id="8f22d-141">このウィンドウプロシージャは、レイアウト、レンダリング、入力に関連するメッセージなど、重要なウィンドウメッセージを処理するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-141">This window procedure is used to process important window messages, such as those related to layout, rendering, and input.</span></span> <span data-ttu-id="8f22d-142">ただし、ウィンドウプロシージャを独自に使用するようにフックすることもできます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-142">However, you can also hook the window procedure for your own use.</span></span> <span data-ttu-id="8f22d-143">作成時に独自のフックを指定するには、<xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType> プロパティを設定します。または、<xref:System.Windows.Interop.HwndSource.AddHook%2A> と <xref:System.Windows.Interop.HwndSource.RemoveHook%2A> を使用して、ウィンドウの作成後にフックを追加または削除することもできます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-143">You can specify your own hook during construction by setting the <xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType> property, or you can also use <xref:System.Windows.Interop.HwndSource.AddHook%2A> and <xref:System.Windows.Interop.HwndSource.RemoveHook%2A> to add and remove hooks after the window is created.</span></span> <span data-ttu-id="8f22d-144">フックは、後入れ先出しの順序によって呼び出されます。これにより、組み込み処理の前にフックを実行できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-144">The hooks are called by last-in first-out order, which enables your hooks to execute before the built-in processing.</span></span> <span data-ttu-id="8f22d-145">実際のフックは弱い参照によって保持されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-145">The actual hooks are held by a weak reference.</span></span> <span data-ttu-id="8f22d-146">そのため、フックデリゲートの有効期間を管理していることを確認してください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-146">Therefore, make sure that you manage the lifetime of your hook delegate.</span></span>  
  
 <span data-ttu-id="8f22d-147"><xref:System.Windows.Interop.HwndSource> およびその他の相互運用クラスの詳細については、「 [WPF と Win32 の相互運用](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-147">For more information about <xref:System.Windows.Interop.HwndSource> and other interoperation classes, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md).</span></span>  
  
 <span data-ttu-id="8f22d-148"><xref:System.Windows.Interop.HwndSource> のコンストラクターが、 [CreateWindowEx](https://go.microsoft.com/fwlink/?LinkID=98462)などの [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 関数のパラメーターに似たパラメーターを受け取る方法に注目してください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-148">Notice how the constructors for <xref:System.Windows.Interop.HwndSource> take parameters that resemble the parameters for [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] functions such as [CreateWindowEx](https://go.microsoft.com/fwlink/?LinkID=98462).</span></span>  
  
 <span data-ttu-id="8f22d-149">スケール変換は、<xref:System.Windows.Interop.HwndSource>の <xref:System.Windows.Interop.HwndSource.RootVisual%2A> には適用できません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-149">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>.</span></span> <span data-ttu-id="8f22d-150"><xref:System.Windows.Interop.HwndSource.RootVisual%2A>については、「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-150">See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8f22d-151"><see cref="T:System.Windows.Interop.HwndSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-151">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-152">この方法は、インターネットセキュリティゾーンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-152">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (System.Windows.Interop.HwndSourceParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Interop.HwndSourceParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As HwndSourceParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(System::Windows::Interop::HwndSourceParameters parameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : System.Windows.Interop.HwndSourceParameters -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="8f22d-153">ウィンドウを作成するために必要なパラメーターを格納している構造体。</span><span class="sxs-lookup"><span data-stu-id="8f22d-153">A structure that contains the parameters that are required to create the window.</span></span></param>
        <summary><span data-ttu-id="8f22d-154">初期設定を格納している構造体を使用して、<see cref="T:System.Windows.Interop.HwndSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-154">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class by using a structure that contains the initial settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-155">この方法は、インターネットセキュリティゾーンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-155">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="8f22d-156">このコンストラクターシグネチャは、既定の構造体に適切な初期既定値が含まれているため、特定の状況では便利な場合があります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-156">This constructor signature might be more convenient in certain situations, because the default structure contains some appropriate initial default values.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-157">このシグネチャを使用する場合は、既定の <xref:System.Windows.Interop.HwndSourceParameters> コンストラクターを使用して `parameters` 値の <xref:System.Windows.Interop.HwndSourceParameters> 構造を構築しないでください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-157">If you use this signature, do not use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor to construct the <xref:System.Windows.Interop.HwndSourceParameters> structure for the `parameters` value.</span></span> <span data-ttu-id="8f22d-158">初期ウィンドウ名を指定できるようにするには、<xref:System.Windows.Interop.HwndSourceParameters> コンストラクターを使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-158">You must use the <xref:System.Windows.Interop.HwndSourceParameters> constructor that enables you to specify an initial window name.</span></span> <span data-ttu-id="8f22d-159">既定の <xref:System.Windows.Interop.HwndSourceParameters> コンストラクターを使用し、それと共に <xref:System.Windows.Interop.HwndSource> を作成した場合、最初のウィンドウ名は、表示されている HWND の構築要件であるため、<xref:System.Windows.Interop.HwndSource> は表示されません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-159">If you use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor and create an <xref:System.Windows.Interop.HwndSource> with it, that <xref:System.Windows.Interop.HwndSource> does not display because an initial window name is a construction requirement for the represented HWND.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, string name, IntPtr parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, string name, native int parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, name As String, parent As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, System::String ^ name, IntPtr parent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : int * int * int * int * int * string * nativeint -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource (classStyle, style, exStyle, x, y, name, parent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="8f22d-160">ウィンドウの [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] クラスのスタイル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-160">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="8f22d-161">ウィンドウの [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] スタイル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-161">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="8f22d-162">ウィンドウの拡張 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] スタイル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-162">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="8f22d-163">ウィンドウの左端の位置。</span><span class="sxs-lookup"><span data-stu-id="8f22d-163">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="8f22d-164">ウィンドウの上端の位置。</span><span class="sxs-lookup"><span data-stu-id="8f22d-164">The position of the window's upper edge.</span></span></param>
        <param name="name"><span data-ttu-id="8f22d-165">ウィンドウの名前。</span><span class="sxs-lookup"><span data-stu-id="8f22d-165">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="8f22d-166">ウィンドウの親ウィンドウのハンドル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-166">The handle of the window's parent window.</span></span></param>
        <summary><span data-ttu-id="8f22d-167">クラス スタイル、スタイル、拡張スタイル、x-y 位置、名前、および親ウィンドウを指定して、<see cref="T:System.Windows.Interop.HwndSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-167">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, name, and parent window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-168">この方法は、インターネットセキュリティゾーンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-168">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, int32 width, int32 height, string name, native int parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, width As Integer, height As Integer, name As String, parent As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, int width, int height, System::String ^ name, IntPtr parent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : int * int * int * int * int * int * int * string * nativeint -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource (classStyle, style, exStyle, x, y, width, height, name, parent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="8f22d-169">ウィンドウの [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] クラスのスタイル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-169">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="8f22d-170">ウィンドウの [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] スタイル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-170">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="8f22d-171">ウィンドウの拡張 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] スタイル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-171">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="8f22d-172">ウィンドウの左端の位置。</span><span class="sxs-lookup"><span data-stu-id="8f22d-172">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="8f22d-173">ウィンドウの上端の位置。</span><span class="sxs-lookup"><span data-stu-id="8f22d-173">The position of the window's upper edge.</span></span></param>
        <param name="width"><span data-ttu-id="8f22d-174">ウィンドウの幅。</span><span class="sxs-lookup"><span data-stu-id="8f22d-174">The width of the window.</span></span></param>
        <param name="height"><span data-ttu-id="8f22d-175">ウィンドウの高さ。</span><span class="sxs-lookup"><span data-stu-id="8f22d-175">The height of the window.</span></span></param>
        <param name="name"><span data-ttu-id="8f22d-176">ウィンドウの名前。</span><span class="sxs-lookup"><span data-stu-id="8f22d-176">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="8f22d-177">ウィンドウの親ウィンドウのハンドル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-177">The handle of the window's parent window.</span></span></param>
        <summary><span data-ttu-id="8f22d-178">クラス スタイル、スタイル、拡張スタイル、x-y 位置、幅、高さ、名前、および親ウィンドウを指定して、<see cref="T:System.Windows.Interop.HwndSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-178">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-179">この方法は、インターネットセキュリティゾーンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-179">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent, bool adjustSizingForNonClientArea);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, int32 width, int32 height, string name, native int parent, bool adjustSizingForNonClientArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, width As Integer, height As Integer, name As String, parent As IntPtr, adjustSizingForNonClientArea As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, int width, int height, System::String ^ name, IntPtr parent, bool adjustSizingForNonClientArea);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : int * int * int * int * int * int * int * string * nativeint * bool -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource (classStyle, style, exStyle, x, y, width, height, name, parent, adjustSizingForNonClientArea)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
        <Parameter Name="adjustSizingForNonClientArea" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classStyle"><span data-ttu-id="8f22d-180">ウィンドウの [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] クラスのスタイル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-180">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span></span></param>
        <param name="style"><span data-ttu-id="8f22d-181">ウィンドウの [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] スタイル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-181">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="exStyle"><span data-ttu-id="8f22d-182">ウィンドウの拡張 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] スタイル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-182">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span></span></param>
        <param name="x"><span data-ttu-id="8f22d-183">ウィンドウの左端の位置。</span><span class="sxs-lookup"><span data-stu-id="8f22d-183">The position of the window's left edge.</span></span></param>
        <param name="y"><span data-ttu-id="8f22d-184">ウィンドウの上端の位置。</span><span class="sxs-lookup"><span data-stu-id="8f22d-184">The position of the window's upper edge.</span></span></param>
        <param name="width"><span data-ttu-id="8f22d-185">ウィンドウの幅。</span><span class="sxs-lookup"><span data-stu-id="8f22d-185">The width of the window.</span></span></param>
        <param name="height"><span data-ttu-id="8f22d-186">ウィンドウの高さ。</span><span class="sxs-lookup"><span data-stu-id="8f22d-186">The height of the window.</span></span></param>
        <param name="name"><span data-ttu-id="8f22d-187">ウィンドウの名前。</span><span class="sxs-lookup"><span data-stu-id="8f22d-187">The name of the window.</span></span></param>
        <param name="parent"><span data-ttu-id="8f22d-188">ウィンドウの親ウィンドウのハンドル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-188">The handle of the window's parent window.</span></span></param>
        <param name="adjustSizingForNonClientArea"><span data-ttu-id="8f22d-189">レイアウト マネージャーのサイズ設定に非クライアント領域を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-189"><see langword="true" /> to have the layout manager include the non-client area for sizing; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8f22d-190">指定したクラス スタイル、スタイル、拡張スタイル、x-y 位置、幅、高さ、名前、および親ウィンドウを使用し、さらに、ウィンドウでサイズが自動調整されるかどうかを指定して、<see cref="T:System.Windows.Interop.HwndSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-190">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window, and by specifying whether the window is autosized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-191">この方法は、インターネットセキュリティゾーンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-191">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public bool AcquireHwndFocusInMenuMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcquireHwndFocusInMenuMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AcquireHwndFocusInMenuMode : bool" Usage="System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-192">この <see cref="T:System.Windows.Interop.HwndSource" /> のウィンドウを含む WPF の Win32 フォーカスを取得するかどうかを決定する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-192">Gets the value that determines whether to acquire Win32 focus for the WPF containing window for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="8f22d-193">ユーザーがメニューを操作するときにウィンドウを含む WPF の Win32 フォーカスを取得する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-193"><see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-194">この値は、<xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> パラメーターを設定することによって <xref:System.Windows.Interop.HwndSource> を作成するときに設定されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-194">This value is set when you create the <xref:System.Windows.Interop.HwndSource> by setting the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> parameter.</span></span>  
  
 <span data-ttu-id="8f22d-195">既定値は、<xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A> プロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-195">The default value is determined by the <xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHook">
      <MemberSignature Language="C#" Value="public void AddHook (System.Windows.Interop.HwndSourceHook hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHook(class System.Windows.Interop.HwndSourceHook hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHook (hook As HwndSourceHook)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHook(System::Windows::Interop::HwndSourceHook ^ hook);" />
      <MemberSignature Language="F#" Value="member this.AddHook : System.Windows.Interop.HwndSourceHook -&gt; unit" Usage="hwndSource.AddHook hook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="System.Windows.Interop.HwndSourceHook" />
      </Parameters>
      <Docs>
        <param name="hook"><span data-ttu-id="8f22d-196">ウィンドウ メッセージを受け取るハンドラー実装 (<see cref="T:System.Windows.Interop.HwndSourceHook" /> デリゲートに基づく実装)。</span><span class="sxs-lookup"><span data-stu-id="8f22d-196">The handler implementation (based on the <see cref="T:System.Windows.Interop.HwndSourceHook" /> delegate) that receives the window messages.</span></span></param>
        <summary><span data-ttu-id="8f22d-197">すべてのウィンドウ メッセージを受け取るイベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-197">Adds an event handler that receives all window messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-198">この方法は、インターネットセキュリティゾーンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-198">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="8f22d-199"><xref:System.Windows.Interop.HwndSource> に到着するほとんどの [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] メッセージには、同等の [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] があります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-199">Most [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] messages that reach the <xref:System.Windows.Interop.HwndSource> have an approximate [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] equivalent.</span></span> <span data-ttu-id="8f22d-200">メッセージに同等の [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] がない場合は、<xref:System.Windows.Interop.HwndSource.AddHook%2A> を使用して処理します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-200">You use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to handle the cases where the message has no [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] equivalent.</span></span>  
  
 <span data-ttu-id="8f22d-201"><xref:System.Windows.Interop.HwndSourceHook> デリゲートは、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] メインウィンドウプロシージャのパラメータープロファイルに似ています。</span><span class="sxs-lookup"><span data-stu-id="8f22d-201">The <xref:System.Windows.Interop.HwndSourceHook> delegate resembles the parameter profile of a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] main window procedure.</span></span> <span data-ttu-id="8f22d-202"><xref:System.Windows.Interop.HwndSource> 親ウィンドウのメインウィンドウプロシージャが受け取るすべてのウィンドウメッセージは、<xref:System.Windows.Interop.HwndSourceHook> デリゲートにも転送されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-202">All window messages that the main window procedure of the <xref:System.Windows.Interop.HwndSource> parent window receives are also forwarded to the <xref:System.Windows.Interop.HwndSourceHook> delegates.</span></span>  
  
 <span data-ttu-id="8f22d-203">フックは、追加された順序で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-203">Hooks are called in the order that they were added.</span></span> <span data-ttu-id="8f22d-204">あるフックがメッセージに対して `handled`=`true` を返した場合、そのメッセージに対して呼び出し順序の後にあるフックは呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-204">If any hook returns `handled`=`true` for a message, the hooks after it in the call order are not called for that message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSourceHook" />
        <altmember cref="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
      </Docs>
    </Member>
    <Member MemberName="AutoResized">
      <MemberSignature Language="C#" Value="public event System.Windows.AutoResizedEventHandler AutoResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.AutoResizedEventHandler AutoResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.AutoResized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoResized As AutoResizedEventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::AutoResizedEventHandler ^ AutoResized;" />
      <MemberSignature Language="F#" Value="member this.AutoResized : System.Windows.AutoResizedEventHandler " Usage="member this.AutoResized : System.Windows.AutoResizedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event AutoResized As AutoResizedEventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.AutoResizedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-205">レイアウトによって <see cref="T:System.Windows.Interop.HwndSource" /> のサイズが自動調整されると発生します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-205">Occurs when layout causes the <see cref="T:System.Windows.Interop.HwndSource" /> to automatically resize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-206"><xref:System.Windows.Interop.HwndSource> のネイティブな動作では、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] レイアウトシステムを通じて報告された変更に基づいて、コンテンツとウィンドウ領域のサイズを自動的に変更します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-206">The native behavior of <xref:System.Windows.Interop.HwndSource> is to automatically resize content and the window region based on changes reported through the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] layout system.</span></span> <span data-ttu-id="8f22d-207">ウィンドウが現在最小化されている場合、または <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> が <xref:System.Windows.SizeToContent.Manual>に設定されている場合は、サイズが変更されません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-207">The window does not resize if it is currently minimized or if <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Manual>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildKeyboardInputSinks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Interop.IKeyboardInputSink&gt; ChildKeyboardInputSinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Interop.IKeyboardInputSink&gt; ChildKeyboardInputSinks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.ChildKeyboardInputSinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildKeyboardInputSinks As IEnumerable(Of IKeyboardInputSink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Interop::IKeyboardInputSink ^&gt; ^ ChildKeyboardInputSinks { System::Collections::Generic::IEnumerable&lt;System::Windows::Interop::IKeyboardInputSink ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildKeyboardInputSinks : seq&lt;System.Windows.Interop.IKeyboardInputSink&gt;" Usage="System.Windows.Interop.HwndSource.ChildKeyboardInputSinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__29))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__24))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__31))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Interop.IKeyboardInputSink&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-208">登録された入力シンクのシーケンスを取得します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-208">Gets a sequence of registered input sinks.</span></span></summary>
        <value><span data-ttu-id="8f22d-209">キーボード入力シンクの列挙値。</span><span class="sxs-lookup"><span data-stu-id="8f22d-209">An enumeration of keyboard input sinks.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.HwndTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.HwndTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As HwndTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::HwndTarget ^ CompositionTarget { System::Windows::Interop::HwndTarget ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositionTarget : System.Windows.Interop.HwndTarget" Usage="System.Windows.Interop.HwndSource.CompositionTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-210">ホストされたウィンドウのビジュアル マネージャーを取得します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-210">Gets the visual manager for the hosted window.</span></span></summary>
        <value><span data-ttu-id="8f22d-211">ビジュアル マネージャー。</span><span class="sxs-lookup"><span data-stu-id="8f22d-211">The visual manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-212"><xref:System.Windows.Interop.HwndSource.CompositionTarget%2A> が返す値をオーバーライドするために <xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A> をオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="8f22d-212">Override <xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A> in order to override the value that <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A> returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandleRef">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.HandleRef CreateHandleRef ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.InteropServices.HandleRef CreateHandleRef() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.CreateHandleRef" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHandleRef () As HandleRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::InteropServices::HandleRef CreateHandleRef();" />
      <MemberSignature Language="F#" Value="member this.CreateHandleRef : unit -&gt; System.Runtime.InteropServices.HandleRef" Usage="hwndSource.CreateHandleRef " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.HandleRef</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f22d-213"><see cref="T:System.Windows.Interop.HwndSource" /> のウィンドウ ハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-213">Gets the window handle for the <see cref="T:System.Windows.Interop.HwndSource" />.</span></span> <span data-ttu-id="8f22d-214">ウィンドウ ハンドルは <see cref="T:System.Runtime.InteropServices.HandleRef" /> 構造体の一部としてパッケージ化されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-214">The window handle is packaged as part of a <see cref="T:System.Runtime.InteropServices.HandleRef" /> structure.</span></span></summary>
        <returns><span data-ttu-id="8f22d-215">この <see cref="T:System.Windows.Interop.HwndSource" /> のウィンドウ ハンドルを格納する構造体。</span><span class="sxs-lookup"><span data-stu-id="8f22d-215">A structure that contains the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-216"><xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A> から取得したハンドルを使用すると、[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] コードから <xref:System.Windows.Interop.HwndSource> を参照できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-216">You can use the handle that is obtained from <xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A> to reference the <xref:System.Windows.Interop.HwndSource> from [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] code.</span></span> <span data-ttu-id="8f22d-217">メッセージ処理やウィンドウの動作などの操作には、ハンドルを使用します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-217">Use the handle for operations such as message handling and window behavior.</span></span>  
  
 <span data-ttu-id="8f22d-218">ハンドルだけを取得するには、<xref:System.Windows.Interop.HwndSource.Handle%2A>を使用します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-218">To get just the handle, use <xref:System.Windows.Interop.HwndSource.Handle%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSource.Handle" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public static bool DefaultAcquireHwndFocusInMenuMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DefaultAcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultAcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DefaultAcquireHwndFocusInMenuMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAcquireHwndFocusInMenuMode : bool with get, set" Usage="System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-219"><see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /> の新しいインスタンスの既定の <see cref="T:System.Windows.Interop.HwndSource" /> の値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-219">Gets or sets the default <see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /> value for new instances of <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="8f22d-220">ユーザーがメニューを操作するときにウィンドウを含む WPF の Win32 フォーカスを取得する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-220"><see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8f22d-221">既定では、 <see langword="true" />です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-221">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-222"><xref:System.Windows.Interop.HwndSource> の新しいインスタンスは、<xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> プロパティを使用して、特定のインスタンスの <xref:System.Windows.Interop.HwndSource> コンストラクターにパラメーターとして別の値が渡されない限り、この既定値に設定 <xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A> ます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-222">New instances of <xref:System.Windows.Interop.HwndSource> have <xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A> set to this default value, unless a different value is passed as a parameter to the <xref:System.Windows.Interop.HwndSource> constructor for a specific instance, by using the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="hwndSource.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f22d-223"><see cref="T:System.Windows.Interop.HwndSource" /> によって使用されているすべてのマネージド リソースを解放し、<see cref="E:System.Windows.Interop.HwndSource.Disposed" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-223">Releases all managed resources that are used by the <see cref="T:System.Windows.Interop.HwndSource" />, and raises the <see cref="E:System.Windows.Interop.HwndSource.Disposed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-224">この方法は、インターネットセキュリティゾーンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-224">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="8f22d-225"><xref:System.Windows.Interop.HwndSource.Dispose%2A> HWND に関連するクリーンアップ作業を開始します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-225"><xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND.</span></span> <span data-ttu-id="8f22d-226">メイン UI スレッドとは異なるスレッドを使用して <xref:System.Windows.Interop.HwndSource.Dispose%2A> が呼び出されると、メイン UI スレッドにポストできるようになるまで、クリーンアップ作業が遅延する場合があります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-226">If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</span></span>  
  
 <span data-ttu-id="8f22d-227">相互運用コードから明示的に <xref:System.Windows.Interop.HwndSource.Dispose%2A> を呼び出すことは、特定の相互運用シナリオで必要になる場合があります。これは、一部の相互運用シナリオで <xref:System.Windows.Interop.HwndSource> が、タイムリーなガベージコレクションを妨げる可能性がある相互運用の境界を越えて複数の参照を生成する可能性があるためです。</span><span class="sxs-lookup"><span data-stu-id="8f22d-227">Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios, because an <xref:System.Windows.Interop.HwndSource> in some interoperation scenarios can generate several references to it across the interoperation boundaries that might prevent timely garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSource.IsDisposed" />
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Disposed As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-228">このオブジェクトで <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> メソッドが呼び出されると発生します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-228">Occurs when the <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> method is called on this object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-229"><xref:System.Windows.Interop.HwndSource.Disposed> イベントは、<xref:System.Windows.Interop.HwndSource>によってリソースが解放される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-229">The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised before any resources are released by the <xref:System.Windows.Interop.HwndSource>.</span></span> <span data-ttu-id="8f22d-230"><xref:System.Windows.Interop.HwndSource.Disposed> イベントは、イベントを発生させたオブジェクトが、そのオブジェクトへのすべての参照を削除しようとしていることを示します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-230">The <xref:System.Windows.Interop.HwndSource.Disposed> event indicates that the object that raises the event is about to have all references to it removed.</span></span>  
  
 <span data-ttu-id="8f22d-231"><xref:System.Windows.Interop.HwndSource.Dispose%2A> が2回呼び出されないようにするには、<xref:System.Windows.Interop.HwndSource.Disposed> と <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> プロパティを使用します (例外が発生します)。</span><span class="sxs-lookup"><span data-stu-id="8f22d-231">Use <xref:System.Windows.Interop.HwndSource.Disposed> and the <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> property to avoid calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> twice (which raises an exception).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.HwndDpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.HwndDpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As HwndDpiChangedEventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::HwndDpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.HwndDpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.HwndDpiChangedEventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event DpiChanged As HwndDpiChangedEventHandler " FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.HwndDpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-232">この Hwnd のモニターの DPI が変更された場合、または Hwnd がさまざまな DPI のモニターに移動された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-232">Occurs when the DPI of the monitor of this Hwnd has changed, or the Hwnd is moved to a monitor with a different DPI.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHwnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Interop.HwndSource FromHwnd (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Interop.HwndSource FromHwnd(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHwnd (hwnd As IntPtr) As HwndSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Interop::HwndSource ^ FromHwnd(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHwnd : nativeint -&gt; System.Windows.Interop.HwndSource" Usage="System.Windows.Interop.HwndSource.FromHwnd hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd"><span data-ttu-id="8f22d-233">指定したウィンドウ ハンドル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-233">The provided window handle.</span></span></param>
        <summary><span data-ttu-id="8f22d-234">指定したウィンドウの <see cref="T:System.Windows.Interop.HwndSource" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-234">Returns the <see cref="T:System.Windows.Interop.HwndSource" /> object of the specified window.</span></span></summary>
        <returns><span data-ttu-id="8f22d-235"><see cref="T:System.Windows.Interop.HwndSource" /> ウィンドウ ハンドルで指定したウィンドウの <paramref name="hwnd" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8f22d-235">The <see cref="T:System.Windows.Interop.HwndSource" /> object for the window that is specified by the <paramref name="hwnd" /> window handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-236">このメソッドは、インターネットセキュリティゾーンでは使用できません。また、一般的な部分信頼でも使用できません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-236">This method is not available in the Internet security zone, or for partial trust in general.</span></span>  
  
 <span data-ttu-id="8f22d-237">このメソッドを使用すると、明示的な相互運用ウィンドウではないウィンドウの <xref:System.Windows.Interop.HwndSource> を返すことができます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-237">You can use this method to return an <xref:System.Windows.Interop.HwndSource> for a window that is not explicitly an interoperation window.</span></span> <span data-ttu-id="8f22d-238">この手順は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="8f22d-238">The procedure for this is:</span></span>  
  
1.  <span data-ttu-id="8f22d-239"><xref:System.Windows.Interop.WindowInteropHelper> インスタンスを作成します (main <xref:System.Windows.Window> をコンストラクターパラメーターとして指定します)。</span><span class="sxs-lookup"><span data-stu-id="8f22d-239">Create a <xref:System.Windows.Interop.WindowInteropHelper> instance (providing the main <xref:System.Windows.Window> as a constructor parameter).</span></span>  
  
2.  <span data-ttu-id="8f22d-240">その <xref:System.Windows.Interop.WindowInteropHelper> インスタンスから <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> プロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-240">Get the value of the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property from that <xref:System.Windows.Interop.WindowInteropHelper> instance.</span></span>  
  
3.  <span data-ttu-id="8f22d-241"><xref:System.Windows.Interop.HwndSource.FromHwnd%2A>に、その HWND 値をパラメーターとして渡します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-241">Pass that HWND value as a parameter to <xref:System.Windows.Interop.HwndSource.FromHwnd%2A>.</span></span>  
  
 <span data-ttu-id="8f22d-242">この手法は、一般的な <xref:System.Windows.Interop.HwndSource.AddHook%2A> メッセージ処理をウィンドウに追加する場合に便利です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-242">This technique can be useful if you then want to add general <xref:System.Windows.Interop.HwndSource.AddHook%2A> message processing to the window.</span></span> <span data-ttu-id="8f22d-243">ただし、<xref:System.Windows.Interop.HwndSource>を作成するたびに、それを破棄する責任もあります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-243">However, whenever you create an <xref:System.Windows.Interop.HwndSource>, you are also responsible for destroying it.</span></span> <span data-ttu-id="8f22d-244">これは、アプリケーション <xref:System.Windows.Interop.HwndSource> の <xref:System.Windows.Application> オブジェクトが破棄されている場合でも同様です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-244">This is true even if the <xref:System.Windows.Application> object for an application <xref:System.Windows.Interop.HwndSource> is disposed.</span></span> <span data-ttu-id="8f22d-245">詳細については、「<xref:System.Windows.Interop.HwndSource>の解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-245">For more information, see Remarks on <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.WindowInteropHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberSignature Language="F#" Value="override this.GetCompositionTargetCore : unit -&gt; System.Windows.Media.CompositionTarget" Usage="hwndSource.GetCompositionTargetCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f22d-246">ウィンドウのビジュアル ターゲットを取得します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-246">Gets the visual target of the window.</span></span></summary>
        <returns><span data-ttu-id="8f22d-247">ウィンドウのビジュアル ターゲットを返します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-247">Returns the visual target of the window.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-248">既定の実装では、<xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>と同じ結果が返されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-248">The default implementation returns the same result as <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8f22d-249">このメソッドを実装して、型固有のビジュアルターゲットを返します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-249">Implement this method to return a type-specific visual target.</span></span> <span data-ttu-id="8f22d-250"><see cref="T:System.Windows.Interop.HwndSource" /> は、このメソッドを実装して <see cref="T:System.Windows.Interop.HwndTarget" />を返します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-250"><see cref="T:System.Windows.Interop.HwndSource" /> implements this method to return <see cref="T:System.Windows.Interop.HwndTarget" />.</span></span></para></block>
        <altmember cref="T:System.Windows.Media.CompositionTarget" />
        <altmember cref="P:System.Windows.Interop.HwndSource.CompositionTarget" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Interop.HwndSource.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Interop.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-251">この <see cref="T:System.Windows.Interop.HwndSource" /> のウィンドウ ハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-251">Gets the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="8f22d-252">ウィンドウ ハンドル。</span><span class="sxs-lookup"><span data-stu-id="8f22d-252">The window handle.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-253">このプロパティは、インターネットセキュリティゾーンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-253">This property is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFocusWithinCore">
      <MemberSignature Language="C#" Value="protected virtual bool HasFocusWithinCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HasFocusWithinCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.HasFocusWithinCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasFocusWithinCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HasFocusWithinCore();" />
      <MemberSignature Language="F#" Value="abstract member HasFocusWithinCore : unit -&gt; bool&#xA;override this.HasFocusWithinCore : unit -&gt; bool" Usage="hwndSource.HasFocusWithinCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f22d-254">シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがあるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-254">Gets a value that indicates whether the sink or one of its contained components has focus.</span></span></summary>
        <returns><span data-ttu-id="8f22d-255">シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-255"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public override bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.Interop.HwndSource.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-256">この <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> で <see cref="T:System.Windows.Interop.HwndSource" /> が呼び出されたかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-256">Gets a value that indicates whether <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> has been called on this <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <value><span data-ttu-id="8f22d-257">このオブジェクトで <see langword="true" /> が呼び出された場合は <see cref="M:System.Windows.Interop.HwndSource.Dispose" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-257"><see langword="true" /> if the object has had <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> called on it; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-258"><xref:System.Windows.Interop.HwndSource.Dispose%2A> HWND に関連するクリーンアップ作業を開始します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-258"><xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND.</span></span> <span data-ttu-id="8f22d-259">メイン UI スレッドとは異なるスレッドを使用して <xref:System.Windows.Interop.HwndSource.Dispose%2A> が呼び出されると、メイン UI スレッドにポストできるようになるまで、クリーンアップ作業が遅延する場合があります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-259">If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</span></span> <span data-ttu-id="8f22d-260"><xref:System.Windows.Interop.HwndSource.Disposed> イベントが発生し、<xref:System.Windows.Interop.HwndSource.Dispose%2A> が呼び出されるとすぐに <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> の値が `false` になります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-260">The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised and the value of <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> becomes `false` as soon as <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called.</span></span> <span data-ttu-id="8f22d-261">この期間中に <xref:System.Windows.Interop.HwndSource.Dispose%2A> を再度呼び出すと、<xref:System.Windows.Interop.HwndSource.Dispose%2A> によって例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-261">During this time, if you call <xref:System.Windows.Interop.HwndSource.Dispose%2A> again, <xref:System.Windows.Interop.HwndSource.Dispose%2A> raises an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSiteCore">
      <MemberSignature Language="C#" Value="protected System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore" />
      <MemberSignature Language="VB.NET" Value="Protected Property KeyboardInputSiteCore As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSiteCore { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardInputSiteCore : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.HwndSource.KeyboardInputSiteCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-262">コンポーネントのコンテナーの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> インターフェイスへの参照を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-262">Gets or sets a reference to the component's container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></summary>
        <value><span data-ttu-id="8f22d-263">コンテナーの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> インターフェイスへの参照。サイトが割り当てられていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-263">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface; or <see langword="null" /> if no site is assigned.</span></span> <span data-ttu-id="8f22d-264">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-264">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.HwndDpiChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(class System.Windows.HwndDpiChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (e As HwndDpiChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::HwndDpiChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.HwndDpiChangedEventArgs -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.HwndDpiChangedEventArgs -&gt; unit" Usage="hwndSource.OnDpiChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.HwndDpiChangedEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8f22d-265">イベント引数</span><span class="sxs-lookup"><span data-stu-id="8f22d-265">The event arguments</span></span></param>
        <summary><span data-ttu-id="8f22d-266">ウィンドウの DPI が変更されるときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-266">Called when the DPI is going to change for the window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-267">ユーザーがこのイベントを処理する場合、WPF はビジュアルをスケーリングしません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-267">If the user handles this event,         WPF does not scale any visuals.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-268">このメソッドは、重要なデータ <xref:System.Windows.Interop.HwndTarget>にアクセスします。</span><span class="sxs-lookup"><span data-stu-id="8f22d-268">This method accesses critical data <xref:System.Windows.Interop.HwndTarget>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMnemonicCore">
      <MemberSignature Language="C#" Value="protected virtual bool OnMnemonicCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMnemonicCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMnemonicCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnMnemonicCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member OnMnemonicCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.OnMnemonicCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.OnMnemonicCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="8f22d-269">ニーモニック用のメッセージおよび関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="8f22d-269">The message for the mnemonic and associated data.</span></span></param>
        <param name="modifiers"><span data-ttu-id="8f22d-270">変換キー。</span><span class="sxs-lookup"><span data-stu-id="8f22d-270">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="8f22d-271">このシンクのニーモニック (アクセス キー) のいずれかが起動されたときに呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-271">Called when one of the mnemonics (access keys) for this sink is invoked.</span></span></summary>
        <returns><span data-ttu-id="8f22d-272">メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-272"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8f22d-273"><paramref name="msg" /> は、WM_KEYDOWN、WM_SYSKEYDOWN、WM_CHAR、または WM_DEADCHAR ではありません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-273"><paramref name="msg" /> is not WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, or WM_DEADCHAR.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSinkCore">
      <MemberSignature Language="C#" Value="protected System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RegisterKeyboardInputSinkCore (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSinkCore(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberSignature Language="F#" Value="member this.RegisterKeyboardInputSinkCore : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="hwndSource.RegisterKeyboardInputSinkCore sink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="8f22d-274">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> シンク。</span><span class="sxs-lookup"><span data-stu-id="8f22d-274">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="8f22d-275">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> インターフェイスを登録します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-275">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span></span></summary>
        <returns><span data-ttu-id="8f22d-276">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> サイト。</span><span class="sxs-lookup"><span data-stu-id="8f22d-276">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHook">
      <MemberSignature Language="C#" Value="public void RemoveHook (System.Windows.Interop.HwndSourceHook hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHook(class System.Windows.Interop.HwndSourceHook hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHook (hook As HwndSourceHook)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHook(System::Windows::Interop::HwndSourceHook ^ hook);" />
      <MemberSignature Language="F#" Value="member this.RemoveHook : System.Windows.Interop.HwndSourceHook -&gt; unit" Usage="hwndSource.RemoveHook hook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="System.Windows.Interop.HwndSourceHook" />
      </Parameters>
      <Docs>
        <param name="hook"><span data-ttu-id="8f22d-277">削除するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="8f22d-277">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="8f22d-278"><see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" /> によって追加されたイベント ハンドラーを削除します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-278">Removes the event handlers that were added by <see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="8f22d-279">この方法は、インターネットセキュリティゾーンでは使用できません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-279">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
        <altmember cref="T:System.Windows.Interop.HwndSourceHook" />
      </Docs>
    </Member>
    <Member MemberName="RestoreFocusMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.RestoreFocusMode RestoreFocusMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.RestoreFocusMode RestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.RestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::RestoreFocusMode RestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreFocusMode : System.Windows.Input.RestoreFocusMode" Usage="System.Windows.Interop.HwndSource.RestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-280">ウィンドウの <see cref="T:System.Windows.Input.RestoreFocusMode" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-280">Gets the <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</span></span></summary>
        <value><span data-ttu-id="8f22d-281">ウィンドウの <see cref="T:System.Windows.Input.RestoreFocusMode" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-281">The <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-282">このプロパティは、<xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType> プロパティを使用して <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType> コンストラクターでのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-282">This property can be set only in the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType> constructor by using the <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public override System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootVisual : System.Windows.Media.Visual with get, set" Usage="System.Windows.Interop.HwndSource.RootVisual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-283">ウィンドウの <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-283">Gets or sets the <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" /> of the window.</span></span></summary>
        <value><span data-ttu-id="8f22d-284">ウィンドウのルート ビジュアル オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8f22d-284">The root visual object of the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-285">このプロパティを使用して、<xref:System.Windows.Controls.Page> または別のルートビジュアルを <xref:System.Windows.Interop.HwndSource>に接続します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-285">Use this property to connect a <xref:System.Windows.Controls.Page> or another root visual to the <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 <span data-ttu-id="8f22d-286"><xref:System.Windows.Interop.HwndSource> の <xref:System.Windows.Interop.HwndSource.RootVisual%2A> にスケール変換を適用することはできません。 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> の動作が無効になる可能性があるためです。</span><span class="sxs-lookup"><span data-stu-id="8f22d-286">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource> because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior.</span></span> <span data-ttu-id="8f22d-287">コンテンツは拡大縮小されますが、外側のウィンドウはスケーリングされません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-287">The content will scale, but the enclosing window will not.</span></span> <span data-ttu-id="8f22d-288"><xref:System.Windows.Interop.HwndSource.RootVisual%2A>のオブジェクトに変換を適用する代わりに、<xref:System.Windows.Interop.HwndSource.RootVisual%2A>の子要素であるオブジェクトに変換を適用します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-288">Instead of applying the transformation to the object that is the <xref:System.Windows.Interop.HwndSource.RootVisual%2A>, apply the transformation to an object that is a child element of the <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span> <span data-ttu-id="8f22d-289">スケーラブルなオブジェクトを提供するために、[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] コンテンツ (パネルなど) に追加の要素を追加することが必要になる場合があります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-289">You might need to add an extra enclosing element to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content, such as a panel, in order to provide a scaleable object.</span></span>  
  
 <span data-ttu-id="8f22d-290">ルートビジュアルとして <xref:System.Windows.Window> を追加できますが、子ウィンドウとしてではなく、トップレベルウィンドウ (WS_OVERLAPPED を使用) としてのみ追加できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-290">You can add a <xref:System.Windows.Window> as the root visual, but only as a top-level window (with WS_OVERLAPPED), not as a child window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndTarget.RootVisual" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberSignature Language="F#" Value="member this.SizeToContent : System.Windows.SizeToContent with get, set" Usage="System.Windows.Interop.HwndSource.SizeToContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-291">ウィンドウのサイズをコンテンツに合わせて調整するかどうか、およびどのように調整するかを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-291">Get or sets whether and how the window is sized to its content.</span></span></summary>
        <value><span data-ttu-id="8f22d-292">列挙値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="8f22d-292">One of the enumeration values.</span></span> <span data-ttu-id="8f22d-293">既定値は <see cref="F:System.Windows.SizeToContent.Manual" /> です。これは、ウィンドウのサイズをコンテンツに合わせて調整しないように指定します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-293">The default value is <see cref="F:System.Windows.SizeToContent.Manual" />, which specifies that the window is not sized to its content.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-294">エンドユーザーは、アプリケーションによってその機能が公開されている場合、このプロパティをアプリケーション UI で間接的に設定することがあります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-294">End users might indirectly set this property through application UI, if that functionality is exposed by the application.</span></span>  
  
 <span data-ttu-id="8f22d-295"><xref:System.Windows.Interop.HwndSource>の <xref:System.Windows.Interop.HwndSource.RootVisual%2A> にスケール変換を適用することはできません。 <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> の動作が無効になる可能性があるためです。</span><span class="sxs-lookup"><span data-stu-id="8f22d-295">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>, because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior.</span></span> <span data-ttu-id="8f22d-296"><xref:System.Windows.Interop.HwndSource.RootVisual%2A>については、「解説」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-296">See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.SizeToContent" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeToContentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeToContentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.SizeToContentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SizeToContentChanged As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SizeToContentChanged;" />
      <MemberSignature Language="F#" Value="member this.SizeToContentChanged : EventHandler " Usage="member this.SizeToContentChanged : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event SizeToContentChanged As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-297"><see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> プロパティの値が変化したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-297">Occurs when the value of the <see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-298"><xref:System.Windows.Interop.HwndSource.SizeToContentChanged> イベントは、ユーザーの操作によって変更が発生した場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-298">The <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> event is only raised when user interaction causes the change.</span></span> <span data-ttu-id="8f22d-299">コードで <xref:System.Windows.Window.SizeToContent%2A> を設定した場合、<xref:System.Windows.Interop.HwndSource.SizeToContentChanged> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="8f22d-299">If you set <xref:System.Windows.Window.SizeToContent%2A> in code, the <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Interop.HwndSource.AutoResized" />
        <altmember cref="P:System.Windows.Interop.HwndSource.SizeToContent" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Function HasFocusWithin () As Boolean Implements IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() = System::Windows::Interop::IKeyboardInputSink::HasFocusWithin;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Interop.IKeyboardInputSink.HasFocusWithin : unit -&gt; bool&#xA;override this.System.Windows.Interop.IKeyboardInputSink.HasFocusWithin : unit -&gt; bool" Usage="hwndSource.System.Windows.Interop.IKeyboardInputSink.HasFocusWithin " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8f22d-300">このメンバーの詳細については、「<see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-300">For a description of this member, see <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="8f22d-301">シンクまたはその中に格納されているコンポーネントのいずれかにフォーカスがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-301"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-302">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-302">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8f22d-303">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-303">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value=" Property KeyboardInputSite As IKeyboardInputSite Implements IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Interop::IKeyboardInputSite ^ System::Windows::Interop::IKeyboardInputSink::KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-304">このメンバーの詳細については、「<see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-304">For a description of this member, see <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />.</span></span></summary>
        <value><span data-ttu-id="8f22d-305">コンテナーの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> インターフェイスへの参照。</span><span class="sxs-lookup"><span data-stu-id="8f22d-305">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-306">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-306">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8f22d-307">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-307">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0ffbde0d-701d-45a3-a6fa-dd71f4d9772e"><span data-ttu-id="8f22d-308">WPF と Win32 の相互運用の概要</span><span class="sxs-lookup"><span data-stu-id="8f22d-308">WPF and Win32 Interoperation Overview</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/ee5258b7-6567-415a-9b1c-c0cbe46e79ef"><span data-ttu-id="8f22d-309">入力の概要</span><span class="sxs-lookup"><span data-stu-id="8f22d-309">Input Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.OnMnemonic">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.OnMnemonic" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::OnMnemonic;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Interop.IKeyboardInputSink.OnMnemonic : MSG * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.System.Windows.Interop.IKeyboardInputSink.OnMnemonic : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.System.Windows.Interop.IKeyboardInputSink.OnMnemonic (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="8f22d-310">ニーモニック用のメッセージおよび関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="8f22d-310">The message for the mnemonic and associated data.</span></span> <span data-ttu-id="8f22d-311">このメッセージ構造を変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-311">Do not modify this message structure.</span></span> <span data-ttu-id="8f22d-312">パフォーマンス上の理由から、これは参照渡しのみです。</span><span class="sxs-lookup"><span data-stu-id="8f22d-312">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="8f22d-313">変換キー。</span><span class="sxs-lookup"><span data-stu-id="8f22d-313">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="8f22d-314">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-314">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns><span data-ttu-id="8f22d-315">メッセージが処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-315"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-316">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-316">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8f22d-317">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-317">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite IKeyboardInputSink.RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite Implements IKeyboardInputSink.RegisterKeyboardInputSink" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink) = System::Windows::Interop::IKeyboardInputSink::RegisterKeyboardInputSink;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite&#xA;override this.System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="hwndSource.System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink sink" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="8f22d-318">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> シンク。</span><span class="sxs-lookup"><span data-stu-id="8f22d-318">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="8f22d-319">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-319">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />.</span></span></summary>
        <returns><span data-ttu-id="8f22d-320">格納されているコンポーネントの <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> サイト。</span><span class="sxs-lookup"><span data-stu-id="8f22d-320">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-321">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-321">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8f22d-322">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-322">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TabInto">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Function TabInto (request As TraversalRequest) As Boolean Implements IKeyboardInputSink.TabInto" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TabInto(System::Windows::Input::TraversalRequest ^ request) = System::Windows::Interop::IKeyboardInputSink::TabInto;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Interop.IKeyboardInputSink.TabInto : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.System.Windows.Interop.IKeyboardInputSink.TabInto : System.Windows.Input.TraversalRequest -&gt; bool" Usage="hwndSource.System.Windows.Interop.IKeyboardInputSink.TabInto request" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="8f22d-323">フォーカスを最初と最後のどちらのタブ位置に設定するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-323">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="8f22d-324">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-324">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</span></span></summary>
        <returns><span data-ttu-id="8f22d-325">フォーカスが要求どおりに設定された場合は <see langword="true" />。タブ位置が存在しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-325"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-326">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-326">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8f22d-327">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-327">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateAccelerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateAccelerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator : MSG * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="8f22d-328">メッセージおよび関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="8f22d-328">The message and associated data.</span></span> <span data-ttu-id="8f22d-329">この構造体を変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-329">Do not modify this structure.</span></span> <span data-ttu-id="8f22d-330">パフォーマンス上の理由から、これは参照渡しのみです。</span><span class="sxs-lookup"><span data-stu-id="8f22d-330">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="8f22d-331">変換キー。</span><span class="sxs-lookup"><span data-stu-id="8f22d-331">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="8f22d-332">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-332">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns><span data-ttu-id="8f22d-333">メッセージがメソッドの実装によって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-333"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-334">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-334">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8f22d-335">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-335">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateChar">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateChar;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Interop.IKeyboardInputSink.TranslateChar : MSG * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.System.Windows.Interop.IKeyboardInputSink.TranslateChar : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.System.Windows.Interop.IKeyboardInputSink.TranslateChar (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="8f22d-336">メッセージおよび関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="8f22d-336">The message and associated data.</span></span> <span data-ttu-id="8f22d-337">この構造体を変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-337">Do not modify this structure.</span></span> <span data-ttu-id="8f22d-338">パフォーマンス上の理由から、これは参照渡しのみです。</span><span class="sxs-lookup"><span data-stu-id="8f22d-338">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="8f22d-339">変換キー。</span><span class="sxs-lookup"><span data-stu-id="8f22d-339">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="8f22d-340">このメンバーの詳細については、「<see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-340">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns><span data-ttu-id="8f22d-341">メッセージが処理されたため <see langword="true" /> を呼び出さない場合は <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-341"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-342">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-342">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="8f22d-343">これは、<xref:System.Windows.Interop.HwndSource> のインスタンスが <xref:System.Windows.Interop.IKeyboardInputSink> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-343">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIntoCore">
      <MemberSignature Language="C#" Value="protected virtual bool TabIntoCore (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TabIntoCore(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TabIntoCore (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TabIntoCore(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member TabIntoCore : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.TabIntoCore : System.Windows.Input.TraversalRequest -&gt; bool" Usage="hwndSource.TabIntoCore request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="8f22d-344">フォーカスを最初と最後のどちらのタブ位置に設定するかを指定します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-344">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="8f22d-345">フォーカスをシンクの最初のタブ位置または最後のタブ位置のいずれかに設定します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-345">Sets focus on either the first tab stop or the last tab stop of the sink.</span></span></summary>
        <returns><span data-ttu-id="8f22d-346">フォーカスが要求どおりに設定された場合は <see langword="true" />。タブ位置が存在しない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-346"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8f22d-347"><paramref name="request" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="8f22d-347"><paramref name="request" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateAcceleratorCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateAcceleratorCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateAcceleratorCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateAcceleratorCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateAcceleratorCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.TranslateAcceleratorCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.TranslateAcceleratorCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="8f22d-348">メッセージおよび関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="8f22d-348">The message and associated data.</span></span> <span data-ttu-id="8f22d-349">この構造体を変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-349">Do not modify this structure.</span></span> <span data-ttu-id="8f22d-350">パフォーマンス上の理由から、これは参照渡しのみです。</span><span class="sxs-lookup"><span data-stu-id="8f22d-350">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="8f22d-351">変換キー。</span><span class="sxs-lookup"><span data-stu-id="8f22d-351">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="8f22d-352">キー押下メッセージのレベルでキーボード入力を処理します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-352">Processes keyboard input at the key-down message level.</span></span></summary>
        <returns><span data-ttu-id="8f22d-353">メッセージがメソッドの実装によって処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-353"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateCharCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateCharCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateCharCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateCharCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateCharCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateCharCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.TranslateCharCore : MSG * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.TranslateCharCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="8f22d-354">メッセージおよび関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="8f22d-354">The message and associated data.</span></span> <span data-ttu-id="8f22d-355">この構造体を変更しないでください。</span><span class="sxs-lookup"><span data-stu-id="8f22d-355">Do not modify this structure.</span></span> <span data-ttu-id="8f22d-356">パフォーマンス上の理由から、これは参照渡しのみです。</span><span class="sxs-lookup"><span data-stu-id="8f22d-356">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="8f22d-357">変換キー。</span><span class="sxs-lookup"><span data-stu-id="8f22d-357">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="8f22d-358"><see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> メソッドの呼び出し前に、WM_CHAR、WM_SYSCHAR、WM_DEADCHAR、および WM_SYSDEADCHAR 入力メッセージを処理します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-358">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> method is called.</span></span></summary>
        <returns><span data-ttu-id="8f22d-359">メッセージが処理されたため <see langword="true" /> を呼び出さない場合は <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-359"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelOpacity">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelOpacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsesPerPixelOpacity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelOpacity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsesPerPixelOpacity : bool" Usage="System.Windows.Interop.HwndSource.UsesPerPixelOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8f22d-360">ソース ウィンドウ コンテンツのピクセルごとの不透明度を使用するかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8f22d-360">Gets a value that declares whether the per-pixel opacity of the source window content is respected.</span></span></summary>
        <value><span data-ttu-id="8f22d-361">システムでピクセルごとの不透明度を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8f22d-361"><see langword="true" /> if the system uses per-pixel opacity; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8f22d-362">ピクセルごとの不透明度を有効にすると、非クライアント領域は描画されなくなります。</span><span class="sxs-lookup"><span data-stu-id="8f22d-362">When you enable per-pixel opacity, the system no longer draws the non-client area.</span></span> <span data-ttu-id="8f22d-363">これは、<xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A> の目的は、相互運用シナリオで動作する、四角形以外のトップレベル UI を表示することにあるためです。</span><span class="sxs-lookup"><span data-stu-id="8f22d-363">This is because the intended purpose of <xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A> is to show non-rectangular top-level UI that works in interoperation scenarios.</span></span> <span data-ttu-id="8f22d-364">そのため、四角形の非クライアント領域を表示すると、その目的が損なわれます。</span><span class="sxs-lookup"><span data-stu-id="8f22d-364">Therefore, showing the rectangular non-client area defeats that purpose.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
