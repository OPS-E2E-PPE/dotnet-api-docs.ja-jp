<Type Name="Cursor" FullName="System.Windows.Forms.DataVisualization.Charting.Cursor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67e4fd12db024bf9957bf29c13b8e0f68113c4a7" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73397580" /></Metadata><TypeSignature Language="C#" Value="public class Cursor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Cursor extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Cursor" />
  <TypeSignature Language="VB.NET" Value="Public Class Cursor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Cursor : IDisposable" />
  <TypeSignature Language="F#" Value="type Cursor = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="88d20-101">軸に沿った位置を定義する水平方向の線と垂直方向の線を表します。</span><span class="sxs-lookup"><span data-stu-id="88d20-101">Represents a horizontal or vertical line that defines a position along an axis.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d20-102">カーソルは、軸に沿った位置を定義する水平方向または垂直方向の線です。</span><span class="sxs-lookup"><span data-stu-id="88d20-102">A cursor is a horizontal or vertical line that defines a position along an axis.</span></span> <span data-ttu-id="88d20-103">範囲選択は、開始位置と終了位置で定義される軸に沿った範囲であり、半透明色を使用して表示されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-103">A range selection is a range along an axis that is defined by a beginning and end position, and is displayed using a semi-transparent color.</span></span>  
  
 <span data-ttu-id="88d20-104">カーソルと範囲の選択はどちらも <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> クラスによって実装されます。これは、<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> オブジェクトの <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> および <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> プロパティとして公開されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-104">Cursors and range selections are both implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class, which is exposed as the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object.</span></span> <span data-ttu-id="88d20-105"><xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> オブジェクトはグラフ領域の X 軸用で、<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> オブジェクトは Y 軸用です。</span><span class="sxs-lookup"><span data-stu-id="88d20-105">The <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> object is for the X axis of a chart area, and the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> object is for the Y axis.</span></span> <span data-ttu-id="88d20-106">これらのオブジェクトの <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> プロパティは、関連付けられている軸がプライマリかセカンダリかを決定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-106">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property of these objects determines whether the associated axis is primary or secondary.</span></span>  
  
 <span data-ttu-id="88d20-107"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor> クラスの外側にあるカーソルと範囲選択機能は、ルート <xref:System.Windows.Forms.DataVisualization.Charting.Chart> オブジェクト内のカーソルと範囲選択に関連するイベントです。</span><span class="sxs-lookup"><span data-stu-id="88d20-107">The only cursor and range selection functionality found outside the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor> class are the events related to the cursor and range selection that are in the root <xref:System.Windows.Forms.DataVisualization.Charting.Chart> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cursor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88d20-108"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="88d20-108">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoScroll">
      <MemberSignature Language="C#" Value="public bool AutoScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoScroll { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScroll : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-109">範囲の選択操作がグラフ エリアの境界を越えて行われた場合に、スクロールするかどうかを示すフラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-109">Gets or sets a flag that determines whether scrolling will occur if a range selection operation extends beyond a boundary of the chart area.</span></span></summary>
        <value><span data-ttu-id="88d20-110">データ ビューが自動的にスクロール可能な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="88d20-110"><see langword="true" /> if the data view can be scrolled automatically; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d20-111">データビューでプロットされた系列のすべてのデータポイントが表示されず、範囲がユーザーによって選択されている場合は、このプロパティが `true`、マウスでカーソルがグラフ領域の境界の外に移動されると、ビューの自動スクロールが行われます。</span><span class="sxs-lookup"><span data-stu-id="88d20-111">If a data view does not display all data points in a plotted series and a range is being selected by the user, automatic scrolling of the view will occur if this property is `true` and the mouse - and therefore the cursor - is moved outside the chart area boundary.</span></span>  
  
 <span data-ttu-id="88d20-112">表示可能なデータが他にある場合、スクロールは軸に沿ってのみ行われます。</span><span class="sxs-lookup"><span data-stu-id="88d20-112">Scrolling will only occur along an axis if there is more data available to be viewed.</span></span>  
  
 <span data-ttu-id="88d20-113">すべてのデータを表示しないデータビューは、通常、エンドユーザーがデータのサブセットにズームする場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="88d20-113">A data view that does not display all data usually results if the end-user zooms into a subset of data.</span></span> <span data-ttu-id="88d20-114">ビューとズームは <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> クラスによって実装されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-114">Views and zooming are implemented by the <xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AxisType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.AxisType AxisType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.AxisType AxisType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType" />
      <MemberSignature Language="VB.NET" Value="Public Property AxisType As AxisType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::AxisType AxisType { System::Windows::Forms::DataVisualization::Charting::AxisType get(); void set(System::Windows::Forms::DataVisualization::Charting::AxisType value); };" />
      <MemberSignature Language="F#" Value="member this.AxisType : System.Windows.Forms.DataVisualization.Charting.AxisType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.AxisType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-115">カーソルのアタッチ先の軸の種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-115">Gets or sets the type of axis that the cursor is attached to.</span></span></summary>
        <value><span data-ttu-id="88d20-116">軸が主軸と第 2 軸のどちらにアタッチされるかを表す <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="88d20-116">An <see cref="T:System.Windows.Forms.DataVisualization.Charting.AxisType" /> enumeration value that represents whether the axis is attached to the primary or secondary axis.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d20-117">軸には、プライマリとセカンダリの2つのセットがあります。</span><span class="sxs-lookup"><span data-stu-id="88d20-117">There are two sets of axes: primary and secondary.</span></span> <span data-ttu-id="88d20-118">横棒グラフを除くすべてのグラフの主軸は、グラフ領域の下 (主軸の X 軸) と左 (Y 軸) の境界に配置されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-118">Primary axes for all charts except the bar charts are located at the bottom (primary X-axis) and left (primary Y-axis) border of the chart area.</span></span>  
  
 <span data-ttu-id="88d20-119">2番目の軸は、グラフ領域の右側 (2 番目の X 軸) と上部 (第2の Y 軸) の境界に配置されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-119">The secondary axes are located at the right (secondary X-axis) and top (secondary Y-axis) border of the chart area.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88d20-120">グラフ領域内にプロットされたすべての系列が1種類の軸 (たとえば主軸の X 軸) のみを使用している場合、このプロパティを系列で使用されていない軸の種類 (この場合は第2の X 軸) に設定しても効果はありません。カーソルは、系列のプロットに使用されている唯一の軸に自動的にアタッチされます。</span><span class="sxs-lookup"><span data-stu-id="88d20-120">If all series plotted within a chart area use only one type of axis (for example, the primary X-axis), then setting this property to an axis type not used by the series (in this case, the secondary X-axis) will have no effect; the cursor will automatically be attached to the only axis being used to plot the series.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="88d20-121"><see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> クラスによって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="88d20-121">Releases the resources used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Cursor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cursor.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="88d20-122">アンマネージ リソースを解放またはリセットするアプリケーション定義のタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="88d20-122">Performs application-defined tasks that free, release, or reset unmanaged resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cursor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="88d20-123">アンマネージド リソースとマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="88d20-123"><see langword="true" /> to release both unmanaged and managed resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="88d20-124">アンマネージド リソースおよび (オプションで) マネージド リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="88d20-124">Releases unmanaged and, optionally, managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public double Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Interval { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-125">カーソルの間隔を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-125">Gets or sets the cursor interval.</span></span></summary>
        <value><span data-ttu-id="88d20-126">カーソルの間隔。</span><span class="sxs-lookup"><span data-stu-id="88d20-126">The cursor interval.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d20-127"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> プロパティは、エンドユーザーがカーソルを描画できる頻度と場所、および範囲選択の始点と終点を描画できる場所を決定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-127">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property determines how often and where a cursor can be drawn by an end user, as well as where the beginning and end points of a range selection can be drawn.</span></span> <span data-ttu-id="88d20-128">値が 0 (既定値) の場合は、カーソルまたは範囲選択をグラフ領域内の任意の場所に描画できることを示します。</span><span class="sxs-lookup"><span data-stu-id="88d20-128">A value of zero, which is the default value, signifies that a cursor or range selection can be drawn anywhere within a chart area.</span></span> <span data-ttu-id="88d20-129">0以外の値は、選択された範囲のカーソルまたは始点または終点が、ユーザーの操作によって設定された場合にのみ、指定した間隔で描画されることを示します。</span><span class="sxs-lookup"><span data-stu-id="88d20-129">A nonzero value signifies that the cursor or beginning and/or end points of a selected range will only be drawn at the specified interval when set by user interaction.</span></span>  
  
 <span data-ttu-id="88d20-130">測定単位は <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> プロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-130">The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property.</span></span>  
  
 <span data-ttu-id="88d20-131">このプロパティは、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> プロパティと組み合わせて使用することもできます。これにより、指定した間隔のオフセットを指定できます。</span><span class="sxs-lookup"><span data-stu-id="88d20-131">This property can also be used in conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property, which allows you to specify an offset from the specified interval.</span></span> <span data-ttu-id="88d20-132">たとえば、土曜日にのみカーソルを表示できるようにするには、間隔を6日に設定して、1週間の間隔を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="88d20-132">For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days.</span></span> <span data-ttu-id="88d20-133">.NET Framework では、日曜日は週の最初の日と見なされます。</span><span class="sxs-lookup"><span data-stu-id="88d20-133">In .NET Framework, Sunday is considered to be the first day of the week.</span></span>  
  
 <span data-ttu-id="88d20-134"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> プロパティを設定してカーソルのユーザーインターフェイスを有効にし、グラフ領域内でマウスをクリックすると、カーソルの位置は、最も近い場所に設定されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-134">If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="88d20-135">カーソルまたは範囲選択の位置をプログラムで設定した場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> プロパティは効果がありません。</span><span class="sxs-lookup"><span data-stu-id="88d20-135">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property has no effect if you set the position of a cursor or range selection programmatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffset">
      <MemberSignature Language="C#" Value="public double IntervalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 IntervalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double IntervalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffset : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-136">ユーザーによって設定されたカーソルと範囲選択を描画できる位置に影響する間隔のオフセットを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-136">Gets or sets the interval offset, which affects where the cursor and range selection can be drawn when they are set by a user.</span></span></summary>
        <value><span data-ttu-id="88d20-137">間隔のオフセット。</span><span class="sxs-lookup"><span data-stu-id="88d20-137">The offset from the interval.</span></span> <span data-ttu-id="88d20-138">既定値は 0 です。この場合は制限はありません。負の値も使用できます。</span><span class="sxs-lookup"><span data-stu-id="88d20-138">The default value is zero, which signifies no limitations, and negative values are allowed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d20-139"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> プロパティによって、カーソルの間隔のオフセットと範囲選択の開始点と終了点が決まります。</span><span class="sxs-lookup"><span data-stu-id="88d20-139">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property determines the interval offset of a cursor and the beginning and/or end points of a range selection.</span></span> <span data-ttu-id="88d20-140">このプロパティは、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> プロパティと共に、グラフ領域内でカーソルと範囲を表示できる場所を決定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-140">In conjunction with the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property, this property determines where a cursor and range can be displayed within a chart area.</span></span> <span data-ttu-id="88d20-141">値が 0 (既定値) の場合は、オフセットがないことを示します。</span><span class="sxs-lookup"><span data-stu-id="88d20-141">A value of zero, which is the default, signifies that there is no offset.</span></span>  
  
 <span data-ttu-id="88d20-142">測定単位は <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> プロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-142">The unit of measurement is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property.</span></span>  
  
 <span data-ttu-id="88d20-143">オフセットは、範囲選択のカーソルと始点または終点を描画できる位置に影響します。</span><span class="sxs-lookup"><span data-stu-id="88d20-143">The offset affects the locations at which a cursor and the beginning and/or end points of a range selection can be drawn.</span></span> <span data-ttu-id="88d20-144">たとえば、土曜日にのみカーソルを表示できるようにするには、間隔を6日に設定して、1週間の間隔を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="88d20-144">For example, to allow a cursor to only be displayed every Saturday, an interval of 1 week should be specified, along with an interval offset of 6 days.</span></span> <span data-ttu-id="88d20-145">.NET Framework では、日曜日は週の最初の日と見なされます。</span><span class="sxs-lookup"><span data-stu-id="88d20-145">In .NET Framework, Sunday is considered to be the first day of the week.</span></span>  
  
 <span data-ttu-id="88d20-146"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> プロパティを設定してカーソルのユーザーインターフェイスを有効にし、グラフ領域内でマウスをクリックすると、カーソルの位置は、最も近い場所に設定されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-146">If the cursor user interface is enabled by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A> property, and the mouse is clicked inside a chart area, the position of the cursor will be set to the nearest allowable location.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="88d20-147">範囲の選択またはカーソル位置がプログラムによって設定されている場合、間隔関連のプロパティは効果がありません。</span><span class="sxs-lookup"><span data-stu-id="88d20-147">Interval-related properties have no effect when a range selection or cursor position are set programmatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalOffsetType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalOffsetType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalOffsetType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalOffsetType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-148">軸のカーソルと選択範囲の間隔のオフセットの種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-148">Gets or sets the interval offset type of a cursor and selected range for an axis.</span></span></summary>
        <value><span data-ttu-id="88d20-149">間隔のオフセットの単位を示す <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> 列挙値。</span><span class="sxs-lookup"><span data-stu-id="88d20-149">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType" /> enumeration value that determines the unit of measurement for the interval offset.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d20-150"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> プロパティは、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> プロパティを使用して指定される間隔のオフセットの種類を決定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-150">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property determines the type of interval offset, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> property.</span></span>  
  
 <span data-ttu-id="88d20-151"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> プロパティが <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>に設定されている場合は、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> プロパティの設定が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-151">If the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property setting will be used.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88d20-152">範囲の選択またはカーソル位置がプログラムによって設定されている場合、間隔関連のプロパティは効果がありません。</span><span class="sxs-lookup"><span data-stu-id="88d20-152">Interval-related properties have no effect when a range selection or cursor position are set programmatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IntervalType">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType" />
      <MemberSignature Language="VB.NET" Value="Public Property IntervalType As DateTimeIntervalType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType IntervalType { System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType get(); void set(System::Windows::Forms::DataVisualization::Charting::DateTimeIntervalType value); };" />
      <MemberSignature Language="F#" Value="member this.IntervalType : System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-153">軸のカーソルと選択範囲の間隔の種類を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-153">Gets or sets the interval type for the cursor and selected range of an axis.</span></span></summary>
        <value><span data-ttu-id="88d20-154">軸のカーソルと選択範囲の間隔の種類。</span><span class="sxs-lookup"><span data-stu-id="88d20-154">The interval type for the cursor and selected range of an axis.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d20-155"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> プロパティは、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> プロパティを使用して指定される間隔の種類を決定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-155">The <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> property determines the type of interval, which is specified using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> property.</span></span>  
  
 <span data-ttu-id="88d20-156">間隔の種類が <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto> の場合、間隔の単位は `double` として扱われます。これは、<xref:System.DateTime> の値が指定されている場合の1日に相当します。</span><span class="sxs-lookup"><span data-stu-id="88d20-156">If the interval type is <xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType.Auto>, the unit of measurement for the interval is treated as a `double`, which is equivalent to one day when <xref:System.DateTime> values are specified.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="88d20-157">範囲の選択またはカーソル位置がプログラムによって設定されている場合、間隔関連のプロパティは効果がありません。</span><span class="sxs-lookup"><span data-stu-id="88d20-157">Interval-related properties have no effect when a range selection or cursor position is set programmatically.</span></span>  
  
 <span data-ttu-id="88d20-158">軸の間隔の種類が時間、分などの時間を表す場合は、ズーム機能を正しく有効にするために、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> も時刻値に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="88d20-158">If the axis interval type represents a time - for example, hours, minutes, and so forth - then in order to correctly enable the zooming function, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A> must also be set to a time value.</span></span> <span data-ttu-id="88d20-159">たとえば、ChartArea1 の型が時間単位で表されている場合は、ChartArea1 型を minutes に設定できます。この場合、</span><span class="sxs-lookup"><span data-stu-id="88d20-159">For example, if the ChartArea1.AxisX.IntervalType is expressed in hours, then the ChartArea1.CursorX.IntervalType could be set to minutes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUserEnabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-160">カーソルのユーザー インターフェイスを有効または無効にするフラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-160">Gets or sets a flag that enables or disables the cursor user interface.</span></span></summary>
        <value><span data-ttu-id="88d20-161">カーソルのユーザー インターフェイスを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="88d20-161"><see langword="true" /> if the cursor user interface is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserSelectionEnabled">
      <MemberSignature Language="C#" Value="public bool IsUserSelectionEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserSelectionEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUserSelectionEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserSelectionEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUserSelectionEnabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-162">範囲選択ユーザー インターフェイスを有効または無効にするフラグを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-162">Gets or sets a flag that enables or disables the range selection user interface.</span></span></summary>
        <value><span data-ttu-id="88d20-163">範囲選択ユーザー インターフェイスを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="88d20-163"><see langword="true" /> if the range selection user interface is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color LineColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color LineColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor" />
      <MemberSignature Language="VB.NET" Value="Public Property LineColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color LineColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.LineColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Red")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-164">カーソルの線の色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-164">Gets or sets the cursor line color.</span></span></summary>
        <value><span data-ttu-id="88d20-165">カーソルの行の色。</span><span class="sxs-lookup"><span data-stu-id="88d20-165">The line color of the cursor.</span></span> <span data-ttu-id="88d20-166">既定値は <see cref="P:System.Drawing.Color.Red" /> です。</span><span class="sxs-lookup"><span data-stu-id="88d20-166">The default value is <see cref="P:System.Drawing.Color.Red" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LineDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle LineDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.LineDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-167">カーソルの線のスタイルを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-167">Gets or sets the style of the cursor line.</span></span></summary>
        <value><span data-ttu-id="88d20-168">カーソルの線のスタイル。</span><span class="sxs-lookup"><span data-stu-id="88d20-168">The style of the cursor line.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineWidth">
      <MemberSignature Language="C#" Value="public int LineWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property LineWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LineWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-169">カーソルの線の幅をピクセル単位で取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-169">Gets or sets the line width, in pixels, of a cursor.</span></span></summary>
        <value><span data-ttu-id="88d20-170">ラインの幅 (ピクセル単位)。</span><span class="sxs-lookup"><span data-stu-id="88d20-170">The line width, in pixels.</span></span> <span data-ttu-id="88d20-171">既定値は 1 です。</span><span class="sxs-lookup"><span data-stu-id="88d20-171">The default value is one (1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d20-172">このプロパティを使用して、カーソルの線の幅 (ピクセル単位) を指定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-172">Use this property to specify the line width, in pixels, of a cursor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public double Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Position { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Position : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-173">カーソルの位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-173">Gets or sets the position of a cursor.</span></span></summary>
        <value><span data-ttu-id="88d20-174">カーソルの位置。</span><span class="sxs-lookup"><span data-stu-id="88d20-174">The position of a cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d20-175">このプロパティを使用して、カーソルの位置を取得するだけでなく、プログラムによってカーソルの位置を設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="88d20-175">This property can be used to get the position of a cursor, as well as to programmatically set the cursor position.</span></span>  
  
 <span data-ttu-id="88d20-176">位置は、カーソルが属する軸の値として測定されます。これは、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> プロパティによって決定されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-176">The position is measured as a value of the axis that the cursor belongs to, which is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A> property.</span></span> <span data-ttu-id="88d20-177">たとえば、カーソルがプライマリ X 軸に属している場合、このプロパティを2000年1月1日の値に設定すると、X 軸カーソルが軸に沿って2000の1月1日の位置に描画されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-177">For example, if the cursor belongs to the primary X axis, then setting this property to a value of January 1, 2000 will result in the X-axis cursor being drawn at the January 1, 2000 position along the axis.</span></span> <span data-ttu-id="88d20-178">この軸の値が存在しない場合、カーソルは表示されません。</span><span class="sxs-lookup"><span data-stu-id="88d20-178">If this axis value does not exist, the cursor will not be displayed.</span></span>  
  
 <span data-ttu-id="88d20-179">このプロパティを設定した場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> および <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> の各プロパティは無効になります。つまり、カーソルは指定した場所に表示されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-179">Note that if you set this property, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> properties will have no effect; that is, the cursor will be displayed at this specified location.</span></span>  
  
 <span data-ttu-id="88d20-180">このプロパティを設定しても、<xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> または <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> のイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="88d20-180">Setting this property will not raise the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged> or <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging> events.</span></span>  
  
 <span data-ttu-id="88d20-181">または、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A> および <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> の各メソッドを使用してカーソルを設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="88d20-181">Alternatively, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A> methods can be used to set the cursor.</span></span>  
  
 <span data-ttu-id="88d20-182">プログラムによってカーソルを削除するには、このプロパティを使用してカーソルの位置を <xref:System.Double.NaN> に設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-182">To programmatically remove a cursor, use this property to set the position of the cursor to <xref:System.Double.NaN>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color SelectionColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color SelectionColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color SelectionColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "LightGray")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-183">データ範囲を強調表示する半透明の色を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-183">Gets or sets a semi-transparent color that highlights a range of data.</span></span></summary>
        <value><span data-ttu-id="88d20-184">強調表示された範囲の色。</span><span class="sxs-lookup"><span data-stu-id="88d20-184">The color of the highlighted range.</span></span> <span data-ttu-id="88d20-185">既定値は、アルファ値が 120 の <see cref="P:System.Drawing.Color.LightGray" /> です。</span><span class="sxs-lookup"><span data-stu-id="88d20-185">The default value is <see cref="P:System.Drawing.Color.LightGray" />, with an alpha value of 120.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d20-186">このプロパティは範囲選択の色を決定し、任意の有効な ARGB (アルファ、赤、緑、青) 値に設定できます。</span><span class="sxs-lookup"><span data-stu-id="88d20-186">This property determines the color of the range selection, and can be set to any valid ARGB (alpha, red, green, blue) value.</span></span> <span data-ttu-id="88d20-187">透明度のレベルを決定するアルファ値が指定されていない場合、既定のアルファ値120が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-187">If an alpha value, which determines the level of transparency, is not provided, a default alpha value of 120 is used.</span></span>  
  
 <span data-ttu-id="88d20-188">選択した色は、X 軸と Y 軸の両方のカーソルに対して設定できます。これは、それぞれ <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> オブジェクトの <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> および <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> プロパティを使用して実装されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-188">The selected color can be set for both the X and Y axis cursors, which is implemented using the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A> properties of the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object, respectively.</span></span> <span data-ttu-id="88d20-189">範囲が X 軸に沿ってのみ選択されている場合は、X 軸カーソルの <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> 値が使用されます。範囲が Y 軸に沿ってのみ選択されている場合は、Y 軸カーソルの <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> 値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-189">If a range is only selected along the X-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the X-axis cursor is used; if a range is only selected along the Y-axis, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is used.</span></span> <span data-ttu-id="88d20-190">両方の軸に沿って範囲が選択されている場合は、Y 軸カーソルの <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> 値が、選択した色にも使用されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-190">If a range is selected along both axes, the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor%2A> value for the Y-axis cursor is also used for the selected color.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionEnd">
      <MemberSignature Language="C#" Value="public double SelectionEnd { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionEnd As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionEnd { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionEnd : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-191">範囲選択の終了位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-191">Gets or sets the end position of a range selection.</span></span></summary>
        <value><span data-ttu-id="88d20-192">範囲選択の終了位置。</span><span class="sxs-lookup"><span data-stu-id="88d20-192">The end position of a range selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d20-193">ユーザーは、マウスの左ボタンをクリックし、マウスをドラッグして、グラフ領域内の範囲を選択できます。</span><span class="sxs-lookup"><span data-stu-id="88d20-193">A user can select a range within a chart area by clicking on the left mouse button and then dragging the mouse.</span></span> <span data-ttu-id="88d20-194"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> プロパティも `true`に設定する必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="88d20-194">Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`.</span></span> <span data-ttu-id="88d20-195">また、範囲選択は、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> および <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> のプロパティ、または <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> または <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> のいずれかの方法を使用してプログラムで設定できます。</span><span class="sxs-lookup"><span data-stu-id="88d20-195">In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.</span></span>  
  
 <span data-ttu-id="88d20-196">範囲選択の終了位置は、カーソルが属する軸の値として計算されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-196">The end position of a range selection is calculated as a value of the axis to which the cursor belongs.</span></span> <span data-ttu-id="88d20-197">たとえば、カーソルがプライマリ X 軸に属していて、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> プロパティを2000年12月31日の値に設定した場合、選択した領域の終点は、プライマリ X 軸に沿って2000年12月31日に実行されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-197">For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> property to a value of December 31, 2000, the end of the selected area will occur at December 31, 2000 along the primary X axis.</span></span>  
  
 <span data-ttu-id="88d20-198">範囲選択をプログラムで削除するには、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> のプロパティを使用して範囲の開始点と終了点を <xref:System.Double.NaN> に設定するか、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="88d20-198">To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public double SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionStart { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : double with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(NaN)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.DoubleDateNanValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="88d20-199">カーソルの選択範囲の開始位置を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-199">Gets or sets the start position of a cursor's selected range.</span></span></summary>
        <value><span data-ttu-id="88d20-200">カーソルの選択範囲の開始位置。</span><span class="sxs-lookup"><span data-stu-id="88d20-200">The start position of a cursor's selected range.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="88d20-201">ユーザーは、マウスの左ボタンをクリックし、マウスをドラッグしてカーソルの位置を移動して、範囲を選択できます。</span><span class="sxs-lookup"><span data-stu-id="88d20-201">A user can select a range by clicking on the left mouse button and then moving the cursor position by dragging the mouse.</span></span> <span data-ttu-id="88d20-202"><xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> プロパティも `true`に設定する必要があることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="88d20-202">Note that the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A> property must also be set to `true`.</span></span> <span data-ttu-id="88d20-203">また、範囲選択は、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> および <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> のプロパティ、または <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> または <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> のいずれかの方法を使用してプログラムで設定できます。</span><span class="sxs-lookup"><span data-stu-id="88d20-203">In addition, a range selection can be set programmatically using either the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> or <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A> methods.</span></span>  
  
 <span data-ttu-id="88d20-204">範囲選択の開始位置は、カーソルが属する軸の値として計算されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-204">The start position of a range selection is calculated as a value of the axis to which the cursor belongs.</span></span> <span data-ttu-id="88d20-205">たとえば、カーソルがプライマリ X 軸に属していて、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> プロパティを2000年1月1日の値に設定した場合、選択された領域の開始は、プライマリ X 軸に沿って2000年1月1日に実行されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-205">For example, if the cursor belongs to the primary X-axis, and you set the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> property to a value of January 1, 2000, the beginning of the selected area will occur at January 1, 2000 along the primary X axis.</span></span>  
  
 <span data-ttu-id="88d20-206">範囲選択をプログラムで削除するには、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> と <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> のプロパティを使用して範囲の開始点と終了点を <xref:System.Double.NaN> に設定するか、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="88d20-206">To programmatically remove a range selection, set the beginning and end points of the range to <xref:System.Double.NaN> using the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A> properties, or use the <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPixelPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPixelPosition (System.Drawing.PointF point, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPixelPosition(valuetype System.Drawing.PointF point, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPixelPosition (point As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPixelPosition(System::Drawing::PointF point, bool roundToBoundary);" />
      <MemberSignature Language="F#" Value="member this.SetCursorPixelPosition : System.Drawing.PointF * bool -&gt; unit" Usage="cursor.SetCursorPixelPosition (point, roundToBoundary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="88d20-207">カーソルが描画される位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="88d20-207">A <see cref="T:System.Drawing.PointF" /> structure that specifies where the cursor will be drawn.</span></span></param>
        <param name="roundToBoundary"><span data-ttu-id="88d20-208"><see langword="true" /> の場合、指定された位置が <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> オブジェクト内にないときは、カーソルは最も近いグラフ エリアの境界に沿って描画されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-208">If <see langword="true" />, the cursor will be drawn along the nearest chart area boundary, if the specified position does not fall within a <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> object.</span></span></param>
        <summary><span data-ttu-id="88d20-209">指定された位置にカーソルを表示します。</span><span class="sxs-lookup"><span data-stu-id="88d20-209">Displays a cursor at the specified position.</span></span> <span data-ttu-id="88d20-210">単位はピクセルです。</span><span class="sxs-lookup"><span data-stu-id="88d20-210">Measured in pixels.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public void SetCursorPosition (double newPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCursorPosition(float64 newPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCursorPosition (newPosition As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCursorPosition(double newPosition);" />
      <MemberSignature Language="F#" Value="member this.SetCursorPosition : double -&gt; unit" Usage="cursor.SetCursorPosition newPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPosition" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newPosition"><span data-ttu-id="88d20-211">カーソルの新しい位置。</span><span class="sxs-lookup"><span data-stu-id="88d20-211">The new position of the cursor.</span></span> <span data-ttu-id="88d20-212">計測には、関連する軸に沿った値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-212">Measured as a value along the relevant axis.</span></span></param>
        <summary><span data-ttu-id="88d20-213">グラフ エリア内で、指定された軸の値を使用してカーソルの位置を設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-213">Sets the position of a cursor within a chart area at the specified axis value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPixelPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPixelPosition (System.Drawing.PointF startPoint, System.Drawing.PointF endPoint, bool roundToBoundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPixelPosition(valuetype System.Drawing.PointF startPoint, valuetype System.Drawing.PointF endPoint, bool roundToBoundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPixelPosition (startPoint As PointF, endPoint As PointF, roundToBoundary As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPixelPosition(System::Drawing::PointF startPoint, System::Drawing::PointF endPoint, bool roundToBoundary);" />
      <MemberSignature Language="F#" Value="member this.SetSelectionPixelPosition : System.Drawing.PointF * System.Drawing.PointF * bool -&gt; unit" Usage="cursor.SetSelectionPixelPosition (startPoint, endPoint, roundToBoundary)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Drawing.PointF" />
        <Parameter Name="endPoint" Type="System.Drawing.PointF" />
        <Parameter Name="roundToBoundary" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint"><span data-ttu-id="88d20-214">範囲選択の開始位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="88d20-214">A <see cref="T:System.Drawing.PointF" /> structure that specifies where the range selection begins.</span></span></param>
        <param name="endPoint"><span data-ttu-id="88d20-215">範囲選択の終了位置を指定する <see cref="T:System.Drawing.PointF" /> 構造体。</span><span class="sxs-lookup"><span data-stu-id="88d20-215">A <see cref="T:System.Drawing.PointF" /> structure that specifies where the range selection ends.</span></span></param>
        <param name="roundToBoundary"><span data-ttu-id="88d20-216"><see langword="true" /> の場合、指定された位置が <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> オブジェクト内にないときは、開始点および終了点として、最も近いグラフ エリアの境界が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-216">If <see langword="true" />, the start and end points will be rounded to the nearest chart area boundary if the specified positions do not fall within a <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> object.</span></span></param>
        <summary><span data-ttu-id="88d20-217">範囲選択の開始位置と終了位置を設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-217">Sets the start and end positions of a range selection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSelectionPosition">
      <MemberSignature Language="C#" Value="public void SetSelectionPosition (double newStart, double newEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSelectionPosition(float64 newStart, float64 newEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSelectionPosition (newStart As Double, newEnd As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSelectionPosition(double newStart, double newEnd);" />
      <MemberSignature Language="F#" Value="member this.SetSelectionPosition : double * double -&gt; unit" Usage="cursor.SetSelectionPosition (newStart, newEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newStart" Type="System.Double" />
        <Parameter Name="newEnd" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="newStart"><span data-ttu-id="88d20-218">範囲選択の新しい開始位置。</span><span class="sxs-lookup"><span data-stu-id="88d20-218">The new start position of the range selection.</span></span> <span data-ttu-id="88d20-219">計測には、関連する軸に沿った値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-219">Measured as a value along the relevant axis.</span></span></param>
        <param name="newEnd"><span data-ttu-id="88d20-220">範囲選択の新しい終了位置。</span><span class="sxs-lookup"><span data-stu-id="88d20-220">The new end position of the range selection.</span></span> <span data-ttu-id="88d20-221">計測には、関連する軸に沿った値が使用されます。</span><span class="sxs-lookup"><span data-stu-id="88d20-221">Measured as a value along the relevant axis.</span></span></param>
        <summary><span data-ttu-id="88d20-222">グラフ エリア内で、指定された軸の値を使用して選択範囲の位置を設定します。</span><span class="sxs-lookup"><span data-stu-id="88d20-222">Sets the position of a selected range within a chart area at the specified axis values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
