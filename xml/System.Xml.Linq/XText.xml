<Type Name="XText" FullName="System.Xml.Linq.XText">
  <Metadata><Meta Name="ms.openlocfilehash" Value="46c60618752e2b6d350ce1c5452ac7aea121e956" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83521403" /></Metadata><TypeSignature Language="C#" Value="public class XText : System.Xml.Linq.XNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XText extends System.Xml.Linq.XNode" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Linq.XText" />
  <TypeSignature Language="VB.NET" Value="Public Class XText&#xA;Inherits XNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class XText : System::Xml::Linq::XNode" />
  <TypeSignature Language="F#" Value="type XText = class&#xA;    inherit XNode" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XDocument</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Linq</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Xml.Linq" FromVersion="4.0.0.0" To="System.Xml.XDocument" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Xml.XDocument" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Xml.Linq.XNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="71bd7-101">テキスト ノードを表します。</span><span class="sxs-lookup"><span data-stu-id="71bd7-101">Represents a text node.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71bd7-102">XML 要素には、テキストコンテンツを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="71bd7-102">XML elements can contain text content.</span></span> <span data-ttu-id="71bd7-103">コンテンツは単純な場合があります (要素にはテキストコンテンツのみが含まれます)。また、コンテンツが混在している場合もあります (要素の内容には、テキストと他の要素の両方が含まれます)。</span><span class="sxs-lookup"><span data-stu-id="71bd7-103">Sometimes the content is simple (the element only contains text content), and sometimes the content is mixed (the contents of the element contains both text and other elements).</span></span> <span data-ttu-id="71bd7-104">どちらの場合も、テキストの各チャンクは <xref:System.Xml.Linq.XText> ノードとして表されます。</span><span class="sxs-lookup"><span data-stu-id="71bd7-104">In either case, each chunk of text is represented as an <xref:System.Xml.Linq.XText> node.</span></span>  
  
 [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] <span data-ttu-id="71bd7-105">開発者は、作成しなかった任意の [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] ツリーを操作するコードを記述することが必要になることがよくあります。</span><span class="sxs-lookup"><span data-stu-id="71bd7-105">developers will often have to write code to work with arbitrary [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] trees that they did not create.</span></span> <span data-ttu-id="71bd7-106">作成を制御しない [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] ツリーを操作するコードを記述する場合は、<xref:System.Xml.Linq.XText> ノードの特定の動作に注意する必要があります。</span><span class="sxs-lookup"><span data-stu-id="71bd7-106">If you are writing code that has to work with [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] trees that you have no control over creating, you should be aware of certain behaviors of <xref:System.Xml.Linq.XText> nodes.</span></span>  
  
 <span data-ttu-id="71bd7-107">ノードレベルで XML ツリーの内容を処理するときは、複数の <xref:System.Xml.Linq.XText> ノードが互いに隣接するように準備する必要があります。</span><span class="sxs-lookup"><span data-stu-id="71bd7-107">When processing the contents of an XML tree at the node level, you should be prepared for multiple <xref:System.Xml.Linq.XText> nodes to be adjacent to each other.</span></span> <span data-ttu-id="71bd7-108">さらに、テキストが含まれていないノード <xref:System.Xml.Linq.XText> を準備する必要があります。</span><span class="sxs-lookup"><span data-stu-id="71bd7-108">Further, you should be prepared for <xref:System.Xml.Linq.XText> nodes that contain no text.</span></span> <span data-ttu-id="71bd7-109">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] メソッドを使用して、テキストノードのコンテンツを削除することができます。</span><span class="sxs-lookup"><span data-stu-id="71bd7-109">It is possible through [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] methods to remove the content of a text node.</span></span> <span data-ttu-id="71bd7-110">ただし、[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] によってノードが自動的に削除されることはありません。</span><span class="sxs-lookup"><span data-stu-id="71bd7-110">However, [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] does not automatically delete the node.</span></span> <span data-ttu-id="71bd7-111">ノードには id があり、注釈がある可能性があるため、[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] はツリー内の長さ0のノードに対応します。</span><span class="sxs-lookup"><span data-stu-id="71bd7-111">The node has identity, and might have annotations, so [!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)] allows for zero-length nodes in the tree.</span></span>  
  
 <span data-ttu-id="71bd7-112">詳細については、「[ノードを使用したプログラミング](https://msdn.microsoft.com/library/18680d1c-6e7c-4645-8d53-27b5a96f2d3f)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="71bd7-112">For more information, see [Programming with Nodes](https://msdn.microsoft.com/library/18680d1c-6e7c-4645-8d53-27b5a96f2d3f).</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="71bd7-113">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="71bd7-113">LINQ to XML</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="71bd7-114"><see cref="T:System.Xml.Linq.XText" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="71bd7-114">Initializes a new instance of the <see cref="T:System.Xml.Linq.XText" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="71bd7-115">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="71bd7-115">LINQ to XML</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XText (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XText.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XText(System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XText : string -&gt; System.Xml.Linq.XText" Usage="new System.Xml.Linq.XText value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="71bd7-116"><see cref="T:System.String" /> ノードの値を格納する <see cref="T:System.Xml.Linq.XText" />。</span><span class="sxs-lookup"><span data-stu-id="71bd7-116">The <see cref="T:System.String" /> that contains the value of the <see cref="T:System.Xml.Linq.XText" /> node.</span></span></param>
        <summary><span data-ttu-id="71bd7-117"><see cref="T:System.Xml.Linq.XText" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="71bd7-117">Initializes a new instance of the <see cref="T:System.Xml.Linq.XText" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71bd7-118">通常は、<xref:System.Xml.Linq.XText> コンストラクターを使用してテキストノードを作成しません。</span><span class="sxs-lookup"><span data-stu-id="71bd7-118">You typically do not create text nodes by using the <xref:System.Xml.Linq.XText> constructors.</span></span> <span data-ttu-id="71bd7-119"><xref:System.Xml.Linq.XElement>を構築するときにテキストの内容を渡すと、テキストノードが自動的に作成されます。</span><span class="sxs-lookup"><span data-stu-id="71bd7-119">When you pass text content when constructing an <xref:System.Xml.Linq.XElement>, text nodes are automatically created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71bd7-120">次の例では、テキストノードを含む要素を作成します。</span><span class="sxs-lookup"><span data-stu-id="71bd7-120">The following example creates an element that contains a text node.</span></span>  
  
```csharp  
XElement root = new XElement("Root", "Some text");  
Console.WriteLine(root);  
```  
  
```vb  
Dim root As XElement = <Root>Some text</Root>  
Console.WriteLine(root)  
```  
  
 <span data-ttu-id="71bd7-121">この例の結果は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="71bd7-121">This example produces the following output:</span></span>  
  
```xml  
<Root>Some text</Root>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="71bd7-122">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="71bd7-122">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XText (System.Xml.Linq.XText other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Linq.XText other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XText.#ctor(System.Xml.Linq.XText)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As XText)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XText(System::Xml::Linq::XText ^ other);" />
      <MemberSignature Language="F#" Value="new System.Xml.Linq.XText : System.Xml.Linq.XText -&gt; System.Xml.Linq.XText" Usage="new System.Xml.Linq.XText other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Xml.Linq.XText" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="71bd7-123">コピー元の <see cref="T:System.Xml.Linq.XText" /> ノード。</span><span class="sxs-lookup"><span data-stu-id="71bd7-123">The <see cref="T:System.Xml.Linq.XText" /> node to copy from.</span></span></param>
        <summary><span data-ttu-id="71bd7-124">他の <see cref="T:System.Xml.Linq.XText" /> オブジェクトから <see cref="T:System.Xml.Linq.XText" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="71bd7-124">Initializes a new instance of the <see cref="T:System.Xml.Linq.XText" /> class from another <see cref="T:System.Xml.Linq.XText" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71bd7-125">このコンストラクターは、主に XML ツリーの詳細コピーを作成するために、内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="71bd7-125">This constructor is primarily used internally to make a deep copy of an XML tree.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="71bd7-126">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="71bd7-126">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NodeType">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlNodeType NodeType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlNodeType NodeType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XText.NodeType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property NodeType As XmlNodeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNodeType NodeType { System::Xml::XmlNodeType get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeType : System.Xml.XmlNodeType" Usage="System.Xml.Linq.XText.NodeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNodeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71bd7-127">このノードのノード型を取得します。</span><span class="sxs-lookup"><span data-stu-id="71bd7-127">Gets the node type for this node.</span></span></summary>
        <value><span data-ttu-id="71bd7-128">ノードの種類。</span><span class="sxs-lookup"><span data-stu-id="71bd7-128">The node type.</span></span> <span data-ttu-id="71bd7-129"><see cref="T:System.Xml.Linq.XText" /> オブジェクトでは、この値は <see cref="F:System.Xml.XmlNodeType.Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="71bd7-129">For <see cref="T:System.Xml.Linq.XText" /> objects, this value is <see cref="F:System.Xml.XmlNodeType.Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71bd7-130"><xref:System.Xml.Linq.XObject> から派生するすべてのクラスに <xref:System.Xml.Linq.XObject.NodeType%2A> プロパティが含まれているため、<xref:System.Xml.Linq.XObject>の具象サブクラスのコレクションで動作するコードを記述できます。</span><span class="sxs-lookup"><span data-stu-id="71bd7-130">Because all classes that derive from <xref:System.Xml.Linq.XObject> contain a <xref:System.Xml.Linq.XObject.NodeType%2A> property, you can write code that operates on collections of concrete subclass of <xref:System.Xml.Linq.XObject>.</span></span> <span data-ttu-id="71bd7-131">これにより、コードはコレクション内の各ノードのノード型をテストできます。</span><span class="sxs-lookup"><span data-stu-id="71bd7-131">Your code can then test for the node type of each node in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71bd7-132">次の例では、複数の種類のノードを含む XML ツリーを作成します。</span><span class="sxs-lookup"><span data-stu-id="71bd7-132">The following example creates an XML tree that contains a number of types of nodes.</span></span> <span data-ttu-id="71bd7-133">次に、ツリーを反復処理し、各ノードのノードの種類を出力します。</span><span class="sxs-lookup"><span data-stu-id="71bd7-133">It then iterates through the tree, outputting the node type of each node.</span></span>  
  
 <span data-ttu-id="71bd7-134">`Child2` には、文字列コンテンツから暗黙的に変換された <xref:System.Xml.Linq.XText> ノードが含まれていることに注意してください。</span><span class="sxs-lookup"><span data-stu-id="71bd7-134">Note that `Child2` contains an <xref:System.Xml.Linq.XText> node, implicitly converted from the string content.</span></span>  
  
```csharp  
// Note that XNode uses XmlNodeType, which is in the System.Xml namespace.  
XDocument xmlTree = new XDocument(  
    new XComment("a comment"),  
    new XProcessingInstruction("xml-stylesheet", "type=\"text/xsl\" href=\"hello.xsl\""),  
    new XElement("Root",  
        new XAttribute("Att", "attContent"),  
        new XElement("Child1",  
            new XCData("CDATA content")  
        ),  
        new XElement("Child2", "Text content")  
    )  
);  
  
foreach (XNode node in xmlTree.DescendantNodes())  
{  
    Console.WriteLine(node.NodeType);  
    if (node.NodeType == XmlNodeType.Element)  
    {  
        foreach (XAttribute att in ((XElement)node).Attributes())  
            Console.WriteLine(att.NodeType);  
    }  
}  
```  
  
```vb  
' Note that XNode uses XmlNodeType, which is in the System.Xml namespace.  
Dim xmlTree As XDocument = _  
    <?xml version='1.0'?>  
    <!-- a comment -->  
    <?xml-stylesheet type='text/xsl' href='hello.xsl'?>  
    <Root Att="attContent">  
        <Child1>  
            <![CDATA[CDATA content]]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="71bd7-135">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="71bd7-135">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Linq.XText.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Xml.Linq.XText.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="71bd7-136">このノードの値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="71bd7-136">Gets or sets the value of this node.</span></span></summary>
        <value><span data-ttu-id="71bd7-137">このノードの値を格納している <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="71bd7-137">A <see cref="T:System.String" /> that contains the value of this node.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71bd7-138">このプロパティを設定すると、<xref:System.Xml.Linq.XObject.Changed> と <xref:System.Xml.Linq.XObject.Changing> イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="71bd7-138">Setting this property will raise the <xref:System.Xml.Linq.XObject.Changed> and the <xref:System.Xml.Linq.XObject.Changing> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71bd7-139">このプロパティを取得して設定する例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="71bd7-139">The following example shows getting and setting this property.</span></span>  
  
```csharp  
XElement root = new XElement("Root", "Some text");  
XText txtNode = root.Nodes().OfType<XText>().First();  
Console.WriteLine(txtNode.Value);  
txtNode.Value = "New text";  
Console.WriteLine(txtNode.Value);  
  
root.Value = "Newer text";  
txtNode = root.Nodes().OfType<XText>().First();  
Console.WriteLine(txtNode.Value);  
```  
  
```vb  
Dim root As XElement = <Root>Some text</Root>  
Dim txtNode As XText = root.Nodes().OfType(Of XText).First()  
Console.WriteLine(txtNode.Value)  
txtNode.Value = "New text"  
Console.WriteLine(txtNode.Value)  
  
root.Value = "Newer text"  
txtNode = root.Nodes().OfType(Of XText).First()  
Console.WriteLine(txtNode.Value)  
```  
  
 <span data-ttu-id="71bd7-140">この例の結果は、次のようになります。</span><span class="sxs-lookup"><span data-stu-id="71bd7-140">This example produces the following output:</span></span>  
  
```  
Some text  
New text  
Newer text  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="71bd7-141">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="71bd7-141">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public override void WriteTo (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteTo(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XText.WriteTo(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteTo (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteTo(System::Xml::XmlWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.WriteTo : System.Xml.XmlWriter -&gt; unit" Usage="xText.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="71bd7-142">このメソッドの書き込み対象の <see cref="T:System.Xml.XmlWriter" />。</span><span class="sxs-lookup"><span data-stu-id="71bd7-142">An <see cref="T:System.Xml.XmlWriter" /> into which this method will write.</span></span></param>
        <summary><span data-ttu-id="71bd7-143">このノードを <see cref="T:System.Xml.XmlWriter" /> に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="71bd7-143">Writes this node to an <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71bd7-144">このメソッドは、主に XML ツリーを <xref:System.Xml.XmlWriter>に書き込むメソッドによって内部的に使用されます。</span><span class="sxs-lookup"><span data-stu-id="71bd7-144">This method is primarily used internally by the methods that write an XML tree to an <xref:System.Xml.XmlWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f0fe21e9-ee43-4a55-b91a-0800e5782c13"><span data-ttu-id="71bd7-145">LINQ to XML</span><span class="sxs-lookup"><span data-stu-id="71bd7-145">LINQ to XML</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WriteToAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteToAsync (System.Xml.XmlWriter writer, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteToAsync(class System.Xml.XmlWriter writer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Linq.XText.WriteToAsync(System.Xml.XmlWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteToAsync (writer As XmlWriter, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteToAsync(System::Xml::XmlWriter ^ writer, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.WriteToAsync : System.Xml.XmlWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="xText.WriteToAsync (writer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XDocument</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Linq</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="71bd7-146">この <see cref="T:System.Xml.Linq.XText" /> を書き込むライター。</span><span class="sxs-lookup"><span data-stu-id="71bd7-146">The writer to write this <see cref="T:System.Xml.Linq.XText" /> to.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="71bd7-147">非同期操作のキャンセルを要求するために使用できるトークン。</span><span class="sxs-lookup"><span data-stu-id="71bd7-147">A token that can be used to request cancellation of the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="71bd7-148">この <see cref="T:System.Xml.Linq.XText" /> を指定した <see cref="T:System.Xml.XmlWriter" /> に非同期的に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="71bd7-148">Asynchronously writes this <see cref="T:System.Xml.Linq.XText" /> to the specified <see cref="T:System.Xml.XmlWriter" />.</span></span></summary>
        <returns><span data-ttu-id="71bd7-149">非同期書き込み操作を表すタスク。</span><span class="sxs-lookup"><span data-stu-id="71bd7-149">A task representing the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
