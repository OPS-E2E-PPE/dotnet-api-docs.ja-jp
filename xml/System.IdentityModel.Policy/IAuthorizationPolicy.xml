<Type Name="IAuthorizationPolicy" FullName="System.IdentityModel.Policy.IAuthorizationPolicy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e8923ecfd8c3ac91c9a8cb12934edccc13a52d15" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73387975" /></Metadata><TypeSignature Language="C#" Value="public interface IAuthorizationPolicy : System.IdentityModel.Policy.IAuthorizationComponent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAuthorizationPolicy implements class System.IdentityModel.Policy.IAuthorizationComponent" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Policy.IAuthorizationPolicy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAuthorizationPolicy&#xA;Implements IAuthorizationComponent" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAuthorizationPolicy : System::IdentityModel::Policy::IAuthorizationComponent" />
  <TypeSignature Language="F#" Value="type IAuthorizationPolicy = interface&#xA;    interface IAuthorizationComponent" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IdentityModel.Policy.IAuthorizationComponent</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="82676-101">特定のクレームセットについて、ユーザーを承認するためのルールのセットを定義します。</span><span class="sxs-lookup"><span data-stu-id="82676-101">Defines a set of rules for authorizing a user, given a set of claims.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="82676-102">あるクレーム セットを別のクレーム セットにマッピングまたは追加するための、<xref:System.IdentityModel.Policy.IAuthorizationPolicy> インターフェイスを実装します。</span><span class="sxs-lookup"><span data-stu-id="82676-102">Implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface to add or map one set of claims to another.</span></span> <span data-ttu-id="82676-103">承認ポリシーは、クレーム セットを調べ、現在のセットに基づいて別のクレームを追加します。</span><span class="sxs-lookup"><span data-stu-id="82676-103">An authorization policy examines a set of claims and adds additional claims based on the current set.</span></span> <span data-ttu-id="82676-104">たとえば、承認ポリシーは、生年月日を含む要求を評価し、ユーザーが 21 歳を超えていることをアサートするクレームを追加し、<xref:System.IdentityModel.Policy.EvaluationContext> に Over21 クレームを追加する、といったことを行います。</span><span class="sxs-lookup"><span data-stu-id="82676-104">For example, an authorization policy might evaluate a claim that contains the date of birth and add a claim that asserts that the user is over 21 years old and add an Over21 claim to the <xref:System.IdentityModel.Policy.EvaluationContext>.</span></span>  
  
 <span data-ttu-id="82676-105"><xref:System.IdentityModel.Policy.IAuthorizationPolicy> インターフェイスを実装するクラスはユーザーの承認を行いませんが、<xref:System.ServiceModel.ServiceAuthorizationManager> クラスで承認を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="82676-105">Classes that implement the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface do not authorize users, but they enable the <xref:System.ServiceModel.ServiceAuthorizationManager> class to do so.</span></span> <span data-ttu-id="82676-106"><xref:System.ServiceModel.ServiceAuthorizationManager> は、有効な各承認ポリシーの <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="82676-106">The <xref:System.ServiceModel.ServiceAuthorizationManager> calls the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method for each authorization policy in effect.</span></span> <span data-ttu-id="82676-107"><xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> メソッドは、現在のコンテキストに基づいて、ユーザーに別のクレームを追加する必要があるかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="82676-107">The <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method determines whether additional claims should be added for the user, based on the current context.</span></span> <span data-ttu-id="82676-108">承認ポリシーの <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> メソッドは、他の承認ポリシーによってクレームが <xref:System.IdentityModel.Policy.EvaluationContext> に追加されるたびに、複数回呼び出される場合があります。</span><span class="sxs-lookup"><span data-stu-id="82676-108">An authorization policy's <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method may be called multiple times, as claims are added to the <xref:System.IdentityModel.Policy.EvaluationContext> by other authorization policies.</span></span> <span data-ttu-id="82676-109">有効なすべての承認ポリシーの実行後、<xref:System.ServiceModel.ServiceAuthorizationManager> クラスは最後のクレーム セットに基づいて承認決定を行います。</span><span class="sxs-lookup"><span data-stu-id="82676-109">When all authorization policies in effect are done, the <xref:System.ServiceModel.ServiceAuthorizationManager> class makes authorization decisions based upon the final set of claims.</span></span> <span data-ttu-id="82676-110">次に、<xref:System.ServiceModel.ServiceAuthorizationManager> クラスは、こうした承認決定を反映した不変のクレーム セットを含む <xref:System.IdentityModel.Policy.AuthorizationContext> を作成します。</span><span class="sxs-lookup"><span data-stu-id="82676-110">The <xref:System.ServiceModel.ServiceAuthorizationManager> class then creates an <xref:System.IdentityModel.Policy.AuthorizationContext> that contains an immutable set of claims that reflects these authorization decisions.</span></span>  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#1)]
 [!code-vb[C_IAuthorizationPolicy#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/1db325ec-85be-47d0-8b6e-3ba2fdf3dda0"><span data-ttu-id="82676-111">承認ポリシーのサンプル</span><span class="sxs-lookup"><span data-stu-id="82676-111">Authorization Policy Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="public bool Evaluate (System.IdentityModel.Policy.EvaluationContext evaluationContext, ref object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Evaluate(class System.IdentityModel.Policy.EvaluationContext evaluationContext, object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Evaluate(System::IdentityModel::Policy::EvaluationContext ^ evaluationContext, System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.IdentityModel.Policy.EvaluationContext * obj -&gt; bool" Usage="iAuthorizationPolicy.Evaluate (evaluationContext, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluationContext" Type="System.IdentityModel.Policy.EvaluationContext" />
        <Parameter Name="state" Type="System.Object" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="evaluationContext"><span data-ttu-id="82676-112">承認ポリシーが評価するクレーム セットを格納した <see cref="T:System.IdentityModel.Policy.EvaluationContext" />。</span><span class="sxs-lookup"><span data-stu-id="82676-112">An <see cref="T:System.IdentityModel.Policy.EvaluationContext" /> that contains the claim set that the authorization policy evaluates.</span></span></param>
        <param name="state"><span data-ttu-id="82676-113">この承認ポリシーのカスタム状態を表す <see cref="T:System.Object" />。参照によって渡されます。</span><span class="sxs-lookup"><span data-stu-id="82676-113">A <see cref="T:System.Object" />, passed by reference that represents the custom state for this authorization policy.</span></span></param>
        <summary><span data-ttu-id="82676-114">ユーザーがこの承認ポリシーの要件を満たすかどうかを評価します。</span><span class="sxs-lookup"><span data-stu-id="82676-114">Evaluates whether a user meets the requirements for this authorization policy.</span></span></summary>
        <returns><span data-ttu-id="82676-115">他の承認ポリシーによって <paramref name="evaluationContext" /> にクレームが追加されている場合で、この承認ポリシーに対する <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> メソッドを呼び出す必要がある場合は <see langword="false" />。それ以外の場合で、この承認ポリシーが追加評価を行う必要がない場合は <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="82676-115"><see langword="false" /> if the <see cref="M:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate(System.IdentityModel.Policy.EvaluationContext,System.Object@)" /> method for this authorization policy must be called if additional claims are added by other authorization policies to <paramref name="evaluationContext" />; otherwise, <see langword="true" /> to state no additional evaluation is required by this authorization policy.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="82676-116"><xref:System.IdentityModel.Policy.IAuthorizationPolicy> インターフェイスを実装するときは、<xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> メソッドが異なるスレッドによって複数回呼び出されることを想定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="82676-116">Implementers of the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface should expect the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method to be called multiple times by different threads.</span></span>  
  
 <span data-ttu-id="82676-117"><xref:System.IdentityModel.Policy.IAuthorizationPolicy> インターフェイスの実装では、`state` パラメーターを使用して、<xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> メソッドの呼び出し間の状態を追跡できます。</span><span class="sxs-lookup"><span data-stu-id="82676-117">Implementers of the <xref:System.IdentityModel.Policy.IAuthorizationPolicy> interface can use the `state` parameter to track state between calls to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method.</span></span> <span data-ttu-id="82676-118"><xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> メソッドのある呼び出しの内部で状態オブジェクトが設定されると、現在の評価プロセスの中でそれ以降に <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> メソッドが呼び出されるたびに必ず、同じオブジェクト インスタンスが渡されます。</span><span class="sxs-lookup"><span data-stu-id="82676-118">If a state object is set inside a given call to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method, the same object instance is passed to each and every subsequent call to the <xref:System.IdentityModel.Policy.IAuthorizationPolicy.Evaluate%2A> method in the current evaluation process.</span></span>  
  
   
  
## Examples  
 [!code-csharp[C_IAuthorizationPolicy#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_iauthorizationpolicy/cs/service.cs#2)]
 [!code-vb[C_IAuthorizationPolicy#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_iauthorizationpolicy/vb/myauthorizationpolicy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Claims.ClaimSet Issuer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Claims.ClaimSet Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Issuer As ClaimSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Claims::ClaimSet ^ Issuer { System::IdentityModel::Claims::ClaimSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : System.IdentityModel.Claims.ClaimSet" Usage="System.IdentityModel.Policy.IAuthorizationPolicy.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Claims.ClaimSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="82676-119">承認ポリシーの発行者を表すクレーム セットを取得します。</span><span class="sxs-lookup"><span data-stu-id="82676-119">Gets a claim set that represents the issuer of the authorization policy.</span></span></summary>
        <value><span data-ttu-id="82676-120">承認ポリシーの発行者を表す <see cref="T:System.IdentityModel.Claims.ClaimSet" />。</span><span class="sxs-lookup"><span data-stu-id="82676-120">A <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that represents the issuer of the authorization policy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
