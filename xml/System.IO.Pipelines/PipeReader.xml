<Type Name="PipeReader" FullName="System.IO.Pipelines.PipeReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b691f3cd7f8e53b8b37c3dbb9bc38184d5460748" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82386249" /></Metadata><TypeSignature Language="C#" Value="public abstract class PipeReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PipeReader extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipelines.PipeReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PipeReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class PipeReader abstract" />
  <TypeSignature Language="F#" Value="type PipeReader = class" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipelines</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>パイプの読み取り側へのアクセスを提供するクラスを定義します。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PipeReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PipeReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.IO.Pipelines.PipeReader" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AdvanceTo">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>パイプラインの読み取りカーソルを、使用したデータの後ろに移動します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

消費されたデータのメモリは解放され、使用できなくなります。 この呼び出しの後に <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> から以前に返された <xref:System.IO.Pipelines.ReadResult.Buffer%2A> にはアクセスできません。 検査されたデータは、より多くのデータが使用可能であることを通知する必要があるときに、パイプラインと通信します。

          ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AdvanceTo">
      <MemberSignature Language="C#" Value="public abstract void AdvanceTo (SequencePosition consumed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceTo(valuetype System.SequencePosition consumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AdvanceTo (consumed As SequencePosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AdvanceTo(SequencePosition consumed);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceTo : SequencePosition -&gt; unit" Usage="pipeReader.AdvanceTo consumed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumed" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="consumed">正常に処理されたデータの範囲をマークします。</param>
        <summary>パイプラインの読み取りカーソルを、使用したデータの後ろに移動し、データを処理済みとマークします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

消費されたデータのメモリは解放され、使用できなくなります。

この呼び出しの後に <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> から以前に返された <xref:System.IO.Pipelines.ReadResult.Buffer> にはアクセスできません。

検査されたデータは、より多くのデータが使用可能であることを通知する必要があるときに、パイプラインと通信します。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdvanceTo">
      <MemberSignature Language="C#" Value="public abstract void AdvanceTo (SequencePosition consumed, SequencePosition examined);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdvanceTo(valuetype System.SequencePosition consumed, valuetype System.SequencePosition examined) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AdvanceTo (consumed As SequencePosition, examined As SequencePosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AdvanceTo(SequencePosition consumed, SequencePosition examined);" />
      <MemberSignature Language="F#" Value="abstract member AdvanceTo : SequencePosition * SequencePosition -&gt; unit" Usage="pipeReader.AdvanceTo (consumed, examined)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="consumed" Type="System.SequencePosition" />
        <Parameter Name="examined" Type="System.SequencePosition" />
      </Parameters>
      <Docs>
        <param name="consumed">正常に処理されたデータの範囲をマークします。</param>
        <param name="examined">読み取りおよび検査を実行したデータの範囲をマークします。</param>
        <summary>パイプラインの読み取りカーソルを、使用したデータの後ろに移動し、データを処理済み、読み取り済み、および検査済みとマークします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

消費されたデータのメモリは解放され、使用できなくなります。

この呼び出しの後に <xref:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)> から以前に返された <xref:System.IO.Pipelines.ReadResult.Buffer> にはアクセスできません。

検査されたデータは、より多くのデータが使用可能であることを通知する必要があるときに、パイプラインと通信します。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream AsStream (bool leaveOpen = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream AsStream(bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.AsStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AsStream (Optional leaveOpen As Boolean = false) As Stream" />
      <MemberSignature Language="F#" Value="abstract member AsStream : bool -&gt; System.IO.Stream&#xA;override this.AsStream : bool -&gt; System.IO.Stream" Usage="pipeReader.AsStream leaveOpen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leaveOpen" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="leaveOpen">返された <see cref="T:System.IO.Stream" /> を破棄するとき、<see cref="T:System.IO.Pipelines.PipeReader" /> を開いたままにするか (<see langword="true" />)、または <see cref="T:System.IO.Pipelines.PipeReader" /> を完了するか (<see langword="false" />) を示す省略可能なフラグ。</param>
        <summary><see cref="T:System.IO.Stream" /> によってラップされた基になる <see cref="T:System.IO.Pipelines.PipeReader" /> を返します。</summary>
        <returns>基になるストリーム。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelPendingRead">
      <MemberSignature Language="C#" Value="public abstract void CancelPendingRead ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelPendingRead() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CancelPendingRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelPendingRead ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelPendingRead();" />
      <MemberSignature Language="F#" Value="abstract member CancelPendingRead : unit -&gt; unit" Usage="pipeReader.CancelPendingRead " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" /> を完了することなく、現在保留中の <see cref="T:System.IO.Pipelines.PipeReader" /> を、または保留中のものがない場合はその次の呼び出しをキャンセルします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public abstract void Complete (Exception exception = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.Complete(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Complete (Optional exception As Exception = null)" />
      <MemberSignature Language="F#" Value="abstract member Complete : Exception -&gt; unit" Usage="pipeReader.Complete exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">パイプラインが完了する原因となっているエラーを示す、省略可能な <see cref="T:System.Exception" />。</param>
        <summary>コンシューマーが読み取りを完了したプロデューサーにシグナルを送信します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask CompleteAsync (Exception exception = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask CompleteAsync(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CompleteAsync(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CompleteAsync (Optional exception As Exception = null) As ValueTask" />
      <MemberSignature Language="F#" Value="abstract member CompleteAsync : Exception -&gt; System.Threading.Tasks.ValueTask&#xA;override this.CompleteAsync : Exception -&gt; System.Threading.Tasks.ValueTask" Usage="pipeReader.CompleteAsync exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="exception">読み取りの完了の原因となったエラーを示す省略可能な例外。</param>
        <summary>現在のパイプの読み取り側のインスタンスを完了済みとしてマークします。これは、これ以上データが読み取られなくなることを意味します。</summary>
        <returns>非同期の完了操作を表す値タスク。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Pipelines.PipeWriter destination, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Pipelines.PipeWriter destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CopyToAsync(System.IO.Pipelines.PipeWriter,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CopyToAsync (destination As PipeWriter, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member CopyToAsync : System.IO.Pipelines.PipeWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CopyToAsync : System.IO.Pipelines.PipeWriter * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="pipeReader.CopyToAsync (destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Pipelines.PipeWriter" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="destination">現在のストリームの内容のコピー先のパイプ ライター。</param>
        <param name="cancellationToken">キャンセル要求を監視するトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
        <summary>指定されたバッファー サイズとキャンセル トークンを使用して、非同期に <see cref="T:System.IO.Pipelines.PipeReader" /> からバイトを読み取り、指定された <see cref="T:System.IO.Pipelines.PipeWriter" /> に書き込みます。</summary>
        <returns>非同期のコピー操作を表すタスク。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream destination, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.CopyToAsync(System.IO.Stream,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CopyToAsync (destination As Stream, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="abstract member CopyToAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.CopyToAsync : System.IO.Stream * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="pipeReader.CopyToAsync (destination, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="destination">現在のストリームの内容のコピー先のストリーム。</param>
        <param name="cancellationToken">キャンセル要求を監視するトークン。 既定値は <see cref="P:System.Threading.CancellationToken.None" /> です。</param>
        <summary>指定されたキャンセル トークンを使用して、<see cref="T:System.IO.Pipelines.PipeReader" /> からバイトを非同期に読み取り、指定されたストリームに書き込みます。</summary>
        <returns>非同期のコピー操作を表すタスク。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Pipelines.PipeReader Create (System.IO.Stream stream, System.IO.Pipelines.StreamPipeReaderOptions readerOptions = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Pipelines.PipeReader Create(class System.IO.Stream stream, class System.IO.Pipelines.StreamPipeReaderOptions readerOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.Create(System.IO.Stream,System.IO.Pipelines.StreamPipeReaderOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (stream As Stream, Optional readerOptions As StreamPipeReaderOptions = null) As PipeReader" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.IO.Pipelines.StreamPipeReaderOptions -&gt; System.IO.Pipelines.PipeReader" Usage="System.IO.Pipelines.PipeReader.Create (stream, readerOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipelines.PipeReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" Index="0" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
        <Parameter Name="readerOptions" Type="System.IO.Pipelines.StreamPipeReaderOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      </Parameters>
      <Docs>
        <param name="stream">パイプの読み取り側がラップするストリーム。</param>
        <param name="readerOptions">パイプの読み取り側が構成するオプション。</param>
        <summary>指定した <see cref="T:System.IO.Pipelines.PipeReader" /> をラップする <see cref="T:System.IO.Stream" /> を作成します。</summary>
        <returns><see cref="T:System.IO.Pipelines.PipeReader" /> をラップする <see cref="T:System.IO.Stream" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWriterCompleted">
      <MemberSignature Language="C#" Value="public abstract void OnWriterCompleted (Action&lt;Exception,object&gt; callback, object state);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWriterCompleted(class System.Action`2&lt;class System.Exception, object&gt; callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.OnWriterCompleted(System.Action{System.Exception,System.Object},System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub OnWriterCompleted (callback As Action(Of Exception, Object), state As Object)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void OnWriterCompleted(Action&lt;Exception ^, System::Object ^&gt; ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="F#" Value="abstract member OnWriterCompleted : Action&lt;Exception, obj&gt; * obj -&gt; unit" Usage="pipeReader.OnWriterCompleted (callback, state)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public virtual void OnWriterCompleted (Action&lt;Exception,object&gt; callback, object state);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnWriterCompleted (callback As Action(Of Exception, Object), state As Object)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnWriterCompleted(Action&lt;Exception ^, System::Object ^&gt; ^ callback, System::Object ^ state);" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberSignature Language="F#" Value="abstract member OnWriterCompleted : Action&lt;Exception, obj&gt; * obj -&gt; unit&#xA;override this.OnWriterCompleted : Action&lt;Exception, obj&gt; * obj -&gt; unit" Usage="pipeReader.OnWriterCompleted (callback, state)" FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0">
          <AttributeName>System.Obsolete("OnWriterCompleted may not be invoked on all implementations of PipeReader. This will be removed in a future release.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Exception,System.Object&gt;" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">登録するコールバック。</param>
        <param name="state">呼び出されたとき、<paramref name="callback" /> に渡す状態オブジェクト。</param>
        <summary>パイプの <see cref="T:System.IO.Pipelines.PipeWriter" /> 側が完了すると実行されるコールバックを登録します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!IMPORTANT]
> <xref:System.IO.Pipelines.PipeWriter>のすべての実装で `OnWriterCompleted` を呼び出すことはできません。 このメソッドは、今後のリリースで削除される予定です。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.ReadResult&gt; ReadAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;valuetype System.IO.Pipelines.ReadResult&gt; ReadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.ReadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ReadAsync (Optional cancellationToken As CancellationToken = null) As ValueTask(Of ReadResult)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.ReadResult&gt;" Usage="pipeReader.ReadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.IO.Pipelines.ReadResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">キャンセル要求を監視するトークン。 既定値は <see langword="default" /> です。</param>
        <summary>現在の <see cref="T:System.IO.Pipelines.PipeReader" /> からバイトのシーケンスを非同期的に読み取ります。</summary>
        <returns>非同期の読み取り操作を表す <see cref="T:System.Threading.Tasks.ValueTask`1" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryRead">
      <MemberSignature Language="C#" Value="public abstract bool TryRead (out System.IO.Pipelines.ReadResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRead([out] valuetype System.IO.Pipelines.ReadResult&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipelines.PipeReader.TryRead(System.IO.Pipelines.ReadResult@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryRead (ByRef result As ReadResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryRead([Runtime::InteropServices::Out] System::IO::Pipelines::ReadResult % result);" />
      <MemberSignature Language="F#" Value="abstract member TryRead : ReadResult -&gt; bool" Usage="pipeReader.TryRead result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipelines</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IO.Pipelines.ReadResult" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">このメソッドから <see langword="true" /> が返される場合、この値は、読み取り呼び出しの結果を表す <see cref="T:System.IO.Pipelines.ReadResult" /> インスタンスに設定されます。それ以外の場合、この値は <see langword="default" /> に設定されます。</param>
        <summary><see cref="T:System.IO.Pipelines.PipeReader" /> で同期的にデータを読み取ろうとします。</summary>
        <returns>データが使用可能だった場合、または呼び出しがキャンセルされたかライターが完了した場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

パイプが `false`を返す場合、<xref:System.IO.Pipelines.PipeReader.AdvanceTo(System.SequencePosition,System.SequencePosition)>を呼び出す必要はありません。

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
