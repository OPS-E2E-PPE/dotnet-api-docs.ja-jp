<Type Name="CryptoProvider" FullName="System.Security.RightsManagement.CryptoProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="78419b8bbd860c8acbebb250da1c1c856612f0b7" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82414316" /></Metadata><TypeSignature Language="C#" Value="public class CryptoProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CryptoProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.CryptoProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoProvider : IDisposable" />
  <TypeSignature Language="F#" Value="type CryptoProvider = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>保護されたコンテンツを暗号化および復号化するデジタル著作権管理サービスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 権限が管理されている <xref:System.Security.RightsManagement.UseLicense> を <xref:System.Security.RightsManagement.SecureEnvironment>にバインドするときに、<xref:System.Security.RightsManagement.UseLicense.Bind%2A> メソッドの結果として <xref:System.Security.RightsManagement.CryptoProvider> が作成されます。  
  
 他の <xref:System.Security.RightsManagement> の種類と同様に、<xref:System.Security.RightsManagement.CryptoProvider> は完全に信頼されたアプリケーションでのみ使用できます。  
  
   
  
## Examples  
 次の例は、<xref:System.Security.RightsManagement.CryptoProvider> クラスを使用して <xref:System.IO.Packaging.EncryptedPackageEnvelope>を作成する方法を示しています。  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.RightsManagement.UseLicense" />
    <altmember cref="T:System.Security.RightsManagement.SecureEnvironment" />
  </Docs>
  <Members>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BlockSize : int" Usage="System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>暗号ブロック サイズ (バイト単位) を取得します。</summary>
        <value>暗号ブロック サイズ (バイト単位)。  Advanced Encryption Standard (AES) の既定のブロックサイズは8です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> および <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> に渡される `clearText` および `cipherText` バッファーは、長さが n *<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> バイトである必要があります。ここで、' n ' は1以上の整数です。  
  
 <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> が `false`場合、<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> に渡されるバッファーは <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>に渡されるバッファーと同じ長さである必要があります。  
  
 <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> が `true`の場合、<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> に渡されるバッファーの長さは <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> に渡されたバッファーの長さとは異なる場合があります (すべてのバッファーサイズは、常に長さが <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> バイトの倍数である必要があります)。  
  
 <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> 1 は、暗号がストリーム暗号であることを示します。<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> が2以上の場合は、ブロック暗号を示します。  
  
   
  
## Examples  
 次の例は、クリアテキストデータを暗号化テキストデータに変換するときに、<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> プロパティを使用する方法を示しています。  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundGrants">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt; BoundGrants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentGrant&gt; BoundGrants" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundGrants As ReadOnlyCollection(Of ContentGrant)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ BoundGrants { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundGrants : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;" Usage="System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>検証に合格し、ユーザーに付与される権限の一覧を示すコレクションを取得します。</summary>
        <value>検証に合格し、ユーザーに付与される権限を列挙するコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、<xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> プロパティを使用して、<xref:System.Security.RightsManagement.UseLicense>を通じて付与された一覧の権限を取得する方法を示します。  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecrypt">
      <MemberSignature Language="C#" Value="public bool CanDecrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDecrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDecrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDecrypt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDecrypt : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが復号化の権限を持っているかどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Security.RightsManagement.UseLicense" /> で復号化の権限が付与されている場合は <see langword="true" />。それ以外の場合は、<see langword="false" />ます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この <xref:System.Security.RightsManagement.CryptoProvider> にバインドされている <xref:System.Security.RightsManagement.UseLicense> によって、ユーザーに表示、編集、印刷、所有者などの読み取りアクセス権が付与されている場合、<xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> は `true` を返します。  
  
   
  
## Examples  
 次の例では、<xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> プロパティを使用して、復号化が許可されているかどうかを判断する方法を示します。  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public bool CanEncrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEncrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEncrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanEncrypt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEncrypt : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが暗号化の権限を持っているかどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Security.RightsManagement.UseLicense" /> が暗号化のためのユーザー権限を付与する場合は <see langword="true" /> します。それ以外の場合は、<see langword="false" />ます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この <xref:System.Security.RightsManagement.CryptoProvider> にバインドされている <xref:System.Security.RightsManagement.UseLicense> によって、編集や所有者などのユーザー書き込みアクセス権が付与されている場合、<xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> は `true` を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanMergeBlocks">
      <MemberSignature Language="C#" Value="public bool CanMergeBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMergeBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMergeBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMergeBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMergeBlocks : bool" Usage="System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> および <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> が異なる長さのブロック サイズのバッファーを受け入れることができるかどうかを示す値を取得します。</summary>
        <value><see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> に渡されるバッファーが <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />に渡されるバッファーと異なる長さになる可能性がある場合は <see langword="true" /> します。それ以外の場合は、<see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> と <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> に渡されるバッファーが完全に同じ長さである必要がある場合は <see langword="false" /> します。  AES の場合、既定値は <see langword="true" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> および <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> に渡される `clearText` および `cipherText` バッファーは、長さが n *<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> バイトである必要があります。ここで、' n ' は1以上の整数です。  
  
 <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> が `false`場合、<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> に渡されるバッファーは <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>に渡されるバッファーと同じ長さである必要があります。  
  
 <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> が `true`の場合、<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> に渡されるバッファーの長さは <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> に渡されたバッファーの長さとは異なる場合があります (すべてのバッファーサイズは、常に長さが <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> バイトの倍数である必要があります)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] cryptoText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] cryptoText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (cryptoText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ cryptoText);" />
      <MemberSignature Language="F#" Value="member this.Decrypt : byte[] -&gt; byte[]" Usage="cryptoProvider.Decrypt cryptoText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cryptoText">復号化する暗号テキスト。</param>
        <summary>暗号テキストをクリア テキストに復号化します。</summary>
        <returns><paramref name="cryptoText" /> の復号化されたクリア テキスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、<xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> メソッドを使用して、暗号化されたデータを暗号化されていないデータに変換する方法を示します。  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewdecrypt)]
 [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="cipherText" /> が null です。</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">復号化の権限が付与されていません。</exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Security.RightsManagement.CryptoProvider" /> で使用したリソースを解放します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="cryptoProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Security.RightsManagement.CryptoProvider" /> によって使用されているすべてのリソースを解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> は <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`true`) を実行します。  
  
 <xref:System.Security.RightsManagement.CryptoProvider> を使い終わったら、<xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>を呼び出します。 <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>メソッドによって、<xref:System.Security.RightsManagement.CryptoProvider> は使用不可の状態になります。 <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>呼び出し後は、<xref:System.Security.RightsManagement.CryptoProvider>によって占有されていたメモリをガベージ コレクターがクリアできるよう、<xref:System.Security.RightsManagement.CryptoProvider> へのすべての参照を解放する必要があります。 詳細については、[アンマネージ リソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)および[Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)を参照してください。  
  
> [!NOTE]
>  <xref:System.Security.RightsManagement.CryptoProvider>への最後の参照を解放する前に、必ず<xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>を呼び出してください。 そうしないと、ガベージ コレクターが <xref:System.Security.RightsManagement.CryptoProvider> オブジェクトの `Finalize` メソッドを呼び出すまで、使用されているリソースは解放されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="cryptoProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">マネージド リソースとアンマネージド リソースの両方を解放する場合は <see langword="true" />。アンマネージド リソースだけを解放する場合は <see langword="false" />。</param>
        <summary><see cref="T:System.Security.RightsManagement.CryptoProvider" /> によって使用されているアンマネージド リソースを解放し、オプションでマネージド リソースも解放します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、パブリックな `Dispose()` メソッドと <xref:System.Object.Finalize%2A> メソッドによって呼び出されます。 `Dispose()` は、`disposing` パラメーターを `true`に設定して、protected `Dispose(Boolean)` メソッドを呼び出します。 <xref:System.Object.Finalize%2A> は `disposing` を `false`に設定して `Dispose` を呼び出します。  
  
 `disposing` パラメーターが true の場合、このメソッドは、この <xref:System.Security.RightsManagement.CryptoProvider> が参照するすべてのマネージオブジェクトによって保持されているすべてのリソースを解放します。 このメソッドは、参照される各オブジェクトの `Dispose()` メソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see langword="Dispose" /> は、他のオブジェクトから複数回呼び出すことができます。 をオーバーライドする場合は <see langword="Dispose(Boolean)" /> 以前に <see langword="Dispose" />を呼び出したときに破棄されたオブジェクトを参照しないように注意してください。 <see langword="Dispose(Boolean)" />を実装する方法の詳細については、「 [Dispose メソッドの実装](~/docs/standard/garbage-collection/implementing-dispose.md)」を参照してください。  
  
<see langword="Dispose" /> と <see cref="M:System.Object.Finalize" />の詳細については、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」と「 [Finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] clearText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] clearText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (clearText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ clearText);" />
      <MemberSignature Language="F#" Value="member this.Encrypt : byte[] -&gt; byte[]" Usage="cryptoProvider.Encrypt clearText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="clearText">暗号化するクリア テキスト コンテンツ。</param>
        <summary>クリア テキストを暗号化テキストに暗号化します。</summary>
        <returns>指定された <paramref name="clearText" /> の暗号化済みの暗号化テキスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `clearText` バッファーのバイト長は、cipher <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> プロパティの倍数である必要があります。  
  
 デジタル著作権管理システムは、AES ブロック暗号を使用します。  AES では、ブロックは独立して暗号化されるため、同じクリアテキストの2つのブロックが同じ暗号テキストの結果を生成します。  独立したブロック暗号化によって発生する可能性がある復号化の脅威を最小限に抑えるために、アプリケーションでは、同じクリアテキストブロックを暗号化しないように、圧縮などのコンテンツを変更するメソッドを使用する必要があります  
  
   
  
## Examples  
 次の例では、<xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> メソッドを使用してクリアテキストデータを暗号化テキストデータに変換する方法を示します。  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="clearText" /> が null です。</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">暗号化は許可されていません。</exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoProvider ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="cryptoProvider.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>インスタンスがガベージ コレクションによって回収される前にリソースを解放し、内部クリーンアップを実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> は <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(`false`) を実行します。  
  
 このメソッドは <xref:System.Object.Finalize%2A>をオーバーライドします。 アプリケーションコードはこのメソッドを呼び出すことはできません。ガベージコレクターによる終了処理が、<xref:System.GC.SuppressFinalize%2A> メソッドの呼び出しによって無効にされている場合を除き、オブジェクトの `Finalize` メソッドは、ガベージコレクション中に自動的に呼び出されます。  
  
 詳細については、「 [Finalize メソッドとデストラクター](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100))」、「[アンマネージリソースのクリーンアップ](~/docs/standard/garbage-collection/unmanaged.md)」、および「 [finalize メソッドのオーバーライド](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100))」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
