<Type Name="SystemEvents" FullName="Microsoft.Win32.SystemEvents">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3cb67d1cb6f01f1989c0af1ed95872bf0bff887b" /><Meta Name="ms.sourcegitcommit" Value="8b09499854b5b7b909802126edc1f1fca0054c10" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="02/01/2020" /><Meta Name="ms.locfileid" Value="76953586" /></Metadata><TypeSignature Language="C#" Value="public sealed class SystemEvents" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SystemEvents extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SystemEvents" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SystemEvents" />
  <TypeSignature Language="C++ CLI" Value="public ref class SystemEvents sealed" />
  <TypeSignature Language="F#" Value="type SystemEvents = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f04d5-101">システム イベント通知へのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-101">Provides access to system event notifications.</span></span> <span data-ttu-id="f04d5-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04d5-103"><xref:Microsoft.Win32.SystemEvents> クラスは、特定の種類のシステムイベントに応答する機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-103">The <xref:Microsoft.Win32.SystemEvents> class provides the ability to respond to specific types of system events.</span></span>  
  
 <span data-ttu-id="f04d5-104">システムイベントが発生すると、イベントに関連付けられているデリゲートは、システムイベントを監視するスレッドを使用して呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f04d5-104">When a system event is raised, any delegates attached to the event are called using the thread that monitors for system events.</span></span> <span data-ttu-id="f04d5-105">したがって、イベントハンドラーからスレッドセーフな呼び出しを行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-105">Therefore, you should make any calls from your event handlers thread-safe.</span></span> <span data-ttu-id="f04d5-106">このクラスのメンバーとして公開されていないシステムイベントを呼び出す必要がある場合は、<xref:Microsoft.Win32.SystemEvents.InvokeOnEventsThread%2A> メソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="f04d5-106">If you need to call a system event that is not exposed as a member of this class, you can use the <xref:Microsoft.Win32.SystemEvents.InvokeOnEventsThread%2A> method.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-107">システムイベントハンドラーを発生させるスレッドでは、他のアプリケーションが機能しなくなる可能性があるため、時間のかかる処理を実行しないでください。</span><span class="sxs-lookup"><span data-stu-id="f04d5-107">Do not perform time-consuming processing on the thread that raises a system event handler because it might prevent other applications from functioning.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-108">[!INCLUDE[windowsver](~/includes/windowsver-md.md)]では、一部のシステムイベントが発生しない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-108">Some system events might not be raised on [!INCLUDE[windowsver](~/includes/windowsver-md.md)].</span></span> <span data-ttu-id="f04d5-109">[!INCLUDE[windowsver](~/includes/windowsver-md.md)]でアプリケーションが期待どおりに動作することを確認してください。</span><span class="sxs-lookup"><span data-stu-id="f04d5-109">Be sure to verify that your application works as expected on [!INCLUDE[windowsver](~/includes/windowsver-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04d5-110">このセクションには、2つの例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f04d5-110">This section contains two examples.</span></span> <span data-ttu-id="f04d5-111">最初の例は、通常のアプリケーションでシステムイベントを使用する方法を示しています。2番目の例は、Windows サービスでシステムイベントを使用する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f04d5-111">The first example shows how to use system events in an ordinary application, and the second example shows how to use system events in a Windows service.</span></span>  
  
 <span data-ttu-id="f04d5-112">**例 1**</span><span class="sxs-lookup"><span data-stu-id="f04d5-112">**Example 1**</span></span>  
  
 <span data-ttu-id="f04d5-113">次のコード例では、一部のシステムイベントに関心を登録し、そのイベントが発生するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-113">The following code example registers interest in some system events and then waits for any of those events to occur.</span></span> <span data-ttu-id="f04d5-114">表示される出力は、ユーザーがディスプレイの解像度を変更した場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-114">The output shown occurs if the user changes the display resolution.</span></span>  
  
 [!code-cpp[SystemEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#1)]
 [!code-csharp[SystemEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#1)]
 [!code-vb[SystemEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#1)]  
  
 <span data-ttu-id="f04d5-115">**例 2**</span><span class="sxs-lookup"><span data-stu-id="f04d5-115">**Example 2**</span></span>  
  
 <span data-ttu-id="f04d5-116">次のコード例は、<xref:Microsoft.Win32.SystemEvents.TimeChanged> イベントと <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged> イベントを処理する非常に単純な Windows サービスを示しています。</span><span class="sxs-lookup"><span data-stu-id="f04d5-116">The following code example demonstrates a very simple Windows service that handles the <xref:Microsoft.Win32.SystemEvents.TimeChanged> and <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged> events.</span></span> <span data-ttu-id="f04d5-117">この例には、`SimpleService`という名前のサービス、`HiddenForm`という名前のフォーム、およびインストーラーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="f04d5-117">The example includes a service named `SimpleService`, a form named `HiddenForm`, and an installer.</span></span> <span data-ttu-id="f04d5-118">フォームには、システムイベントに必要なメッセージループが用意されています。</span><span class="sxs-lookup"><span data-stu-id="f04d5-118">The form provides the message loop that is required by system events.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-119">サービスには、デスクトップとの対話が許可されている場合を除き、メッセージループがありません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-119">Services do not have message loops, unless they are allowed to interact with the desktop.</span></span> <span data-ttu-id="f04d5-120">この例のように、メッセージループが非表示のフォームによって提供されない場合は、サービスをローカルシステムアカウントで実行する必要があります。また、デスクトップとの対話を可能にするには、手動による介入が必要です。</span><span class="sxs-lookup"><span data-stu-id="f04d5-120">If the message loop is not provided by a hidden form, as in this example, the service must be run under the local system account, and manual intervention is required to enable interaction with the desktop.</span></span> <span data-ttu-id="f04d5-121">つまり、管理者は、[サービスのプロパティ] ダイアログボックスの [**ログオン**] タブにある [**デスクトップとの対話をサービスに許可する**] チェックボックスを手動でオンにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-121">That is, the administrator must manually check the **Allow service to interact with desktop** check box on the **Log On** tab of the service properties dialog box.</span></span> <span data-ttu-id="f04d5-122">この場合、メッセージループが自動的に提供されます。</span><span class="sxs-lookup"><span data-stu-id="f04d5-122">In that case, a message loop is automatically provided.</span></span> <span data-ttu-id="f04d5-123">このオプションは、サービスがローカルシステムアカウントで実行されている場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="f04d5-123">This option is available only when the service is run under the local system account.</span></span> <span data-ttu-id="f04d5-124">デスクトップとの対話をプログラムで有効にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-124">Interaction with the desktop cannot be enabled programmatically.</span></span>  
  
 <span data-ttu-id="f04d5-125">この例のサービスは、`HiddenForm`のインスタンスを実行するスレッドを開始します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-125">The service in this example starts a thread that runs an instance of `HiddenForm`.</span></span> <span data-ttu-id="f04d5-126">イベントは、フォームでフックおよび処理されます。</span><span class="sxs-lookup"><span data-stu-id="f04d5-126">The events are hooked up and handled in the form.</span></span> <span data-ttu-id="f04d5-127">フォームが最初に完全に読み込まれるようにするには、フォームの読み込みイベントでイベントをフックする必要があります。それ以外の場合、イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-127">The events must be hooked up in the load event of the form, to make sure that the form is completely loaded first; otherwise the events will not be raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-128">この例では、Visual Studio デザイナーによって通常生成されるフォーム初期化コードを含む、必要なすべてのコードを提供しています。</span><span class="sxs-lookup"><span data-stu-id="f04d5-128">The example provides all the necessary code, including the form initialization code typically generated by Visual Studio designers.</span></span> <span data-ttu-id="f04d5-129">Visual Studio でサービスを開発している場合は、2番目の部分クラスを省略し、[**プロパティ**] ウィンドウを使用して、非表示のフォームの高さと幅を0に、境界線のスタイルを <xref:System.Windows.Forms.FormBorderStyle.None?displayProperty=nameWithType>に、ウィンドウの状態を <xref:System.Windows.Forms.FormWindowState.Minimized?displayProperty=nameWithType>に設定します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-129">If you are developing your service in Visual Studio, you can omit the second partial class and use the **Properties** window to set the height and width of the hidden form to zero, the border style to <xref:System.Windows.Forms.FormBorderStyle.None?displayProperty=nameWithType>, and the window state to <xref:System.Windows.Forms.FormWindowState.Minimized?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f04d5-130">例を実行するには、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="f04d5-130">To run the example:</span></span>  
  
1.  <span data-ttu-id="f04d5-131">コマンドラインからコードをコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="f04d5-131">Compile the code from the command line.</span></span> <span data-ttu-id="f04d5-132">ソースファイルに使用する名前は重要ではありません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-132">The name that you use for the source file is not important.</span></span>  
  
2.  <span data-ttu-id="f04d5-133">[Installutil.exe (インストーラーツール)](~/docs/framework/tools/installutil-exe-installer-tool.md)ユーティリティを使用して、コマンドラインからサービスをインストールします。</span><span class="sxs-lookup"><span data-stu-id="f04d5-133">Install the service from the command line using the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) utility.</span></span> <span data-ttu-id="f04d5-134">たとえば、ソースファイル名が `example.cs` または `example.vb`の場合、`InstallUtil example.exe` ます。</span><span class="sxs-lookup"><span data-stu-id="f04d5-134">For example, `InstallUtil example.exe` if the source file name is `example.cs` or `example.vb`.</span></span> <span data-ttu-id="f04d5-135">サービスをインストールするには、管理者である必要があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-135">You must be an administrator to install the service.</span></span>  
  
3.  <span data-ttu-id="f04d5-136">サービスを開始するには、サービスコンソールを使用します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-136">Use the Services console to start the service.</span></span>  
  
4.  <span data-ttu-id="f04d5-137">システム時刻を変更するか、マウスのプロパティなどのユーザー設定を変更します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-137">Change the system time, or change user preferences, such as mouse properties.</span></span>  
  
5.  <span data-ttu-id="f04d5-138">イベントビューアーの**アプリケーション**カテゴリのメッセージを表示します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-138">View the messages in the **Application** category of Event Viewer.</span></span>  
  
6.  <span data-ttu-id="f04d5-139">サービスを停止するには、サービスコンソールを使用します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-139">Use the Services console to stop the service.</span></span>  
  
7.  <span data-ttu-id="f04d5-140">`/u` オプションを使用して、コマンドラインからサービスをアンインストールします。</span><span class="sxs-lookup"><span data-stu-id="f04d5-140">Uninstall the service from the command line by using the `/u` option.</span></span> <span data-ttu-id="f04d5-141">たとえば、「 `InstallUtil /u example.exe` 」のように入力します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-141">For example, `InstallUtil /u example.exe`.</span></span>  
  
 [!code-csharp[ManagedWindowsService#1](~/samples/snippets/csharp/VS_Snippets_CLR/ManagedWindowsService/cs/source.cs#1)]
 [!code-vb[ManagedWindowsService#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ManagedWindowsService/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="f04d5-142">システムリソースにフルアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="f04d5-142">for full access to system resources.</span></span> <span data-ttu-id="f04d5-143">要求の値: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="f04d5-143">Demand values: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="f04d5-144">関連付けられた状態:</span><span class="sxs-lookup"><span data-stu-id="f04d5-144">Associated state:</span></span></permission>
    <altmember cref="T:Microsoft.Win32.PowerModeChangedEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionEndedEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionEndingEventHandler" />
    <altmember cref="T:Microsoft.Win32.SessionSwitchEventHandler" />
    <altmember cref="T:Microsoft.Win32.TimerElapsedEventHandler" />
    <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventHandler" />
    <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventHandler" />
  </Docs>
  <Members>
    <Member MemberName="CreateTimer">
      <MemberSignature Language="C#" Value="public static IntPtr CreateTimer (int interval);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CreateTimer(int32 interval) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.CreateTimer(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTimer (interval As Integer) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CreateTimer(int interval);" />
      <MemberSignature Language="F#" Value="static member CreateTimer : int -&gt; nativeint" Usage="Microsoft.Win32.SystemEvents.CreateTimer interval" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interval" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="interval"><span data-ttu-id="f04d5-145">タイマー通知の間隔 (ミリ秒) を指定します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-145">Specifies the interval between timer notifications, in milliseconds.</span></span></param>
        <summary><span data-ttu-id="f04d5-146">システム イベント ウィンドウに関連付けられた新しいウィンドウ タイマーを作成します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-146">Creates a new window timer associated with the system events window.</span></span></summary>
        <returns><span data-ttu-id="f04d5-147">新しいタイマーの ID。</span><span class="sxs-lookup"><span data-stu-id="f04d5-147">The ID of the new timer.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f04d5-148">間隔が 0 以下です。</span><span class="sxs-lookup"><span data-stu-id="f04d5-148">The interval is less than or equal to zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-149">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-149">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-150">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-150">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-151">システム イベント ウィンドウ スレッドの作成が成功しなかったか、タイマーの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-151">The attempt to create a system events window thread did not succeed, or the attempt to create the timer did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisplaySettingsChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler DisplaySettingsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplaySettingsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event DisplaySettingsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ DisplaySettingsChanged;" />
      <MemberSignature Language="F#" Value="member this.DisplaySettingsChanged : EventHandler " Usage="member this.DisplaySettingsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-152">ユーザーが表示設定を変更すると発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-152">Occurs when the user changes the display settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-153">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-153">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04d5-154">次のコード例は、<xref:Microsoft.Win32.SystemEvents.DisplaySettingsChanged> イベントを監視する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f04d5-154">The following code example demonstrates how to monitor the <xref:Microsoft.Win32.SystemEvents.DisplaySettingsChanged> event.</span></span> <span data-ttu-id="f04d5-155">このコード例は、<xref:Microsoft.Win32.SystemEvents> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="f04d5-155">This code example is part of a larger example provided for the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-156">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-156">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-157">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-157">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-158">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-158">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanging" />
      </Docs>
    </Member>
    <Member MemberName="DisplaySettingsChanging">
      <MemberSignature Language="C#" Value="public static event EventHandler DisplaySettingsChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplaySettingsChanging" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event DisplaySettingsChanging As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ DisplaySettingsChanging;" />
      <MemberSignature Language="F#" Value="member this.DisplaySettingsChanging : EventHandler " Usage="member this.DisplaySettingsChanging : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-159">表示設定が変更されているときに発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-159">Occurs when the display settings are changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-160">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-160">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-161">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-161">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-162">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-162">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-163">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-163">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="E:Microsoft.Win32.SystemEvents.DisplaySettingsChanged" />
      </Docs>
    </Member>
    <Member MemberName="EventsThreadShutdown">
      <MemberSignature Language="C#" Value="public static event EventHandler EventsThreadShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EventsThreadShutdown" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.EventsThreadShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event EventsThreadShutdown As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ EventsThreadShutdown;" />
      <MemberSignature Language="F#" Value="member this.EventsThreadShutdown : EventHandler " Usage="member this.EventsThreadShutdown : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-164">システム イベントを待機するスレッドが終了する前に発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-164">Occurs before the thread that listens for system events is terminated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04d5-165">このイベントは、システムイベントをリッスンするスレッドが終了されようとしているときに発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-165">This event is raised as the thread that listens for system events is about to be terminated.</span></span> <span data-ttu-id="f04d5-166">システムイベントデリゲートは、システムイベントをリッスンするスレッドを使用して呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f04d5-166">System event delegates are invoked using the thread that listens for system events.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-167">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-167">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-168">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-168">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-169">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-169">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-170">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-170">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InstalledFontsChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler InstalledFontsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler InstalledFontsChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.InstalledFontsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event InstalledFontsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ InstalledFontsChanged;" />
      <MemberSignature Language="F#" Value="member this.InstalledFontsChanged : EventHandler " Usage="member this.InstalledFontsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-171">ユーザーがシステム フォントを追加するか、またはシステム フォントを削除すると発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-171">Occurs when the user adds fonts to or removes fonts from the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-172">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-172">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-173">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-173">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-174">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-174">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-175">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-175">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeOnEventsThread">
      <MemberSignature Language="C#" Value="public static void InvokeOnEventsThread (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeOnEventsThread(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.InvokeOnEventsThread(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeOnEventsThread (method As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeOnEventsThread(Delegate ^ method);" />
      <MemberSignature Language="F#" Value="static member InvokeOnEventsThread : Delegate -&gt; unit" Usage="Microsoft.Win32.SystemEvents.InvokeOnEventsThread method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="f04d5-176">システム イベントを待機するスレッドを使って呼び出すデリゲート。</span><span class="sxs-lookup"><span data-stu-id="f04d5-176">A delegate to invoke using the thread that listens for system events.</span></span></param>
        <summary><span data-ttu-id="f04d5-177">システム イベントを待機するスレッドを使って指定したデリゲートを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-177">Invokes the specified delegate using the thread that listens for system events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04d5-178">このメソッドは、<xref:Microsoft.Win32.SystemEvents> クラスによって公開されていないシステムイベントを処理する必要がある場合にいつでも使用できます。</span><span class="sxs-lookup"><span data-stu-id="f04d5-178">You can use this method any time that you need to handle a system event that is not exposed otherwise by the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 <span data-ttu-id="f04d5-179">このメソッドを呼び出すと、アプリケーションがシステムイベントを処理するために使用しているスレッドによって、指定されたデリゲートが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="f04d5-179">When you call this method, the specified delegate will be invoked by the thread that your application is using to process system events.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-180">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-180">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-181">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-181">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-182">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-182">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KillTimer">
      <MemberSignature Language="C#" Value="public static void KillTimer (IntPtr timerId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void KillTimer(native int timerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SystemEvents.KillTimer(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub KillTimer (timerId As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void KillTimer(IntPtr timerId);" />
      <MemberSignature Language="F#" Value="static member KillTimer : nativeint -&gt; unit" Usage="Microsoft.Win32.SystemEvents.KillTimer timerId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timerId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="timerId"><span data-ttu-id="f04d5-183">終了するタイマーの ID。</span><span class="sxs-lookup"><span data-stu-id="f04d5-183">The ID of the timer to terminate.</span></span></param>
        <summary><span data-ttu-id="f04d5-184">特定の ID によって指定されたタイマーが終了します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-184">Terminates the timer specified by the given id.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-185">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-185">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-186">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-186">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-187">システム イベント ウィンドウ スレッドの作成が成功しなかったか、タイマーの終了が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-187">The attempt to create a system events window thread did not succeed, or the attempt to terminate the timer did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LowMemory">
      <MemberSignature Language="C#" Value="public static event EventHandler LowMemory;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LowMemory" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.LowMemory" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LowMemory As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ LowMemory;" />
      <MemberSignature Language="F#" Value="member this.LowMemory : EventHandler " Usage="member this.LowMemory : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netcore-2.1;netframework-4.8;netcore-2.2;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.Obsolete("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.1;netcore-2.2;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1">
          <AttributeName>System.Obsolete("This event has been deprecated. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-3.0;netcore-3.0">
          <AttributeName>System.Obsolete("This event has been deprecated. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This event has been deprecated. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-188">システムで使用可能な RAM が不足すると発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-188">Occurs when the system is running out of available RAM.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04d5-189">このイベントは、WM_COMPACTING メッセージをラップします。</span><span class="sxs-lookup"><span data-stu-id="f04d5-189">This event wraps the WM_COMPACTING message.</span></span> <span data-ttu-id="f04d5-190">このメッセージは、システムが 30 ~ 60 秒間に12.5% を超えるシステム時間を検出した場合に、すべてのトップレベルのウィンドウに送信されます。</span><span class="sxs-lookup"><span data-stu-id="f04d5-190">This message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory.</span></span> <span data-ttu-id="f04d5-191">これは、システムメモリが不足していることを示します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-191">This indicates that system memory is low.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-192">このイベントは、メッセージポンプが実行されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-192">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="f04d5-193">Windows サービスでは、非表示のフォームが使用されているか、メッセージポンプが手動で開始されていない限り、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-193">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="f04d5-194">Windows サービスで非表示のフォームを使用してシステムイベントを処理する方法を示すコード例については、<xref:Microsoft.Win32.SystemEvents> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f04d5-194">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-195">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-195">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-196">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-196">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-197">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-197">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-198">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-198">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="f04d5-199">このメッセージは、16ビットの Windows ベースのアプリケーションとの互換性のためだけに提供されています。</span><span class="sxs-lookup"><span data-stu-id="f04d5-199">This message is provided only for compatibility with 16-bit Windows-based applications.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="PaletteChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler PaletteChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaletteChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.PaletteChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event PaletteChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ PaletteChanged;" />
      <MemberSignature Language="F#" Value="member this.PaletteChanged : EventHandler " Usage="member this.PaletteChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-200">ユーザーが、別のパレットを使用するアプリケーションに切り替えると発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-200">Occurs when the user switches to an application that uses a different palette.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-201">このイベントは、メッセージポンプが実行されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-201">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="f04d5-202">Windows サービスでは、非表示のフォームが使用されているか、メッセージポンプが手動で開始されていない限り、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-202">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="f04d5-203">Windows サービスで非表示のフォームを使用してシステムイベントを処理する方法を示すコード例については、<xref:Microsoft.Win32.SystemEvents> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f04d5-203">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-204">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-204">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04d5-205">次のコード例は、<xref:Microsoft.Win32.SystemEvents.PaletteChanged> イベントを監視する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f04d5-205">The following code example demonstrates how to monitor the <xref:Microsoft.Win32.SystemEvents.PaletteChanged> event.</span></span> <span data-ttu-id="f04d5-206">このコード例は、<xref:Microsoft.Win32.SystemEvents> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="f04d5-206">This code example is part of a larger example provided for the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-207">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-207">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-208">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-208">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-209">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-209">The attempt to create a system events window thread did not succeed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PowerModeChanged">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.PowerModeChangedEventHandler PowerModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.PowerModeChangedEventHandler PowerModeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.PowerModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event PowerModeChanged As PowerModeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::PowerModeChangedEventHandler ^ PowerModeChanged;" />
      <MemberSignature Language="F#" Value="member this.PowerModeChanged : Microsoft.Win32.PowerModeChangedEventHandler " Usage="member this.PowerModeChanged : Microsoft.Win32.PowerModeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.PowerModeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-210">ユーザーがシステムを中断または再開すると発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-210">Occurs when the user suspends or resumes the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-211">このイベントは、メッセージポンプが実行されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-211">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="f04d5-212">Windows サービスでは、非表示のフォームが使用されているか、メッセージポンプが手動で開始されていない限り、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-212">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="f04d5-213">Windows サービスで非表示のフォームを使用してシステムイベントを処理する方法を示すコード例については、<xref:Microsoft.Win32.SystemEvents> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f04d5-213">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-214">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-214">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-215">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-215">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-216">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-216">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-217">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-217">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.PowerModeChangedEventArgs" />
        <altmember cref="T:Microsoft.Win32.PowerModeChangedEventHandler" />
        <altmember cref="T:Microsoft.Win32.PowerModes" />
      </Docs>
    </Member>
    <Member MemberName="SessionEnded">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionEndedEventHandler SessionEnded;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionEndedEventHandler SessionEnded" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionEnded" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionEnded As SessionEndedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionEndedEventHandler ^ SessionEnded;" />
      <MemberSignature Language="F#" Value="member this.SessionEnded : Microsoft.Win32.SessionEndedEventHandler " Usage="member this.SessionEnded : Microsoft.Win32.SessionEndedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionEndedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-218">ユーザーがシステムからログオフするか、システムをシャットダウンすると発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-218">Occurs when the user is logging off or shutting down the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-219">このイベントは、メッセージポンプが実行されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-219">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="f04d5-220">Windows サービスでは、非表示のフォームが使用されているか、メッセージポンプが手動で開始されていない限り、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-220">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="f04d5-221">Windows サービスで非表示のフォームを使用してシステムイベントを処理する方法を示すコード例については、<xref:Microsoft.Win32.SystemEvents> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f04d5-221">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-222">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-222">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-223">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-223">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-224">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-224">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-225">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-225">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.SessionEndedEventArgs" />
        <altmember cref="T:Microsoft.Win32.SessionEndedEventHandler" />
        <altmember cref="T:Microsoft.Win32.SessionEndReasons" />
      </Docs>
    </Member>
    <Member MemberName="SessionEnding">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionEndingEventHandler SessionEnding;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionEndingEventHandler SessionEnding" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionEnding" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionEnding As SessionEndingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionEndingEventHandler ^ SessionEnding;" />
      <MemberSignature Language="F#" Value="member this.SessionEnding : Microsoft.Win32.SessionEndingEventHandler " Usage="member this.SessionEnding : Microsoft.Win32.SessionEndingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionEndingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-226">ユーザーがシステムからログオフしようとした場合、またはシステムをシャットダウンしようとした場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-226">Occurs when the user is trying to log off or shut down the system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f04d5-227">これはキャンセル可能なイベントです。</span><span class="sxs-lookup"><span data-stu-id="f04d5-227">This is a cancelable event.</span></span> <span data-ttu-id="f04d5-228"><xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> プロパティを `true` に設定すると、セッションの実行を続行するように要求されます。</span><span class="sxs-lookup"><span data-stu-id="f04d5-228">Setting the <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> property to `true` will request that the session continues to run.</span></span> <span data-ttu-id="f04d5-229">セッションが終了しないという保証はありません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-229">It provides no guarantee that the session will not end.</span></span>  
  
 <span data-ttu-id="f04d5-230">Windows フォームで <xref:Microsoft.Win32.SystemEvents.SessionEnding> を使用してシステムのログオフまたは再起動を検出する場合、このイベントの前に <xref:System.Windows.Forms.Form.Closing> イベントが発生するかどうかを決定する決定的な方法はありません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-230">If you are using <xref:Microsoft.Win32.SystemEvents.SessionEnding> in a Windows form to detect a system logoff or reboot, there is no deterministic way to decide whether the <xref:System.Windows.Forms.Form.Closing> event will fire before this event.</span></span>  
  
 <span data-ttu-id="f04d5-231"><xref:System.Windows.Forms.Form.Closing> が発生する前に特別なタスクを実行する場合は、<xref:System.Windows.Forms.Form.Closing>する前に <xref:Microsoft.Win32.SystemEvents.SessionEnding> が発生するようにする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-231">If you want to perform some special tasks before <xref:System.Windows.Forms.Form.Closing> is fired, you need to ensure that <xref:Microsoft.Win32.SystemEvents.SessionEnding> fires before <xref:System.Windows.Forms.Form.Closing>.</span></span> <span data-ttu-id="f04d5-232">これを行うには、`WndProc` 関数をオーバーライドして、フォーム内の `WM_QUERYENDSESSION` をトラップする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-232">To do this, you need to trap the `WM_QUERYENDSESSION` in the form by overriding the `WndProc` function.</span></span>  <span data-ttu-id="f04d5-233">この例では、この方法を示します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-233">This example demonstrates how to do this.</span></span>  
  
```vb  
Private Shared WM_QUERYENDSESSION As Integer = &H11  
 Private Shared systemShutdown As Boolean = False  
 Protected Overrides Sub WndProc(ByRef m As System.Windows.Forms.Message)  
     If m.Msg = WM_QUERYENDSESSION Then  
         MessageBox.Show("queryendsession: this is a logoff, shutdown, or reboot")  
         systemShutdown = True  
     End If  
     ' If this is WM_QUERYENDSESSION, the closing event should be raised in the base WndProc.  
     MyBase.WndProc(m)  
 End Sub 'WndProc   
 Private Sub Form1_Closing(ByVal sender As System.Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles MyBase.Closing  
     If (systemShutdown) Then  
     ' Reset the variable because the user might cancel the shutdown.  
         systemShutdown = False  
         If (System.Windows.Forms.DialogResult.Yes = _  
                 MessageBox.Show("My application", "Do you want to save your work before logging off?", MessageBoxButtons.YesNo)) Then  
                 e.Cancel = True  
         Else  
                 e.Cancel = False  
         End If  
     End If  
 End Sub  
  
```  
  
```csharp  
private static int WM_QUERYENDSESSION = 0x11;  
private static bool systemShutdown = false;  
protected override void WndProc(ref System.Windows.Forms.Message m)  
{  
    if (m.Msg==WM_QUERYENDSESSION)  
    {  
        MessageBox.Show("queryendsession: this is a logoff, shutdown, or reboot");  
        systemShutdown = true;  
    }  
  
    // If this is WM_QUERYENDSESSION, the closing event should be  
    // raised in the base WndProc.  
    base.WndProc(ref m);  
  
} //WndProc   
  
private void Form1_Closing(  
    System.Object sender,   
    System.ComponentModel.CancelEventArgs e)  
{  
    if (systemShutdown)  
        // Reset the variable because the user might cancel the   
        // shutdown.  
    {  
        systemShutdown = false;  
        if (DialogResult.Yes==MessageBox.Show("My application",   
            "Do you want to save your work before logging off?",   
            MessageBoxButtons.YesNo))  
        {  
            e.Cancel = true;  
        }  
        else  
        {  
            e.Cancel = false;  
        }  
    }  
}  
```  
  
> [!IMPORTANT]
>  <span data-ttu-id="f04d5-234">コンソールアプリケーションでは、<xref:Microsoft.Win32.SystemEvents.SessionEnding> イベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-234">Console applications do not raise the <xref:Microsoft.Win32.SystemEvents.SessionEnding> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-235">このイベントは、メッセージポンプが実行されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-235">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="f04d5-236">Windows サービスでは、非表示のフォームが使用されているか、メッセージポンプが手動で開始されていない限り、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-236">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="f04d5-237">Windows サービスで非表示のフォームを使用してシステムイベントを処理する方法を示すコード例については、<xref:Microsoft.Win32.SystemEvents> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f04d5-237">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-238">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-238">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-239">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-239">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-240">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-240">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-241">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-241">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.SessionEndingEventArgs" />
        <altmember cref="T:Microsoft.Win32.SessionEndingEventHandler" />
        <altmember cref="T:Microsoft.Win32.SessionEndReasons" />
      </Docs>
    </Member>
    <Member MemberName="SessionSwitch">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.SessionSwitchEventHandler SessionSwitch;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.SessionSwitchEventHandler SessionSwitch" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.SessionSwitch" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SessionSwitch As SessionSwitchEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::SessionSwitchEventHandler ^ SessionSwitch;" />
      <MemberSignature Language="F#" Value="member this.SessionSwitch : Microsoft.Win32.SessionSwitchEventHandler " Usage="member this.SessionSwitch : Microsoft.Win32.SessionSwitchEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SessionSwitchEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-242">現在ログインしているユーザーが変更された場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-242">Occurs when the currently logged-in user has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-243">このイベントは、メッセージポンプが実行されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-243">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="f04d5-244">Windows サービスでは、非表示のフォームが使用されているか、メッセージポンプが手動で開始されていない限り、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-244">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="f04d5-245">Windows サービスで非表示のフォームを使用してシステムイベントを処理する方法を示すコード例については、<xref:Microsoft.Win32.SystemEvents> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f04d5-245">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-246">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-246">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-247">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-247">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-248">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-248">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-249">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-249">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.SessionSwitchEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TimeChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler TimeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TimeChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.TimeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TimeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler ^ TimeChanged;" />
      <MemberSignature Language="F#" Value="member this.TimeChanged : EventHandler " Usage="member this.TimeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-250">ユーザーがシステム時間を変更すると発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-250">Occurs when the user changes the time on the system clock.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-251">このイベントは、メッセージポンプが実行されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-251">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="f04d5-252">Windows サービスでは、非表示のフォームが使用されているか、メッセージポンプが手動で開始されていない限り、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-252">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="f04d5-253">Windows サービスで非表示のフォームを使用してシステムイベントを処理する方法を示すコード例については、<xref:Microsoft.Win32.SystemEvents> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f04d5-253">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-254">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-254">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-255">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-255">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-256">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-256">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-257">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-257">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="P:System.DateTime.Now" />
      </Docs>
    </Member>
    <Member MemberName="TimerElapsed">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.TimerElapsedEventHandler TimerElapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.TimerElapsedEventHandler TimerElapsed" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.TimerElapsed" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event TimerElapsed As TimerElapsedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::TimerElapsedEventHandler ^ TimerElapsed;" />
      <MemberSignature Language="F#" Value="member this.TimerElapsed : Microsoft.Win32.TimerElapsedEventHandler " Usage="member this.TimerElapsed : Microsoft.Win32.TimerElapsedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.TimerElapsedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-258">ウィンドウ タイマー間隔が経過したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-258">Occurs when a windows timer interval has expired.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-259">このイベントは、メッセージポンプが実行されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-259">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="f04d5-260">Windows サービスでは、非表示のフォームが使用されているか、メッセージポンプが手動で開始されていない限り、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-260">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="f04d5-261">Windows サービスで非表示のフォームを使用してシステムイベントを処理する方法を示すコード例については、<xref:Microsoft.Win32.SystemEvents> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f04d5-261">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-262">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-262">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-263">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-263">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-264">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-264">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-265">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-265">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.TimerElapsedEventArgs" />
        <altmember cref="T:Microsoft.Win32.TimerElapsedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="UserPreferenceChanged">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.UserPreferenceChangedEventHandler UserPreferenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.UserPreferenceChangedEventHandler UserPreferenceChanged" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.UserPreferenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event UserPreferenceChanged As UserPreferenceChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::UserPreferenceChangedEventHandler ^ UserPreferenceChanged;" />
      <MemberSignature Language="F#" Value="member this.UserPreferenceChanged : Microsoft.Win32.UserPreferenceChangedEventHandler " Usage="member this.UserPreferenceChanged : Microsoft.Win32.UserPreferenceChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.UserPreferenceChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-266">ユーザー設定が変更されると発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-266">Occurs when a user preference has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-267">このイベントは、メッセージポンプが実行されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-267">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="f04d5-268">Windows サービスでは、非表示のフォームが使用されているか、メッセージポンプが手動で開始されていない限り、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-268">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="f04d5-269">Windows サービスで非表示のフォームを使用してシステムイベントを処理する方法を示すコード例については、<xref:Microsoft.Win32.SystemEvents> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f04d5-269">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-270">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-270">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-271">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-271">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-272">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-272">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-273">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-273">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventArgs" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangedEventHandler" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceCategory" />
      </Docs>
    </Member>
    <Member MemberName="UserPreferenceChanging">
      <MemberSignature Language="C#" Value="public static event Microsoft.Win32.UserPreferenceChangingEventHandler UserPreferenceChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class Microsoft.Win32.UserPreferenceChangingEventHandler UserPreferenceChanging" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Win32.SystemEvents.UserPreferenceChanging" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event UserPreferenceChanging As UserPreferenceChangingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event Microsoft::Win32::UserPreferenceChangingEventHandler ^ UserPreferenceChanging;" />
      <MemberSignature Language="F#" Value="member this.UserPreferenceChanging : Microsoft.Win32.UserPreferenceChangingEventHandler " Usage="member this.UserPreferenceChanging : Microsoft.Win32.UserPreferenceChangingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.SystemEvents</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinmac-3.0">
          <AttributeName>System.MonoTODO("Currently does nothing on Mono")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.UserPreferenceChangingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f04d5-274">ユーザー設定を変更しているときに発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-274">Occurs when a user preference is changing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="f04d5-275">このイベントは、メッセージポンプが実行されている場合にのみ発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-275">This event is only raised if the message pump is running.</span></span> <span data-ttu-id="f04d5-276">Windows サービスでは、非表示のフォームが使用されているか、メッセージポンプが手動で開始されていない限り、このイベントは発生しません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-276">In a Windows service, unless a hidden form is used or the message pump has been started manually, this event will not be raised.</span></span> <span data-ttu-id="f04d5-277">Windows サービスで非表示のフォームを使用してシステムイベントを処理する方法を示すコード例については、<xref:Microsoft.Win32.SystemEvents> クラスを参照してください。</span><span class="sxs-lookup"><span data-stu-id="f04d5-277">For a code example that shows how to handle system events by using a hidden form in a Windows service, see the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="f04d5-278">これは静的イベントなので、アプリケーションが破棄されるときにイベントハンドラーをデタッチする必要があります。これを行わないと、メモリリークが発生します。</span><span class="sxs-lookup"><span data-stu-id="f04d5-278">Because this is a static event, you must detach your event handlers when your application is disposed, or memory leaks will result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f04d5-279">次のコード例は、<xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging> イベントを監視する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="f04d5-279">The following code example demonstrates how to monitor the <xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging> event.</span></span> <span data-ttu-id="f04d5-280">このコード例は、<xref:Microsoft.Win32.SystemEvents> クラス用に用意されている大規模な例の一部です。</span><span class="sxs-lookup"><span data-stu-id="f04d5-280">This code example is part of a larger example provided for the <xref:Microsoft.Win32.SystemEvents> class.</span></span>  
  
 [!code-cpp[SystemEvents#2](~/samples/snippets/cpp/VS_Snippets_Winforms/SystemEvents/cpp/SystemEvents.cpp#2)]
 [!code-csharp[SystemEvents#2](~/samples/snippets/csharp/VS_Snippets_Winforms/SystemEvents/CS/SystemEvents.cs#2)]
 [!code-vb[SystemEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SystemEvents/VB/SystemEvents.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f04d5-281">システム イベント通知は、現在のコンテキストではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="f04d5-281">System event notifications are not supported under the current context.</span></span> <span data-ttu-id="f04d5-282">たとえば、サーバー プロセスがグローバル システム イベント通知をサポートしていない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="f04d5-282">Server processes, for example, might not support global system event notifications.</span></span></exception>
        <exception cref="T:System.Runtime.InteropServices.ExternalException"><span data-ttu-id="f04d5-283">システム イベント ウィンドウ スレッドの作成が成功しませんでした。</span><span class="sxs-lookup"><span data-stu-id="f04d5-283">The attempt to create a system events window thread did not succeed.</span></span></exception>
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventArgs" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceChangingEventHandler" />
        <altmember cref="T:Microsoft.Win32.UserPreferenceCategory" />
      </Docs>
    </Member>
  </Members>
</Type>
