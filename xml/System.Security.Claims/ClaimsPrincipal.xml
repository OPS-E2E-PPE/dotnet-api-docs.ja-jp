<Type Name="ClaimsPrincipal" FullName="System.Security.Claims.ClaimsPrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a610245eab22704917f4336e879786d118303ba" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78834000" /></Metadata><TypeSignature Language="C#" Value="public class ClaimsPrincipal : System.Security.Principal.IPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimsPrincipal extends System.Object implements class System.Security.Principal.IPrincipal" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsPrincipal&#xA;Implements IPrincipal" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsPrincipal : System::Security::Principal::IPrincipal" />
  <TypeSignature Language="F#" Value="type ClaimsPrincipal = class&#xA;    interface IPrincipal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClaimsPrincipal extends System.Object implements class System.Security.Principal.IPrincipal" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Claims</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IPrincipal</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="806e8-101">複数の要求ベース ID をサポートする <see cref="T:System.Security.Principal.IPrincipal" /> 実装。</span><span class="sxs-lookup"><span data-stu-id="806e8-101">An <see cref="T:System.Security.Principal.IPrincipal" /> implementation that supports multiple claims-based identities.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-102">.NET Framework 4.5 以降では、Windows Identity Foundation (WIF) とクレームベースの id が .NET Framework に完全に統合されています。</span><span class="sxs-lookup"><span data-stu-id="806e8-102">Beginning with .NET Framework 4.5, Windows Identity Foundation (WIF) and claims-based identity have been fully integrated into the .NET Framework.</span></span> <span data-ttu-id="806e8-103">これは、.NET Framework 内のプリンシパルを表す多くのクラスが、単に <xref:System.Security.Principal.IPrincipal> インターフェイスを実装するのではなく、<xref:System.Security.Claims.ClaimsPrincipal> から派生するようになったことを意味します。</span><span class="sxs-lookup"><span data-stu-id="806e8-103">This means that many classes that represent a principal in the .NET Framework now derive from <xref:System.Security.Claims.ClaimsPrincipal> rather than simply implementing the <xref:System.Security.Principal.IPrincipal> interface.</span></span> <span data-ttu-id="806e8-104"><xref:System.Security.Principal.IPrincipal> インターフェイスの実装に加えて、<xref:System.Security.Claims.ClaimsPrincipal> は、クレームを操作するのに役立つプロパティとメソッドを公開します。</span><span class="sxs-lookup"><span data-stu-id="806e8-104">In addition to implementing the <xref:System.Security.Principal.IPrincipal> interface, <xref:System.Security.Claims.ClaimsPrincipal> exposes properties and methods that are useful for working with claims.</span></span>  
  
 <span data-ttu-id="806e8-105"><xref:System.Security.Claims.ClaimsPrincipal> は、それぞれが <xref:System.Security.Claims.ClaimsIdentity>である id のコレクションを公開します。</span><span class="sxs-lookup"><span data-stu-id="806e8-105"><xref:System.Security.Claims.ClaimsPrincipal> exposes a collection of identities, each of which is a <xref:System.Security.Claims.ClaimsIdentity>.</span></span> <span data-ttu-id="806e8-106">一般的なケースでは、このコレクションには、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> プロパティを使用してアクセスすると、1つの要素のみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="806e8-106">In the common case, this collection, which is accessed through the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> property, will only have a single element.</span></span>  
  
 <span data-ttu-id="806e8-107">ほとんどのプリンシパルクラスの派生元であるプリンシパルとして .NET 4.5 の <xref:System.Security.Claims.ClaimsPrincipal> を導入することで、id の処理方法を変更する必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="806e8-107">The introduction of <xref:System.Security.Claims.ClaimsPrincipal> in .NET 4.5 as the principal from which most principal classes derive does not force you to change anything in the way in which you deal with identity.</span></span> <span data-ttu-id="806e8-108">ただし、より多くの可能性があり、より詳細なアクセス制御を実行する可能性が高くなります。</span><span class="sxs-lookup"><span data-stu-id="806e8-108">It does, however open up more possibilities and offer more chances to exercise finer access control.</span></span> <span data-ttu-id="806e8-109">例 :</span><span class="sxs-lookup"><span data-stu-id="806e8-109">For example:</span></span>  
  
-   <span data-ttu-id="806e8-110">アプリケーションコード自体は、現在のプリンシパルに含まれるクレームを直接操作して、認証、承認、およびパーソナル化の追加タスクを実行できます。</span><span class="sxs-lookup"><span data-stu-id="806e8-110">The application code itself can work directly with the claims contained in the current principal to drive extra authentication, authorization, and personalization tasks.</span></span>  
  
-   <span data-ttu-id="806e8-111">リソースの前に要求処理パイプラインを使用できます。これにより、実行がコードに到達する前であっても認証要求と承認ポリシーを処理できます。</span><span class="sxs-lookup"><span data-stu-id="806e8-111">You can front your resources with a claims processing pipeline, which can deal with authentication requests and authorization policy even before execution reaches your code.</span></span> <span data-ttu-id="806e8-112">たとえば、<xref:System.Security.Claims.ClaimsAuthenticationManager> クラスから派生したクラスのインスタンスであるカスタムクレーム認証マネージャーを使用して、web ベースのアプリケーションまたはサービスを構成できます。</span><span class="sxs-lookup"><span data-stu-id="806e8-112">For example, you can configure a web-based application or service with a custom claims authentication manager, an instance of a class that derives from the <xref:System.Security.Claims.ClaimsAuthenticationManager> class.</span></span> <span data-ttu-id="806e8-113">このように構成されている場合、要求処理パイプラインは、要求認証マネージャーの <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> メソッドを呼び出して、受信要求のコンテキストを表す <xref:System.Security.Claims.ClaimsPrincipal> を渡します。</span><span class="sxs-lookup"><span data-stu-id="806e8-113">When so configured, the request processing pipeline invokes the <xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A> method on your claims authentication manager passing it a <xref:System.Security.Claims.ClaimsPrincipal> that represents the context of the incoming request.</span></span> <span data-ttu-id="806e8-114">要求認証マネージャーは、入力方向の要求の値に基づいて認証を実行できます。</span><span class="sxs-lookup"><span data-stu-id="806e8-114">Your claims authentication manager can then perform authentication based on the values of the incoming claims.</span></span> <span data-ttu-id="806e8-115">また、要求をフィルター処理、変換、または入力方向の要求セットに追加することもできます。</span><span class="sxs-lookup"><span data-stu-id="806e8-115">It can also filter, transform, or add claims to the incoming claim set.</span></span> <span data-ttu-id="806e8-116">たとえば、ローカルユーザープロファイルなど、ローカルデータソースから作成された新しい要求で入力方向の要求セットを強化するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="806e8-116">For example, it could be used to enrich the incoming claim set with new claims created from a local data source such as a local user profile</span></span>  
  
-   <span data-ttu-id="806e8-117"><xref:System.Security.Claims.ClaimsAuthorizationManager> クラスから派生するクラスのインスタンスであるカスタムクレーム承認マネージャーを使用して、web ベースのアプリケーションを構成できます。</span><span class="sxs-lookup"><span data-stu-id="806e8-117">You can configure a web-based application with a custom claims authorization manager, an instance of a class that derives from the <xref:System.Security.Claims.ClaimsAuthorizationManager> class.</span></span> <span data-ttu-id="806e8-118">このように構成されている場合、要求処理パイプラインは、受信 <xref:System.Security.Claims.ClaimsPrincipal> を <xref:System.Security.Claims.AuthorizationContext> にパッケージ化し、要求承認マネージャーで <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="806e8-118">When so configured, the request processing pipeline packages the incoming <xref:System.Security.Claims.ClaimsPrincipal> in an <xref:System.Security.Claims.AuthorizationContext> and invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> method on your claims authorization manager.</span></span> <span data-ttu-id="806e8-119">要求承認マネージャーは、入力方向の要求に基づいて承認を強制できます。</span><span class="sxs-lookup"><span data-stu-id="806e8-119">Your claims authorization manager can then enforce authorization based on the incoming claims.</span></span>  
  
-   <span data-ttu-id="806e8-120">インライン要求ベースのコードアクセスチェックを実行するには、カスタムクレーム承認マネージャーを使用してアプリケーションを構成し、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission> クラスを使用して命令型アクセスチェックを実行するか、<xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> を使用して宣言型アクセスチェックを実行します。</span><span class="sxs-lookup"><span data-stu-id="806e8-120">Inline claims-based code access checks can be performed by configuring your application with a custom claims authorization manager and using either the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class to perform imperative access checks or the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> to perform declarative access checks.</span></span> <span data-ttu-id="806e8-121">要求ベースのコードアクセスチェックは、処理パイプラインの外部でインラインで実行されます。そのため、要求承認マネージャーが構成されていれば、すべてのアプリケーションで使用できます。</span><span class="sxs-lookup"><span data-stu-id="806e8-121">Claims-based code access checks are performed inline, outside of the processing pipeline, and so are available to all applications as long as a claims authorization manager is configured.</span></span>  
  
 <span data-ttu-id="806e8-122">RP アプリケーションの要求に関連付けられているプリンシパルの <xref:System.Security.Claims.ClaimsPrincipal> インスタンス (または、スレッドが実行されているプリンシパル) を取得するには、<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> プロパティを <xref:System.Security.Claims.ClaimsPrincipal>にキャストします。</span><span class="sxs-lookup"><span data-stu-id="806e8-122">You can obtain a <xref:System.Security.Claims.ClaimsPrincipal> instance for the principal associated with a request in an RP application (or the principal under which a thread is executing) by casting the <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property to <xref:System.Security.Claims.ClaimsPrincipal>.</span></span> <span data-ttu-id="806e8-123"><xref:System.Security.Claims.ClaimsPrincipal> オブジェクトに関連付けられている要求は、<xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> プロパティを通じて取得できます。</span><span class="sxs-lookup"><span data-stu-id="806e8-123">The claims associated with an <xref:System.Security.Claims.ClaimsPrincipal> object are available through its <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property.</span></span> <span data-ttu-id="806e8-124"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> プロパティは、プリンシパルに関連付けられている id に含まれるすべてのクレームを返します。</span><span class="sxs-lookup"><span data-stu-id="806e8-124">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property returns all of the claims contained by the identities associated with the principal.</span></span> <span data-ttu-id="806e8-125"><xref:System.Security.Claims.ClaimsPrincipal> に複数の <xref:System.Security.Claims.ClaimsIdentity> インスタンスが含まれている一般的なケースでは、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> プロパティを使用するか、<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> プロパティを使用してプライマリ id にアクセスすることができます。</span><span class="sxs-lookup"><span data-stu-id="806e8-125">In the uncommon case in which the <xref:System.Security.Claims.ClaimsPrincipal> contains multiple <xref:System.Security.Claims.ClaimsIdentity> instances, you can use the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> property or you can access the primary identity by using the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span> <span data-ttu-id="806e8-126"><xref:System.Security.Claims.ClaimsPrincipal> には、これらの要求を検索して、統合言語クエリ (LINQ) を完全にサポートするための方法がいくつか用意されています。</span><span class="sxs-lookup"><span data-stu-id="806e8-126"><xref:System.Security.Claims.ClaimsPrincipal> provides several methods through which these claims may be searched and fully supports Language Integrated Query (LINQ).</span></span> <span data-ttu-id="806e8-127"><xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A> または <xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A> メソッドを使用して、プリンシパルに id を追加できます。</span><span class="sxs-lookup"><span data-stu-id="806e8-127">Identities can be added to the principal by using the <xref:System.Security.Claims.ClaimsPrincipal.AddIdentities%2A> or <xref:System.Security.Claims.ClaimsPrincipal.AddIdentity%2A> methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="806e8-128"><xref:System.Security.Claims.ClaimsPrincipal>に id を追加するには、呼び出し元に完全信頼が必要です。</span><span class="sxs-lookup"><span data-stu-id="806e8-128">To add identities to the <xref:System.Security.Claims.ClaimsPrincipal>, a caller must have full trust.</span></span>  
  
 <span data-ttu-id="806e8-129">既定では、WIF は <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> プロパティを通じて返すプライマリ id を選択するときに、<xref:System.Security.Principal.WindowsIdentity> オブジェクトの優先順位を設定します。</span><span class="sxs-lookup"><span data-stu-id="806e8-129">By default, WIF prioritizes <xref:System.Security.Principal.WindowsIdentity> objects when selecting the primary identity to return through the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span> <span data-ttu-id="806e8-130">この動作を変更するには、<xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A> プロパティを使用してデリゲートを指定し、選択を実行します。</span><span class="sxs-lookup"><span data-stu-id="806e8-130">You can modify this behavior by supplying a delegate through the <xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A> property to perform the selection.</span></span> <span data-ttu-id="806e8-131"><xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A> プロパティは、<xref:System.Security.Claims.ClaimsPrincipal.Current%2A> プロパティと同様の機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="806e8-131">The <xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A> property provides similar functionality for the <xref:System.Security.Claims.ClaimsPrincipal.Current%2A> property.</span></span>  
  
 <span data-ttu-id="806e8-132">要求ベースのモデルでは、指定されたロールにプリンシパルがあるかどうかは、基になる id によって提示される要求によって決まります。</span><span class="sxs-lookup"><span data-stu-id="806e8-132">In the claim-based model, whether a principal is in a specified role is determined by the claims presented by its underlying identities.</span></span> <span data-ttu-id="806e8-133"><xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A> メソッドは、基本的にプリンシパルに関連付けられている各 id を調べて、指定されたロール値を持つクレームを所有しているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="806e8-133">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A> method essentially examines each identity associated with the principal to determine whether it possesses a claim with the specified role value.</span></span> <span data-ttu-id="806e8-134">ロールチェック中に検査する要求を決定するために使用されるクレームの種類 (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType> プロパティによって表されます) は、<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> プロパティを通じて id に対して指定されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-134">The type of the claim (represented by its <xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType> property) used to determine which claims should be examined during role checks is specified on an identity through its <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="806e8-135">このため、ロールチェック中に検査される要求は、プリンシパルに関連付けられている異なる id に対して異なる種類にすることができます。</span><span class="sxs-lookup"><span data-stu-id="806e8-135">Thus, the claims examined during role checks can be of a different type for different identities associated with the principal.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="806e8-136">次の例では、HTTP 要求でユーザーによって提示されたクレームを抽出し、HTTP 応答に書き込みます。</span><span class="sxs-lookup"><span data-stu-id="806e8-136">The following example extracts the claims presented by a user in an HTTP request and writes them to the HTTP response.</span></span> <span data-ttu-id="806e8-137">現在のユーザーは、<xref:System.Web.HttpContext> から <xref:System.Security.Claims.ClaimsPrincipal>として読み取られます。</span><span class="sxs-lookup"><span data-stu-id="806e8-137">The current user is read from the <xref:System.Web.HttpContext> as a <xref:System.Security.Claims.ClaimsPrincipal>.</span></span> <span data-ttu-id="806e8-138">その後、クレームが読み取られ、応答に書き込まれます。</span><span class="sxs-lookup"><span data-stu-id="806e8-138">The claims are then read from it and then are written to the response.</span></span>  
  
```csharp
ClaimsPrincipal principal = HttpContext.Current.User as ClaimsPrincipal;  
if (null != principal)  
{  
   foreach (Claim claim in principal.Claims)  
   {  
      Response.Write("CLAIM TYPE: " + claim.Type + "; CLAIM VALUE: " + claim.Value + "</br>");  
   }  
}  
```

      ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Claims.Claim" />
    <altmember cref="T:System.Security.Claims.ClaimsIdentity" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthenticationManager" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthorizationManager" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="806e8-139"><see cref="T:System.Security.Claims.ClaimsPrincipal" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="806e8-139">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="806e8-140"><see cref="T:System.Security.Claims.ClaimsPrincipal" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="806e8-140">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-141">新しいインスタンスに関連付けられている id がありません。</span><span class="sxs-lookup"><span data-stu-id="806e8-141">No identities are associated with the new instance.</span></span> <span data-ttu-id="806e8-142">(<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> コレクションが空です)。</span><span class="sxs-lookup"><span data-stu-id="806e8-142">(The <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is empty).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; identities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; identities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identities As IEnumerable(Of ClaimsIdentity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ identities);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : seq&lt;System.Security.Claims.ClaimsIdentity&gt; -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal identities" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identities" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;" />
      </Parameters>
      <Docs>
        <param name="identities"><span data-ttu-id="806e8-143">新しい要求プリンシパルの初期化元 ID。</span><span class="sxs-lookup"><span data-stu-id="806e8-143">The identities from which to initialize the new claims principal.</span></span></param>
        <summary><span data-ttu-id="806e8-144">指定した要求 ID を使用して、<see cref="T:System.Security.Claims.ClaimsPrincipal" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="806e8-144">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class using the specified claims identities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-145"><xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> コレクションは、指定された id で初期化されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-145">The <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is initialized with the specified identities.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-146"><paramref name="identities" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-146"><paramref name="identities" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal reader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="806e8-147"><see cref="T:System.IO.BinaryReader" /> を示す <see cref="T:System.Security.Claims.ClaimsPrincipal" />。</span><span class="sxs-lookup"><span data-stu-id="806e8-147">A <see cref="T:System.IO.BinaryReader" /> pointing to a <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span></span></param>
        <summary><span data-ttu-id="806e8-148"><see cref="T:System.Security.Claims.ClaimsPrincipal" /> を指定して、<see cref="T:System.IO.BinaryReader" /> のインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="806e8-148">Initializes an instance of <see cref="T:System.Security.Claims.ClaimsPrincipal" /> with the specified <see cref="T:System.IO.BinaryReader" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-149">通常、<xref:System.IO.BinaryReader> は <xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A> のバイトを使用して構築され、<xref:System.IO.BinaryWriter>と同じ方法で初期化されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-149">Normally, the <xref:System.IO.BinaryReader> is constructed using the bytes from <xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A> and initialized in the same way as the <xref:System.IO.BinaryWriter>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-150"><paramref name="reader" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="806e8-150"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.Security.Principal.IIdentity -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="806e8-151">新しい要求プリンシパルの初期化元 ID。</span><span class="sxs-lookup"><span data-stu-id="806e8-151">The identity from which to initialize the new claims principal.</span></span></param>
        <summary><span data-ttu-id="806e8-152">指定された ID から <see cref="T:System.Security.Claims.ClaimsPrincipal" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="806e8-152">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from the specified identity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-153">指定した id が <xref:System.Security.Claims.ClaimsIdentity>から割り当て可能な場合は、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> コレクションを初期化するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-153">If the specified identity is assignable from <xref:System.Security.Claims.ClaimsIdentity>, it is used to initialize the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span> <span data-ttu-id="806e8-154">それ以外の場合は、指定された id を使用して <xref:System.Security.Claims.ClaimsIdentity> が作成され、コレクションの初期化に使用されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-154">Otherwise, a <xref:System.Security.Claims.ClaimsIdentity> is created using the specified identity and is used to initialize the collection.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-155"><paramref name="identity" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-155"><paramref name="identity" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipal (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As IPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipal(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.Security.Principal.IPrincipal -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal principal" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="806e8-156">新しい要求プリンシパルの初期化元となるプリンシパル。</span><span class="sxs-lookup"><span data-stu-id="806e8-156">The principal from which to initialize the new claims principal.</span></span></param>
        <summary><span data-ttu-id="806e8-157">指定されたプリンシパルから <see cref="T:System.Security.Claims.ClaimsPrincipal" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="806e8-157">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from the specified principal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-158">指定したプリンシパルが <xref:System.Security.Claims.ClaimsPrincipal>から割り当て可能な場合、そのすべての id が <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-158">If the specified principal is assignable from <xref:System.Security.Claims.ClaimsPrincipal>, all of its identities are added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span> <span data-ttu-id="806e8-159">指定したプリンシパルを <xref:System.Security.Claims.ClaimsPrincipal>から割り当てることができない場合は、<xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> プロパティの <xref:System.Security.Principal.IIdentity> から新しい <xref:System.Security.Claims.ClaimsIdentity> が作成され、<xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-159">If the specified principal is not assignable from <xref:System.Security.Claims.ClaimsPrincipal>, a new <xref:System.Security.Claims.ClaimsIdentity> is created from the <xref:System.Security.Principal.IIdentity> in its <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> property and added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-160"><paramref name="principal" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-160"><paramref name="principal" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsPrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsPrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Security.Claims.ClaimsPrincipal : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Security.Claims.ClaimsPrincipal" Usage="new System.Security.Claims.ClaimsPrincipal (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="806e8-161">シリアル化データ。</span><span class="sxs-lookup"><span data-stu-id="806e8-161">The serialized data.</span></span></param>
        <param name="context"><span data-ttu-id="806e8-162">シリアル化のコンテキスト。</span><span class="sxs-lookup"><span data-stu-id="806e8-162">The context for serialization.</span></span></param>
        <summary><span data-ttu-id="806e8-163"><see cref="T:System.Security.Claims.ClaimsPrincipal" /> を使用して作成されたシリアル化ストリームから、<see cref="T:System.Runtime.Serialization.ISerializable" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="806e8-163">Initializes a new instance of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> class from a serialized stream created by using <see cref="T:System.Runtime.Serialization.ISerializable" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-164"><paramref name="info" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-164"><paramref name="info" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddIdentities">
      <MemberSignature Language="C#" Value="public virtual void AddIdentities (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; identities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddIdentities(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; identities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddIdentities (identities As IEnumerable(Of ClaimsIdentity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddIdentities(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ identities);" />
      <MemberSignature Language="F#" Value="abstract member AddIdentities : seq&lt;System.Security.Claims.ClaimsIdentity&gt; -&gt; unit&#xA;override this.AddIdentities : seq&lt;System.Security.Claims.ClaimsIdentity&gt; -&gt; unit" Usage="claimsPrincipal.AddIdentities identities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identities" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;" />
      </Parameters>
      <Docs>
        <param name="identities"><span data-ttu-id="806e8-165">追加する要求 ID。</span><span class="sxs-lookup"><span data-stu-id="806e8-165">The claims identities to add.</span></span></param>
        <summary><span data-ttu-id="806e8-166">指定された要求 ID をこの要求プリンシパルに追加します。</span><span class="sxs-lookup"><span data-stu-id="806e8-166">Adds the specified claims identities to this claims principal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-167">Id は <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-167">The identities are added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-168"><paramref name="identities" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-168"><paramref name="identities" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddIdentity">
      <MemberSignature Language="C#" Value="public virtual void AddIdentity (System.Security.Claims.ClaimsIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddIdentity(class System.Security.Claims.ClaimsIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddIdentity (identity As ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddIdentity(System::Security::Claims::ClaimsIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="abstract member AddIdentity : System.Security.Claims.ClaimsIdentity -&gt; unit&#xA;override this.AddIdentity : System.Security.Claims.ClaimsIdentity -&gt; unit" Usage="claimsPrincipal.AddIdentity identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Claims.ClaimsIdentity" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="806e8-169">追加する要求 ID。</span><span class="sxs-lookup"><span data-stu-id="806e8-169">The claims identity to add.</span></span></param>
        <summary><span data-ttu-id="806e8-170">指定された要求 ID をこの要求プリンシパルに追加します。</span><span class="sxs-lookup"><span data-stu-id="806e8-170">Adds the specified claims identity to this claims principal.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-171">Id が <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> コレクションに追加されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-171">The identity is added to the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-172"><paramref name="identity" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-172"><paramref name="identity" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : seq&lt;System.Security.Claims.Claim&gt;" Usage="System.Security.Claims.ClaimsPrincipal.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Claims.ClaimsPrincipal/&lt;get_Claims&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Security.Claims.ClaimsPrincipal/&lt;get_Claims&gt;d__37))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="806e8-173">この要求プリンシパルと関連付けられているすべての要求 ID のすべての要求を含むコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="806e8-173">Gets a collection that contains all of the claims from all of the claims identities associated with this claims principal.</span></span></summary>
        <value><span data-ttu-id="806e8-174">このプリンシパルに関連付けられた要求。</span><span class="sxs-lookup"><span data-stu-id="806e8-174">The claims associated with this principal.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-175">要求プリンシパルには、Identity プロパティを介してアクセスできる <xref:System.Security.Claims.ClaimsIdentity> オブジェクトのコレクションがあります。</span><span class="sxs-lookup"><span data-stu-id="806e8-175">A claims principal has a collection of <xref:System.Security.Claims.ClaimsIdentity> objects that is accessible through the Identities property.</span></span> <span data-ttu-id="806e8-176">コレクション内の各 <xref:System.Security.Claims.ClaimsIdentity> には、1つまたは複数のクレームが含まれます。</span><span class="sxs-lookup"><span data-stu-id="806e8-176">Each <xref:System.Security.Claims.ClaimsIdentity> in the collection contains one or more claims.</span></span> <span data-ttu-id="806e8-177"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> プロパティは、このコレクション内のすべてのクレーム id からのすべてのクレームを返します。</span><span class="sxs-lookup"><span data-stu-id="806e8-177">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property returns all of the claims from all of the claims identities in this collection.</span></span>  
  
 <span data-ttu-id="806e8-178"><xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> プロパティは、<xref:System.Security.Claims.ClaimsAuthenticationManager> クラスのカスタム実装によって調べることができます。これにより、認証の決定や、入力方向の要求セットのフィルター処理、変換、強化を行うことができます。<xref:System.Security.Claims.ClaimsAuthorizationManager> クラスのカスタム実装により、承認ポリシーを適用します。または、アプリケーションコードによって、承認に関する決定を行ったり、コレクション内に存在する要求に基づいてユーザーエクスペリエンスをカスタマイズしたりすることができます。</span><span class="sxs-lookup"><span data-stu-id="806e8-178">The <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> property can be examined by custom implementations of the <xref:System.Security.Claims.ClaimsAuthenticationManager> class to make authentication decisions or to filter, transform, or enrich an incoming claim set; by custom implementations of the <xref:System.Security.Claims.ClaimsAuthorizationManager> class to enforce authorization policy; or by application code to make authorization decisions or to customize user experience based on the claims present in the collection.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimsPrincipalSelector">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Security.Claims.ClaimsPrincipal&gt; ClaimsPrincipalSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`1&lt;class System.Security.Claims.ClaimsPrincipal&gt; ClaimsPrincipalSelector" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ClaimsPrincipalSelector As Func(Of ClaimsPrincipal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ ClaimsPrincipalSelector { Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ get(); void set(Func&lt;System::Security::Claims::ClaimsPrincipal ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClaimsPrincipalSelector : Func&lt;System.Security.Claims.ClaimsPrincipal&gt; with get, set" Usage="System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Security.Claims.ClaimsPrincipal&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="806e8-179"><see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /> プロパティによって返される要求プリンシパルを選択するために使用するデリゲートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="806e8-179">Gets or sets the delegate used to select the claims principal returned by the <see cref="P:System.Security.Claims.ClaimsPrincipal.Current" /> property.</span></span></summary>
        <value><span data-ttu-id="806e8-180">デリゲート。</span><span class="sxs-lookup"><span data-stu-id="806e8-180">The delegate.</span></span> <span data-ttu-id="806e8-181">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="806e8-181">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-182">このプロパティを設定すると、<xref:System.Security.Claims.ClaimsPrincipal.Current%2A> プロパティの既定の動作をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="806e8-182">You can set this property to override the default behavior of the <xref:System.Security.Claims.ClaimsPrincipal.Current%2A> property.</span></span>

          ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Current" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsPrincipal Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsPrincipal Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsPrincipal ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Security.Claims.ClaimsPrincipal&#xA;override this.Clone : unit -&gt; System.Security.Claims.ClaimsPrincipal" Usage="claimsPrincipal.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="806e8-183">このインスタンスの新しいコピーを作成します。</span><span class="sxs-lookup"><span data-stu-id="806e8-183">Returns a copy of this instance.</span></span></summary>
        <returns><span data-ttu-id="806e8-184"><see cref="T:System.Security.Claims.ClaimsPrincipal" /> オブジェクトの新しいコピーです。</span><span class="sxs-lookup"><span data-stu-id="806e8-184">A new copy of the <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClaimsIdentity">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.ClaimsIdentity CreateClaimsIdentity (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity CreateClaimsIdentity(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateClaimsIdentity (reader As BinaryReader) As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ CreateClaimsIdentity(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="abstract member CreateClaimsIdentity : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsIdentity&#xA;override this.CreateClaimsIdentity : System.IO.BinaryReader -&gt; System.Security.Claims.ClaimsIdentity" Usage="claimsPrincipal.CreateClaimsIdentity reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="806e8-185">バイナリ リーダー。</span><span class="sxs-lookup"><span data-stu-id="806e8-185">The binary reader.</span></span></param>
        <summary><span data-ttu-id="806e8-186">新しい要求の ID を作成します。</span><span class="sxs-lookup"><span data-stu-id="806e8-186">Creates a new claims identity.</span></span></summary>
        <returns><span data-ttu-id="806e8-187">作成された要求 ID。</span><span class="sxs-lookup"><span data-stu-id="806e8-187">The created claims identity.</span></span></returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-188"><paramref name="reader" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="806e8-188"><paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Security.Claims.ClaimsPrincipal Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Claims.ClaimsPrincipal Current" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Current As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Claims::ClaimsPrincipal ^ Current { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Security.Claims.ClaimsPrincipal" Usage="System.Security.Claims.ClaimsPrincipal.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="806e8-189">現在の要求プリンシパルを取得します。</span><span class="sxs-lookup"><span data-stu-id="806e8-189">Gets the current claims principal.</span></span></summary>
        <value><span data-ttu-id="806e8-190">現在の要求プリンシパル。</span><span class="sxs-lookup"><span data-stu-id="806e8-190">The current claims principal.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-191">既定では <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> が返されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-191">By default, <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> is returned.</span></span> <span data-ttu-id="806e8-192">この動作を変更するには、<xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A> プロパティを設定して、現在のプリンシパルを決定するために呼び出すデリゲートを指定します。</span><span class="sxs-lookup"><span data-stu-id="806e8-192">You can change this behavior by setting the <xref:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector%2A> property to specify a delegate to be called to determine the current principal.</span></span>

          ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector" />
      </Docs>
    </Member>
    <Member MemberName="CustomSerializationData">
      <MemberSignature Language="C#" Value="protected virtual byte[] CustomSerializationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CustomSerializationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.CustomSerializationData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CustomSerializationData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ CustomSerializationData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomSerializationData : byte[]" Usage="System.Security.Claims.ClaimsPrincipal.CustomSerializationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="806e8-193">派生型によって提供される追加データが含まれています。</span><span class="sxs-lookup"><span data-stu-id="806e8-193">Contains any additional data provided by a derived type.</span></span> <span data-ttu-id="806e8-194">通常、<see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" /> の呼び出し時に設定されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-194">Typically set when calling <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />.</span></span></summary>
        <value><span data-ttu-id="806e8-195">追加のシリアル化されたデータを表す <see cref="T:System.Byte" /> 配列。</span><span class="sxs-lookup"><span data-stu-id="806e8-195">A <see cref="T:System.Byte" /> array representing the additional serialized data.</span></span></value>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAll">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="806e8-196">指定した条件に一致する要求をすべて取得します。</span><span class="sxs-lookup"><span data-stu-id="806e8-196">Retrieves all of the claims that match a specified condition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (match As Predicate(Of Claim)) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsPrincipal.FindAll match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="806e8-197">一致するロジックを実行する関数。</span><span class="sxs-lookup"><span data-stu-id="806e8-197">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="806e8-198">指定された述語と一致するすべての要求を取得します。</span><span class="sxs-lookup"><span data-stu-id="806e8-198">Retrieves all of the claims that are matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="806e8-199">一致する要求。</span><span class="sxs-lookup"><span data-stu-id="806e8-199">The matching claims.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-200">クレームプリンシパルに関連付けられているすべての id からのクレームを返します。</span><span class="sxs-lookup"><span data-stu-id="806e8-200">Returns claims from all identities associated with the claims principal.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-201"><paramref name="match" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-201"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (type As String) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;&#xA;override this.FindAll : string -&gt; seq&lt;System.Security.Claims.Claim&gt;" Usage="claimsPrincipal.FindAll type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="806e8-202">要求の照合対象となる要求の種類。</span><span class="sxs-lookup"><span data-stu-id="806e8-202">The claim type against which to match claims.</span></span></param>
        <summary><span data-ttu-id="806e8-203">すべての要求、または指定された要求の種類を持つ要求を取得します。</span><span class="sxs-lookup"><span data-stu-id="806e8-203">Retrieves all or the claims that have the specified claim type.</span></span></summary>
        <returns><span data-ttu-id="806e8-204">一致する要求。</span><span class="sxs-lookup"><span data-stu-id="806e8-204">The matching claims.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-205">クレームプリンシパルに関連付けられているすべての id からのクレームを返します。</span><span class="sxs-lookup"><span data-stu-id="806e8-205">Returns claims from all identities associated with the claims principal.</span></span> <span data-ttu-id="806e8-206">`type`では、序数に基づく大文字小文字の区別を使用して比較が行われます。</span><span class="sxs-lookup"><span data-stu-id="806e8-206">The comparison is made using Ordinal case in-sensitive on `type`.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-207"><paramref name="type" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-207"><paramref name="type" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindFirst">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="806e8-208">指定した条件に一致する最初の要求を取得します。</span><span class="sxs-lookup"><span data-stu-id="806e8-208">Retrieves the first claim that matches a specified condition.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (match As Predicate(Of Claim)) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; System.Security.Claims.Claim" Usage="claimsPrincipal.FindFirst match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="806e8-209">一致するロジックを実行する関数。</span><span class="sxs-lookup"><span data-stu-id="806e8-209">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="806e8-210">指定された述語と一致した最初の要求を取得します。</span><span class="sxs-lookup"><span data-stu-id="806e8-210">Retrieves the first claim that is matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="806e8-211">一致が検出されない場合は、最初に一致する要求または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="806e8-211">The first matching claim or <see langword="null" /> if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="806e8-212">各 <xref:System.Security.Claims.ClaimsIdentity> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-212">Each <xref:System.Security.Claims.ClaimsIdentity> is called.</span></span> 

## <a name="see-also"></a><span data-ttu-id="806e8-213">参照</span><span class="sxs-lookup"><span data-stu-id="806e8-213">See also</span></span>
<xref:System.Security.Claims.ClaimsIdentity.FindFirst(System.String)?displayProperty=nameWithType>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-214"><paramref name="match" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-214"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (type As String) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(System::String ^ type);" />
      <MemberSignature Language="F#" Value="abstract member FindFirst : string -&gt; System.Security.Claims.Claim&#xA;override this.FindFirst : string -&gt; System.Security.Claims.Claim" Usage="claimsPrincipal.FindFirst type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="806e8-215">一致する要求の種類。</span><span class="sxs-lookup"><span data-stu-id="806e8-215">The claim type to match.</span></span></param>
        <summary><span data-ttu-id="806e8-216">指定した要求の種類を持つ最初の要求を取得します。</span><span class="sxs-lookup"><span data-stu-id="806e8-216">Retrieves the first claim with the specified claim type.</span></span></summary>
        <returns><span data-ttu-id="806e8-217">一致が検出されない場合は、最初に一致する要求または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="806e8-217">The first matching claim or <see langword="null" /> if no match is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="806e8-218">各 <xref:System.Security.Claims.ClaimsIdentity> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-218">Each <xref:System.Security.Claims.ClaimsIdentity> is called.</span></span>

 ## <a name="see-also"></a><span data-ttu-id="806e8-219">参照</span><span class="sxs-lookup"><span data-stu-id="806e8-219">See also</span></span>
 
  <span data-ttu-id="806e8-220">[https://login.microsoftonline.com/consumers/](<xref:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="806e8-220"><xref:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-221"><paramref name="type" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-221"><paramref name="type" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="claimsPrincipal.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="806e8-222">データを読み込む先の オブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="806e8-222">The object to populate with data.</span></span></param>
        <param name="context"><span data-ttu-id="806e8-223">このシリアル化のシリアル化先です。</span><span class="sxs-lookup"><span data-stu-id="806e8-223">The destination for this serialization.</span></span> <span data-ttu-id="806e8-224"><see langword="null" /> を指定できます。</span><span class="sxs-lookup"><span data-stu-id="806e8-224">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="806e8-225"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、現在の <see cref="T:System.Security.Claims.ClaimsPrincipal" /> オブジェクトをシリアル化するために必要なすべてのデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="806e8-225">Populates the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with data needed to serialize the current <see cref="T:System.Security.Claims.ClaimsPrincipal" /> object.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-226"><paramref name="info" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="806e8-226"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasClaim">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="806e8-227">この要求プリンシパルに関連付けられているクレーム ID のいずれかに、指定された条件と一致する要求が含まれているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="806e8-227">Determines whether any of the claims identities associated with this claims principal contains a claim that matches specified conditions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (match As Predicate(Of Claim)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool&#xA;override this.HasClaim : Predicate&lt;System.Security.Claims.Claim&gt; -&gt; bool" Usage="claimsPrincipal.HasClaim match" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match"><span data-ttu-id="806e8-228">一致するロジックを実行する関数。</span><span class="sxs-lookup"><span data-stu-id="806e8-228">The function that performs the matching logic.</span></span></param>
        <summary><span data-ttu-id="806e8-229">この要求プリンシパルに関連付けられている要求 ID のいずれかに、指定された述語と一致する要求が含まれているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="806e8-229">Determines whether any of the claims identities associated with this claims principal contains a claim that is matched by the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="806e8-230">一致する要求が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="806e8-230"><see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="806e8-231">各 <xref:System.Security.Claims.ClaimsIdentity> が呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-231">Each <xref:System.Security.Claims.ClaimsIdentity> is called.</span></span> 

## <a name="see-also"></a><span data-ttu-id="806e8-232">参照</span><span class="sxs-lookup"><span data-stu-id="806e8-232">See also</span></span>

<span data-ttu-id="806e8-233">[https://login.microsoftonline.com/consumers/](<xref:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)?displayProperty=nameWithType>)</span><span class="sxs-lookup"><span data-stu-id="806e8-233"><xref:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)?displayProperty=nameWithType>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-234"><paramref name="match" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-234"><paramref name="match" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (string type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(string type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (type As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(System::String ^ type, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member HasClaim : string * string -&gt; bool&#xA;override this.HasClaim : string * string -&gt; bool" Usage="claimsPrincipal.HasClaim (type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="806e8-235">一致する要求の種類。</span><span class="sxs-lookup"><span data-stu-id="806e8-235">The type of the claim to match.</span></span></param>
        <param name="value"><span data-ttu-id="806e8-236">一致する要求の値。</span><span class="sxs-lookup"><span data-stu-id="806e8-236">The value of the claim to match.</span></span></param>
        <summary><span data-ttu-id="806e8-237">この要求プリンシパルに関連付けられているクレーム ID のいずれかに、指定された要求の種類と値を持つ要求が含まれているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="806e8-237">Determines whether any of the claims identities associated with this claims principal contains a claim with the specified claim type and value.</span></span></summary>
        <returns><span data-ttu-id="806e8-238">一致する要求が存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="806e8-238"><see langword="true" /> if a matching claim exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-239">では、<xref:System.Security.Claims.Claim.Issuer%2A> または <xref:System.Security.Claims.Claim.OriginalIssuer%2A> プロパティは確認されません。</span><span class="sxs-lookup"><span data-stu-id="806e8-239">Does not check the <xref:System.Security.Claims.Claim.Issuer%2A> or <xref:System.Security.Claims.Claim.OriginalIssuer%2A> properties.</span></span> <span data-ttu-id="806e8-240">比較は序数を使用して行われます。大文字と小文字は区別されます。型で大文字と小文字を区別します。</span><span class="sxs-lookup"><span data-stu-id="806e8-240">The comparison is made using Ordinal, case sensitive on value; case in-sensitive on type.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-241"><paramref name="type" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-241"><paramref name="type" /> is **null**.</span></span>  
  
<span data-ttu-id="806e8-242">または</span><span class="sxs-lookup"><span data-stu-id="806e8-242">-or-</span></span> 
 <span data-ttu-id="806e8-243"><paramref name="value" /> が **null** です。</span><span class="sxs-lookup"><span data-stu-id="806e8-243"><paramref name="value" /> is **null**.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Identities">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt; Identities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt; Identities" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Identities" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identities As IEnumerable(Of ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ Identities { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identities : seq&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="System.Security.Claims.ClaimsPrincipal.Identities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="806e8-244">このクレーム プリンシパルと関連付けられているクレーム ID をすべて含むコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="806e8-244">Gets a collection that contains all of the claims identities associated with this claims principal.</span></span></summary>
        <value><span data-ttu-id="806e8-245">クレーム ID のコレクション。</span><span class="sxs-lookup"><span data-stu-id="806e8-245">The collection of claims identities.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-246">一般的なケースでは、コレクションに含まれる要素は1つだけです。</span><span class="sxs-lookup"><span data-stu-id="806e8-246">In the common case, the collection contains only a single element.</span></span>  
  
 <span data-ttu-id="806e8-247">コレクションには、`null`されるいくつかの要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="806e8-247">It is possible for the collection to contain some elements which are `null`.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Security.Claims.ClaimsPrincipal.Identity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IPrincipal.Identity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="806e8-248">この要求プリンシパルに関連付けられたプライマリ要求 ID を取得します。</span><span class="sxs-lookup"><span data-stu-id="806e8-248">Gets the primary claims identity associated with this claims principal.</span></span></summary>
        <value><span data-ttu-id="806e8-249">この要求プリンシパルに関連付けられたプライマリ要求 ID。</span><span class="sxs-lookup"><span data-stu-id="806e8-249">The primary claims identity associated with this claims principal.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-250">既定では、フレームワークは、id を返すときに <xref:System.Security.Principal.WindowsIdentity> 型の id の優先順位を設定します。</span><span class="sxs-lookup"><span data-stu-id="806e8-250">By default, the framework prioritizes identities of type <xref:System.Security.Principal.WindowsIdentity> when returning the identity.</span></span> <span data-ttu-id="806e8-251"><xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> コレクション内の最初の <xref:System.Security.Principal.WindowsIdentity> が返されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-251">The first <xref:System.Security.Principal.WindowsIdentity> found in the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is returned.</span></span> <span data-ttu-id="806e8-252">コレクションに <xref:System.Security.Principal.WindowsIdentity> がない場合は、<xref:System.Security.Claims.ClaimsIdentity> から割り当て可能な最初の id が返されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-252">If there is no <xref:System.Security.Principal.WindowsIdentity> in the collection, the first identity assignable from <xref:System.Security.Claims.ClaimsIdentity> is returned.</span></span> <span data-ttu-id="806e8-253"><xref:System.Security.Claims.ClaimsIdentity>がない場合は、`null` が返されます。</span><span class="sxs-lookup"><span data-stu-id="806e8-253">If there is no <xref:System.Security.Claims.ClaimsIdentity>, `null` is returned.</span></span> <span data-ttu-id="806e8-254"><xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> コレクションが空の場合、<xref:System.ArgumentNullException> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="806e8-254">If the <xref:System.Security.Claims.ClaimsPrincipal.Identities%2A> collection is empty, an <xref:System.ArgumentNullException> is thrown.</span></span>  
  
 <span data-ttu-id="806e8-255">既定の動作を変更するには、<xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A> プロパティを設定して、id を決定するために呼び出すデリゲートを指定します。</span><span class="sxs-lookup"><span data-stu-id="806e8-255">You can change the default behavior by setting the <xref:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector%2A> property to specify a delegate to be called to determine the identity.</span></span>

          ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public virtual bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="abstract member IsInRole : string -&gt; bool&#xA;override this.IsInRole : string -&gt; bool" Usage="claimsPrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Principal.IPrincipal.IsInRole(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role"><span data-ttu-id="806e8-256">確認するロール。</span><span class="sxs-lookup"><span data-stu-id="806e8-256">The role for which to check.</span></span></param>
        <summary><span data-ttu-id="806e8-257">この要求プリンシパルが表すエンティティ (ユーザー) が、指定したロールにあるかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="806e8-257">Returns a value that indicates whether the entity (user) represented by this claims principal is in the specified role.</span></span></summary>
        <returns><span data-ttu-id="806e8-258">要求プリンシパルが指定したロールにある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="806e8-258"><see langword="true" /> if claims principal is in the specified role; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-259"><xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A> メソッドは、このクレームプリンシパルが所有する id に <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> 型のクレームが含まれているかどうかを確認します。この場合、クレームの値は `role` パラメーターで指定された値と等しくなります。</span><span class="sxs-lookup"><span data-stu-id="806e8-259">The <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A> method checks whether an identity that this claims principal possesses contains a claim of type <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> where the value of the claim is equal to the value specified by the `role` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="806e8-260">各 <xref:System.Security.Claims.ClaimsIdentity> には、ロールを表すクレームの種類の独自の定義があります。</span><span class="sxs-lookup"><span data-stu-id="806e8-260">Each <xref:System.Security.Claims.ClaimsIdentity> has its own definition of the claim type that represents a role.</span></span> <span data-ttu-id="806e8-261">この要求の種類には、<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> プロパティを使用してアクセスし、設定することができます。</span><span class="sxs-lookup"><span data-stu-id="806e8-261">This claim type can be accessed and set through the <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A?displayProperty=nameWithType> property.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryIdentitySelector">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;,System.Security.Claims.ClaimsIdentity&gt; PrimaryIdentitySelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`2&lt;class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.ClaimsIdentity&gt;, class System.Security.Claims.ClaimsIdentity&gt; PrimaryIdentitySelector" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property PrimaryIdentitySelector As Func(Of IEnumerable(Of ClaimsIdentity), ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ PrimaryIdentitySelector { Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ get(); void set(Func&lt;System::Collections::Generic::IEnumerable&lt;System::Security::Claims::ClaimsIdentity ^&gt; ^, System::Security::Claims::ClaimsIdentity ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryIdentitySelector : Func&lt;seq&lt;System.Security.Claims.ClaimsIdentity&gt;, System.Security.Claims.ClaimsIdentity&gt; with get, set" Usage="System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.0;dotnet-uwp-10.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Collections.Generic.IEnumerable&lt;System.Security.Claims.ClaimsIdentity&gt;,System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="806e8-262"><see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /> プロパティによって返されるクレーム ID を選択するために使用するデリゲートを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="806e8-262">Gets or sets the delegate used to select the claims identity returned by the <see cref="P:System.Security.Claims.ClaimsPrincipal.Identity" /> property.</span></span></summary>
        <value><span data-ttu-id="806e8-263">デリゲート。</span><span class="sxs-lookup"><span data-stu-id="806e8-263">The delegate.</span></span> <span data-ttu-id="806e8-264">既定では、 <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="806e8-264">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
 <span data-ttu-id="806e8-265">このプロパティを設定すると、<xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> プロパティの既定の動作をオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="806e8-265">You can set this property to override the default behavior of the <xref:System.Security.Claims.ClaimsPrincipal.Identity%2A> property.</span></span>

          ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Identity" />
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteTo (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter -&gt; unit" Usage="claimsPrincipal.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="806e8-266">データ ストレージに使用するライター。</span><span class="sxs-lookup"><span data-stu-id="806e8-266">The writer to use for data storage.</span></span></param>
        <summary><span data-ttu-id="806e8-267"><see cref="T:System.IO.BinaryWriter" /> を使用してシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="806e8-267">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-268"><paramref name="writer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="806e8-268"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer, unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteTo (writer As BinaryWriter, userData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberSignature Language="F#" Value="abstract member WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit&#xA;override this.WriteTo : System.IO.BinaryWriter * byte[] -&gt; unit" Usage="claimsPrincipal.WriteTo (writer, userData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="userData" Type="System.Byte[]" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="806e8-269">データ ストレージに使用するライター。</span><span class="sxs-lookup"><span data-stu-id="806e8-269">The writer to use for data storage.</span></span></param>
        <param name="userData"><span data-ttu-id="806e8-270">派生型によって提供される追加データ。</span><span class="sxs-lookup"><span data-stu-id="806e8-270">Additional data provided by the derived type.</span></span></param>
        <summary><span data-ttu-id="806e8-271"><see cref="T:System.IO.BinaryWriter" /> を使用してシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="806e8-271">Serializes using a <see cref="T:System.IO.BinaryWriter" />.</span></span></summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="806e8-272"><paramref name="writer" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="806e8-272"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
