<Type Name="IPEndPoint" FullName="System.Net.IPEndPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5cdc8961542c658ec8a912d311143b1288e57491" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78695728" /></Metadata><TypeSignature Language="C#" Value="public class IPEndPoint : System.Net.EndPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IPEndPoint extends System.Net.EndPoint" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Net.IPEndPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class IPEndPoint&#xA;Inherits EndPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class IPEndPoint : System::Net::EndPoint" />
  <TypeSignature Language="F#" Value="type IPEndPoint = class&#xA;    inherit EndPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit IPEndPoint extends System.Net.EndPoint" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Net" FromVersion="4.0.0.0" To="System" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Net.EndPoint</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5453a-101">ネットワーク エンドポイントを、IP アドレスとポート番号として表します。</span><span class="sxs-lookup"><span data-stu-id="5453a-101">Represents a network endpoint as an IP address and a port number.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5453a-102"><xref:System.Net.IPEndPoint> クラスには、ホストおよびホスト上のサービスに接続するためにアプリケーションが必要とするローカルまたはリモートのポート情報が含まれています。</span><span class="sxs-lookup"><span data-stu-id="5453a-102">The <xref:System.Net.IPEndPoint> class contains the host and local or remote port information needed by an application to connect to a service on a host.</span></span> <span data-ttu-id="5453a-103">サービスのホストの IP アドレスとポート番号を組み合わせることによって、<xref:System.Net.IPEndPoint> クラスはサービスへのコネクションポイントを形成します。</span><span class="sxs-lookup"><span data-stu-id="5453a-103">By combining the host's IP address and port number of a service, the <xref:System.Net.IPEndPoint> class forms a connection point to a service.</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.IPEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#1)]
 [!code-csharp[System.Net.IPEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#1)]
 [!code-vb[System.Net.IPEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5453a-104"><see cref="T:System.Net.IPEndPoint" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5453a-104">Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPEndPoint (long address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.#ctor(System.Int64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As Long, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IPEndPoint(long address, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.IPEndPoint : int64 * int -&gt; System.Net.IPEndPoint" Usage="new System.Net.IPEndPoint (address, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.Int64" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="5453a-105">インターネット ホストの IP アドレス。</span><span class="sxs-lookup"><span data-stu-id="5453a-105">The IP address of the Internet host.</span></span></param>
        <param name="port"><span data-ttu-id="5453a-106"><paramref name="address" /> に関連付けられているポート番号。または、使用できる任意のポートを指定する場合は 0。</span><span class="sxs-lookup"><span data-stu-id="5453a-106">The port number associated with the <paramref name="address" />, or 0 to specify any available port.</span></span> <span data-ttu-id="5453a-107"><paramref name="port" /> は、ホスト順です。</span><span class="sxs-lookup"><span data-stu-id="5453a-107"><paramref name="port" /> is in host order.</span></span></param>
        <summary><span data-ttu-id="5453a-108">指定したアドレスとポート番号を使用して、<see cref="T:System.Net.IPEndPoint" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5453a-108">Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class with the specified address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5453a-109">次の例では、指定された IP アドレスとポート番号を使用して、<xref:System.Net.IPEndPoint>を作成します。</span><span class="sxs-lookup"><span data-stu-id="5453a-109">The following example uses the specified IP address and port number to create an <xref:System.Net.IPEndPoint>.</span></span>  
  
 [!code-cpp[IPEndPoint_Properties#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IPEndPoint_Properties/CPP/ipendpoint_properties.cpp#4)]
 [!code-csharp[IPEndPoint_Properties#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IPEndPoint_Properties/CS/ipendpoint_properties.cs#4)]
 [!code-vb[IPEndPoint_Properties#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IPEndPoint_Properties/VB/ipendpoint_properties.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5453a-110"><paramref name="port" /> は <see cref="F:System.Net.IPEndPoint.MinPort" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="5453a-110"><paramref name="port" /> is less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span></span>  
  
<span data-ttu-id="5453a-111">- または -</span><span class="sxs-lookup"><span data-stu-id="5453a-111">-or-</span></span> 
 <span data-ttu-id="5453a-112"><paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MaxPort" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="5453a-112"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span>  
  
<span data-ttu-id="5453a-113">- または -</span><span class="sxs-lookup"><span data-stu-id="5453a-113">-or-</span></span> 
 <span data-ttu-id="5453a-114"><paramref name="address" /> が 0 未満か、0x00000000FFFFFFFF よりも大きい値です。</span><span class="sxs-lookup"><span data-stu-id="5453a-114"><paramref name="address" /> is less than 0 or greater than 0x00000000FFFFFFFF.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IPEndPoint (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IPEndPoint(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.IPEndPoint : System.Net.IPAddress * int -&gt; System.Net.IPEndPoint" Usage="new System.Net.IPEndPoint (address, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="5453a-115"><see cref="T:System.Net.IPAddress" />。</span><span class="sxs-lookup"><span data-stu-id="5453a-115">An <see cref="T:System.Net.IPAddress" />.</span></span></param>
        <param name="port"><span data-ttu-id="5453a-116"><paramref name="address" /> に関連付けられているポート番号。または、使用できる任意のポートを指定する場合は 0。</span><span class="sxs-lookup"><span data-stu-id="5453a-116">The port number associated with the <paramref name="address" />, or 0 to specify any available port.</span></span> <span data-ttu-id="5453a-117"><paramref name="port" /> は、ホスト順です。</span><span class="sxs-lookup"><span data-stu-id="5453a-117"><paramref name="port" /> is in host order.</span></span></param>
        <summary><span data-ttu-id="5453a-118">指定したアドレスとポート番号を使用して、<see cref="T:System.Net.IPEndPoint" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="5453a-118">Initializes a new instance of the <see cref="T:System.Net.IPEndPoint" /> class with the specified address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[System.Net.IPEndPoint#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#2)]
 [!code-csharp[System.Net.IPEndPoint#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#2)]
 [!code-vb[System.Net.IPEndPoint#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5453a-119"><paramref name="address" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="5453a-119"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5453a-120"><paramref name="port" /> は <see cref="F:System.Net.IPEndPoint.MinPort" /> より小さい値です。</span><span class="sxs-lookup"><span data-stu-id="5453a-120"><paramref name="port" /> is less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span></span>  
  
<span data-ttu-id="5453a-121">- または -</span><span class="sxs-lookup"><span data-stu-id="5453a-121">-or-</span></span> 
 <span data-ttu-id="5453a-122"><paramref name="port" /> が <see cref="F:System.Net.IPEndPoint.MaxPort" /> より大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="5453a-122"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span>  
  
<span data-ttu-id="5453a-123">- または -</span><span class="sxs-lookup"><span data-stu-id="5453a-123">-or-</span></span> 
 <span data-ttu-id="5453a-124"><paramref name="address" /> が 0 未満か、0x00000000FFFFFFFF よりも大きい値です。</span><span class="sxs-lookup"><span data-stu-id="5453a-124"><paramref name="address" /> is less than 0 or greater than 0x00000000FFFFFFFF.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.IPEndPoint.Address" />
      <MemberSignature Language="VB.NET" Value="Public Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); void set(System::Net::IPAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.Net.IPAddress with get, set" Usage="System.Net.IPEndPoint.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5453a-125">エンドポイントの IP アドレスを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5453a-125">Gets or sets the IP address of the endpoint.</span></span></summary>
        <value><span data-ttu-id="5453a-126">エンドポイントの IP アドレスを格納する <see cref="T:System.Net.IPAddress" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="5453a-126">An <see cref="T:System.Net.IPAddress" /> instance containing the IP address of the endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5453a-127">次の例では、指定された <xref:System.Net.IPAddress> を使用して <xref:System.Net.IPEndPoint.Address%2A> プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="5453a-127">The following example sets the <xref:System.Net.IPEndPoint.Address%2A> property using the <xref:System.Net.IPAddress> specified.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]
 [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]
 [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddressFamily">
      <MemberSignature Language="C#" Value="public override System.Net.Sockets.AddressFamily AddressFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Sockets.AddressFamily AddressFamily" />
      <MemberSignature Language="DocId" Value="P:System.Net.IPEndPoint.AddressFamily" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AddressFamily As AddressFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::Sockets::AddressFamily AddressFamily { System::Net::Sockets::AddressFamily get(); };" />
      <MemberSignature Language="F#" Value="member this.AddressFamily : System.Net.Sockets.AddressFamily" Usage="System.Net.IPEndPoint.AddressFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.AddressFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5453a-128">インターネット プロトコル (IP: Internet Protocol) アドレス ファミリを取得します。</span><span class="sxs-lookup"><span data-stu-id="5453a-128">Gets the Internet Protocol (IP) address family.</span></span></summary>
        <value><span data-ttu-id="5453a-129"><see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="5453a-129">Returns <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5453a-130">次の例では、<xref:System.Net.IPEndPoint.AddressFamily%2A> プロパティを使用して、<xref:System.Net.IPEndPoint> が属する <xref:System.Net.Sockets.AddressFamily> を返します。</span><span class="sxs-lookup"><span data-stu-id="5453a-130">The following example uses the <xref:System.Net.IPEndPoint.AddressFamily%2A> property to return the <xref:System.Net.Sockets.AddressFamily> to which the <xref:System.Net.IPEndPoint> belongs.</span></span> <span data-ttu-id="5453a-131">この例では、<xref:System.Net.Sockets.AddressFamily.InterNetwork><xref:System.Net.Sockets.AddressFamily>です。</span><span class="sxs-lookup"><span data-stu-id="5453a-131">In this case it is the <xref:System.Net.Sockets.AddressFamily.InterNetwork><xref:System.Net.Sockets.AddressFamily>.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]
 [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]
 [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override System.Net.EndPoint Create (System.Net.SocketAddress socketAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.EndPoint Create(class System.Net.SocketAddress socketAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Create(System.Net.SocketAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Create (socketAddress As SocketAddress) As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::EndPoint ^ Create(System::Net::SocketAddress ^ socketAddress);" />
      <MemberSignature Language="F#" Value="override this.Create : System.Net.SocketAddress -&gt; System.Net.EndPoint" Usage="iPEndPoint.Create socketAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socketAddress" Type="System.Net.SocketAddress" />
      </Parameters>
      <Docs>
        <param name="socketAddress"><span data-ttu-id="5453a-132">エンドポイントで使用する <see cref="T:System.Net.SocketAddress" />。</span><span class="sxs-lookup"><span data-stu-id="5453a-132">The <see cref="T:System.Net.SocketAddress" /> to use for the endpoint.</span></span></param>
        <summary><span data-ttu-id="5453a-133">ソケット アドレスからエンドポイントを作成します。</span><span class="sxs-lookup"><span data-stu-id="5453a-133">Creates an endpoint from a socket address.</span></span></summary>
        <returns><span data-ttu-id="5453a-134">指定したソケット アドレスを使用する <see cref="T:System.Net.EndPoint" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="5453a-134">An <see cref="T:System.Net.EndPoint" /> instance using the specified socket address.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5453a-135">次の例では、指定された <xref:System.Net.SocketAddress> を使用して、<xref:System.Net.IPEndPoint>を作成します。</span><span class="sxs-lookup"><span data-stu-id="5453a-135">The following example uses the specified <xref:System.Net.SocketAddress> to create an <xref:System.Net.IPEndPoint>.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#5)]
 [!code-csharp[System.Net.IPEndPoint#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#5)]
 [!code-vb[System.Net.IPEndPoint#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5453a-136"><paramref name="socketAddress" /> の AddressFamily は、現在のインスタンスの AddressFamily と同じではありません。</span><span class="sxs-lookup"><span data-stu-id="5453a-136">The AddressFamily of <paramref name="socketAddress" /> is not equal to the AddressFamily of the current instance.</span></span>  
  
<span data-ttu-id="5453a-137">- または -</span><span class="sxs-lookup"><span data-stu-id="5453a-137">-or-</span></span> 
 <span data-ttu-id="5453a-138"><paramref name="socketAddress" />.Size &lt; 8。</span><span class="sxs-lookup"><span data-stu-id="5453a-138"><paramref name="socketAddress" />.Size &lt; 8.</span></span></exception>
        <altmember cref="T:System.Net.EndPoint" />
        <altmember cref="T:System.Net.SocketAddress" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (comparand As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ comparand);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="iPEndPoint.Equals comparand" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="comparand"><span data-ttu-id="5453a-139">現在の <see cref="T:System.Object" /> と比較する <see cref="T:System.Object" />。</span><span class="sxs-lookup"><span data-stu-id="5453a-139">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</span></span></param>
        <summary><span data-ttu-id="5453a-140">指定した <see cref="T:System.Object" /> が現在の <see cref="T:System.Object" /> と等しいかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="5453a-140">Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="5453a-141">指定した <see langword="true" /> が現在の <see cref="T:System.Object" /> と等しい場合は <see cref="T:System.Object" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5453a-141"><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="iPEndPoint.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5453a-142"><see cref="T:System.Net.IPEndPoint" /> インスタンスのハッシュ値を返します。</span><span class="sxs-lookup"><span data-stu-id="5453a-142">Returns a hash value for a <see cref="T:System.Net.IPEndPoint" /> instance.</span></span></summary>
        <returns><span data-ttu-id="5453a-143">整数ハッシュ値。</span><span class="sxs-lookup"><span data-stu-id="5453a-143">An integer hash value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5453a-144"><xref:System.Net.IPEndPoint.GetHashCode%2A> メソッドは、IP エンドポイントインスタンスのハッシュコードを返します。</span><span class="sxs-lookup"><span data-stu-id="5453a-144">The <xref:System.Net.IPEndPoint.GetHashCode%2A> method returns a hash code of the IP endpoint instance.</span></span> <span data-ttu-id="5453a-145">この値は、ハッシュテーブルのキーとして使用できます。</span><span class="sxs-lookup"><span data-stu-id="5453a-145">This value can be used as a key in hash tables.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxPort">
      <MemberSignature Language="C#" Value="public const int MaxPort = 65535;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxPort = (65535)" />
      <MemberSignature Language="DocId" Value="F:System.Net.IPEndPoint.MaxPort" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxPort As Integer  = 65535" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxPort = 65535;" />
      <MemberSignature Language="F#" Value="val mutable MaxPort : int" Usage="System.Net.IPEndPoint.MaxPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>65535</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5453a-146"><see cref="P:System.Net.IPEndPoint.Port" /> プロパティに割り当てることができる最大値を指定します。</span><span class="sxs-lookup"><span data-stu-id="5453a-146">Specifies the maximum value that can be assigned to the <see cref="P:System.Net.IPEndPoint.Port" /> property.</span></span> <span data-ttu-id="5453a-147">MaxPort 値は、0x0000FFFF に設定されます。</span><span class="sxs-lookup"><span data-stu-id="5453a-147">The MaxPort value is set to 0x0000FFFF.</span></span> <span data-ttu-id="5453a-148">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="5453a-148">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5453a-149">次の例では、<xref:System.Net.IPEndPoint.MaxPort> プロパティを使用して、<xref:System.Net.IPEndPoint.Port%2A> プロパティに割り当てることができる最大値を出力します。</span><span class="sxs-lookup"><span data-stu-id="5453a-149">The following example uses the <xref:System.Net.IPEndPoint.MaxPort> property to print the maximum value that can be assigned to the <xref:System.Net.IPEndPoint.Port%2A> property.</span></span>  
  
 [!code-cpp[IPEndPoint_Properties#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IPEndPoint_Properties/CPP/ipendpoint_properties.cpp#4)]
 [!code-csharp[IPEndPoint_Properties#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IPEndPoint_Properties/CS/ipendpoint_properties.cs#4)]
 [!code-vb[IPEndPoint_Properties#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IPEndPoint_Properties/VB/ipendpoint_properties.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinPort">
      <MemberSignature Language="C#" Value="public const int MinPort = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MinPort = (0)" />
      <MemberSignature Language="DocId" Value="F:System.Net.IPEndPoint.MinPort" />
      <MemberSignature Language="VB.NET" Value="Public Const MinPort As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int MinPort = 0;" />
      <MemberSignature Language="F#" Value="val mutable MinPort : int" Usage="System.Net.IPEndPoint.MinPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5453a-150"><see cref="P:System.Net.IPEndPoint.Port" /> プロパティに割り当てることができる最小値を指定します。</span><span class="sxs-lookup"><span data-stu-id="5453a-150">Specifies the minimum value that can be assigned to the <see cref="P:System.Net.IPEndPoint.Port" /> property.</span></span> <span data-ttu-id="5453a-151">このフィールドは読み取り専用です。</span><span class="sxs-lookup"><span data-stu-id="5453a-151">This field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5453a-152">次の例では、<xref:System.Net.IPEndPoint.MinPort> プロパティを使用して、<xref:System.Net.IPEndPoint.Port%2A> プロパティに割り当てることができる最小値を出力します。</span><span class="sxs-lookup"><span data-stu-id="5453a-152">The following example uses the <xref:System.Net.IPEndPoint.MinPort> property to print the minimum value that can be assigned to the <xref:System.Net.IPEndPoint.Port%2A> property.</span></span>  
  
 [!code-cpp[IPEndPoint_Properties#4](~/samples/snippets/cpp/VS_Snippets_Remoting/IPEndPoint_Properties/CPP/ipendpoint_properties.cpp#4)]
 [!code-csharp[IPEndPoint_Properties#4](~/samples/snippets/csharp/VS_Snippets_Remoting/IPEndPoint_Properties/CS/ipendpoint_properties.cs#4)]
 [!code-vb[IPEndPoint_Properties#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/IPEndPoint_Properties/VB/ipendpoint_properties.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="5453a-153">`s` の部分の数 (各部分はピリオドで区切られます) によって、エンドポイントの IP アドレスがどのように構築されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="5453a-153">The number of parts (each part is separated by a period) in `s` determines how the endpoint's IP address is constructed.</span></span> <span data-ttu-id="5453a-154">1部構成のアドレスは、ネットワークアドレスに直接格納されます。</span><span class="sxs-lookup"><span data-stu-id="5453a-154">A one-part address is stored directly in the network address.</span></span> <span data-ttu-id="5453a-155">2つの部分で構成されるアドレスは、クラスのアドレスを指定するのに便利です。先頭の部分を最初のバイトに、末尾の部分をネットワークアドレスの右端の3バイトに配置します。</span><span class="sxs-lookup"><span data-stu-id="5453a-155">A two-part address, convenient for specifying a class A address, puts the leading part in the first byte and the trailing part in the right-most three bytes of the network address.</span></span> <span data-ttu-id="5453a-156">3部構成のアドレスは、クラス B アドレスを指定する場合に便利です。最初の部分を最初のバイトに、2番目の部分を2番目のバイトに、最後の部分をネットワークアドレスの右端の2バイトに配置します。</span><span class="sxs-lookup"><span data-stu-id="5453a-156">A three-part address, convenient for specifying a class B address, puts the first part in the first byte, the second part in the second byte, and the final part in the right-most two bytes of the network address.</span></span> <span data-ttu-id="5453a-157">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="5453a-157">For example:</span></span>

|<span data-ttu-id="5453a-158">パーツの数と例の `s`</span><span class="sxs-lookup"><span data-stu-id="5453a-158">Number of parts and example `s`</span></span>|<span data-ttu-id="5453a-159">IPEndPoint の IPv4 アドレス</span><span class="sxs-lookup"><span data-stu-id="5453a-159">IPv4 address for IPEndPoint.Address</span></span>|<span data-ttu-id="5453a-160">ポート</span><span class="sxs-lookup"><span data-stu-id="5453a-160">Port</span></span>|
|-------------------------|--------------------------------|-------------------------|  
|<span data-ttu-id="5453a-161">1--"1"</span><span class="sxs-lookup"><span data-stu-id="5453a-161">1 -- "1"</span></span>|<span data-ttu-id="5453a-162">0.0.0.1</span><span class="sxs-lookup"><span data-stu-id="5453a-162">0.0.0.1</span></span>|<span data-ttu-id="5453a-163">0</span><span class="sxs-lookup"><span data-stu-id="5453a-163">0</span></span>|  
|<span data-ttu-id="5453a-164">2--"20.2:80"</span><span class="sxs-lookup"><span data-stu-id="5453a-164">2 -- "20.2:80"</span></span>|<span data-ttu-id="5453a-165">20.0.0.2</span><span class="sxs-lookup"><span data-stu-id="5453a-165">20.0.0.2</span></span>|<span data-ttu-id="5453a-166">80</span><span class="sxs-lookup"><span data-stu-id="5453a-166">80</span></span>|  
|<span data-ttu-id="5453a-167">2--"20.65535:23"</span><span class="sxs-lookup"><span data-stu-id="5453a-167">2 -- "20.65535:23"</span></span>|<span data-ttu-id="5453a-168">20.0.255.255</span><span class="sxs-lookup"><span data-stu-id="5453a-168">20.0.255.255</span></span>|<span data-ttu-id="5453a-169">23</span><span class="sxs-lookup"><span data-stu-id="5453a-169">23</span></span>|  
|<span data-ttu-id="5453a-170">3--"128.1.2: 443"</span><span class="sxs-lookup"><span data-stu-id="5453a-170">3 -- "128.1.2:443"</span></span>|<span data-ttu-id="5453a-171">128.1.0.2</span><span class="sxs-lookup"><span data-stu-id="5453a-171">128.1.0.2</span></span>|<span data-ttu-id="5453a-172">443</span><span class="sxs-lookup"><span data-stu-id="5453a-172">443</span></span>|  

> [!IMPORTANT]
> <span data-ttu-id="5453a-173">このメソッドは、<xref:System.Int64>として解析できる値を有効なものとして受け入れ、その <xref:System.Int64> を、IPAddress コンストラクターと同様に、ネットワークバイト順の IP アドレスの長い値として扱います。</span><span class="sxs-lookup"><span data-stu-id="5453a-173">Note that this method accepts as valid a value that can be parsed as an <xref:System.Int64>, and then treats that <xref:System.Int64> as the long value of an IP address in network byte order, similar to the way that the IPAddress constructor does.</span></span> <span data-ttu-id="5453a-174">つまり、このメソッドは、有効な IP アドレスではないアドレスを表す場合でも、Int64 が正常に解析された場合に true を返します。</span><span class="sxs-lookup"><span data-stu-id="5453a-174">This means that this method returns true if the Int64 is parsed successfully, even if it represents an address that's not a valid IP address.</span></span> <span data-ttu-id="5453a-175">たとえば、s が "1" の場合、このメソッドは、"1" (または 0.0.0.1) が有効な IP アドレスではなく、このメソッドが false を返すことを期待する場合でも true を返します。</span><span class="sxs-lookup"><span data-stu-id="5453a-175">For example, if s is "1", this method returns true even though "1" (or 0.0.0.1) is not a valid IP address and you might expect this method to return false.</span></span> <span data-ttu-id="5453a-176">このバグを修正すると既存のアプリが壊れるため、現在の動作は変更されません。</span><span class="sxs-lookup"><span data-stu-id="5453a-176">Fixing this bug would break existing apps, so the current behavior will not be changed.</span></span> <span data-ttu-id="5453a-177">コードでこの動作を回避するには、このメソッドを使用して、ドット形式の10進数形式の IP アドレスを解析するだけであることを確認します。</span><span class="sxs-lookup"><span data-stu-id="5453a-177">Your code can avoid this behavior by ensuring that it only uses this method to parse IP addresses in dotted-decimal format.</span></span>
 
<span data-ttu-id="5453a-178">リテラル IPv6 アドレスは、ポート番号を指定するエンドポイントを渡すときに、角かっこ [] で囲む必要があります。それ以外の場合は、角かっこは必須ではありません。</span><span class="sxs-lookup"><span data-stu-id="5453a-178">Literal IPv6 addresses require to be enclosed in square brackets [] when passing an endpoint that specifies a port number; otherwise, square braces are not mandatory.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Net.IPEndPoint Parse (ReadOnlySpan&lt;char&gt; s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPEndPoint Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Parse(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char)) As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPEndPoint ^ Parse(ReadOnlySpan&lt;char&gt; s);" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; -&gt; System.Net.IPEndPoint" Usage="System.Net.IPEndPoint.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="5453a-179">IPv4 の場合はドット区切りの 10 進表記またはネットワークのバイト順、IPv6 の場合はコロン区切りの 16 進表記の IP エンドポイントが格納されている読み取り専用スパン。</span><span class="sxs-lookup"><span data-stu-id="5453a-179">A read-only span that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.</span></span></param>
        <summary><span data-ttu-id="5453a-180">読み取り専用スパンとして表される IP ネットワーク エンドポイント (アドレスとポート) を <see cref="T:System.Net.IPEndPoint" /> インスタンスに変換します。</span><span class="sxs-lookup"><span data-stu-id="5453a-180">Converts an IP network endpoint (address and port) represented as a read-only span to an <see cref="T:System.Net.IPEndPoint" /> instance.</span></span></summary>
        <returns><span data-ttu-id="5453a-181">IP ネットワーク エンドポイントのオブジェクト表現。</span><span class="sxs-lookup"><span data-stu-id="5453a-181">The object representation of an IP network endpoint.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5453a-182"><paramref name="s" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="5453a-182"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="5453a-183"><paramref name="s" /> が有効な IP エンドポイントではありません。</span><span class="sxs-lookup"><span data-stu-id="5453a-183"><paramref name="s" /> is not a valid IP endpoint.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Net.IPEndPoint Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.IPEndPoint Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::IPEndPoint ^ Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Net.IPEndPoint" Usage="System.Net.IPEndPoint.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="5453a-184">IPv4 の場合はドット区切りの 10 進表記またはネットワークのバイト順、IPv6 の場合はコロン区切りの 16 進表記の IP エンドポイントが格納されている文字列。</span><span class="sxs-lookup"><span data-stu-id="5453a-184">A string that contains an IP endpoint in dotted-quad notation or network byte order for IPv4 and in colon-hexadecimal notation for IPv6.</span></span></param>
        <summary><span data-ttu-id="5453a-185">文字列として表される IP ネットワーク エンドポイント (アドレスとポート) を <see cref="T:System.Net.IPEndPoint" /> インスタンスに変換します。</span><span class="sxs-lookup"><span data-stu-id="5453a-185">Converts an IP network endpoint (address and port) represented as a string to an <see cref="T:System.Net.IPEndPoint" /> instance.</span></span></summary>
        <returns><span data-ttu-id="5453a-186">IP ネットワーク エンドポイントのオブジェクト表現。</span><span class="sxs-lookup"><span data-stu-id="5453a-186">The object representation of an IP network endpoint.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5453a-187"><paramref name="s" /> が <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="5453a-187"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="5453a-188"><paramref name="s" /> が有効な IP エンドポイントではありません。</span><span class="sxs-lookup"><span data-stu-id="5453a-188"><paramref name="s" /> is not a valid IP endpoint.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.IPEndPoint.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.IPEndPoint.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5453a-189">エンドポイントのポート番号を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="5453a-189">Gets or sets the port number of the endpoint.</span></span></summary>
        <value><span data-ttu-id="5453a-190">エンドポイントのポート番号を示す <see cref="F:System.Net.IPEndPoint.MinPort" /> ～ <see cref="F:System.Net.IPEndPoint.MaxPort" /> の範囲の整数値。</span><span class="sxs-lookup"><span data-stu-id="5453a-190">An integer value in the range <see cref="F:System.Net.IPEndPoint.MinPort" /> to <see cref="F:System.Net.IPEndPoint.MaxPort" /> indicating the port number of the endpoint.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5453a-191">次の例では、<xref:System.Net.IPEndPoint.Port%2A> プロパティを使用して、<xref:System.Net.EndPoint>の TCP ポート番号を設定します。</span><span class="sxs-lookup"><span data-stu-id="5453a-191">The following example uses the <xref:System.Net.IPEndPoint.Port%2A> property to set TCP port number of the <xref:System.Net.EndPoint>.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]
 [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]
 [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5453a-192">set 操作に指定された値が <see cref="F:System.Net.IPEndPoint.MinPort" /> より小さいか、<see cref="F:System.Net.IPEndPoint.MaxPort" /> を超えています。</span><span class="sxs-lookup"><span data-stu-id="5453a-192">The value that was specified for a set operation is less than <see cref="F:System.Net.IPEndPoint.MinPort" /> or greater than <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public override System.Net.SocketAddress Serialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.SocketAddress Serialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.Serialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Serialize () As SocketAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::SocketAddress ^ Serialize();" />
      <MemberSignature Language="F#" Value="override this.Serialize : unit -&gt; System.Net.SocketAddress" Usage="iPEndPoint.Serialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.SocketAddress</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5453a-193"><see cref="T:System.Net.SocketAddress" /> インスタンスに対してエンドポイント情報をシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="5453a-193">Serializes endpoint information into a <see cref="T:System.Net.SocketAddress" /> instance.</span></span></summary>
        <returns><span data-ttu-id="5453a-194">エンドポイントのソケット アドレスを格納する <see cref="T:System.Net.SocketAddress" /> インスタンス。</span><span class="sxs-lookup"><span data-stu-id="5453a-194">A <see cref="T:System.Net.SocketAddress" /> instance containing the socket address for the endpoint.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5453a-195">次の例では、<xref:System.Net.IPEndPoint.Serialize%2A> メソッドを使用して、エンドポイント情報を <xref:System.Net.SocketAddress> インスタンスにシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="5453a-195">The following example uses the <xref:System.Net.IPEndPoint.Serialize%2A> method to serialize endpoint information into a <xref:System.Net.SocketAddress> instance.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#4)]
 [!code-csharp[System.Net.IPEndPoint#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#4)]
 [!code-vb[System.Net.IPEndPoint#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="iPEndPoint.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5453a-196">指定したエンドポイントの IP アドレスとポート番号を返します。</span><span class="sxs-lookup"><span data-stu-id="5453a-196">Returns the IP address and port number of the specified endpoint.</span></span></summary>
        <returns><span data-ttu-id="5453a-197">192.168.1.2:80 などの指定したエンドポイントの IP アドレスとポート番号を格納する文字列。</span><span class="sxs-lookup"><span data-stu-id="5453a-197">A string containing the IP address and the port number of the specified endpoint (for example, 192.168.1.2:80).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5453a-198">次の例では、指定された <xref:System.Net.IPEndPoint>の IP アドレスとポート番号の文字列形式を返します。</span><span class="sxs-lookup"><span data-stu-id="5453a-198">The following example returns a string representation of the IP address and port number of the specified <xref:System.Net.IPEndPoint>.</span></span>  
  
 [!code-cpp[System.Net.IPEndPoint#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.IPEndPoint/CPP/ipendpoint.cpp#3)]
 [!code-csharp[System.Net.IPEndPoint#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.IPEndPoint/CS/ipendpoint.cs#3)]
 [!code-vb[System.Net.IPEndPoint#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.IPEndPoint/VB/ipendpoint.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="5453a-199">`s` の部分の数 (各部分はピリオドで区切られます) によって、エンドポイントの IP アドレスがどのように構築されるかが決まります。</span><span class="sxs-lookup"><span data-stu-id="5453a-199">The number of parts (each part is separated by a period) in `s` determines how the endpoint's IP address is constructed.</span></span> <span data-ttu-id="5453a-200">1部構成のアドレスは、ネットワークアドレスに直接格納されます。</span><span class="sxs-lookup"><span data-stu-id="5453a-200">A one-part address is stored directly in the network address.</span></span> <span data-ttu-id="5453a-201">2つの部分で構成されるアドレスは、クラスのアドレスを指定するのに便利です。先頭の部分を最初のバイトに、末尾の部分をネットワークアドレスの右端の3バイトに配置します。</span><span class="sxs-lookup"><span data-stu-id="5453a-201">A two-part address, convenient for specifying a class A address, puts the leading part in the first byte and the trailing part in the right-most three bytes of the network address.</span></span> <span data-ttu-id="5453a-202">3部構成のアドレスは、クラス B アドレスを指定する場合に便利です。最初の部分を最初のバイトに、2番目の部分を2番目のバイトに、最後の部分をネットワークアドレスの右端の2バイトに配置します。</span><span class="sxs-lookup"><span data-stu-id="5453a-202">A three-part address, convenient for specifying a class B address, puts the first part in the first byte, the second part in the second byte, and the final part in the right-most two bytes of the network address.</span></span> <span data-ttu-id="5453a-203">次に例を示します。</span><span class="sxs-lookup"><span data-stu-id="5453a-203">For example:</span></span>

|<span data-ttu-id="5453a-204">パーツの数と例の `s`</span><span class="sxs-lookup"><span data-stu-id="5453a-204">Number of parts and example `s`</span></span>|<span data-ttu-id="5453a-205">IPEndPoint の IPv4 アドレス</span><span class="sxs-lookup"><span data-stu-id="5453a-205">IPv4 address for IPEndPoint.Address</span></span>|<span data-ttu-id="5453a-206">ポート</span><span class="sxs-lookup"><span data-stu-id="5453a-206">Port</span></span>|
|-------------------------|--------------------------------|-------------------------|  
|<span data-ttu-id="5453a-207">1--"1"</span><span class="sxs-lookup"><span data-stu-id="5453a-207">1 -- "1"</span></span>|<span data-ttu-id="5453a-208">0.0.0.1</span><span class="sxs-lookup"><span data-stu-id="5453a-208">0.0.0.1</span></span>|<span data-ttu-id="5453a-209">0</span><span class="sxs-lookup"><span data-stu-id="5453a-209">0</span></span>|  
|<span data-ttu-id="5453a-210">2--"20.2:80"</span><span class="sxs-lookup"><span data-stu-id="5453a-210">2 -- "20.2:80"</span></span>|<span data-ttu-id="5453a-211">20.0.0.2</span><span class="sxs-lookup"><span data-stu-id="5453a-211">20.0.0.2</span></span>|<span data-ttu-id="5453a-212">80</span><span class="sxs-lookup"><span data-stu-id="5453a-212">80</span></span>|  
|<span data-ttu-id="5453a-213">2--"20.65535:23"</span><span class="sxs-lookup"><span data-stu-id="5453a-213">2 -- "20.65535:23"</span></span>|<span data-ttu-id="5453a-214">20.0.255.255</span><span class="sxs-lookup"><span data-stu-id="5453a-214">20.0.255.255</span></span>|<span data-ttu-id="5453a-215">23</span><span class="sxs-lookup"><span data-stu-id="5453a-215">23</span></span>|  
|<span data-ttu-id="5453a-216">3--"128.1.2: 443"</span><span class="sxs-lookup"><span data-stu-id="5453a-216">3 -- "128.1.2:443"</span></span>|<span data-ttu-id="5453a-217">128.1.0.2</span><span class="sxs-lookup"><span data-stu-id="5453a-217">128.1.0.2</span></span>|<span data-ttu-id="5453a-218">443</span><span class="sxs-lookup"><span data-stu-id="5453a-218">443</span></span>|  

> [!IMPORTANT]
> <span data-ttu-id="5453a-219">このメソッドは、<xref:System.Int64>として解析できる値を有効なものとして受け入れ、その <xref:System.Int64> を、IPAddress コンストラクターと同様に、ネットワークバイト順の IP アドレスの長い値として扱います。</span><span class="sxs-lookup"><span data-stu-id="5453a-219">Note that this method accepts as valid a value that can be parsed as an <xref:System.Int64>, and then treats that <xref:System.Int64> as the long value of an IP address in network byte order, similar to the way that the IPAddress constructor does.</span></span> <span data-ttu-id="5453a-220">つまり、このメソッドは、有効な IP アドレスではないアドレスを表す場合でも、Int64 が正常に解析された場合に true を返します。</span><span class="sxs-lookup"><span data-stu-id="5453a-220">This means that this method returns true if the Int64 is parsed successfully, even if it represents an address that's not a valid IP address.</span></span> <span data-ttu-id="5453a-221">たとえば、s が "1" の場合、このメソッドは、"1" (または 0.0.0.1) が有効な IP アドレスではなく、このメソッドが false を返すことを期待する場合でも true を返します。</span><span class="sxs-lookup"><span data-stu-id="5453a-221">For example, if s is "1", this method returns true even though "1" (or 0.0.0.1) is not a valid IP address and you might expect this method to return false.</span></span> <span data-ttu-id="5453a-222">このバグを修正すると既存のアプリが壊れるため、現在の動作は変更されません。</span><span class="sxs-lookup"><span data-stu-id="5453a-222">Fixing this bug would break existing apps, so the current behavior will not be changed.</span></span> <span data-ttu-id="5453a-223">コードでこの動作を回避するには、このメソッドを使用して、ドット形式の10進数形式の IP アドレスを解析するだけであることを確認します。</span><span class="sxs-lookup"><span data-stu-id="5453a-223">Your code can avoid this behavior by ensuring that it only uses this method to parse IP addresses in dotted-decimal format.</span></span>
 
<span data-ttu-id="5453a-224">リテラル IPv6 アドレスは、ポート番号を指定するエンドポイントを渡すときに、角かっこ [] で囲む必要があります。それ以外の場合は、角かっこは必須ではありません。</span><span class="sxs-lookup"><span data-stu-id="5453a-224">Literal IPv6 addresses require to be enclosed in square brackets [] when passing an endpoint that specifies a port number; otherwise, square braces are not mandatory.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out System.Net.IPEndPoint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] class System.Net.IPEndPoint&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.TryParse(System.ReadOnlySpan{System.Char},System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As IPEndPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * IPEndPoint -&gt; bool" Usage="System.Net.IPEndPoint.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
        <Parameter Name="result" Type="System.Net.IPEndPoint" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="5453a-225">検証する IP エンドポイント。</span><span class="sxs-lookup"><span data-stu-id="5453a-225">The IP endpoint to validate.</span></span></param>
        <param name="result"><span data-ttu-id="5453a-226">このメソッドから制御が戻るときの、<paramref name="s" /> の <see cref="T:System.Net.IPEndPoint" /> バージョン。</span><span class="sxs-lookup"><span data-stu-id="5453a-226">When this method returns, the <see cref="T:System.Net.IPEndPoint" /> version of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="5453a-227">読み取り専用スパンとして表される IP ネットワーク エンドポイント (アドレスとポート) からその同等の <see cref="T:System.Net.IPEndPoint" /> への変換を試行し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="5453a-227">Tries to convert an IP network endpoint (address and port) represented as a read-only span to its <see cref="T:System.Net.IPEndPoint" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="5453a-228"><paramref name="s" /> を IP エンドポイントとして解析できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5453a-228"><see langword="true" /> if <paramref name="s" /> can be parsed as an IP endpoint; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out System.Net.IPEndPoint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] class System.Net.IPEndPoint&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.IPEndPoint.TryParse(System.String,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As IPEndPoint) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * IPEndPoint -&gt; bool" Usage="System.Net.IPEndPoint.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1" />
        <Parameter Name="result" Type="System.Net.IPEndPoint" RefType="out" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="5453a-229">検証する IP エンドポイント。</span><span class="sxs-lookup"><span data-stu-id="5453a-229">The IP endpoint to validate.</span></span></param>
        <param name="result"><span data-ttu-id="5453a-230">このメソッドから制御が戻るときの、<paramref name="s" /> の <see cref="T:System.Net.IPEndPoint" /> バージョン。</span><span class="sxs-lookup"><span data-stu-id="5453a-230">When this method returns, the <see cref="T:System.Net.IPEndPoint" /> version of <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="5453a-231">文字列として表される IP ネットワーク エンドポイント (アドレスとポート) からその同等の <see cref="T:System.Net.IPEndPoint" /> への変換を試行し、変換に成功したかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="5453a-231">Tries to convert an IP network endpoint (address and port) represented as a string to its <see cref="T:System.Net.IPEndPoint" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="5453a-232"><paramref name="s" /> を IP エンドポイントとして解析できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5453a-232"><see langword="true" /> if <paramref name="s" /> can be parsed as an IP endpoint; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
