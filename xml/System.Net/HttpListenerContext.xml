<Type Name="HttpListenerContext" FullName="System.Net.HttpListenerContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a29716996c2d5ef66223fc19cd35e395b8079b87" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75109547" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListenerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerContext sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerContext = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b1525-101"><see cref="T:System.Net.HttpListener" /> クラスで使用される要求オブジェクトと応答オブジェクトへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="b1525-101">Provides access to the request and response objects used by the <see cref="T:System.Net.HttpListener" /> class.</span></span> <span data-ttu-id="b1525-102">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="b1525-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1525-103">このクラスは、<xref:System.Net.HttpListener> オブジェクトによって処理されるクライアントのハイパーテキスト転送プロトコル (HTTP) 要求に関連する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="b1525-103">This class provides the information related to a client's Hypertext Transfer Protocol (HTTP) request being processed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="b1525-104">このクラスには、<xref:System.Net.HttpListener> オブジェクトが WebSocket 接続を受け入れることを許可するメソッドもあります。</span><span class="sxs-lookup"><span data-stu-id="b1525-104">This class also has methods that allow an <xref:System.Net.HttpListener> object to accept a WebSocket connection.</span></span>  
  
 <span data-ttu-id="b1525-105"><xref:System.Net.HttpListener.GetContext%2A> メソッドは、<xref:System.Net.HttpListenerContext> クラスのインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="b1525-105">The <xref:System.Net.HttpListener.GetContext%2A> method returns instances of the <xref:System.Net.HttpListenerContext> class.</span></span> <span data-ttu-id="b1525-106">クライアント要求を表すオブジェクトを取得するには、<xref:System.Net.HttpListenerContext.Request%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b1525-106">To get the object that represents the client request, use the <xref:System.Net.HttpListenerContext.Request%2A> property.</span></span> <span data-ttu-id="b1525-107"><xref:System.Net.HttpListener>によってクライアントに送信される応答を表すオブジェクトを取得するには、<xref:System.Net.HttpListenerContext.Response%2A> プロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="b1525-107">To get the object that represents the response that will be sent to the client by the <xref:System.Net.HttpListener>, use the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span> <span data-ttu-id="b1525-108">要求を送信するクライアントに関するユーザー情報 (ログイン名、認証されているかどうかなど) を取得するには、<xref:System.Net.HttpListenerContext.User%2A> プロパティによって返された <xref:System.Security.Principal.IPrincipal> オブジェクトのプロパティを照会します。</span><span class="sxs-lookup"><span data-stu-id="b1525-108">To get user information about the client sending the request, such as its login name and whether it has been authenticated, you can query the properties in the <xref:System.Security.Principal.IPrincipal> object returned by the <xref:System.Net.HttpListenerContext.User%2A> property.</span></span>  
  
 <span data-ttu-id="b1525-109"><xref:System.Net.HttpListenerContext> オブジェクトを閉じると、応答がクライアントに送信され、<xref:System.Net.HttpListenerContext>によって使用されているすべてのリソースが解放されます。</span><span class="sxs-lookup"><span data-stu-id="b1525-109">Closing an <xref:System.Net.HttpListenerContext> object sends the response to the client and frees any resources used by the <xref:System.Net.HttpListenerContext>.</span></span> <span data-ttu-id="b1525-110"><xref:System.Net.HttpListenerContext> オブジェクトを中止すると、まだ送信されていない場合はクライアントへの応答を破棄し、<xref:System.Net.HttpListenerContext>によって使用されているリソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b1525-110">Aborting an <xref:System.Net.HttpListenerContext> object discards the response to the client if it has not already been sent, and frees any resources used by the <xref:System.Net.HttpListenerContext>.</span></span> <span data-ttu-id="b1525-111"><xref:System.Net.HttpListenerContext> オブジェクトを終了または中止した後は、そのメソッドまたはプロパティを参照することはできません。</span><span class="sxs-lookup"><span data-stu-id="b1525-111">After closing or aborting an <xref:System.Net.HttpListenerContext> object, you cannot reference its methods or properties.</span></span> <span data-ttu-id="b1525-112">これを行うと、<xref:System.ObjectDisposedException> 例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b1525-112">If you do so, you will receive an <xref:System.ObjectDisposedException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1525-113">次のコード例では、クライアント要求のユーザー情報を表示します。</span><span class="sxs-lookup"><span data-stu-id="b1525-113">The following code example displays the user information for a client request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#8)]  
 [!code-vb[Net_Listener_Basic#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerRequest" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <MemberGroup MemberName="AcceptWebSocketAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1525-114">WebSocket 接続を非同期操作として受け入れます。</span><span class="sxs-lookup"><span data-stu-id="b1525-114">Accept a WebSocket connection as an asynchronous operation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync subProtocol" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="b1525-115">サポートされている WebSocket サブプロトコル。</span><span class="sxs-lookup"><span data-stu-id="b1525-115">The supported WebSocket sub-protocol.</span></span></param>
        <summary><span data-ttu-id="b1525-116">WebSocket 接続を非同期操作として受け入れます。</span><span class="sxs-lookup"><span data-stu-id="b1525-116">Accept a WebSocket connection as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b1525-117">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1525-117">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b1525-118">タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、<see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b1525-118">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1525-119">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="b1525-119">This operation will not block.</span></span> <span data-ttu-id="b1525-120">返された <xref:System.Threading.Tasks.Task%601> オブジェクトは、WebSocket 接続が受け入れられた後に完了します。</span><span class="sxs-lookup"><span data-stu-id="b1525-120">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 <span data-ttu-id="b1525-121">受信バッファーのサイズは16385バイトです。</span><span class="sxs-lookup"><span data-stu-id="b1525-121">The size of the receive buffer is 16,385 bytes.</span></span> <span data-ttu-id="b1525-122">WebSocket のキープアライブ間隔は、既定値の 3万 (30 秒) に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b1525-122">The WebSocket keep-alive interval is set to the default value of 30,000 (30 seconds).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b1525-123"><paramref name="subProtocol" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="b1525-123"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="b1525-124">または</span><span class="sxs-lookup"><span data-stu-id="b1525-124">-or-</span></span> 
 <span data-ttu-id="b1525-125"><paramref name="subProtocol" /> に無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1525-125"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="b1525-126">WebSocket ハンドシェイクを完了するために応答を送信中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b1525-126">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, keepAliveInterval As TimeSpan) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string * TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync (subProtocol, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="b1525-127">サポートされている WebSocket サブプロトコル。</span><span class="sxs-lookup"><span data-stu-id="b1525-127">The supported WebSocket sub-protocol.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="b1525-128">WebSocket プロトコルのキープ アライブ間隔 (ミリ秒単位)。</span><span class="sxs-lookup"><span data-stu-id="b1525-128">The WebSocket protocol keep-alive interval in milliseconds.</span></span></param>
        <summary><span data-ttu-id="b1525-129">サポートされている WebSocket サブプロトコルと WebSocket のキープアライブ間隔を指定する WebSocket 接続を、非同期操作として受け入れます。</span><span class="sxs-lookup"><span data-stu-id="b1525-129">Accept a WebSocket connection specifying the supported WebSocket sub-protocol  and WebSocket keep-alive interval as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b1525-130">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1525-130">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b1525-131">タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、<see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b1525-131">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1525-132">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="b1525-132">This operation will not block.</span></span> <span data-ttu-id="b1525-133">返された <xref:System.Threading.Tasks.Task%601> オブジェクトは、WebSocket 接続が受け入れられた後に完了します。</span><span class="sxs-lookup"><span data-stu-id="b1525-133">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 <span data-ttu-id="b1525-134">受信バッファーのサイズは16385バイトです。</span><span class="sxs-lookup"><span data-stu-id="b1525-134">The size of the receive buffer is 16,385 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b1525-135"><paramref name="subProtocol" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="b1525-135"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="b1525-136">または</span><span class="sxs-lookup"><span data-stu-id="b1525-136">-or-</span></span> 
 <span data-ttu-id="b1525-137"><paramref name="subProtocol" /> に無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1525-137"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1525-138"><paramref name="keepAliveInterval" /> が小さすぎます。</span><span class="sxs-lookup"><span data-stu-id="b1525-138"><paramref name="keepAliveInterval" /> is too small.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="b1525-139">WebSocket ハンドシェイクを完了するために応答を送信中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b1525-139">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, int32 receiveBufferSize, valuetype System.TimeSpan keepAliveInterval) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, receiveBufferSize As Integer, keepAliveInterval As TimeSpan) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string * int * TimeSpan -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync (subProtocol, receiveBufferSize, keepAliveInterval)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="b1525-140">サポートされている WebSocket サブプロトコル。</span><span class="sxs-lookup"><span data-stu-id="b1525-140">The supported WebSocket sub-protocol.</span></span></param>
        <param name="receiveBufferSize"><span data-ttu-id="b1525-141">受信バッファーのサイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="b1525-141">The receive buffer size in bytes.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="b1525-142">WebSocket プロトコルのキープ アライブ間隔 (ミリ秒単位)。</span><span class="sxs-lookup"><span data-stu-id="b1525-142">The WebSocket protocol keep-alive interval in milliseconds.</span></span></param>
        <summary><span data-ttu-id="b1525-143">サポートされている WebSocket サブプロトコル受信バッファー サイズと WebSocket のキープアライブ間隔を指定する WebSocket 接続を、非同期操作として受け入れます。</span><span class="sxs-lookup"><span data-stu-id="b1525-143">Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, and WebSocket keep-alive interval as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b1525-144">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1525-144">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b1525-145">タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、<see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b1525-145">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1525-146">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="b1525-146">This operation will not block.</span></span> <span data-ttu-id="b1525-147">返された <xref:System.Threading.Tasks.Task%601> > オブジェクトは、WebSocket 接続が受け入れられた後に完了します。</span><span class="sxs-lookup"><span data-stu-id="b1525-147">The returned <xref:System.Threading.Tasks.Task%601> > object will complete after the WebSocket connection has been accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b1525-148"><paramref name="subProtocol" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="b1525-148"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="b1525-149">または</span><span class="sxs-lookup"><span data-stu-id="b1525-149">-or-</span></span> 
 <span data-ttu-id="b1525-150"><paramref name="subProtocol" /> に無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1525-150"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1525-151"><paramref name="keepAliveInterval" /> が小さすぎます。</span><span class="sxs-lookup"><span data-stu-id="b1525-151"><paramref name="keepAliveInterval" /> is too small.</span></span>  
  
<span data-ttu-id="b1525-152">または</span><span class="sxs-lookup"><span data-stu-id="b1525-152">-or-</span></span> 
 <span data-ttu-id="b1525-153"><paramref name="receiveBufferSize" /> が 16 バイト未満です</span><span class="sxs-lookup"><span data-stu-id="b1525-153"><paramref name="receiveBufferSize" /> is less than 16 bytes</span></span> 
<span data-ttu-id="b1525-154">または</span><span class="sxs-lookup"><span data-stu-id="b1525-154">-or-</span></span> 
 <span data-ttu-id="b1525-155"><paramref name="receiveBufferSize" /> が 64K バイトを超えています。</span><span class="sxs-lookup"><span data-stu-id="b1525-155"><paramref name="receiveBufferSize" /> is greater than 64K bytes.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="b1525-156">WebSocket ハンドシェイクを完了するために応答を送信中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b1525-156">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync (string subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment&lt;byte&gt; internalBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.WebSockets.HttpListenerWebSocketContext&gt; AcceptWebSocketAsync(string subProtocol, int32 receiveBufferSize, valuetype System.TimeSpan keepAliveInterval, valuetype System.ArraySegment`1&lt;unsigned int8&gt; internalBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerContext.AcceptWebSocketAsync(System.String,System.Int32,System.TimeSpan,System.ArraySegment{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptWebSocketAsync (subProtocol As String, receiveBufferSize As Integer, keepAliveInterval As TimeSpan, internalBuffer As ArraySegment(Of Byte)) As Task(Of HttpListenerWebSocketContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::WebSockets::HttpListenerWebSocketContext ^&gt; ^ AcceptWebSocketAsync(System::String ^ subProtocol, int receiveBufferSize, TimeSpan keepAliveInterval, ArraySegment&lt;System::Byte&gt; internalBuffer);" />
      <MemberSignature Language="F#" Value="member this.AcceptWebSocketAsync : string * int * TimeSpan * ArraySegment&lt;byte&gt; -&gt; System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;" Usage="httpListenerContext.AcceptWebSocketAsync (subProtocol, receiveBufferSize, keepAliveInterval, internalBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.WebSockets.HttpListenerWebSocketContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subProtocol" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="receiveBufferSize" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="keepAliveInterval" Type="System.TimeSpan" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="internalBuffer" Type="System.ArraySegment&lt;System.Byte&gt;" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="subProtocol"><span data-ttu-id="b1525-157">サポートされている WebSocket サブプロトコル。</span><span class="sxs-lookup"><span data-stu-id="b1525-157">The supported WebSocket sub-protocol.</span></span></param>
        <param name="receiveBufferSize"><span data-ttu-id="b1525-158">受信バッファーのサイズ (バイト単位)。</span><span class="sxs-lookup"><span data-stu-id="b1525-158">The receive buffer size in bytes.</span></span></param>
        <param name="keepAliveInterval"><span data-ttu-id="b1525-159">WebSocket プロトコルのキープ アライブ間隔 (ミリ秒単位)。</span><span class="sxs-lookup"><span data-stu-id="b1525-159">The WebSocket protocol keep-alive interval in milliseconds.</span></span></param>
        <param name="internalBuffer"><span data-ttu-id="b1525-160">この操作で使用する内部バッファー。</span><span class="sxs-lookup"><span data-stu-id="b1525-160">An internal buffer to use for this operation.</span></span></param>
        <summary><span data-ttu-id="b1525-161">サポートされている WebSocket サブプロトコル受信バッファー サイズ、WebSocket のキープアライブ間隔、内部バッファーを指定する WebSocket 接続を、非同期操作として受け入れます。</span><span class="sxs-lookup"><span data-stu-id="b1525-161">Accept a WebSocket connection specifying the supported WebSocket sub-protocol, receive buffer size, WebSocket keep-alive interval, and the internal buffer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="b1525-162">非同期操作を表すタスク オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1525-162">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="b1525-163">タスク オブジェクトの <see cref="P:System.Threading.Tasks.Task`1.Result" /> プロパティは、<see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="b1525-163">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1525-164">この操作はブロックされません。</span><span class="sxs-lookup"><span data-stu-id="b1525-164">This operation will not block.</span></span> <span data-ttu-id="b1525-165">返された <xref:System.Threading.Tasks.Task%601> オブジェクトは、WebSocket 接続が受け入れられた後に完了します。</span><span class="sxs-lookup"><span data-stu-id="b1525-165">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the WebSocket connection has been accepted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b1525-166"><paramref name="subProtocol" /> が空の文字列です。</span><span class="sxs-lookup"><span data-stu-id="b1525-166"><paramref name="subProtocol" /> is an empty string</span></span> 
<span data-ttu-id="b1525-167">または</span><span class="sxs-lookup"><span data-stu-id="b1525-167">-or-</span></span> 
 <span data-ttu-id="b1525-168"><paramref name="subProtocol" /> に無効な文字が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b1525-168"><paramref name="subProtocol" /> contains illegal characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1525-169"><paramref name="keepAliveInterval" /> が小さすぎます。</span><span class="sxs-lookup"><span data-stu-id="b1525-169"><paramref name="keepAliveInterval" /> is too small.</span></span>  
  
<span data-ttu-id="b1525-170">または</span><span class="sxs-lookup"><span data-stu-id="b1525-170">-or-</span></span> 
 <span data-ttu-id="b1525-171"><paramref name="receiveBufferSize" /> が 16 バイト未満です</span><span class="sxs-lookup"><span data-stu-id="b1525-171"><paramref name="receiveBufferSize" /> is less than 16 bytes</span></span> 
<span data-ttu-id="b1525-172">または</span><span class="sxs-lookup"><span data-stu-id="b1525-172">-or-</span></span> 
 <span data-ttu-id="b1525-173"><paramref name="receiveBufferSize" /> が 64K バイトを超えています。</span><span class="sxs-lookup"><span data-stu-id="b1525-173"><paramref name="receiveBufferSize" /> is greater than 64K bytes.</span></span></exception>
        <exception cref="T:System.Net.WebSockets.WebSocketException"><span data-ttu-id="b1525-174">WebSocket ハンドシェイクを完了するために応答を送信中にエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b1525-174">An error occurred when sending the response to complete the WebSocket handshake.</span></span></exception>
        <altmember cref="T:System.Net.WebSockets.HttpListenerWebSocketContext" />
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerRequest Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerRequest Request" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.Request" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Request As HttpListenerRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerRequest ^ Request { System::Net::HttpListenerRequest ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.Net.HttpListenerRequest" Usage="System.Net.HttpListenerContext.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerRequest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1525-175">クライアントのリソース要求を表す <see cref="T:System.Net.HttpListenerRequest" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="b1525-175">Gets the <see cref="T:System.Net.HttpListenerRequest" /> that represents a client's request for a resource.</span></span></summary>
        <value><span data-ttu-id="b1525-176">クライアント要求を表す <see cref="T:System.Net.HttpListenerRequest" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1525-176">An <see cref="T:System.Net.HttpListenerRequest" /> object that represents the client request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1525-177">この <xref:System.Net.HttpListenerContext>を閉じると、クライアントに応答を送信し、応答を含む <xref:System.Net.HttpListenerResponse> を閉じ、このプロパティによって返された <xref:System.Net.HttpListenerRequest> オブジェクトを閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="b1525-177">If you close this <xref:System.Net.HttpListenerContext>, it will send the response to the client, close the <xref:System.Net.HttpListenerResponse> that contains the response, and close the <xref:System.Net.HttpListenerRequest> object returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1525-178">次のコード例は、このメソッドの呼び出しを示しています。</span><span class="sxs-lookup"><span data-stu-id="b1525-178">The following code example demonstrates calling this method.</span></span> <span data-ttu-id="b1525-179">`listener` 変数は、<xref:System.Net.HttpListener> オブジェクトを保持します。</span><span class="sxs-lookup"><span data-stu-id="b1525-179">The `listener` variable holds an <xref:System.Net.HttpListener> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]  
 [!code-vb[Net_Listener_Basic#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerResponse Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerResponse Response" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.Response" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Response As HttpListenerResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerResponse ^ Response { System::Net::HttpListenerResponse ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Response : System.Net.HttpListenerResponse" Usage="System.Net.HttpListenerContext.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1525-180">クライアントの要求に応答してクライアントに送信される <see cref="T:System.Net.HttpListenerResponse" /> オブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="b1525-180">Gets the <see cref="T:System.Net.HttpListenerResponse" /> object that will be sent to the client in response to the client's request.</span></span></summary>
        <value><span data-ttu-id="b1525-181">クライアントに応答を送り返すために使用する <see cref="T:System.Net.HttpListenerResponse" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b1525-181">An <see cref="T:System.Net.HttpListenerResponse" /> object used to send a response back to the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1525-182">アプリケーションでは、このプロパティによって返される <xref:System.Net.HttpListenerResponse> オブジェクトのプロパティを設定することによって、応答を構成します。</span><span class="sxs-lookup"><span data-stu-id="b1525-182">Your application configures the response by setting properties in the <xref:System.Net.HttpListenerResponse> object returned by this property.</span></span> <span data-ttu-id="b1525-183">応答を構成した後、応答を閉じるか、この <xref:System.Net.HttpListenerContext> オブジェクトを閉じて、応答をクライアントに送信します。</span><span class="sxs-lookup"><span data-stu-id="b1525-183">After configuring the response, you send it to the client by closing the response, or by closing this <xref:System.Net.HttpListenerContext> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1525-184">次のコード例は、クライアントの要求に対する応答を取得し、応答本文を追加する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="b1525-184">The following code example demonstrates getting the response to a client's request and adding the response body.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#3)]  
 [!code-vb[Net_Listener_Basic#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="b1525-185">メモ: このメンバーは、アプリケーションでネットワークトレースを有効にしたときにトレース情報を出力します。</span><span class="sxs-lookup"><span data-stu-id="b1525-185">Note: This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="b1525-186">詳細については、「 [.NET Framework のネットワークトレース](~/docs/framework/network-programming/network-tracing.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b1525-186">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public System.Security.Principal.IPrincipal User { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerContext.User" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal" Usage="System.Net.HttpListenerContext.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b1525-187">要求が <see cref="T:System.Net.HttpListenerContext" /> オブジェクトによって表されるクライアントの ID、認証情報、セキュリティ ロールを取得するために使用するオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="b1525-187">Gets an object used to obtain identity, authentication information, and security roles for the client whose request is represented by this <see cref="T:System.Net.HttpListenerContext" /> object.</span></span></summary>
        <value><span data-ttu-id="b1525-188">クライアントを記述する <see cref="T:System.Security.Principal.IPrincipal" /> オブジェクト。この <see langword="null" /> を提供した <see cref="T:System.Net.HttpListener" /> が認証を必要としない場合は <see cref="T:System.Net.HttpListenerContext" />。</span><span class="sxs-lookup"><span data-stu-id="b1525-188">An <see cref="T:System.Security.Principal.IPrincipal" /> object that describes the client, or <see langword="null" /> if the <see cref="T:System.Net.HttpListener" /> that supplied this <see cref="T:System.Net.HttpListenerContext" /> does not require authentication.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1525-189"><xref:System.Net.HttpListener> は、<xref:System.Net.HttpListener.AuthenticationSchemes%2A> プロパティを使用するか、<xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> プロパティを使用して <xref:System.Net.AuthenticationSchemeSelector> デリゲートを指定することによって、認証が必要であることを示します。</span><span class="sxs-lookup"><span data-stu-id="b1525-189">An <xref:System.Net.HttpListener> indicates that it requires authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property or by specifying an <xref:System.Net.AuthenticationSchemeSelector> delegate using the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="b1525-190">クライアントのログイン名と認証情報を確認するには、このプロパティによって返されるオブジェクトの <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> プロパティを確認します。</span><span class="sxs-lookup"><span data-stu-id="b1525-190">To determine the client's login name and authentication information, check the <xref:System.Security.Principal.IPrincipal.Identity%2A?displayProperty=nameWithType> property in the object returned by this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1525-191">次のコード例では、クライアントに関する id と認証情報にアクセスし、応答でクライアントに返す方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b1525-191">The following code example demonstrates accessing identity and authentication information about the client, and returning it to the client in the response.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#8)]  
 [!code-vb[Net_Listener_Basic#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#8)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b1525-192">関連付けられた列挙型: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b1525-192">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /><see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
